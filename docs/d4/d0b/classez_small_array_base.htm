<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: ezSmallArrayBase&lt; T, Size &gt; Class Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">ezEngine<span id="projectnumber">&#160;Release 25.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('d4/d0b/classez_small_array_base.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-types">Protected Types</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="../../dc/dfe/classez_small_array_base-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">ezSmallArrayBase&lt; T, Size &gt; Class Template Reference</div></div>
</div><!--header-->
<div class="contents">

<p>Implementation of a dynamically growing array with in-place storage and small memory overhead.  
 <a href="../../d4/d0b/classez_small_array_base.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d6/d8d/_small_array_8h_source.htm">SmallArray.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for ezSmallArrayBase&lt; T, Size &gt;:</div>
<div class="dyncontent">
<div class="center"><img src="../../d8/db8/classez_small_array_base__inherit__graph.png" border="0" usemap="#aez_small_array_base_3_01_t_00_01_size_01_4_inherit__map" alt="Inheritance graph"/></div>
<map name="aez_small_array_base_3_01_t_00_01_size_01_4_inherit__map" id="aez_small_array_base_3_01_t_00_01_size_01_4_inherit__map">
<area shape="rect" title="Implementation of a dynamically growing array with in&#45;place storage and small memory overhead." alt="" coords="5,1179,173,1219"/>
<area shape="rect" href="../../d0/d0c/classez_small_array.htm" title=" " alt="" coords="257,5,472,45"/>
<area shape="poly" title=" " alt="" coords="90,1165,103,928,129,575,147,397,168,240,192,121,205,81,219,56,236,41,256,31,258,36,239,46,223,59,210,83,197,123,173,241,152,398,134,576,108,928,95,1165"/>
<area shape="rect" href="../../d0/d0c/classez_small_array.htm" title=" " alt="" coords="257,70,472,125"/>
<area shape="poly" title=" " alt="" coords="90,1165,105,943,132,616,150,452,171,307,194,197,206,159,219,136,236,120,256,110,259,114,239,125,223,139,211,161,199,198,176,308,156,453,138,617,110,943,95,1165"/>
<area shape="rect" href="../../d0/d0c/classez_small_array.htm" title=" " alt="" coords="259,149,470,189"/>
<area shape="poly" title=" " alt="" coords="87,1165,89,968,93,829,103,678,119,528,142,390,157,330,175,277,196,233,219,200,237,185,258,175,260,180,240,189,223,203,200,236,180,279,162,331,147,391,124,529,108,678,99,829,94,968,93,1165"/>
<area shape="rect" href="../../d0/d0c/classez_small_array.htm" title=" " alt="" coords="259,213,470,253"/>
<area shape="poly" title=" " alt="" coords="88,1165,91,980,96,849,107,709,123,569,146,441,161,385,178,335,197,295,219,264,237,249,258,239,260,244,240,253,223,267,202,297,183,338,166,386,151,442,128,570,112,709,102,850,96,980,93,1165"/>
<area shape="rect" href="../../d0/d0c/classez_small_array.htm" title=" " alt="" coords="259,277,470,317"/>
<area shape="poly" title=" " alt="" coords="88,1165,93,991,100,870,111,739,127,610,150,491,164,439,180,394,199,356,219,328,237,313,258,303,260,308,240,317,223,331,203,359,185,396,169,441,155,493,132,611,116,740,105,870,98,991,94,1165"/>
<area shape="rect" href="../../d0/d0c/classez_small_array.htm" title=" " alt="" coords="261,342,468,397"/>
<area shape="poly" title=" " alt="" coords="89,1165,97,1005,117,779,134,662,156,556,184,468,201,434,219,408,238,392,260,380,262,385,241,396,223,411,205,437,189,470,161,557,139,663,122,779,102,1006,94,1165"/>
<area shape="rect" href="../../d0/d0c/classez_small_array.htm" title=" " alt="" coords="259,421,470,461"/>
<area shape="poly" title=" " alt="" coords="89,1165,98,1017,120,809,137,702,158,605,186,526,202,495,219,471,237,457,258,447,260,452,240,462,223,475,206,498,191,528,163,607,142,703,125,810,103,1017,95,1165"/>
<area shape="rect" href="../../d0/d0c/classez_small_array.htm" title=" " alt="" coords="263,485,466,525"/>
<area shape="poly" title=" " alt="" coords="90,1165,101,1028,124,839,141,743,162,656,188,584,203,557,219,535,239,520,262,510,264,515,242,525,223,539,208,560,193,587,167,657,146,744,129,840,106,1028,95,1165"/>
<area shape="rect" href="../../d0/d0c/classez_small_array.htm" title=" " alt="" coords="259,549,470,589"/>
<area shape="poly" title=" " alt="" coords="91,1164,104,1040,128,870,145,785,166,707,191,643,204,618,219,599,238,585,258,576,260,581,240,590,223,603,209,621,195,645,171,708,151,786,133,871,109,1040,96,1165"/>
<area shape="rect" href="../../d0/d0c/classez_small_array.htm" title=" " alt="" coords="249,614,481,639"/>
<area shape="poly" title=" " alt="" coords="91,1164,105,1048,131,894,148,816,169,746,192,689,219,650,247,632,250,637,223,654,197,691,174,748,153,818,136,895,111,1049,97,1165"/>
<area shape="rect" href="../../d0/d0c/classez_small_array.htm" title=" " alt="" coords="243,664,486,704"/>
<area shape="poly" title=" " alt="" coords="93,1164,109,1061,136,926,154,859,173,798,195,748,219,714,242,698,245,703,223,718,200,751,178,800,159,860,141,927,114,1062,98,1165"/>
<area shape="rect" href="../../d0/d0c/classez_small_array.htm" title=" " alt="" coords="252,729,477,783"/>
<area shape="poly" title=" " alt="" coords="89,1165,95,1089,115,989,131,936,154,884,183,835,220,793,250,772,253,777,223,797,187,838,159,886,136,937,120,990,101,1089,94,1165"/>
<area shape="rect" href="../../d0/d0c/classez_small_array.htm" title=" " alt="" coords="254,807,475,862"/>
<area shape="poly" title=" " alt="" coords="92,1164,103,1102,126,1023,142,982,163,941,189,904,220,871,252,851,255,855,223,875,193,907,168,944,147,984,131,1025,108,1103,97,1165"/>
<area shape="rect" href="../../d0/d0c/classez_small_array.htm" title=" " alt="" coords="246,886,483,911"/>
<area shape="poly" title=" " alt="" coords="94,1164,107,1110,131,1043,147,1009,167,976,191,946,220,921,245,907,247,911,223,925,195,950,172,979,152,1012,136,1045,112,1112,99,1166"/>
<area shape="rect" href="../../d0/d0c/classez_small_array.htm" title=" " alt="" coords="257,935,473,990"/>
<area shape="poly" title=" " alt="" coords="101,1165,119,1126,145,1082,179,1037,220,999,255,980,258,985,223,1004,183,1041,150,1084,124,1129,106,1167"/>
<area shape="rect" href="../../d0/d0c/classez_small_array.htm" title=" " alt="" coords="257,1014,472,1069"/>
<area shape="poly" title=" " alt="" coords="115,1166,161,1121,189,1097,220,1078,256,1062,258,1067,223,1082,192,1102,164,1125,118,1170"/>
<area shape="rect" href="../../d0/d0c/classez_small_array.htm" title=" " alt="" coords="262,1093,467,1147"/>
<area shape="poly" title=" " alt="" coords="167,1172,221,1156,261,1145,263,1150,222,1161,169,1177"/>
<area shape="rect" href="../../d0/d0c/classez_small_array.htm" title=" " alt="" coords="251,1171,479,1226"/>
<area shape="poly" title=" " alt="" coords="188,1196,251,1196,251,1201,188,1201"/>
<area shape="rect" href="../../d0/d0c/classez_small_array.htm" title=" " alt="" coords="271,1251,458,1291"/>
<area shape="poly" title=" " alt="" coords="169,1220,222,1235,275,1248,274,1253,221,1240,168,1225"/>
<area shape="rect" href="../../d0/d0c/classez_small_array.htm" title=" " alt="" coords="258,1315,471,1341"/>
<area shape="poly" title=" " alt="" coords="121,1226,166,1266,194,1285,222,1300,259,1313,257,1318,220,1305,191,1289,163,1270,117,1230"/>
<area shape="rect" href="../../d0/d0c/classez_small_array.htm" title=" " alt="" coords="251,1365,479,1405"/>
<area shape="poly" title=" " alt="" coords="111,1229,157,1292,188,1323,223,1350,252,1364,249,1368,220,1354,184,1327,153,1295,107,1232"/>
<area shape="rect" href="../../d0/d0c/classez_small_array.htm" title=" " alt="" coords="251,1429,479,1469"/>
<area shape="poly" title=" " alt="" coords="103,1231,120,1274,146,1324,180,1374,200,1396,223,1415,252,1431,249,1435,220,1420,196,1400,175,1377,141,1327,115,1276,99,1233"/>
<area shape="rect" href="../../d0/d0c/classez_small_array.htm" title=" " alt="" coords="221,1493,508,1533"/>
<area shape="poly" title=" " alt="" coords="99,1232,112,1286,136,1354,172,1422,195,1453,223,1479,241,1491,238,1495,220,1483,191,1456,167,1425,131,1356,107,1288,94,1233"/>
<area shape="rect" href="../../d0/d0c/classez_small_array.htm" title=" " alt="" coords="237,1557,492,1597"/>
<area shape="poly" title=" " alt="" coords="96,1232,105,1298,126,1383,143,1427,164,1470,191,1509,223,1543,240,1555,237,1559,220,1547,187,1513,160,1472,138,1429,121,1384,100,1299,90,1233"/>
<area shape="rect" href="../../d0/d0c/classez_small_array.htm" title=" " alt="" coords="257,1621,473,1661"/>
<area shape="poly" title=" " alt="" coords="93,1233,99,1310,118,1412,134,1465,157,1517,186,1566,223,1607,239,1619,258,1628,255,1633,236,1624,220,1611,182,1569,152,1520,129,1467,113,1413,94,1311,88,1233"/>
<area shape="rect" href="../../d0/d0c/classez_small_array.htm" title=" " alt="" coords="257,1685,473,1725"/>
<area shape="poly" title=" " alt="" coords="98,1232,115,1334,142,1466,159,1532,179,1591,200,1639,223,1671,239,1683,258,1692,255,1697,236,1688,219,1675,196,1642,174,1593,154,1533,137,1467,109,1335,93,1233"/>
<area shape="rect" href="../../d0/d0c/classez_small_array.htm" title=" " alt="" coords="257,1749,473,1789"/>
<area shape="poly" title=" " alt="" coords="97,1232,111,1346,137,1497,155,1573,175,1642,198,1698,223,1736,239,1748,258,1757,255,1762,236,1752,219,1739,193,1701,170,1644,150,1575,132,1498,106,1346,92,1233"/>
<area shape="rect" href="../../d0/d0c/classez_small_array.htm" title=" " alt="" coords="257,1813,473,1853"/>
<area shape="poly" title=" " alt="" coords="96,1233,109,1359,133,1529,150,1615,171,1693,195,1757,209,1781,223,1799,239,1812,258,1821,255,1826,236,1817,219,1803,204,1784,190,1759,166,1695,145,1616,128,1530,103,1359,91,1233"/>
<area shape="rect" href="../../d0/d0c/classez_small_array.htm" title=" " alt="" coords="258,1878,471,1903"/>
<area shape="poly" title=" " alt="" coords="95,1232,105,1370,128,1560,145,1657,166,1745,192,1816,207,1843,223,1863,240,1876,259,1884,257,1889,237,1880,219,1867,203,1846,187,1818,161,1746,139,1658,122,1561,100,1370,90,1232"/>
<area shape="rect" href="../../d0/d0c/classez_small_array.htm" title=" " alt="" coords="247,1928,483,1968"/>
<area shape="poly" title=" " alt="" coords="95,1232,104,1379,126,1584,143,1688,164,1783,191,1861,206,1890,223,1913,248,1931,245,1935,219,1917,202,1893,186,1863,159,1784,137,1689,120,1584,99,1379,89,1233"/>
<area shape="rect" href="../../d0/d0c/classez_small_array.htm" title=" " alt="" coords="247,1992,483,2032"/>
<area shape="poly" title=" " alt="" coords="94,1232,101,1391,121,1615,138,1730,160,1835,188,1921,205,1953,223,1978,248,1996,245,2000,219,1982,200,1956,183,1923,155,1836,133,1731,116,1616,96,1391,89,1232"/>
<area shape="rect" href="../../d0/d0c/classez_small_array.htm" title=" " alt="" coords="257,2056,473,2096"/>
<area shape="poly" title=" " alt="" coords="94,1232,99,1402,106,1520,117,1646,134,1771,156,1886,186,1979,204,2015,223,2042,239,2055,258,2064,255,2069,236,2060,219,2046,199,2018,181,1981,151,1887,128,1772,112,1646,101,1520,94,1402,88,1232"/>
<area shape="rect" href="../../d0/d0c/classez_small_array.htm" title=" " alt="" coords="285,2121,444,2175"/>
<area shape="poly" title=" " alt="" coords="93,1233,98,1413,104,1540,115,1676,131,1811,154,1935,168,1989,185,2037,203,2076,223,2106,252,2128,286,2140,284,2145,249,2132,219,2110,198,2079,180,2039,163,1991,149,1936,126,1812,110,1676,99,1540,92,1414,88,1233"/>
<area shape="rect" href="../../d0/d0c/classez_small_array.htm" title=" " alt="" coords="236,2199,493,2225"/>
<area shape="poly" title=" " alt="" coords="93,1232,93,1428,98,1566,107,1715,123,1864,146,2000,162,2059,179,2111,200,2153,223,2185,239,2197,235,2201,219,2189,195,2156,175,2113,157,2061,141,2001,117,1865,102,1716,92,1566,88,1428,87,1232"/>
<area shape="rect" href="../../d0/d0c/classez_small_array.htm" title=" " alt="" coords="279,2249,450,2289"/>
<area shape="poly" title=" " alt="" coords="95,1232,110,1450,138,1769,156,1929,176,2070,199,2177,211,2213,223,2234,249,2253,280,2264,278,2269,246,2258,219,2238,206,2215,194,2179,171,2071,150,1930,132,1769,105,1450,90,1233"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-types" name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:ac1b0243d19c4a30abcd99c21173d9631" id="r_ac1b0243d19c4a30abcd99c21173d9631"><td class="memItemLeft" align="right" valign="top"><a id="ac1b0243d19c4a30abcd99c21173d9631" name="ac1b0243d19c4a30abcd99c21173d9631"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>value_type</b> = T</td></tr>
<tr class="separator:ac1b0243d19c4a30abcd99c21173d9631"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb0e5f2245d9dc2dce9c082ba274255f" id="r_abb0e5f2245d9dc2dce9c082ba274255f"><td class="memItemLeft" align="right" valign="top"><a id="abb0e5f2245d9dc2dce9c082ba274255f" name="abb0e5f2245d9dc2dce9c082ba274255f"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>const_reference</b> = const T &amp;</td></tr>
<tr class="separator:abb0e5f2245d9dc2dce9c082ba274255f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a214d9e07421f9c6422e71a0b85179618" id="r_a214d9e07421f9c6422e71a0b85179618"><td class="memItemLeft" align="right" valign="top"><a id="a214d9e07421f9c6422e71a0b85179618" name="a214d9e07421f9c6422e71a0b85179618"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>const_iterator</b> = const T *</td></tr>
<tr class="separator:a214d9e07421f9c6422e71a0b85179618"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad2cae9067becfd6dd68f0ffa8f58380c" id="r_ad2cae9067becfd6dd68f0ffa8f58380c"><td class="memItemLeft" align="right" valign="top"><a id="ad2cae9067becfd6dd68f0ffa8f58380c" name="ad2cae9067becfd6dd68f0ffa8f58380c"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>const_reverse_iterator</b> = <a class="el" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">const_reverse_pointer_iterator</a>&lt; T &gt;</td></tr>
<tr class="separator:ad2cae9067becfd6dd68f0ffa8f58380c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e661231bc2d79e5d2fdd90283bfb31d" id="r_a7e661231bc2d79e5d2fdd90283bfb31d"><td class="memItemLeft" align="right" valign="top"><a id="a7e661231bc2d79e5d2fdd90283bfb31d" name="a7e661231bc2d79e5d2fdd90283bfb31d"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>iterator</b> = T *</td></tr>
<tr class="separator:a7e661231bc2d79e5d2fdd90283bfb31d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa5bad425e1071f47aaf0248652ab07b" id="r_afa5bad425e1071f47aaf0248652ab07b"><td class="memItemLeft" align="right" valign="top"><a id="afa5bad425e1071f47aaf0248652ab07b" name="afa5bad425e1071f47aaf0248652ab07b"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>reverse_iterator</b> = <a class="el" href="../../d3/df2/structreverse__pointer__iterator.htm">reverse_pointer_iterator</a>&lt; T &gt;</td></tr>
<tr class="separator:afa5bad425e1071f47aaf0248652ab07b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a17a4f49a8778284209e5b8613b1a1f89" id="r_a17a4f49a8778284209e5b8613b1a1f89"><td class="memItemLeft" align="right" valign="top"><a id="a17a4f49a8778284209e5b8613b1a1f89" name="a17a4f49a8778284209e5b8613b1a1f89"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>EZ_DECLARE_MEM_RELOCATABLE_TYPE_CONDITIONAL</b> (T)</td></tr>
<tr class="separator:a17a4f49a8778284209e5b8613b1a1f89"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9101de3e01aa8f3f3cda5e21755d1ea" id="r_ab9101de3e01aa8f3f3cda5e21755d1ea"><td class="memItemLeft" align="right" valign="top"><a id="ab9101de3e01aa8f3f3cda5e21755d1ea" name="ab9101de3e01aa8f3f3cda5e21755d1ea"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>ezSmallArrayBase</b> (const <a class="el" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase</a>&lt; T, Size &gt; &amp;other, <a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="separator:ab9101de3e01aa8f3f3cda5e21755d1ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe7ff9c2a85f156f6129956b6401ac61" id="r_afe7ff9c2a85f156f6129956b6401ac61"><td class="memItemLeft" align="right" valign="top"><a id="afe7ff9c2a85f156f6129956b6401ac61" name="afe7ff9c2a85f156f6129956b6401ac61"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>ezSmallArrayBase</b> (const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; const T &gt; &amp;other, <a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="separator:afe7ff9c2a85f156f6129956b6401ac61"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acbf3c2de1c218a43681c1d38074da1e1" id="r_acbf3c2de1c218a43681c1d38074da1e1"><td class="memItemLeft" align="right" valign="top"><a id="acbf3c2de1c218a43681c1d38074da1e1" name="acbf3c2de1c218a43681c1d38074da1e1"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>ezSmallArrayBase</b> (<a class="el" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase</a>&lt; T, Size &gt; &amp;&amp;other, <a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="separator:acbf3c2de1c218a43681c1d38074da1e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af0565f5df2b455b085b364ad147f1034" id="r_af0565f5df2b455b085b364ad147f1034"><td class="memItemLeft" align="right" valign="top"><a id="af0565f5df2b455b085b364ad147f1034" name="af0565f5df2b455b085b364ad147f1034"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase</a>&lt; T, Size &gt; &amp;rhs)=delete</td></tr>
<tr class="separator:af0565f5df2b455b085b364ad147f1034"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a81637bc0d5c787520d232e239aa93de8" id="r_a81637bc0d5c787520d232e239aa93de8"><td class="memItemLeft" align="right" valign="top"><a id="a81637bc0d5c787520d232e239aa93de8" name="a81637bc0d5c787520d232e239aa93de8"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (<a class="el" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase</a>&lt; T, Size &gt; &amp;&amp;rhs)=delete</td></tr>
<tr class="separator:a81637bc0d5c787520d232e239aa93de8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a44628a75aa717a0ef2161fb4835b57ba" id="r_a44628a75aa717a0ef2161fb4835b57ba"><td class="memItemLeft" align="right" valign="top"><a id="a44628a75aa717a0ef2161fb4835b57ba" name="a44628a75aa717a0ef2161fb4835b57ba"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>CopyFrom</b> (const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; const T &gt; &amp;other, <a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:a44628a75aa717a0ef2161fb4835b57ba"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the data from some other array into this one. <br /></td></tr>
<tr class="separator:a44628a75aa717a0ef2161fb4835b57ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0df7cdbcae0aba5ee737c5ef2d6bcb9" id="r_aa0df7cdbcae0aba5ee737c5ef2d6bcb9"><td class="memItemLeft" align="right" valign="top"><a id="aa0df7cdbcae0aba5ee737c5ef2d6bcb9" name="aa0df7cdbcae0aba5ee737c5ef2d6bcb9"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>MoveFrom</b> (<a class="el" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase</a>&lt; T, Size &gt; &amp;&amp;other, <a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:aa0df7cdbcae0aba5ee737c5ef2d6bcb9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Moves the data from some other array into this one. <br /></td></tr>
<tr class="separator:aa0df7cdbcae0aba5ee737c5ef2d6bcb9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12865f08993693bf08cce4b0416cdbbd" id="r_a12865f08993693bf08cce4b0416cdbbd"><td class="memItemLeft" align="right" valign="top"><a id="a12865f08993693bf08cce4b0416cdbbd" name="a12865f08993693bf08cce4b0416cdbbd"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>operator ezArrayPtr&lt; const T &gt;</b> () const</td></tr>
<tr class="memdesc:a12865f08993693bf08cce4b0416cdbbd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Conversion to const <a class="el" href="../../dc/dae/classez_array_ptr.htm" title="This class encapsulates an array and it&#39;s size. It is recommended to use this class instead of plain ...">ezArrayPtr</a>. <br /></td></tr>
<tr class="separator:a12865f08993693bf08cce4b0416cdbbd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7f6ca08967eb1145a8d5f19e2223270" id="r_ab7f6ca08967eb1145a8d5f19e2223270"><td class="memItemLeft" align="right" valign="top"><a id="ab7f6ca08967eb1145a8d5f19e2223270" name="ab7f6ca08967eb1145a8d5f19e2223270"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>operator ezArrayPtr&lt; T &gt;</b> ()</td></tr>
<tr class="memdesc:ab7f6ca08967eb1145a8d5f19e2223270"><td class="mdescLeft">&#160;</td><td class="mdescRight">Conversion to <a class="el" href="../../dc/dae/classez_array_ptr.htm" title="This class encapsulates an array and it&#39;s size. It is recommended to use this class instead of plain ...">ezArrayPtr</a>. <br /></td></tr>
<tr class="separator:ab7f6ca08967eb1145a8d5f19e2223270"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f88c6f77d9dfac59323e44c08eac677" id="r_a0f88c6f77d9dfac59323e44c08eac677"><td class="memItemLeft" align="right" valign="top"><a id="a0f88c6f77d9dfac59323e44c08eac677" name="a0f88c6f77d9dfac59323e44c08eac677"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator==</b> (const <a class="el" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase</a>&lt; T, Size &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:a0f88c6f77d9dfac59323e44c08eac677"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares this array to another contiguous array type. <br /></td></tr>
<tr class="separator:a0f88c6f77d9dfac59323e44c08eac677"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6adfac4c271e360700b16130909ec4fb" id="r_a6adfac4c271e360700b16130909ec4fb"><td class="memItemLeft" align="right" valign="top"><a id="a6adfac4c271e360700b16130909ec4fb" name="a6adfac4c271e360700b16130909ec4fb"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>EZ_ADD_DEFAULT_OPERATOR_NOTEQUAL</b> (const <a class="el" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase</a>&lt; T, Size &gt; &amp;)</td></tr>
<tr class="separator:a6adfac4c271e360700b16130909ec4fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80dfcf73004b688a99a1952e12c3b467" id="r_a80dfcf73004b688a99a1952e12c3b467"><td class="memItemLeft" align="right" valign="top"><a id="a80dfcf73004b688a99a1952e12c3b467" name="a80dfcf73004b688a99a1952e12c3b467"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&lt;</b> (const <a class="el" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase</a>&lt; T, Size &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:a80dfcf73004b688a99a1952e12c3b467"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares this array to another contiguous array type. <br /></td></tr>
<tr class="separator:a80dfcf73004b688a99a1952e12c3b467"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f2412daa0aac85a8e37bb92f383643f" id="r_a9f2412daa0aac85a8e37bb92f383643f"><td class="memItemLeft" align="right" valign="top"><a id="a9f2412daa0aac85a8e37bb92f383643f" name="a9f2412daa0aac85a8e37bb92f383643f"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&lt;</b> (const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; const T &gt; &amp;rhs) const</td></tr>
<tr class="separator:a9f2412daa0aac85a8e37bb92f383643f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a73ca2c3165047828ff1343eddf338033" id="r_a73ca2c3165047828ff1343eddf338033"><td class="memItemLeft" align="right" valign="top"><a id="a73ca2c3165047828ff1343eddf338033" name="a73ca2c3165047828ff1343eddf338033"></a>
const T &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator[]</b> (ezUInt32 uiIndex) const</td></tr>
<tr class="memdesc:a73ca2c3165047828ff1343eddf338033"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the element at the given index. Does bounds checks in debug builds. <br /></td></tr>
<tr class="separator:a73ca2c3165047828ff1343eddf338033"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af2d36c4e256ca155d9c5bc9c32d43405" id="r_af2d36c4e256ca155d9c5bc9c32d43405"><td class="memItemLeft" align="right" valign="top"><a id="af2d36c4e256ca155d9c5bc9c32d43405" name="af2d36c4e256ca155d9c5bc9c32d43405"></a>
T &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator[]</b> (ezUInt32 uiIndex)</td></tr>
<tr class="memdesc:af2d36c4e256ca155d9c5bc9c32d43405"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the element at the given index. Does bounds checks in debug builds. <br /></td></tr>
<tr class="separator:af2d36c4e256ca155d9c5bc9c32d43405"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d97ba0e00466c81f50461e534af3559" id="r_a2d97ba0e00466c81f50461e534af3559"><td class="memItemLeft" align="right" valign="top"><a id="a2d97ba0e00466c81f50461e534af3559" name="a2d97ba0e00466c81f50461e534af3559"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetCount</b> (ezUInt16 uiCount, <a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:a2d97ba0e00466c81f50461e534af3559"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resizes the array to have exactly uiCount elements. Default constructs extra elements if the array is grown. <br /></td></tr>
<tr class="separator:a2d97ba0e00466c81f50461e534af3559"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe55ae80dbedaffed1e088407befe28f" id="r_abe55ae80dbedaffed1e088407befe28f"><td class="memItemLeft" align="right" valign="top"><a id="abe55ae80dbedaffed1e088407befe28f" name="abe55ae80dbedaffed1e088407befe28f"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetCount</b> (ezUInt16 uiCount, const T &amp;fillValue, <a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:abe55ae80dbedaffed1e088407befe28f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resizes the array to have exactly uiCount elements. Constructs all new elements by copying the FillValue. <br /></td></tr>
<tr class="separator:abe55ae80dbedaffed1e088407befe28f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4676e9e2da82f6f9b2782e453a1e9cb9" id="r_a4676e9e2da82f6f9b2782e453a1e9cb9"><td class="memTemplParams" colspan="2"><a id="a4676e9e2da82f6f9b2782e453a1e9cb9" name="a4676e9e2da82f6f9b2782e453a1e9cb9"></a>
template&lt;typename  = void&gt; </td></tr>
<tr class="memitem:a4676e9e2da82f6f9b2782e453a1e9cb9"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><b>SetCountUninitialized</b> (ezUInt16 uiCount, <a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:a4676e9e2da82f6f9b2782e453a1e9cb9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resizes the array to have exactly uiCount elements. Extra elements might be uninitialized. <br /></td></tr>
<tr class="separator:a4676e9e2da82f6f9b2782e453a1e9cb9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac93d3e6417071debc5ad0563f9563978" id="r_ac93d3e6417071debc5ad0563f9563978"><td class="memItemLeft" align="right" valign="top"><a id="ac93d3e6417071debc5ad0563f9563978" name="ac93d3e6417071debc5ad0563f9563978"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>EnsureCount</b> (ezUInt16 uiCount, <a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:ac93d3e6417071debc5ad0563f9563978"><td class="mdescLeft">&#160;</td><td class="mdescRight">Ensures the container has at least <em>uiCount</em> elements. Ie. calls <a class="el" href="../../d4/d0b/classez_small_array_base.htm#a2d97ba0e00466c81f50461e534af3559" title="Resizes the array to have exactly uiCount elements. Default constructs extra elements if the array is...">SetCount()</a> if the container has fewer elements, does nothing otherwise. <br /></td></tr>
<tr class="separator:ac93d3e6417071debc5ad0563f9563978"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac13be38fb1e58b0b94c405db9318792a" id="r_ac13be38fb1e58b0b94c405db9318792a"><td class="memItemLeft" align="right" valign="top"><a id="ac13be38fb1e58b0b94c405db9318792a" name="ac13be38fb1e58b0b94c405db9318792a"></a>
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetCount</b> () const</td></tr>
<tr class="memdesc:ac13be38fb1e58b0b94c405db9318792a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of active elements in the array. <br /></td></tr>
<tr class="separator:ac13be38fb1e58b0b94c405db9318792a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b66ce1a35b2f1659ba61c534969dae4" id="r_a0b66ce1a35b2f1659ba61c534969dae4"><td class="memItemLeft" align="right" valign="top"><a id="a0b66ce1a35b2f1659ba61c534969dae4" name="a0b66ce1a35b2f1659ba61c534969dae4"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsEmpty</b> () const</td></tr>
<tr class="memdesc:a0b66ce1a35b2f1659ba61c534969dae4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if the array does not contain any elements. <br /></td></tr>
<tr class="separator:a0b66ce1a35b2f1659ba61c534969dae4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5787f727bd1a20181e3e2150c7d37fc2" id="r_a5787f727bd1a20181e3e2150c7d37fc2"><td class="memItemLeft" align="right" valign="top"><a id="a5787f727bd1a20181e3e2150c7d37fc2" name="a5787f727bd1a20181e3e2150c7d37fc2"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Clear</b> ()</td></tr>
<tr class="memdesc:a5787f727bd1a20181e3e2150c7d37fc2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears the array. <br /></td></tr>
<tr class="separator:a5787f727bd1a20181e3e2150c7d37fc2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18878b1e8e942abb9861435942918a83" id="r_a18878b1e8e942abb9861435942918a83"><td class="memItemLeft" align="right" valign="top"><a id="a18878b1e8e942abb9861435942918a83" name="a18878b1e8e942abb9861435942918a83"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>Contains</b> (const T &amp;value) const</td></tr>
<tr class="memdesc:a18878b1e8e942abb9861435942918a83"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether the given value can be found in the array. O(n) complexity. <br /></td></tr>
<tr class="separator:a18878b1e8e942abb9861435942918a83"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53a6fa7d09ed5098bf8e4dbda3b5f429" id="r_a53a6fa7d09ed5098bf8e4dbda3b5f429"><td class="memItemLeft" align="right" valign="top"><a id="a53a6fa7d09ed5098bf8e4dbda3b5f429" name="a53a6fa7d09ed5098bf8e4dbda3b5f429"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Insert</b> (const T &amp;value, ezUInt32 uiIndex, <a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:a53a6fa7d09ed5098bf8e4dbda3b5f429"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inserts value at index by shifting all following elements. <br /></td></tr>
<tr class="separator:a53a6fa7d09ed5098bf8e4dbda3b5f429"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d1f661eb141ee8e1e583b133c9f70a4" id="r_a3d1f661eb141ee8e1e583b133c9f70a4"><td class="memItemLeft" align="right" valign="top"><a id="a3d1f661eb141ee8e1e583b133c9f70a4" name="a3d1f661eb141ee8e1e583b133c9f70a4"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Insert</b> (T &amp;&amp;value, ezUInt32 uiIndex, <a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:a3d1f661eb141ee8e1e583b133c9f70a4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inserts value at index by shifting all following elements. <br /></td></tr>
<tr class="separator:a3d1f661eb141ee8e1e583b133c9f70a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a772bcf3f2189007961b0ba3b4ecf4213" id="r_a772bcf3f2189007961b0ba3b4ecf4213"><td class="memItemLeft" align="right" valign="top"><a id="a772bcf3f2189007961b0ba3b4ecf4213" name="a772bcf3f2189007961b0ba3b4ecf4213"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>RemoveAndCopy</b> (const T &amp;value)</td></tr>
<tr class="memdesc:a772bcf3f2189007961b0ba3b4ecf4213"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes the first occurrence of value and fills the gap by shifting all following elements. <br /></td></tr>
<tr class="separator:a772bcf3f2189007961b0ba3b4ecf4213"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a820dddee4c830c06fab015b887e474bd" id="r_a820dddee4c830c06fab015b887e474bd"><td class="memItemLeft" align="right" valign="top"><a id="a820dddee4c830c06fab015b887e474bd" name="a820dddee4c830c06fab015b887e474bd"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>RemoveAndSwap</b> (const T &amp;value)</td></tr>
<tr class="memdesc:a820dddee4c830c06fab015b887e474bd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes the first occurrence of value and fills the gap by swapping in the last element. <br /></td></tr>
<tr class="separator:a820dddee4c830c06fab015b887e474bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45e132fd3e2e121cd9e1333e494c1c5c" id="r_a45e132fd3e2e121cd9e1333e494c1c5c"><td class="memItemLeft" align="right" valign="top"><a id="a45e132fd3e2e121cd9e1333e494c1c5c" name="a45e132fd3e2e121cd9e1333e494c1c5c"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>RemoveAtAndCopy</b> (ezUInt32 uiIndex, ezUInt16 uiNumElements=1)</td></tr>
<tr class="memdesc:a45e132fd3e2e121cd9e1333e494c1c5c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes the element at index and fills the gap by shifting all following elements. <br /></td></tr>
<tr class="separator:a45e132fd3e2e121cd9e1333e494c1c5c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a38c2e2dc9718e666167e9a8bf521df0d" id="r_a38c2e2dc9718e666167e9a8bf521df0d"><td class="memItemLeft" align="right" valign="top"><a id="a38c2e2dc9718e666167e9a8bf521df0d" name="a38c2e2dc9718e666167e9a8bf521df0d"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>RemoveAtAndSwap</b> (ezUInt32 uiIndex, ezUInt16 uiNumElements=1)</td></tr>
<tr class="memdesc:a38c2e2dc9718e666167e9a8bf521df0d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes the element at index and fills the gap by swapping in the last element. <br /></td></tr>
<tr class="separator:a38c2e2dc9718e666167e9a8bf521df0d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e93f15bb764fa59a641b642df5cc551" id="r_a6e93f15bb764fa59a641b642df5cc551"><td class="memItemLeft" align="right" valign="top"><a id="a6e93f15bb764fa59a641b642df5cc551" name="a6e93f15bb764fa59a641b642df5cc551"></a>
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>IndexOf</b> (const T &amp;value, ezUInt32 uiStartIndex=0) const</td></tr>
<tr class="memdesc:a6e93f15bb764fa59a641b642df5cc551"><td class="mdescLeft">&#160;</td><td class="mdescRight">Searches for the first occurrence of the given value and returns its index or ezInvalidIndex if not found. <br /></td></tr>
<tr class="separator:a6e93f15bb764fa59a641b642df5cc551"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a985ee77c3751c5a007143f128af1bbd5" id="r_a985ee77c3751c5a007143f128af1bbd5"><td class="memItemLeft" align="right" valign="top"><a id="a985ee77c3751c5a007143f128af1bbd5" name="a985ee77c3751c5a007143f128af1bbd5"></a>
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>LastIndexOf</b> (const T &amp;value, ezUInt32 uiStartIndex=ezSmallInvalidIndex) const</td></tr>
<tr class="memdesc:a985ee77c3751c5a007143f128af1bbd5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Searches for the last occurrence of the given value and returns its index or ezInvalidIndex if not found. <br /></td></tr>
<tr class="separator:a985ee77c3751c5a007143f128af1bbd5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6c182c841c56b0ecdc83ea26a1c471c" id="r_ab6c182c841c56b0ecdc83ea26a1c471c"><td class="memItemLeft" align="right" valign="top"><a id="ab6c182c841c56b0ecdc83ea26a1c471c" name="ab6c182c841c56b0ecdc83ea26a1c471c"></a>
T &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>ExpandAndGetRef</b> (<a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:ab6c182c841c56b0ecdc83ea26a1c471c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Grows the array by one element and returns a reference to the newly created element. <br /></td></tr>
<tr class="separator:ab6c182c841c56b0ecdc83ea26a1c471c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74451b4388e083a5074881bc8836c6a4" id="r_a74451b4388e083a5074881bc8836c6a4"><td class="memItemLeft" align="right" valign="top"><a id="a74451b4388e083a5074881bc8836c6a4" name="a74451b4388e083a5074881bc8836c6a4"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>PushBack</b> (const T &amp;value, <a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:a74451b4388e083a5074881bc8836c6a4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pushes value at the end of the array. <br /></td></tr>
<tr class="separator:a74451b4388e083a5074881bc8836c6a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a64f0dcf6dc706e5ab5ecf779c335aa5d" id="r_a64f0dcf6dc706e5ab5ecf779c335aa5d"><td class="memItemLeft" align="right" valign="top"><a id="a64f0dcf6dc706e5ab5ecf779c335aa5d" name="a64f0dcf6dc706e5ab5ecf779c335aa5d"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>PushBack</b> (T &amp;&amp;value, <a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:a64f0dcf6dc706e5ab5ecf779c335aa5d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pushes value at the end of the array. <br /></td></tr>
<tr class="separator:a64f0dcf6dc706e5ab5ecf779c335aa5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a804a1289180252024587478ef0de74f2" id="r_a804a1289180252024587478ef0de74f2"><td class="memItemLeft" align="right" valign="top"><a id="a804a1289180252024587478ef0de74f2" name="a804a1289180252024587478ef0de74f2"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>PushBackUnchecked</b> (const T &amp;value)</td></tr>
<tr class="memdesc:a804a1289180252024587478ef0de74f2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pushes value at the end of the array. Does NOT ensure capacity. <br /></td></tr>
<tr class="separator:a804a1289180252024587478ef0de74f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a946602a12b686a8a089e663d4a7599e2" id="r_a946602a12b686a8a089e663d4a7599e2"><td class="memItemLeft" align="right" valign="top"><a id="a946602a12b686a8a089e663d4a7599e2" name="a946602a12b686a8a089e663d4a7599e2"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>PushBackUnchecked</b> (T &amp;&amp;value)</td></tr>
<tr class="memdesc:a946602a12b686a8a089e663d4a7599e2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pushes value at the end of the array. Does NOT ensure capacity. <br /></td></tr>
<tr class="separator:a946602a12b686a8a089e663d4a7599e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a945866dd7de01cb96b3f6bd95c086ad0" id="r_a945866dd7de01cb96b3f6bd95c086ad0"><td class="memItemLeft" align="right" valign="top"><a id="a945866dd7de01cb96b3f6bd95c086ad0" name="a945866dd7de01cb96b3f6bd95c086ad0"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>PushBackRange</b> (const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; const T &gt; &amp;range, <a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:a945866dd7de01cb96b3f6bd95c086ad0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pushes all elements in range at the end of the array. Increases the capacity if necessary. <br /></td></tr>
<tr class="separator:a945866dd7de01cb96b3f6bd95c086ad0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9f8a96a3f6070fb3f66a3a5a359016c" id="r_ad9f8a96a3f6070fb3f66a3a5a359016c"><td class="memItemLeft" align="right" valign="top"><a id="ad9f8a96a3f6070fb3f66a3a5a359016c" name="ad9f8a96a3f6070fb3f66a3a5a359016c"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>PopBack</b> (ezUInt32 uiCountToRemove=1)</td></tr>
<tr class="memdesc:ad9f8a96a3f6070fb3f66a3a5a359016c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes count elements from the end of the array. <br /></td></tr>
<tr class="separator:ad9f8a96a3f6070fb3f66a3a5a359016c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa5a6fe2b087b6d55b4a66368e633dc88" id="r_aa5a6fe2b087b6d55b4a66368e633dc88"><td class="memItemLeft" align="right" valign="top"><a id="aa5a6fe2b087b6d55b4a66368e633dc88" name="aa5a6fe2b087b6d55b4a66368e633dc88"></a>
T &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>PeekBack</b> ()</td></tr>
<tr class="memdesc:aa5a6fe2b087b6d55b4a66368e633dc88"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the last element of the array. <br /></td></tr>
<tr class="separator:aa5a6fe2b087b6d55b4a66368e633dc88"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a40c8a33a9c9a990848326781aedf8c3a" id="r_a40c8a33a9c9a990848326781aedf8c3a"><td class="memItemLeft" align="right" valign="top"><a id="a40c8a33a9c9a990848326781aedf8c3a" name="a40c8a33a9c9a990848326781aedf8c3a"></a>
const T &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>PeekBack</b> () const</td></tr>
<tr class="memdesc:a40c8a33a9c9a990848326781aedf8c3a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the last element of the array. <br /></td></tr>
<tr class="separator:a40c8a33a9c9a990848326781aedf8c3a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a646f005d267f39cde5cd3d10b9ce446c" id="r_a646f005d267f39cde5cd3d10b9ce446c"><td class="memTemplParams" colspan="2"><a id="a646f005d267f39cde5cd3d10b9ce446c" name="a646f005d267f39cde5cd3d10b9ce446c"></a>
template&lt;typename Comparer &gt; </td></tr>
<tr class="memitem:a646f005d267f39cde5cd3d10b9ce446c"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Sort</b> (const Comparer &amp;comparer)</td></tr>
<tr class="memdesc:a646f005d267f39cde5cd3d10b9ce446c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sort with explicit comparer. <br /></td></tr>
<tr class="separator:a646f005d267f39cde5cd3d10b9ce446c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46465983c607874239317c3dcc8b12d4" id="r_a46465983c607874239317c3dcc8b12d4"><td class="memItemLeft" align="right" valign="top"><a id="a46465983c607874239317c3dcc8b12d4" name="a46465983c607874239317c3dcc8b12d4"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Sort</b> ()</td></tr>
<tr class="memdesc:a46465983c607874239317c3dcc8b12d4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sort with default comparer. <br /></td></tr>
<tr class="separator:a46465983c607874239317c3dcc8b12d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa9d377e69c087d2be3c4897ecce0471" id="r_aaa9d377e69c087d2be3c4897ecce0471"><td class="memItemLeft" align="right" valign="top"><a id="aaa9d377e69c087d2be3c4897ecce0471" name="aaa9d377e69c087d2be3c4897ecce0471"></a>
T *&#160;</td><td class="memItemRight" valign="bottom"><b>GetData</b> ()</td></tr>
<tr class="memdesc:aaa9d377e69c087d2be3c4897ecce0471"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a pointer to the array data, or nullptr if the array is empty. <br /></td></tr>
<tr class="separator:aaa9d377e69c087d2be3c4897ecce0471"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e38e5d57b02d7ccdf4079d799c192b6" id="r_a2e38e5d57b02d7ccdf4079d799c192b6"><td class="memItemLeft" align="right" valign="top"><a id="a2e38e5d57b02d7ccdf4079d799c192b6" name="a2e38e5d57b02d7ccdf4079d799c192b6"></a>
const T *&#160;</td><td class="memItemRight" valign="bottom"><b>GetData</b> () const</td></tr>
<tr class="memdesc:a2e38e5d57b02d7ccdf4079d799c192b6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a pointer to the array data, or nullptr if the array is empty. <br /></td></tr>
<tr class="separator:a2e38e5d57b02d7ccdf4079d799c192b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a27bc30d0e06cb01d8d5278245a6483f6" id="r_a27bc30d0e06cb01d8d5278245a6483f6"><td class="memItemLeft" align="right" valign="top"><a id="a27bc30d0e06cb01d8d5278245a6483f6" name="a27bc30d0e06cb01d8d5278245a6483f6"></a>
<a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; T &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetArrayPtr</b> ()</td></tr>
<tr class="memdesc:a27bc30d0e06cb01d8d5278245a6483f6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an array pointer to the array data, or an empty array pointer if the array is empty. <br /></td></tr>
<tr class="separator:a27bc30d0e06cb01d8d5278245a6483f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad571ab726ff04f340b68eb3ab4e541ff" id="r_ad571ab726ff04f340b68eb3ab4e541ff"><td class="memItemLeft" align="right" valign="top"><a id="ad571ab726ff04f340b68eb3ab4e541ff" name="ad571ab726ff04f340b68eb3ab4e541ff"></a>
<a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; const T &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetArrayPtr</b> () const</td></tr>
<tr class="memdesc:ad571ab726ff04f340b68eb3ab4e541ff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an array pointer to the array data, or an empty array pointer if the array is empty. <br /></td></tr>
<tr class="separator:ad571ab726ff04f340b68eb3ab4e541ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1fdc8ad1466dcecf86fbf92836988fe8" id="r_a1fdc8ad1466dcecf86fbf92836988fe8"><td class="memItemLeft" align="right" valign="top"><a id="a1fdc8ad1466dcecf86fbf92836988fe8" name="a1fdc8ad1466dcecf86fbf92836988fe8"></a>
<a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; typename <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; T &gt;::ByteType &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetByteArrayPtr</b> ()</td></tr>
<tr class="memdesc:a1fdc8ad1466dcecf86fbf92836988fe8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a byte array pointer to the array data, or an empty array pointer if the array is empty. <br /></td></tr>
<tr class="separator:a1fdc8ad1466dcecf86fbf92836988fe8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd2422b57a2333985aea28785073e0a2" id="r_acd2422b57a2333985aea28785073e0a2"><td class="memItemLeft" align="right" valign="top"><a id="acd2422b57a2333985aea28785073e0a2" name="acd2422b57a2333985aea28785073e0a2"></a>
<a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; typename <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; const T &gt;::ByteType &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetByteArrayPtr</b> () const</td></tr>
<tr class="memdesc:acd2422b57a2333985aea28785073e0a2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a byte array pointer to the array data, or an empty array pointer if the array is empty. <br /></td></tr>
<tr class="separator:acd2422b57a2333985aea28785073e0a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4db08fca7f530433e083498ed93afc37" id="r_a4db08fca7f530433e083498ed93afc37"><td class="memItemLeft" align="right" valign="top"><a id="a4db08fca7f530433e083498ed93afc37" name="a4db08fca7f530433e083498ed93afc37"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Reserve</b> (ezUInt16 uiCapacity, <a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:a4db08fca7f530433e083498ed93afc37"><td class="mdescLeft">&#160;</td><td class="mdescRight">Expands the array so it can at least store the given capacity. <br /></td></tr>
<tr class="separator:a4db08fca7f530433e083498ed93afc37"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adec38160e7d270a3a00ec3d67c0f1144" id="r_adec38160e7d270a3a00ec3d67c0f1144"><td class="memItemLeft" align="right" valign="top"><a id="adec38160e7d270a3a00ec3d67c0f1144" name="adec38160e7d270a3a00ec3d67c0f1144"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Compact</b> (<a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:adec38160e7d270a3a00ec3d67c0f1144"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tries to compact the array to avoid wasting memory. The resulting capacity is at least 'GetCount' (no elements get removed). Will deallocate all data, if the array is empty. <br /></td></tr>
<tr class="separator:adec38160e7d270a3a00ec3d67c0f1144"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a88383b5d42c0b93a8fd424db57909098" id="r_a88383b5d42c0b93a8fd424db57909098"><td class="memItemLeft" align="right" valign="top"><a id="a88383b5d42c0b93a8fd424db57909098" name="a88383b5d42c0b93a8fd424db57909098"></a>
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetCapacity</b> () const</td></tr>
<tr class="memdesc:a88383b5d42c0b93a8fd424db57909098"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the reserved number of elements that the array can hold without reallocating. <br /></td></tr>
<tr class="separator:a88383b5d42c0b93a8fd424db57909098"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acfcee52c57545f1c462ef72c5271c416" id="r_acfcee52c57545f1c462ef72c5271c416"><td class="memItemLeft" align="right" valign="top"><a id="acfcee52c57545f1c462ef72c5271c416" name="acfcee52c57545f1c462ef72c5271c416"></a>
ezUInt64&#160;</td><td class="memItemRight" valign="bottom"><b>GetHeapMemoryUsage</b> () const</td></tr>
<tr class="memdesc:acfcee52c57545f1c462ef72c5271c416"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the amount of bytes that are currently allocated on the heap. <br /></td></tr>
<tr class="separator:acfcee52c57545f1c462ef72c5271c416"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2f66db5c43d07642b67c0b90d50cfa5" id="r_ae2f66db5c43d07642b67c0b90d50cfa5"><td class="memTemplParams" colspan="2"><a id="ae2f66db5c43d07642b67c0b90d50cfa5" name="ae2f66db5c43d07642b67c0b90d50cfa5"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:ae2f66db5c43d07642b67c0b90d50cfa5"><td class="memTemplItemLeft" align="right" valign="top">const U &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetUserData</b> () const</td></tr>
<tr class="separator:ae2f66db5c43d07642b67c0b90d50cfa5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9024cd90ab0ff46f101aa1782f5ad3ec" id="r_a9024cd90ab0ff46f101aa1782f5ad3ec"><td class="memTemplParams" colspan="2"><a id="a9024cd90ab0ff46f101aa1782f5ad3ec" name="a9024cd90ab0ff46f101aa1782f5ad3ec"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:a9024cd90ab0ff46f101aa1782f5ad3ec"><td class="memTemplItemLeft" align="right" valign="top">U &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetUserData</b> ()</td></tr>
<tr class="separator:a9024cd90ab0ff46f101aa1782f5ad3ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7f965d49b03a5bc4b82fc9243df430a" id="r_aa7f965d49b03a5bc4b82fc9243df430a"><td class="memTemplParams" colspan="2"><a id="aa7f965d49b03a5bc4b82fc9243df430a" name="aa7f965d49b03a5bc4b82fc9243df430a"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:aa7f965d49b03a5bc4b82fc9243df430a"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE const U &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetUserData</b> () const</td></tr>
<tr class="separator:aa7f965d49b03a5bc4b82fc9243df430a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c3e4de2d67aa2ade70912c99166d31c" id="r_a0c3e4de2d67aa2ade70912c99166d31c"><td class="memTemplParams" colspan="2"><a id="a0c3e4de2d67aa2ade70912c99166d31c" name="a0c3e4de2d67aa2ade70912c99166d31c"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:a0c3e4de2d67aa2ade70912c99166d31c"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE U &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetUserData</b> ()</td></tr>
<tr class="separator:a0c3e4de2d67aa2ade70912c99166d31c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-types" name="pro-types"></a>
Protected Types</h2></td></tr>
<tr class="memitem:a64a24d7e9beac24626b66e6967d2b96b" id="r_a64a24d7e9beac24626b66e6967d2b96b"><td class="memItemLeft" align="right" valign="top"><a id="a64a24d7e9beac24626b66e6967d2b96b" name="a64a24d7e9beac24626b66e6967d2b96b"></a>enum &#160;</td><td class="memItemRight" valign="bottom">{ <b>CAPACITY_ALIGNMENT</b> = 4
 }</td></tr>
<tr class="separator:a64a24d7e9beac24626b66e6967d2b96b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-methods" name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a3e72c76932631714a4f8ea503e9d90ee" id="r_a3e72c76932631714a4f8ea503e9d90ee"><td class="memItemLeft" align="right" valign="top"><a id="a3e72c76932631714a4f8ea503e9d90ee" name="a3e72c76932631714a4f8ea503e9d90ee"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetCapacity</b> (ezUInt16 uiCapacity, <a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="separator:a3e72c76932631714a4f8ea503e9d90ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c42c13757230e17f284a1351638fe68" id="r_a3c42c13757230e17f284a1351638fe68"><td class="memItemLeft" align="right" valign="top"><a id="a3c42c13757230e17f284a1351638fe68" name="a3c42c13757230e17f284a1351638fe68"></a>
T *&#160;</td><td class="memItemRight" valign="bottom"><b>GetElementsPtr</b> ()</td></tr>
<tr class="separator:a3c42c13757230e17f284a1351638fe68"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a50eaedbfa69f6d9d26a4a8a26258fb8c" id="r_a50eaedbfa69f6d9d26a4a8a26258fb8c"><td class="memItemLeft" align="right" valign="top"><a id="a50eaedbfa69f6d9d26a4a8a26258fb8c" name="a50eaedbfa69f6d9d26a4a8a26258fb8c"></a>
const T *&#160;</td><td class="memItemRight" valign="bottom"><b>GetElementsPtr</b> () const</td></tr>
<tr class="separator:a50eaedbfa69f6d9d26a4a8a26258fb8c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-attribs" name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a38dd2035fbf9c35b8d88cac1c1110d5e" id="r_a38dd2035fbf9c35b8d88cac1c1110d5e"><td class="memItemLeft" align="right" valign="top"><a id="a38dd2035fbf9c35b8d88cac1c1110d5e" name="a38dd2035fbf9c35b8d88cac1c1110d5e"></a>
ezUInt16&#160;</td><td class="memItemRight" valign="bottom"><b>m_uiCount</b> = 0</td></tr>
<tr class="separator:a38dd2035fbf9c35b8d88cac1c1110d5e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0831ca34c75d6dc47f9f125d87c3c613" id="r_a0831ca34c75d6dc47f9f125d87c3c613"><td class="memItemLeft" align="right" valign="top"><a id="a0831ca34c75d6dc47f9f125d87c3c613" name="a0831ca34c75d6dc47f9f125d87c3c613"></a>
ezUInt16&#160;</td><td class="memItemRight" valign="bottom"><b>m_uiCapacity</b> = Size</td></tr>
<tr class="separator:a0831ca34c75d6dc47f9f125d87c3c613"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d7de83447e93504e8e87cb6add36414" id="r_a4d7de83447e93504e8e87cb6add36414"><td class="memItemLeft" align="right" valign="top"><a id="a4d7de83447e93504e8e87cb6add36414" name="a4d7de83447e93504e8e87cb6add36414"></a>
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>m_uiUserData</b> = 0</td></tr>
<tr class="separator:a4d7de83447e93504e8e87cb6add36414"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a418a10300369a2330ab711f8496cdaa8" id="r_a418a10300369a2330ab711f8496cdaa8"><td class="memItemLeft" ><a id="a418a10300369a2330ab711f8496cdaa8" name="a418a10300369a2330ab711f8496cdaa8"></a>
union {&#160;</td><td class="memItemRight" valign="bottom"></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae0f6b7bc6a018b8a57386965de60891c" id="r_ae0f6b7bc6a018b8a57386965de60891c"><td class="memItemLeft" ><a id="ae0f6b7bc6a018b8a57386965de60891c" name="ae0f6b7bc6a018b8a57386965de60891c"></a>
&#160;&#160;&#160;struct <b>alignas</b> {&#160;</td><td class="memItemRight" valign="bottom"></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8371954eafeffc3fabab92c70e2aab20" id="r_a8371954eafeffc3fabab92c70e2aab20"><td class="memItemLeft" >
&#160;&#160;&#160;&#160;&#160;&#160;ezUInt8&#160;&#160;&#160;<b>m_StaticData</b> [Size *sizeof(T)]&#160;</td><td class="memItemRight" valign="bottom"></td></tr>
<tr class="separator:a8371954eafeffc3fabab92c70e2aab20"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae0f6b7bc6a018b8a57386965de60891c" id="r_ae0f6b7bc6a018b8a57386965de60891c"><td class="memItemLeft" valign="top">&#160;&#160;&#160;}&#160;</td><td class="memItemRight" valign="bottom">&#160;</td><td class="memItemRight" valign="bottom"></td></tr>
<tr class="separator:ae0f6b7bc6a018b8a57386965de60891c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f3e529ab01de790737dd37addb783bd" id="r_a3f3e529ab01de790737dd37addb783bd"><td class="memItemLeft" >
&#160;&#160;&#160;T *&#160;&#160;&#160;<b>m_pElements</b> = nullptr&#160;</td><td class="memItemRight" valign="bottom"></td></tr>
<tr class="separator:a3f3e529ab01de790737dd37addb783bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a418a10300369a2330ab711f8496cdaa8" id="r_a418a10300369a2330ab711f8496cdaa8"><td class="memItemLeft" valign="top">};&#160;</td><td class="memItemRight" valign="bottom">&#160;</td><td class="memItemRight" valign="bottom"></td></tr>
<tr class="separator:a418a10300369a2330ab711f8496cdaa8"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><div class="compoundTemplParams">template&lt;typename T, ezUInt16 Size&gt;<br />
class ezSmallArrayBase&lt; T, Size &gt;</div><p>Implementation of a dynamically growing array with in-place storage and small memory overhead. </p>
<p>Best-case performance for the PushBack operation is in O(1) if the <a class="el" href="../../d8/deb/classez_hybrid_array.htm" title="A hybrid array uses in-place storage to handle the first few elements without any allocation....">ezHybridArray</a> does not need to be expanded. In the worst case, PushBack is in O(n). Look-up is guaranteed to always be in O(1). </p>
</div><hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Containers/<a class="el" href="../../d6/d8d/_small_array_8h_source.htm">SmallArray.h</a></li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Containers/Implementation/<a class="el" href="../../d2/d62/_small_array__inl_8h_source.htm">SmallArray_inl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase</a></li>
    <li class="footer">Generated on Fri Jul 11 2025 12:18:01 for ezEngine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
