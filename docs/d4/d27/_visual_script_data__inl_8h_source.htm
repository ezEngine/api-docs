<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/EnginePlugins/VisualScriptPlugin/Runtime/VisualScriptData_inl.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">ezEngine<span id="projectnumber">&#160;Release 25.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function() { init_codefold(1); });
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('d4/d27/_visual_script_data__inl_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">VisualScriptData_inl.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span> </div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span>EZ_FORCE_INLINE <span class="keywordtype">void</span> ezVisualScriptDataDescription::CheckOffset(DataOffset dataOffset, <span class="keyword">const</span> <a class="code hl_class" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* pType)<span class="keyword"> const</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="preprocessor">#if EZ_ENABLED(EZ_COMPILE_FOR_DEBUG)</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span>  <span class="keyword">auto</span> givenDataType = dataOffset.GetType();</div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span>  <span class="keyword">auto</span>&amp; offsetAndCount = m_PerTypeInfo[givenDataType];</div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span>  EZ_ASSERT_DEBUG(offsetAndCount.m_uiCount &gt; 0, <span class="stringliteral">&quot;Invalid data offset&quot;</span>);</div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span>  <span class="keyword">const</span> ezUInt32 uiLastOffset = offsetAndCount.m_uiStartOffset + (offsetAndCount.m_uiCount - 1) * ezVisualScriptDataType::GetStorageSize(givenDataType);</div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span>  EZ_ASSERT_DEBUG(dataOffset.m_uiByteOffset &gt;= offsetAndCount.m_uiStartOffset &amp;&amp; dataOffset.m_uiByteOffset &lt;= uiLastOffset, <span class="stringliteral">&quot;Invalid data offset&quot;</span>);</div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span> </div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span>  <span class="keywordflow">if</span> (pType != <span class="keyword">nullptr</span>)</div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span>  {</div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span>    <span class="keyword">auto</span> expectedDataType = ezVisualScriptDataType::FromRtti(pType);</div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span>    EZ_ASSERT_DEBUG(expectedDataType == givenDataType, <span class="stringliteral">&quot;Data type mismatch, expected &#39;{}&#39;({}) but got &#39;{}&#39;&quot;</span>, ezVisualScriptDataType::GetName(expectedDataType), pType-&gt;<a class="code hl_function" href="../../dd/d19/classez_r_t_t_i.htm#a12bb619302f06a0750a230ac62b01886">GetTypeName</a>(), ezVisualScriptDataType::GetName(givenDataType));</div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span>  }</div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span>}</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span> </div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span>EZ_FORCE_INLINE <a class="code hl_struct" href="../../da/dfe/structez_visual_script_data_description_1_1_data_offset.htm">ezVisualScriptDataDescription::DataOffset</a> ezVisualScriptDataDescription::GetOffset(ezVisualScriptDataType::Enum dataType, ezUInt32 uiIndex, DataOffset::Source::Enum source)<span class="keyword"> const</span></div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span>  <span class="keyword">auto</span>&amp; offsetAndCount = m_PerTypeInfo[dataType];</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span>  ezUInt32 uiByteOffset = ezInvalidIndex;</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span>  <span class="keywordflow">if</span> (uiIndex &lt; offsetAndCount.m_uiCount)</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span>  {</div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span>    uiByteOffset = offsetAndCount.m_uiStartOffset + uiIndex * ezVisualScriptDataType::GetStorageSize(dataType);</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span>  }</div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span> </div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span>  <span class="keywordflow">return</span> DataOffset(uiByteOffset, dataType, source);</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span>}</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span> </div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span> </div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>EZ_ALWAYS_INLINE <span class="keyword">const</span> <a class="code hl_struct" href="../../db/d2a/structez_visual_script_data_description.htm">ezVisualScriptDataDescription</a>&amp; ezVisualScriptDataStorage::GetDesc()<span class="keyword"> const</span></div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>  <span class="keywordflow">return</span> *m_pDesc;</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span>}</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span> </div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> ezVisualScriptDataStorage::IsAllocated()<span class="keyword"> const</span></div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span>  <span class="keywordflow">return</span> m_Storage.<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a0c22c58557948f308334f512fda9e0d8">IsEmpty</a>() == <span class="keyword">false</span>;</div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>}</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span> </div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span><span class="keyword">const</span> T&amp; ezVisualScriptDataStorage::GetData(DataOffset dataOffset)<span class="keyword"> const</span></div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span>  <span class="keyword">static_assert</span>(!std::is_pointer&lt;T&gt;::value &amp;&amp; !std::is_same&lt;T, ezTypedPointer&gt;::value, <span class="stringliteral">&quot;Use GetPointerData instead&quot;</span>);</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span> </div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>  m_pDesc-&gt;CheckOffset(dataOffset, ezGetStaticRTTI&lt;T&gt;());</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span> </div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span>  <span class="keywordflow">return</span> *<span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>T*<span class="keyword">&gt;</span>(m_Storage.<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#aba4e7585190f337c6428f2fe25828b8a">GetPtr</a>() + dataOffset.m_uiByteOffset);</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>}</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span> </div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>T&amp; ezVisualScriptDataStorage::GetWritableData(DataOffset dataOffset)</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>{</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>  <span class="keyword">static_assert</span>(!std::is_pointer&lt;T&gt;::value &amp;&amp; !std::is_same&lt;T, ezTypedPointer&gt;::value, <span class="stringliteral">&quot;Use GetPointerData instead&quot;</span>);</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span> </div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>  m_pDesc-&gt;CheckOffset(dataOffset, ezGetStaticRTTI&lt;T&gt;());</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span> </div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span>  <span class="keywordflow">return</span> *<span class="keyword">reinterpret_cast&lt;</span>T*<span class="keyword">&gt;</span>(m_Storage.<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#aba4e7585190f337c6428f2fe25828b8a">GetPtr</a>() + dataOffset.m_uiByteOffset);</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>}</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span> </div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span><span class="keywordtype">void</span> ezVisualScriptDataStorage::SetData(DataOffset dataOffset, <span class="keyword">const</span> T&amp; value)</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>{</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span>  <span class="keyword">static_assert</span>(!std::is_pointer&lt;T&gt;::value, <span class="stringliteral">&quot;Use SetPointerData instead&quot;</span>);</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span> </div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>  <span class="keywordflow">if</span> (dataOffset.m_uiByteOffset &lt; m_Storage.<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>())</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>  {</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>    m_pDesc-&gt;CheckOffset(dataOffset, ezGetStaticRTTI&lt;T&gt;());</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span> </div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>    <span class="keyword">auto</span> pData = m_Storage.<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#aba4e7585190f337c6428f2fe25828b8a">GetPtr</a>() + dataOffset.m_uiByteOffset;</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span> </div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>    <span class="keywordflow">if</span> <span class="keyword">constexpr</span> (std::is_same&lt;T, ezGameObjectHandle&gt;::value)</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>    {</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>      <span class="keyword">auto</span>&amp; storedHandle = *<span class="keyword">reinterpret_cast&lt;</span><a class="code hl_struct" href="../../d2/de6/structez_visual_script_game_object_handle.htm">ezVisualScriptGameObjectHandle</a>*<span class="keyword">&gt;</span>(pData);</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>      storedHandle.AssignHandle(value);</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>    }</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>    <span class="keywordflow">else</span> <span class="keywordflow">if</span> <span class="keyword">constexpr</span> (std::is_same&lt;T, ezComponentHandle&gt;::value)</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>    {</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>      <span class="keyword">auto</span>&amp; storedHandle = *<span class="keyword">reinterpret_cast&lt;</span><a class="code hl_struct" href="../../db/dc8/structez_visual_script_component_handle.htm">ezVisualScriptComponentHandle</a>*<span class="keyword">&gt;</span>(pData);</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span>      storedHandle.AssignHandle(value);</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>    }</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>    <span class="keywordflow">else</span> <span class="keywordflow">if</span> <span class="keyword">constexpr</span> (std::is_same&lt;T, ezStringView&gt;::value)</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>    {</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>      *<span class="keyword">reinterpret_cast&lt;</span><a class="code hl_class" href="../../d4/d53/structez_hybrid_string.htm">ezString</a>*<span class="keyword">&gt;</span>(pData) = value;</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>    }</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>    <span class="keywordflow">else</span></div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>    {</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>      *<span class="keyword">reinterpret_cast&lt;</span>T*<span class="keyword">&gt;</span>(pData) = value;</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>    }</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>  }</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>}</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span> </div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span><span class="keywordtype">void</span> ezVisualScriptDataStorage::SetPointerData(DataOffset dataOffset, T ptr, <span class="keyword">const</span> <a class="code hl_class" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* pType, ezUInt32 uiExecutionCounter)</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span>{</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span>  <span class="keyword">static_assert</span>(std::is_pointer&lt;T&gt;::value);</div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span> </div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>  <span class="keywordflow">if</span> (dataOffset.m_uiByteOffset &lt; m_Storage.<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>())</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>  {</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>    <span class="keyword">auto</span> pData = m_Storage.<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#aba4e7585190f337c6428f2fe25828b8a">GetPtr</a>() + dataOffset.m_uiByteOffset;</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span> </div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>    <span class="keywordflow">if</span> <span class="keyword">constexpr</span> (std::is_same&lt;T, ezGameObject*&gt;::value)</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>    {</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>      m_pDesc-&gt;CheckOffset(dataOffset, ezGetStaticRTTI&lt;ezGameObject&gt;());</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span> </div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>      <span class="keyword">auto</span>&amp; storedHandle = *<span class="keyword">reinterpret_cast&lt;</span><a class="code hl_struct" href="../../d2/de6/structez_visual_script_game_object_handle.htm">ezVisualScriptGameObjectHandle</a>*<span class="keyword">&gt;</span>(pData);</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>      storedHandle.AssignPtr(ptr, uiExecutionCounter);</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span>    }</div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span>    <span class="keywordflow">else</span> <span class="keywordflow">if</span> <span class="keyword">constexpr</span> (std::is_same&lt;T, ezComponent*&gt;::value)</div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span>    {</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>      m_pDesc-&gt;CheckOffset(dataOffset, ezGetStaticRTTI&lt;ezComponent&gt;());</div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span> </div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span>      <span class="keyword">auto</span>&amp; storedHandle = *<span class="keyword">reinterpret_cast&lt;</span><a class="code hl_struct" href="../../db/dc8/structez_visual_script_component_handle.htm">ezVisualScriptComponentHandle</a>*<span class="keyword">&gt;</span>(pData);</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>      storedHandle.AssignPtr(ptr, uiExecutionCounter);</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>    }</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span>    <span class="keywordflow">else</span></div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>    {</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>      EZ_ASSERT_DEBUG(!pType || pType-&gt;<a class="code hl_function" href="../../dd/d19/classez_r_t_t_i.htm#a19672c9984fefea00552f02dd010ae6e">IsDerivedFrom</a>&lt;<a class="code hl_class" href="../../d6/d30/classez_component.htm">ezComponent</a>&gt;() == <span class="keyword">false</span>, <span class="stringliteral">&quot;Component type &#39;{}&#39; is stored as typed pointer, cast to ezComponent first to ensure correct storage&quot;</span>, pType-&gt;<a class="code hl_function" href="../../dd/d19/classez_r_t_t_i.htm#a12bb619302f06a0750a230ac62b01886">GetTypeName</a>());</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span> </div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>      m_pDesc-&gt;CheckOffset(dataOffset, pType);</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span> </div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span>      <span class="keyword">auto</span>&amp; typedPointer = *<span class="keyword">reinterpret_cast&lt;</span><a class="code hl_struct" href="../../d3/d1f/structez_typed_pointer.htm">ezTypedPointer</a>*<span class="keyword">&gt;</span>(pData);</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span>      typedPointer.m_pObject = ptr;</div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span>      typedPointer.m_pType = pType;</div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span>    }</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span>  }</div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span>}</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span> </div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span> </div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span><span class="keyword">inline</span> <a class="code hl_struct" href="../../d4/da9/structez_result.htm">ezResult</a> ezVisualScriptInstanceData::Serialize(<a class="code hl_class" href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a>&amp; inout_stream)<span class="keyword"> const</span></div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span>  EZ_SUCCEED_OR_RETURN(m_DataOffset.Serialize(inout_stream));</div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span>  inout_stream &lt;&lt; m_DefaultValue;</div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span>  <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span>}</div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span> </div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span><span class="keyword">inline</span> <a class="code hl_struct" href="../../d4/da9/structez_result.htm">ezResult</a> ezVisualScriptInstanceData::Deserialize(<a class="code hl_class" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a>&amp; inout_stream)</div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span>{</div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>  EZ_SUCCEED_OR_RETURN(m_DataOffset.Deserialize(inout_stream));</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span>  inout_stream &gt;&gt; m_DefaultValue;</div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span>  <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span>}</div>
<div class="ttc" id="aclassez_array_ptr_htm_a0c22c58557948f308334f512fda9e0d8"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm#a0c22c58557948f308334f512fda9e0d8">ezArrayPtr::IsEmpty</a></div><div class="ttdeci">EZ_ALWAYS_INLINE bool IsEmpty() const</div><div class="ttdoc">Returns whether the array is empty.</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:169</div></div>
<div class="ttc" id="aclassez_array_ptr_htm_a9f222695f57e4cf200e07135dbbd7edd"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">ezArrayPtr::GetCount</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezUInt32 GetCount() const</div><div class="ttdoc">Returns the number of elements in the array.</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:175</div></div>
<div class="ttc" id="aclassez_array_ptr_htm_aba4e7585190f337c6428f2fe25828b8a"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm#aba4e7585190f337c6428f2fe25828b8a">ezArrayPtr::GetPtr</a></div><div class="ttdeci">EZ_ALWAYS_INLINE PointerType GetPtr() const</div><div class="ttdoc">Returns the pointer to the array.</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:151</div></div>
<div class="ttc" id="aclassez_component_htm"><div class="ttname"><a href="../../d6/d30/classez_component.htm">ezComponent</a></div><div class="ttdoc">Base class of all component types.</div><div class="ttdef"><b>Definition</b> Component.h:25</div></div>
<div class="ttc" id="aclassez_r_t_t_i_htm"><div class="ttname"><a href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a></div><div class="ttdoc">This class holds information about reflected types. Each instance represents one type that is known t...</div><div class="ttdef"><b>Definition</b> RTTI.h:30</div></div>
<div class="ttc" id="aclassez_r_t_t_i_htm_a12bb619302f06a0750a230ac62b01886"><div class="ttname"><a href="../../dd/d19/classez_r_t_t_i.htm#a12bb619302f06a0750a230ac62b01886">ezRTTI::GetTypeName</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezStringView GetTypeName() const</div><div class="ttdoc">Returns the name of this type.</div><div class="ttdef"><b>Definition</b> RTTI.h:48</div></div>
<div class="ttc" id="aclassez_r_t_t_i_htm_a19672c9984fefea00552f02dd010ae6e"><div class="ttname"><a href="../../dd/d19/classez_r_t_t_i.htm#a19672c9984fefea00552f02dd010ae6e">ezRTTI::IsDerivedFrom</a></div><div class="ttdeci">EZ_ALWAYS_INLINE bool IsDerivedFrom(const ezRTTI *pBaseType) const</div><div class="ttdoc">Returns true if this type is derived from the given type (or of the same type).</div><div class="ttdef"><b>Definition</b> RTTI.h:60</div></div>
<div class="ttc" id="aclassez_stream_reader_htm"><div class="ttname"><a href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a></div><div class="ttdoc">Interface for binary in (read) streams.</div><div class="ttdef"><b>Definition</b> Stream.h:22</div></div>
<div class="ttc" id="aclassez_stream_writer_htm"><div class="ttname"><a href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a></div><div class="ttdoc">Interface for binary out (write) streams.</div><div class="ttdef"><b>Definition</b> Stream.h:107</div></div>
<div class="ttc" id="astructez_hybrid_string_htm"><div class="ttname"><a href="../../d4/d53/structez_hybrid_string.htm">ezHybridString&lt; 32, ezDefaultAllocatorWrapper &gt;</a></div></div>
<div class="ttc" id="astructez_result_htm"><div class="ttname"><a href="../../d4/da9/structez_result.htm">ezResult</a></div><div class="ttdoc">Default enum for returning failure or success, instead of using a bool.</div><div class="ttdef"><b>Definition</b> Types.h:54</div></div>
<div class="ttc" id="astructez_typed_pointer_htm"><div class="ttname"><a href="../../d3/d1f/structez_typed_pointer.htm">ezTypedPointer</a></div><div class="ttdoc">A typed raw pointer.</div><div class="ttdef"><b>Definition</b> TypedPointer.h:13</div></div>
<div class="ttc" id="astructez_visual_script_component_handle_htm"><div class="ttname"><a href="../../db/dc8/structez_visual_script_component_handle.htm">ezVisualScriptComponentHandle</a></div><div class="ttdef"><b>Definition</b> VisualScriptDataType.h:99</div></div>
<div class="ttc" id="astructez_visual_script_data_description_1_1_data_offset_htm"><div class="ttname"><a href="../../da/dfe/structez_visual_script_data_description_1_1_data_offset.htm">ezVisualScriptDataDescription::DataOffset</a></div><div class="ttdef"><b>Definition</b> VisualScriptData.h:10</div></div>
<div class="ttc" id="astructez_visual_script_data_description_htm"><div class="ttname"><a href="../../db/d2a/structez_visual_script_data_description.htm">ezVisualScriptDataDescription</a></div><div class="ttdef"><b>Definition</b> VisualScriptData.h:8</div></div>
<div class="ttc" id="astructez_visual_script_game_object_handle_htm"><div class="ttname"><a href="../../d2/de6/structez_visual_script_game_object_handle.htm">ezVisualScriptGameObjectHandle</a></div><div class="ttdef"><b>Definition</b> VisualScriptDataType.h:76</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_103378c88ff4c88de6bfabe12da9ec96.htm">EnginePlugins</a></li><li class="navelem"><a class="el" href="../../dir_fd6ca2c49d94c8469eba18ba47e441f3.htm">VisualScriptPlugin</a></li><li class="navelem"><a class="el" href="../../dir_a5717271583c0b9d0429740eb2ab8606.htm">Runtime</a></li><li class="navelem"><b>VisualScriptData_inl.h</b></li>
    <li class="footer">Generated on Fri Jul 11 2025 12:17:56 for ezEngine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
