<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/IO/Implementation/Stream_inl.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 23.04</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d4/d16/_stream__inl_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Stream_inl.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#if EZ_ENABLED(EZ_PLATFORM_BIG_ENDIAN)</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160; </div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code" href="../../d2/d19/classez_stream_reader.htm#a3b27188b834171b325c22eaffda3b6a0">ezStreamReader::ReadWordValue</a>(T* pWordValue)</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;{</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;  EZ_CHECK_AT_COMPILETIME(<span class="keyword">sizeof</span>(T) == <span class="keyword">sizeof</span>(ezUInt16));</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160; </div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;  ezUInt16 uiTemp;</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160; </div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;  <span class="keyword">const</span> ezUInt32 uiRead = <a class="code" href="../../d2/d19/classez_stream_reader.htm#a9b8ce20de04610d28b4118ff23b42020">ReadBytes</a>(<span class="keyword">reinterpret_cast&lt;</span>ezUInt8*<span class="keyword">&gt;</span>(&amp;uiTemp), <span class="keyword">sizeof</span>(T));</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160; </div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;  *<span class="keyword">reinterpret_cast&lt;</span>ezUInt16*<span class="keyword">&gt;</span>(pWordValue) = <a class="code" href="../../d5/d34/structez_endian_helper.htm#a957270835a356c54a8c80be82c8b30eb">ezEndianHelper::Switch</a>(uiTemp);</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160; </div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;  <span class="keywordflow">return</span> (uiRead == <span class="keyword">sizeof</span>(T)) ? EZ_SUCCESS : EZ_FAILURE;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;}</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160; </div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code" href="../../d2/d19/classez_stream_reader.htm#adbb20b3d77e372dc19a9efa18dce2672">ezStreamReader::ReadDWordValue</a>(T* pDWordValue)</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;{</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;  EZ_CHECK_AT_COMPILETIME(<span class="keyword">sizeof</span>(T) == <span class="keyword">sizeof</span>(ezUInt32));</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160; </div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;  ezUInt32 uiTemp;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160; </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;  <span class="keyword">const</span> ezUInt32 uiRead = <a class="code" href="../../d2/d19/classez_stream_reader.htm#a9b8ce20de04610d28b4118ff23b42020">ReadBytes</a>(<span class="keyword">reinterpret_cast&lt;</span>ezUInt8*<span class="keyword">&gt;</span>(&amp;uiTemp), <span class="keyword">sizeof</span>(T));</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160; </div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  *<span class="keyword">reinterpret_cast&lt;</span>ezUInt32*<span class="keyword">&gt;</span>(pDWordValue) = <a class="code" href="../../d5/d34/structez_endian_helper.htm#a957270835a356c54a8c80be82c8b30eb">ezEndianHelper::Switch</a>(uiTemp);</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160; </div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;  <span class="keywordflow">return</span> (uiRead == <span class="keyword">sizeof</span>(T)) ? EZ_SUCCESS : EZ_FAILURE;</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;}</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160; </div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code" href="../../d2/d19/classez_stream_reader.htm#af8a61f22f0a0e77ee49411ae61cbc92d">ezStreamReader::ReadQWordValue</a>(T* pQWordValue)</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;{</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;  EZ_CHECK_AT_COMPILETIME(<span class="keyword">sizeof</span>(T) == <span class="keyword">sizeof</span>(ezUInt64));</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160; </div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  ezUInt64 uiTemp;</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160; </div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  <span class="keyword">const</span> ezUInt32 uiRead = <a class="code" href="../../d2/d19/classez_stream_reader.htm#a9b8ce20de04610d28b4118ff23b42020">ReadBytes</a>(<span class="keyword">reinterpret_cast&lt;</span>ezUInt8*<span class="keyword">&gt;</span>(&amp;uiTemp), <span class="keyword">sizeof</span>(T));</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160; </div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;  *<span class="keyword">reinterpret_cast&lt;</span>ezUInt64*<span class="keyword">&gt;</span>(pQWordValue) = <a class="code" href="../../d5/d34/structez_endian_helper.htm#a957270835a356c54a8c80be82c8b30eb">ezEndianHelper::Switch</a>(uiTemp);</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160; </div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  <span class="keywordflow">return</span> (uiRead == <span class="keyword">sizeof</span>(T)) ? EZ_SUCCESS : EZ_FAILURE;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;}</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160; </div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160; </div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160; </div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code" href="../../d6/dcc/classez_stream_writer.htm#a289b0efe94ade2e6534393c3314402eb">ezStreamWriter::WriteWordValue</a>(<span class="keyword">const</span> T* pWordValue)</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;{</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  EZ_CHECK_AT_COMPILETIME(<span class="keyword">sizeof</span>(T) == <span class="keyword">sizeof</span>(ezUInt16));</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160; </div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;  ezUInt16 uiTemp = *<span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>ezUInt16*<span class="keyword">&gt;</span>(pWordValue);</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  uiTemp = <a class="code" href="../../d5/d34/structez_endian_helper.htm#a957270835a356c54a8c80be82c8b30eb">ezEndianHelper::Switch</a>(uiTemp);</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160; </div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d6/dcc/classez_stream_writer.htm#a21fd5331a85b467ac9d5c11eecc3f0b0">WriteBytes</a>(<span class="keyword">reinterpret_cast&lt;</span>ezUInt8*<span class="keyword">&gt;</span>(&amp;uiTemp), <span class="keyword">sizeof</span>(T));</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;}</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160; </div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code" href="../../d6/dcc/classez_stream_writer.htm#a97195fb8d2e8b3ef01020185946cad51">ezStreamWriter::WriteDWordValue</a>(<span class="keyword">const</span> T* pDWordValue)</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;{</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  EZ_CHECK_AT_COMPILETIME(<span class="keyword">sizeof</span>(T) == <span class="keyword">sizeof</span>(ezUInt32));</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160; </div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;  ezUInt32 uiTemp = *<span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>ezUInt16*<span class="keyword">&gt;</span>(pDWordValue);</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;  uiTemp = <a class="code" href="../../d5/d34/structez_endian_helper.htm#a957270835a356c54a8c80be82c8b30eb">ezEndianHelper::Switch</a>(uiTemp);</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160; </div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d6/dcc/classez_stream_writer.htm#a21fd5331a85b467ac9d5c11eecc3f0b0">WriteBytes</a>(<span class="keyword">reinterpret_cast&lt;</span>ezUInt8*<span class="keyword">&gt;</span>(&amp;uiTemp), <span class="keyword">sizeof</span>(T));</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;}</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160; </div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code" href="../../d6/dcc/classez_stream_writer.htm#a5096c5625ad05d88a7047007cf8bdce2">ezStreamWriter::WriteQWordValue</a>(<span class="keyword">const</span> T* pQWordValue)</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;{</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;  EZ_CHECK_AT_COMPILETIME(<span class="keyword">sizeof</span>(T) == <span class="keyword">sizeof</span>(ezUInt64));</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160; </div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  ezUInt64 uiTemp = *<span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>ezUInt64*<span class="keyword">&gt;</span>(pQWordValue);</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;  uiTemp = <a class="code" href="../../d5/d34/structez_endian_helper.htm#a957270835a356c54a8c80be82c8b30eb">ezEndianHelper::Switch</a>(uiTemp);</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160; </div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d6/dcc/classez_stream_writer.htm#a21fd5331a85b467ac9d5c11eecc3f0b0">WriteBytes</a>(<span class="keyword">reinterpret_cast&lt;</span>ezUInt8*<span class="keyword">&gt;</span>(&amp;uiTemp), <span class="keyword">sizeof</span>(T));</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;}</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160; </div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160; </div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00085"></a><span class="lineno"><a class="line" href="../../d2/d19/classez_stream_reader.htm#a3b27188b834171b325c22eaffda3b6a0">   85</a></span>&#160;<a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code" href="../../d2/d19/classez_stream_reader.htm#a3b27188b834171b325c22eaffda3b6a0">ezStreamReader::ReadWordValue</a>(T* pWordValue)</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;{</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;  EZ_CHECK_AT_COMPILETIME(<span class="keyword">sizeof</span>(T) == <span class="keyword">sizeof</span>(ezUInt16));</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160; </div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;  <span class="keywordflow">if</span> (<a class="code" href="../../d2/d19/classez_stream_reader.htm#a9b8ce20de04610d28b4118ff23b42020">ReadBytes</a>(<span class="keyword">reinterpret_cast&lt;</span>ezUInt8*<span class="keyword">&gt;</span>(pWordValue), <span class="keyword">sizeof</span>(T)) != <span class="keyword">sizeof</span>(T))</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keywordflow">return</span> EZ_FAILURE;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160; </div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;  <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;}</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160; </div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00096"></a><span class="lineno"><a class="line" href="../../d2/d19/classez_stream_reader.htm#adbb20b3d77e372dc19a9efa18dce2672">   96</a></span>&#160;<a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code" href="../../d2/d19/classez_stream_reader.htm#adbb20b3d77e372dc19a9efa18dce2672">ezStreamReader::ReadDWordValue</a>(T* pDWordValue)</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;{</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  EZ_CHECK_AT_COMPILETIME(<span class="keyword">sizeof</span>(T) == <span class="keyword">sizeof</span>(ezUInt32));</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160; </div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;  <span class="keywordflow">if</span> (<a class="code" href="../../d2/d19/classez_stream_reader.htm#a9b8ce20de04610d28b4118ff23b42020">ReadBytes</a>(<span class="keyword">reinterpret_cast&lt;</span>ezUInt8*<span class="keyword">&gt;</span>(pDWordValue), <span class="keyword">sizeof</span>(T)) != <span class="keyword">sizeof</span>(T))</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <span class="keywordflow">return</span> EZ_FAILURE;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160; </div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;}</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160; </div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00107"></a><span class="lineno"><a class="line" href="../../d2/d19/classez_stream_reader.htm#af8a61f22f0a0e77ee49411ae61cbc92d">  107</a></span>&#160;<a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code" href="../../d2/d19/classez_stream_reader.htm#af8a61f22f0a0e77ee49411ae61cbc92d">ezStreamReader::ReadQWordValue</a>(T* pQWordValue)</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;{</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;  EZ_CHECK_AT_COMPILETIME(<span class="keyword">sizeof</span>(T) == <span class="keyword">sizeof</span>(ezUInt64));</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160; </div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;  <span class="keywordflow">if</span> (<a class="code" href="../../d2/d19/classez_stream_reader.htm#a9b8ce20de04610d28b4118ff23b42020">ReadBytes</a>(<span class="keyword">reinterpret_cast&lt;</span>ezUInt8*<span class="keyword">&gt;</span>(pQWordValue), <span class="keyword">sizeof</span>(T)) != <span class="keyword">sizeof</span>(T))</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="keywordflow">return</span> EZ_FAILURE;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160; </div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;  <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;}</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160; </div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00118"></a><span class="lineno"><a class="line" href="../../d6/dcc/classez_stream_writer.htm#a289b0efe94ade2e6534393c3314402eb">  118</a></span>&#160;<a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code" href="../../d6/dcc/classez_stream_writer.htm#a289b0efe94ade2e6534393c3314402eb">ezStreamWriter::WriteWordValue</a>(<span class="keyword">const</span> T* pWordValue)</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;{</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;  EZ_CHECK_AT_COMPILETIME(<span class="keyword">sizeof</span>(T) == <span class="keyword">sizeof</span>(ezUInt16));</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160; </div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d6/dcc/classez_stream_writer.htm#a21fd5331a85b467ac9d5c11eecc3f0b0">WriteBytes</a>(<span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>ezUInt8*<span class="keyword">&gt;</span>(pWordValue), <span class="keyword">sizeof</span>(T));</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;}</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160; </div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00126"></a><span class="lineno"><a class="line" href="../../d6/dcc/classez_stream_writer.htm#a97195fb8d2e8b3ef01020185946cad51">  126</a></span>&#160;<a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code" href="../../d6/dcc/classez_stream_writer.htm#a97195fb8d2e8b3ef01020185946cad51">ezStreamWriter::WriteDWordValue</a>(<span class="keyword">const</span> T* pDWordValue)</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;{</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;  EZ_CHECK_AT_COMPILETIME(<span class="keyword">sizeof</span>(T) == <span class="keyword">sizeof</span>(ezUInt32));</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160; </div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d6/dcc/classez_stream_writer.htm#a21fd5331a85b467ac9d5c11eecc3f0b0">WriteBytes</a>(<span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>ezUInt8*<span class="keyword">&gt;</span>(pDWordValue), <span class="keyword">sizeof</span>(T));</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;}</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160; </div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00134"></a><span class="lineno"><a class="line" href="../../d6/dcc/classez_stream_writer.htm#a5096c5625ad05d88a7047007cf8bdce2">  134</a></span>&#160;<a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code" href="../../d6/dcc/classez_stream_writer.htm#a5096c5625ad05d88a7047007cf8bdce2">ezStreamWriter::WriteQWordValue</a>(<span class="keyword">const</span> T* pQWordValue)</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;{</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;  EZ_CHECK_AT_COMPILETIME(<span class="keyword">sizeof</span>(T) == <span class="keyword">sizeof</span>(ezUInt64));</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160; </div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d6/dcc/classez_stream_writer.htm#a21fd5331a85b467ac9d5c11eecc3f0b0">WriteBytes</a>(<span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>ezUInt8*<span class="keyword">&gt;</span>(pQWordValue), <span class="keyword">sizeof</span>(T));</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;}</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160; </div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160; </div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;ezTypeVersion ezStreamReader::ReadVersion(ezTypeVersion expectedMaxVersion)</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;{</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;  ezTypeVersion v = 0;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;  <a class="code" href="../../d2/d19/classez_stream_reader.htm#a3b27188b834171b325c22eaffda3b6a0">ReadWordValue</a>(&amp;v).<a class="code" href="../../d4/da9/structez_result.htm#acb0bb72646ee6d5966edd5b4108fb670">IgnoreResult</a>();</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160; </div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;  EZ_ASSERT_ALWAYS(v &lt;= expectedMaxVersion, <span class="stringliteral">&quot;Read version ({0}) is larger than expected max version ({1}).&quot;</span>, v, expectedMaxVersion);</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;  EZ_ASSERT_ALWAYS(v &gt; 0, <span class="stringliteral">&quot;Invalid version.&quot;</span>);</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160; </div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;  <span class="keywordflow">return</span> v;</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;}</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160; </div>
<div class="line"><a name="l00154"></a><span class="lineno"><a class="line" href="../../d6/dcc/classez_stream_writer.htm#af0f04420ac6163d305babf9147b20e60">  154</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d6/dcc/classez_stream_writer.htm#af0f04420ac6163d305babf9147b20e60">ezStreamWriter::WriteVersion</a>(ezTypeVersion version)</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;{</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;  EZ_ASSERT_ALWAYS(version &gt; 0, <span class="stringliteral">&quot;Version cannot be zero.&quot;</span>);</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160; </div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;  <a class="code" href="../../d6/dcc/classez_stream_writer.htm#a289b0efe94ade2e6534393c3314402eb">WriteWordValue</a>(&amp;version).<a class="code" href="../../d4/da9/structez_result.htm#acb0bb72646ee6d5966edd5b4108fb670">IgnoreResult</a>();</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;}</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160; </div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160; </div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="keyword">namespace </span>ezStreamWriterUtil</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;{</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;  <span class="comment">// single element serialization</span></div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160; </div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;  EZ_ALWAYS_INLINE <span class="keyword">auto</span> SerializeImpl(<a class="code" href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a>&amp; inout_stream, <span class="keyword">const</span> T&amp; obj, <span class="keywordtype">int</span>) -&gt; decltype(inout_stream &lt;&lt; obj, <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a>(EZ_SUCCESS))</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;  {</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;    inout_stream &lt;&lt; obj;</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160; </div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;  }</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160; </div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;  EZ_ALWAYS_INLINE <span class="keyword">auto</span> SerializeImpl(<a class="code" href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a>&amp; inout_stream, <span class="keyword">const</span> T&amp; obj, <span class="keywordtype">long</span>) -&gt; decltype(obj.Serialize(inout_stream).IgnoreResult(), <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a>(EZ_SUCCESS))</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;  {</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <span class="keywordflow">return</span> ezToResult(obj.Serialize(inout_stream));</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;  }</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160; </div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;  EZ_ALWAYS_INLINE <span class="keyword">auto</span> SerializeImpl(<a class="code" href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a>&amp; inout_stream, <span class="keyword">const</span> T&amp; obj, <span class="keywordtype">float</span>) -&gt; decltype(obj.serialize(inout_stream).IgnoreResult(), <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a>(EZ_SUCCESS))</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;  {</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <span class="keywordflow">return</span> ezToResult(obj.serialize(inout_stream));</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;  }</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160; </div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;  EZ_ALWAYS_INLINE <span class="keyword">auto</span> Serialize(<a class="code" href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a>&amp; inout_stream, <span class="keyword">const</span> T&amp; obj) -&gt; decltype(SerializeImpl(inout_stream, obj, 0).IgnoreResult(), <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a>(EZ_SUCCESS))</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;  {</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;    <span class="keywordflow">return</span> SerializeImpl(inout_stream, obj, 0);</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;  }</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160; </div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;  <span class="comment">// serialization of array</span></div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160; </div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="preprocessor">#if EZ_DISABLED(EZ_PLATFORM_WINDOWS_UWP)</span></div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;  EZ_ALWAYS_INLINE <span class="keyword">auto</span> SerializeArrayImpl(<a class="code" href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a>&amp; inout_stream, <span class="keyword">const</span> T* pArray, ezUInt64 uiCount, <span class="keywordtype">int</span>) -&gt; decltype(SerializeArray(inout_stream, pArray, uiCount), <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a>(EZ_SUCCESS))</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;  {</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <span class="keywordflow">return</span> SerializeArray(inout_stream, pArray, uiCount);</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;  }</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160; </div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;  <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> SerializeArrayImpl(<a class="code" href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a>&amp; inout_stream, <span class="keyword">const</span> T* pArray, ezUInt64 uiCount, <span class="keywordtype">long</span>)</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;  {</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <span class="keywordflow">for</span> (ezUInt64 i = 0; i &lt; uiCount; ++i)</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    {</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;      EZ_SUCCEED_OR_RETURN(ezStreamWriterUtil::Serialize&lt;T&gt;(inout_stream, pArray[i]));</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    }</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160; </div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;  }</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160; </div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;  EZ_ALWAYS_INLINE <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> SerializeArray(<a class="code" href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a>&amp; inout_stream, <span class="keyword">const</span> T* pArray, ezUInt64 uiCount)</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;  {</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;    <span class="keywordflow">return</span> SerializeArrayImpl(inout_stream, pArray, uiCount, 0);</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;  }</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;} <span class="comment">// namespace ezStreamWriterUtil</span></div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160; </div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> ArrayType, <span class="keyword">typename</span> ValueType&gt;</div>
<div class="line"><a name="l00221"></a><span class="lineno"><a class="line" href="../../d6/dcc/classez_stream_writer.htm#a01a3e98b6f4ef2a503b2d6cd8439d492">  221</a></span>&#160;<a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code" href="../../d6/dcc/classez_stream_writer.htm#a01a3e98b6f4ef2a503b2d6cd8439d492">ezStreamWriter::WriteArray</a>(<span class="keyword">const</span> <a class="code" href="../../dc/d59/classez_array_base.htm">ezArrayBase&lt;ValueType, ArrayType&gt;</a>&amp; array)</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;{</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;  <span class="keyword">const</span> ezUInt64 uiCount = array.<a class="code" href="../../dc/d59/classez_array_base.htm#a51ba61fcbd2350ae8850754a41acbaa1">GetCount</a>();</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;  EZ_SUCCEED_OR_RETURN(<a class="code" href="../../d6/dcc/classez_stream_writer.htm#a5096c5625ad05d88a7047007cf8bdce2">WriteQWordValue</a>(&amp;uiCount));</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160; </div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;  <span class="keywordflow">return</span> ezStreamWriterUtil::SerializeArray&lt;ValueType&gt;(*<span class="keyword">this</span>, array.<a class="code" href="../../dc/d59/classez_array_base.htm#ac84ae40d109f1c6473e8349a88717634">GetData</a>(), array.<a class="code" href="../../dc/d59/classez_array_base.htm#a51ba61fcbd2350ae8850754a41acbaa1">GetCount</a>());</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;}</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160; </div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> ValueType, ezUInt16 uiSize&gt;</div>
<div class="line"><a name="l00230"></a><span class="lineno"><a class="line" href="../../d6/dcc/classez_stream_writer.htm#a081a4c1ccaadad05a438391c57d52e1b">  230</a></span>&#160;<a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code" href="../../d6/dcc/classez_stream_writer.htm#a01a3e98b6f4ef2a503b2d6cd8439d492">ezStreamWriter::WriteArray</a>(<span class="keyword">const</span> <a class="code" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase&lt;ValueType, uiSize&gt;</a>&amp; array)</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;{</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;  <span class="keyword">const</span> ezUInt32 uiCount = array.<a class="code" href="../../d4/d0b/classez_small_array_base.htm#ac13be38fb1e58b0b94c405db9318792a">GetCount</a>();</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;  EZ_SUCCEED_OR_RETURN(<a class="code" href="../../d6/dcc/classez_stream_writer.htm#a97195fb8d2e8b3ef01020185946cad51">WriteDWordValue</a>(&amp;uiCount));</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160; </div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;  <span class="keywordflow">return</span> ezStreamWriterUtil::SerializeArray&lt;ValueType&gt;(*<span class="keyword">this</span>, array.<a class="code" href="../../d4/d0b/classez_small_array_base.htm#a035aabb33113bf853276208dcb524f04">GetData</a>(), array.<a class="code" href="../../d4/d0b/classez_small_array_base.htm#ac13be38fb1e58b0b94c405db9318792a">GetCount</a>());</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;}</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160; </div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> ValueType, ezUInt32 uiSize&gt;</div>
<div class="line"><a name="l00239"></a><span class="lineno"><a class="line" href="../../d6/dcc/classez_stream_writer.htm#a121448e23c9a8486ffe603ba81264af4">  239</a></span>&#160;<a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code" href="../../d6/dcc/classez_stream_writer.htm#a01a3e98b6f4ef2a503b2d6cd8439d492">ezStreamWriter::WriteArray</a>(<span class="keyword">const</span> ValueType (&amp;array)[uiSize])</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;{</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;  <span class="keyword">const</span> ezUInt64 uiWriteSize = uiSize;</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;  EZ_SUCCEED_OR_RETURN(<a class="code" href="../../d6/dcc/classez_stream_writer.htm#a5096c5625ad05d88a7047007cf8bdce2">WriteQWordValue</a>(&amp;uiWriteSize));</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160; </div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;  <span class="keywordflow">return</span> ezStreamWriterUtil::SerializeArray&lt;ValueType&gt;(*<span class="keyword">this</span>, array, uiSize);</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;}</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160; </div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KeyType, <span class="keyword">typename</span> Comparer&gt;</div>
<div class="line"><a name="l00248"></a><span class="lineno"><a class="line" href="../../d6/dcc/classez_stream_writer.htm#a6f1dd712205ec0ab3fee76653e496f26">  248</a></span>&#160;<a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code" href="../../d6/dcc/classez_stream_writer.htm#a6f1dd712205ec0ab3fee76653e496f26">ezStreamWriter::WriteSet</a>(<span class="keyword">const</span> <a class="code" href="../../dc/d4b/classez_set_base.htm">ezSetBase&lt;KeyType, Comparer&gt;</a>&amp; set)</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;{</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;  <span class="keyword">const</span> ezUInt64 uiWriteSize = set.<a class="code" href="../../dc/d4b/classez_set_base.htm#af8d413bb3bbec419cfbaaab5b48bca62">GetCount</a>();</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;  EZ_SUCCEED_OR_RETURN(<a class="code" href="../../d6/dcc/classez_stream_writer.htm#a5096c5625ad05d88a7047007cf8bdce2">WriteQWordValue</a>(&amp;uiWriteSize));</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160; </div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;  <span class="keywordflow">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span>&amp; item : set)</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;  {</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    EZ_SUCCEED_OR_RETURN(ezStreamWriterUtil::Serialize&lt;KeyType&gt;(*<span class="keyword">this</span>, item));</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;  }</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160; </div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;  <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;}</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160; </div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KeyType, <span class="keyword">typename</span> ValueType, <span class="keyword">typename</span> Comparer&gt;</div>
<div class="line"><a name="l00262"></a><span class="lineno"><a class="line" href="../../d6/dcc/classez_stream_writer.htm#af9b15efce04c528ec2610c56227b385f">  262</a></span>&#160;<a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code" href="../../d6/dcc/classez_stream_writer.htm#af9b15efce04c528ec2610c56227b385f">ezStreamWriter::WriteMap</a>(<span class="keyword">const</span> <a class="code" href="../../d1/d43/classez_map_base.htm">ezMapBase&lt;KeyType, ValueType, Comparer&gt;</a>&amp; map)</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;{</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;  <span class="keyword">const</span> ezUInt64 uiWriteSize = map.<a class="code" href="../../d1/d43/classez_map_base.htm#a400e55a001e58137d0e483a2aba85784">GetCount</a>();</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;  EZ_SUCCEED_OR_RETURN(<a class="code" href="../../d6/dcc/classez_stream_writer.htm#a5096c5625ad05d88a7047007cf8bdce2">WriteQWordValue</a>(&amp;uiWriteSize));</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160; </div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;  <span class="keywordflow">for</span> (<span class="keyword">auto</span> It = map.<a class="code" href="../../d1/d43/classez_map_base.htm#a999fb772f02ce74de03af456db13ef38">GetIterator</a>(); It.IsValid(); ++It)</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;  {</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    EZ_SUCCEED_OR_RETURN(ezStreamWriterUtil::Serialize&lt;KeyType&gt;(*<span class="keyword">this</span>, It.Key()));</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    EZ_SUCCEED_OR_RETURN(ezStreamWriterUtil::Serialize&lt;ValueType&gt;(*<span class="keyword">this</span>, It.Value()));</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;  }</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160; </div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;  <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;}</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160; </div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KeyType, <span class="keyword">typename</span> ValueType, <span class="keyword">typename</span> Hasher&gt;</div>
<div class="line"><a name="l00277"></a><span class="lineno"><a class="line" href="../../d6/dcc/classez_stream_writer.htm#aa1295250db4ee4ac825e1fd64f86be01">  277</a></span>&#160;<a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code" href="../../d6/dcc/classez_stream_writer.htm#aa1295250db4ee4ac825e1fd64f86be01">ezStreamWriter::WriteHashTable</a>(<span class="keyword">const</span> <a class="code" href="../../de/dc3/classez_hash_table_base.htm">ezHashTableBase&lt;KeyType, ValueType, Hasher&gt;</a>&amp; hashTable)</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;{</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;  <span class="keyword">const</span> ezUInt64 uiWriteSize = hashTable.<a class="code" href="../../de/dc3/classez_hash_table_base.htm#a402cd17d004d929d9f777ca089bf8d8f">GetCount</a>();</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;  EZ_SUCCEED_OR_RETURN(<a class="code" href="../../d6/dcc/classez_stream_writer.htm#a5096c5625ad05d88a7047007cf8bdce2">WriteQWordValue</a>(&amp;uiWriteSize));</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160; </div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;  <span class="keywordflow">for</span> (<span class="keyword">auto</span> It = hashTable.<a class="code" href="../../de/dc3/classez_hash_table_base.htm#a9dd5adf9423563532b8217ce7c1b4539">GetIterator</a>(); It.IsValid(); ++It)</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;  {</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;    EZ_SUCCEED_OR_RETURN(ezStreamWriterUtil::Serialize&lt;KeyType&gt;(*<span class="keyword">this</span>, It.Key()));</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    EZ_SUCCEED_OR_RETURN(ezStreamWriterUtil::Serialize&lt;ValueType&gt;(*<span class="keyword">this</span>, It.Value()));</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;  }</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160; </div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;  <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;}</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160; </div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="keyword">namespace </span>ezStreamReaderUtil</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;{</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;  EZ_ALWAYS_INLINE <span class="keyword">auto</span> DeserializeImpl(<a class="code" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a>&amp; inout_stream, T&amp; ref_obj, <span class="keywordtype">int</span>) -&gt; decltype(inout_stream &gt;&gt; ref_obj, <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a>(EZ_SUCCESS))</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;  {</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;    inout_stream &gt;&gt; ref_obj;</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160; </div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;  }</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160; </div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;  EZ_ALWAYS_INLINE <span class="keyword">auto</span> DeserializeImpl(<a class="code" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a>&amp; inout_stream, T&amp; inout_obj, <span class="keywordtype">long</span>) -&gt; decltype(inout_obj.Deserialize(inout_stream).IgnoreResult(), <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a>(EZ_SUCCESS))</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;  {</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;    <span class="keywordflow">return</span> ezToResult(inout_obj.Deserialize(inout_stream));</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;  }</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160; </div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;  EZ_ALWAYS_INLINE <span class="keyword">auto</span> DeserializeImpl(<a class="code" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a>&amp; inout_stream, T&amp; inout_obj, <span class="keywordtype">float</span>) -&gt; decltype(inout_obj.deserialize(inout_stream).IgnoreResult(), <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a>(EZ_SUCCESS))</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;  {</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    <span class="keywordflow">return</span> ezToResult(inout_obj.deserialize(inout_stream));</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;  }</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160; </div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;  EZ_ALWAYS_INLINE <span class="keyword">auto</span> Deserialize(<a class="code" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a>&amp; inout_stream, T&amp; inout_obj) -&gt; decltype(DeserializeImpl(inout_stream, inout_obj, 0).IgnoreResult(), <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a>(EZ_SUCCESS))</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;  {</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    <span class="keywordflow">return</span> DeserializeImpl(inout_stream, inout_obj, 0);</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;  }</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160; </div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;  <span class="comment">// serialization of array</span></div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160; </div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;<span class="preprocessor">#if EZ_DISABLED(EZ_PLATFORM_WINDOWS_UWP)</span></div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;  EZ_ALWAYS_INLINE <span class="keyword">auto</span> DeserializeArrayImpl(<a class="code" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a>&amp; inout_stream, T* pArray, ezUInt64 uiCount, <span class="keywordtype">int</span>) -&gt; decltype(DeserializeArray(inout_stream, pArray, uiCount), <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a>(EZ_SUCCESS))</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;  {</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;    <span class="keywordflow">return</span> DeserializeArray(inout_stream, pArray, uiCount);</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;  }</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160; </div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;  <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> DeserializeArrayImpl(<a class="code" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a>&amp; inout_stream, T* pArray, ezUInt64 uiCount, <span class="keywordtype">long</span>)</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;  {</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;    <span class="keywordflow">for</span> (ezUInt64 i = 0; i &lt; uiCount; ++i)</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;    {</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;      EZ_SUCCEED_OR_RETURN(ezStreamReaderUtil::Deserialize&lt;T&gt;(inout_stream, pArray[i]));</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;    }</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160; </div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;    <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;  }</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160; </div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">class</span> T&gt;</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;  EZ_ALWAYS_INLINE <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> DeserializeArray(<a class="code" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a>&amp; inout_stream, T* pArray, ezUInt64 uiCount)</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;  {</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;    <span class="keywordflow">return</span> DeserializeArrayImpl(inout_stream, pArray, uiCount, 0);</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;  }</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160; </div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;} <span class="comment">// namespace ezStreamReaderUtil</span></div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160; </div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> ArrayType, <span class="keyword">typename</span> ValueType&gt;</div>
<div class="line"><a name="l00349"></a><span class="lineno"><a class="line" href="../../d2/d19/classez_stream_reader.htm#aa6a6b1308b590a5cfff85d3153569d32">  349</a></span>&#160;<a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code" href="../../d2/d19/classez_stream_reader.htm#aa6a6b1308b590a5cfff85d3153569d32">ezStreamReader::ReadArray</a>(<a class="code" href="../../dc/d59/classez_array_base.htm">ezArrayBase&lt;ValueType, ArrayType&gt;</a>&amp; inout_array)</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;{</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;  ezUInt64 uiCount = 0;</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;  EZ_SUCCEED_OR_RETURN(<a class="code" href="../../d2/d19/classez_stream_reader.htm#af8a61f22f0a0e77ee49411ae61cbc92d">ReadQWordValue</a>(&amp;uiCount));</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160; </div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;  <span class="keywordflow">if</span> (uiCount &lt; ezMath::MaxValue&lt;ezUInt32&gt;())</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;  {</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;    inout_array.<a class="code" href="../../dc/d59/classez_array_base.htm#a74099c2d7681df345aedf8cfe24f0bc4">Clear</a>();</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160; </div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;    <span class="keywordflow">if</span> (uiCount &gt; 0)</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;    {</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;      <span class="keyword">static_cast&lt;</span>ArrayType&amp;<span class="keyword">&gt;</span>(inout_array).SetCount(<span class="keyword">static_cast&lt;</span>ezUInt32<span class="keyword">&gt;</span>(uiCount));</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160; </div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;      EZ_SUCCEED_OR_RETURN(ezStreamReaderUtil::DeserializeArray&lt;ValueType&gt;(*<span class="keyword">this</span>, inout_array.<a class="code" href="../../dc/d59/classez_array_base.htm#ac84ae40d109f1c6473e8349a88717634">GetData</a>(), uiCount));</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;    }</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160; </div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;    <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;  }</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;  {</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    <span class="comment">// Containers currently use 32 bit for counts internally. Value from file is too large.</span></div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;    <span class="keywordflow">return</span> EZ_FAILURE;</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;  }</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;}</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160; </div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> ValueType, ezUInt16 uiSize, <span class="keyword">typename</span> AllocatorWrapper&gt;</div>
<div class="line"><a name="l00375"></a><span class="lineno"><a class="line" href="../../d2/d19/classez_stream_reader.htm#a66c1129b3be59ea242acdcd57de619a0">  375</a></span>&#160;<a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code" href="../../d2/d19/classez_stream_reader.htm#aa6a6b1308b590a5cfff85d3153569d32">ezStreamReader::ReadArray</a>(<a class="code" href="../../d0/d0c/classez_small_array.htm">ezSmallArray&lt;ValueType, uiSize, AllocatorWrapper&gt;</a>&amp; ref_array)</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;{</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;  ezUInt32 uiCount = 0;</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;  EZ_SUCCEED_OR_RETURN(<a class="code" href="../../d2/d19/classez_stream_reader.htm#adbb20b3d77e372dc19a9efa18dce2672">ReadDWordValue</a>(&amp;uiCount));</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160; </div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;  <span class="keywordflow">if</span> (uiCount &lt; ezMath::MaxValue&lt;ezUInt16&gt;())</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;  {</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;    ref_array.<a class="code" href="../../d4/d0b/classez_small_array_base.htm#a5787f727bd1a20181e3e2150c7d37fc2">Clear</a>();</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160; </div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;    <span class="keywordflow">if</span> (uiCount &gt; 0)</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;    {</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;      ref_array.SetCount(<span class="keyword">static_cast&lt;</span>ezUInt16<span class="keyword">&gt;</span>(uiCount));</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160; </div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;      EZ_SUCCEED_OR_RETURN(ezStreamReaderUtil::DeserializeArray&lt;ValueType&gt;(*<span class="keyword">this</span>, ref_array.<a class="code" href="../../d4/d0b/classez_small_array_base.htm#a035aabb33113bf853276208dcb524f04">GetData</a>(), uiCount));</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;    }</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160; </div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;    <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;  }</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;  {</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;    <span class="comment">// Small array uses 16 bit for counts internally. Value from file is too large.</span></div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;    <span class="keywordflow">return</span> EZ_FAILURE;</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;  }</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;}</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160; </div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> ValueType, ezUInt32 uiSize&gt;</div>
<div class="line"><a name="l00401"></a><span class="lineno"><a class="line" href="../../d2/d19/classez_stream_reader.htm#a84cad9bec4d75caa76e90908297047b5">  401</a></span>&#160;<a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code" href="../../d2/d19/classez_stream_reader.htm#aa6a6b1308b590a5cfff85d3153569d32">ezStreamReader::ReadArray</a>(ValueType (&amp;array)[uiSize])</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;{</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;  ezUInt64 uiCount = 0;</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;  EZ_SUCCEED_OR_RETURN(<a class="code" href="../../d2/d19/classez_stream_reader.htm#af8a61f22f0a0e77ee49411ae61cbc92d">ReadQWordValue</a>(&amp;uiCount));</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160; </div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;  <span class="keywordflow">if</span> (<span class="keyword">static_cast&lt;</span>ezUInt32<span class="keyword">&gt;</span>(uiCount) != uiSize)</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;    <span class="keywordflow">return</span> EZ_FAILURE;</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160; </div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;  <span class="keywordflow">if</span> (uiCount &lt; ezMath::MaxValue&lt;ezUInt32&gt;())</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;  {</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;    EZ_SUCCEED_OR_RETURN(ezStreamReaderUtil::DeserializeArray&lt;ValueType&gt;(*<span class="keyword">this</span>, array, uiCount));</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160; </div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;    <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;  }</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160; </div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;  <span class="comment">// Containers currently use 32 bit for counts internally. Value from file is too large.</span></div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;  <span class="keywordflow">return</span> EZ_FAILURE;</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;}</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160; </div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KeyType, <span class="keyword">typename</span> Comparer&gt;</div>
<div class="line"><a name="l00421"></a><span class="lineno"><a class="line" href="../../d2/d19/classez_stream_reader.htm#a011fbccad0850a346fc6d485b1980fe8">  421</a></span>&#160;<a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code" href="../../d2/d19/classez_stream_reader.htm#a011fbccad0850a346fc6d485b1980fe8">ezStreamReader::ReadSet</a>(<a class="code" href="../../dc/d4b/classez_set_base.htm">ezSetBase&lt;KeyType, Comparer&gt;</a>&amp; inout_set)</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;{</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;  ezUInt64 uiCount = 0;</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;  EZ_SUCCEED_OR_RETURN(<a class="code" href="../../d2/d19/classez_stream_reader.htm#af8a61f22f0a0e77ee49411ae61cbc92d">ReadQWordValue</a>(&amp;uiCount));</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160; </div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;  <span class="keywordflow">if</span> (uiCount &lt; ezMath::MaxValue&lt;ezUInt32&gt;())</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;  {</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;    inout_set.<a class="code" href="../../dc/d4b/classez_set_base.htm#aaf9b11b02b7dc68cd4a4d95f2e678ce5">Clear</a>();</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160; </div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;    <span class="keywordflow">for</span> (ezUInt32 i = 0; i &lt; static_cast&lt;ezUInt32&gt;(uiCount); ++i)</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;    {</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;      KeyType Item;</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;      EZ_SUCCEED_OR_RETURN(ezStreamReaderUtil::Deserialize(*<span class="keyword">this</span>, Item));</div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160; </div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;      inout_set.<a class="code" href="../../dc/d4b/classez_set_base.htm#a48fcf3d5be80596908f4daebfe984bf4">Insert</a>(std::move(Item));</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;    }</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160; </div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;    <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;  }</div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;  {</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;    <span class="comment">// Containers currently use 32 bit for counts internally. Value from file is too large.</span></div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;    <span class="keywordflow">return</span> EZ_FAILURE;</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;  }</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;}</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160; </div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KeyType, <span class="keyword">typename</span> ValueType, <span class="keyword">typename</span> Comparer&gt;</div>
<div class="line"><a name="l00448"></a><span class="lineno"><a class="line" href="../../d2/d19/classez_stream_reader.htm#a94c1d250edeb2edcde5cd108bd42c5f6">  448</a></span>&#160;<a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code" href="../../d2/d19/classez_stream_reader.htm#a94c1d250edeb2edcde5cd108bd42c5f6">ezStreamReader::ReadMap</a>(<a class="code" href="../../d1/d43/classez_map_base.htm">ezMapBase&lt;KeyType, ValueType, Comparer&gt;</a>&amp; inout_map)</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;{</div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;  ezUInt64 uiCount = 0;</div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;  EZ_SUCCEED_OR_RETURN(<a class="code" href="../../d2/d19/classez_stream_reader.htm#af8a61f22f0a0e77ee49411ae61cbc92d">ReadQWordValue</a>(&amp;uiCount));</div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160; </div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;  <span class="keywordflow">if</span> (uiCount &lt; ezMath::MaxValue&lt;ezUInt32&gt;())</div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;  {</div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;    inout_map.<a class="code" href="../../d1/d43/classez_map_base.htm#a5946a15134311c8353deeee06670e412">Clear</a>();</div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160; </div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;    <span class="keywordflow">for</span> (ezUInt32 i = 0; i &lt; static_cast&lt;ezUInt32&gt;(uiCount); ++i)</div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;    {</div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;      KeyType Key;</div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;      ValueType Value;</div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;      EZ_SUCCEED_OR_RETURN(ezStreamReaderUtil::Deserialize(*<span class="keyword">this</span>, Key));</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;      EZ_SUCCEED_OR_RETURN(ezStreamReaderUtil::Deserialize(*<span class="keyword">this</span>, Value));</div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160; </div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;      inout_map.<a class="code" href="../../d1/d43/classez_map_base.htm#a25d049c3f258c4640642ef5c1ea04d17">Insert</a>(std::move(Key), std::move(Value));</div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;    }</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160; </div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;    <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;  }</div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;  {</div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;    <span class="comment">// Containers currently use 32 bit for counts internally. Value from file is too large.</span></div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;    <span class="keywordflow">return</span> EZ_FAILURE;</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;  }</div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;}</div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160; </div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KeyType, <span class="keyword">typename</span> ValueType, <span class="keyword">typename</span> Hasher&gt;</div>
<div class="line"><a name="l00477"></a><span class="lineno"><a class="line" href="../../d2/d19/classez_stream_reader.htm#ace40df2e788eb1db8e52457436e3e519">  477</a></span>&#160;<a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code" href="../../d2/d19/classez_stream_reader.htm#ace40df2e788eb1db8e52457436e3e519">ezStreamReader::ReadHashTable</a>(<a class="code" href="../../de/dc3/classez_hash_table_base.htm">ezHashTableBase&lt;KeyType, ValueType, Hasher&gt;</a>&amp; inout_hashTable)</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;{</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;  ezUInt64 uiCount = 0;</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;  EZ_SUCCEED_OR_RETURN(<a class="code" href="../../d2/d19/classez_stream_reader.htm#af8a61f22f0a0e77ee49411ae61cbc92d">ReadQWordValue</a>(&amp;uiCount));</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160; </div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;  <span class="keywordflow">if</span> (uiCount &lt; ezMath::MaxValue&lt;ezUInt32&gt;())</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;  {</div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;    inout_hashTable.<a class="code" href="../../de/dc3/classez_hash_table_base.htm#af42ca8f8e469ae41fe6aa8a87f8a1ccc">Clear</a>();</div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;    inout_hashTable.<a class="code" href="../../de/dc3/classez_hash_table_base.htm#ad4ed1fc8cb5a1d598d069cf7c1e04c87">Reserve</a>(<span class="keyword">static_cast&lt;</span>ezUInt32<span class="keyword">&gt;</span>(uiCount));</div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160; </div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;    <span class="keywordflow">for</span> (ezUInt32 i = 0; i &lt; static_cast&lt;ezUInt32&gt;(uiCount); ++i)</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;    {</div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;      KeyType Key;</div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;      ValueType Value;</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;      EZ_SUCCEED_OR_RETURN(ezStreamReaderUtil::Deserialize(*<span class="keyword">this</span>, Key));</div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;      EZ_SUCCEED_OR_RETURN(ezStreamReaderUtil::Deserialize(*<span class="keyword">this</span>, Value));</div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160; </div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;      inout_hashTable.<a class="code" href="../../de/dc3/classez_hash_table_base.htm#a141738c1388ce3a9f1f2cff6cee512d2">Insert</a>(std::move(Key), std::move(Value));</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;    }</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160; </div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;    <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;  }</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;  {</div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;    <span class="comment">// Containers currently use 32 bit for counts internally. Value from file is too large.</span></div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;    <span class="keywordflow">return</span> EZ_FAILURE;</div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;  }</div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;}</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassez_small_array_base_htm_ac13be38fb1e58b0b94c405db9318792a"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#ac13be38fb1e58b0b94c405db9318792a">ezSmallArrayBase::GetCount</a></div><div class="ttdeci">ezUInt32 GetCount() const</div><div class="ttdoc">Returns the number of active elements in the array.</div><div class="ttdef"><b>Definition:</b> SmallArray_inl.h:220</div></div>
<div class="ttc" id="aclassez_array_base_htm_ac84ae40d109f1c6473e8349a88717634"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#ac84ae40d109f1c6473e8349a88717634">ezArrayBase::GetData</a></div><div class="ttdeci">T * GetData()</div><div class="ttdoc">Returns a pointer to the array data, or nullptr if the array is empty.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:418</div></div>
<div class="ttc" id="astructez_result_htm"><div class="ttname"><a href="../../d4/da9/structez_result.htm">ezResult</a></div><div class="ttdoc">Default enum for returning failure or success, instead of using a bool.</div><div class="ttdef"><b>Definition:</b> Types.h:50</div></div>
<div class="ttc" id="aclassez_map_base_htm_a5946a15134311c8353deeee06670e412"><div class="ttname"><a href="../../d1/d43/classez_map_base.htm#a5946a15134311c8353deeee06670e412">ezMapBase::Clear</a></div><div class="ttdeci">void Clear()</div><div class="ttdoc">Destroys all elements in the map and resets its size to zero.</div><div class="ttdef"><b>Definition:</b> Map_inl.h:160</div></div>
<div class="ttc" id="aclassez_stream_writer_htm"><div class="ttname"><a href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a></div><div class="ttdoc">Interface for binary out (write) streams.</div><div class="ttdef"><b>Definition:</b> Stream.h:106</div></div>
<div class="ttc" id="astructez_result_htm_acb0bb72646ee6d5966edd5b4108fb670"><div class="ttname"><a href="../../d4/da9/structez_result.htm#acb0bb72646ee6d5966edd5b4108fb670">ezResult::IgnoreResult</a></div><div class="ttdeci">EZ_ALWAYS_INLINE void IgnoreResult()</div><div class="ttdoc">Used to silence compiler warnings, when success or failure doesn't matter.</div><div class="ttdef"><b>Definition:</b> Types.h:66</div></div>
<div class="ttc" id="aclassez_stream_reader_htm"><div class="ttname"><a href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a></div><div class="ttdoc">Interface for binary in (read) streams.</div><div class="ttdef"><b>Definition:</b> Stream.h:21</div></div>
<div class="ttc" id="aclassez_stream_writer_htm_a6f1dd712205ec0ab3fee76653e496f26"><div class="ttname"><a href="../../d6/dcc/classez_stream_writer.htm#a6f1dd712205ec0ab3fee76653e496f26">ezStreamWriter::WriteSet</a></div><div class="ttdeci">ezResult WriteSet(const ezSetBase&lt; KeyType, Comparer &gt; &amp;set)</div><div class="ttdoc">Writes a set.</div><div class="ttdef"><b>Definition:</b> Stream_inl.h:248</div></div>
<div class="ttc" id="aclassez_stream_writer_htm_af0f04420ac6163d305babf9147b20e60"><div class="ttname"><a href="../../d6/dcc/classez_stream_writer.htm#af0f04420ac6163d305babf9147b20e60">ezStreamWriter::WriteVersion</a></div><div class="ttdeci">EZ_ALWAYS_INLINE void WriteVersion(ezTypeVersion version)</div><div class="ttdoc">Writes a type version to the stream.</div><div class="ttdef"><b>Definition:</b> Stream_inl.h:154</div></div>
<div class="ttc" id="aclassez_stream_reader_htm_adbb20b3d77e372dc19a9efa18dce2672"><div class="ttname"><a href="../../d2/d19/classez_stream_reader.htm#adbb20b3d77e372dc19a9efa18dce2672">ezStreamReader::ReadDWordValue</a></div><div class="ttdeci">ezResult ReadDWordValue(T *pDWordValue)</div><div class="ttdoc">Helper method to read a dword value correctly (copes with potentially different endianess)</div><div class="ttdef"><b>Definition:</b> Stream_inl.h:96</div></div>
<div class="ttc" id="aclassez_map_base_htm"><div class="ttname"><a href="../../d1/d43/classez_map_base.htm">ezMapBase</a></div><div class="ttdoc">An associative container. Similar to STL::map.</div><div class="ttdef"><b>Definition:</b> Map.h:17</div></div>
<div class="ttc" id="aclassez_map_base_htm_a999fb772f02ce74de03af456db13ef38"><div class="ttname"><a href="../../d1/d43/classez_map_base.htm#a999fb772f02ce74de03af456db13ef38">ezMapBase::GetIterator</a></div><div class="ttdeci">Iterator GetIterator()</div><div class="ttdoc">Returns an Iterator to the very first element.</div><div class="ttdef"><b>Definition:</b> Map_inl.h:192</div></div>
<div class="ttc" id="aclassez_stream_reader_htm_a011fbccad0850a346fc6d485b1980fe8"><div class="ttname"><a href="../../d2/d19/classez_stream_reader.htm#a011fbccad0850a346fc6d485b1980fe8">ezStreamReader::ReadSet</a></div><div class="ttdeci">ezResult ReadSet(ezSetBase&lt; KeyType, Comparer &gt; &amp;inout_set)</div><div class="ttdoc">Reads a set.</div><div class="ttdef"><b>Definition:</b> Stream_inl.h:421</div></div>
<div class="ttc" id="aclassez_map_base_htm_a400e55a001e58137d0e483a2aba85784"><div class="ttname"><a href="../../d1/d43/classez_map_base.htm#a400e55a001e58137d0e483a2aba85784">ezMapBase::GetCount</a></div><div class="ttdeci">ezUInt32 GetCount() const</div><div class="ttdoc">Returns the number of elements currently stored in the map. O(1) operation.</div><div class="ttdef"><b>Definition:</b> Map_inl.h:185</div></div>
<div class="ttc" id="aclassez_set_base_htm_aaf9b11b02b7dc68cd4a4d95f2e678ce5"><div class="ttname"><a href="../../dc/d4b/classez_set_base.htm#aaf9b11b02b7dc68cd4a4d95f2e678ce5">ezSetBase::Clear</a></div><div class="ttdeci">void Clear()</div><div class="ttdoc">Destroys all elements in the set and resets its size to zero.</div><div class="ttdef"><b>Definition:</b> Set_inl.h:169</div></div>
<div class="ttc" id="aclassez_stream_reader_htm_aa6a6b1308b590a5cfff85d3153569d32"><div class="ttname"><a href="../../d2/d19/classez_stream_reader.htm#aa6a6b1308b590a5cfff85d3153569d32">ezStreamReader::ReadArray</a></div><div class="ttdeci">ezResult ReadArray(ezArrayBase&lt; ValueType, ArrayType &gt; &amp;inout_array)</div><div class="ttdoc">Reads an array of elements from the stream.</div><div class="ttdef"><b>Definition:</b> Stream_inl.h:349</div></div>
<div class="ttc" id="aclassez_stream_reader_htm_a9b8ce20de04610d28b4118ff23b42020"><div class="ttname"><a href="../../d2/d19/classez_stream_reader.htm#a9b8ce20de04610d28b4118ff23b42020">ezStreamReader::ReadBytes</a></div><div class="ttdeci">virtual ezUInt64 ReadBytes(void *pReadBuffer, ezUInt64 uiBytesToRead)=0</div><div class="ttdoc">Reads a raw number of bytes into the read buffer, this is the only method which has to be implemented...</div></div>
<div class="ttc" id="aclassez_hash_table_base_htm"><div class="ttname"><a href="../../de/dc3/classez_hash_table_base.htm">ezHashTableBase</a></div><div class="ttdoc">Implementation of a hashtable which stores key/value pairs.</div><div class="ttdef"><b>Definition:</b> HashTable.h:18</div></div>
<div class="ttc" id="aclassez_stream_writer_htm_a21fd5331a85b467ac9d5c11eecc3f0b0"><div class="ttname"><a href="../../d6/dcc/classez_stream_writer.htm#a21fd5331a85b467ac9d5c11eecc3f0b0">ezStreamWriter::WriteBytes</a></div><div class="ttdeci">virtual ezResult WriteBytes(const void *pWriteBuffer, ezUInt64 uiBytesToWrite)=0</div><div class="ttdoc">Writes a raw number of bytes from the buffer, this is the only method which has to be implemented to ...</div></div>
<div class="ttc" id="aclassez_array_base_htm_a51ba61fcbd2350ae8850754a41acbaa1"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a51ba61fcbd2350ae8850754a41acbaa1">ezArrayBase::GetCount</a></div><div class="ttdeci">ezUInt32 GetCount() const</div><div class="ttdoc">Returns the number of active elements in the array.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:164</div></div>
<div class="ttc" id="aclassez_stream_reader_htm_ace40df2e788eb1db8e52457436e3e519"><div class="ttname"><a href="../../d2/d19/classez_stream_reader.htm#ace40df2e788eb1db8e52457436e3e519">ezStreamReader::ReadHashTable</a></div><div class="ttdeci">ezResult ReadHashTable(ezHashTableBase&lt; KeyType, ValueType, Hasher &gt; &amp;inout_hashTable)</div><div class="ttdoc">Read a hash table (note that the entry order is not stable)</div><div class="ttdef"><b>Definition:</b> Stream_inl.h:477</div></div>
<div class="ttc" id="aclassez_stream_reader_htm_af8a61f22f0a0e77ee49411ae61cbc92d"><div class="ttname"><a href="../../d2/d19/classez_stream_reader.htm#af8a61f22f0a0e77ee49411ae61cbc92d">ezStreamReader::ReadQWordValue</a></div><div class="ttdeci">ezResult ReadQWordValue(T *pQWordValue)</div><div class="ttdoc">Helper method to read a qword value correctly (copes with potentially different endianess)</div><div class="ttdef"><b>Definition:</b> Stream_inl.h:107</div></div>
<div class="ttc" id="aclassez_map_base_htm_a25d049c3f258c4640642ef5c1ea04d17"><div class="ttname"><a href="../../d1/d43/classez_map_base.htm#a25d049c3f258c4640642ef5c1ea04d17">ezMapBase::Insert</a></div><div class="ttdeci">Iterator Insert(CompatibleKeyType &amp;&amp;key, CompatibleValueType &amp;&amp;value)</div><div class="ttdoc">Inserts the key/value pair into the tree and returns an Iterator to it. O(log n) operation.</div><div class="ttdef"><b>Definition:</b> Map_inl.h:520</div></div>
<div class="ttc" id="aclassez_hash_table_base_htm_ad4ed1fc8cb5a1d598d069cf7c1e04c87"><div class="ttname"><a href="../../de/dc3/classez_hash_table_base.htm#ad4ed1fc8cb5a1d598d069cf7c1e04c87">ezHashTableBase::Reserve</a></div><div class="ttdeci">void Reserve(ezUInt32 uiCapacity)</div><div class="ttdoc">Expands the hashtable by over-allocating the internal storage so that the load factor is lower or equ...</div><div class="ttdef"><b>Definition:</b> HashTable_inl.h:266</div></div>
<div class="ttc" id="aclassez_stream_writer_htm_a97195fb8d2e8b3ef01020185946cad51"><div class="ttname"><a href="../../d6/dcc/classez_stream_writer.htm#a97195fb8d2e8b3ef01020185946cad51">ezStreamWriter::WriteDWordValue</a></div><div class="ttdeci">ezResult WriteDWordValue(const T *pDWordValue)</div><div class="ttdoc">Helper method to write a dword value correctly (copes with potentially different endianess)</div><div class="ttdef"><b>Definition:</b> Stream_inl.h:126</div></div>
<div class="ttc" id="aclassez_small_array_base_htm"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase</a></div><div class="ttdoc">Implementation of a dynamically growing array with in-place storage and small memory overhead.</div><div class="ttdef"><b>Definition:</b> SmallArray.h:16</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_a035aabb33113bf853276208dcb524f04"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#a035aabb33113bf853276208dcb524f04">ezSmallArrayBase::GetData</a></div><div class="ttdeci">T * GetData()</div><div class="ttdoc">Returns a pointer to the array data, or nullptr if the array is empty.</div><div class="ttdef"><b>Definition:</b> SmallArray_inl.h:454</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_a5787f727bd1a20181e3e2150c7d37fc2"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#a5787f727bd1a20181e3e2150c7d37fc2">ezSmallArrayBase::Clear</a></div><div class="ttdeci">void Clear()</div><div class="ttdoc">Clears the array.</div><div class="ttdef"><b>Definition:</b> SmallArray_inl.h:232</div></div>
<div class="ttc" id="aclassez_small_array_htm"><div class="ttname"><a href="../../d0/d0c/classez_small_array.htm">ezSmallArray</a></div><div class="ttdef"><b>Definition:</b> SmallArray.h:216</div></div>
<div class="ttc" id="aclassez_array_base_htm"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm">ezArrayBase</a></div><div class="ttdoc">Base class for all array containers. Implements all the basic functionality that only requires a poin...</div><div class="ttdef"><b>Definition:</b> ArrayBase.h:14</div></div>
<div class="ttc" id="aclassez_set_base_htm_af8d413bb3bbec419cfbaaab5b48bca62"><div class="ttname"><a href="../../dc/d4b/classez_set_base.htm#af8d413bb3bbec419cfbaaab5b48bca62">ezSetBase::GetCount</a></div><div class="ttdeci">ezUInt32 GetCount() const</div><div class="ttdoc">Returns the number of elements currently stored in the set. O(1) operation.</div><div class="ttdef"><b>Definition:</b> Set_inl.h:194</div></div>
<div class="ttc" id="aclassez_hash_table_base_htm_af42ca8f8e469ae41fe6aa8a87f8a1ccc"><div class="ttname"><a href="../../de/dc3/classez_hash_table_base.htm#af42ca8f8e469ae41fe6aa8a87f8a1ccc">ezHashTableBase::Clear</a></div><div class="ttdeci">void Clear()</div><div class="ttdoc">Clears the table.</div><div class="ttdef"><b>Definition:</b> HashTable_inl.h:314</div></div>
<div class="ttc" id="aclassez_stream_writer_htm_a289b0efe94ade2e6534393c3314402eb"><div class="ttname"><a href="../../d6/dcc/classez_stream_writer.htm#a289b0efe94ade2e6534393c3314402eb">ezStreamWriter::WriteWordValue</a></div><div class="ttdeci">ezResult WriteWordValue(const T *pWordValue)</div><div class="ttdoc">Helper method to write a word value correctly (copes with potentially different endianess)</div><div class="ttdef"><b>Definition:</b> Stream_inl.h:118</div></div>
<div class="ttc" id="aclassez_hash_table_base_htm_a141738c1388ce3a9f1f2cff6cee512d2"><div class="ttname"><a href="../../de/dc3/classez_hash_table_base.htm#a141738c1388ce3a9f1f2cff6cee512d2">ezHashTableBase::Insert</a></div><div class="ttdeci">bool Insert(CompatibleKeyType &amp;&amp;key, CompatibleValueType &amp;&amp;value, ValueType *out_pOldValue=nullptr)</div><div class="ttdoc">Inserts the key value pair or replaces value if an entry with the given key already exists.</div></div>
<div class="ttc" id="aclassez_set_base_htm_a48fcf3d5be80596908f4daebfe984bf4"><div class="ttname"><a href="../../dc/d4b/classez_set_base.htm#a48fcf3d5be80596908f4daebfe984bf4">ezSetBase::Insert</a></div><div class="ttdeci">Iterator Insert(CompatibleKeyType &amp;&amp;key)</div><div class="ttdoc">Inserts the key into the tree and returns an Iterator to it. O(log n) operation.</div><div class="ttdef"><b>Definition:</b> Set_inl.h:387</div></div>
<div class="ttc" id="aclassez_hash_table_base_htm_a402cd17d004d929d9f777ca089bf8d8f"><div class="ttname"><a href="../../de/dc3/classez_hash_table_base.htm#a402cd17d004d929d9f777ca089bf8d8f">ezHashTableBase::GetCount</a></div><div class="ttdeci">ezUInt32 GetCount() const</div><div class="ttdoc">Returns the number of active entries in the table.</div><div class="ttdef"><b>Definition:</b> HashTable_inl.h:302</div></div>
<div class="ttc" id="aclassez_stream_writer_htm_a01a3e98b6f4ef2a503b2d6cd8439d492"><div class="ttname"><a href="../../d6/dcc/classez_stream_writer.htm#a01a3e98b6f4ef2a503b2d6cd8439d492">ezStreamWriter::WriteArray</a></div><div class="ttdeci">ezResult WriteArray(const ezArrayBase&lt; ValueType, ArrayType &gt; &amp;array)</div><div class="ttdoc">Writes an array of elements to the stream.</div><div class="ttdef"><b>Definition:</b> Stream_inl.h:221</div></div>
<div class="ttc" id="aclassez_array_base_htm_a74099c2d7681df345aedf8cfe24f0bc4"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a74099c2d7681df345aedf8cfe24f0bc4">ezArrayBase::Clear</a></div><div class="ttdeci">void Clear()</div><div class="ttdoc">Clears the array.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:176</div></div>
<div class="ttc" id="aclassez_set_base_htm"><div class="ttname"><a href="../../dc/d4b/classez_set_base.htm">ezSetBase</a></div><div class="ttdoc">A set container that only stores whether an element resides in it or not. Similar to STL::set.</div><div class="ttdef"><b>Definition:</b> Set.h:12</div></div>
<div class="ttc" id="aclassez_stream_reader_htm_a94c1d250edeb2edcde5cd108bd42c5f6"><div class="ttname"><a href="../../d2/d19/classez_stream_reader.htm#a94c1d250edeb2edcde5cd108bd42c5f6">ezStreamReader::ReadMap</a></div><div class="ttdeci">ezResult ReadMap(ezMapBase&lt; KeyType, ValueType, Comparer &gt; &amp;inout_map)</div><div class="ttdoc">Reads a map.</div><div class="ttdef"><b>Definition:</b> Stream_inl.h:448</div></div>
<div class="ttc" id="astructez_endian_helper_htm_a957270835a356c54a8c80be82c8b30eb"><div class="ttname"><a href="../../d5/d34/structez_endian_helper.htm#a957270835a356c54a8c80be82c8b30eb">ezEndianHelper::Switch</a></div><div class="ttdeci">static EZ_ALWAYS_INLINE ezUInt16 Switch(ezUInt16 uiWord)</div><div class="ttdoc">Returns a single switched word (16 bit value).</div><div class="ttdef"><b>Definition:</b> EndianHelper.h:45</div></div>
<div class="ttc" id="aclassez_stream_writer_htm_aa1295250db4ee4ac825e1fd64f86be01"><div class="ttname"><a href="../../d6/dcc/classez_stream_writer.htm#aa1295250db4ee4ac825e1fd64f86be01">ezStreamWriter::WriteHashTable</a></div><div class="ttdeci">ezResult WriteHashTable(const ezHashTableBase&lt; KeyType, ValueType, Hasher &gt; &amp;hashTable)</div><div class="ttdoc">Writes a hash table (note that the entry order might change on read)</div><div class="ttdef"><b>Definition:</b> Stream_inl.h:277</div></div>
<div class="ttc" id="aclassez_hash_table_base_htm_a9dd5adf9423563532b8217ce7c1b4539"><div class="ttname"><a href="../../de/dc3/classez_hash_table_base.htm#a9dd5adf9423563532b8217ce7c1b4539">ezHashTableBase::GetIterator</a></div><div class="ttdeci">Iterator GetIterator()</div><div class="ttdoc">Returns an Iterator to the very first element.</div><div class="ttdef"><b>Definition:</b> HashTable_inl.h:579</div></div>
<div class="ttc" id="aclassez_stream_writer_htm_af9b15efce04c528ec2610c56227b385f"><div class="ttname"><a href="../../d6/dcc/classez_stream_writer.htm#af9b15efce04c528ec2610c56227b385f">ezStreamWriter::WriteMap</a></div><div class="ttdeci">ezResult WriteMap(const ezMapBase&lt; KeyType, ValueType, Comparer &gt; &amp;map)</div><div class="ttdoc">Writes a map.</div><div class="ttdef"><b>Definition:</b> Stream_inl.h:262</div></div>
<div class="ttc" id="aclassez_stream_reader_htm_a3b27188b834171b325c22eaffda3b6a0"><div class="ttname"><a href="../../d2/d19/classez_stream_reader.htm#a3b27188b834171b325c22eaffda3b6a0">ezStreamReader::ReadWordValue</a></div><div class="ttdeci">ezResult ReadWordValue(T *pWordValue)</div><div class="ttdoc">Helper method to read a word value correctly (copes with potentially different endianess)</div><div class="ttdef"><b>Definition:</b> Stream_inl.h:85</div></div>
<div class="ttc" id="aclassez_stream_writer_htm_a5096c5625ad05d88a7047007cf8bdce2"><div class="ttname"><a href="../../d6/dcc/classez_stream_writer.htm#a5096c5625ad05d88a7047007cf8bdce2">ezStreamWriter::WriteQWordValue</a></div><div class="ttdeci">ezResult WriteQWordValue(const T *pQWordValue)</div><div class="ttdoc">Helper method to write a qword value correctly (copes with potentially different endianess)</div><div class="ttdef"><b>Definition:</b> Stream_inl.h:134</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_64fdcb4094ee5a27b054d4fa23e28e01.htm">IO</a></li><li class="navelem"><a class="el" href="../../dir_958a535fafce83ab8c10e8fc15932487.htm">Implementation</a></li><li class="navelem"><b>Stream_inl.h</b></li>
    <li class="footer">Generated on Sat Mar 25 2023 19:21:55 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
