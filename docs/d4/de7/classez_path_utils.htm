<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: ezPathUtils Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 21.6</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d4/de7/classez_path_utils.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pub-static-attribs">Static Public Attributes</a> &#124;
<a href="../../d9/d6e/classez_path_utils-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ezPathUtils Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Contains Helper functions to work with paths.  
 <a href="../../d4/de7/classez_path_utils.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../dd/d82/_path_utils_8h_source.htm">PathUtils.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a36f5ae6659f19b35b83dff5a251fa461"><td class="memItemLeft" align="right" valign="top"><a id="a36f5ae6659f19b35b83dff5a251fa461"></a>
static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de7/classez_path_utils.htm#a36f5ae6659f19b35b83dff5a251fa461">IsPathSeparator</a> (ezUInt32 c)</td></tr>
<tr class="memdesc:a36f5ae6659f19b35b83dff5a251fa461"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether c is any known path separator. <br /></td></tr>
<tr class="separator:a36f5ae6659f19b35b83dff5a251fa461"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a09bb8c0a3aeaf3074b66e26da8a919b6"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de7/classez_path_utils.htm#a09bb8c0a3aeaf3074b66e26da8a919b6">IsValidFilenameChar</a> (ezUInt32 character)</td></tr>
<tr class="memdesc:a09bb8c0a3aeaf3074b66e26da8a919b6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks if a given character is allowed in a filename (not path!)  <a href="../../d4/de7/classez_path_utils.htm#a09bb8c0a3aeaf3074b66e26da8a919b6">More...</a><br /></td></tr>
<tr class="separator:a09bb8c0a3aeaf3074b66e26da8a919b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf2af941ceda31c551ed0354951e25a6"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de7/classez_path_utils.htm#adf2af941ceda31c551ed0354951e25a6">ContainsInvalidFilenameChars</a> (const char *szPath, const char *szPathEnd=<a class="el" href="../../d9/d32/classez_unicode_utils.htm#a580463d2f8474b7119639fa86104cb93">ezUnicodeUtils::GetMaxStringEnd</a>&lt; char &gt;())</td></tr>
<tr class="memdesc:adf2af941ceda31c551ed0354951e25a6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks every character in the string with <a class="el" href="../../d4/de7/classez_path_utils.htm#a09bb8c0a3aeaf3074b66e26da8a919b6" title="Checks if a given character is allowed in a filename (not path!)">IsValidFilenameChar()</a>  <a href="../../d4/de7/classez_path_utils.htm#adf2af941ceda31c551ed0354951e25a6">More...</a><br /></td></tr>
<tr class="separator:adf2af941ceda31c551ed0354951e25a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc1339e7a0ef737322aea5d29d27017a"><td class="memItemLeft" align="right" valign="top"><a id="acc1339e7a0ef737322aea5d29d27017a"></a>
static const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de7/classez_path_utils.htm#acc1339e7a0ef737322aea5d29d27017a">FindPreviousSeparator</a> (const char *szPathStart, const char *szStartSearchAt)</td></tr>
<tr class="memdesc:acc1339e7a0ef737322aea5d29d27017a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Searches for the previous path separator before szStartSearchAt. Will return nullptr if it reaches szPathStart before finding any separator. <br /></td></tr>
<tr class="separator:acc1339e7a0ef737322aea5d29d27017a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a875e05396b1bc4d460420743d59f7b30"><td class="memItemLeft" align="right" valign="top"><a id="a875e05396b1bc4d460420743d59f7b30"></a>
static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de7/classez_path_utils.htm#a875e05396b1bc4d460420743d59f7b30">HasAnyExtension</a> (const char *szPath, const char *szPathEnd=<a class="el" href="../../d9/d32/classez_unicode_utils.htm#a580463d2f8474b7119639fa86104cb93">ezUnicodeUtils::GetMaxStringEnd</a>&lt; char &gt;())</td></tr>
<tr class="memdesc:a875e05396b1bc4d460420743d59f7b30"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether the given path has any file extension. <br /></td></tr>
<tr class="separator:a875e05396b1bc4d460420743d59f7b30"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a000295743bb7a6044d36c8cc9017a249"><td class="memItemLeft" align="right" valign="top"><a id="a000295743bb7a6044d36c8cc9017a249"></a>
static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de7/classez_path_utils.htm#a000295743bb7a6044d36c8cc9017a249">HasExtension</a> (const char *szPath, const char *szExtension, const char *szPathEnd=<a class="el" href="../../d9/d32/classez_unicode_utils.htm#a580463d2f8474b7119639fa86104cb93">ezUnicodeUtils::GetMaxStringEnd</a>&lt; char &gt;())</td></tr>
<tr class="memdesc:a000295743bb7a6044d36c8cc9017a249"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether the given path ends with the given extension. szExtension should start with a '.' for performance reasons, but it will work without a '.' too. <br /></td></tr>
<tr class="separator:a000295743bb7a6044d36c8cc9017a249"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac9da600c89d6cc82029ce57e551faadd"><td class="memItemLeft" align="right" valign="top"><a id="ac9da600c89d6cc82029ce57e551faadd"></a>
static <a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de7/classez_path_utils.htm#ac9da600c89d6cc82029ce57e551faadd">GetFileExtension</a> (const char *szPath, const char *szPathEnd=<a class="el" href="../../d9/d32/classez_unicode_utils.htm#a580463d2f8474b7119639fa86104cb93">ezUnicodeUtils::GetMaxStringEnd</a>&lt; char &gt;())</td></tr>
<tr class="memdesc:ac9da600c89d6cc82029ce57e551faadd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the file extension of the given path. Will be empty, if the path does not end with a proper extension. <br /></td></tr>
<tr class="separator:ac9da600c89d6cc82029ce57e551faadd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af82a5a491fea15820ff763062eda2532"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de7/classez_path_utils.htm#af82a5a491fea15820ff763062eda2532">GetFileName</a> (const char *szPath, const char *szPathEnd=<a class="el" href="../../d9/d32/classez_unicode_utils.htm#a580463d2f8474b7119639fa86104cb93">ezUnicodeUtils::GetMaxStringEnd</a>&lt; char &gt;())</td></tr>
<tr class="memdesc:af82a5a491fea15820ff763062eda2532"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the file name of a path, excluding the path and extension.  <a href="../../d4/de7/classez_path_utils.htm#af82a5a491fea15820ff763062eda2532">More...</a><br /></td></tr>
<tr class="separator:af82a5a491fea15820ff763062eda2532"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39c0ccb77026908c282a6e251364e9fa"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de7/classez_path_utils.htm#a39c0ccb77026908c282a6e251364e9fa">GetFileNameAndExtension</a> (const char *szPath, const char *szPathEnd=<a class="el" href="../../d9/d32/classez_unicode_utils.htm#a580463d2f8474b7119639fa86104cb93">ezUnicodeUtils::GetMaxStringEnd</a>&lt; char &gt;())</td></tr>
<tr class="memdesc:a39c0ccb77026908c282a6e251364e9fa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the substring that represents the file name including the file extension.  <a href="../../d4/de7/classez_path_utils.htm#a39c0ccb77026908c282a6e251364e9fa">More...</a><br /></td></tr>
<tr class="separator:a39c0ccb77026908c282a6e251364e9fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9cedd8346a62d0555703f64302174cb3"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de7/classez_path_utils.htm#a9cedd8346a62d0555703f64302174cb3">GetFileDirectory</a> (const char *szPath, const char *szPathEnd=<a class="el" href="../../d9/d32/classez_unicode_utils.htm#a580463d2f8474b7119639fa86104cb93">ezUnicodeUtils::GetMaxStringEnd</a>&lt; char &gt;())</td></tr>
<tr class="memdesc:a9cedd8346a62d0555703f64302174cb3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the directory of the given file, which is the substring up to the last path separator.  <a href="../../d4/de7/classez_path_utils.htm#a9cedd8346a62d0555703f64302174cb3">More...</a><br /></td></tr>
<tr class="separator:a9cedd8346a62d0555703f64302174cb3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a412e0b87612623b0ca7501b25ce99d1f"><td class="memItemLeft" align="right" valign="top"><a id="a412e0b87612623b0ca7501b25ce99d1f"></a>
static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de7/classez_path_utils.htm#a412e0b87612623b0ca7501b25ce99d1f">IsAbsolutePath</a> (const char *szPath)</td></tr>
<tr class="memdesc:a412e0b87612623b0ca7501b25ce99d1f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if the given path represents an absolute path on the current OS. <br /></td></tr>
<tr class="separator:a412e0b87612623b0ca7501b25ce99d1f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad13fcc1113a5a18c0591df65bb029ff7"><td class="memItemLeft" align="right" valign="top"><a id="ad13fcc1113a5a18c0591df65bb029ff7"></a>
static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de7/classez_path_utils.htm#ad13fcc1113a5a18c0591df65bb029ff7">IsRelativePath</a> (const char *szPath)</td></tr>
<tr class="memdesc:ad13fcc1113a5a18c0591df65bb029ff7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if the given path represents a relative path on the current OS. <br /></td></tr>
<tr class="separator:ad13fcc1113a5a18c0591df65bb029ff7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a7575f0abf20fa42e1f3991b5658b31"><td class="memItemLeft" align="right" valign="top"><a id="a9a7575f0abf20fa42e1f3991b5658b31"></a>
static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de7/classez_path_utils.htm#a9a7575f0abf20fa42e1f3991b5658b31">IsRootedPath</a> (const char *szPath)</td></tr>
<tr class="memdesc:a9a7575f0abf20fa42e1f3991b5658b31"><td class="mdescLeft">&#160;</td><td class="mdescRight">A rooted path starts with a colon and then names a file-system data directory. Rooted paths are used as 'absolute' paths within the <a class="el" href="../../d4/d6b/classez_file_system.htm" title="The ezFileSystem provides high-level functionality to manage files in a virtual file system.">ezFileSystem</a>. <br /></td></tr>
<tr class="separator:a9a7575f0abf20fa42e1f3991b5658b31"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ee2bf9619a55fd48ef9565cf0d667c2"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de7/classez_path_utils.htm#a2ee2bf9619a55fd48ef9565cf0d667c2">GetRootedPathParts</a> (const char *szPath, <a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a> &amp;root, <a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a> &amp;relPath)</td></tr>
<tr class="memdesc:a2ee2bf9619a55fd48ef9565cf0d667c2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Splits the passed path into its root portion and the relative path.  <a href="../../d4/de7/classez_path_utils.htm#a2ee2bf9619a55fd48ef9565cf0d667c2">More...</a><br /></td></tr>
<tr class="separator:a2ee2bf9619a55fd48ef9565cf0d667c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f8d96653278c672edbd7c79fb91fc14"><td class="memItemLeft" align="right" valign="top"><a id="a1f8d96653278c672edbd7c79fb91fc14"></a>
static <a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de7/classez_path_utils.htm#a1f8d96653278c672edbd7c79fb91fc14">GetRootedPathRootName</a> (const char *szPath)</td></tr>
<tr class="memdesc:a1f8d96653278c672edbd7c79fb91fc14"><td class="mdescLeft">&#160;</td><td class="mdescRight">Special case of GetRootedPathParts that returns the root of the input path and discards the relative path. <br /></td></tr>
<tr class="separator:a1f8d96653278c672edbd7c79fb91fc14"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a32cd41e079e1442fe62ab1c3f35fcfd6"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="../../d4/da9/structez_result.htm">ezResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de7/classez_path_utils.htm#a32cd41e079e1442fe62ab1c3f35fcfd6">MakeValidFilename</a> (const char *szFilename, ezUInt32 replacementCharacter, <a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a> &amp;outFilename)</td></tr>
<tr class="memdesc:a32cd41e079e1442fe62ab1c3f35fcfd6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a valid filename (not path!) using the given string by replacing all disallowed characters.  <a href="../../d4/de7/classez_path_utils.htm#a32cd41e079e1442fe62ab1c3f35fcfd6">More...</a><br /></td></tr>
<tr class="separator:a32cd41e079e1442fe62ab1c3f35fcfd6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab1019f3e17caa979256e4f5d9ff7f8ed"><td class="memItemLeft" align="right" valign="top">static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de7/classez_path_utils.htm#ab1019f3e17caa979256e4f5d9ff7f8ed">IsSubPath</a> (const <a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a> &amp;sPrefixPath, const <a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a> &amp;sFullPath)</td></tr>
<tr class="memdesc:ab1019f3e17caa979256e4f5d9ff7f8ed"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether <em>sFullPath</em> starts with <em>sPrefixPath</em>.  <a href="../../d4/de7/classez_path_utils.htm#ab1019f3e17caa979256e4f5d9ff7f8ed">More...</a><br /></td></tr>
<tr class="separator:ab1019f3e17caa979256e4f5d9ff7f8ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-attribs"></a>
Static Public Attributes</h2></td></tr>
<tr class="memitem:a0ccc83d5bdb657f2f18ebcba0149a8b4"><td class="memItemLeft" align="right" valign="top"><a id="a0ccc83d5bdb657f2f18ebcba0149a8b4"></a>
static const char&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/de7/classez_path_utils.htm#a0ccc83d5bdb657f2f18ebcba0149a8b4">OsSpecificPathSeparator</a></td></tr>
<tr class="memdesc:a0ccc83d5bdb657f2f18ebcba0149a8b4"><td class="mdescLeft">&#160;</td><td class="mdescRight">The path separator used by this operating system. <br /></td></tr>
<tr class="separator:a0ccc83d5bdb657f2f18ebcba0149a8b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Contains Helper functions to work with paths. </p>
<p>Only functions that require read-only access to a string are provided here All functions that require to modify the path are provided by <a class="el" href="../../d3/d88/classez_string_builder.htm" title="ezStringBuilder is a class that is meant for creating and modifying strings.">ezStringBuilder</a>. Many functions return <a class="el" href="../../de/db8/structez_string_view.htm" title="ezStringView represent a read-only sub-string of a larger string, as it can store a dedicated string ...">ezStringView</a>'s, which will always be strict sub-strings of their input data. That allows that these functions can work without any additional memory allocations. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="adf2af941ceda31c551ed0354951e25a6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adf2af941ceda31c551ed0354951e25a6">&#9670;&nbsp;</a></span>ContainsInvalidFilenameChars()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool ezPathUtils::ContainsInvalidFilenameChars </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>szPath</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>szPathEnd</em> = <code><a class="el" href="../../d9/d32/classez_unicode_utils.htm#a580463d2f8474b7119639fa86104cb93">ezUnicodeUtils::GetMaxStringEnd</a>&lt;char&gt;()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Checks every character in the string with <a class="el" href="../../d4/de7/classez_path_utils.htm#a09bb8c0a3aeaf3074b66e26da8a919b6" title="Checks if a given character is allowed in a filename (not path!)">IsValidFilenameChar()</a> </p>
<p>This is a basic check, only because each character passes the test, it does not guarantee that the full string is a valid path. </p>
<dl class="test"><dt><b><a class="el" href="../../d4/df6/test.htm#_test000032">Test:</a></b></dt><dd>Not tested yet </dd></dl>

</div>
</div>
<a id="a9cedd8346a62d0555703f64302174cb3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9cedd8346a62d0555703f64302174cb3">&#9670;&nbsp;</a></span>GetFileDirectory()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a> ezPathUtils::GetFileDirectory </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>szPath</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>szPathEnd</em> = <code><a class="el" href="../../d9/d32/classez_unicode_utils.htm#a580463d2f8474b7119639fa86104cb93">ezUnicodeUtils::GetMaxStringEnd</a>&lt;char&gt;()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the directory of the given file, which is the substring up to the last path separator. </p>
<p>If the path already ends in a path separator, and thus points to a folder, instead of a file, the unchanged path is returned. "path/to/file" -&gt; "path/to/" "path/to/folder/" -&gt; "path/to/folder/" "filename" -&gt; "" "/file_at_root_level" -&gt; "/" </p>

</div>
</div>
<a id="af82a5a491fea15820ff763062eda2532"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af82a5a491fea15820ff763062eda2532">&#9670;&nbsp;</a></span>GetFileName()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a> ezPathUtils::GetFileName </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>szPath</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>szPathEnd</em> = <code><a class="el" href="../../d9/d32/classez_unicode_utils.htm#a580463d2f8474b7119639fa86104cb93">ezUnicodeUtils::GetMaxStringEnd</a>&lt;char&gt;()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the file name of a path, excluding the path and extension. </p>
<p>If the path already ends with a path separator, the result will be empty. </p>

</div>
</div>
<a id="a39c0ccb77026908c282a6e251364e9fa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a39c0ccb77026908c282a6e251364e9fa">&#9670;&nbsp;</a></span>GetFileNameAndExtension()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a> ezPathUtils::GetFileNameAndExtension </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>szPath</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>szPathEnd</em> = <code><a class="el" href="../../d9/d32/classez_unicode_utils.htm#a580463d2f8474b7119639fa86104cb93">ezUnicodeUtils::GetMaxStringEnd</a>&lt;char&gt;()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the substring that represents the file name including the file extension. </p>
<p>Returns an empty string, if sPath already ends in a path separator, or is empty itself. </p>

</div>
</div>
<a id="a2ee2bf9619a55fd48ef9565cf0d667c2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2ee2bf9619a55fd48ef9565cf0d667c2">&#9670;&nbsp;</a></span>GetRootedPathParts()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ezPathUtils::GetRootedPathParts </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>szPath</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a> &amp;&#160;</td>
          <td class="paramname"><em>root</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a> &amp;&#160;</td>
          <td class="paramname"><em>relPath</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Splits the passed path into its root portion and the relative path. </p>
<p>":MyRoot\file.txt" -&gt; root = "MyRoot", relPath="file.txt" ":MyRoot\folder\file.txt" -&gt; root = "MyRoot", relPath = "folder\file.txt" ":\MyRoot\folder\file.txt" -&gt; root = "MyRoot", relPath = "folder\file.txt" ":/MyRoot\folder\file.txt" -&gt; root = "MyRoot", relPath = "folder\file.txt" If the path is not rooted, then root will be an empty string and relPath is set to the full input path. </p>

</div>
</div>
<a id="ab1019f3e17caa979256e4f5d9ff7f8ed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab1019f3e17caa979256e4f5d9ff7f8ed">&#9670;&nbsp;</a></span>IsSubPath()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool ezPathUtils::IsSubPath </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a> &amp;&#160;</td>
          <td class="paramname"><em>sPrefixPath</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a> &amp;&#160;</td>
          <td class="paramname"><em>sFullPath</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Checks whether <em>sFullPath</em> starts with <em>sPrefixPath</em>. </p>
<dl class="test"><dt><b><a class="el" href="../../d4/df6/test.htm#_test000033">Test:</a></b></dt><dd>this is new </dd></dl>

</div>
</div>
<a id="a09bb8c0a3aeaf3074b66e26da8a919b6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a09bb8c0a3aeaf3074b66e26da8a919b6">&#9670;&nbsp;</a></span>IsValidFilenameChar()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool ezPathUtils::IsValidFilenameChar </td>
          <td>(</td>
          <td class="paramtype">ezUInt32&#160;</td>
          <td class="paramname"><em>character</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Checks if a given character is allowed in a filename (not path!) </p>
<dl class="test"><dt><b><a class="el" href="../../d4/df6/test.htm#_test000031">Test:</a></b></dt><dd>Not tested yet </dd></dl>

</div>
</div>
<a id="a32cd41e079e1442fe62ab1c3f35fcfd6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a32cd41e079e1442fe62ab1c3f35fcfd6">&#9670;&nbsp;</a></span>MakeValidFilename()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d4/da9/structez_result.htm">ezResult</a> ezPathUtils::MakeValidFilename </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>szFilename</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ezUInt32&#160;</td>
          <td class="paramname"><em>replacementCharacter</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a> &amp;&#160;</td>
          <td class="paramname"><em>outFilename</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a valid filename (not path!) using the given string by replacing all disallowed characters. </p>
<p>Note that path separators in the given string will be replaced as well! Asserts that replacementCharacter is not allowed itself. Fails for empty strings. </p><dl class="section see"><dt>See also</dt><dd><a class="el" href="../../d4/de7/classez_path_utils.htm#a09bb8c0a3aeaf3074b66e26da8a919b6" title="Checks if a given character is allowed in a filename (not path!)">IsValidFilenameChar()</a> </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Strings/<a class="el" href="../../dd/d82/_path_utils_8h_source.htm">PathUtils.h</a></li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Strings/Implementation/PathUtils.cpp</li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Strings/Implementation/<a class="el" href="../../d1/d9d/_path_utils__inl_8h_source.htm">PathUtils_inl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d4/de7/classez_path_utils.htm">ezPathUtils</a></li>
    <li class="footer">Generated on Tue Jun 8 2021 21:43:20 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
