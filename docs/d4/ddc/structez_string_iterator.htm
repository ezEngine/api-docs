<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: ezStringIterator&lt; STRING &gt; Struct Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 21.6</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search','.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d4/ddc/structez_string_iterator.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="../../d2/dcb/structez_string_iterator-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ezStringIterator&lt; STRING &gt; Struct Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>STL forward iterator used by all string classes. Iterates over unicode characters. The iterator starts at the first character of the string and ends at the address beyond the last character of the string.  
 <a href="../../d4/ddc/structez_string_iterator.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../de/d0b/_string_iterator_8h_source.htm">StringIterator.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a60a31dc481b15b0a9b26cc92abc68b2f"><td class="memItemLeft" align="right" valign="top"><a id="a60a31dc481b15b0a9b26cc92abc68b2f"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>iterator_category</b> = std::bidirectional_iterator_tag</td></tr>
<tr class="separator:a60a31dc481b15b0a9b26cc92abc68b2f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4db7a83d4c0da78e4e70cefb93f01da8"><td class="memItemLeft" align="right" valign="top"><a id="a4db7a83d4c0da78e4e70cefb93f01da8"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>value_type</b> = ezUInt32</td></tr>
<tr class="separator:a4db7a83d4c0da78e4e70cefb93f01da8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18fdce57decbf16bca912b2ab4d46142"><td class="memItemLeft" align="right" valign="top"><a id="a18fdce57decbf16bca912b2ab4d46142"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>difference_type</b> = ptrdiff_t</td></tr>
<tr class="separator:a18fdce57decbf16bca912b2ab4d46142"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f7e62caf25641f897fbba1af491ec40"><td class="memItemLeft" align="right" valign="top"><a id="a5f7e62caf25641f897fbba1af491ec40"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>pointer</b> = const char *</td></tr>
<tr class="separator:a5f7e62caf25641f897fbba1af491ec40"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7162211f623c011d440d90d142f3bf12"><td class="memItemLeft" align="right" valign="top"><a id="a7162211f623c011d440d90d142f3bf12"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>reference</b> = ezUInt32</td></tr>
<tr class="separator:a7162211f623c011d440d90d142f3bf12"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a8ace1e511bb4609c4f2ef1a1edd3fc36"><td class="memItemLeft" align="right" valign="top"><a id="a8ace1e511bb4609c4f2ef1a1edd3fc36"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>EZ_DECLARE_POD_TYPE</b> ()</td></tr>
<tr class="separator:a8ace1e511bb4609c4f2ef1a1edd3fc36"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a49743823a9968bda7407b699d0825647"><td class="memItemLeft" align="right" valign="top"><a id="a49743823a9968bda7407b699d0825647"></a>
EZ_ALWAYS_INLINE&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/ddc/structez_string_iterator.htm#a49743823a9968bda7407b699d0825647">ezStringIterator</a> ()</td></tr>
<tr class="memdesc:a49743823a9968bda7407b699d0825647"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructs an invalid iterator. <br /></td></tr>
<tr class="separator:a49743823a9968bda7407b699d0825647"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a704c733c6c93226d57631cbe3af3dcfa"><td class="memItemLeft" align="right" valign="top"><a id="a704c733c6c93226d57631cbe3af3dcfa"></a>
EZ_FORCE_INLINE&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/ddc/structez_string_iterator.htm#a704c733c6c93226d57631cbe3af3dcfa">ezStringIterator</a> (const <a class="el" href="../../dd/d69/structez_string_base.htm">ezStringBase</a>&lt; STRING &gt; &amp;string, bool bIsEnd)</td></tr>
<tr class="memdesc:a704c733c6c93226d57631cbe3af3dcfa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructs either a begin or end iterator for the given string. <br /></td></tr>
<tr class="separator:a704c733c6c93226d57631cbe3af3dcfa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b4330176b80bbda0cb4cbcc576c365c"><td class="memItemLeft" align="right" valign="top"><a id="a0b4330176b80bbda0cb4cbcc576c365c"></a>
EZ_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/ddc/structez_string_iterator.htm#a0b4330176b80bbda0cb4cbcc576c365c">IsValid</a> () const</td></tr>
<tr class="memdesc:a0b4330176b80bbda0cb4cbcc576c365c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether this iterator points to a valid element. Invalid iterators either point to end(m_String) or were never initialized. <br /></td></tr>
<tr class="separator:a0b4330176b80bbda0cb4cbcc576c365c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab633c7f3ca5a003d6eb19d6e06fbeef4"><td class="memItemLeft" align="right" valign="top"><a id="ab633c7f3ca5a003d6eb19d6e06fbeef4"></a>
EZ_ALWAYS_INLINE ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/ddc/structez_string_iterator.htm#ab633c7f3ca5a003d6eb19d6e06fbeef4">GetCharacter</a> () const</td></tr>
<tr class="memdesc:ab633c7f3ca5a003d6eb19d6e06fbeef4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the currently pointed to character in Utf32 encoding. <br /></td></tr>
<tr class="separator:ab633c7f3ca5a003d6eb19d6e06fbeef4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d4ba07049169523550ab42570276e72"><td class="memItemLeft" align="right" valign="top"><a id="a4d4ba07049169523550ab42570276e72"></a>
EZ_ALWAYS_INLINE ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/ddc/structez_string_iterator.htm#a4d4ba07049169523550ab42570276e72">Value</a> () const</td></tr>
<tr class="memdesc:a4d4ba07049169523550ab42570276e72"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the currently pointed to character in Utf32 encoding. <br /></td></tr>
<tr class="separator:a4d4ba07049169523550ab42570276e72"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae4d5db1b7e811d3f97453a9e3ca34d7b"><td class="memItemLeft" align="right" valign="top"><a id="ae4d5db1b7e811d3f97453a9e3ca34d7b"></a>
EZ_ALWAYS_INLINE const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/ddc/structez_string_iterator.htm#ae4d5db1b7e811d3f97453a9e3ca34d7b">GetData</a> () const</td></tr>
<tr class="memdesc:ae4d5db1b7e811d3f97453a9e3ca34d7b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the address the iterator currently points to. <br /></td></tr>
<tr class="separator:ae4d5db1b7e811d3f97453a9e3ca34d7b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a101aef1c65880b16abed43733bd71449"><td class="memItemLeft" align="right" valign="top"><a id="a101aef1c65880b16abed43733bd71449"></a>
EZ_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/ddc/structez_string_iterator.htm#a101aef1c65880b16abed43733bd71449">operator==</a> (const <a class="el" href="../../d4/ddc/structez_string_iterator.htm">ezStringIterator</a> &amp;it2) const</td></tr>
<tr class="memdesc:a101aef1c65880b16abed43733bd71449"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether the two iterators point to the same element. <br /></td></tr>
<tr class="separator:a101aef1c65880b16abed43733bd71449"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae4978d3f15da30f063a08b099fc12dd2"><td class="memItemLeft" align="right" valign="top"><a id="ae4978d3f15da30f063a08b099fc12dd2"></a>
EZ_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/ddc/structez_string_iterator.htm#ae4978d3f15da30f063a08b099fc12dd2">operator!=</a> (const <a class="el" href="../../d4/ddc/structez_string_iterator.htm">ezStringIterator</a> &amp;it2) const</td></tr>
<tr class="memdesc:ae4978d3f15da30f063a08b099fc12dd2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether the two iterators point to the same element. <br /></td></tr>
<tr class="separator:ae4978d3f15da30f063a08b099fc12dd2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad80c67ee340cf695126da53af8aa9cb9"><td class="memItemLeft" align="right" valign="top"><a id="ad80c67ee340cf695126da53af8aa9cb9"></a>
EZ_ALWAYS_INLINE ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/ddc/structez_string_iterator.htm#ad80c67ee340cf695126da53af8aa9cb9">operator*</a> () const</td></tr>
<tr class="memdesc:ad80c67ee340cf695126da53af8aa9cb9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the currently pointed to character in Utf32 encoding. <br /></td></tr>
<tr class="separator:ad80c67ee340cf695126da53af8aa9cb9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a020a34e2e9d5df1834af90188bdb5402"><td class="memItemLeft" align="right" valign="top"><a id="a020a34e2e9d5df1834af90188bdb5402"></a>
EZ_ALWAYS_INLINE const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/ddc/structez_string_iterator.htm#a020a34e2e9d5df1834af90188bdb5402">operator-&gt;</a> () const</td></tr>
<tr class="memdesc:a020a34e2e9d5df1834af90188bdb5402"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the address the iterator currently points to. <br /></td></tr>
<tr class="separator:a020a34e2e9d5df1834af90188bdb5402"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af03601755be8c6e05e9d265b56995174"><td class="memItemLeft" align="right" valign="top"><a id="af03601755be8c6e05e9d265b56995174"></a>
EZ_ALWAYS_INLINE ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/ddc/structez_string_iterator.htm#af03601755be8c6e05e9d265b56995174">Advance</a> ()</td></tr>
<tr class="memdesc:af03601755be8c6e05e9d265b56995174"><td class="mdescLeft">&#160;</td><td class="mdescRight">Advances the iterated to the next character, same as operator++, but returns how many bytes were consumed in the source string. <br /></td></tr>
<tr class="separator:af03601755be8c6e05e9d265b56995174"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00becac34959fcea4e1c81a5b0153054"><td class="memItemLeft" align="right" valign="top"><a id="a00becac34959fcea4e1c81a5b0153054"></a>
EZ_ALWAYS_INLINE <a class="el" href="../../d4/ddc/structez_string_iterator.htm">ezStringIterator</a>&lt; STRING &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/ddc/structez_string_iterator.htm#a00becac34959fcea4e1c81a5b0153054">operator++</a> ()</td></tr>
<tr class="memdesc:a00becac34959fcea4e1c81a5b0153054"><td class="mdescLeft">&#160;</td><td class="mdescRight">Move to the next Utf8 character. <br /></td></tr>
<tr class="separator:a00becac34959fcea4e1c81a5b0153054"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2825e3b59b27f7e2d9b3865b4d1f8d84"><td class="memItemLeft" align="right" valign="top"><a id="a2825e3b59b27f7e2d9b3865b4d1f8d84"></a>
EZ_ALWAYS_INLINE <a class="el" href="../../d4/ddc/structez_string_iterator.htm">ezStringIterator</a>&lt; STRING &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/ddc/structez_string_iterator.htm#a2825e3b59b27f7e2d9b3865b4d1f8d84">operator--</a> ()</td></tr>
<tr class="memdesc:a2825e3b59b27f7e2d9b3865b4d1f8d84"><td class="mdescLeft">&#160;</td><td class="mdescRight">Move to the previous Utf8 character. <br /></td></tr>
<tr class="separator:a2825e3b59b27f7e2d9b3865b4d1f8d84"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69b9359f2ab04ceafdbef82facbd6a21"><td class="memItemLeft" align="right" valign="top"><a id="a69b9359f2ab04ceafdbef82facbd6a21"></a>
EZ_ALWAYS_INLINE <a class="el" href="../../d4/ddc/structez_string_iterator.htm">ezStringIterator</a>&lt; STRING &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/ddc/structez_string_iterator.htm#a69b9359f2ab04ceafdbef82facbd6a21">operator++</a> (int)</td></tr>
<tr class="memdesc:a69b9359f2ab04ceafdbef82facbd6a21"><td class="mdescLeft">&#160;</td><td class="mdescRight">Move to the next Utf8 character. <br /></td></tr>
<tr class="separator:a69b9359f2ab04ceafdbef82facbd6a21"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c15bf5ac3e6521bf8dc4255326b0c4b"><td class="memItemLeft" align="right" valign="top"><a id="a9c15bf5ac3e6521bf8dc4255326b0c4b"></a>
EZ_ALWAYS_INLINE <a class="el" href="../../d4/ddc/structez_string_iterator.htm">ezStringIterator</a>&lt; STRING &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/ddc/structez_string_iterator.htm#a9c15bf5ac3e6521bf8dc4255326b0c4b">operator--</a> (int)</td></tr>
<tr class="memdesc:a9c15bf5ac3e6521bf8dc4255326b0c4b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Move to the previous Utf8 character. <br /></td></tr>
<tr class="separator:a9c15bf5ac3e6521bf8dc4255326b0c4b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00303942463eb0687a28f74e09721a01"><td class="memItemLeft" align="right" valign="top"><a id="a00303942463eb0687a28f74e09721a01"></a>
EZ_FORCE_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/ddc/structez_string_iterator.htm#a00303942463eb0687a28f74e09721a01">operator+=</a> (difference_type d)</td></tr>
<tr class="memdesc:a00303942463eb0687a28f74e09721a01"><td class="mdescLeft">&#160;</td><td class="mdescRight">Advances the iterator forwards by d characters. Does not move it beyond the range's end. <br /></td></tr>
<tr class="separator:a00303942463eb0687a28f74e09721a01"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe1d36dde05363e72ca549212e5dc5d9"><td class="memItemLeft" align="right" valign="top"><a id="afe1d36dde05363e72ca549212e5dc5d9"></a>
EZ_FORCE_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/ddc/structez_string_iterator.htm#afe1d36dde05363e72ca549212e5dc5d9">operator-=</a> (difference_type d)</td></tr>
<tr class="memdesc:afe1d36dde05363e72ca549212e5dc5d9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Moves the iterator backwards by d characters. Does not move it beyond the range's start. <br /></td></tr>
<tr class="separator:afe1d36dde05363e72ca549212e5dc5d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae9478ec32c510b52931100ddd04dd987"><td class="memItemLeft" align="right" valign="top"><a id="ae9478ec32c510b52931100ddd04dd987"></a>
EZ_ALWAYS_INLINE <a class="el" href="../../d4/ddc/structez_string_iterator.htm">ezStringIterator</a>&lt; STRING &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/ddc/structez_string_iterator.htm#ae9478ec32c510b52931100ddd04dd987">operator+</a> (difference_type d) const</td></tr>
<tr class="memdesc:ae9478ec32c510b52931100ddd04dd987"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an iterator that is advanced forwards by d characters. <br /></td></tr>
<tr class="separator:ae9478ec32c510b52931100ddd04dd987"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adfdf9dd60252bdca6cc0378b13acd614"><td class="memItemLeft" align="right" valign="top"><a id="adfdf9dd60252bdca6cc0378b13acd614"></a>
EZ_ALWAYS_INLINE <a class="el" href="../../d4/ddc/structez_string_iterator.htm">ezStringIterator</a>&lt; STRING &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/ddc/structez_string_iterator.htm#adfdf9dd60252bdca6cc0378b13acd614">operator-</a> (difference_type d) const</td></tr>
<tr class="memdesc:adfdf9dd60252bdca6cc0378b13acd614"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an iterator that is advanced backwards by d characters. <br /></td></tr>
<tr class="separator:adfdf9dd60252bdca6cc0378b13acd614"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9393716e9b811b4e7cc4f630fc6b78ed"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/ddc/structez_string_iterator.htm#a9393716e9b811b4e7cc4f630fc6b78ed">SetCurrentPosition</a> (const char *szCurPos)</td></tr>
<tr class="memdesc:a9393716e9b811b4e7cc4f630fc6b78ed"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allows to set the 'current' iteration position to a different value.  <a href="../../d4/ddc/structez_string_iterator.htm#a9393716e9b811b4e7cc4f630fc6b78ed">More...</a><br /></td></tr>
<tr class="separator:a9393716e9b811b4e7cc4f630fc6b78ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a93c388e739d5f5c5c07fef9526473637"><td class="memItemLeft" align="right" valign="top"><a id="a93c388e739d5f5c5c07fef9526473637"></a>
const <a class="el" href="../../dd/d69/structez_string_base.htm">ezStringBase</a>&lt; STRING &gt; *&#160;</td><td class="memItemRight" valign="bottom"><b>m_String</b></td></tr>
<tr class="separator:a93c388e739d5f5c5c07fef9526473637"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6498a147f59b700581e8c5f3bda61699"><td class="memItemLeft" align="right" valign="top"><a id="a6498a147f59b700581e8c5f3bda61699"></a>
const char *&#160;</td><td class="memItemRight" valign="bottom"><b>m_pElement</b></td></tr>
<tr class="separator:a6498a147f59b700581e8c5f3bda61699"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;class STRING&gt;<br />
struct ezStringIterator&lt; STRING &gt;</h3>

<p>STL forward iterator used by all string classes. Iterates over unicode characters. The iterator starts at the first character of the string and ends at the address beyond the last character of the string. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a9393716e9b811b4e7cc4f630fc6b78ed"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9393716e9b811b4e7cc4f630fc6b78ed">&#9670;&nbsp;</a></span>SetCurrentPosition()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;class STRING &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="../../d4/ddc/structez_string_iterator.htm">ezStringIterator</a>&lt; STRING &gt;::SetCurrentPosition </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>szCurPos</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Allows to set the 'current' iteration position to a different value. </p>
<p>Must be between the iterators start and end range. </p>

</div>
</div>
<hr/>The documentation for this struct was generated from the following file:<ul>
<li>Code/Engine/Foundation/Strings/Implementation/<a class="el" href="../../de/d0b/_string_iterator_8h_source.htm">StringIterator.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d4/ddc/structez_string_iterator.htm">ezStringIterator</a></li>
    <li class="footer">Generated on Tue Jun 8 2021 14:34:08 for ezEngine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1 </li>
  </ul>
</div>
</body>
</html>
