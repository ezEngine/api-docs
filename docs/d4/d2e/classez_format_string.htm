<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: ezFormatString Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 22.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d4/d2e/classez_format_string.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-static-methods">Static Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="../../d2/dc4/classez_format_string-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ezFormatString Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Implements formating of strings with placeholders and formatting options.  
 <a href="../../d4/d2e/classez_format_string.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../df/da3/_format_string_8h_source.htm">FormatString.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for ezFormatString:</div>
<div class="dyncontent">
<div class="center"><img src="../../d0/d97/classez_format_string__inherit__graph.png" border="0" usemap="#ez_format_string_inherit__map" alt="Inheritance graph"/></div>
<map name="ez_format_string_inherit__map" id="ez_format_string_inherit__map">
<area shape="rect" title="Implements formating of strings with placeholders and formatting options." alt="" coords="20,5,141,32"/>
<area shape="rect" href="../../df/d42/classez_format_string_impl.htm" title=" " alt="" coords="5,80,156,121"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a7bd745c3deaeafaf1be1c2d96c7a8376"><td class="memItemLeft" align="right" valign="top"><a id="a7bd745c3deaeafaf1be1c2d96c7a8376"></a>
EZ_ALWAYS_INLINE&#160;</td><td class="memItemRight" valign="bottom"><b>ezFormatString</b> (const char *szString)</td></tr>
<tr class="separator:a7bd745c3deaeafaf1be1c2d96c7a8376"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaceba2e151d757a1a9d373afd1d8a770"><td class="memItemLeft" align="right" valign="top"><a id="aaceba2e151d757a1a9d373afd1d8a770"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>ezFormatString</b> (const <a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a> &amp;s)</td></tr>
<tr class="separator:aaceba2e151d757a1a9d373afd1d8a770"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae69b97b52740df45adcca6725933be98"><td class="memItemLeft" align="right" valign="top">virtual const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d2e/classez_format_string.htm#ae69b97b52740df45adcca6725933be98">GetText</a> (<a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a> &amp;) const</td></tr>
<tr class="memdesc:ae69b97b52740df45adcca6725933be98"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generates the formatted text. Make sure to only call this function once and only when the formatted string is really needed.  <a href="../../d4/d2e/classez_format_string.htm#ae69b97b52740df45adcca6725933be98">More...</a><br /></td></tr>
<tr class="separator:ae69b97b52740df45adcca6725933be98"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb0cd263e7afb55eaf06d44581dc317c"><td class="memItemLeft" align="right" valign="top"><a id="acb0cd263e7afb55eaf06d44581dc317c"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsEmpty</b> () const</td></tr>
<tr class="separator:acb0cd263e7afb55eaf06d44581dc317c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-static-methods"></a>
Static Protected Member Functions</h2></td></tr>
<tr class="memitem:ae1d70872df2543a853a079816ea36528"><td class="memItemLeft" align="right" valign="top"><a id="ae1d70872df2543a853a079816ea36528"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><b>SBAppendView</b> (<a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a> &amp;sb, const <a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a> &amp;sub)</td></tr>
<tr class="separator:ae1d70872df2543a853a079816ea36528"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69ffe86e5ca0af27b2c9025eded8fa72"><td class="memItemLeft" align="right" valign="top"><a id="a69ffe86e5ca0af27b2c9025eded8fa72"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><b>SBClear</b> (<a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a> &amp;sb)</td></tr>
<tr class="separator:a69ffe86e5ca0af27b2c9025eded8fa72"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55833241058cda77f48d2623a1e2a69d"><td class="memItemLeft" align="right" valign="top"><a id="a55833241058cda77f48d2623a1e2a69d"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><b>SBAppendChar</b> (<a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a> &amp;sb, ezUInt32 uiChar)</td></tr>
<tr class="separator:a55833241058cda77f48d2623a1e2a69d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2aa5ddd369dd8c5a354872167ae46732"><td class="memItemLeft" align="right" valign="top"><a id="a2aa5ddd369dd8c5a354872167ae46732"></a>
static const char *&#160;</td><td class="memItemRight" valign="bottom"><b>SBReturn</b> (<a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a> &amp;sb)</td></tr>
<tr class="separator:a2aa5ddd369dd8c5a354872167ae46732"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:ab6c9b4fb8a81491d8b0046c9b7ffeef6"><td class="memItemLeft" align="right" valign="top"><a id="ab6c9b4fb8a81491d8b0046c9b7ffeef6"></a>
const char *&#160;</td><td class="memItemRight" valign="bottom"><b>m_szString</b></td></tr>
<tr class="separator:ab6c9b4fb8a81491d8b0046c9b7ffeef6"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Implements formating of strings with placeholders and formatting options. </p>
<p><a class="el" href="../../d4/d2e/classez_format_string.htm" title="Implements formating of strings with placeholders and formatting options.">ezFormatString</a> can be used anywhere where a string should be formatable when passing it into a function. Good examples are <a class="el" href="../../d3/d88/classez_string_builder.htm#af2cccf2c238ff48182428aa9464a615e" title="Replaces this with a formatted string. Uses &#39;{}&#39; formatting placeholders, see ezFormatString for deta...">ezStringBuilder::Format()</a> or <a class="el" href="../../dc/d9e/classez_log.htm#ab4eb23920b9dea5106e951ceaab74322" title="Status information that is important.">ezLog::Info()</a>.</p>
<p>A function taking an <a class="el" href="../../d4/d2e/classez_format_string.htm" title="Implements formating of strings with placeholders and formatting options.">ezFormatString</a> can internally call <a class="el" href="../../d4/d2e/classez_format_string.htm#ae69b97b52740df45adcca6725933be98" title="Generates the formatted text. Make sure to only call this function once and only when the formatted s...">ezFormatString::GetText()</a> to retrieve he formatted result. When calling such a function, one must wrap the parameter into 'ezFmt' to enable formatting options, example: void MyFunc(const ezFormatString&amp; text); MyFunc(ezFmt("Cool Story {}", "Bro"));</p>
<p>To provide more convenience, one can add a template-function overload like this: template &lt;typename... ARGS&gt; void MyFunc(const char* szFormat, ARGS&amp;&amp;... args) { MyFunc(ezFormatStringImpl&lt;ARGS...&gt;(szFormat, std::forward&lt;ARGS&gt;(args)...)); }</p>
<p>This allows to call MyFunc() without the 'ezFmt' wrapper.</p>
<p>=== Formatting ===</p>
<p>Placeholders for variables are specified using '{}'. These may use numbers from 0 to 9, ie. {0}, {3}, {2}, etc. which allows to change the order or insert duplicates. If no number is provided, each {} instance represents the next argument.</p>
<p>To specify special formatting, wrap the argument into an ezArgXY call: <a class="el" href="../../d6/d31/structez_arg_c.htm">ezArgC</a> - for characters <a class="el" href="../../dc/d4b/structez_arg_i.htm">ezArgI</a> - for integer formatting <a class="el" href="../../d5/d4f/structez_arg_u.htm">ezArgU</a> - for unsigned integer formatting (e.g. HEX) <a class="el" href="../../d7/dfa/structez_arg_f.htm">ezArgF</a> - for floating point formatting <a class="el" href="../../d7/d5f/structez_arg_p.htm">ezArgP</a> - for pointer formatting <a class="el" href="../../d1/d54/structez_arg_date_time.htm">ezArgDateTime</a> - for <a class="el" href="../../df/d59/classez_date_time.htm" title="The ezDateTime class can be used to convert ezTimestamp into a human readable form.">ezDateTime</a> formatting options ezArgErrorCode - for Windows error code formatting <a class="el" href="../../de/d56/structez_arg_human_readable.htm" title="Formats a given number such that it will be in format [0, base){suffix} with suffix representing a po...">ezArgHumanReadable</a> - for shortening numbers with common abbreviations <a class="el" href="../../d7/dcf/structez_arg_file_size.htm">ezArgFileSize</a> - for representing file sizes</p>
<p>Example: <a class="el" href="../../d3/d88/classez_string_builder.htm#af2cccf2c238ff48182428aa9464a615e" title="Replaces this with a formatted string. Uses &#39;{}&#39; formatting placeholders, see ezFormatString for deta...">ezStringBuilder::Format</a>("HEX: {}", <a class="el" href="../../d5/d4f/structez_arg_u.htm">ezArgU</a>(1337, 8 /*width*&zwj;/, true /*pad with zeros*&zwj;/, 16 /*base16*&zwj;/, true/*upper case*&zwj;/));</p>
<p>Arbitrary other types can support special formatting even without an ezArgXY call. E.g. <a class="el" href="../../d3/d90/structez_time.htm" title="The time class encapsulates a double value storing the time in seconds.">ezTime</a> and <a class="el" href="../../db/d6f/classez_angle.htm" title="Float wrapper struct for a safe usage and conversions of angles.">ezAngle</a> do special formatting. ezArgXY calls are only necessary if formatting options are needed for a specific formatting should be enforced (e.g. ezArgErrorCode would otherwise just use uint32 formatting).</p>
<p>To implement custom formatting see the various free standing 'BuildString' functions. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="ae69b97b52740df45adcca6725933be98"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae69b97b52740df45adcca6725933be98">&#9670;&nbsp;</a></span>GetText()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual const char* ezFormatString::GetText </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a> &amp;&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Generates the formatted text. Make sure to only call this function once and only when the formatted string is really needed. </p>
<p>Requires an <a class="el" href="../../d3/d88/classez_string_builder.htm" title="ezStringBuilder is a class that is meant for creating and modifying strings.">ezStringBuilder</a> as storage, ie. POTENTIALLY writes the formatted text into it. However, if no formatting is required, it may not touch the string builder at all and just return a string directly.</p>
<dl class="section note"><dt>Note</dt><dd>Do not assume that the result is stored in <em>sb</em>. Always only use the return value. The string builder is only used when necessary. </dd></dl>

<p>Reimplemented in <a class="el" href="../../df/d42/classez_format_string_impl.htm#aa1ce493e065577fb06ce1e9effcbe602">ezFormatStringImpl&lt; ARGS &gt;</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Strings/<a class="el" href="../../df/da3/_format_string_8h_source.htm">FormatString.h</a></li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Strings/Implementation/FormatString.cpp</li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d4/d2e/classez_format_string.htm">ezFormatString</a></li>
    <li class="footer">Generated on Fri Nov 18 2022 14:48:06 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
