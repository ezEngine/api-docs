<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/RendererFoundation/Resources/DynamicBuffer.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">ezEngine<span id="projectnumber">&#160;Release 25.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function() { init_codefold(1); });
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('d4/dc1/_dynamic_buffer_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">DynamicBuffer.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="preprocessor">#include &lt;RendererFoundation/Descriptors/Descriptors.h&gt;</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span> </div>
<div class="foldopen" id="foldopen00012" data-start="{" data-end="};">
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno"><a class="line" href="../../db/dd6/classez_g_a_l_dynamic_buffer.htm">   12</a></span><span class="keyword">class </span>EZ_RENDERERFOUNDATION_DLL <a class="code hl_class" href="../../db/dd6/classez_g_a_l_dynamic_buffer.htm">ezGALDynamicBuffer</a></div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span>{</div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span>  <span class="keywordtype">void</span> Clear();</div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span> </div>
<div class="foldopen" id="foldopen00018" data-start="{" data-end="};">
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno"><a class="line" href="../../d1/dc7/structez_g_a_l_dynamic_buffer_1_1_allocate_flags.htm">   18</a></span>  <span class="keyword">struct </span><a class="code hl_struct" href="../../d1/dc7/structez_g_a_l_dynamic_buffer_1_1_allocate_flags.htm">AllocateFlags</a></div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span>  {</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span>    <span class="keyword">using </span>StorageType = ezUInt32;</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span> </div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span>    <span class="keyword">enum</span> Enum</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span>    {</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span>      None,</div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span>      ZeroFill = EZ_BIT(0),</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span> </div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span>      Default = None</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span>    };</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span> </div>
<div class="foldopen" id="foldopen00030" data-start="{" data-end="};">
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno"><a class="line" href="../../de/d19/structez_g_a_l_dynamic_buffer_1_1_allocate_flags_1_1_bits.htm">   30</a></span>    <span class="keyword">struct </span><a class="code hl_struct" href="../../de/d19/structez_g_a_l_dynamic_buffer_1_1_allocate_flags_1_1_bits.htm">Bits</a></div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span>    {</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span>      StorageType ZeroFill : 1;</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>    };</div>
</div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span>  };</div>
</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span> </div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div>
<div class="foldopen" id="foldopen00041" data-start="{" data-end="}">
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno"><a class="line" href="../../db/dd6/classez_g_a_l_dynamic_buffer.htm#aa43763f190c10e418c06745f1c3b282f">   41</a></span>  ezUInt32 <a class="code hl_function" href="../../db/dd6/classez_g_a_l_dynamic_buffer.htm#aa43763f190c10e418c06745f1c3b282f">Allocate</a>(<span class="keyword">const</span> U&amp; userData, ezUInt32 uiCount = 1, <a class="code hl_struct" href="../../d1/dec/structez_bitflags.htm">ezBitflags&lt;AllocateFlags&gt;</a> allocateFlags = AllocateFlags::None)</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>  {</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span>    <span class="keyword">static_assert</span>(<span class="keyword">sizeof</span>(U) &lt;= <span class="keyword">sizeof</span>(ezUInt64), <span class="stringliteral">&quot;userData is too large&quot;</span>);</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>    ezUInt64 uiUserData = 0;</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>    *<span class="keyword">reinterpret_cast&lt;</span>U*<span class="keyword">&gt;</span>(&amp;uiUserData) = userData;</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span> </div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span>    <span class="keywordflow">return</span> Allocate(uiUserData, uiCount, allocateFlags);</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>  }</div>
</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span> </div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>  <span class="keywordtype">void</span> Deallocate(ezUInt32 uiOffset);</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span> </div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="foldopen" id="foldopen00056" data-start="{" data-end="}">
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno"><a class="line" href="../../db/dd6/classez_g_a_l_dynamic_buffer.htm#a49b73ab389a7b3873aa08c24aa3c3104">   56</a></span>  <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;T&gt;</a> <a class="code hl_function" href="../../db/dd6/classez_g_a_l_dynamic_buffer.htm#a49b73ab389a7b3873aa08c24aa3c3104">MapForWriting</a>(ezUInt32 uiOffset)</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>  {</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>    ezUInt32 uiCount = 0;</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>    <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezByteArrayPtr</a> byteData = MapForWriting(uiOffset, uiCount);</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span>    EZ_ASSERT_DEBUG(<span class="keyword">sizeof</span>(T) == m_Desc.m_uiStructSize, <span class="stringliteral">&quot;Invalid Type&quot;</span>);</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>    <span class="keywordflow">return</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;T&gt;</a>(<span class="keyword">reinterpret_cast&lt;</span>T*<span class="keyword">&gt;</span>(byteData.<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#aba4e7585190f337c6428f2fe25828b8a">GetPtr</a>()), uiCount);</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>  }</div>
</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span> </div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>  <span class="keywordtype">void</span> UploadChangesForNextFrame();</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span> </div>
<div class="foldopen" id="foldopen00067" data-start="{" data-end="};">
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno"><a class="line" href="../../d6/da6/structez_g_a_l_dynamic_buffer_1_1_changed_allocation.htm">   67</a></span>  <span class="keyword">struct </span><a class="code hl_struct" href="../../d6/da6/structez_g_a_l_dynamic_buffer_1_1_changed_allocation.htm">ChangedAllocation</a></div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>  {</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>    ezUInt64 m_uiUserData = 0;</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>    ezUInt32 m_uiNewOffset = 0;</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>  };</div>
</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span> </div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>  <span class="keywordtype">void</span> RunCompactionSteps(<a class="code hl_class" href="../../d2/d4f/classez_dynamic_array.htm">ezDynamicArray&lt;ChangedAllocation&gt;</a>&amp; out_changedAllocations, ezUInt32 uiMaxSteps = 16);</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span> </div>
<div class="foldopen" id="foldopen00083" data-start="{" data-end="}">
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno"><a class="line" href="../../db/dd6/classez_g_a_l_dynamic_buffer.htm#ad2bad02053b5f09f2dd9bcf3a855d1b0">   83</a></span>  <span class="keyword">const</span> <a class="code hl_class" href="../../d3/d59/classez_g_a_l_buffer_handle.htm">ezGALBufferHandle</a>&amp; <a class="code hl_function" href="../../db/dd6/classez_g_a_l_dynamic_buffer.htm#ad2bad02053b5f09f2dd9bcf3a855d1b0">GetBufferForRendering</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span><span class="keyword">  </span>{</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>    <span class="keywordflow">return</span> m_hBufferForRendering;</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>  }</div>
</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span> </div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>  <span class="keyword">friend</span> <span class="keyword">class </span><a class="code hl_class" href="../../dc/d4d/classez_memory_utils.htm">ezMemoryUtils</a>;</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>  <span class="keyword">friend</span> <span class="keyword">class </span><a class="code hl_class" href="../../d2/d09/classez_g_a_l_device.htm">ezGALDevice</a>;</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span> </div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>  <a class="code hl_class" href="../../db/dd6/classez_g_a_l_dynamic_buffer.htm">ezGALDynamicBuffer</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>  <a class="code hl_class" href="../../db/dd6/classez_g_a_l_dynamic_buffer.htm">~ezGALDynamicBuffer</a>();</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span> </div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>  <span class="keywordtype">void</span> Initialize(<span class="keyword">const</span> <a class="code hl_struct" href="../../d1/da8/structez_g_a_l_buffer_creation_description.htm">ezGALBufferCreationDescription</a>&amp; desc, <a class="code hl_class" href="../../d9/d18/classez_string_view.htm">ezStringView</a> sDebugName);</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>  <span class="keywordtype">void</span> Deinitialize();</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span> </div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span>  ezUInt32 Allocate(ezUInt64 uiUserData, ezUInt32 uiCount, <a class="code hl_struct" href="../../d1/dec/structez_bitflags.htm">ezBitflags&lt;AllocateFlags&gt;</a> allocateFlags);</div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>  <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezByteArrayPtr</a> MapForWriting(ezUInt32 uiOffset, ezUInt32&amp; out_uiCount);</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span> </div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>  <span class="keywordtype">void</span> Resize(ezUInt32 uiNewSize);</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span> </div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>  <span class="keywordtype">void</span> SwapBuffers()</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>  {</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>    m_hBufferForRendering = m_hBufferForUpload;</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>  }</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span> </div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>  <a class="code hl_class" href="../../dd/dbe/classez_mutex.htm">ezMutex</a> m_Mutex;</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span> </div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span>  <a class="code hl_class" href="../../d2/d4f/classez_dynamic_array.htm">ezDynamicArray&lt;ezUInt8, ezAlignedAllocatorWrapper&gt;</a> m_Data;</div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span>  ezUInt32 m_uiNextOffset = 0;</div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span> </div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>  <span class="keyword">struct </span>Allocation</div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span>  {</div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span>    ezUInt64 m_uiUserData = 0;</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>    ezUInt32 m_uiCount = 0;</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>  };</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span> </div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>  <a class="code hl_class" href="../../d1/d79/classez_map.htm">ezMap&lt;ezUInt32, Allocation&gt;</a> m_Allocations;</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span> </div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span>  <a class="code hl_class" href="../../d2/d4f/classez_dynamic_array.htm">ezDynamicArray&lt;ezGAL::ModifiedRange&gt;</a> m_FreeRanges;</div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>  ezGAL::ModifiedRange m_DirtyRange;</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span> </div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span>  <a class="code hl_struct" href="../../d1/da8/structez_g_a_l_buffer_creation_description.htm">ezGALBufferCreationDescription</a> m_Desc;</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span> </div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span>  <a class="code hl_class" href="../../d3/d59/classez_g_a_l_buffer_handle.htm">ezGALBufferHandle</a> m_hBufferForUpload;</div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span>  <a class="code hl_class" href="../../d3/d59/classez_g_a_l_buffer_handle.htm">ezGALBufferHandle</a> m_hBufferForRendering;</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span> </div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span><span class="preprocessor">#if EZ_ENABLED(EZ_COMPILE_FOR_DEVELOPMENT)</span></div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span>  <a class="code hl_class" href="../../d4/d53/structez_hybrid_string.htm">ezString</a> m_sDebugName;</div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span>};</div>
</div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span> </div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>EZ_DECLARE_FLAGS_OPERATORS(<a class="code hl_struct" href="../../d1/dc7/structez_g_a_l_dynamic_buffer_1_1_allocate_flags.htm">ezGALDynamicBuffer::AllocateFlags</a>);</div>
<div class="ttc" id="aclassez_array_ptr_htm"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a></div><div class="ttdoc">This class encapsulates an array and it's size. It is recommended to use this class instead of plain ...</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:41</div></div>
<div class="ttc" id="aclassez_array_ptr_htm_aba4e7585190f337c6428f2fe25828b8a"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm#aba4e7585190f337c6428f2fe25828b8a">ezArrayPtr::GetPtr</a></div><div class="ttdeci">EZ_ALWAYS_INLINE PointerType GetPtr() const</div><div class="ttdoc">Returns the pointer to the array.</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:151</div></div>
<div class="ttc" id="aclassez_dynamic_array_htm"><div class="ttname"><a href="../../d2/d4f/classez_dynamic_array.htm">ezDynamicArray</a></div><div class="ttdef"><b>Definition</b> DynamicArray.h:81</div></div>
<div class="ttc" id="aclassez_g_a_l_buffer_handle_htm"><div class="ttname"><a href="../../d3/d59/classez_g_a_l_buffer_handle.htm">ezGALBufferHandle</a></div><div class="ttdef"><b>Definition</b> RendererFoundationDLL.h:512</div></div>
<div class="ttc" id="aclassez_g_a_l_device_htm"><div class="ttname"><a href="../../d2/d09/classez_g_a_l_device.htm">ezGALDevice</a></div><div class="ttdoc">The ezRenderDevice class is the primary interface for interactions with rendering APIs It contains a ...</div><div class="ttdef"><b>Definition</b> Device.h:20</div></div>
<div class="ttc" id="aclassez_g_a_l_dynamic_buffer_htm"><div class="ttname"><a href="../../db/dd6/classez_g_a_l_dynamic_buffer.htm">ezGALDynamicBuffer</a></div><div class="ttdoc">A dynamic buffer can be used when a lot of data needs to be stored in a single large buffer with dyna...</div><div class="ttdef"><b>Definition</b> DynamicBuffer.h:13</div></div>
<div class="ttc" id="aclassez_g_a_l_dynamic_buffer_htm_a49b73ab389a7b3873aa08c24aa3c3104"><div class="ttname"><a href="../../db/dd6/classez_g_a_l_dynamic_buffer.htm#a49b73ab389a7b3873aa08c24aa3c3104">ezGALDynamicBuffer::MapForWriting</a></div><div class="ttdeci">ezArrayPtr&lt; T &gt; MapForWriting(ezUInt32 uiOffset)</div><div class="ttdoc">Maps a range of elements for writing.</div><div class="ttdef"><b>Definition</b> DynamicBuffer.h:56</div></div>
<div class="ttc" id="aclassez_g_a_l_dynamic_buffer_htm_aa43763f190c10e418c06745f1c3b282f"><div class="ttname"><a href="../../db/dd6/classez_g_a_l_dynamic_buffer.htm#aa43763f190c10e418c06745f1c3b282f">ezGALDynamicBuffer::Allocate</a></div><div class="ttdeci">ezUInt32 Allocate(const U &amp;userData, ezUInt32 uiCount=1, ezBitflags&lt; AllocateFlags &gt; allocateFlags=AllocateFlags::None)</div><div class="ttdoc">Allocates a single or multiple elements and returns the offset to the first element....</div><div class="ttdef"><b>Definition</b> DynamicBuffer.h:41</div></div>
<div class="ttc" id="aclassez_g_a_l_dynamic_buffer_htm_ad2bad02053b5f09f2dd9bcf3a855d1b0"><div class="ttname"><a href="../../db/dd6/classez_g_a_l_dynamic_buffer.htm#ad2bad02053b5f09f2dd9bcf3a855d1b0">ezGALDynamicBuffer::GetBufferForRendering</a></div><div class="ttdeci">const ezGALBufferHandle &amp; GetBufferForRendering() const</div><div class="ttdoc">This should be called inside the rendering code to retrieve the underlying buffer for rendering.</div><div class="ttdef"><b>Definition</b> DynamicBuffer.h:83</div></div>
<div class="ttc" id="aclassez_map_htm"><div class="ttname"><a href="../../d1/d79/classez_map.htm">ezMap</a></div><div class="ttdef"><b>Definition</b> Map.h:408</div></div>
<div class="ttc" id="aclassez_memory_utils_htm"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm">ezMemoryUtils</a></div><div class="ttdoc">This class provides functions to work on raw memory.</div><div class="ttdef"><b>Definition</b> MemoryUtils.h:26</div></div>
<div class="ttc" id="aclassez_mutex_htm"><div class="ttname"><a href="../../dd/dbe/classez_mutex.htm">ezMutex</a></div><div class="ttdoc">Provides a simple mechanism for mutual exclusion to prevent multiple threads from accessing a shared ...</div><div class="ttdef"><b>Definition</b> Mutex.h:13</div></div>
<div class="ttc" id="aclassez_string_view_htm"><div class="ttname"><a href="../../d9/d18/classez_string_view.htm">ezStringView</a></div><div class="ttdoc">ezStringView represent a read-only sub-string of a larger string, as it can store a dedicated string ...</div><div class="ttdef"><b>Definition</b> StringView.h:34</div></div>
<div class="ttc" id="astructez_bitflags_htm"><div class="ttname"><a href="../../d1/dec/structez_bitflags.htm">ezBitflags</a></div><div class="ttdoc">The ezBitflags class allows you to work with type-safe bitflags.</div><div class="ttdef"><b>Definition</b> Bitflags.h:82</div></div>
<div class="ttc" id="astructez_g_a_l_buffer_creation_description_htm"><div class="ttname"><a href="../../d1/da8/structez_g_a_l_buffer_creation_description.htm">ezGALBufferCreationDescription</a></div><div class="ttdef"><b>Definition</b> Descriptors.h:223</div></div>
<div class="ttc" id="astructez_g_a_l_dynamic_buffer_1_1_allocate_flags_1_1_bits_htm"><div class="ttname"><a href="../../de/d19/structez_g_a_l_dynamic_buffer_1_1_allocate_flags_1_1_bits.htm">ezGALDynamicBuffer::AllocateFlags::Bits</a></div><div class="ttdef"><b>Definition</b> DynamicBuffer.h:31</div></div>
<div class="ttc" id="astructez_g_a_l_dynamic_buffer_1_1_allocate_flags_htm"><div class="ttname"><a href="../../d1/dc7/structez_g_a_l_dynamic_buffer_1_1_allocate_flags.htm">ezGALDynamicBuffer::AllocateFlags</a></div><div class="ttdef"><b>Definition</b> DynamicBuffer.h:19</div></div>
<div class="ttc" id="astructez_g_a_l_dynamic_buffer_1_1_changed_allocation_htm"><div class="ttname"><a href="../../d6/da6/structez_g_a_l_dynamic_buffer_1_1_changed_allocation.htm">ezGALDynamicBuffer::ChangedAllocation</a></div><div class="ttdef"><b>Definition</b> DynamicBuffer.h:68</div></div>
<div class="ttc" id="astructez_hybrid_string_htm"><div class="ttname"><a href="../../d4/d53/structez_hybrid_string.htm">ezHybridString&lt; 32, ezDefaultAllocatorWrapper &gt;</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_86889b9ebd9c49a9e3637c5d5b24303b.htm">RendererFoundation</a></li><li class="navelem"><a class="el" href="../../dir_605a225a53de44174045bdc4b3538716.htm">Resources</a></li><li class="navelem"><b>DynamicBuffer.h</b></li>
    <li class="footer">Generated on Fri Jul 11 2025 12:17:56 for ezEngine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
