<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: ezSimdBSphere Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 23.12</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d4/db3/classez_simd_b_sphere.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="../../dd/d8d/classez_simd_b_sphere-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ezSimdBSphere Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a92d76e4b6da7b7af0ce25cd74c5fb834"><td class="memItemLeft" align="right" valign="top"><a id="a92d76e4b6da7b7af0ce25cd74c5fb834"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>EZ_DECLARE_POD_TYPE</b> ()</td></tr>
<tr class="separator:a92d76e4b6da7b7af0ce25cd74c5fb834"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87921b8562f00a9bfa2a700d2af4731c"><td class="memItemLeft" align="right" valign="top"><a id="a87921b8562f00a9bfa2a700d2af4731c"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db3/classez_simd_b_sphere.htm#a87921b8562f00a9bfa2a700d2af4731c">ezSimdBSphere</a> ()</td></tr>
<tr class="memdesc:a87921b8562f00a9bfa2a700d2af4731c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor does not initialize any data. <br /></td></tr>
<tr class="separator:a87921b8562f00a9bfa2a700d2af4731c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9684a89c2ceef9940d43d7dc774962c7"><td class="memItemLeft" align="right" valign="top"><a id="a9684a89c2ceef9940d43d7dc774962c7"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db3/classez_simd_b_sphere.htm#a9684a89c2ceef9940d43d7dc774962c7">ezSimdBSphere</a> (const <a class="el" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> &amp;vCenter, const <a class="el" href="../../d2/d0c/classez_simd_float.htm">ezSimdFloat</a> &amp;fRadius)</td></tr>
<tr class="memdesc:a9684a89c2ceef9940d43d7dc774962c7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a sphere with the given radius around the given center. <br /></td></tr>
<tr class="separator:a9684a89c2ceef9940d43d7dc774962c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad104f6b716801a586d04f1706c56d15"><td class="memItemLeft" align="right" valign="top"><a id="aad104f6b716801a586d04f1706c56d15"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db3/classez_simd_b_sphere.htm#aad104f6b716801a586d04f1706c56d15">SetInvalid</a> ()</td></tr>
<tr class="memdesc:aad104f6b716801a586d04f1706c56d15"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the bounding sphere to invalid values. <br /></td></tr>
<tr class="separator:aad104f6b716801a586d04f1706c56d15"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f37c863cfaac1b1dc45ad4b66932d07"><td class="memItemLeft" align="right" valign="top"><a id="a7f37c863cfaac1b1dc45ad4b66932d07"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db3/classez_simd_b_sphere.htm#a7f37c863cfaac1b1dc45ad4b66932d07">IsValid</a> () const</td></tr>
<tr class="memdesc:a7f37c863cfaac1b1dc45ad4b66932d07"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the sphere has valid values. <br /></td></tr>
<tr class="separator:a7f37c863cfaac1b1dc45ad4b66932d07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab5d8eb31a6c6fc5651d363e71a10a0d7"><td class="memItemLeft" align="right" valign="top"><a id="ab5d8eb31a6c6fc5651d363e71a10a0d7"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db3/classez_simd_b_sphere.htm#ab5d8eb31a6c6fc5651d363e71a10a0d7">IsNaN</a> () const</td></tr>
<tr class="memdesc:ab5d8eb31a6c6fc5651d363e71a10a0d7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether any value is NaN. <br /></td></tr>
<tr class="separator:ab5d8eb31a6c6fc5651d363e71a10a0d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae7530c7a3db5058b7aa735d7075062f8"><td class="memItemLeft" align="right" valign="top"><a id="ae7530c7a3db5058b7aa735d7075062f8"></a>
<a class="el" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db3/classez_simd_b_sphere.htm#ae7530c7a3db5058b7aa735d7075062f8">GetCenter</a> () const</td></tr>
<tr class="memdesc:ae7530c7a3db5058b7aa735d7075062f8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the center. <br /></td></tr>
<tr class="separator:ae7530c7a3db5058b7aa735d7075062f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d56a3cee32af2928dabaa3b3ebcd028"><td class="memItemLeft" align="right" valign="top"><a id="a5d56a3cee32af2928dabaa3b3ebcd028"></a>
<a class="el" href="../../d2/d0c/classez_simd_float.htm">ezSimdFloat</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db3/classez_simd_b_sphere.htm#a5d56a3cee32af2928dabaa3b3ebcd028">GetRadius</a> () const</td></tr>
<tr class="memdesc:a5d56a3cee32af2928dabaa3b3ebcd028"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the radius. <br /></td></tr>
<tr class="separator:a5d56a3cee32af2928dabaa3b3ebcd028"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2cb8d9443c9ae2e802220f223edbf6c2"><td class="memItemLeft" align="right" valign="top"><a id="a2cb8d9443c9ae2e802220f223edbf6c2"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db3/classez_simd_b_sphere.htm#a2cb8d9443c9ae2e802220f223edbf6c2">SetFromPoints</a> (const <a class="el" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> *pPoints, ezUInt32 uiNumPoints, ezUInt32 uiStride=sizeof(<a class="el" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>))</td></tr>
<tr class="memdesc:a2cb8d9443c9ae2e802220f223edbf6c2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the sphere to be the bounding sphere of all the given points. <br /></td></tr>
<tr class="separator:a2cb8d9443c9ae2e802220f223edbf6c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04e4abc95bc2454a974cebfe35a9515d"><td class="memItemLeft" align="right" valign="top"><a id="a04e4abc95bc2454a974cebfe35a9515d"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db3/classez_simd_b_sphere.htm#a04e4abc95bc2454a974cebfe35a9515d">ExpandToInclude</a> (const <a class="el" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> &amp;vPoint)</td></tr>
<tr class="memdesc:a04e4abc95bc2454a974cebfe35a9515d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Increases the sphere's radius to include this point. <br /></td></tr>
<tr class="separator:a04e4abc95bc2454a974cebfe35a9515d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a64898f13403515dd51dcfb9c5aac146c"><td class="memItemLeft" align="right" valign="top"><a id="a64898f13403515dd51dcfb9c5aac146c"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db3/classez_simd_b_sphere.htm#a64898f13403515dd51dcfb9c5aac146c">ExpandToInclude</a> (const <a class="el" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> *pPoints, ezUInt32 uiNumPoints, ezUInt32 uiStride=sizeof(<a class="el" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>))</td></tr>
<tr class="memdesc:a64898f13403515dd51dcfb9c5aac146c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Increases the sphere's radius to include all given points. Does NOT change its position, thus the resulting sphere might be not a very tight fit. More efficient than calling this for every point individually. <br /></td></tr>
<tr class="separator:a64898f13403515dd51dcfb9c5aac146c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a65bffadf7f165a888399ec71649ab5b6"><td class="memItemLeft" align="right" valign="top"><a id="a65bffadf7f165a888399ec71649ab5b6"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db3/classez_simd_b_sphere.htm#a65bffadf7f165a888399ec71649ab5b6">ExpandToInclude</a> (const <a class="el" href="../../d4/db3/classez_simd_b_sphere.htm">ezSimdBSphere</a> &amp;rhs)</td></tr>
<tr class="memdesc:a65bffadf7f165a888399ec71649ab5b6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Increases this sphere's radius, such that it encloses the other sphere. <br /></td></tr>
<tr class="separator:a65bffadf7f165a888399ec71649ab5b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a63a881e4abae7f7a84cd8959bc1736d6"><td class="memItemLeft" align="right" valign="top"><a id="a63a881e4abae7f7a84cd8959bc1736d6"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db3/classez_simd_b_sphere.htm#a63a881e4abae7f7a84cd8959bc1736d6">Transform</a> (const <a class="el" href="../../da/d8b/classez_simd_transform.htm">ezSimdTransform</a> &amp;t)</td></tr>
<tr class="memdesc:a63a881e4abae7f7a84cd8959bc1736d6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Transforms the sphere in its local space. <br /></td></tr>
<tr class="separator:a63a881e4abae7f7a84cd8959bc1736d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ca07efc7012eb851dd6651ce6ced83d"><td class="memItemLeft" align="right" valign="top"><a id="a6ca07efc7012eb851dd6651ce6ced83d"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db3/classez_simd_b_sphere.htm#a6ca07efc7012eb851dd6651ce6ced83d">Transform</a> (const <a class="el" href="../../d2/d62/classez_simd_mat4f.htm">ezSimdMat4f</a> &amp;mMat)</td></tr>
<tr class="memdesc:a6ca07efc7012eb851dd6651ce6ced83d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Transforms the sphere in its local space. <br /></td></tr>
<tr class="separator:a6ca07efc7012eb851dd6651ce6ced83d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b55fc5c83a88326dd15ebe8f04a51d2"><td class="memItemLeft" align="right" valign="top"><a id="a5b55fc5c83a88326dd15ebe8f04a51d2"></a>
<a class="el" href="../../d2/d0c/classez_simd_float.htm">ezSimdFloat</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db3/classez_simd_b_sphere.htm#a5b55fc5c83a88326dd15ebe8f04a51d2">GetDistanceTo</a> (const <a class="el" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> &amp;vPoint) const</td></tr>
<tr class="memdesc:a5b55fc5c83a88326dd15ebe8f04a51d2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Computes the distance of the point to the sphere's surface. Returns negative values for points inside the sphere. <br /></td></tr>
<tr class="separator:a5b55fc5c83a88326dd15ebe8f04a51d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa99a018202fdd89a8a9ed0148405e02"><td class="memItemLeft" align="right" valign="top"><a id="afa99a018202fdd89a8a9ed0148405e02"></a>
<a class="el" href="../../d2/d0c/classez_simd_float.htm">ezSimdFloat</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db3/classez_simd_b_sphere.htm#afa99a018202fdd89a8a9ed0148405e02">GetDistanceTo</a> (const <a class="el" href="../../d4/db3/classez_simd_b_sphere.htm">ezSimdBSphere</a> &amp;rhs) const</td></tr>
<tr class="memdesc:afa99a018202fdd89a8a9ed0148405e02"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the distance between the two spheres. Zero for spheres that are exactly touching each other, negative values for overlapping spheres. <br /></td></tr>
<tr class="separator:afa99a018202fdd89a8a9ed0148405e02"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af0c188f366de19a871e96c948845e6cb"><td class="memItemLeft" align="right" valign="top"><a id="af0c188f366de19a871e96c948845e6cb"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db3/classez_simd_b_sphere.htm#af0c188f366de19a871e96c948845e6cb">Contains</a> (const <a class="el" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> &amp;vPoint) const</td></tr>
<tr class="memdesc:af0c188f366de19a871e96c948845e6cb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if the given point is inside the sphere. <br /></td></tr>
<tr class="separator:af0c188f366de19a871e96c948845e6cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b51e9fe2ad48d4dab7bd0da34be1916"><td class="memItemLeft" align="right" valign="top"><a id="a8b51e9fe2ad48d4dab7bd0da34be1916"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db3/classez_simd_b_sphere.htm#a8b51e9fe2ad48d4dab7bd0da34be1916">Contains</a> (const <a class="el" href="../../d4/db3/classez_simd_b_sphere.htm">ezSimdBSphere</a> &amp;rhs) const</td></tr>
<tr class="memdesc:a8b51e9fe2ad48d4dab7bd0da34be1916"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the other sphere is completely inside this sphere. <br /></td></tr>
<tr class="separator:a8b51e9fe2ad48d4dab7bd0da34be1916"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad71ae5395e3a7642bf2444f571c45600"><td class="memItemLeft" align="right" valign="top"><a id="ad71ae5395e3a7642bf2444f571c45600"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db3/classez_simd_b_sphere.htm#ad71ae5395e3a7642bf2444f571c45600">Overlaps</a> (const <a class="el" href="../../d4/db3/classez_simd_b_sphere.htm">ezSimdBSphere</a> &amp;rhs) const</td></tr>
<tr class="memdesc:ad71ae5395e3a7642bf2444f571c45600"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether the two objects overlap. <br /></td></tr>
<tr class="separator:ad71ae5395e3a7642bf2444f571c45600"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac88d0855ece66945791330da6d4ec4e"><td class="memItemLeft" align="right" valign="top"><a id="aac88d0855ece66945791330da6d4ec4e"></a>
<a class="el" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db3/classez_simd_b_sphere.htm#aac88d0855ece66945791330da6d4ec4e">GetClampedPoint</a> (const <a class="el" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> &amp;vPoint)</td></tr>
<tr class="memdesc:aac88d0855ece66945791330da6d4ec4e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clamps the given position to the volume of the sphere. The resulting point will always be inside the sphere, but have the closest distance to the original point. <br /></td></tr>
<tr class="separator:aac88d0855ece66945791330da6d4ec4e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd1f742cc18c68cc8af6cf6ad1299a24"><td class="memItemLeft" align="right" valign="top"><a id="abd1f742cc18c68cc8af6cf6ad1299a24"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator==</b> (const <a class="el" href="../../d4/db3/classez_simd_b_sphere.htm">ezSimdBSphere</a> &amp;rhs) const</td></tr>
<tr class="separator:abd1f742cc18c68cc8af6cf6ad1299a24"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ee1266dfbd6b0ccf8cf23619b148244"><td class="memItemLeft" align="right" valign="top"><a id="a2ee1266dfbd6b0ccf8cf23619b148244"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator!=</b> (const <a class="el" href="../../d4/db3/classez_simd_b_sphere.htm">ezSimdBSphere</a> &amp;rhs) const</td></tr>
<tr class="separator:a2ee1266dfbd6b0ccf8cf23619b148244"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:ac068e1f17bf0d6bda63d853ffb53d26d"><td class="memItemLeft" align="right" valign="top"><a id="ac068e1f17bf0d6bda63d853ffb53d26d"></a>
static <a class="el" href="../../d4/db3/classez_simd_b_sphere.htm">ezSimdBSphere</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db3/classez_simd_b_sphere.htm#ac068e1f17bf0d6bda63d853ffb53d26d">MakeZero</a> ()</td></tr>
<tr class="memdesc:ac068e1f17bf0d6bda63d853ffb53d26d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a sphere at the origin with radius zero. <br /></td></tr>
<tr class="separator:ac068e1f17bf0d6bda63d853ffb53d26d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a98fda72e911391505db551a5d3cee2c6"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="../../d4/db3/classez_simd_b_sphere.htm">ezSimdBSphere</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db3/classez_simd_b_sphere.htm#a98fda72e911391505db551a5d3cee2c6">MakeInvalid</a> (const <a class="el" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> &amp;vCenter=<a class="el" href="../../db/d0d/classez_simd_vec4f.htm#a1bbdedd947e594b431539062a2b50b95">ezSimdVec4f::MakeZero</a>())</td></tr>
<tr class="memdesc:a98fda72e911391505db551a5d3cee2c6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an 'invalid' sphere, with its center at the given position and a negative radius.  <a href="../../d4/db3/classez_simd_b_sphere.htm#a98fda72e911391505db551a5d3cee2c6">More...</a><br /></td></tr>
<tr class="separator:a98fda72e911391505db551a5d3cee2c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a561f5b88bdb694d0db735c18312023"><td class="memItemLeft" align="right" valign="top"><a id="a2a561f5b88bdb694d0db735c18312023"></a>
static <a class="el" href="../../d4/db3/classez_simd_b_sphere.htm">ezSimdBSphere</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db3/classez_simd_b_sphere.htm#a2a561f5b88bdb694d0db735c18312023">MakeFromCenterAndRadius</a> (const <a class="el" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> &amp;vCenter, const <a class="el" href="../../d2/d0c/classez_simd_float.htm">ezSimdFloat</a> &amp;fRadius)</td></tr>
<tr class="memdesc:a2a561f5b88bdb694d0db735c18312023"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a sphere with the provided center and radius. <br /></td></tr>
<tr class="separator:a2a561f5b88bdb694d0db735c18312023"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c0cf78fef995a9b31da75b83c70e6c0"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="../../d4/db3/classez_simd_b_sphere.htm">ezSimdBSphere</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/db3/classez_simd_b_sphere.htm#a0c0cf78fef995a9b31da75b83c70e6c0">MakeFromPoints</a> (const <a class="el" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> *pPoints, ezUInt32 uiNumPoints, ezUInt32 uiStride=sizeof(<a class="el" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>))</td></tr>
<tr class="memdesc:a0c0cf78fef995a9b31da75b83c70e6c0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a bounding sphere around the provided points.  <a href="../../d4/db3/classez_simd_b_sphere.htm#a0c0cf78fef995a9b31da75b83c70e6c0">More...</a><br /></td></tr>
<tr class="separator:a0c0cf78fef995a9b31da75b83c70e6c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a7e786462ce07198809ee8b19443b4978"><td class="memItemLeft" align="right" valign="top"><a id="a7e786462ce07198809ee8b19443b4978"></a>
<a class="el" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_CenterAndRadius</b></td></tr>
<tr class="separator:a7e786462ce07198809ee8b19443b4978"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a0c0cf78fef995a9b31da75b83c70e6c0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0c0cf78fef995a9b31da75b83c70e6c0">&#9670;&nbsp;</a></span>MakeFromPoints()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d4/db3/classez_simd_b_sphere.htm">ezSimdBSphere</a> ezSimdBSphere::MakeFromPoints </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> *&#160;</td>
          <td class="paramname"><em>pPoints</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ezUInt32&#160;</td>
          <td class="paramname"><em>uiNumPoints</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ezUInt32&#160;</td>
          <td class="paramname"><em>uiStride</em> = <code>sizeof(<a class="el" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>)</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a bounding sphere around the provided points. </p>
<p>The center of the sphere will be at the 'center of mass' of all the points, and the radius will be the distance to the farthest point from there. </p>

</div>
</div>
<a id="a98fda72e911391505db551a5d3cee2c6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a98fda72e911391505db551a5d3cee2c6">&#9670;&nbsp;</a></span>MakeInvalid()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">EZ_ALWAYS_INLINE <a class="el" href="../../d4/db3/classez_simd_b_sphere.htm">ezSimdBSphere</a> ezSimdBSphere::MakeInvalid </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> &amp;&#160;</td>
          <td class="paramname"><em>vCenter</em> = <code><a class="el" href="../../db/d0d/classez_simd_vec4f.htm#a1bbdedd947e594b431539062a2b50b95">ezSimdVec4f::MakeZero</a>()</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates an 'invalid' sphere, with its center at the given position and a negative radius. </p>
<p>Such a sphere can be made 'valid' through <a class="el" href="../../d4/db3/classez_simd_b_sphere.htm#a04e4abc95bc2454a974cebfe35a9515d" title="Increases the sphere&#39;s radius to include this point.">ExpandToInclude()</a>, but be aware that the originally provided center position will always be part of the sphere. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/SimdMath/<a class="el" href="../../d5/dd7/_simd_b_sphere_8h_source.htm">SimdBSphere.h</a></li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/SimdMath/Implementation/<a class="el" href="../../da/d93/_simd_b_sphere__inl_8h_source.htm">SimdBSphere_inl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d4/db3/classez_simd_b_sphere.htm">ezSimdBSphere</a></li>
    <li class="footer">Generated on Fri Dec 22 2023 20:43:17 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
