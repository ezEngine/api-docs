<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Platform/Posix/AtomicUtils_Posix.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 25.03</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d4/d4d/_atomic_utils___posix_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">AtomicUtils_Posix.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#include &lt;Foundation/Math/Math.h&gt;</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#a010b48d5ef3131037a09d1d46dfc1c83">    3</a></span>&#160;EZ_ALWAYS_INLINE ezInt32 <a class="code" href="../../d6/d25/structez_atomic_utils.htm#a010b48d5ef3131037a09d1d46dfc1c83">ezAtomicUtils::Read</a>(<span class="keyword">const</span> ezInt32&amp; src)</div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;{</div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;  <span class="keywordflow">return</span> __sync_fetch_and_or(<span class="keyword">const_cast&lt;</span>ezInt32*<span class="keyword">&gt;</span>(&amp;src), 0);</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;}</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160; </div>
<div class="line"><a name="l00008"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#a8c2611086293e0fcc193709af52ec616">    8</a></span>&#160;EZ_ALWAYS_INLINE ezInt64 <a class="code" href="../../d6/d25/structez_atomic_utils.htm#a010b48d5ef3131037a09d1d46dfc1c83">ezAtomicUtils::Read</a>(<span class="keyword">const</span> ezInt64&amp; src)</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;{</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;  <span class="keywordflow">return</span> __sync_fetch_and_or_8(<span class="keyword">const_cast&lt;</span>ezInt64*<span class="keyword">&gt;</span>(&amp;src), 0);</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;}</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160; </div>
<div class="line"><a name="l00013"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#ac1d9c32986d0a8437b66af5d0e450fa5">   13</a></span>&#160;EZ_ALWAYS_INLINE ezInt32 <a class="code" href="../../d6/d25/structez_atomic_utils.htm#ac1d9c32986d0a8437b66af5d0e450fa5">ezAtomicUtils::Increment</a>(ezInt32&amp; dest)</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;{</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;  <span class="keywordflow">return</span> __sync_add_and_fetch(&amp;dest, 1);</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;}</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160; </div>
<div class="line"><a name="l00018"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#a94849a1a41d22c4c79b440dc207c40e8">   18</a></span>&#160;EZ_ALWAYS_INLINE ezInt64 <a class="code" href="../../d6/d25/structez_atomic_utils.htm#ac1d9c32986d0a8437b66af5d0e450fa5">ezAtomicUtils::Increment</a>(ezInt64&amp; dest)</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;{</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;  <span class="keywordflow">return</span> __sync_add_and_fetch_8(&amp;dest, 1);</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;}</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160; </div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160; </div>
<div class="line"><a name="l00024"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#a3b8be142a37e2c9efdc0a5a25297ddc2">   24</a></span>&#160;EZ_ALWAYS_INLINE ezInt32 <a class="code" href="../../d6/d25/structez_atomic_utils.htm#a3b8be142a37e2c9efdc0a5a25297ddc2">ezAtomicUtils::Decrement</a>(ezInt32&amp; dest)</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;{</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;  <span class="keywordflow">return</span> __sync_sub_and_fetch(&amp;dest, 1);</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;}</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160; </div>
<div class="line"><a name="l00029"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#ad0b2890f8eb83b635030a2a87fe809e4">   29</a></span>&#160;EZ_ALWAYS_INLINE ezInt64 <a class="code" href="../../d6/d25/structez_atomic_utils.htm#a3b8be142a37e2c9efdc0a5a25297ddc2">ezAtomicUtils::Decrement</a>(ezInt64&amp; dest)</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;{</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  <span class="keywordflow">return</span> __sync_sub_and_fetch_8(&amp;dest, 1);</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;}</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160; </div>
<div class="line"><a name="l00034"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#affb318a6a9c966cccf68c807d2c070de">   34</a></span>&#160;EZ_ALWAYS_INLINE ezInt32 <a class="code" href="../../d6/d25/structez_atomic_utils.htm#affb318a6a9c966cccf68c807d2c070de">ezAtomicUtils::PostIncrement</a>(ezInt32&amp; dest)</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;{</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;  <span class="keywordflow">return</span> __sync_fetch_and_add(&amp;dest, 1);</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;}</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160; </div>
<div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#a9da3b1bd74a91812870aeeca8ba1946e">   39</a></span>&#160;EZ_ALWAYS_INLINE ezInt64 <a class="code" href="../../d6/d25/structez_atomic_utils.htm#affb318a6a9c966cccf68c807d2c070de">ezAtomicUtils::PostIncrement</a>(ezInt64&amp; dest)</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  <span class="keywordflow">return</span> __sync_fetch_and_add_8(&amp;dest, 1);</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;}</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160; </div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160; </div>
<div class="line"><a name="l00045"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#a4fbfe7f94c536b7d27d39450c2442b01">   45</a></span>&#160;EZ_ALWAYS_INLINE ezInt32 <a class="code" href="../../d6/d25/structez_atomic_utils.htm#a4fbfe7f94c536b7d27d39450c2442b01">ezAtomicUtils::PostDecrement</a>(ezInt32&amp; dest)</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;{</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;  <span class="keywordflow">return</span> __sync_fetch_and_sub(&amp;dest, 1);</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;}</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160; </div>
<div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#acf3212deece33c6b335d42251143ea30">   50</a></span>&#160;EZ_ALWAYS_INLINE ezInt64 <a class="code" href="../../d6/d25/structez_atomic_utils.htm#a4fbfe7f94c536b7d27d39450c2442b01">ezAtomicUtils::PostDecrement</a>(ezInt64&amp; dest)</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;{</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  <span class="keywordflow">return</span> __sync_fetch_and_sub_8(&amp;dest, 1);</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;}</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160; </div>
<div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#a2cbf7697a1ec2ac7d84c4d6e6498fb7d">   55</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d6/d25/structez_atomic_utils.htm#a2cbf7697a1ec2ac7d84c4d6e6498fb7d">ezAtomicUtils::Add</a>(ezInt32&amp; dest, ezInt32 value)</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;{</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;  __sync_fetch_and_add(&amp;dest, value);</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;}</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160; </div>
<div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#a3c22517f63bf994aa7f399723a6d0cf0">   60</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d6/d25/structez_atomic_utils.htm#a2cbf7697a1ec2ac7d84c4d6e6498fb7d">ezAtomicUtils::Add</a>(ezInt64&amp; dest, ezInt64 value)</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;{</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;  __sync_fetch_and_add_8(&amp;dest, value);</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;}</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160; </div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160; </div>
<div class="line"><a name="l00066"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#aee27b7eb603a3a27d7ae83ec980adedc">   66</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d6/d25/structez_atomic_utils.htm#aee27b7eb603a3a27d7ae83ec980adedc">ezAtomicUtils::And</a>(ezInt32&amp; dest, ezInt32 value)</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;{</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;  __sync_fetch_and_and(&amp;dest, value);</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;}</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160; </div>
<div class="line"><a name="l00071"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#a1960b3130813b14c924381cb08cdd3c2">   71</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d6/d25/structez_atomic_utils.htm#aee27b7eb603a3a27d7ae83ec980adedc">ezAtomicUtils::And</a>(ezInt64&amp; dest, ezInt64 value)</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;{</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  __sync_fetch_and_and_8(&amp;dest, value);</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;}</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160; </div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160; </div>
<div class="line"><a name="l00077"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#a1a9ed49b221255c03d33723c765c276e">   77</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d6/d25/structez_atomic_utils.htm#a1a9ed49b221255c03d33723c765c276e">ezAtomicUtils::Or</a>(ezInt32&amp; dest, ezInt32 value)</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;{</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  __sync_fetch_and_or(&amp;dest, value);</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;}</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160; </div>
<div class="line"><a name="l00082"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#ab5ae5c6c5a176d2caf73329d5cb9d002">   82</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d6/d25/structez_atomic_utils.htm#a1a9ed49b221255c03d33723c765c276e">ezAtomicUtils::Or</a>(ezInt64&amp; dest, ezInt64 value)</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;{</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;  __sync_fetch_and_or_8(&amp;dest, value);</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;}</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160; </div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160; </div>
<div class="line"><a name="l00088"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#aee01b21c4a5f3683e560a74a43513ed0">   88</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d6/d25/structez_atomic_utils.htm#aee01b21c4a5f3683e560a74a43513ed0">ezAtomicUtils::Xor</a>(ezInt32&amp; dest, ezInt32 value)</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;{</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;  __sync_fetch_and_xor(&amp;dest, value);</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;}</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160; </div>
<div class="line"><a name="l00093"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#afdd88e8c8b48332c8b5974bf0916466a">   93</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d6/d25/structez_atomic_utils.htm#aee01b21c4a5f3683e560a74a43513ed0">ezAtomicUtils::Xor</a>(ezInt64&amp; dest, ezInt64 value)</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;{</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;  __sync_fetch_and_xor_8(&amp;dest, value);</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;}</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160; </div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160; </div>
<div class="line"><a name="l00099"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#a3f8d9b41c0305d1f885ca4f89e9db4fc">   99</a></span>&#160;EZ_FORCE_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d6/d25/structez_atomic_utils.htm#a3f8d9b41c0305d1f885ca4f89e9db4fc">ezAtomicUtils::Min</a>(ezInt32&amp; dest, ezInt32 value)</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;{</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;  <span class="comment">// tries to exchange dest with the new value as long as the oldValue is not what we expected</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;  <span class="keywordflow">while</span> (<span class="keyword">true</span>)</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  {</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    ezInt32 iOldValue = dest;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    ezInt32 iNewValue = <a class="code" href="../../db/d78/namespaceez_math.htm#ad8009b4da9cb427658d71e30576f209e">ezMath::Min</a>(iOldValue, value);</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160; </div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="keywordflow">if</span> (__sync_bool_compare_and_swap(&amp;dest, iOldValue, iNewValue))</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;  }</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;}</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160; </div>
<div class="line"><a name="l00112"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#a07ee6cd554b39f6125ca2b31acefd151">  112</a></span>&#160;EZ_FORCE_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d6/d25/structez_atomic_utils.htm#a3f8d9b41c0305d1f885ca4f89e9db4fc">ezAtomicUtils::Min</a>(ezInt64&amp; dest, ezInt64 value)</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;{</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;  <span class="comment">// tries to exchange dest with the new value as long as the oldValue is not what we expected</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;  <span class="keywordflow">while</span> (<span class="keyword">true</span>)</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;  {</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    ezInt64 iOldValue = dest;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    ezInt64 iNewValue = <a class="code" href="../../db/d78/namespaceez_math.htm#ad8009b4da9cb427658d71e30576f209e">ezMath::Min</a>(iOldValue, value);</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160; </div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keywordflow">if</span> (__sync_bool_compare_and_swap_8(&amp;dest, iOldValue, iNewValue))</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;  }</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;}</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160; </div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160; </div>
<div class="line"><a name="l00126"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#a292b53c130324244a9c2d987016c935d">  126</a></span>&#160;EZ_FORCE_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d6/d25/structez_atomic_utils.htm#a292b53c130324244a9c2d987016c935d">ezAtomicUtils::Max</a>(ezInt32&amp; dest, ezInt32 value)</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;{</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;  <span class="comment">// tries to exchange dest with the new value as long as the oldValue is not what we expected</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;  <span class="keywordflow">while</span> (<span class="keyword">true</span>)</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;  {</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    ezInt32 iOldValue = dest;</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    ezInt32 iNewValue = <a class="code" href="../../db/d78/namespaceez_math.htm#a6f7ee19d0f8e81ff6ae5f394075e3a56">ezMath::Max</a>(iOldValue, value);</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160; </div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="keywordflow">if</span> (__sync_bool_compare_and_swap(&amp;dest, iOldValue, iNewValue))</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;  }</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;}</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160; </div>
<div class="line"><a name="l00139"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#a605effb538def3cddb470fff63be1f61">  139</a></span>&#160;EZ_FORCE_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d6/d25/structez_atomic_utils.htm#a292b53c130324244a9c2d987016c935d">ezAtomicUtils::Max</a>(ezInt64&amp; dest, ezInt64 value)</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;{</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;  <span class="comment">// tries to exchange dest with the new value as long as the oldValue is not what we expected</span></div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;  <span class="keywordflow">while</span> (<span class="keyword">true</span>)</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  {</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    ezInt64 iOldValue = dest;</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    ezInt64 iNewValue = <a class="code" href="../../db/d78/namespaceez_math.htm#a6f7ee19d0f8e81ff6ae5f394075e3a56">ezMath::Max</a>(iOldValue, value);</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160; </div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    <span class="keywordflow">if</span> (__sync_bool_compare_and_swap_8(&amp;dest, iOldValue, iNewValue))</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;  }</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;}</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160; </div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160; </div>
<div class="line"><a name="l00153"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#aecd96c9628f05b422dfc736b5f774e2e">  153</a></span>&#160;EZ_ALWAYS_INLINE ezInt32 <a class="code" href="../../d6/d25/structez_atomic_utils.htm#aecd96c9628f05b422dfc736b5f774e2e">ezAtomicUtils::Set</a>(ezInt32&amp; dest, ezInt32 value)</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;{</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;  <span class="keywordflow">return</span> __sync_lock_test_and_set(&amp;dest, value);</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;}</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160; </div>
<div class="line"><a name="l00158"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#ac7aed44953be8ac2ce48985ad3c7fe70">  158</a></span>&#160;EZ_ALWAYS_INLINE ezInt64 <a class="code" href="../../d6/d25/structez_atomic_utils.htm#aecd96c9628f05b422dfc736b5f774e2e">ezAtomicUtils::Set</a>(ezInt64&amp; dest, ezInt64 value)</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;{</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;  <span class="keywordflow">return</span> __sync_lock_test_and_set_8(&amp;dest, value);</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;}</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160; </div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160; </div>
<div class="line"><a name="l00164"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#af6e10dfc4d596617fae90d206590e76a">  164</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../d6/d25/structez_atomic_utils.htm#af6e10dfc4d596617fae90d206590e76a">ezAtomicUtils::TestAndSet</a>(ezInt32&amp; dest, ezInt32 expected, ezInt32 value)</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;{</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;  <span class="keywordflow">return</span> __sync_bool_compare_and_swap(&amp;dest, expected, value);</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;}</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160; </div>
<div class="line"><a name="l00169"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#a04039f63b9e6530465c4dae8821801b6">  169</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../d6/d25/structez_atomic_utils.htm#af6e10dfc4d596617fae90d206590e76a">ezAtomicUtils::TestAndSet</a>(ezInt64&amp; dest, ezInt64 expected, ezInt64 value)</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;{</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;  <span class="keywordflow">return</span> __sync_bool_compare_and_swap_8(&amp;dest, expected, value);</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;}</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160; </div>
<div class="line"><a name="l00174"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#a1cd38747a192ce89df37cb1fa1fd0871">  174</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../d6/d25/structez_atomic_utils.htm#af6e10dfc4d596617fae90d206590e76a">ezAtomicUtils::TestAndSet</a>(<span class="keywordtype">void</span>** dest, <span class="keywordtype">void</span>* expected, <span class="keywordtype">void</span>* value)</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;{</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="preprocessor">#if EZ_ENABLED(EZ_PLATFORM_64BIT)</span></div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;  ezUInt64* puiTemp = <span class="keyword">reinterpret_cast&lt;</span>ezUInt64*<span class="keyword">&gt;</span>(dest);</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;  <span class="keywordflow">return</span> __sync_bool_compare_and_swap(puiTemp, <span class="keyword">reinterpret_cast&lt;</span>ezUInt64<span class="keyword">&gt;</span>(expected), <span class="keyword">reinterpret_cast&lt;</span>ezUInt64<span class="keyword">&gt;</span>(value));</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;  ezUInt32* puiTemp = <span class="keyword">reinterpret_cast&lt;</span>ezUInt32*<span class="keyword">&gt;</span>(dest);</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;  <span class="keywordflow">return</span> __sync_bool_compare_and_swap(puiTemp, <span class="keyword">reinterpret_cast&lt;</span>ezUInt32<span class="keyword">&gt;</span>(expected), <span class="keyword">reinterpret_cast&lt;</span>ezUInt32<span class="keyword">&gt;</span>(value));</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;}</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160; </div>
<div class="line"><a name="l00185"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#a9122c3d322e2d736595b90723f06b625">  185</a></span>&#160;EZ_ALWAYS_INLINE ezInt32 <a class="code" href="../../d6/d25/structez_atomic_utils.htm#a9122c3d322e2d736595b90723f06b625">ezAtomicUtils::CompareAndSwap</a>(ezInt32&amp; dest, ezInt32 expected, ezInt32 value)</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;{</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;  <span class="keywordflow">return</span> __sync_val_compare_and_swap(&amp;dest, expected, value);</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;}</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160; </div>
<div class="line"><a name="l00190"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#aa2d42f393edb39a773dd4f38abb922b5">  190</a></span>&#160;EZ_ALWAYS_INLINE ezInt64 <a class="code" href="../../d6/d25/structez_atomic_utils.htm#a9122c3d322e2d736595b90723f06b625">ezAtomicUtils::CompareAndSwap</a>(ezInt64&amp; dest, ezInt64 expected, ezInt64 value)</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;{</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;  <span class="keywordflow">return</span> __sync_val_compare_and_swap_8(&amp;dest, expected, value);</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;}</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="astructez_atomic_utils_htm_a1a9ed49b221255c03d33723c765c276e"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#a1a9ed49b221255c03d33723c765c276e">ezAtomicUtils::Or</a></div><div class="ttdeci">static void Or(ezInt32 &amp;ref_iDest, ezInt32 value)</div><div class="ttdoc">Performs an atomic bitwise OR on dest using value.</div><div class="ttdef"><b>Definition:</b> AtomicUtils_Posix.h:77</div></div>
<div class="ttc" id="astructez_atomic_utils_htm_aee27b7eb603a3a27d7ae83ec980adedc"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#aee27b7eb603a3a27d7ae83ec980adedc">ezAtomicUtils::And</a></div><div class="ttdeci">static void And(ezInt32 &amp;ref_iDest, ezInt32 value)</div><div class="ttdoc">Performs an atomic bitwise AND on dest using value.</div><div class="ttdef"><b>Definition:</b> AtomicUtils_Posix.h:66</div></div>
<div class="ttc" id="astructez_atomic_utils_htm_a4fbfe7f94c536b7d27d39450c2442b01"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#a4fbfe7f94c536b7d27d39450c2442b01">ezAtomicUtils::PostDecrement</a></div><div class="ttdeci">static ezInt32 PostDecrement(ezInt32 &amp;ref_iDest)</div><div class="ttdoc">Decrements dest as an atomic operation and returns the old value.</div><div class="ttdef"><b>Definition:</b> AtomicUtils_Posix.h:45</div></div>
<div class="ttc" id="astructez_atomic_utils_htm_a3b8be142a37e2c9efdc0a5a25297ddc2"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#a3b8be142a37e2c9efdc0a5a25297ddc2">ezAtomicUtils::Decrement</a></div><div class="ttdeci">static ezInt32 Decrement(ezInt32 &amp;ref_iDest)</div><div class="ttdoc">Decrements dest as an atomic operation and returns the new value.</div><div class="ttdef"><b>Definition:</b> AtomicUtils_Posix.h:24</div></div>
<div class="ttc" id="anamespaceez_math_htm_a6f7ee19d0f8e81ff6ae5f394075e3a56"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a6f7ee19d0f8e81ff6ae5f394075e3a56">ezMath::Max</a></div><div class="ttdeci">constexpr EZ_ALWAYS_INLINE T Max(T f1, T f2)</div><div class="ttdoc">Returns the greater value, f1 or f2.</div><div class="ttdef"><b>Definition:</b> Math_inl.h:39</div></div>
<div class="ttc" id="astructez_atomic_utils_htm_a2cbf7697a1ec2ac7d84c4d6e6498fb7d"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#a2cbf7697a1ec2ac7d84c4d6e6498fb7d">ezAtomicUtils::Add</a></div><div class="ttdeci">static void Add(ezInt32 &amp;ref_iDest, ezInt32 value)</div><div class="ttdoc">Adds value to dest as an atomic operation.</div><div class="ttdef"><b>Definition:</b> AtomicUtils_Posix.h:55</div></div>
<div class="ttc" id="astructez_atomic_utils_htm_a292b53c130324244a9c2d987016c935d"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#a292b53c130324244a9c2d987016c935d">ezAtomicUtils::Max</a></div><div class="ttdeci">static void Max(ezInt32 &amp;ref_iDest, ezInt32 value)</div><div class="ttdoc">Performs an atomic max operation on dest using value.</div><div class="ttdef"><b>Definition:</b> AtomicUtils_Posix.h:126</div></div>
<div class="ttc" id="astructez_atomic_utils_htm_affb318a6a9c966cccf68c807d2c070de"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#affb318a6a9c966cccf68c807d2c070de">ezAtomicUtils::PostIncrement</a></div><div class="ttdeci">static ezInt32 PostIncrement(ezInt32 &amp;ref_iDest)</div><div class="ttdoc">Increments dest as an atomic operation and returns the old value.</div><div class="ttdef"><b>Definition:</b> AtomicUtils_Posix.h:34</div></div>
<div class="ttc" id="astructez_atomic_utils_htm_aee01b21c4a5f3683e560a74a43513ed0"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#aee01b21c4a5f3683e560a74a43513ed0">ezAtomicUtils::Xor</a></div><div class="ttdeci">static void Xor(ezInt32 &amp;ref_iDest, ezInt32 value)</div><div class="ttdoc">Performs an atomic bitwise XOR on dest using value.</div><div class="ttdef"><b>Definition:</b> AtomicUtils_Posix.h:88</div></div>
<div class="ttc" id="astructez_atomic_utils_htm_af6e10dfc4d596617fae90d206590e76a"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#af6e10dfc4d596617fae90d206590e76a">ezAtomicUtils::TestAndSet</a></div><div class="ttdeci">static bool TestAndSet(ezInt32 &amp;ref_iDest, ezInt32 iExpected, ezInt32 value)</div><div class="ttdoc">If dest is equal to expected, this function sets dest to value and returns true. Otherwise dest will ...</div><div class="ttdef"><b>Definition:</b> AtomicUtils_Posix.h:164</div></div>
<div class="ttc" id="astructez_atomic_utils_htm_a010b48d5ef3131037a09d1d46dfc1c83"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#a010b48d5ef3131037a09d1d46dfc1c83">ezAtomicUtils::Read</a></div><div class="ttdeci">static ezInt32 Read(const ezInt32 &amp;iSrc)</div><div class="ttdoc">Returns src as an atomic operation and returns its value.</div><div class="ttdef"><b>Definition:</b> AtomicUtils_Posix.h:3</div></div>
<div class="ttc" id="astructez_atomic_utils_htm_a3f8d9b41c0305d1f885ca4f89e9db4fc"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#a3f8d9b41c0305d1f885ca4f89e9db4fc">ezAtomicUtils::Min</a></div><div class="ttdeci">static void Min(ezInt32 &amp;ref_iDest, ezInt32 value)</div><div class="ttdoc">Performs an atomic min operation on dest using value.</div><div class="ttdef"><b>Definition:</b> AtomicUtils_Posix.h:99</div></div>
<div class="ttc" id="anamespaceez_math_htm_ad8009b4da9cb427658d71e30576f209e"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#ad8009b4da9cb427658d71e30576f209e">ezMath::Min</a></div><div class="ttdeci">constexpr EZ_ALWAYS_INLINE T Min(T f1, T f2)</div><div class="ttdoc">Returns the smaller value, f1 or f2.</div><div class="ttdef"><b>Definition:</b> Math_inl.h:27</div></div>
<div class="ttc" id="astructez_atomic_utils_htm_ac1d9c32986d0a8437b66af5d0e450fa5"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#ac1d9c32986d0a8437b66af5d0e450fa5">ezAtomicUtils::Increment</a></div><div class="ttdeci">static ezInt32 Increment(ezInt32 &amp;ref_iDest)</div><div class="ttdoc">Increments dest as an atomic operation and returns the new value.</div><div class="ttdef"><b>Definition:</b> AtomicUtils_Posix.h:13</div></div>
<div class="ttc" id="astructez_atomic_utils_htm_aecd96c9628f05b422dfc736b5f774e2e"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#aecd96c9628f05b422dfc736b5f774e2e">ezAtomicUtils::Set</a></div><div class="ttdeci">static ezInt32 Set(ezInt32 &amp;ref_iDest, ezInt32 value)</div><div class="ttdoc">Sets dest to value as an atomic operation and returns the original value of dest.</div><div class="ttdef"><b>Definition:</b> AtomicUtils_Posix.h:153</div></div>
<div class="ttc" id="astructez_atomic_utils_htm_a9122c3d322e2d736595b90723f06b625"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#a9122c3d322e2d736595b90723f06b625">ezAtomicUtils::CompareAndSwap</a></div><div class="ttdeci">static ezInt32 CompareAndSwap(ezInt32 &amp;ref_iDest, ezInt32 iExpected, ezInt32 value)</div><div class="ttdoc">If dest is equal to expected, this function sets dest to value. Otherwise dest will not be modified....</div><div class="ttdef"><b>Definition:</b> AtomicUtils_Posix.h:185</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_81a97b29d048515ed79592945c8b94b3.htm">Platform</a></li><li class="navelem"><a class="el" href="../../dir_ea0f1cea308dbde9b8c550f938edec5f.htm">Posix</a></li><li class="navelem"><b>AtomicUtils_Posix.h</b></li>
    <li class="footer">Generated on Mon Mar 3 2025 17:23:44 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
