<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Platform/Posix/AtomicUtils_Posix.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">ezEngine<span id="projectnumber">&#160;Release 25.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function() { init_codefold(1); });
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('d4/d4d/_atomic_utils___posix_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">AtomicUtils_Posix.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#include &lt;Foundation/Math/Math.h&gt;</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="foldopen" id="foldopen00003" data-start="{" data-end="}">
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#a010b48d5ef3131037a09d1d46dfc1c83">    3</a></span>EZ_ALWAYS_INLINE ezInt32 <a class="code hl_function" href="../../d6/d25/structez_atomic_utils.htm#a010b48d5ef3131037a09d1d46dfc1c83">ezAtomicUtils::Read</a>(<span class="keyword">const</span> ezInt32&amp; src)</div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span>{</div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span>  <span class="keywordflow">return</span> __sync_fetch_and_or(<span class="keyword">const_cast&lt;</span>ezInt32*<span class="keyword">&gt;</span>(&amp;src), 0);</div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span>}</div>
</div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span> </div>
<div class="foldopen" id="foldopen00008" data-start="{" data-end="}">
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#a8c2611086293e0fcc193709af52ec616">    8</a></span>EZ_ALWAYS_INLINE ezInt64 <a class="code hl_function" href="../../d6/d25/structez_atomic_utils.htm#a010b48d5ef3131037a09d1d46dfc1c83">ezAtomicUtils::Read</a>(<span class="keyword">const</span> ezInt64&amp; src)</div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span>{</div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span>  <span class="keywordflow">return</span> __sync_fetch_and_or_8(<span class="keyword">const_cast&lt;</span>ezInt64*<span class="keyword">&gt;</span>(&amp;src), 0);</div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span>}</div>
</div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span> </div>
<div class="foldopen" id="foldopen00013" data-start="{" data-end="}">
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#ac1d9c32986d0a8437b66af5d0e450fa5">   13</a></span>EZ_ALWAYS_INLINE ezInt32 <a class="code hl_function" href="../../d6/d25/structez_atomic_utils.htm#ac1d9c32986d0a8437b66af5d0e450fa5">ezAtomicUtils::Increment</a>(ezInt32&amp; dest)</div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span>{</div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span>  <span class="keywordflow">return</span> __sync_add_and_fetch(&amp;dest, 1);</div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span>}</div>
</div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span> </div>
<div class="foldopen" id="foldopen00018" data-start="{" data-end="}">
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#a94849a1a41d22c4c79b440dc207c40e8">   18</a></span>EZ_ALWAYS_INLINE ezInt64 <a class="code hl_function" href="../../d6/d25/structez_atomic_utils.htm#ac1d9c32986d0a8437b66af5d0e450fa5">ezAtomicUtils::Increment</a>(ezInt64&amp; dest)</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span>{</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span>  <span class="keywordflow">return</span> __sync_add_and_fetch_8(&amp;dest, 1);</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span>}</div>
</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span> </div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span> </div>
<div class="foldopen" id="foldopen00024" data-start="{" data-end="}">
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#a3b8be142a37e2c9efdc0a5a25297ddc2">   24</a></span>EZ_ALWAYS_INLINE ezInt32 <a class="code hl_function" href="../../d6/d25/structez_atomic_utils.htm#a3b8be142a37e2c9efdc0a5a25297ddc2">ezAtomicUtils::Decrement</a>(ezInt32&amp; dest)</div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span>{</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span>  <span class="keywordflow">return</span> __sync_sub_and_fetch(&amp;dest, 1);</div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span>}</div>
</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span> </div>
<div class="foldopen" id="foldopen00029" data-start="{" data-end="}">
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#ad0b2890f8eb83b635030a2a87fe809e4">   29</a></span>EZ_ALWAYS_INLINE ezInt64 <a class="code hl_function" href="../../d6/d25/structez_atomic_utils.htm#a3b8be142a37e2c9efdc0a5a25297ddc2">ezAtomicUtils::Decrement</a>(ezInt64&amp; dest)</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span>{</div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span>  <span class="keywordflow">return</span> __sync_sub_and_fetch_8(&amp;dest, 1);</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span>}</div>
</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span> </div>
<div class="foldopen" id="foldopen00034" data-start="{" data-end="}">
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#affb318a6a9c966cccf68c807d2c070de">   34</a></span>EZ_ALWAYS_INLINE ezInt32 <a class="code hl_function" href="../../d6/d25/structez_atomic_utils.htm#affb318a6a9c966cccf68c807d2c070de">ezAtomicUtils::PostIncrement</a>(ezInt32&amp; dest)</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>{</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span>  <span class="keywordflow">return</span> __sync_fetch_and_add(&amp;dest, 1);</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span>}</div>
</div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span> </div>
<div class="foldopen" id="foldopen00039" data-start="{" data-end="}">
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#a9da3b1bd74a91812870aeeca8ba1946e">   39</a></span>EZ_ALWAYS_INLINE ezInt64 <a class="code hl_function" href="../../d6/d25/structez_atomic_utils.htm#affb318a6a9c966cccf68c807d2c070de">ezAtomicUtils::PostIncrement</a>(ezInt64&amp; dest)</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span>{</div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>  <span class="keywordflow">return</span> __sync_fetch_and_add_8(&amp;dest, 1);</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>}</div>
</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span> </div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span> </div>
<div class="foldopen" id="foldopen00045" data-start="{" data-end="}">
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#a4fbfe7f94c536b7d27d39450c2442b01">   45</a></span>EZ_ALWAYS_INLINE ezInt32 <a class="code hl_function" href="../../d6/d25/structez_atomic_utils.htm#a4fbfe7f94c536b7d27d39450c2442b01">ezAtomicUtils::PostDecrement</a>(ezInt32&amp; dest)</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span>{</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span>  <span class="keywordflow">return</span> __sync_fetch_and_sub(&amp;dest, 1);</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>}</div>
</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span> </div>
<div class="foldopen" id="foldopen00050" data-start="{" data-end="}">
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#acf3212deece33c6b335d42251143ea30">   50</a></span>EZ_ALWAYS_INLINE ezInt64 <a class="code hl_function" href="../../d6/d25/structez_atomic_utils.htm#a4fbfe7f94c536b7d27d39450c2442b01">ezAtomicUtils::PostDecrement</a>(ezInt64&amp; dest)</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>{</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>  <span class="keywordflow">return</span> __sync_fetch_and_sub_8(&amp;dest, 1);</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>}</div>
</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span> </div>
<div class="foldopen" id="foldopen00055" data-start="{" data-end="}">
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#a2cbf7697a1ec2ac7d84c4d6e6498fb7d">   55</a></span>EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../d6/d25/structez_atomic_utils.htm#a2cbf7697a1ec2ac7d84c4d6e6498fb7d">ezAtomicUtils::Add</a>(ezInt32&amp; dest, ezInt32 value)</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>{</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>  __sync_fetch_and_add(&amp;dest, value);</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>}</div>
</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span> </div>
<div class="foldopen" id="foldopen00060" data-start="{" data-end="}">
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#a3c22517f63bf994aa7f399723a6d0cf0">   60</a></span>EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../d6/d25/structez_atomic_utils.htm#a2cbf7697a1ec2ac7d84c4d6e6498fb7d">ezAtomicUtils::Add</a>(ezInt64&amp; dest, ezInt64 value)</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>{</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>  __sync_fetch_and_add_8(&amp;dest, value);</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>}</div>
</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span> </div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span> </div>
<div class="foldopen" id="foldopen00066" data-start="{" data-end="}">
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#aee27b7eb603a3a27d7ae83ec980adedc">   66</a></span>EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../d6/d25/structez_atomic_utils.htm#aee27b7eb603a3a27d7ae83ec980adedc">ezAtomicUtils::And</a>(ezInt32&amp; dest, ezInt32 value)</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>{</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>  __sync_fetch_and_and(&amp;dest, value);</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>}</div>
</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span> </div>
<div class="foldopen" id="foldopen00071" data-start="{" data-end="}">
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#a1960b3130813b14c924381cb08cdd3c2">   71</a></span>EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../d6/d25/structez_atomic_utils.htm#aee27b7eb603a3a27d7ae83ec980adedc">ezAtomicUtils::And</a>(ezInt64&amp; dest, ezInt64 value)</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>{</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>  __sync_fetch_and_and_8(&amp;dest, value);</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>}</div>
</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span> </div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span> </div>
<div class="foldopen" id="foldopen00077" data-start="{" data-end="}">
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#a1a9ed49b221255c03d33723c765c276e">   77</a></span>EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../d6/d25/structez_atomic_utils.htm#a1a9ed49b221255c03d33723c765c276e">ezAtomicUtils::Or</a>(ezInt32&amp; dest, ezInt32 value)</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>{</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>  __sync_fetch_and_or(&amp;dest, value);</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>}</div>
</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span> </div>
<div class="foldopen" id="foldopen00082" data-start="{" data-end="}">
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#ab5ae5c6c5a176d2caf73329d5cb9d002">   82</a></span>EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../d6/d25/structez_atomic_utils.htm#a1a9ed49b221255c03d33723c765c276e">ezAtomicUtils::Or</a>(ezInt64&amp; dest, ezInt64 value)</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>{</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>  __sync_fetch_and_or_8(&amp;dest, value);</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>}</div>
</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span> </div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span> </div>
<div class="foldopen" id="foldopen00088" data-start="{" data-end="}">
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#aee01b21c4a5f3683e560a74a43513ed0">   88</a></span>EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../d6/d25/structez_atomic_utils.htm#aee01b21c4a5f3683e560a74a43513ed0">ezAtomicUtils::Xor</a>(ezInt32&amp; dest, ezInt32 value)</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>{</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>  __sync_fetch_and_xor(&amp;dest, value);</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>}</div>
</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span> </div>
<div class="foldopen" id="foldopen00093" data-start="{" data-end="}">
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#afdd88e8c8b48332c8b5974bf0916466a">   93</a></span>EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../d6/d25/structez_atomic_utils.htm#aee01b21c4a5f3683e560a74a43513ed0">ezAtomicUtils::Xor</a>(ezInt64&amp; dest, ezInt64 value)</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span>{</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>  __sync_fetch_and_xor_8(&amp;dest, value);</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>}</div>
</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span> </div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span> </div>
<div class="foldopen" id="foldopen00099" data-start="{" data-end="}">
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#a3f8d9b41c0305d1f885ca4f89e9db4fc">   99</a></span>EZ_FORCE_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../d6/d25/structez_atomic_utils.htm#a3f8d9b41c0305d1f885ca4f89e9db4fc">ezAtomicUtils::Min</a>(ezInt32&amp; dest, ezInt32 value)</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>{</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>  <span class="comment">// tries to exchange dest with the new value as long as the oldValue is not what we expected</span></div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>  <span class="keywordflow">while</span> (<span class="keyword">true</span>)</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>  {</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>    ezInt32 iOldValue = dest;</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>    ezInt32 iNewValue = <a class="code hl_function" href="../../db/d78/namespaceez_math.htm#ad8009b4da9cb427658d71e30576f209e">ezMath::Min</a>(iOldValue, value);</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span> </div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>    <span class="keywordflow">if</span> (__sync_bool_compare_and_swap(&amp;dest, iOldValue, iNewValue))</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>      <span class="keywordflow">break</span>;</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>  }</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span>}</div>
</div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span> </div>
<div class="foldopen" id="foldopen00112" data-start="{" data-end="}">
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#a07ee6cd554b39f6125ca2b31acefd151">  112</a></span>EZ_FORCE_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../d6/d25/structez_atomic_utils.htm#a3f8d9b41c0305d1f885ca4f89e9db4fc">ezAtomicUtils::Min</a>(ezInt64&amp; dest, ezInt64 value)</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>{</div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span>  <span class="comment">// tries to exchange dest with the new value as long as the oldValue is not what we expected</span></div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span>  <span class="keywordflow">while</span> (<span class="keyword">true</span>)</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>  {</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>    ezInt64 iOldValue = dest;</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span>    ezInt64 iNewValue = <a class="code hl_function" href="../../db/d78/namespaceez_math.htm#ad8009b4da9cb427658d71e30576f209e">ezMath::Min</a>(iOldValue, value);</div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span> </div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>    <span class="keywordflow">if</span> (__sync_bool_compare_and_swap_8(&amp;dest, iOldValue, iNewValue))</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span>      <span class="keywordflow">break</span>;</div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>  }</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span>}</div>
</div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span> </div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span> </div>
<div class="foldopen" id="foldopen00126" data-start="{" data-end="}">
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#a292b53c130324244a9c2d987016c935d">  126</a></span>EZ_FORCE_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../d6/d25/structez_atomic_utils.htm#a292b53c130324244a9c2d987016c935d">ezAtomicUtils::Max</a>(ezInt32&amp; dest, ezInt32 value)</div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span>{</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span>  <span class="comment">// tries to exchange dest with the new value as long as the oldValue is not what we expected</span></div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span>  <span class="keywordflow">while</span> (<span class="keyword">true</span>)</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span>  {</div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span>    ezInt32 iOldValue = dest;</div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span>    ezInt32 iNewValue = <a class="code hl_function" href="../../db/d78/namespaceez_math.htm#a6f7ee19d0f8e81ff6ae5f394075e3a56">ezMath::Max</a>(iOldValue, value);</div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span> </div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>    <span class="keywordflow">if</span> (__sync_bool_compare_and_swap(&amp;dest, iOldValue, iNewValue))</div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span>      <span class="keywordflow">break</span>;</div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span>  }</div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span>}</div>
</div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span> </div>
<div class="foldopen" id="foldopen00139" data-start="{" data-end="}">
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#a605effb538def3cddb470fff63be1f61">  139</a></span>EZ_FORCE_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../d6/d25/structez_atomic_utils.htm#a292b53c130324244a9c2d987016c935d">ezAtomicUtils::Max</a>(ezInt64&amp; dest, ezInt64 value)</div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>{</div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span>  <span class="comment">// tries to exchange dest with the new value as long as the oldValue is not what we expected</span></div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>  <span class="keywordflow">while</span> (<span class="keyword">true</span>)</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span>  {</div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span>    ezInt64 iOldValue = dest;</div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span>    ezInt64 iNewValue = <a class="code hl_function" href="../../db/d78/namespaceez_math.htm#a6f7ee19d0f8e81ff6ae5f394075e3a56">ezMath::Max</a>(iOldValue, value);</div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span> </div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span>    <span class="keywordflow">if</span> (__sync_bool_compare_and_swap_8(&amp;dest, iOldValue, iNewValue))</div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span>      <span class="keywordflow">break</span>;</div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span>  }</div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span>}</div>
</div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span> </div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span> </div>
<div class="foldopen" id="foldopen00153" data-start="{" data-end="}">
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#aecd96c9628f05b422dfc736b5f774e2e">  153</a></span>EZ_ALWAYS_INLINE ezInt32 <a class="code hl_function" href="../../d6/d25/structez_atomic_utils.htm#aecd96c9628f05b422dfc736b5f774e2e">ezAtomicUtils::Set</a>(ezInt32&amp; dest, ezInt32 value)</div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span>{</div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span>  <span class="keywordflow">return</span> __sync_lock_test_and_set(&amp;dest, value);</div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span>}</div>
</div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span> </div>
<div class="foldopen" id="foldopen00158" data-start="{" data-end="}">
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#ac7aed44953be8ac2ce48985ad3c7fe70">  158</a></span>EZ_ALWAYS_INLINE ezInt64 <a class="code hl_function" href="../../d6/d25/structez_atomic_utils.htm#aecd96c9628f05b422dfc736b5f774e2e">ezAtomicUtils::Set</a>(ezInt64&amp; dest, ezInt64 value)</div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span>{</div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span>  <span class="keywordflow">return</span> __sync_lock_test_and_set_8(&amp;dest, value);</div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span>}</div>
</div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span> </div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span> </div>
<div class="foldopen" id="foldopen00164" data-start="{" data-end="}">
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#af6e10dfc4d596617fae90d206590e76a">  164</a></span>EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d6/d25/structez_atomic_utils.htm#af6e10dfc4d596617fae90d206590e76a">ezAtomicUtils::TestAndSet</a>(ezInt32&amp; dest, ezInt32 expected, ezInt32 value)</div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span>{</div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span>  <span class="keywordflow">return</span> __sync_bool_compare_and_swap(&amp;dest, expected, value);</div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span>}</div>
</div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span> </div>
<div class="foldopen" id="foldopen00169" data-start="{" data-end="}">
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#a04039f63b9e6530465c4dae8821801b6">  169</a></span>EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d6/d25/structez_atomic_utils.htm#af6e10dfc4d596617fae90d206590e76a">ezAtomicUtils::TestAndSet</a>(ezInt64&amp; dest, ezInt64 expected, ezInt64 value)</div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span>{</div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span>  <span class="keywordflow">return</span> __sync_bool_compare_and_swap_8(&amp;dest, expected, value);</div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span>}</div>
</div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span> </div>
<div class="foldopen" id="foldopen00174" data-start="{" data-end="}">
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#a1cd38747a192ce89df37cb1fa1fd0871">  174</a></span>EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d6/d25/structez_atomic_utils.htm#af6e10dfc4d596617fae90d206590e76a">ezAtomicUtils::TestAndSet</a>(<span class="keywordtype">void</span>** dest, <span class="keywordtype">void</span>* expected, <span class="keywordtype">void</span>* value)</div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span>{</div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span><span class="preprocessor">#if EZ_ENABLED(EZ_PLATFORM_64BIT)</span></div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span>  ezUInt64* puiTemp = <span class="keyword">reinterpret_cast&lt;</span>ezUInt64*<span class="keyword">&gt;</span>(dest);</div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span>  <span class="keywordflow">return</span> __sync_bool_compare_and_swap(puiTemp, <span class="keyword">reinterpret_cast&lt;</span>ezUInt64<span class="keyword">&gt;</span>(expected), <span class="keyword">reinterpret_cast&lt;</span>ezUInt64<span class="keyword">&gt;</span>(value));</div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span><span class="preprocessor">#else</span></div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span>  ezUInt32* puiTemp = <span class="keyword">reinterpret_cast&lt;</span>ezUInt32*<span class="keyword">&gt;</span>(dest);</div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span>  <span class="keywordflow">return</span> __sync_bool_compare_and_swap(puiTemp, <span class="keyword">reinterpret_cast&lt;</span>ezUInt32<span class="keyword">&gt;</span>(expected), <span class="keyword">reinterpret_cast&lt;</span>ezUInt32<span class="keyword">&gt;</span>(value));</div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno">  183</span>}</div>
</div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span> </div>
<div class="foldopen" id="foldopen00185" data-start="{" data-end="}">
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#a9122c3d322e2d736595b90723f06b625">  185</a></span>EZ_ALWAYS_INLINE ezInt32 <a class="code hl_function" href="../../d6/d25/structez_atomic_utils.htm#a9122c3d322e2d736595b90723f06b625">ezAtomicUtils::CompareAndSwap</a>(ezInt32&amp; dest, ezInt32 expected, ezInt32 value)</div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span>{</div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span>  <span class="keywordflow">return</span> __sync_val_compare_and_swap(&amp;dest, expected, value);</div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span>}</div>
</div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span> </div>
<div class="foldopen" id="foldopen00190" data-start="{" data-end="}">
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#aa2d42f393edb39a773dd4f38abb922b5">  190</a></span>EZ_ALWAYS_INLINE ezInt64 <a class="code hl_function" href="../../d6/d25/structez_atomic_utils.htm#a9122c3d322e2d736595b90723f06b625">ezAtomicUtils::CompareAndSwap</a>(ezInt64&amp; dest, ezInt64 expected, ezInt64 value)</div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span>{</div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span>  <span class="keywordflow">return</span> __sync_val_compare_and_swap_8(&amp;dest, expected, value);</div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span>}</div>
</div>
<div class="ttc" id="anamespaceez_math_htm_a6f7ee19d0f8e81ff6ae5f394075e3a56"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a6f7ee19d0f8e81ff6ae5f394075e3a56">ezMath::Max</a></div><div class="ttdeci">constexpr EZ_ALWAYS_INLINE T Max(T f1, T f2)</div><div class="ttdoc">Returns the greater value, f1 or f2.</div><div class="ttdef"><b>Definition</b> Math_inl.h:39</div></div>
<div class="ttc" id="anamespaceez_math_htm_ad8009b4da9cb427658d71e30576f209e"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#ad8009b4da9cb427658d71e30576f209e">ezMath::Min</a></div><div class="ttdeci">constexpr EZ_ALWAYS_INLINE T Min(T f1, T f2)</div><div class="ttdoc">Returns the smaller value, f1 or f2.</div><div class="ttdef"><b>Definition</b> Math_inl.h:27</div></div>
<div class="ttc" id="astructez_atomic_utils_htm_a010b48d5ef3131037a09d1d46dfc1c83"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#a010b48d5ef3131037a09d1d46dfc1c83">ezAtomicUtils::Read</a></div><div class="ttdeci">static ezInt32 Read(const ezInt32 &amp;iSrc)</div><div class="ttdoc">Returns src as an atomic operation and returns its value.</div><div class="ttdef"><b>Definition</b> AtomicUtils_Posix.h:3</div></div>
<div class="ttc" id="astructez_atomic_utils_htm_a1a9ed49b221255c03d33723c765c276e"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#a1a9ed49b221255c03d33723c765c276e">ezAtomicUtils::Or</a></div><div class="ttdeci">static void Or(ezInt32 &amp;ref_iDest, ezInt32 value)</div><div class="ttdoc">Performs an atomic bitwise OR on dest using value.</div><div class="ttdef"><b>Definition</b> AtomicUtils_Posix.h:77</div></div>
<div class="ttc" id="astructez_atomic_utils_htm_a292b53c130324244a9c2d987016c935d"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#a292b53c130324244a9c2d987016c935d">ezAtomicUtils::Max</a></div><div class="ttdeci">static void Max(ezInt32 &amp;ref_iDest, ezInt32 value)</div><div class="ttdoc">Performs an atomic max operation on dest using value.</div><div class="ttdef"><b>Definition</b> AtomicUtils_Posix.h:126</div></div>
<div class="ttc" id="astructez_atomic_utils_htm_a2cbf7697a1ec2ac7d84c4d6e6498fb7d"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#a2cbf7697a1ec2ac7d84c4d6e6498fb7d">ezAtomicUtils::Add</a></div><div class="ttdeci">static void Add(ezInt32 &amp;ref_iDest, ezInt32 value)</div><div class="ttdoc">Adds value to dest as an atomic operation.</div><div class="ttdef"><b>Definition</b> AtomicUtils_Posix.h:55</div></div>
<div class="ttc" id="astructez_atomic_utils_htm_a3b8be142a37e2c9efdc0a5a25297ddc2"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#a3b8be142a37e2c9efdc0a5a25297ddc2">ezAtomicUtils::Decrement</a></div><div class="ttdeci">static ezInt32 Decrement(ezInt32 &amp;ref_iDest)</div><div class="ttdoc">Decrements dest as an atomic operation and returns the new value.</div><div class="ttdef"><b>Definition</b> AtomicUtils_Posix.h:24</div></div>
<div class="ttc" id="astructez_atomic_utils_htm_a3f8d9b41c0305d1f885ca4f89e9db4fc"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#a3f8d9b41c0305d1f885ca4f89e9db4fc">ezAtomicUtils::Min</a></div><div class="ttdeci">static void Min(ezInt32 &amp;ref_iDest, ezInt32 value)</div><div class="ttdoc">Performs an atomic min operation on dest using value.</div><div class="ttdef"><b>Definition</b> AtomicUtils_Posix.h:99</div></div>
<div class="ttc" id="astructez_atomic_utils_htm_a4fbfe7f94c536b7d27d39450c2442b01"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#a4fbfe7f94c536b7d27d39450c2442b01">ezAtomicUtils::PostDecrement</a></div><div class="ttdeci">static ezInt32 PostDecrement(ezInt32 &amp;ref_iDest)</div><div class="ttdoc">Decrements dest as an atomic operation and returns the old value.</div><div class="ttdef"><b>Definition</b> AtomicUtils_Posix.h:45</div></div>
<div class="ttc" id="astructez_atomic_utils_htm_a9122c3d322e2d736595b90723f06b625"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#a9122c3d322e2d736595b90723f06b625">ezAtomicUtils::CompareAndSwap</a></div><div class="ttdeci">static ezInt32 CompareAndSwap(ezInt32 &amp;ref_iDest, ezInt32 iExpected, ezInt32 value)</div><div class="ttdoc">If dest is equal to expected, this function sets dest to value. Otherwise dest will not be modified....</div><div class="ttdef"><b>Definition</b> AtomicUtils_Posix.h:185</div></div>
<div class="ttc" id="astructez_atomic_utils_htm_ac1d9c32986d0a8437b66af5d0e450fa5"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#ac1d9c32986d0a8437b66af5d0e450fa5">ezAtomicUtils::Increment</a></div><div class="ttdeci">static ezInt32 Increment(ezInt32 &amp;ref_iDest)</div><div class="ttdoc">Increments dest as an atomic operation and returns the new value.</div><div class="ttdef"><b>Definition</b> AtomicUtils_Posix.h:13</div></div>
<div class="ttc" id="astructez_atomic_utils_htm_aecd96c9628f05b422dfc736b5f774e2e"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#aecd96c9628f05b422dfc736b5f774e2e">ezAtomicUtils::Set</a></div><div class="ttdeci">static ezInt32 Set(ezInt32 &amp;ref_iDest, ezInt32 value)</div><div class="ttdoc">Sets dest to value as an atomic operation and returns the original value of dest.</div><div class="ttdef"><b>Definition</b> AtomicUtils_Posix.h:153</div></div>
<div class="ttc" id="astructez_atomic_utils_htm_aee01b21c4a5f3683e560a74a43513ed0"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#aee01b21c4a5f3683e560a74a43513ed0">ezAtomicUtils::Xor</a></div><div class="ttdeci">static void Xor(ezInt32 &amp;ref_iDest, ezInt32 value)</div><div class="ttdoc">Performs an atomic bitwise XOR on dest using value.</div><div class="ttdef"><b>Definition</b> AtomicUtils_Posix.h:88</div></div>
<div class="ttc" id="astructez_atomic_utils_htm_aee27b7eb603a3a27d7ae83ec980adedc"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#aee27b7eb603a3a27d7ae83ec980adedc">ezAtomicUtils::And</a></div><div class="ttdeci">static void And(ezInt32 &amp;ref_iDest, ezInt32 value)</div><div class="ttdoc">Performs an atomic bitwise AND on dest using value.</div><div class="ttdef"><b>Definition</b> AtomicUtils_Posix.h:66</div></div>
<div class="ttc" id="astructez_atomic_utils_htm_af6e10dfc4d596617fae90d206590e76a"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#af6e10dfc4d596617fae90d206590e76a">ezAtomicUtils::TestAndSet</a></div><div class="ttdeci">static bool TestAndSet(ezInt32 &amp;ref_iDest, ezInt32 iExpected, ezInt32 value)</div><div class="ttdoc">If dest is equal to expected, this function sets dest to value and returns true. Otherwise dest will ...</div><div class="ttdef"><b>Definition</b> AtomicUtils_Posix.h:164</div></div>
<div class="ttc" id="astructez_atomic_utils_htm_affb318a6a9c966cccf68c807d2c070de"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#affb318a6a9c966cccf68c807d2c070de">ezAtomicUtils::PostIncrement</a></div><div class="ttdeci">static ezInt32 PostIncrement(ezInt32 &amp;ref_iDest)</div><div class="ttdoc">Increments dest as an atomic operation and returns the old value.</div><div class="ttdef"><b>Definition</b> AtomicUtils_Posix.h:34</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_81a97b29d048515ed79592945c8b94b3.htm">Platform</a></li><li class="navelem"><a class="el" href="../../dir_ea0f1cea308dbde9b8c550f938edec5f.htm">Posix</a></li><li class="navelem"><b>AtomicUtils_Posix.h</b></li>
    <li class="footer">Generated on Fri Jul 11 2025 12:17:52 for ezEngine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
