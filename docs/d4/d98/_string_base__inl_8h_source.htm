<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Strings/Implementation/StringBase_inl.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 23.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d4/d98/_string_base__inl_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">StringBase_inl.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;EZ_ALWAYS_INLINE <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt;Derived&gt;::InternalGetData</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;  <span class="keyword">const</span> Derived* pDerived = <span class="keyword">static_cast&lt;</span><span class="keyword">const </span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>);</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;  <span class="keywordflow">return</span> pDerived-&gt;GetData();</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;}</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160; </div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;EZ_ALWAYS_INLINE <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt;Derived&gt;::InternalGetDataEnd</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;  <span class="keyword">const</span> Derived* pDerived = <span class="keyword">static_cast&lt;</span><span class="keyword">const </span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>);</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;  <span class="keywordflow">return</span> pDerived-&gt;GetData() + pDerived-&gt;GetElementCount();</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;}</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160; </div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;EZ_ALWAYS_INLINE ezUInt32 <a class="code" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt;Derived&gt;::InternalGetElementCount</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;  <span class="keyword">const</span> Derived* pDerived = <span class="keyword">static_cast&lt;</span><span class="keyword">const </span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>);</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;  <span class="keywordflow">return</span> pDerived-&gt;GetElementCount();</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;}</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160; </div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00025"></a><span class="lineno"><a class="line" href="../../dd/d69/structez_string_base.htm#a3b169646f62ef8a8d33b63e2b8731afb">   25</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../dd/d69/structez_string_base.htm#a3b169646f62ef8a8d33b63e2b8731afb">ezStringBase&lt;Derived&gt;::IsEmpty</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../de/df8/classez_string_utils.htm#a26f868ce8249b864f448837638ffde33">ezStringUtils::IsNullOrEmpty</a>(InternalGetData()) || (InternalGetData() == InternalGetDataEnd());</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;}</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160; </div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="../../dd/d69/structez_string_base.htm#aa2292b0dc69f7889157e6488455f5fd6">   31</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../dd/d69/structez_string_base.htm#aa2292b0dc69f7889157e6488455f5fd6">ezStringBase&lt;Derived&gt;::StartsWith</a>(<a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sStartsWith)<span class="keyword"> const</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../de/df8/classez_string_utils.htm#a7b418cc21bcbebde0942157e9026d2a4">ezStringUtils::StartsWith</a>(InternalGetData(), sStartsWith.<a class="code" href="../../de/db8/structez_string_view.htm#a7e6ab4aebc721857871d822321935d5f">GetStartPointer</a>(), InternalGetDataEnd(), sStartsWith.<a class="code" href="../../de/db8/structez_string_view.htm#aeb4fee979aa7e71f8c3596fb342ad2bc">GetEndPointer</a>());</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;}</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160; </div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00037"></a><span class="lineno"><a class="line" href="../../dd/d69/structez_string_base.htm#a5820e97ac4c87313b8874f9f03e6b902">   37</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../dd/d69/structez_string_base.htm#a5820e97ac4c87313b8874f9f03e6b902">ezStringBase&lt;Derived&gt;::StartsWith_NoCase</a>(<a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sStartsWith)<span class="keyword"> const</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../de/df8/classez_string_utils.htm#a9a76bb518ebebf3971f367a478a387c3">ezStringUtils::StartsWith_NoCase</a>(InternalGetData(), sStartsWith.<a class="code" href="../../de/db8/structez_string_view.htm#a7e6ab4aebc721857871d822321935d5f">GetStartPointer</a>(), InternalGetDataEnd(), sStartsWith.<a class="code" href="../../de/db8/structez_string_view.htm#aeb4fee979aa7e71f8c3596fb342ad2bc">GetEndPointer</a>());</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;}</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160; </div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="../../dd/d69/structez_string_base.htm#a0bc84753ec74d1692958ad6c0b60a065">   43</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../dd/d69/structez_string_base.htm#a0bc84753ec74d1692958ad6c0b60a065">ezStringBase&lt;Derived&gt;::EndsWith</a>(<a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sEndsWith)<span class="keyword"> const</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../de/df8/classez_string_utils.htm#a347b438581d998a7ae158c57ceca1adf">ezStringUtils::EndsWith</a>(InternalGetData(), sEndsWith.<a class="code" href="../../de/db8/structez_string_view.htm#a7e6ab4aebc721857871d822321935d5f">GetStartPointer</a>(), InternalGetDataEnd(), sEndsWith.<a class="code" href="../../de/db8/structez_string_view.htm#aeb4fee979aa7e71f8c3596fb342ad2bc">GetEndPointer</a>());</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;}</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160; </div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="../../dd/d69/structez_string_base.htm#af063ac74d2c0a66f0bbddb62d16c5c50">   49</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../dd/d69/structez_string_base.htm#af063ac74d2c0a66f0bbddb62d16c5c50">ezStringBase&lt;Derived&gt;::EndsWith_NoCase</a>(<a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sEndsWith)<span class="keyword"> const</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../de/df8/classez_string_utils.htm#a22bea564b8ddd615f8b24886ae566397">ezStringUtils::EndsWith_NoCase</a>(InternalGetData(), sEndsWith.<a class="code" href="../../de/db8/structez_string_view.htm#a7e6ab4aebc721857871d822321935d5f">GetStartPointer</a>(), InternalGetDataEnd(), sEndsWith.<a class="code" href="../../de/db8/structez_string_view.htm#aeb4fee979aa7e71f8c3596fb342ad2bc">GetEndPointer</a>());</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;}</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160; </div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="../../dd/d69/structez_string_base.htm#a7526c38e876eb72118bbb37ab1e36732">   55</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="../../dd/d69/structez_string_base.htm#a7526c38e876eb72118bbb37ab1e36732">ezStringBase&lt;Derived&gt;::FindSubString</a>(<a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sStringToFind, <span class="keyword">const</span> <span class="keywordtype">char</span>* szStartSearchAt <span class="comment">/* = nullptr */</span>)<span class="keyword"> const</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;  <span class="keywordflow">if</span> (szStartSearchAt == <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    szStartSearchAt = InternalGetData();</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160; </div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;  EZ_ASSERT_DEV((szStartSearchAt &gt;= InternalGetData()) &amp;&amp; (szStartSearchAt &lt;= InternalGetDataEnd()), <span class="stringliteral">&quot;The given pointer to start searching at is not inside this strings valid range.&quot;</span>);</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160; </div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../de/df8/classez_string_utils.htm#a4e7bb80c9b5b1bc468d88e70379895ff">ezStringUtils::FindSubString</a>(szStartSearchAt, sStringToFind.<a class="code" href="../../de/db8/structez_string_view.htm#a7e6ab4aebc721857871d822321935d5f">GetStartPointer</a>(), InternalGetDataEnd(), sStringToFind.<a class="code" href="../../de/db8/structez_string_view.htm#aeb4fee979aa7e71f8c3596fb342ad2bc">GetEndPointer</a>());</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;}</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160; </div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00066"></a><span class="lineno"><a class="line" href="../../dd/d69/structez_string_base.htm#a836c2433b152208146b07be5182aa90d">   66</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="../../dd/d69/structez_string_base.htm#a836c2433b152208146b07be5182aa90d">ezStringBase&lt;Derived&gt;::FindSubString_NoCase</a>(<a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sStringToFind, <span class="keyword">const</span> <span class="keywordtype">char</span>* szStartSearchAt <span class="comment">/* = nullptr */</span>)<span class="keyword"> const</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;  <span class="keywordflow">if</span> (szStartSearchAt == <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    szStartSearchAt = InternalGetData();</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160; </div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;  EZ_ASSERT_DEV((szStartSearchAt &gt;= InternalGetData()) &amp;&amp; (szStartSearchAt &lt;= InternalGetDataEnd()), <span class="stringliteral">&quot;The given pointer to start searching at is not inside this strings valid range.&quot;</span>);</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160; </div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../de/df8/classez_string_utils.htm#a0f7fbe5b887c01f627ca3336109a99c8">ezStringUtils::FindSubString_NoCase</a>(szStartSearchAt, sStringToFind.<a class="code" href="../../de/db8/structez_string_view.htm#a7e6ab4aebc721857871d822321935d5f">GetStartPointer</a>(), InternalGetDataEnd(), sStringToFind.<a class="code" href="../../de/db8/structez_string_view.htm#aeb4fee979aa7e71f8c3596fb342ad2bc">GetEndPointer</a>());</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;}</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160; </div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00077"></a><span class="lineno"><a class="line" href="../../dd/d69/structez_string_base.htm#a1119c28eec83e75e524b7355024cd636">   77</a></span>&#160;<span class="keyword">inline</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="../../dd/d69/structez_string_base.htm#a1119c28eec83e75e524b7355024cd636">ezStringBase&lt;Derived&gt;::FindLastSubString</a>(<a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sStringToFind, <span class="keyword">const</span> <span class="keywordtype">char</span>* szStartSearchAt <span class="comment">/* = nullptr */</span>)<span class="keyword"> const</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  <span class="keywordflow">if</span> (szStartSearchAt == <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    szStartSearchAt = InternalGetDataEnd();</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160; </div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;  EZ_ASSERT_DEV((szStartSearchAt &gt;= InternalGetData()) &amp;&amp; (szStartSearchAt &lt;= InternalGetDataEnd()),</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="stringliteral">&quot;The given pointer to start searching at is not inside this strings valid range.&quot;</span>);</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160; </div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../de/df8/classez_string_utils.htm#a340e032eb32b1e5b4c3461f52e7088e5">ezStringUtils::FindLastSubString</a>(InternalGetData(), sStringToFind.<a class="code" href="../../de/db8/structez_string_view.htm#a7e6ab4aebc721857871d822321935d5f">GetStartPointer</a>(), szStartSearchAt, InternalGetDataEnd(), sStringToFind.<a class="code" href="../../de/db8/structez_string_view.htm#aeb4fee979aa7e71f8c3596fb342ad2bc">GetEndPointer</a>());</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;}</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160; </div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00089"></a><span class="lineno"><a class="line" href="../../dd/d69/structez_string_base.htm#a549f29a89a36526391f4e407ca9f3a4b">   89</a></span>&#160;<span class="keyword">inline</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="../../dd/d69/structez_string_base.htm#a549f29a89a36526391f4e407ca9f3a4b">ezStringBase&lt;Derived&gt;::FindLastSubString_NoCase</a>(<a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sStringToFind, <span class="keyword">const</span> <span class="keywordtype">char</span>* szStartSearchAt <span class="comment">/* = nullptr */</span>)<span class="keyword"> const</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  <span class="keywordflow">if</span> (szStartSearchAt == <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    szStartSearchAt = InternalGetDataEnd();</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160; </div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;  EZ_ASSERT_DEV((szStartSearchAt &gt;= InternalGetData()) &amp;&amp; (szStartSearchAt &lt;= InternalGetDataEnd()),</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="stringliteral">&quot;The given pointer to start searching at is not inside this strings valid range.&quot;</span>);</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160; </div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../de/df8/classez_string_utils.htm#a32404acfb618abe38094ecddb19ff4b8">ezStringUtils::FindLastSubString_NoCase</a>(InternalGetData(), sStringToFind.<a class="code" href="../../de/db8/structez_string_view.htm#a7e6ab4aebc721857871d822321935d5f">GetStartPointer</a>(), szStartSearchAt, InternalGetDataEnd(), sStringToFind.<a class="code" href="../../de/db8/structez_string_view.htm#aeb4fee979aa7e71f8c3596fb342ad2bc">GetEndPointer</a>());</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;}</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160; </div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00101"></a><span class="lineno"><a class="line" href="../../dd/d69/structez_string_base.htm#afcc7196e4bb81b8b3e2da961dd917fde">  101</a></span>&#160;<span class="keyword">inline</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="../../dd/d69/structez_string_base.htm#afcc7196e4bb81b8b3e2da961dd917fde">ezStringBase&lt;Derived&gt;::FindWholeWord</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szSearchFor, <a class="code" href="../../de/df8/classez_string_utils.htm#a30a256e58c74618a988775c15bdd3d8e">ezStringUtils::EZ_CHARACTER_FILTER</a> isDelimiterCB, <span class="keyword">const</span> <span class="keywordtype">char</span>* szStartSearchAt <span class="comment">/* = nullptr */</span>)<span class="keyword"> const</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  <span class="keywordflow">if</span> (szStartSearchAt == <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    szStartSearchAt = InternalGetData();</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160; </div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;  EZ_ASSERT_DEV((szStartSearchAt &gt;= InternalGetData()) &amp;&amp; (szStartSearchAt &lt;= InternalGetDataEnd()), <span class="stringliteral">&quot;The given pointer to start searching at is not inside this strings valid range.&quot;</span>);</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160; </div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../de/df8/classez_string_utils.htm#a5a76ee35e2c60c5b19ffc9256866d821">ezStringUtils::FindWholeWord</a>(szStartSearchAt, szSearchFor, isDelimiterCB, InternalGetDataEnd());</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;}</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160; </div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00112"></a><span class="lineno"><a class="line" href="../../dd/d69/structez_string_base.htm#ab40b7ada5f552ec62ad5c2a87d9eb2e9">  112</a></span>&#160;<span class="keyword">inline</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="../../dd/d69/structez_string_base.htm#ab40b7ada5f552ec62ad5c2a87d9eb2e9">ezStringBase&lt;Derived&gt;::FindWholeWord_NoCase</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szSearchFor, <a class="code" href="../../de/df8/classez_string_utils.htm#a30a256e58c74618a988775c15bdd3d8e">ezStringUtils::EZ_CHARACTER_FILTER</a> isDelimiterCB, <span class="keyword">const</span> <span class="keywordtype">char</span>* szStartSearchAt <span class="comment">/* = nullptr */</span>)<span class="keyword"> const</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;  <span class="keywordflow">if</span> (szStartSearchAt == <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    szStartSearchAt = InternalGetData();</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160; </div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;  EZ_ASSERT_DEV((szStartSearchAt &gt;= InternalGetData()) &amp;&amp; (szStartSearchAt &lt;= InternalGetDataEnd()), <span class="stringliteral">&quot;The given pointer to start searching at is not inside this strings valid range.&quot;</span>);</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160; </div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../de/df8/classez_string_utils.htm#a5a3acc88b8a7ef4345ccbb8277c68446">ezStringUtils::FindWholeWord_NoCase</a>(szStartSearchAt, szSearchFor, isDelimiterCB, InternalGetDataEnd());</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;}</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160; </div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00123"></a><span class="lineno"><a class="line" href="../../dd/d69/structez_string_base.htm#ab4aa8e43c8a2bf68e642ad1bfbffb9fa">  123</a></span>&#160;ezInt32 <a class="code" href="../../dd/d69/structez_string_base.htm#ab4aa8e43c8a2bf68e642ad1bfbffb9fa">ezStringBase&lt;Derived&gt;::Compare</a>(<a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sOther)<span class="keyword"> const</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../de/df8/classez_string_utils.htm#acdb19aa3ae5704df01d8f7b3649ec8d7">ezStringUtils::Compare</a>(InternalGetData(), sOther.<a class="code" href="../../de/db8/structez_string_view.htm#a7e6ab4aebc721857871d822321935d5f">GetStartPointer</a>(), InternalGetDataEnd(), sOther.<a class="code" href="../../de/db8/structez_string_view.htm#aeb4fee979aa7e71f8c3596fb342ad2bc">GetEndPointer</a>());</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;}</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160; </div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00129"></a><span class="lineno"><a class="line" href="../../dd/d69/structez_string_base.htm#ad59a099496386a4dc0225f2564a9e9cb">  129</a></span>&#160;ezInt32 <a class="code" href="../../dd/d69/structez_string_base.htm#ad59a099496386a4dc0225f2564a9e9cb">ezStringBase&lt;Derived&gt;::CompareN</a>(<a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sOther, ezUInt32 uiCharsToCompare)<span class="keyword"> const</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../de/df8/classez_string_utils.htm#aa71830c3928036550dbbcf63cb57b737">ezStringUtils::CompareN</a>(InternalGetData(), sOther.<a class="code" href="../../de/db8/structez_string_view.htm#a7e6ab4aebc721857871d822321935d5f">GetStartPointer</a>(), uiCharsToCompare, InternalGetDataEnd(), sOther.<a class="code" href="../../de/db8/structez_string_view.htm#aeb4fee979aa7e71f8c3596fb342ad2bc">GetEndPointer</a>());</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;}</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160; </div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00135"></a><span class="lineno"><a class="line" href="../../dd/d69/structez_string_base.htm#a11cc4a3305c78e7e5f062073562b78b1">  135</a></span>&#160;ezInt32 <a class="code" href="../../dd/d69/structez_string_base.htm#a11cc4a3305c78e7e5f062073562b78b1">ezStringBase&lt;Derived&gt;::Compare_NoCase</a>(<a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sOther)<span class="keyword"> const</span></div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../de/df8/classez_string_utils.htm#a4411d4f7971834bd9ce1fe0cb39b2c39">ezStringUtils::Compare_NoCase</a>(InternalGetData(), sOther.<a class="code" href="../../de/db8/structez_string_view.htm#a7e6ab4aebc721857871d822321935d5f">GetStartPointer</a>(), InternalGetDataEnd(), sOther.<a class="code" href="../../de/db8/structez_string_view.htm#aeb4fee979aa7e71f8c3596fb342ad2bc">GetEndPointer</a>());</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;}</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160; </div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00141"></a><span class="lineno"><a class="line" href="../../dd/d69/structez_string_base.htm#aa234e5c9e6b3fb6e0296d00fd863e726">  141</a></span>&#160;ezInt32 <a class="code" href="../../dd/d69/structez_string_base.htm#aa234e5c9e6b3fb6e0296d00fd863e726">ezStringBase&lt;Derived&gt;::CompareN_NoCase</a>(<a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sOther, ezUInt32 uiCharsToCompare)<span class="keyword"> const</span></div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../de/df8/classez_string_utils.htm#a4e734c728f3ac39fc9f2629dafab2fc6">ezStringUtils::CompareN_NoCase</a>(InternalGetData(), sOther.<a class="code" href="../../de/db8/structez_string_view.htm#a7e6ab4aebc721857871d822321935d5f">GetStartPointer</a>(), uiCharsToCompare, InternalGetDataEnd(), sOther.<a class="code" href="../../de/db8/structez_string_view.htm#aeb4fee979aa7e71f8c3596fb342ad2bc">GetEndPointer</a>());</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;}</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160; </div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00147"></a><span class="lineno"><a class="line" href="../../dd/d69/structez_string_base.htm#af1283e59a13f463d2137726c0fa2573f">  147</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../dd/d69/structez_string_base.htm#af1283e59a13f463d2137726c0fa2573f">ezStringBase&lt;Derived&gt;::IsEqual</a>(<a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sOther)<span class="keyword"> const</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../de/df8/classez_string_utils.htm#aa1b8c125ced33a6a904f741597ecc673">ezStringUtils::IsEqual</a>(InternalGetData(), sOther.<a class="code" href="../../de/db8/structez_string_view.htm#a7e6ab4aebc721857871d822321935d5f">GetStartPointer</a>(), InternalGetDataEnd(), sOther.<a class="code" href="../../de/db8/structez_string_view.htm#aeb4fee979aa7e71f8c3596fb342ad2bc">GetEndPointer</a>());</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;}</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160; </div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00153"></a><span class="lineno"><a class="line" href="../../dd/d69/structez_string_base.htm#aa75c907e8543d51e46e9715427a2e3db">  153</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../dd/d69/structez_string_base.htm#aa75c907e8543d51e46e9715427a2e3db">ezStringBase&lt;Derived&gt;::IsEqualN</a>(<a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sOther, ezUInt32 uiCharsToCompare)<span class="keyword"> const</span></div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../de/df8/classez_string_utils.htm#a57f8ad413aa294bd530ff0d4dde00654">ezStringUtils::IsEqualN</a>(InternalGetData(), sOther.<a class="code" href="../../de/db8/structez_string_view.htm#a7e6ab4aebc721857871d822321935d5f">GetStartPointer</a>(), uiCharsToCompare, InternalGetDataEnd(), sOther.<a class="code" href="../../de/db8/structez_string_view.htm#aeb4fee979aa7e71f8c3596fb342ad2bc">GetEndPointer</a>());</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;}</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160; </div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00159"></a><span class="lineno"><a class="line" href="../../dd/d69/structez_string_base.htm#a819d3861f3efcaeb4393268840a43c37">  159</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../dd/d69/structez_string_base.htm#a819d3861f3efcaeb4393268840a43c37">ezStringBase&lt;Derived&gt;::IsEqual_NoCase</a>(<a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sOther)<span class="keyword"> const</span></div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../de/df8/classez_string_utils.htm#a5a375be30fe22c27368c0b2801e6c0b0">ezStringUtils::IsEqual_NoCase</a>(InternalGetData(), sOther.<a class="code" href="../../de/db8/structez_string_view.htm#a7e6ab4aebc721857871d822321935d5f">GetStartPointer</a>(), InternalGetDataEnd(), sOther.<a class="code" href="../../de/db8/structez_string_view.htm#aeb4fee979aa7e71f8c3596fb342ad2bc">GetEndPointer</a>());</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;}</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160; </div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00165"></a><span class="lineno"><a class="line" href="../../dd/d69/structez_string_base.htm#a746a8a1119e1eee5a5671bada6877265">  165</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../dd/d69/structez_string_base.htm#a746a8a1119e1eee5a5671bada6877265">ezStringBase&lt;Derived&gt;::IsEqualN_NoCase</a>(<a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sOther, ezUInt32 uiCharsToCompare)<span class="keyword"> const</span></div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../de/df8/classez_string_utils.htm#a5f5d6b2aad39e0309d957899b11056e4">ezStringUtils::IsEqualN_NoCase</a>(InternalGetData(), sOther.<a class="code" href="../../de/db8/structez_string_view.htm#a7e6ab4aebc721857871d822321935d5f">GetStartPointer</a>(), uiCharsToCompare, InternalGetDataEnd(), sOther.<a class="code" href="../../de/db8/structez_string_view.htm#aeb4fee979aa7e71f8c3596fb342ad2bc">GetEndPointer</a>());</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;}</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160; </div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00171"></a><span class="lineno"><a class="line" href="../../dd/d69/structez_string_base.htm#a05bec3cf5581b35aa18849239b2471c6">  171</a></span>&#160;<span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="../../dd/d69/structez_string_base.htm#a05bec3cf5581b35aa18849239b2471c6">ezStringBase&lt;Derived&gt;::ComputeCharacterPosition</a>(ezUInt32 uiCharacterIndex)<span class="keyword"> const</span></div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span>* pos = InternalGetData();</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;  <a class="code" href="../../d9/d32/classez_unicode_utils.htm#a7fb78e6f4d844ef8ceea9c31ff1cabeb">ezUnicodeUtils::MoveToNextUtf8</a>(pos, InternalGetDataEnd(), uiCharacterIndex);</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;  <span class="keywordflow">return</span> pos;</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;}</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160; </div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00179"></a><span class="lineno"><a class="line" href="../../dd/d69/structez_string_base.htm#a630aa4b168172aef7b32f8085148ed8e">  179</a></span>&#160;<span class="keyword">typename</span> <a class="code" href="../../d4/ddc/structez_string_iterator.htm">ezStringBase&lt;Derived&gt;::iterator</a> <a class="code" href="../../dd/d69/structez_string_base.htm#a630aa4b168172aef7b32f8085148ed8e">ezStringBase&lt;Derived&gt;::GetIteratorFront</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;  <span class="keywordflow">return</span> begin(*<span class="keyword">this</span>);</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;}</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160; </div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00185"></a><span class="lineno"><a class="line" href="../../dd/d69/structez_string_base.htm#a3821af6b610f6c40a46336f7accc0c7e">  185</a></span>&#160;<span class="keyword">typename</span> <a class="code" href="../../d6/d6b/structez_string_reverse_iterator.htm">ezStringBase&lt;Derived&gt;::reverse_iterator</a> <a class="code" href="../../dd/d69/structez_string_base.htm#a3821af6b610f6c40a46336f7accc0c7e">ezStringBase&lt;Derived&gt;::GetIteratorBack</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;  <span class="keywordflow">return</span> rbegin(*<span class="keyword">this</span>);</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;}</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160; </div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> DerivedLhs, <span class="keyword">typename</span> DerivedRhs&gt;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> operator==(<span class="keyword">const</span> <a class="code" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt;DerivedLhs&gt;</a>&amp; lhs, <span class="keyword">const</span> <a class="code" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt;DerivedRhs&gt;</a>&amp; rhs) <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;{</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;  <span class="keywordflow">return</span> lhs.<a class="code" href="../../dd/d69/structez_string_base.htm#af1283e59a13f463d2137726c0fa2573f">IsEqual</a>(rhs.<a class="code" href="../../dd/d69/structez_string_base.htm#a4dc8b54007099ca61b4b937923e7987b">GetView</a>());</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;}</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160; </div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> DerivedRhs&gt;</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> operator==(<span class="keyword">const</span> <span class="keywordtype">char</span>* lhs, <span class="keyword">const</span> <a class="code" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt;DerivedRhs&gt;</a>&amp; rhs) <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;{</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;  <span class="keywordflow">return</span> rhs.<a class="code" href="../../dd/d69/structez_string_base.htm#af1283e59a13f463d2137726c0fa2573f">IsEqual</a>(lhs);</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;}</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160; </div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> DerivedLhs&gt;</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> operator==(<span class="keyword">const</span> <a class="code" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt;DerivedLhs&gt;</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">char</span>* rhs) <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;{</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;  <span class="keywordflow">return</span> lhs.<a class="code" href="../../dd/d69/structez_string_base.htm#af1283e59a13f463d2137726c0fa2573f">IsEqual</a>(rhs);</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;}</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160; </div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> DerivedLhs, <span class="keyword">typename</span> DerivedRhs&gt;</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> operator!=(<span class="keyword">const</span> <a class="code" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt;DerivedLhs&gt;</a>&amp; lhs, <span class="keyword">const</span> <a class="code" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt;DerivedRhs&gt;</a>&amp; rhs) <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;{</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;  <span class="keywordflow">return</span> !lhs.<a class="code" href="../../dd/d69/structez_string_base.htm#af1283e59a13f463d2137726c0fa2573f">IsEqual</a>(rhs);</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;}</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160; </div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> DerivedRhs&gt;</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> operator!=(<span class="keyword">const</span> <span class="keywordtype">char</span>* lhs, <span class="keyword">const</span> <a class="code" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt;DerivedRhs&gt;</a>&amp; rhs) <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;{</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;  <span class="keywordflow">return</span> !rhs.<a class="code" href="../../dd/d69/structez_string_base.htm#af1283e59a13f463d2137726c0fa2573f">IsEqual</a>(lhs);</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;}</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160; </div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> DerivedLhs&gt;</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> operator!=(<span class="keyword">const</span> <a class="code" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt;DerivedLhs&gt;</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">char</span>* rhs) <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;{</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;  <span class="keywordflow">return</span> !lhs.<a class="code" href="../../dd/d69/structez_string_base.htm#af1283e59a13f463d2137726c0fa2573f">IsEqual</a>(rhs);</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;}</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160; </div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> DerivedLhs, <span class="keyword">typename</span> DerivedRhs&gt;</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> operator&lt;(<span class="keyword">const</span> <a class="code" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt;DerivedLhs&gt;</a>&amp; lhs, <span class="keyword">const</span> <a class="code" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt;DerivedRhs&gt;</a>&amp; rhs) <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;{</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;  <span class="keywordflow">return</span> lhs.<a class="code" href="../../dd/d69/structez_string_base.htm#ab4aa8e43c8a2bf68e642ad1bfbffb9fa">Compare</a>(rhs) &lt; 0;</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;}</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160; </div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> DerivedRhs&gt;</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> operator&lt;(<span class="keyword">const</span> <span class="keywordtype">char</span>* lhs, <span class="keyword">const</span> <a class="code" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt;DerivedRhs&gt;</a>&amp; rhs) <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;{</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;  <span class="keywordflow">return</span> rhs.<a class="code" href="../../dd/d69/structez_string_base.htm#ab4aa8e43c8a2bf68e642ad1bfbffb9fa">Compare</a>(lhs) &gt; 0;</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;}</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160; </div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> DerivedLhs&gt;</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> operator&lt;(<span class="keyword">const</span> <a class="code" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt;DerivedLhs&gt;</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">char</span>* rhs) <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;{</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;  <span class="keywordflow">return</span> lhs.<a class="code" href="../../dd/d69/structez_string_base.htm#ab4aa8e43c8a2bf68e642ad1bfbffb9fa">Compare</a>(rhs) &lt; 0;</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;}</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160; </div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> DerivedLhs, <span class="keyword">typename</span> DerivedRhs&gt;</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> operator&gt;(<span class="keyword">const</span> <a class="code" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt;DerivedLhs&gt;</a>&amp; lhs, <span class="keyword">const</span> <a class="code" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt;DerivedRhs&gt;</a>&amp; rhs) <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;{</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;  <span class="keywordflow">return</span> lhs.<a class="code" href="../../dd/d69/structez_string_base.htm#ab4aa8e43c8a2bf68e642ad1bfbffb9fa">Compare</a>(rhs) &gt; 0;</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;}</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160; </div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> DerivedRhs&gt;</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> operator&gt;(<span class="keyword">const</span> <span class="keywordtype">char</span>* lhs, <span class="keyword">const</span> <a class="code" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt;DerivedRhs&gt;</a>&amp; rhs) <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;{</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;  <span class="keywordflow">return</span> rhs.<a class="code" href="../../dd/d69/structez_string_base.htm#ab4aa8e43c8a2bf68e642ad1bfbffb9fa">Compare</a>(lhs) &lt; 0;</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;}</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160; </div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> DerivedLhs&gt;</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> operator&gt;(<span class="keyword">const</span> <a class="code" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt;DerivedLhs&gt;</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">char</span>* rhs) <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;{</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;  <span class="keywordflow">return</span> lhs.<a class="code" href="../../dd/d69/structez_string_base.htm#ab4aa8e43c8a2bf68e642ad1bfbffb9fa">Compare</a>(rhs) &gt; 0;</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;}</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160; </div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> DerivedLhs, <span class="keyword">typename</span> DerivedRhs&gt;</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> operator&lt;=(<span class="keyword">const</span> <a class="code" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt;DerivedLhs&gt;</a>&amp; lhs, <span class="keyword">const</span> <a class="code" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt;DerivedRhs&gt;</a>&amp; rhs) <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;{</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../de/df8/classez_string_utils.htm#acdb19aa3ae5704df01d8f7b3649ec8d7">ezStringUtils::Compare</a>(lhs.InternalGetData(), rhs.InternalGetData(), lhs.InternalGetDataEnd(), rhs.InternalGetDataEnd()) &lt;= 0;</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;}</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160; </div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> DerivedRhs&gt;</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> operator&lt;=(<span class="keyword">const</span> <span class="keywordtype">char</span>* lhs, <span class="keyword">const</span> <a class="code" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt;DerivedRhs&gt;</a>&amp; rhs) <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;{</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;  <span class="keywordflow">return</span> rhs.<a class="code" href="../../dd/d69/structez_string_base.htm#ab4aa8e43c8a2bf68e642ad1bfbffb9fa">Compare</a>(lhs) &gt;= 0;</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;}</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160; </div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> DerivedLhs&gt;</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> operator&lt;=(<span class="keyword">const</span> <a class="code" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt;DerivedLhs&gt;</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">char</span>* rhs) <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;{</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;  <span class="keywordflow">return</span> lhs.<a class="code" href="../../dd/d69/structez_string_base.htm#ab4aa8e43c8a2bf68e642ad1bfbffb9fa">Compare</a>(rhs) &lt;= 0;</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;}</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160; </div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> DerivedLhs, <span class="keyword">typename</span> DerivedRhs&gt;</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> operator&gt;=(<span class="keyword">const</span> <a class="code" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt;DerivedLhs&gt;</a>&amp; lhs, <span class="keyword">const</span> <a class="code" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt;DerivedRhs&gt;</a>&amp; rhs) <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;{</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../de/df8/classez_string_utils.htm#acdb19aa3ae5704df01d8f7b3649ec8d7">ezStringUtils::Compare</a>(lhs.InternalGetData(), rhs.InternalGetData(), lhs.InternalGetDataEnd(), rhs.InternalGetDataEnd()) &gt;= 0;</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;}</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160; </div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> DerivedRhs&gt;</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> operator&gt;=(<span class="keyword">const</span> <span class="keywordtype">char</span>* lhs, <span class="keyword">const</span> <a class="code" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt;DerivedRhs&gt;</a>&amp; rhs) <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;{</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;  <span class="keywordflow">return</span> rhs.<a class="code" href="../../dd/d69/structez_string_base.htm#ab4aa8e43c8a2bf68e642ad1bfbffb9fa">Compare</a>(lhs) &lt;= 0;</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;}</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160; </div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> DerivedLhs&gt;</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> operator&gt;=(<span class="keyword">const</span> <a class="code" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt;DerivedLhs&gt;</a>&amp; lhs, <span class="keyword">const</span> <span class="keywordtype">char</span>* rhs) <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;{</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;  <span class="keywordflow">return</span> lhs.<a class="code" href="../../dd/d69/structez_string_base.htm#ab4aa8e43c8a2bf68e642ad1bfbffb9fa">Compare</a>(rhs) &gt;= 0;</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;}</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160; </div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> DerivedLhs&gt;</div>
<div class="line"><a name="l00299"></a><span class="lineno"><a class="line" href="../../dd/d69/structez_string_base.htm#a2f255aa67639f3d3c0abd7a55a8ee9e3">  299</a></span>&#160;EZ_ALWAYS_INLINE <a class="code" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt;DerivedLhs&gt;::operator</a> <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a>(InternalGetData(), InternalGetElementCount());</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;}</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160; </div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00305"></a><span class="lineno"><a class="line" href="../../dd/d69/structez_string_base.htm#a4dc8b54007099ca61b4b937923e7987b">  305</a></span>&#160;EZ_ALWAYS_INLINE <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> <a class="code" href="../../dd/d69/structez_string_base.htm#a4dc8b54007099ca61b4b937923e7987b">ezStringBase&lt;Derived&gt;::GetView</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a>(InternalGetData(), InternalGetElementCount());</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;}</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160; </div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Container&gt;</div>
<div class="line"><a name="l00312"></a><span class="lineno"><a class="line" href="../../dd/d69/structez_string_base.htm#a328c33c66707ecea8ed93512a5ad2465">  312</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../dd/d69/structez_string_base.htm#a328c33c66707ecea8ed93512a5ad2465">ezStringBase&lt;Derived&gt;::Split</a>(<span class="keywordtype">bool</span> bReturnEmptyStrings, Container&amp; ref_output, <span class="keyword">const</span> <span class="keywordtype">char</span>* szSeparator1, <span class="keyword">const</span> <span class="keywordtype">char</span>* szSeparator2 <span class="comment">/*= nullptr*/</span>, <span class="keyword">const</span> <span class="keywordtype">char</span>* szSeparator3 <span class="comment">/*= nullptr*/</span>, <span class="keyword">const</span> <span class="keywordtype">char</span>* szSeparator4 <span class="comment">/*= nullptr*/</span>, <span class="keyword">const</span> <span class="keywordtype">char</span>* szSeparator5 <span class="comment">/*= nullptr*/</span>, <span class="keyword">const</span> <span class="keywordtype">char</span>* szSeparator6 <span class="comment">/*= nullptr*/</span>)<span class="keyword"> const</span></div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;  GetView().Split(bReturnEmptyStrings, ref_output, szSeparator1, szSeparator2, szSeparator3, szSeparator4, szSeparator5, szSeparator6);</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;}</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160; </div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00318"></a><span class="lineno"><a class="line" href="../../dd/d69/structez_string_base.htm#a501c95c64bd9476f553ea361d0f94a33">  318</a></span>&#160;<a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> <a class="code" href="../../dd/d69/structez_string_base.htm#a501c95c64bd9476f553ea361d0f94a33">ezStringBase&lt;Derived&gt;::GetRootedPathRootName</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;  <span class="keywordflow">return</span> GetView().<a class="code" href="../../de/db8/structez_string_view.htm#a68a0974fb1ea1db90c66e1a48780ee8d">GetRootedPathRootName</a>();</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;}</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160; </div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00324"></a><span class="lineno"><a class="line" href="../../dd/d69/structez_string_base.htm#a5981da7976e9bd420dc871da0bfab1a2">  324</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../dd/d69/structez_string_base.htm#a5981da7976e9bd420dc871da0bfab1a2">ezStringBase&lt;Derived&gt;::IsRootedPath</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;  <span class="keywordflow">return</span> GetView().IsRootedPath();</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;}</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160; </div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00330"></a><span class="lineno"><a class="line" href="../../dd/d69/structez_string_base.htm#ac2fc8eecf7a508bcb383b70ced7ffc25">  330</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../dd/d69/structez_string_base.htm#ac2fc8eecf7a508bcb383b70ced7ffc25">ezStringBase&lt;Derived&gt;::IsRelativePath</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;  <span class="keywordflow">return</span> GetView().IsRelativePath();</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;}</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160; </div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00336"></a><span class="lineno"><a class="line" href="../../dd/d69/structez_string_base.htm#aa2bb565f17573d92b3f995ede720b915">  336</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../dd/d69/structez_string_base.htm#aa2bb565f17573d92b3f995ede720b915">ezStringBase&lt;Derived&gt;::IsAbsolutePath</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;  <span class="keywordflow">return</span> GetView().IsAbsolutePath();</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;}</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160; </div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00342"></a><span class="lineno"><a class="line" href="../../dd/d69/structez_string_base.htm#abcd136562b6d279801aa6653c3dbd7c8">  342</a></span>&#160;<a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> <a class="code" href="../../dd/d69/structez_string_base.htm#abcd136562b6d279801aa6653c3dbd7c8">ezStringBase&lt;Derived&gt;::GetFileDirectory</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;  <span class="keywordflow">return</span> GetView().<a class="code" href="../../de/db8/structez_string_view.htm#a8a545a0b8da530e2bb53b5c30ac3a855">GetFileDirectory</a>();</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;}</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160; </div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00348"></a><span class="lineno"><a class="line" href="../../dd/d69/structez_string_base.htm#a839a783b7199310da98f5e52f7174c43">  348</a></span>&#160;<a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> <a class="code" href="../../dd/d69/structez_string_base.htm#a839a783b7199310da98f5e52f7174c43">ezStringBase&lt;Derived&gt;::GetFileNameAndExtension</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;  <span class="keywordflow">return</span> GetView().<a class="code" href="../../de/db8/structez_string_view.htm#afedd1422effd5dbf1936b7d892964859">GetFileNameAndExtension</a>();</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;}</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160; </div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00354"></a><span class="lineno"><a class="line" href="../../dd/d69/structez_string_base.htm#a6e36684efb429bac40152974cd8ca817">  354</a></span>&#160;<a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> <a class="code" href="../../dd/d69/structez_string_base.htm#a6e36684efb429bac40152974cd8ca817">ezStringBase&lt;Derived&gt;::GetFileName</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;  <span class="keywordflow">return</span> GetView().<a class="code" href="../../de/db8/structez_string_view.htm#a9d8cf062f146a81b17bea77459db1b2a">GetFileName</a>();</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;}</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160; </div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00360"></a><span class="lineno"><a class="line" href="../../dd/d69/structez_string_base.htm#a3b376db2ee452d362736bbf20021cc49">  360</a></span>&#160;<a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> <a class="code" href="../../dd/d69/structez_string_base.htm#a3b376db2ee452d362736bbf20021cc49">ezStringBase&lt;Derived&gt;::GetFileExtension</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;  <span class="keywordflow">return</span> GetView().<a class="code" href="../../de/db8/structez_string_view.htm#ac3178216fb83c698192b219c3765fbf2">GetFileExtension</a>();</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;}</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160; </div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00366"></a><span class="lineno"><a class="line" href="../../dd/d69/structez_string_base.htm#afdbb18858405f981767e683d858fb73c">  366</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../dd/d69/structez_string_base.htm#afdbb18858405f981767e683d858fb73c">ezStringBase&lt;Derived&gt;::HasExtension</a>(<a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sExtension)<span class="keyword"> const</span></div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;  <span class="keywordflow">return</span> GetView().HasExtension(sExtension);</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;}</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160; </div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00372"></a><span class="lineno"><a class="line" href="../../dd/d69/structez_string_base.htm#a31f4090e3be6134eb1702f909cd3ba33">  372</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../dd/d69/structez_string_base.htm#a31f4090e3be6134eb1702f909cd3ba33">ezStringBase&lt;Derived&gt;::HasAnyExtension</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;  <span class="keywordflow">return</span> GetView().HasAnyExtension();</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;}</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassez_string_utils_htm_a5a76ee35e2c60c5b19ffc9256866d821"><div class="ttname"><a href="../../de/df8/classez_string_utils.htm#a5a76ee35e2c60c5b19ffc9256866d821">ezStringUtils::FindWholeWord</a></div><div class="ttdeci">static const char * FindWholeWord(const char *szString, const char *szSearchFor, EZ_CHARACTER_FILTER isDelimiterCB, const char *pStringEnd=ezUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Searches szString for the word szSearchFor. If IsDelimiterCB returns true for both characters in fron...</div><div class="ttdef"><b>Definition:</b> StringUtils.cpp:686</div></div>
<div class="ttc" id="aclassez_string_utils_htm_a340e032eb32b1e5b4c3461f52e7088e5"><div class="ttname"><a href="../../de/df8/classez_string_utils.htm#a340e032eb32b1e5b4c3461f52e7088e5">ezStringUtils::FindLastSubString</a></div><div class="ttdeci">static const char * FindLastSubString(const char *szSource, const char *szStringToFind, const char *szStartSearchAt=nullptr, const char *pSourceEnd=ezUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *szStringToFindEnd=ezUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Searches for the last occurrence of szStringToFind in szSource before szStartSearchAt.</div><div class="ttdef"><b>Definition:</b> StringUtils.cpp:643</div></div>
<div class="ttc" id="astructez_string_base_htm_afdbb18858405f981767e683d858fb73c"><div class="ttname"><a href="../../dd/d69/structez_string_base.htm#afdbb18858405f981767e683d858fb73c">ezStringBase::HasExtension</a></div><div class="ttdeci">bool HasExtension(ezStringView sExtension) const</div><div class="ttdoc">Checks whether the given path ends with the given extension. szExtension should start with a '....</div><div class="ttdef"><b>Definition:</b> StringBase_inl.h:366</div></div>
<div class="ttc" id="astructez_string_base_htm_a05bec3cf5581b35aa18849239b2471c6"><div class="ttname"><a href="../../dd/d69/structez_string_base.htm#a05bec3cf5581b35aa18849239b2471c6">ezStringBase::ComputeCharacterPosition</a></div><div class="ttdeci">const char * ComputeCharacterPosition(ezUInt32 uiCharacterIndex) const</div><div class="ttdoc">Computes the pointer to the n-th character in the string. This is a linear search from the start.</div><div class="ttdef"><b>Definition:</b> StringBase_inl.h:171</div></div>
<div class="ttc" id="astructez_string_base_htm_af1283e59a13f463d2137726c0fa2573f"><div class="ttname"><a href="../../dd/d69/structez_string_base.htm#af1283e59a13f463d2137726c0fa2573f">ezStringBase::IsEqual</a></div><div class="ttdeci">bool IsEqual(ezStringView sOther) const</div><div class="ttdoc">Compares this string with the other string for equality.</div><div class="ttdef"><b>Definition:</b> StringBase_inl.h:147</div></div>
<div class="ttc" id="astructez_string_base_htm_a819d3861f3efcaeb4393268840a43c37"><div class="ttname"><a href="../../dd/d69/structez_string_base.htm#a819d3861f3efcaeb4393268840a43c37">ezStringBase::IsEqual_NoCase</a></div><div class="ttdeci">bool IsEqual_NoCase(ezStringView sOther) const</div><div class="ttdoc">Compares this string with the other string for equality.</div><div class="ttdef"><b>Definition:</b> StringBase_inl.h:159</div></div>
<div class="ttc" id="aclassez_string_utils_htm_aa1b8c125ced33a6a904f741597ecc673"><div class="ttname"><a href="../../de/df8/classez_string_utils.htm#aa1b8c125ced33a6a904f741597ecc673">ezStringUtils::IsEqual</a></div><div class="ttdeci">static bool IsEqual(const char *pString1, const char *pString2, const char *pString1End=ezUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *pString2End=ezUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Returns true, if the two given strings are identical (bitwise).</div><div class="ttdef"><b>Definition:</b> StringUtils_inl.h:124</div></div>
<div class="ttc" id="aclassez_string_utils_htm_acdb19aa3ae5704df01d8f7b3649ec8d7"><div class="ttname"><a href="../../de/df8/classez_string_utils.htm#acdb19aa3ae5704df01d8f7b3649ec8d7">ezStringUtils::Compare</a></div><div class="ttdeci">static ezInt32 Compare(const char *pString1, const char *pString2, const char *pString1End=ezUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *pString2End=ezUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Compares two strings for equality.</div><div class="ttdef"><b>Definition:</b> StringUtils.cpp:263</div></div>
<div class="ttc" id="aclassez_string_utils_htm_a9a76bb518ebebf3971f367a478a387c3"><div class="ttname"><a href="../../de/df8/classez_string_utils.htm#a9a76bb518ebebf3971f367a478a387c3">ezStringUtils::StartsWith_NoCase</a></div><div class="ttdeci">static bool StartsWith_NoCase(const char *szString, const char *szStartsWith, const char *pStringEnd=ezUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *szStartsWithEnd=ezUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Returns true if szString starts with the string given in szStartsWith. Ignores case.</div><div class="ttdef"><b>Definition:</b> StringUtils.cpp:531</div></div>
<div class="ttc" id="astructez_string_base_htm_aa2292b0dc69f7889157e6488455f5fd6"><div class="ttname"><a href="../../dd/d69/structez_string_base.htm#aa2292b0dc69f7889157e6488455f5fd6">ezStringBase::StartsWith</a></div><div class="ttdeci">bool StartsWith(ezStringView sStartsWith) const</div><div class="ttdoc">Returns true, if this string starts with the given string.</div><div class="ttdef"><b>Definition:</b> StringBase_inl.h:31</div></div>
<div class="ttc" id="astructez_string_base_htm_a11cc4a3305c78e7e5f062073562b78b1"><div class="ttname"><a href="../../dd/d69/structez_string_base.htm#a11cc4a3305c78e7e5f062073562b78b1">ezStringBase::Compare_NoCase</a></div><div class="ttdeci">ezInt32 Compare_NoCase(ezStringView sOther) const</div><div class="ttdoc">Compares this string with the other one. Returns 0 for equality, -1 if this string is 'smaller',...</div><div class="ttdef"><b>Definition:</b> StringBase_inl.h:135</div></div>
<div class="ttc" id="astructez_string_base_htm_a0bc84753ec74d1692958ad6c0b60a065"><div class="ttname"><a href="../../dd/d69/structez_string_base.htm#a0bc84753ec74d1692958ad6c0b60a065">ezStringBase::EndsWith</a></div><div class="ttdeci">bool EndsWith(ezStringView sEndsWith) const</div><div class="ttdoc">Returns true, if this string ends with the given string.</div><div class="ttdef"><b>Definition:</b> StringBase_inl.h:43</div></div>
<div class="ttc" id="astructez_string_base_htm_a501c95c64bd9476f553ea361d0f94a33"><div class="ttname"><a href="../../dd/d69/structez_string_base.htm#a501c95c64bd9476f553ea361d0f94a33">ezStringBase::GetRootedPathRootName</a></div><div class="ttdeci">ezStringView GetRootedPathRootName() const</div><div class="ttdoc">Extracts the root name from a rooted path.</div><div class="ttdef"><b>Definition:</b> StringBase_inl.h:318</div></div>
<div class="ttc" id="astructez_string_base_htm_a549f29a89a36526391f4e407ca9f3a4b"><div class="ttname"><a href="../../dd/d69/structez_string_base.htm#a549f29a89a36526391f4e407ca9f3a4b">ezStringBase::FindLastSubString_NoCase</a></div><div class="ttdeci">const char * FindLastSubString_NoCase(ezStringView sStringToFind, const char *szStartSearchAt=nullptr) const</div><div class="ttdef"><b>Definition:</b> StringBase_inl.h:89</div></div>
<div class="ttc" id="astructez_string_base_htm_ab40b7ada5f552ec62ad5c2a87d9eb2e9"><div class="ttname"><a href="../../dd/d69/structez_string_base.htm#ab40b7ada5f552ec62ad5c2a87d9eb2e9">ezStringBase::FindWholeWord_NoCase</a></div><div class="ttdeci">const char * FindWholeWord_NoCase(const char *szSearchFor, ezStringUtils::EZ_CHARACTER_FILTER isDelimiterCB, const char *szStartSearchAt=nullptr) const</div><div class="ttdef"><b>Definition:</b> StringBase_inl.h:112</div></div>
<div class="ttc" id="astructez_string_base_htm_a630aa4b168172aef7b32f8085148ed8e"><div class="ttname"><a href="../../dd/d69/structez_string_base.htm#a630aa4b168172aef7b32f8085148ed8e">ezStringBase::GetIteratorFront</a></div><div class="ttdeci">iterator GetIteratorFront() const</div><div class="ttdoc">Returns an iterator to this string, which points to the very first character.</div><div class="ttdef"><b>Definition:</b> StringBase_inl.h:179</div></div>
<div class="ttc" id="aclassez_string_utils_htm_a347b438581d998a7ae158c57ceca1adf"><div class="ttname"><a href="../../de/df8/classez_string_utils.htm#a347b438581d998a7ae158c57ceca1adf">ezStringUtils::EndsWith</a></div><div class="ttdeci">static bool EndsWith(const char *szString, const char *szEndsWith, const char *pStringEnd=ezUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *szEndsWithEnd=ezUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Returns true if szString ends with the string given in szEndsWith.</div><div class="ttdef"><b>Definition:</b> StringUtils.cpp:555</div></div>
<div class="ttc" id="astructez_string_base_htm_aa2bb565f17573d92b3f995ede720b915"><div class="ttname"><a href="../../dd/d69/structez_string_base.htm#aa2bb565f17573d92b3f995ede720b915">ezStringBase::IsAbsolutePath</a></div><div class="ttdeci">bool IsAbsolutePath() const</div><div class="ttdoc">Returns true, if the given path represents an absolute path on the current OS.</div><div class="ttdef"><b>Definition:</b> StringBase_inl.h:336</div></div>
<div class="ttc" id="astructez_string_base_htm_af063ac74d2c0a66f0bbddb62d16c5c50"><div class="ttname"><a href="../../dd/d69/structez_string_base.htm#af063ac74d2c0a66f0bbddb62d16c5c50">ezStringBase::EndsWith_NoCase</a></div><div class="ttdeci">bool EndsWith_NoCase(ezStringView sEndsWith) const</div><div class="ttdoc">Returns true, if this string ends with the given string. Case insensitive.</div><div class="ttdef"><b>Definition:</b> StringBase_inl.h:49</div></div>
<div class="ttc" id="astructez_string_view_htm_a8a545a0b8da530e2bb53b5c30ac3a855"><div class="ttname"><a href="../../de/db8/structez_string_view.htm#a8a545a0b8da530e2bb53b5c30ac3a855">ezStringView::GetFileDirectory</a></div><div class="ttdeci">ezStringView GetFileDirectory() const</div><div class="ttdoc">Returns the directory of the given file, which is the substring up to the last path separator.</div><div class="ttdef"><b>Definition:</b> StringView.cpp:231</div></div>
<div class="ttc" id="aclassez_string_utils_htm_aa71830c3928036550dbbcf63cb57b737"><div class="ttname"><a href="../../de/df8/classez_string_utils.htm#aa71830c3928036550dbbcf63cb57b737">ezStringUtils::CompareN</a></div><div class="ttdeci">static ezInt32 CompareN(const char *pString1, const char *pString2, ezUInt32 uiCharsToCompare, const char *pString1End=ezUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *pString2End=ezUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Compares the first uiCharsToCompare characters of the two strings for equality.</div><div class="ttdef"><b>Definition:</b> StringUtils.cpp:292</div></div>
<div class="ttc" id="astructez_string_base_htm_a7526c38e876eb72118bbb37ab1e36732"><div class="ttname"><a href="../../dd/d69/structez_string_base.htm#a7526c38e876eb72118bbb37ab1e36732">ezStringBase::FindSubString</a></div><div class="ttdeci">const char * FindSubString(ezStringView sStringToFind, const char *szStartSearchAt=nullptr) const</div><div class="ttdef"><b>Definition:</b> StringBase_inl.h:55</div></div>
<div class="ttc" id="astructez_string_base_htm_a1119c28eec83e75e524b7355024cd636"><div class="ttname"><a href="../../dd/d69/structez_string_base.htm#a1119c28eec83e75e524b7355024cd636">ezStringBase::FindLastSubString</a></div><div class="ttdeci">const char * FindLastSubString(ezStringView sStringToFind, const char *szStartSearchAt=nullptr) const</div><div class="ttdef"><b>Definition:</b> StringBase_inl.h:77</div></div>
<div class="ttc" id="astructez_string_base_htm_a6e36684efb429bac40152974cd8ca817"><div class="ttname"><a href="../../dd/d69/structez_string_base.htm#a6e36684efb429bac40152974cd8ca817">ezStringBase::GetFileName</a></div><div class="ttdeci">ezStringView GetFileName() const</div><div class="ttdoc">Returns the file name of a path, excluding the path and extension.</div><div class="ttdef"><b>Definition:</b> StringBase_inl.h:354</div></div>
<div class="ttc" id="astructez_string_view_htm_a68a0974fb1ea1db90c66e1a48780ee8d"><div class="ttname"><a href="../../de/db8/structez_string_view.htm#a68a0974fb1ea1db90c66e1a48780ee8d">ezStringView::GetRootedPathRootName</a></div><div class="ttdeci">ezStringView GetRootedPathRootName() const</div><div class="ttdoc">Extracts the root name from a rooted path.</div><div class="ttdef"><b>Definition:</b> StringView.cpp:251</div></div>
<div class="ttc" id="aclassez_string_utils_htm_a4411d4f7971834bd9ce1fe0cb39b2c39"><div class="ttname"><a href="../../de/df8/classez_string_utils.htm#a4411d4f7971834bd9ce1fe0cb39b2c39">ezStringUtils::Compare_NoCase</a></div><div class="ttdeci">static ezInt32 Compare_NoCase(const char *pString1, const char *pString2, const char *pString1End=ezUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *pString2End=ezUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Compares two strings for equality, case-insensitive.</div><div class="ttdef"><b>Definition:</b> StringUtils.cpp:331</div></div>
<div class="ttc" id="aclassez_unicode_utils_htm_a7fb78e6f4d844ef8ceea9c31ff1cabeb"><div class="ttname"><a href="../../d9/d32/classez_unicode_utils.htm#a7fb78e6f4d844ef8ceea9c31ff1cabeb">ezUnicodeUtils::MoveToNextUtf8</a></div><div class="ttdeci">static void MoveToNextUtf8(const char *&amp;ref_szUtf8, ezUInt32 uiNumCharacters=1)</div><div class="ttdoc">Moves the given string pointer ahead to the next Utf8 character sequence.</div><div class="ttdef"><b>Definition:</b> UnicodeUtils_inl.h:197</div></div>
<div class="ttc" id="astructez_string_base_htm_a836c2433b152208146b07be5182aa90d"><div class="ttname"><a href="../../dd/d69/structez_string_base.htm#a836c2433b152208146b07be5182aa90d">ezStringBase::FindSubString_NoCase</a></div><div class="ttdeci">const char * FindSubString_NoCase(ezStringView sStringToFind, const char *szStartSearchAt=nullptr) const</div><div class="ttdef"><b>Definition:</b> StringBase_inl.h:66</div></div>
<div class="ttc" id="astructez_string_base_htm_a746a8a1119e1eee5a5671bada6877265"><div class="ttname"><a href="../../dd/d69/structez_string_base.htm#a746a8a1119e1eee5a5671bada6877265">ezStringBase::IsEqualN_NoCase</a></div><div class="ttdeci">bool IsEqualN_NoCase(ezStringView sOther, ezUInt32 uiCharsToCompare) const</div><div class="ttdoc">Compares up to a given number of characters of this string with the other string for equality....</div><div class="ttdef"><b>Definition:</b> StringBase_inl.h:165</div></div>
<div class="ttc" id="astructez_string_view_htm_ac3178216fb83c698192b219c3765fbf2"><div class="ttname"><a href="../../de/db8/structez_string_view.htm#ac3178216fb83c698192b219c3765fbf2">ezStringView::GetFileExtension</a></div><div class="ttdeci">ezStringView GetFileExtension() const</div><div class="ttdoc">Returns the file extension of the given path. Will be empty, if the path does not end with a proper e...</div><div class="ttdef"><b>Definition:</b> StringView.cpp:216</div></div>
<div class="ttc" id="astructez_string_iterator_htm"><div class="ttname"><a href="../../d4/ddc/structez_string_iterator.htm">ezStringIterator</a></div><div class="ttdoc">STL forward iterator used by all string classes. Iterates over unicode characters....</div><div class="ttdef"><b>Definition:</b> StringIterator.h:7</div></div>
<div class="ttc" id="aclassez_string_utils_htm_a32404acfb618abe38094ecddb19ff4b8"><div class="ttname"><a href="../../de/df8/classez_string_utils.htm#a32404acfb618abe38094ecddb19ff4b8">ezStringUtils::FindLastSubString_NoCase</a></div><div class="ttdeci">static const char * FindLastSubString_NoCase(const char *szSource, const char *szStringToFind, const char *szStartSearchAt=nullptr, const char *pSourceEnd=ezUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *szStringToFindEnd=ezUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Searches for the last occurrence of szStringToFind in szSource before szStartSearchAt....</div><div class="ttdef"><b>Definition:</b> StringUtils.cpp:665</div></div>
<div class="ttc" id="aclassez_string_utils_htm_a30a256e58c74618a988775c15bdd3d8e"><div class="ttname"><a href="../../de/df8/classez_string_utils.htm#a30a256e58c74618a988775c15bdd3d8e">ezStringUtils::EZ_CHARACTER_FILTER</a></div><div class="ttdeci">bool(*)(ezUInt32 uiChar) EZ_CHARACTER_FILTER</div><div class="ttdoc">Function Definition for a function that determines whether a (Utf32) character belongs to a certain c...</div><div class="ttdef"><b>Definition:</b> StringUtils.h:209</div></div>
<div class="ttc" id="aclassez_string_utils_htm_a5a375be30fe22c27368c0b2801e6c0b0"><div class="ttname"><a href="../../de/df8/classez_string_utils.htm#a5a375be30fe22c27368c0b2801e6c0b0">ezStringUtils::IsEqual_NoCase</a></div><div class="ttdeci">static bool IsEqual_NoCase(const char *pString1, const char *pString2, const char *pString1End=ezUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *pString2End=ezUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Returns true, if the two given strings are identical (case-insensitive).</div><div class="ttdef"><b>Definition:</b> StringUtils_inl.h:135</div></div>
<div class="ttc" id="astructez_string_reverse_iterator_htm"><div class="ttname"><a href="../../d6/d6b/structez_string_reverse_iterator.htm">ezStringReverseIterator</a></div><div class="ttdoc">STL reverse iterator used by all string classes. Iterates over unicode characters....</div><div class="ttdef"><b>Definition:</b> StringIterator.h:162</div></div>
<div class="ttc" id="astructez_string_view_htm_aeb4fee979aa7e71f8c3596fb342ad2bc"><div class="ttname"><a href="../../de/db8/structez_string_view.htm#aeb4fee979aa7e71f8c3596fb342ad2bc">ezStringView::GetEndPointer</a></div><div class="ttdeci">const char * GetEndPointer() const</div><div class="ttdoc">Returns the end of the view range. This will point to the byte AFTER the last character.</div><div class="ttdef"><b>Definition:</b> StringView.h:98</div></div>
<div class="ttc" id="astructez_string_base_htm_a3b169646f62ef8a8d33b63e2b8731afb"><div class="ttname"><a href="../../dd/d69/structez_string_base.htm#a3b169646f62ef8a8d33b63e2b8731afb">ezStringBase::IsEmpty</a></div><div class="ttdeci">bool IsEmpty() const</div><div class="ttdoc">Returns whether the string is an empty string.</div><div class="ttdef"><b>Definition:</b> StringBase_inl.h:25</div></div>
<div class="ttc" id="astructez_string_base_htm_afcc7196e4bb81b8b3e2da961dd917fde"><div class="ttname"><a href="../../dd/d69/structez_string_base.htm#afcc7196e4bb81b8b3e2da961dd917fde">ezStringBase::FindWholeWord</a></div><div class="ttdeci">const char * FindWholeWord(const char *szSearchFor, ezStringUtils::EZ_CHARACTER_FILTER isDelimiterCB, const char *szStartSearchAt=nullptr) const</div><div class="ttdef"><b>Definition:</b> StringBase_inl.h:101</div></div>
<div class="ttc" id="astructez_string_base_htm_ad59a099496386a4dc0225f2564a9e9cb"><div class="ttname"><a href="../../dd/d69/structez_string_base.htm#ad59a099496386a4dc0225f2564a9e9cb">ezStringBase::CompareN</a></div><div class="ttdeci">ezInt32 CompareN(ezStringView sOther, ezUInt32 uiCharsToCompare) const</div><div class="ttdef"><b>Definition:</b> StringBase_inl.h:129</div></div>
<div class="ttc" id="aclassez_string_utils_htm_a57f8ad413aa294bd530ff0d4dde00654"><div class="ttname"><a href="../../de/df8/classez_string_utils.htm#a57f8ad413aa294bd530ff0d4dde00654">ezStringUtils::IsEqualN</a></div><div class="ttdeci">static bool IsEqualN(const char *pString1, const char *pString2, ezUInt32 uiCharsToCompare, const char *pString1End=ezUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *pString2End=ezUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Returns true, if the two given strings are identical (bitwise) up to the n-th character.</div><div class="ttdef"><b>Definition:</b> StringUtils_inl.h:129</div></div>
<div class="ttc" id="aclassez_string_utils_htm_a5a3acc88b8a7ef4345ccbb8277c68446"><div class="ttname"><a href="../../de/df8/classez_string_utils.htm#a5a3acc88b8a7ef4345ccbb8277c68446">ezStringUtils::FindWholeWord_NoCase</a></div><div class="ttdeci">static const char * FindWholeWord_NoCase(const char *szString, const char *szSearchFor, EZ_CHARACTER_FILTER isDelimiterCB, const char *pStringEnd=ezUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Searches szString for the word szSearchFor. If IsDelimiterCB returns true for both characters in fron...</div><div class="ttdef"><b>Definition:</b> StringUtils.cpp:716</div></div>
<div class="ttc" id="astructez_string_base_htm"><div class="ttname"><a href="../../dd/d69/structez_string_base.htm">ezStringBase</a></div><div class="ttdoc">Base class for strings, which implements all read-only string functions.</div><div class="ttdef"><b>Definition:</b> StringBase.h:13</div></div>
<div class="ttc" id="astructez_string_view_htm"><div class="ttname"><a href="../../de/db8/structez_string_view.htm">ezStringView</a></div><div class="ttdoc">ezStringView represent a read-only sub-string of a larger string, as it can store a dedicated string ...</div><div class="ttdef"><b>Definition:</b> StringView.h:23</div></div>
<div class="ttc" id="astructez_string_view_htm_a7e6ab4aebc721857871d822321935d5f"><div class="ttname"><a href="../../de/db8/structez_string_view.htm#a7e6ab4aebc721857871d822321935d5f">ezStringView::GetStartPointer</a></div><div class="ttdeci">const char * GetStartPointer() const</div><div class="ttdoc">Returns the start of the view range.</div><div class="ttdef"><b>Definition:</b> StringView.h:92</div></div>
<div class="ttc" id="astructez_string_base_htm_ab4aa8e43c8a2bf68e642ad1bfbffb9fa"><div class="ttname"><a href="../../dd/d69/structez_string_base.htm#ab4aa8e43c8a2bf68e642ad1bfbffb9fa">ezStringBase::Compare</a></div><div class="ttdeci">ezInt32 Compare(ezStringView sOther) const</div><div class="ttdoc">Compares this string with the other one. Returns 0 for equality, -1 if this string is 'smaller',...</div><div class="ttdef"><b>Definition:</b> StringBase_inl.h:123</div></div>
<div class="ttc" id="aclassez_string_utils_htm_a0f7fbe5b887c01f627ca3336109a99c8"><div class="ttname"><a href="../../de/df8/classez_string_utils.htm#a0f7fbe5b887c01f627ca3336109a99c8">ezStringUtils::FindSubString_NoCase</a></div><div class="ttdeci">static const char * FindSubString_NoCase(const char *szSource, const char *szStringToFind, const char *pSourceEnd=ezUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *szStringToFindEnd=ezUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Searches for the first occurrence of szStringToFind in szSource. Ignores case.</div><div class="ttdef"><b>Definition:</b> StringUtils.cpp:623</div></div>
<div class="ttc" id="astructez_string_base_htm_a31f4090e3be6134eb1702f909cd3ba33"><div class="ttname"><a href="../../dd/d69/structez_string_base.htm#a31f4090e3be6134eb1702f909cd3ba33">ezStringBase::HasAnyExtension</a></div><div class="ttdeci">bool HasAnyExtension() const</div><div class="ttdoc">Checks whether the given path has any file extension.</div><div class="ttdef"><b>Definition:</b> StringBase_inl.h:372</div></div>
<div class="ttc" id="astructez_string_base_htm_a5981da7976e9bd420dc871da0bfab1a2"><div class="ttname"><a href="../../dd/d69/structez_string_base.htm#a5981da7976e9bd420dc871da0bfab1a2">ezStringBase::IsRootedPath</a></div><div class="ttdeci">bool IsRootedPath() const</div><div class="ttdoc">Returns true, if the given path represents a 'rooted' path. See ezFileSystem for details.</div><div class="ttdef"><b>Definition:</b> StringBase_inl.h:324</div></div>
<div class="ttc" id="astructez_string_base_htm_a3b376db2ee452d362736bbf20021cc49"><div class="ttname"><a href="../../dd/d69/structez_string_base.htm#a3b376db2ee452d362736bbf20021cc49">ezStringBase::GetFileExtension</a></div><div class="ttdeci">ezStringView GetFileExtension() const</div><div class="ttdoc">Returns the file extension of the given path. Will be empty, if the path does not end with a proper e...</div><div class="ttdef"><b>Definition:</b> StringBase_inl.h:360</div></div>
<div class="ttc" id="aclassez_string_utils_htm_a4e7bb80c9b5b1bc468d88e70379895ff"><div class="ttname"><a href="../../de/df8/classez_string_utils.htm#a4e7bb80c9b5b1bc468d88e70379895ff">ezStringUtils::FindSubString</a></div><div class="ttdeci">static const char * FindSubString(const char *szSource, const char *szStringToFind, const char *pSourceEnd=ezUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *szStringToFindEnd=ezUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Searches for the first occurrence of szStringToFind in szSource.</div><div class="ttdef"><b>Definition:</b> StringUtils.cpp:604</div></div>
<div class="ttc" id="astructez_string_base_htm_a839a783b7199310da98f5e52f7174c43"><div class="ttname"><a href="../../dd/d69/structez_string_base.htm#a839a783b7199310da98f5e52f7174c43">ezStringBase::GetFileNameAndExtension</a></div><div class="ttdeci">ezStringView GetFileNameAndExtension() const</div><div class="ttdoc">Returns the substring that represents the file name including the file extension.</div><div class="ttdef"><b>Definition:</b> StringBase_inl.h:348</div></div>
<div class="ttc" id="aclassez_string_utils_htm_a7b418cc21bcbebde0942157e9026d2a4"><div class="ttname"><a href="../../de/df8/classez_string_utils.htm#a7b418cc21bcbebde0942157e9026d2a4">ezStringUtils::StartsWith</a></div><div class="ttdeci">static bool StartsWith(const char *szString, const char *szStartsWith, const char *pStringEnd=ezUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *szStartsWithEnd=ezUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Returns true if szString starts with the string given in szStartsWith.</div><div class="ttdef"><b>Definition:</b> StringUtils.cpp:507</div></div>
<div class="ttc" id="astructez_string_base_htm_ac2fc8eecf7a508bcb383b70ced7ffc25"><div class="ttname"><a href="../../dd/d69/structez_string_base.htm#ac2fc8eecf7a508bcb383b70ced7ffc25">ezStringBase::IsRelativePath</a></div><div class="ttdeci">bool IsRelativePath() const</div><div class="ttdoc">Returns true, if the given path represents a relative path on the current OS.</div><div class="ttdef"><b>Definition:</b> StringBase_inl.h:330</div></div>
<div class="ttc" id="astructez_string_base_htm_a3821af6b610f6c40a46336f7accc0c7e"><div class="ttname"><a href="../../dd/d69/structez_string_base.htm#a3821af6b610f6c40a46336f7accc0c7e">ezStringBase::GetIteratorBack</a></div><div class="ttdeci">reverse_iterator GetIteratorBack() const</div><div class="ttdoc">Returns an iterator to this string, which points to the very last character (NOT the end).</div><div class="ttdef"><b>Definition:</b> StringBase_inl.h:185</div></div>
<div class="ttc" id="aclassez_string_utils_htm_a5f5d6b2aad39e0309d957899b11056e4"><div class="ttname"><a href="../../de/df8/classez_string_utils.htm#a5f5d6b2aad39e0309d957899b11056e4">ezStringUtils::IsEqualN_NoCase</a></div><div class="ttdeci">static bool IsEqualN_NoCase(const char *pString1, const char *pString2, ezUInt32 uiCharsToCompare, const char *pString1End=ezUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *pString2End=ezUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Returns true, if the two given strings are identical (case-insensitive) up to the n-th character.</div><div class="ttdef"><b>Definition:</b> StringUtils_inl.h:140</div></div>
<div class="ttc" id="aclassez_string_utils_htm_a22bea564b8ddd615f8b24886ae566397"><div class="ttname"><a href="../../de/df8/classez_string_utils.htm#a22bea564b8ddd615f8b24886ae566397">ezStringUtils::EndsWith_NoCase</a></div><div class="ttdeci">static bool EndsWith_NoCase(const char *szString, const char *szEndsWith, const char *pStringEnd=ezUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *szEndsWithEnd=ezUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Returns true if szString ends with the string given in szEndsWith. Ignores case.</div><div class="ttdef"><b>Definition:</b> StringUtils.cpp:571</div></div>
<div class="ttc" id="astructez_string_base_htm_a5820e97ac4c87313b8874f9f03e6b902"><div class="ttname"><a href="../../dd/d69/structez_string_base.htm#a5820e97ac4c87313b8874f9f03e6b902">ezStringBase::StartsWith_NoCase</a></div><div class="ttdeci">bool StartsWith_NoCase(ezStringView sStartsWith) const</div><div class="ttdoc">Returns true, if this string starts with the given string. Case insensitive.</div><div class="ttdef"><b>Definition:</b> StringBase_inl.h:37</div></div>
<div class="ttc" id="astructez_string_view_htm_afedd1422effd5dbf1936b7d892964859"><div class="ttname"><a href="../../de/db8/structez_string_view.htm#afedd1422effd5dbf1936b7d892964859">ezStringView::GetFileNameAndExtension</a></div><div class="ttdeci">ezStringView GetFileNameAndExtension() const</div><div class="ttdoc">Returns the substring that represents the file name including the file extension.</div><div class="ttdef"><b>Definition:</b> StringView.cpp:226</div></div>
<div class="ttc" id="astructez_string_base_htm_abcd136562b6d279801aa6653c3dbd7c8"><div class="ttname"><a href="../../dd/d69/structez_string_base.htm#abcd136562b6d279801aa6653c3dbd7c8">ezStringBase::GetFileDirectory</a></div><div class="ttdeci">ezStringView GetFileDirectory() const</div><div class="ttdoc">Returns the directory of the given file, which is the substring up to the last path separator.</div><div class="ttdef"><b>Definition:</b> StringBase_inl.h:342</div></div>
<div class="ttc" id="astructez_string_view_htm_a9d8cf062f146a81b17bea77459db1b2a"><div class="ttname"><a href="../../de/db8/structez_string_view.htm#a9d8cf062f146a81b17bea77459db1b2a">ezStringView::GetFileName</a></div><div class="ttdeci">ezStringView GetFileName() const</div><div class="ttdoc">Returns the file name of a path, excluding the path and extension.</div><div class="ttdef"><b>Definition:</b> StringView.cpp:221</div></div>
<div class="ttc" id="astructez_string_base_htm_aa234e5c9e6b3fb6e0296d00fd863e726"><div class="ttname"><a href="../../dd/d69/structez_string_base.htm#aa234e5c9e6b3fb6e0296d00fd863e726">ezStringBase::CompareN_NoCase</a></div><div class="ttdeci">ezInt32 CompareN_NoCase(ezStringView sOther, ezUInt32 uiCharsToCompare) const</div><div class="ttdef"><b>Definition:</b> StringBase_inl.h:141</div></div>
<div class="ttc" id="astructez_string_base_htm_a4dc8b54007099ca61b4b937923e7987b"><div class="ttname"><a href="../../dd/d69/structez_string_base.htm#a4dc8b54007099ca61b4b937923e7987b">ezStringBase::GetView</a></div><div class="ttdeci">ezStringView GetView() const</div><div class="ttdoc">Returns a string view to this string's data.</div><div class="ttdef"><b>Definition:</b> StringBase_inl.h:305</div></div>
<div class="ttc" id="astructez_string_base_htm_a328c33c66707ecea8ed93512a5ad2465"><div class="ttname"><a href="../../dd/d69/structez_string_base.htm#a328c33c66707ecea8ed93512a5ad2465">ezStringBase::Split</a></div><div class="ttdeci">void Split(bool bReturnEmptyStrings, Container &amp;ref_output, const char *szSeparator1, const char *szSeparator2=nullptr, const char *szSeparator3=nullptr, const char *szSeparator4=nullptr, const char *szSeparator5=nullptr, const char *szSeparator6=nullptr) const</div><div class="ttdoc">Fills the given container with ezStringView's which represent each found substring....</div><div class="ttdef"><b>Definition:</b> StringBase_inl.h:312</div></div>
<div class="ttc" id="aclassez_string_utils_htm_a4e734c728f3ac39fc9f2629dafab2fc6"><div class="ttname"><a href="../../de/df8/classez_string_utils.htm#a4e734c728f3ac39fc9f2629dafab2fc6">ezStringUtils::CompareN_NoCase</a></div><div class="ttdeci">static ezInt32 CompareN_NoCase(const char *pString1, const char *pString2, ezUInt32 uiCharsToCompare, const char *pString1End=ezUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *pString2End=ezUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Compares the first uiCharsToCompare characters of the two strings for equality, case-insensitive.</div><div class="ttdef"><b>Definition:</b> StringUtils.cpp:365</div></div>
<div class="ttc" id="astructez_string_base_htm_aa75c907e8543d51e46e9715427a2e3db"><div class="ttname"><a href="../../dd/d69/structez_string_base.htm#aa75c907e8543d51e46e9715427a2e3db">ezStringBase::IsEqualN</a></div><div class="ttdeci">bool IsEqualN(ezStringView sOther, ezUInt32 uiCharsToCompare) const</div><div class="ttdoc">Compares up to a given number of characters of this string with the other string for equality....</div><div class="ttdef"><b>Definition:</b> StringBase_inl.h:153</div></div>
<div class="ttc" id="aclassez_string_utils_htm_a26f868ce8249b864f448837638ffde33"><div class="ttname"><a href="../../de/df8/classez_string_utils.htm#a26f868ce8249b864f448837638ffde33">ezStringUtils::IsNullOrEmpty</a></div><div class="ttdeci">static constexpr bool IsNullOrEmpty(const T *pString)</div><div class="ttdoc">Returns true, if the given string is a nullptr pointer or a string that immediately terminates with a...</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_b52479c911fe9a42767226b3387b3a02.htm">Strings</a></li><li class="navelem"><a class="el" href="../../dir_067384bf2c73f8a8078edb859c0ba426.htm">Implementation</a></li><li class="navelem"><b>StringBase_inl.h</b></li>
    <li class="footer">Generated on Tue Nov 7 2023 21:39:18 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
