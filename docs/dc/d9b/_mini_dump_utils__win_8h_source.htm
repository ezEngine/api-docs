<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/System/Implementation/Win/MiniDumpUtils_win.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 21.6</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('dc/d9b/_mini_dump_utils__win_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">MiniDumpUtils_win.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#include &lt;Foundation/FoundationInternal.h&gt;</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;EZ_FOUNDATION_INTERNAL_HEADER</div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160; </div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;Foundation/Basics/Platform/Win/MinWindows.h&gt;</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;Foundation/IO/Implementation/Win/DosDevicePath_win.h&gt;</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;Foundation/IO/OSFile.h&gt;</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;Foundation/System/MiniDumpUtils.h&gt;</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;Foundation/System/ProcessGroup.h&gt;</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;Foundation/Types/ScopeExit.h&gt;</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160; </div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#if EZ_ENABLED(EZ_PLATFORM_WINDOWS_DESKTOP)</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160; </div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#  include &lt;Dbghelp.h&gt;</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#  include &lt;Shlwapi.h&gt;</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#  include &lt;Utilities/CommandLineOptions.h&gt;</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#  include &lt;Utilities/CommandLineUtils.h&gt;</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#  include &lt;tchar.h&gt;</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor">#  include &lt;werapi.h&gt;</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160; </div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<a class="code" href="../../d2/dc7/classez_command_line_option_bool.htm">ezCommandLineOptionBool</a> opt_FullCrashDumps(<span class="stringliteral">&quot;app&quot;</span>, <span class="stringliteral">&quot;-fullcrashdumps&quot;</span>, <span class="stringliteral">&quot;If enabled, crash dumps will contain the full memory image.&quot;</span>, <span class="keyword">false</span>);</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160; </div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">typedef</span> BOOL(WINAPI* MINIDUMPWRITEDUMP)(HANDLE hProcess, DWORD ProcessId, HANDLE hFile, MINIDUMP_TYPE DumpType,</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;  PMINIDUMP_EXCEPTION_INFORMATION ExceptionParam, PMINIDUMP_USER_STREAM_INFORMATION UserStreamParam, PMINIDUMP_CALLBACK_INFORMATION CallbackParam);</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160; </div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;ezMinWindows::HANDLE ezMiniDumpUtils::GetProcessHandleWithNecessaryRights(ezUInt32 uiProcessID)</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;{</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;  <span class="comment">// try to get more than we need</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  HANDLE hProcess = OpenProcess(PROCESS_ALL_ACCESS, FALSE, uiProcessID);</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160; </div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;  <span class="keywordflow">if</span> (hProcess == NULL)</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  {</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    <span class="comment">// try to get all that we need for a nice dump</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    hProcess = OpenProcess(PROCESS_QUERY_INFORMATION | PROCESS_VM_READ | PROCESS_DUP_HANDLE, FALSE, uiProcessID);</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  }</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160; </div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;  <span class="keywordflow">if</span> (hProcess == NULL)</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;  {</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <span class="comment">// try to get rights for a limited dump</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    hProcess = OpenProcess(PROCESS_QUERY_INFORMATION | PROCESS_VM_READ, FALSE, uiProcessID);</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  }</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160; </div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;  <span class="keywordflow">return</span> hProcess;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;}</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160; </div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<a class="code" href="../../d7/d6e/structez_status.htm">ezStatus</a> ezMiniDumpUtils::WriteProcessMiniDump(</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span>* szDumpFile, ezUInt32 uiProcessID, ezMinWindows::HANDLE hProcess, <span class="keyword">struct</span> _EXCEPTION_POINTERS* pExceptionInfo)</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;{</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;  HMODULE hDLL = ::LoadLibraryA(<span class="stringliteral">&quot;dbghelp.dll&quot;</span>);</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160; </div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;  <span class="keywordflow">if</span> (hDLL == <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;  {</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d7/d6e/structez_status.htm">ezStatus</a>(<span class="stringliteral">&quot;dbghelp.dll could not be loaded.&quot;</span>);</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;  }</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160; </div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  MINIDUMPWRITEDUMP MiniDumpWriteDumpFunc = (MINIDUMPWRITEDUMP)::GetProcAddress(hDLL, <span class="stringliteral">&quot;MiniDumpWriteDump&quot;</span>);</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160; </div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;  <span class="keywordflow">if</span> (MiniDumpWriteDumpFunc == <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  {</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d7/d6e/structez_status.htm">ezStatus</a>(<span class="stringliteral">&quot;&#39;MiniDumpWriteDump&#39; function address could not be resolved.&quot;</span>);</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;  }</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160; </div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;  ezUInt32 dumpType = MiniDumpWithHandleData | MiniDumpWithModuleHeaders | MiniDumpWithUnloadedModules | MiniDumpWithProcessThreadData |</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                      MiniDumpWithFullMemoryInfo | MiniDumpWithThreadInfo;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160; </div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;  <span class="keywordflow">if</span> (opt_FullCrashDumps.GetOptionValue(<a class="code" href="../../db/d9d/classez_command_line_option.htm#a40d309c9de7fc4214d3eac5101f4cecaa68eec46437c384d8dad18d5464ebc35c">ezCommandLineOption::LogMode::Always</a>))</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;  {</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    dumpType |= MiniDumpWithFullMemory;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;  }</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160; </div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  <span class="comment">// make sure the target folder exists</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;  {</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <a class="code" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a> folder = szDumpFile;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    folder.<a class="code" href="../../d3/d88/classez_string_builder.htm#a40dff448589cc69f85fce8d72922ae22">PathParentDirectory</a>();</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../db/d00/classez_o_s_file.htm#ac87e77d2adf9273149de6039b8d3bf13">ezOSFile::CreateDirectoryStructure</a>(folder).Failed())</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;      <span class="keywordflow">return</span> <a class="code" href="../../d7/d6e/structez_status.htm">ezStatus</a>(<span class="stringliteral">&quot;Failed to create output directory structure.&quot;</span>);</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  }</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160; </div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;  HANDLE hFile = CreateFileW(<a class="code" href="../../d9/dfc/classez_dos_device_path.htm">ezDosDevicePath</a>(szDumpFile), GENERIC_WRITE, 0, <span class="keyword">nullptr</span>, CREATE_ALWAYS, FILE_ATTRIBUTE_NORMAL, <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160; </div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;  <span class="keywordflow">if</span> (hFile == INVALID_HANDLE_VALUE)</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;  {</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d7/d6e/structez_status.htm">ezStatus</a>(ezFmt(<span class="stringliteral">&quot;Creating dump file &#39;{}&#39; failed (Error: &#39;{}&#39;).&quot;</span>, szDumpFile, ezArgErrorCode(GetLastError())));</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;  }</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160; </div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  EZ_SCOPE_EXIT(CloseHandle(hFile););</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160; </div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;  MINIDUMP_EXCEPTION_INFORMATION exceptionParam;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;  exceptionParam.ThreadId = GetCurrentThreadId(); <span class="comment">// only valid for WriteOwnProcessMiniDump()</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;  exceptionParam.ExceptionPointers = pExceptionInfo;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;  exceptionParam.ClientPointers = TRUE;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160; </div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;  <span class="keywordflow">if</span> (MiniDumpWriteDumpFunc(</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        hProcess, uiProcessID, hFile, (MINIDUMP_TYPE)dumpType, pExceptionInfo != <span class="keyword">nullptr</span> ? &amp;exceptionParam : <span class="keyword">nullptr</span>, <span class="keyword">nullptr</span>, <span class="keyword">nullptr</span>) == FALSE)</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;  {</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d7/d6e/structez_status.htm">ezStatus</a>(ezFmt(<span class="stringliteral">&quot;Writing dump file failed: &#39;{}&#39;.&quot;</span>, ezArgErrorCode(GetLastError())));</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;  }</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160; </div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d7/d6e/structez_status.htm">ezStatus</a>(EZ_SUCCESS);</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;}</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160; </div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<a class="code" href="../../d7/d6e/structez_status.htm">ezStatus</a> ezMiniDumpUtils::WriteOwnProcessMiniDump(<span class="keyword">const</span> <span class="keywordtype">char</span>* szDumpFile, <span class="keyword">struct</span> _EXCEPTION_POINTERS* pExceptionInfo)</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;{</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  <span class="keywordflow">return</span> WriteProcessMiniDump(szDumpFile, GetCurrentProcessId(), GetCurrentProcess(), pExceptionInfo);</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;}</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160; </div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<a class="code" href="../../d7/d6e/structez_status.htm">ezStatus</a> <a class="code" href="../../de/d18/structez_mini_dump_utils.htm#a3401b0d6b063b81e9a988cc731af0c00">ezMiniDumpUtils::WriteExternalProcessMiniDump</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szDumpFile, ezUInt32 uiProcessID, ezMinWindows::HANDLE hProcess)</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;{</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;  <span class="keywordflow">return</span> WriteProcessMiniDump(szDumpFile, uiProcessID, hProcess, <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;}</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160; </div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160; </div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<a class="code" href="../../d7/d6e/structez_status.htm">ezStatus</a> <a class="code" href="../../de/d18/structez_mini_dump_utils.htm#a3401b0d6b063b81e9a988cc731af0c00">ezMiniDumpUtils::WriteExternalProcessMiniDump</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szDumpFile, ezUInt32 uiProcessID)</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;{</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="preprocessor">#if EZ_ENABLED(EZ_PLATFORM_WINDOWS_DESKTOP)</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;  HANDLE hProcess = ezMiniDumpUtils::GetProcessHandleWithNecessaryRights(uiProcessID);</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160; </div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;  <span class="keywordflow">if</span> (hProcess == <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;  {</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d7/d6e/structez_status.htm">ezStatus</a>(<span class="stringliteral">&quot;Cannot access process for mini-dump writing (PID invalid or not enough rights).&quot;</span>);</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;  }</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160; </div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;  <span class="keywordflow">return</span> WriteProcessMiniDump(szDumpFile, uiProcessID, hProcess, <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160; </div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d7/d6e/structez_status.htm">ezStatus</a>(<span class="stringliteral">&quot;Not implemented on UPW&quot;</span>);</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;}</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160; </div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<a class="code" href="../../d7/d6e/structez_status.htm">ezStatus</a> <a class="code" href="../../de/d18/structez_mini_dump_utils.htm#a2e4ec2a8298ad3761d0e85ad169b88ca">ezMiniDumpUtils::LaunchMiniDumpTool</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szDumpFile)</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;{</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="preprocessor">#if EZ_ENABLED(EZ_PLATFORM_WINDOWS_DESKTOP)</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;  <a class="code" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a> sDumpToolPath = <a class="code" href="../../db/d00/classez_o_s_file.htm#a0f8f96ff0fa85cf30484262995c0db79">ezOSFile::GetApplicationDirectory</a>();</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;  sDumpToolPath.<a class="code" href="../../d3/d88/classez_string_builder.htm#ac6b96e398a7232a42c307c753e34b6d8">AppendPath</a>(<span class="stringliteral">&quot;MiniDumpTool.exe&quot;</span>);</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;  sDumpToolPath.<a class="code" href="../../d3/d88/classez_string_builder.htm#acb4e8da454e08207f376cb95ec372878">MakeCleanPath</a>();</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160; </div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;  <span class="keywordflow">if</span> (!<a class="code" href="../../db/d00/classez_o_s_file.htm#a5e5e7411d47ffde7ef30c8e9550e364c">ezOSFile::ExistsFile</a>(sDumpToolPath))</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d7/d6e/structez_status.htm">ezStatus</a>(ezFmt(<span class="stringliteral">&quot;MiniDumpTool.exe not found in &#39;{}&#39;&quot;</span>, sDumpToolPath));</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160; </div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;  ezProcessOptions procOpt;</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;  procOpt.m_sProcess = sDumpToolPath;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;  procOpt.m_Arguments.PushBack(<span class="stringliteral">&quot;-PID&quot;</span>);</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  procOpt.AddArgument(<span class="stringliteral">&quot;{}&quot;</span>, ezProcess::GetCurrentProcessID());</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;  procOpt.m_Arguments.PushBack(<span class="stringliteral">&quot;-f&quot;</span>);</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;  procOpt.m_Arguments.PushBack(szDumpFile);</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160; </div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;  <span class="keywordflow">if</span> (opt_FullCrashDumps.GetOptionValue(<a class="code" href="../../db/d9d/classez_command_line_option.htm#a40d309c9de7fc4214d3eac5101f4cecaa68eec46437c384d8dad18d5464ebc35c">ezCommandLineOption::LogMode::Always</a>))</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;  {</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <span class="comment">// forward the &#39;-fullcrashdumps&#39; command line argument</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    procOpt.AddArgument(<span class="stringliteral">&quot;-fullcrashdumps&quot;</span>);</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;  }</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160; </div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;  ezProcessGroup proc;</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;  <span class="keywordflow">if</span> (proc.Launch(procOpt).Failed())</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d7/d6e/structez_status.htm">ezStatus</a>(ezFmt(<span class="stringliteral">&quot;Failed to launch &#39;{}&#39;&quot;</span>, sDumpToolPath));</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160; </div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;  <span class="keywordflow">if</span> (proc.WaitToFinish().Failed())</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d7/d6e/structez_status.htm">ezStatus</a>(<span class="stringliteral">&quot;Waiting for MiniDumpTool to finish failed.&quot;</span>);</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160; </div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d7/d6e/structez_status.htm">ezStatus</a>(EZ_SUCCESS);</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160; </div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d7/d6e/structez_status.htm">ezStatus</a>(<span class="stringliteral">&quot;Not implemented on UPW&quot;</span>);</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;}</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassez_o_s_file_htm_a5e5e7411d47ffde7ef30c8e9550e364c"><div class="ttname"><a href="../../db/d00/classez_o_s_file.htm#a5e5e7411d47ffde7ef30c8e9550e364c">ezOSFile::ExistsFile</a></div><div class="ttdeci">static bool ExistsFile(const char *szFile)</div><div class="ttdoc">Checks whether the given file exists.</div><div class="ttdef"><b>Definition:</b> OSFile.cpp:226</div></div>
<div class="ttc" id="astructez_mini_dump_utils_htm_a2e4ec2a8298ad3761d0e85ad169b88ca"><div class="ttname"><a href="../../de/d18/structez_mini_dump_utils.htm#a2e4ec2a8298ad3761d0e85ad169b88ca">ezMiniDumpUtils::LaunchMiniDumpTool</a></div><div class="ttdeci">static ezStatus LaunchMiniDumpTool(const char *szDumpFile)</div><div class="ttdoc">Tries to launch ez's 'MiniDumpTool' to write a mini-dump for THIS process (the recommended way when a...</div><div class="ttdef"><b>Definition:</b> MiniDumpUtils_OSX.h:11</div></div>
<div class="ttc" id="astructez_mini_dump_utils_htm_a3401b0d6b063b81e9a988cc731af0c00"><div class="ttname"><a href="../../de/d18/structez_mini_dump_utils.htm#a3401b0d6b063b81e9a988cc731af0c00">ezMiniDumpUtils::WriteExternalProcessMiniDump</a></div><div class="ttdeci">static ezStatus WriteExternalProcessMiniDump(const char *szDumpFile, ezUInt32 uiProcessID)</div><div class="ttdoc">Tries to write a mini-dump for the external process with the given process ID.</div><div class="ttdef"><b>Definition:</b> MiniDumpUtils_OSX.h:6</div></div>
<div class="ttc" id="aclassez_o_s_file_htm_ac87e77d2adf9273149de6039b8d3bf13"><div class="ttname"><a href="../../db/d00/classez_o_s_file.htm#ac87e77d2adf9273149de6039b8d3bf13">ezOSFile::CreateDirectoryStructure</a></div><div class="ttdeci">static ezResult CreateDirectoryStructure(const char *szDirectory)</div><div class="ttdoc">Creates the given directory structure (meaning all directories in the path, that do not exist)....</div><div class="ttdef"><b>Definition:</b> OSFile.cpp:305</div></div>
<div class="ttc" id="aclassez_dos_device_path_htm"><div class="ttname"><a href="../../d9/dfc/classez_dos_device_path.htm">ezDosDevicePath</a></div><div class="ttdoc">Converts an absolute path to a 'DOS device path'.</div><div class="ttdef"><b>Definition:</b> DosDevicePath_win.h:14</div></div>
<div class="ttc" id="aclassez_string_builder_htm_acb4e8da454e08207f376cb95ec372878"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#acb4e8da454e08207f376cb95ec372878">ezStringBuilder::MakeCleanPath</a></div><div class="ttdeci">void MakeCleanPath()</div><div class="ttdoc">Removes &quot;../&quot; where possible, replaces all path separators with /, removes double slashes.</div><div class="ttdef"><b>Definition:</b> StringBuilder.cpp:693</div></div>
<div class="ttc" id="aclassez_o_s_file_htm_a0f8f96ff0fa85cf30484262995c0db79"><div class="ttname"><a href="../../db/d00/classez_o_s_file.htm#a0f8f96ff0fa85cf30484262995c0db79">ezOSFile::GetApplicationDirectory</a></div><div class="ttdeci">static const char * GetApplicationDirectory()</div><div class="ttdoc">Returns the path in which the applications binary file is located.</div><div class="ttdef"><b>Definition:</b> OSFile_win.h:530</div></div>
<div class="ttc" id="aclassez_command_line_option_htm_a40d309c9de7fc4214d3eac5101f4cecaa68eec46437c384d8dad18d5464ebc35c"><div class="ttname"><a href="../../db/d9d/classez_command_line_option.htm#a40d309c9de7fc4214d3eac5101f4cecaa68eec46437c384d8dad18d5464ebc35c">ezCommandLineOption::LogMode::Always</a></div><div class="ttdeci">@ Always</div><div class="ttdoc">Always log the options value on access.</div></div>
<div class="ttc" id="astructez_status_htm"><div class="ttname"><a href="../../d7/d6e/structez_status.htm">ezStatus</a></div><div class="ttdoc">An ezResult with an additional message for the reason of failure.</div><div class="ttdef"><b>Definition:</b> Status.h:11</div></div>
<div class="ttc" id="aclassez_string_builder_htm_a40dff448589cc69f85fce8d72922ae22"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a40dff448589cc69f85fce8d72922ae22">ezStringBuilder::PathParentDirectory</a></div><div class="ttdeci">void PathParentDirectory(ezUInt32 uiLevelsUp=1)</div><div class="ttdoc">Modifies this string to point to the parent directory.</div><div class="ttdef"><b>Definition:</b> StringBuilder.cpp:801</div></div>
<div class="ttc" id="aclassez_string_builder_htm_ac6b96e398a7232a42c307c753e34b6d8"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#ac6b96e398a7232a42c307c753e34b6d8">ezStringBuilder::AppendPath</a></div><div class="ttdeci">void AppendPath(const char *szPath1, const char *szPath2=nullptr, const char *szPath3=nullptr, const char *szPath4=nullptr)</div><div class="ttdoc">Appends several path pieces. Makes sure they are always properly separated by a slash.</div><div class="ttdef"><b>Definition:</b> StringBuilder.cpp:811</div></div>
<div class="ttc" id="aclassez_command_line_option_bool_htm"><div class="ttname"><a href="../../d2/dc7/classez_command_line_option_bool.htm">ezCommandLineOptionBool</a></div><div class="ttdoc">This command line option exposes simple on/off switches.</div><div class="ttdef"><b>Definition:</b> CommandLineOptions.h:132</div></div>
<div class="ttc" id="aclassez_string_builder_htm"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></div><div class="ttdoc">ezStringBuilder is a class that is meant for creating and modifying strings.</div><div class="ttdef"><b>Definition:</b> StringBuilder.h:34</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_755fdcfb6b850fe41cc906fd4ef666a8.htm">System</a></li><li class="navelem"><a class="el" href="../../dir_8580235f0f8f387a258dcf4b47a3ab70.htm">Implementation</a></li><li class="navelem"><a class="el" href="../../dir_10157c49fda0276b550836e7c5b9a31b.htm">Win</a></li><li class="navelem"><b>MiniDumpUtils_win.h</b></li>
    <li class="footer">Generated on Tue Jun 8 2021 21:43:12 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
