<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Containers/Implementation/ArrayMap_inl.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 22.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('dc/d08/_array_map__inl_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ArrayMap_inl.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE&gt;</div>
<div class="line"><a name="l00004"></a><span class="lineno"><a class="line" href="../../dc/da4/classez_array_map_base.htm#ae3936676f016eaa4bf9607462db8c79d">    4</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="../../dc/da4/classez_array_map_base.htm#ae3936676f016eaa4bf9607462db8c79d">ezArrayMapBase&lt;KEY, VALUE&gt;::ezArrayMapBase</a>(<a class="code" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a>* pAllocator)</div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;  : m_Data(pAllocator)</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;{</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;  m_bSorted = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;}</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160; </div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE&gt;</div>
<div class="line"><a name="l00011"></a><span class="lineno"><a class="line" href="../../dc/da4/classez_array_map_base.htm#acfba9526bafd8e424c2644c8bcc2433a">   11</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="../../dc/da4/classez_array_map_base.htm#ae3936676f016eaa4bf9607462db8c79d">ezArrayMapBase&lt;KEY, VALUE&gt;::ezArrayMapBase</a>(<span class="keyword">const</span> <a class="code" href="../../dc/da4/classez_array_map_base.htm">ezArrayMapBase</a>&amp; rhs, <a class="code" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a>* pAllocator)</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;  : m_bSorted(rhs.m_bSorted)</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;  , m_Data(pAllocator)</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;{</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;  m_Data = rhs.m_Data;</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;}</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160; </div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE&gt;</div>
<div class="line"><a name="l00019"></a><span class="lineno"><a class="line" href="../../dc/da4/classez_array_map_base.htm#a5a83bc105d9e4c445ac253bc8509e91d">   19</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/da4/classez_array_map_base.htm#a5a83bc105d9e4c445ac253bc8509e91d">ezArrayMapBase&lt;KEY, VALUE&gt;::operator=</a>(<span class="keyword">const</span> <a class="code" href="../../dc/da4/classez_array_map_base.htm">ezArrayMapBase</a>&amp; rhs)</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;{</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;  m_bSorted = rhs.m_bSorted;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;  m_Data = rhs.m_Data;</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;}</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160; </div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE&gt;</div>
<div class="line"><a name="l00026"></a><span class="lineno"><a class="line" href="../../dc/da4/classez_array_map_base.htm#a224dc6e8af431a12225b60643bb516f5">   26</a></span>&#160;EZ_ALWAYS_INLINE ezUInt32 <a class="code" href="../../dc/da4/classez_array_map_base.htm#a224dc6e8af431a12225b60643bb516f5">ezArrayMapBase&lt;KEY, VALUE&gt;::GetCount</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  <span class="keywordflow">return</span> m_Data.GetCount();</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;}</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160; </div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE&gt;</div>
<div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="../../dc/da4/classez_array_map_base.htm#a170f1eb99a4588021088fd27c94bad9d">   32</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../dc/da4/classez_array_map_base.htm#a170f1eb99a4588021088fd27c94bad9d">ezArrayMapBase&lt;KEY, VALUE&gt;::IsEmpty</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  <span class="keywordflow">return</span> m_Data.IsEmpty();</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;}</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160; </div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE&gt;</div>
<div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="../../dc/da4/classez_array_map_base.htm#a8f5167ecee29fbaf666ac6faa489f31b">   38</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/da4/classez_array_map_base.htm#a8f5167ecee29fbaf666ac6faa489f31b">ezArrayMapBase&lt;KEY, VALUE&gt;::Clear</a>()</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  m_bSorted = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  m_Data.Clear();</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;}</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160; </div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE&gt;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType, <span class="keyword">typename</span> CompatibleValueType&gt;</div>
<div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="../../dc/da4/classez_array_map_base.htm#ae409bf057ecb228d154c84a7a4802aa6">   46</a></span>&#160;<span class="keyword">inline</span> ezUInt32 <a class="code" href="../../dc/da4/classez_array_map_base.htm#ae409bf057ecb228d154c84a7a4802aa6">ezArrayMapBase&lt;KEY, VALUE&gt;::Insert</a>(CompatibleKeyType&amp;&amp; key, CompatibleValueType&amp;&amp; value)</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;{</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;  Pair&amp; ref = m_Data.ExpandAndGetRef();</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;  ref.key = std::forward&lt;CompatibleKeyType&gt;(key);</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;  ref.value = std::forward&lt;CompatibleValueType&gt;(value);</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;  m_bSorted = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  <span class="keywordflow">return</span> m_Data.GetCount() - 1;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;}</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160; </div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE&gt;</div>
<div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="../../dc/da4/classez_array_map_base.htm#ac19061d1bc4c1da91d405c420d4eda18">   56</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/da4/classez_array_map_base.htm#ac19061d1bc4c1da91d405c420d4eda18">ezArrayMapBase&lt;KEY, VALUE&gt;::Sort</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  <span class="keywordflow">if</span> (m_bSorted)</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160; </div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  m_bSorted = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;  m_Data.Sort();</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;}</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160; </div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE&gt;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="../../dc/da4/classez_array_map_base.htm#ab828576814639514c279641a3942f5b7">   67</a></span>&#160;ezUInt32 <a class="code" href="../../dc/da4/classez_array_map_base.htm#ab828576814639514c279641a3942f5b7">ezArrayMapBase&lt;KEY, VALUE&gt;::Find</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key)<span class="keyword"> const</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;  <span class="keywordflow">if</span> (!m_bSorted)</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  {</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    m_Data.Sort();</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;  }</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160; </div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;  ezUInt32 lb = 0;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;  ezUInt32 ub = m_Data.GetCount();</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160; </div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;  <span class="keywordflow">while</span> (lb &lt; ub)</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;  {</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="keyword">const</span> ezUInt32 middle = lb + ((ub - lb) &gt;&gt; 1);</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160; </div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keywordflow">if</span> (m_Data[middle].key &lt; key)</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    {</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;      lb = middle + 1;</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    }</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (key &lt; m_Data[middle].key)</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    {</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;      ub = middle;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    }</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keywordflow">else</span> <span class="comment">// equal</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    {</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;      <span class="keywordflow">return</span> middle;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    }</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  }</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160; </div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;  <span class="keywordflow">return</span> ezInvalidIndex;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;}</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160; </div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE&gt;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00100"></a><span class="lineno"><a class="line" href="../../dc/da4/classez_array_map_base.htm#aa9b993909798458921ef75ef0501c65a">  100</a></span>&#160;ezUInt32 <a class="code" href="../../dc/da4/classez_array_map_base.htm#aa9b993909798458921ef75ef0501c65a">ezArrayMapBase&lt;KEY, VALUE&gt;::LowerBound</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key)<span class="keyword"> const</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;  <span class="keywordflow">if</span> (!m_bSorted)</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  {</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    m_Data.Sort();</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;  }</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160; </div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;  ezUInt32 lb = 0;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;  ezUInt32 ub = m_Data.GetCount();</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160; </div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;  <span class="keywordflow">while</span> (lb &lt; ub)</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;  {</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="keyword">const</span> ezUInt32 middle = lb + ((ub - lb) &gt;&gt; 1);</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160; </div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="keywordflow">if</span> (m_Data[middle].key &lt; key)</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    {</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;      lb = middle + 1;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    }</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    {</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;      ub = middle;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    }</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;  }</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160; </div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;  <span class="keywordflow">if</span> (lb == m_Data.GetCount())</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <span class="keywordflow">return</span> ezInvalidIndex;</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160; </div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;  <span class="keywordflow">return</span> lb;</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;}</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160; </div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE&gt;</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00132"></a><span class="lineno"><a class="line" href="../../dc/da4/classez_array_map_base.htm#a526806d6d86d43fd0a280b168446321e">  132</a></span>&#160;ezUInt32 <a class="code" href="../../dc/da4/classez_array_map_base.htm#a526806d6d86d43fd0a280b168446321e">ezArrayMapBase&lt;KEY, VALUE&gt;::UpperBound</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key)<span class="keyword"> const</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;  <span class="keywordflow">if</span> (!m_bSorted)</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;  {</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    m_Data.Sort();</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;  }</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160; </div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;  ezUInt32 lb = 0;</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;  ezUInt32 ub = m_Data.GetCount();</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160; </div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;  <span class="keywordflow">while</span> (lb &lt; ub)</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  {</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <span class="keyword">const</span> ezUInt32 middle = lb + ((ub - lb) &gt;&gt; 1);</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160; </div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="keywordflow">if</span> (key &lt; m_Data[middle].key)</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    {</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;      ub = middle;</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    }</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    {</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;      lb = middle + 1;</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    }</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;  }</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160; </div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;  <span class="keywordflow">if</span> (ub == m_Data.GetCount())</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    <span class="keywordflow">return</span> ezInvalidIndex;</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160; </div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;  <span class="keywordflow">return</span> ub;</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;}</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160; </div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE&gt;</div>
<div class="line"><a name="l00163"></a><span class="lineno"><a class="line" href="../../dc/da4/classez_array_map_base.htm#abde191e3150dc6e5bd62e0f29ea52b5e">  163</a></span>&#160;EZ_ALWAYS_INLINE <span class="keyword">const</span> KEY&amp; <a class="code" href="../../dc/da4/classez_array_map_base.htm#abde191e3150dc6e5bd62e0f29ea52b5e">ezArrayMapBase&lt;KEY, VALUE&gt;::GetKey</a>(ezUInt32 index)<span class="keyword"> const</span></div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;  <span class="keywordflow">return</span> m_Data[index].key;</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;}</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160; </div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE&gt;</div>
<div class="line"><a name="l00169"></a><span class="lineno"><a class="line" href="../../dc/da4/classez_array_map_base.htm#ac7b915e52f075f912a41afe5af4d4755">  169</a></span>&#160;EZ_ALWAYS_INLINE <span class="keyword">const</span> VALUE&amp; <a class="code" href="../../dc/da4/classez_array_map_base.htm#ac7b915e52f075f912a41afe5af4d4755">ezArrayMapBase&lt;KEY, VALUE&gt;::GetValue</a>(ezUInt32 index)<span class="keyword"> const</span></div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;  <span class="keywordflow">return</span> m_Data[index].value;</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;}</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160; </div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE&gt;</div>
<div class="line"><a name="l00175"></a><span class="lineno"><a class="line" href="../../dc/da4/classez_array_map_base.htm#a1f34e0284dac1ebfb36e4a9f55bdda1a">  175</a></span>&#160;VALUE&amp; <a class="code" href="../../dc/da4/classez_array_map_base.htm#ac7b915e52f075f912a41afe5af4d4755">ezArrayMapBase&lt;KEY, VALUE&gt;::GetValue</a>(ezUInt32 index)</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;{</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;  <span class="keywordflow">return</span> m_Data[index].value;</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;}</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160; </div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE&gt;</div>
<div class="line"><a name="l00181"></a><span class="lineno"><a class="line" href="../../dc/da4/classez_array_map_base.htm#aacf3733cf78d14ee4e6956d3a28fa0da">  181</a></span>&#160;EZ_ALWAYS_INLINE <a class="code" href="../../d2/d4f/classez_dynamic_array.htm">ezDynamicArray&lt;typename ezArrayMapBase&lt;KEY, VALUE&gt;::Pair</a>&gt;&amp; <a class="code" href="../../dc/da4/classez_array_map_base.htm#aacf3733cf78d14ee4e6956d3a28fa0da">ezArrayMapBase&lt;KEY, VALUE&gt;::GetData</a>()</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;{</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;  m_bSorted = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;  <span class="keywordflow">return</span> m_Data;</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;}</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160; </div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE&gt;</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;EZ_ALWAYS_INLINE <span class="keyword">const</span> <a class="code" href="../../d2/d4f/classez_dynamic_array.htm">ezDynamicArray&lt;typename ezArrayMapBase&lt;KEY, VALUE&gt;::Pair</a>&gt;&amp; <a class="code" href="../../dc/da4/classez_array_map_base.htm#aacf3733cf78d14ee4e6956d3a28fa0da">ezArrayMapBase&lt;KEY, VALUE&gt;::GetData</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;  <span class="keywordflow">return</span> m_Data;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;}</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160; </div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE&gt;</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00195"></a><span class="lineno"><a class="line" href="../../dc/da4/classez_array_map_base.htm#aa80619842efc2e3aeec749b17b5ad8ff">  195</a></span>&#160;VALUE&amp; <a class="code" href="../../dc/da4/classez_array_map_base.htm#aa80619842efc2e3aeec749b17b5ad8ff">ezArrayMapBase&lt;KEY, VALUE&gt;::FindOrAdd</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key, <span class="keywordtype">bool</span>* bExisted)</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;{</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;  ezUInt32 index = Find&lt;CompatibleKeyType&gt;(key);</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160; </div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;  <span class="keywordflow">if</span> (bExisted)</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    *bExisted = index != ezInvalidIndex;</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160; </div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;  <span class="keywordflow">if</span> (index == ezInvalidIndex)</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;  {</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    index = Insert(key, VALUE());</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;  }</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160; </div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;  <span class="keywordflow">return</span> GetValue(index);</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;}</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160; </div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE&gt;</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;EZ_ALWAYS_INLINE VALUE&amp; <a class="code" href="../../dc/da4/classez_array_map_base.htm#a37eba52cd5d243e04466227c3f341813">ezArrayMapBase&lt;KEY, VALUE&gt;::operator[]</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key)</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;{</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;  <span class="keywordflow">return</span> FindOrAdd(key);</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;}</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160; </div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE&gt;</div>
<div class="line"><a name="l00218"></a><span class="lineno"><a class="line" href="../../dc/da4/classez_array_map_base.htm#a521aa5073ee3f4dcc5518292d2361e44">  218</a></span>&#160;EZ_ALWAYS_INLINE <span class="keyword">const</span> <span class="keyword">typename</span> <a class="code" href="../../d5/df3/structez_array_map_base_1_1_pair.htm">ezArrayMapBase&lt;KEY, VALUE&gt;::Pair</a>&amp; <a class="code" href="../../dc/da4/classez_array_map_base.htm#a521aa5073ee3f4dcc5518292d2361e44">ezArrayMapBase&lt;KEY, VALUE&gt;::GetPair</a>(ezUInt32 index)<span class="keyword"> const</span></div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;  <span class="keywordflow">return</span> m_Data[index];</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;}</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160; </div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE&gt;</div>
<div class="line"><a name="l00224"></a><span class="lineno"><a class="line" href="../../dc/da4/classez_array_map_base.htm#a7fb0770c7bfb0daa3b99835e7617abb6">  224</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../dc/da4/classez_array_map_base.htm#a7fb0770c7bfb0daa3b99835e7617abb6">ezArrayMapBase&lt;KEY, VALUE&gt;::RemoveAtAndCopy</a>(ezUInt32 index, <span class="keywordtype">bool</span> bKeepSorted)</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;{</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;  <span class="keywordflow">if</span> (bKeepSorted &amp;&amp; m_bSorted)</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;  {</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    m_Data.RemoveAtAndCopy(index);</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;  }</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;  {</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    m_Data.RemoveAtAndSwap(index);</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    m_bSorted = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;  }</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;}</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160; </div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE&gt;</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00239"></a><span class="lineno"><a class="line" href="../../dc/da4/classez_array_map_base.htm#ab58bdc40bca9657eb59783eb34d3ae75">  239</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../dc/da4/classez_array_map_base.htm#ab58bdc40bca9657eb59783eb34d3ae75">ezArrayMapBase&lt;KEY, VALUE&gt;::RemoveAndCopy</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key, <span class="keywordtype">bool</span> bKeepSorted)</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;{</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;  <span class="keyword">const</span> ezUInt32 uiIndex = Find(key);</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160; </div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;  <span class="keywordflow">if</span> (uiIndex == ezInvalidIndex)</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160; </div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;  RemoveAtAndCopy(uiIndex, bKeepSorted);</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;}</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160; </div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE&gt;</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../dc/da4/classez_array_map_base.htm#a485c7c3d5f44917241b8faab61a4b62c">ezArrayMapBase&lt;KEY, VALUE&gt;::Contains</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key)<span class="keyword"> const</span></div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;  <span class="keywordflow">return</span> Find(key) != ezInvalidIndex;</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;}</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160; </div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE&gt;</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00259"></a><span class="lineno"><a class="line" href="../../dc/da4/classez_array_map_base.htm#ae97b2bd5c376c56fc838bf70b2dd1f75">  259</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../dc/da4/classez_array_map_base.htm#a485c7c3d5f44917241b8faab61a4b62c">ezArrayMapBase&lt;KEY, VALUE&gt;::Contains</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key, <span class="keyword">const</span> VALUE&amp; value)<span class="keyword"> const</span></div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;  ezUInt32 atpos = LowerBound(key);</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160; </div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;  <span class="keywordflow">if</span> (atpos == ezInvalidIndex)</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160; </div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;  <span class="keywordflow">while</span> (atpos &lt; m_Data.GetCount())</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;  {</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    <span class="keywordflow">if</span> (m_Data[atpos].key != key)</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160; </div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;    <span class="keywordflow">if</span> (m_Data[atpos].value == value)</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160; </div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    ++atpos;</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;  }</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160; </div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;}</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160; </div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160; </div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE&gt;</div>
<div class="line"><a name="l00282"></a><span class="lineno"><a class="line" href="../../dc/da4/classez_array_map_base.htm#a4455dc0a07bf4f4a38554f512377b29e">  282</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../dc/da4/classez_array_map_base.htm#a4455dc0a07bf4f4a38554f512377b29e">ezArrayMapBase&lt;KEY, VALUE&gt;::Reserve</a>(ezUInt32 size)</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;{</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;  m_Data.Reserve(size);</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;}</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160; </div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE&gt;</div>
<div class="line"><a name="l00288"></a><span class="lineno"><a class="line" href="../../dc/da4/classez_array_map_base.htm#a04b849af74b254241f300342c1e0e073">  288</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../dc/da4/classez_array_map_base.htm#a04b849af74b254241f300342c1e0e073">ezArrayMapBase&lt;KEY, VALUE&gt;::Compact</a>()</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;{</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;  m_Data.Compact();</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;}</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160; </div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE&gt;</div>
<div class="line"><a name="l00294"></a><span class="lineno"><a class="line" href="../../dc/da4/classez_array_map_base.htm#a15be69636bacae3a01ef7a6d41f74cd8">  294</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../dc/da4/classez_array_map_base.htm#a15be69636bacae3a01ef7a6d41f74cd8">ezArrayMapBase&lt;KEY, VALUE&gt;::operator==</a>(<span class="keyword">const</span> <a class="code" href="../../dc/da4/classez_array_map_base.htm">ezArrayMapBase&lt;KEY, VALUE&gt;</a>&amp; rhs)<span class="keyword"> const</span></div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;  Sort();</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;  rhs.<a class="code" href="../../dc/da4/classez_array_map_base.htm#ac19061d1bc4c1da91d405c420d4eda18">Sort</a>();</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160; </div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;  <span class="keywordflow">return</span> m_Data == rhs.m_Data;</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;}</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160; </div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE&gt;</div>
<div class="line"><a name="l00303"></a><span class="lineno"><a class="line" href="../../dc/da4/classez_array_map_base.htm#ac68043cb6b8b24caecae05a5d4af8282">  303</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../dc/da4/classez_array_map_base.htm#ac68043cb6b8b24caecae05a5d4af8282">ezArrayMapBase&lt;KEY, VALUE&gt;::operator!=</a>(<span class="keyword">const</span> <a class="code" href="../../dc/da4/classez_array_map_base.htm">ezArrayMapBase&lt;KEY, VALUE&gt;</a>&amp; rhs)<span class="keyword"> const</span></div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;  <span class="keywordflow">return</span> !(*<span class="keyword">this</span> == rhs);</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;}</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160; </div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE, <span class="keyword">typename</span> A&gt;</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;<a class="code" href="../../d4/d34/classez_array_map.htm">ezArrayMap&lt;KEY, VALUE, A&gt;::ezArrayMap</a>()</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;  : <a class="code" href="../../dc/da4/classez_array_map_base.htm">ezArrayMapBase</a>&lt;KEY, VALUE&gt;(A::GetAllocator())</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;{</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;}</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160; </div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE, <span class="keyword">typename</span> A&gt;</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;<a class="code" href="../../d4/d34/classez_array_map.htm">ezArrayMap&lt;KEY, VALUE, A&gt;::ezArrayMap</a>(<a class="code" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a>* pAllocator)</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;  : <a class="code" href="../../dc/da4/classez_array_map_base.htm">ezArrayMapBase</a>&lt;KEY, VALUE&gt;(pAllocator)</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;{</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;}</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160; </div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE, <span class="keyword">typename</span> A&gt;</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;<a class="code" href="../../d4/d34/classez_array_map.htm">ezArrayMap&lt;KEY, VALUE, A&gt;::ezArrayMap</a>(<span class="keyword">const</span> <a class="code" href="../../d4/d34/classez_array_map.htm">ezArrayMap&lt;KEY, VALUE, A&gt;</a>&amp; rhs)</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;  : <a class="code" href="../../dc/da4/classez_array_map_base.htm">ezArrayMapBase</a>&lt;KEY, VALUE&gt;(rhs, A::GetAllocator())</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;{</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;}</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160; </div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE, <span class="keyword">typename</span> A&gt;</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;<a class="code" href="../../d4/d34/classez_array_map.htm">ezArrayMap&lt;KEY, VALUE, A&gt;::ezArrayMap</a>(<span class="keyword">const</span> <a class="code" href="../../dc/da4/classez_array_map_base.htm">ezArrayMapBase&lt;KEY, VALUE&gt;</a>&amp; rhs)</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;  : <a class="code" href="../../dc/da4/classez_array_map_base.htm">ezArrayMapBase</a>&lt;KEY, VALUE&gt;(rhs, A::GetAllocator())</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;{</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;}</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160; </div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE, <span class="keyword">typename</span> A&gt;</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d4/d34/classez_array_map.htm">ezArrayMap&lt;KEY, VALUE, A&gt;::operator=</a>(<span class="keyword">const</span> <a class="code" href="../../d4/d34/classez_array_map.htm">ezArrayMap&lt;KEY, VALUE, A&gt;</a>&amp; rhs)</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;{</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;  <a class="code" href="../../dc/da4/classez_array_map_base.htm#a5a83bc105d9e4c445ac253bc8509e91d">ezArrayMapBase&lt;KEY, VALUE&gt;::operator=</a>(rhs);</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;}</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160; </div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KEY, <span class="keyword">typename</span> VALUE, <span class="keyword">typename</span> A&gt;</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d4/d34/classez_array_map.htm">ezArrayMap&lt;KEY, VALUE, A&gt;::operator=</a>(<span class="keyword">const</span> <a class="code" href="../../dc/da4/classez_array_map_base.htm">ezArrayMapBase&lt;KEY, VALUE&gt;</a>&amp; rhs)</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;{</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;  <a class="code" href="../../dc/da4/classez_array_map_base.htm#a5a83bc105d9e4c445ac253bc8509e91d">ezArrayMapBase&lt;KEY, VALUE&gt;::operator=</a>(rhs);</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;}</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassez_array_map_base_htm_a37eba52cd5d243e04466227c3f341813"><div class="ttname"><a href="../../dc/da4/classez_array_map_base.htm#a37eba52cd5d243e04466227c3f341813">ezArrayMapBase::operator[]</a></div><div class="ttdeci">VALUE &amp; operator[](const CompatibleKeyType &amp;key)</div><div class="ttdoc">Same as FindOrAdd.</div></div>
<div class="ttc" id="aclassez_array_map_base_htm_a04b849af74b254241f300342c1e0e073"><div class="ttname"><a href="../../dc/da4/classez_array_map_base.htm#a04b849af74b254241f300342c1e0e073">ezArrayMapBase::Compact</a></div><div class="ttdeci">void Compact()</div><div class="ttdoc">Compacts the internal memory to not waste any space.</div><div class="ttdef"><b>Definition:</b> ArrayMap_inl.h:288</div></div>
<div class="ttc" id="aclassez_array_map_base_htm_ac7b915e52f075f912a41afe5af4d4755"><div class="ttname"><a href="../../dc/da4/classez_array_map_base.htm#ac7b915e52f075f912a41afe5af4d4755">ezArrayMapBase::GetValue</a></div><div class="ttdeci">const VALUE &amp; GetValue(ezUInt32 index) const</div><div class="ttdoc">Returns the value that is stored at the given index.</div><div class="ttdef"><b>Definition:</b> ArrayMap_inl.h:169</div></div>
<div class="ttc" id="aclassez_array_map_base_htm_ab828576814639514c279641a3942f5b7"><div class="ttname"><a href="../../dc/da4/classez_array_map_base.htm#ab828576814639514c279641a3942f5b7">ezArrayMapBase::Find</a></div><div class="ttdeci">ezUInt32 Find(const CompatibleKeyType &amp;key) const</div><div class="ttdoc">Returns an index to one element with the given key. If the key is inserted multiple times,...</div><div class="ttdef"><b>Definition:</b> ArrayMap_inl.h:67</div></div>
<div class="ttc" id="aclassez_array_map_base_htm_ae409bf057ecb228d154c84a7a4802aa6"><div class="ttname"><a href="../../dc/da4/classez_array_map_base.htm#ae409bf057ecb228d154c84a7a4802aa6">ezArrayMapBase::Insert</a></div><div class="ttdeci">ezUInt32 Insert(CompatibleKeyType &amp;&amp;key, CompatibleValueType &amp;&amp;value)</div><div class="ttdoc">Always inserts a new value under the given key. Duplicates are allowed. Returns the index of the newl...</div><div class="ttdef"><b>Definition:</b> ArrayMap_inl.h:46</div></div>
<div class="ttc" id="astructez_array_map_base_1_1_pair_htm"><div class="ttname"><a href="../../d5/df3/structez_array_map_base_1_1_pair.htm">ezArrayMapBase::Pair</a></div><div class="ttdef"><b>Definition:</b> ArrayMap.h:18</div></div>
<div class="ttc" id="aclassez_array_map_base_htm_ab58bdc40bca9657eb59783eb34d3ae75"><div class="ttname"><a href="../../dc/da4/classez_array_map_base.htm#ab58bdc40bca9657eb59783eb34d3ae75">ezArrayMapBase::RemoveAndCopy</a></div><div class="ttdeci">bool RemoveAndCopy(const CompatibleKeyType &amp;key, bool bKeepSorted=false)</div><div class="ttdoc">Removes one element with the given key. Returns true, if one was found and removed....</div><div class="ttdef"><b>Definition:</b> ArrayMap_inl.h:239</div></div>
<div class="ttc" id="aclassez_array_map_base_htm_a170f1eb99a4588021088fd27c94bad9d"><div class="ttname"><a href="../../dc/da4/classez_array_map_base.htm#a170f1eb99a4588021088fd27c94bad9d">ezArrayMapBase::IsEmpty</a></div><div class="ttdeci">bool IsEmpty() const</div><div class="ttdoc">True if the map contains no elements.</div><div class="ttdef"><b>Definition:</b> ArrayMap_inl.h:32</div></div>
<div class="ttc" id="aclassez_array_map_base_htm_a224dc6e8af431a12225b60643bb516f5"><div class="ttname"><a href="../../dc/da4/classez_array_map_base.htm#a224dc6e8af431a12225b60643bb516f5">ezArrayMapBase::GetCount</a></div><div class="ttdeci">ezUInt32 GetCount() const</div><div class="ttdoc">Returns the number of elements stored in the map.</div><div class="ttdef"><b>Definition:</b> ArrayMap_inl.h:26</div></div>
<div class="ttc" id="aclassez_array_map_base_htm_a4455dc0a07bf4f4a38554f512377b29e"><div class="ttname"><a href="../../dc/da4/classez_array_map_base.htm#a4455dc0a07bf4f4a38554f512377b29e">ezArrayMapBase::Reserve</a></div><div class="ttdeci">void Reserve(ezUInt32 size)</div><div class="ttdoc">Reserves enough memory to store size elements.</div><div class="ttdef"><b>Definition:</b> ArrayMap_inl.h:282</div></div>
<div class="ttc" id="aclassez_array_map_base_htm_a8f5167ecee29fbaf666ac6faa489f31b"><div class="ttname"><a href="../../dc/da4/classez_array_map_base.htm#a8f5167ecee29fbaf666ac6faa489f31b">ezArrayMapBase::Clear</a></div><div class="ttdeci">void Clear()</div><div class="ttdoc">Purges all elements from the map.</div><div class="ttdef"><b>Definition:</b> ArrayMap_inl.h:38</div></div>
<div class="ttc" id="aclassez_allocator_base_htm"><div class="ttname"><a href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a></div><div class="ttdoc">Base class for all memory allocators.</div><div class="ttdef"><b>Definition:</b> AllocatorBase.h:22</div></div>
<div class="ttc" id="aclassez_array_map_htm"><div class="ttname"><a href="../../d4/d34/classez_array_map.htm">ezArrayMap</a></div><div class="ttdoc">See ezArrayMapBase for details.</div><div class="ttdef"><b>Definition:</b> ArrayMap.h:150</div></div>
<div class="ttc" id="aclassez_dynamic_array_htm"><div class="ttname"><a href="../../d2/d4f/classez_dynamic_array.htm">ezDynamicArray</a></div><div class="ttdef"><b>Definition:</b> DynamicArray.h:80</div></div>
<div class="ttc" id="aclassez_array_map_base_htm_abde191e3150dc6e5bd62e0f29ea52b5e"><div class="ttname"><a href="../../dc/da4/classez_array_map_base.htm#abde191e3150dc6e5bd62e0f29ea52b5e">ezArrayMapBase::GetKey</a></div><div class="ttdeci">const KEY &amp; GetKey(ezUInt32 index) const</div><div class="ttdoc">Returns the key that is stored at the given index.</div><div class="ttdef"><b>Definition:</b> ArrayMap_inl.h:163</div></div>
<div class="ttc" id="aclassez_array_map_base_htm_ac19061d1bc4c1da91d405c420d4eda18"><div class="ttname"><a href="../../dc/da4/classez_array_map_base.htm#ac19061d1bc4c1da91d405c420d4eda18">ezArrayMapBase::Sort</a></div><div class="ttdeci">void Sort() const</div><div class="ttdoc">Ensures the internal data structure is sorted. This is done automatically every time a lookup needs t...</div><div class="ttdef"><b>Definition:</b> ArrayMap_inl.h:56</div></div>
<div class="ttc" id="aclassez_array_map_base_htm_aa80619842efc2e3aeec749b17b5ad8ff"><div class="ttname"><a href="../../dc/da4/classez_array_map_base.htm#aa80619842efc2e3aeec749b17b5ad8ff">ezArrayMapBase::FindOrAdd</a></div><div class="ttdeci">VALUE &amp; FindOrAdd(const CompatibleKeyType &amp;key, bool *bExisted=nullptr)</div><div class="ttdoc">Returns the value stored at the given key. If none exists, one is created. bExisted indicates whether...</div><div class="ttdef"><b>Definition:</b> ArrayMap_inl.h:195</div></div>
<div class="ttc" id="aclassez_array_map_base_htm"><div class="ttname"><a href="../../dc/da4/classez_array_map_base.htm">ezArrayMapBase</a></div><div class="ttdoc">An associative container, similar to ezMap, but all data is stored in a sorted contiguous array,...</div><div class="ttdef"><b>Definition:</b> ArrayMap.h:13</div></div>
<div class="ttc" id="aclassez_array_map_base_htm_ae3936676f016eaa4bf9607462db8c79d"><div class="ttname"><a href="../../dc/da4/classez_array_map_base.htm#ae3936676f016eaa4bf9607462db8c79d">ezArrayMapBase::ezArrayMapBase</a></div><div class="ttdeci">ezArrayMapBase(ezAllocatorBase *pAllocator)</div><div class="ttdoc">Constructor.</div><div class="ttdef"><b>Definition:</b> ArrayMap_inl.h:4</div></div>
<div class="ttc" id="aclassez_array_map_base_htm_a485c7c3d5f44917241b8faab61a4b62c"><div class="ttname"><a href="../../dc/da4/classez_array_map_base.htm#a485c7c3d5f44917241b8faab61a4b62c">ezArrayMapBase::Contains</a></div><div class="ttdeci">bool Contains(const CompatibleKeyType &amp;key) const</div><div class="ttdoc">Returns whether an element with the given key exists.</div></div>
<div class="ttc" id="aclassez_array_map_base_htm_a521aa5073ee3f4dcc5518292d2361e44"><div class="ttname"><a href="../../dc/da4/classez_array_map_base.htm#a521aa5073ee3f4dcc5518292d2361e44">ezArrayMapBase::GetPair</a></div><div class="ttdeci">const Pair &amp; GetPair(ezUInt32 index) const</div><div class="ttdoc">Returns the key/value pair at the given index.</div><div class="ttdef"><b>Definition:</b> ArrayMap_inl.h:218</div></div>
<div class="ttc" id="aclassez_array_map_base_htm_a526806d6d86d43fd0a280b168446321e"><div class="ttname"><a href="../../dc/da4/classez_array_map_base.htm#a526806d6d86d43fd0a280b168446321e">ezArrayMapBase::UpperBound</a></div><div class="ttdeci">ezUInt32 UpperBound(const CompatibleKeyType &amp;key) const</div><div class="ttdoc">Returns the index to the first element with a key that is LARGER than the given key....</div><div class="ttdef"><b>Definition:</b> ArrayMap_inl.h:132</div></div>
<div class="ttc" id="aclassez_array_map_base_htm_a5a83bc105d9e4c445ac253bc8509e91d"><div class="ttname"><a href="../../dc/da4/classez_array_map_base.htm#a5a83bc105d9e4c445ac253bc8509e91d">ezArrayMapBase::operator=</a></div><div class="ttdeci">void operator=(const ezArrayMapBase &amp;rhs)</div><div class="ttdoc">Copy assignment operator.</div><div class="ttdef"><b>Definition:</b> ArrayMap_inl.h:19</div></div>
<div class="ttc" id="aclassez_array_map_base_htm_aacf3733cf78d14ee4e6956d3a28fa0da"><div class="ttname"><a href="../../dc/da4/classez_array_map_base.htm#aacf3733cf78d14ee4e6956d3a28fa0da">ezArrayMapBase::GetData</a></div><div class="ttdeci">ezDynamicArray&lt; Pair &gt; &amp; GetData()</div><div class="ttdoc">Returns a reference to the map data array.</div><div class="ttdef"><b>Definition:</b> ArrayMap_inl.h:181</div></div>
<div class="ttc" id="aclassez_array_map_base_htm_a7fb0770c7bfb0daa3b99835e7617abb6"><div class="ttname"><a href="../../dc/da4/classez_array_map_base.htm#a7fb0770c7bfb0daa3b99835e7617abb6">ezArrayMapBase::RemoveAtAndCopy</a></div><div class="ttdeci">void RemoveAtAndCopy(ezUInt32 index, bool bKeepSorted=false)</div><div class="ttdoc">Removes the element at the given index.</div><div class="ttdef"><b>Definition:</b> ArrayMap_inl.h:224</div></div>
<div class="ttc" id="aclassez_array_map_base_htm_aa9b993909798458921ef75ef0501c65a"><div class="ttname"><a href="../../dc/da4/classez_array_map_base.htm#aa9b993909798458921ef75ef0501c65a">ezArrayMapBase::LowerBound</a></div><div class="ttdeci">ezUInt32 LowerBound(const CompatibleKeyType &amp;key) const</div><div class="ttdoc">Returns the index to the first element with a key equal or larger than the given key....</div><div class="ttdef"><b>Definition:</b> ArrayMap_inl.h:100</div></div>
<div class="ttc" id="aclassez_array_map_base_htm_a15be69636bacae3a01ef7a6d41f74cd8"><div class="ttname"><a href="../../dc/da4/classez_array_map_base.htm#a15be69636bacae3a01ef7a6d41f74cd8">ezArrayMapBase::operator==</a></div><div class="ttdeci">bool operator==(const ezArrayMapBase&lt; KEY, VALUE &gt; &amp;rhs) const</div><div class="ttdoc">Compares the two containers for equality.</div><div class="ttdef"><b>Definition:</b> ArrayMap_inl.h:294</div></div>
<div class="ttc" id="aclassez_array_map_base_htm_ac68043cb6b8b24caecae05a5d4af8282"><div class="ttname"><a href="../../dc/da4/classez_array_map_base.htm#ac68043cb6b8b24caecae05a5d4af8282">ezArrayMapBase::operator!=</a></div><div class="ttdeci">bool operator!=(const ezArrayMapBase&lt; KEY, VALUE &gt; &amp;rhs) const</div><div class="ttdoc">Compares the two containers for equality.</div><div class="ttdef"><b>Definition:</b> ArrayMap_inl.h:303</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_6b567e6755824bd0b8ffd754b9d67ac0.htm">Containers</a></li><li class="navelem"><a class="el" href="../../dir_ab7c7fd106dde24a64865a60f78fe0d2.htm">Implementation</a></li><li class="navelem"><b>ArrayMap_inl.h</b></li>
    <li class="footer">Generated on Fri Nov 18 2022 14:47:57 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
