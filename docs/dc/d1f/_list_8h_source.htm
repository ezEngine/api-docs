<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Containers/List.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 21.6</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('dc/d1f/_list_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">List.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;Foundation/Containers/Deque.h&gt;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160; </div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00011"></a><span class="lineno"><a class="line" href="../../d9/de2/classez_list_base.htm">   11</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d9/de2/classez_list_base.htm">ezListBase</a></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;{</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;  <span class="keyword">struct </span>ListElement;</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160; </div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;  <span class="keyword">struct </span>ListElementBase</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;  {</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    ListElementBase();</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160; </div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;    ListElement* m_pPrev;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    ListElement* m_pNext;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;  };</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160; </div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;  <span class="keyword">struct </span>ListElement : <span class="keyword">public</span> ListElementBase</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;  {</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    ListElement()</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;      : ListElementBase()</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    {</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    }</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    <span class="keyword">explicit</span> ListElement(<span class="keyword">const</span> T&amp; data);</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160; </div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    T m_Data;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  };</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160; </div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;  <span class="keyword">struct </span>ConstIterator</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  {</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    EZ_DECLARE_POD_TYPE();</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160; </div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    ConstIterator()</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;      : m_pElement(<span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    {</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160; </div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="../../d9/de2/classez_list_base.htm#a6572698a2eb883982673c32917d0a435">operator==</a>(<span class="keyword">typename</span> <a class="code" href="../../d9/de2/classez_list_base.htm">ezListBase&lt;T&gt;::ConstIterator</a> it2)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> (m_pElement == it2.m_pElement); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160; </div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keywordtype">bool</span> <a class="code" href="../../d9/de2/classez_list_base.htm#a6a410d1480f41d065241f954081c22ec">operator!=</a>(<span class="keyword">typename</span> <a class="code" href="../../d9/de2/classez_list_base.htm">ezListBase&lt;T&gt;::ConstIterator</a> it2)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> (m_pElement != it2.m_pElement); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160; </div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keyword">const</span> T&amp; operator*()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> (m_pElement-&gt;m_Data); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160; </div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keyword">const</span> T* operator-&gt;()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> (&amp;m_pElement-&gt;m_Data); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160; </div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keywordtype">void</span> Next() { m_pElement = m_pElement-&gt;m_pNext; } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160; </div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keywordtype">void</span> Prev() { m_pElement = m_pElement-&gt;m_pPrev; } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160; </div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keywordtype">bool</span> IsValid()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> ((m_pElement != <span class="keyword">nullptr</span>) &amp;&amp; (m_pElement-&gt;m_pPrev != <span class="keyword">nullptr</span>) &amp;&amp; (m_pElement-&gt;m_pNext != <span class="keyword">nullptr</span>)); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160; </div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="keywordtype">void</span> operator++() { Next(); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160; </div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keywordtype">void</span> operator--() { Prev(); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160; </div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;  <span class="keyword">private</span>:</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="../../d9/de2/classez_list_base.htm">ezListBase</a>&lt;T&gt;;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160; </div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    ConstIterator(ListElement* pInit)</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;      : m_pElement(pInit)</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    {</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    }</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160; </div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    ListElement* m_pElement;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;  };</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160; </div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00087"></a><span class="lineno"><a class="line" href="../../db/d53/structez_list_base_1_1_iterator.htm">   87</a></span>&#160;  <span class="keyword">struct </span><a class="code" href="../../db/d53/structez_list_base_1_1_iterator.htm">Iterator</a> : <span class="keyword">public</span> ConstIterator</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;  {</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="comment">// this is required to pull in the const version of this function</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <span class="keyword">using</span> ConstIterator::operator*;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="keyword">using</span> ConstIterator::operator-&gt;;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160; </div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    EZ_DECLARE_POD_TYPE();</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160; </div>
<div class="line"><a name="l00096"></a><span class="lineno"><a class="line" href="../../db/d53/structez_list_base_1_1_iterator.htm#a8067f8ad7555dfc04873d34f868cdf17">   96</a></span>&#160;    <a class="code" href="../../db/d53/structez_list_base_1_1_iterator.htm#a8067f8ad7555dfc04873d34f868cdf17">Iterator</a>()</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;      : ConstIterator()</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    {</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160; </div>
<div class="line"><a name="l00102"></a><span class="lineno"><a class="line" href="../../db/d53/structez_list_base_1_1_iterator.htm#a317bbf3630b873bf847f61dcecbd0e71">  102</a></span>&#160;    T&amp; <a class="code" href="../../db/d53/structez_list_base_1_1_iterator.htm#a317bbf3630b873bf847f61dcecbd0e71">operator*</a>() { <span class="keywordflow">return</span> (this-&gt;m_pElement-&gt;m_Data); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160; </div>
<div class="line"><a name="l00105"></a><span class="lineno"><a class="line" href="../../db/d53/structez_list_base_1_1_iterator.htm#a65e5e4d6276339e0a5067b163933182e">  105</a></span>&#160;    T* <a class="code" href="../../db/d53/structez_list_base_1_1_iterator.htm#a65e5e4d6276339e0a5067b163933182e">operator-&gt;</a>() { <span class="keywordflow">return</span> (&amp;this-&gt;m_pElement-&gt;m_Data); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160; </div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;  <span class="keyword">private</span>:</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="../../d9/de2/classez_list_base.htm">ezListBase</a>&lt;T&gt;;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160; </div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="keyword">explicit</span> <a class="code" href="../../db/d53/structez_list_base_1_1_iterator.htm#a8067f8ad7555dfc04873d34f868cdf17">Iterator</a>(ListElement* pInit)</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;      : ConstIterator(pInit)</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    {</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    }</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;  };</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160; </div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;  <span class="keyword">explicit</span> <a class="code" href="../../d9/de2/classez_list_base.htm#ac034ac8da6ee7030dbeaeb8a7a14cfaa">ezListBase</a>(<a class="code" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160; </div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;  <a class="code" href="../../d9/de2/classez_list_base.htm#ac034ac8da6ee7030dbeaeb8a7a14cfaa">ezListBase</a>(<span class="keyword">const</span> <a class="code" href="../../d9/de2/classez_list_base.htm">ezListBase&lt;T&gt;</a>&amp; cc, <a class="code" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160; </div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;  <a class="code" href="../../d9/de2/classez_list_base.htm#aec17bf34abe2b419d822a63119857fa6">~ezListBase</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160; </div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d9/de2/classez_list_base.htm#a99f182e7a2f30bad394a1329300ba86a">operator=</a>(<span class="keyword">const</span> <a class="code" href="../../d9/de2/classez_list_base.htm">ezListBase&lt;T&gt;</a>&amp; cc); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160; </div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d9/de2/classez_list_base.htm#a88540dc3b39b5c5246ddc92d5cf0d222">Clear</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160; </div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d9/de2/classez_list_base.htm#aec13b9f226c147fd81174567fb5d65b1">Compact</a>();</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160; </div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;  ezUInt32 <a class="code" href="../../d9/de2/classez_list_base.htm#ab3df221a4eb4cbecf047382a8c569252">GetCount</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160; </div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d9/de2/classez_list_base.htm#a47e76c64cd3df9c86a708f04a1255300">IsEmpty</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160; </div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  <span class="keyword">const</span> T&amp; <a class="code" href="../../d9/de2/classez_list_base.htm#a7620a1dd0124fc3c317c8ad7ab6f3fef">PeekFront</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160; </div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;  <span class="keyword">const</span> T&amp; <a class="code" href="../../d9/de2/classez_list_base.htm#a57659b6edb214201f19c180e09ced34f">PeekBack</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160; </div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;  T&amp; <a class="code" href="../../d9/de2/classez_list_base.htm#a7620a1dd0124fc3c317c8ad7ab6f3fef">PeekFront</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160; </div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;  T&amp; <a class="code" href="../../d9/de2/classez_list_base.htm#a57659b6edb214201f19c180e09ced34f">PeekBack</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160; </div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d9/de2/classez_list_base.htm#a8626ae8b9897eddc1dfbcc50e5993ad9">PushBack</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160; </div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d9/de2/classez_list_base.htm#a8626ae8b9897eddc1dfbcc50e5993ad9">PushBack</a>(<span class="keyword">const</span> T&amp; element); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160; </div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d9/de2/classez_list_base.htm#ac120cc5a85f2fd903bd8f8eb1342494b">PopBack</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160; </div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d9/de2/classez_list_base.htm#a7edbb6c71e0f94fdb6213a2d611c1e97">PushFront</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160; </div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d9/de2/classez_list_base.htm#a7edbb6c71e0f94fdb6213a2d611c1e97">PushFront</a>(<span class="keyword">const</span> T&amp; element); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160; </div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d9/de2/classez_list_base.htm#ae90387b0d7a70505ab363b0a6c36bb2d">PopFront</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160; </div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d9/de2/classez_list_base.htm#afb181ad32f614d55bfcc07ceb55f1ead">SetCount</a>(ezUInt32 uiNewSize); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160; </div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;  Iterator <a class="code" href="../../d9/de2/classez_list_base.htm#adba908dfc623bcc69252f3954b20fc6d">Insert</a>(<span class="keyword">const</span> Iterator&amp; pos, <span class="keyword">const</span> T&amp; data); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160; </div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d9/de2/classez_list_base.htm#adba908dfc623bcc69252f3954b20fc6d">Insert</a>(<span class="keyword">const</span> Iterator&amp; pos, ConstIterator first, <span class="keyword">const</span> ConstIterator&amp; last);</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160; </div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;  Iterator <a class="code" href="../../d9/de2/classez_list_base.htm#a053a2dd7c1998371b4a4acbc53319018">Remove</a>(<span class="keyword">const</span> Iterator&amp; pos); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160; </div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;  Iterator <a class="code" href="../../d9/de2/classez_list_base.htm#a053a2dd7c1998371b4a4acbc53319018">Remove</a>(Iterator first, <span class="keyword">const</span> Iterator&amp; last);</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160; </div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;  Iterator <a class="code" href="../../d9/de2/classez_list_base.htm#a02056d2bb5ca0b7e775047978cb3f58c">GetIterator</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160; </div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;  Iterator <a class="code" href="../../d9/de2/classez_list_base.htm#ae5343d31671e04ea985881031872b241">GetLastIterator</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160; </div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;  Iterator <a class="code" href="../../d9/de2/classez_list_base.htm#ad8d3acc1d809c88dd8179076fd04b631">GetEndIterator</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160; </div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;  ConstIterator <a class="code" href="../../d9/de2/classez_list_base.htm#a02056d2bb5ca0b7e775047978cb3f58c">GetIterator</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160; </div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;  ConstIterator <a class="code" href="../../d9/de2/classez_list_base.htm#ae5343d31671e04ea985881031872b241">GetLastIterator</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160; </div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;  ConstIterator <a class="code" href="../../d9/de2/classez_list_base.htm#ad8d3acc1d809c88dd8179076fd04b631">GetEndIterator</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160; </div>
<div class="line"><a name="l00206"></a><span class="lineno"><a class="line" href="../../d9/de2/classez_list_base.htm#a3260af8936887036d988e3c7732e7fe6">  206</a></span>&#160;  <a class="code" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a>* <a class="code" href="../../d9/de2/classez_list_base.htm#a3260af8936887036d988e3c7732e7fe6">GetAllocator</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_Elements.<a class="code" href="../../d7/d68/classez_deque_base.htm#a995fef1ffcc8fb253c4fc23710f4d6c2">GetAllocator</a>(); }</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160; </div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d9/de2/classez_list_base.htm#a6572698a2eb883982673c32917d0a435">operator==</a>(<span class="keyword">const</span> <a class="code" href="../../d9/de2/classez_list_base.htm">ezListBase&lt;T&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160; </div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d9/de2/classez_list_base.htm#a6a410d1480f41d065241f954081c22ec">operator!=</a>(<span class="keyword">const</span> <a class="code" href="../../d9/de2/classez_list_base.htm">ezListBase&lt;T&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160; </div>
<div class="line"><a name="l00215"></a><span class="lineno"><a class="line" href="../../d9/de2/classez_list_base.htm#a76519408f3c619040699746762203ac2">  215</a></span>&#160;  ezUInt64 <a class="code" href="../../d9/de2/classez_list_base.htm#a76519408f3c619040699746762203ac2">GetHeapMemoryUsage</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_Elements.<a class="code" href="../../d7/d68/classez_deque_base.htm#a4bb01ad03a63c829a87eef8685e4a318">GetHeapMemoryUsage</a>(); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160; </div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;  ListElementBase m_First;</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160; </div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;  ListElementBase m_Last;</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160; </div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;  <span class="comment">// \brief Small hack to get around const problems.</span></div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;  Iterator m_End;</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160; </div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;  ezUInt32 m_uiCount;</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160; </div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;  ListElement* AcquireNode(<span class="keyword">const</span> T&amp; data);</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160; </div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;  <span class="keywordtype">void</span> ReleaseNode(ListElement* pNode);</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160; </div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;  <a class="code" href="../../d9/dfe/classez_deque.htm">ezDeque&lt;ListElement, ezNullAllocatorWrapper, false&gt;</a> m_Elements;</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160; </div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;  ListElement* m_pFreeElementStack;</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;};</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160; </div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> AllocatorWrapper = ezDefaultAllocatorWrapper&gt;</div>
<div class="line"><a name="l00245"></a><span class="lineno"><a class="line" href="../../d4/d51/classez_list.htm">  245</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d4/d51/classez_list.htm">ezList</a> : <span class="keyword">public</span> <a class="code" href="../../d9/de2/classez_list_base.htm">ezListBase</a>&lt;T&gt;</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;{</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;  <a class="code" href="../../d4/d51/classez_list.htm">ezList</a>();</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;  <span class="keyword">explicit</span> <a class="code" href="../../d4/d51/classez_list.htm">ezList</a>(<a class="code" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a>* pAllocator);</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160; </div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;  <a class="code" href="../../d4/d51/classez_list.htm">ezList</a>(<span class="keyword">const</span> <a class="code" href="../../d4/d51/classez_list.htm">ezList&lt;T, AllocatorWrapper&gt;</a>&amp; other);</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;  <a class="code" href="../../d4/d51/classez_list.htm">ezList</a>(<span class="keyword">const</span> <a class="code" href="../../d9/de2/classez_list_base.htm">ezListBase&lt;T&gt;</a>&amp; other);</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160; </div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> <a class="code" href="../../d4/d51/classez_list.htm">ezList&lt;T, AllocatorWrapper&gt;</a>&amp; rhs);</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> <a class="code" href="../../d9/de2/classez_list_base.htm">ezListBase&lt;T&gt;</a>&amp; rhs);</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;};</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160; </div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="preprocessor">#include &lt;Foundation/Containers/Implementation/List_inl.h&gt;</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="astructez_list_base_1_1_iterator_htm_a8067f8ad7555dfc04873d34f868cdf17"><div class="ttname"><a href="../../db/d53/structez_list_base_1_1_iterator.htm#a8067f8ad7555dfc04873d34f868cdf17">ezListBase::Iterator::Iterator</a></div><div class="ttdeci">Iterator()</div><div class="ttdoc">Constructor.</div><div class="ttdef"><b>Definition:</b> List.h:96</div></div>
<div class="ttc" id="aclassez_list_base_htm_ac034ac8da6ee7030dbeaeb8a7a14cfaa"><div class="ttname"><a href="../../d9/de2/classez_list_base.htm#ac034ac8da6ee7030dbeaeb8a7a14cfaa">ezListBase::ezListBase</a></div><div class="ttdeci">ezListBase(ezAllocatorBase *pAllocator)</div><div class="ttdoc">Initializes the list to be empty.</div><div class="ttdef"><b>Definition:</b> List_inl.h:23</div></div>
<div class="ttc" id="aclassez_list_base_htm_a47e76c64cd3df9c86a708f04a1255300"><div class="ttname"><a href="../../d9/de2/classez_list_base.htm#a47e76c64cd3df9c86a708f04a1255300">ezListBase::IsEmpty</a></div><div class="ttdeci">bool IsEmpty() const</div><div class="ttdoc">Returns whether size == 0. O(1) operation.</div><div class="ttdef"><b>Definition:</b> List_inl.h:146</div></div>
<div class="ttc" id="aclassez_deque_htm"><div class="ttname"><a href="../../d9/dfe/classez_deque.htm">ezDeque&lt; ListElement, ezNullAllocatorWrapper, false &gt;</a></div></div>
<div class="ttc" id="aclassez_list_base_htm_a57659b6edb214201f19c180e09ced34f"><div class="ttname"><a href="../../d9/de2/classez_list_base.htm#a57659b6edb214201f19c180e09ced34f">ezListBase::PeekBack</a></div><div class="ttdeci">const T &amp; PeekBack() const</div><div class="ttdoc">Returns the very last element in the list.</div><div class="ttdef"><b>Definition:</b> List_inl.h:176</div></div>
<div class="ttc" id="aclassez_list_base_htm_aec13b9f226c147fd81174567fb5d65b1"><div class="ttname"><a href="../../d9/de2/classez_list_base.htm#aec13b9f226c147fd81174567fb5d65b1">ezListBase::Compact</a></div><div class="ttdeci">void Compact()</div><div class="ttdoc">See ezDeque::Compact()</div><div class="ttdef"><b>Definition:</b> List_inl.h:162</div></div>
<div class="ttc" id="aclassez_list_base_htm_ae5343d31671e04ea985881031872b241"><div class="ttname"><a href="../../d9/de2/classez_list_base.htm#ae5343d31671e04ea985881031872b241">ezListBase::GetLastIterator</a></div><div class="ttdeci">Iterator GetLastIterator()</div><div class="ttdoc">Returns an iterator to the last list-element. Can be used for reverse iteration.</div><div class="ttdef"><b>Definition:</b> List_inl.h:110</div></div>
<div class="ttc" id="astructez_list_base_1_1_iterator_htm_a317bbf3630b873bf847f61dcecbd0e71"><div class="ttname"><a href="../../db/d53/structez_list_base_1_1_iterator.htm#a317bbf3630b873bf847f61dcecbd0e71">ezListBase::Iterator::operator*</a></div><div class="ttdeci">T &amp; operator*()</div><div class="ttdoc">Accesses the element stored in the node.</div><div class="ttdef"><b>Definition:</b> List.h:102</div></div>
<div class="ttc" id="aclassez_list_base_htm_adba908dfc623bcc69252f3954b20fc6d"><div class="ttname"><a href="../../d9/de2/classez_list_base.htm#adba908dfc623bcc69252f3954b20fc6d">ezListBase::Insert</a></div><div class="ttdeci">Iterator Insert(const Iterator &amp;pos, const T &amp;data)</div><div class="ttdoc">Inserts one element before the position defined by the iterator.</div><div class="ttdef"><b>Definition:</b> List_inl.h:241</div></div>
<div class="ttc" id="aclassez_list_base_htm_aec17bf34abe2b419d822a63119857fa6"><div class="ttname"><a href="../../d9/de2/classez_list_base.htm#aec17bf34abe2b419d822a63119857fa6">ezListBase::~ezListBase</a></div><div class="ttdeci">~ezListBase()</div><div class="ttdoc">Destroys the list and all its content.</div><div class="ttdef"><b>Definition:</b> List_inl.h:47</div></div>
<div class="ttc" id="aclassez_list_base_htm_a99f182e7a2f30bad394a1329300ba86a"><div class="ttname"><a href="../../d9/de2/classez_list_base.htm#a99f182e7a2f30bad394a1329300ba86a">ezListBase::operator=</a></div><div class="ttdeci">void operator=(const ezListBase&lt; T &gt; &amp;cc)</div><div class="ttdoc">Copies the list cc into this list.</div><div class="ttdef"><b>Definition:</b> List_inl.h:53</div></div>
<div class="ttc" id="astructez_list_base_1_1_iterator_htm_a65e5e4d6276339e0a5067b163933182e"><div class="ttname"><a href="../../db/d53/structez_list_base_1_1_iterator.htm#a65e5e4d6276339e0a5067b163933182e">ezListBase::Iterator::operator-&gt;</a></div><div class="ttdeci">T * operator-&gt;()</div><div class="ttdoc">Accesses the element stored in the node.</div><div class="ttdef"><b>Definition:</b> List.h:105</div></div>
<div class="ttc" id="aclassez_list_htm"><div class="ttname"><a href="../../d4/d51/classez_list.htm">ezList</a></div><div class="ttdef"><b>Definition:</b> List.h:245</div></div>
<div class="ttc" id="aclassez_allocator_base_htm"><div class="ttname"><a href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a></div><div class="ttdoc">Base class for all memory allocators.</div><div class="ttdef"><b>Definition:</b> AllocatorBase.h:22</div></div>
<div class="ttc" id="aclassez_list_base_htm_a7620a1dd0124fc3c317c8ad7ab6f3fef"><div class="ttname"><a href="../../d9/de2/classez_list_base.htm#a7620a1dd0124fc3c317c8ad7ab6f3fef">ezListBase::PeekFront</a></div><div class="ttdeci">const T &amp; PeekFront() const</div><div class="ttdoc">Returns the very first element in the list.</div><div class="ttdef"><b>Definition:</b> List_inl.h:168</div></div>
<div class="ttc" id="aclassez_list_base_htm_a88540dc3b39b5c5246ddc92d5cf0d222"><div class="ttname"><a href="../../d9/de2/classez_list_base.htm#a88540dc3b39b5c5246ddc92d5cf0d222">ezListBase::Clear</a></div><div class="ttdeci">void Clear()</div><div class="ttdoc">Clears the list, afterwards it is empty.</div><div class="ttdef"><b>Definition:</b> List_inl.h:152</div></div>
<div class="ttc" id="aclassez_list_base_htm_a6a410d1480f41d065241f954081c22ec"><div class="ttname"><a href="../../d9/de2/classez_list_base.htm#a6a410d1480f41d065241f954081c22ec">ezListBase::operator!=</a></div><div class="ttdeci">bool operator!=(const ezListBase&lt; T &gt; &amp;rhs) const</div><div class="ttdoc">Comparison operator.</div><div class="ttdef"><b>Definition:</b> List_inl.h:336</div></div>
<div class="ttc" id="aclassez_list_base_htm"><div class="ttname"><a href="../../d9/de2/classez_list_base.htm">ezListBase</a></div><div class="ttdoc">A List-class, similar to STL::list.</div><div class="ttdef"><b>Definition:</b> List.h:11</div></div>
<div class="ttc" id="aclassez_list_base_htm_a76519408f3c619040699746762203ac2"><div class="ttname"><a href="../../d9/de2/classez_list_base.htm#a76519408f3c619040699746762203ac2">ezListBase::GetHeapMemoryUsage</a></div><div class="ttdeci">ezUInt64 GetHeapMemoryUsage() const</div><div class="ttdoc">Returns the amount of bytes that are currently allocated on the heap.</div><div class="ttdef"><b>Definition:</b> List.h:215</div></div>
<div class="ttc" id="aclassez_list_base_htm_a02056d2bb5ca0b7e775047978cb3f58c"><div class="ttname"><a href="../../d9/de2/classez_list_base.htm#a02056d2bb5ca0b7e775047978cb3f58c">ezListBase::GetIterator</a></div><div class="ttdeci">Iterator GetIterator()</div><div class="ttdoc">Returns an iterator to the first list-element.</div><div class="ttdef"><b>Definition:</b> List_inl.h:104</div></div>
<div class="ttc" id="astructez_list_base_1_1_iterator_htm"><div class="ttname"><a href="../../db/d53/structez_list_base_1_1_iterator.htm">ezListBase::Iterator</a></div><div class="ttdoc">A forward-iterator. Allows sequential access from front-to-back.</div><div class="ttdef"><b>Definition:</b> List.h:87</div></div>
<div class="ttc" id="aclassez_deque_base_htm_a995fef1ffcc8fb253c4fc23710f4d6c2"><div class="ttname"><a href="../../d7/d68/classez_deque_base.htm#a995fef1ffcc8fb253c4fc23710f4d6c2">ezDequeBase::GetAllocator</a></div><div class="ttdeci">ezAllocatorBase * GetAllocator() const</div><div class="ttdoc">Returns the allocator that is used by this instance.</div><div class="ttdef"><b>Definition:</b> Deque.h:167</div></div>
<div class="ttc" id="aclassez_list_base_htm_a053a2dd7c1998371b4a4acbc53319018"><div class="ttname"><a href="../../d9/de2/classez_list_base.htm#a053a2dd7c1998371b4a4acbc53319018">ezListBase::Remove</a></div><div class="ttdeci">Iterator Remove(const Iterator &amp;pos)</div><div class="ttdoc">Erases the element pointed to by the iterator.</div><div class="ttdef"><b>Definition:</b> List_inl.h:272</div></div>
<div class="ttc" id="aclassez_list_base_htm_a6572698a2eb883982673c32917d0a435"><div class="ttname"><a href="../../d9/de2/classez_list_base.htm#a6572698a2eb883982673c32917d0a435">ezListBase::operator==</a></div><div class="ttdeci">bool operator==(const ezListBase&lt; T &gt; &amp;rhs) const</div><div class="ttdoc">Comparison operator.</div><div class="ttdef"><b>Definition:</b> List_inl.h:315</div></div>
<div class="ttc" id="aclassez_list_base_htm_a8626ae8b9897eddc1dfbcc50e5993ad9"><div class="ttname"><a href="../../d9/de2/classez_list_base.htm#a8626ae8b9897eddc1dfbcc50e5993ad9">ezListBase::PushBack</a></div><div class="ttdeci">void PushBack()</div><div class="ttdoc">Appends a default-constructed element to the list.</div><div class="ttdef"><b>Definition:</b> List_inl.h:201</div></div>
<div class="ttc" id="aclassez_list_base_htm_ac120cc5a85f2fd903bd8f8eb1342494b"><div class="ttname"><a href="../../d9/de2/classez_list_base.htm#ac120cc5a85f2fd903bd8f8eb1342494b">ezListBase::PopBack</a></div><div class="ttdeci">void PopBack()</div><div class="ttdoc">Removes the very last element from the list.</div><div class="ttdef"><b>Definition:</b> List_inl.h:225</div></div>
<div class="ttc" id="aclassez_list_base_htm_ad8d3acc1d809c88dd8179076fd04b631"><div class="ttname"><a href="../../d9/de2/classez_list_base.htm#ad8d3acc1d809c88dd8179076fd04b631">ezListBase::GetEndIterator</a></div><div class="ttdeci">Iterator GetEndIterator()</div><div class="ttdoc">Returns an iterator pointing behind the last element. Necessary if one wants to insert elements at th...</div><div class="ttdef"><b>Definition:</b> List_inl.h:116</div></div>
<div class="ttc" id="aclassez_deque_base_htm_a4bb01ad03a63c829a87eef8685e4a318"><div class="ttname"><a href="../../d7/d68/classez_deque_base.htm#a4bb01ad03a63c829a87eef8685e4a318">ezDequeBase::GetHeapMemoryUsage</a></div><div class="ttdeci">ezUInt64 GetHeapMemoryUsage() const</div><div class="ttdoc">Returns the amount of bytes that are currently allocated on the heap.</div><div class="ttdef"><b>Definition:</b> Deque_inl.h:964</div></div>
<div class="ttc" id="aclassez_list_base_htm_a7edbb6c71e0f94fdb6213a2d611c1e97"><div class="ttname"><a href="../../d9/de2/classez_list_base.htm#a7edbb6c71e0f94fdb6213a2d611c1e97">ezListBase::PushFront</a></div><div class="ttdeci">void PushFront()</div><div class="ttdoc">Appends a default-constructed element to the front of the list.</div><div class="ttdef"><b>Definition:</b> List_inl.h:213</div></div>
<div class="ttc" id="aclassez_list_base_htm_afb181ad32f614d55bfcc07ceb55f1ead"><div class="ttname"><a href="../../d9/de2/classez_list_base.htm#afb181ad32f614d55bfcc07ceb55f1ead">ezListBase::SetCount</a></div><div class="ttdeci">void SetCount(ezUInt32 uiNewSize)</div><div class="ttdoc">Sets the number of elements that are in the list.</div><div class="ttdef"><b>Definition:</b> List_inl.h:305</div></div>
<div class="ttc" id="aclassez_list_base_htm_ae90387b0d7a70505ab363b0a6c36bb2d"><div class="ttname"><a href="../../d9/de2/classez_list_base.htm#ae90387b0d7a70505ab363b0a6c36bb2d">ezListBase::PopFront</a></div><div class="ttdeci">void PopFront()</div><div class="ttdoc">Removes the very first element from the list.</div><div class="ttdef"><b>Definition:</b> List_inl.h:233</div></div>
<div class="ttc" id="aclassez_list_base_htm_ab3df221a4eb4cbecf047382a8c569252"><div class="ttname"><a href="../../d9/de2/classez_list_base.htm#ab3df221a4eb4cbecf047382a8c569252">ezListBase::GetCount</a></div><div class="ttdeci">ezUInt32 GetCount() const</div><div class="ttdoc">Returns the number of elements in the list. O(1) operation.</div><div class="ttdef"><b>Definition:</b> List_inl.h:140</div></div>
<div class="ttc" id="aclassez_list_base_htm_a3260af8936887036d988e3c7732e7fe6"><div class="ttname"><a href="../../d9/de2/classez_list_base.htm#a3260af8936887036d988e3c7732e7fe6">ezListBase::GetAllocator</a></div><div class="ttdeci">ezAllocatorBase * GetAllocator() const</div><div class="ttdoc">Returns the allocator that is used by this instance.</div><div class="ttdef"><b>Definition:</b> List.h:206</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_6b567e6755824bd0b8ffd754b9d67ac0.htm">Containers</a></li><li class="navelem"><b>List.h</b></li>
    <li class="footer">Generated on Mon Oct 18 2021 15:24:09 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
