<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: ezArrayBase&lt; T, Derived &gt; Class Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 21.6</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search','.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('dc/d59/classez_array_base.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="../../d1/d8d/classez_array_base-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ezArrayBase&lt; T, Derived &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Base class for all array containers. Implements all the basic functionality that only require a pointer and the element count.  
 <a href="../../dc/d59/classez_array_base.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../dd/df5/_array_base_8h_source.htm">ArrayBase.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for ezArrayBase&lt; T, Derived &gt;:</div>
<div class="dyncontent">
<div class="center"><img src="../../d8/d14/classez_array_base__inherit__graph.png" border="0" usemap="#aez_array_base_3_01_t_00_01_derived_01_4_inherit__map" alt="Inheritance graph"/></div>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a4b8102fffbe1baa10d6890a137ea3f3a"><td class="memItemLeft" align="right" valign="top"><a id="a4b8102fffbe1baa10d6890a137ea3f3a"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>const_iterator</b> = const T *</td></tr>
<tr class="separator:a4b8102fffbe1baa10d6890a137ea3f3a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ef6d9a5139acdaac6670775720ee896"><td class="memItemLeft" align="right" valign="top"><a id="a9ef6d9a5139acdaac6670775720ee896"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>const_reverse_iterator</b> = <a class="el" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">const_reverse_pointer_iterator</a>&lt; T &gt;</td></tr>
<tr class="separator:a9ef6d9a5139acdaac6670775720ee896"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e6b03d3d096963531d9309ba5ab296b"><td class="memItemLeft" align="right" valign="top"><a id="a8e6b03d3d096963531d9309ba5ab296b"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>iterator</b> = T *</td></tr>
<tr class="separator:a8e6b03d3d096963531d9309ba5ab296b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac86e99ba04dd1a9e4d75b216ddf22d58"><td class="memItemLeft" align="right" valign="top"><a id="ac86e99ba04dd1a9e4d75b216ddf22d58"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>reverse_iterator</b> = <a class="el" href="../../d3/df2/structreverse__pointer__iterator.htm">reverse_pointer_iterator</a>&lt; T &gt;</td></tr>
<tr class="separator:ac86e99ba04dd1a9e4d75b216ddf22d58"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a0f03847a20991108666c982066d651bc"><td class="memItemLeft" align="right" valign="top"><a id="a0f03847a20991108666c982066d651bc"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d59/classez_array_base.htm#a0f03847a20991108666c982066d651bc">ezArrayBase</a> ()</td></tr>
<tr class="memdesc:a0f03847a20991108666c982066d651bc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor. <br /></td></tr>
<tr class="separator:a0f03847a20991108666c982066d651bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8001e2991c2675e975efca088795fa6a"><td class="memItemLeft" align="right" valign="top"><a id="a8001e2991c2675e975efca088795fa6a"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d59/classez_array_base.htm#a8001e2991c2675e975efca088795fa6a">~ezArrayBase</a> ()</td></tr>
<tr class="memdesc:a8001e2991c2675e975efca088795fa6a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor. <br /></td></tr>
<tr class="separator:a8001e2991c2675e975efca088795fa6a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6da9ac91524c489b32ed8e390c52b402"><td class="memItemLeft" align="right" valign="top"><a id="a6da9ac91524c489b32ed8e390c52b402"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d59/classez_array_base.htm#a6da9ac91524c489b32ed8e390c52b402">operator=</a> (const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; const T &gt; &amp;rhs)</td></tr>
<tr class="memdesc:a6da9ac91524c489b32ed8e390c52b402"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the data from some other contiguous array into this one. <br /></td></tr>
<tr class="separator:a6da9ac91524c489b32ed8e390c52b402"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f3159683169130e19c955855dd0d854"><td class="memItemLeft" align="right" valign="top"><a id="a6f3159683169130e19c955855dd0d854"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d59/classez_array_base.htm#a6f3159683169130e19c955855dd0d854">operator ezArrayPtr&lt; const T &gt;</a> () const</td></tr>
<tr class="memdesc:a6f3159683169130e19c955855dd0d854"><td class="mdescLeft">&#160;</td><td class="mdescRight">Conversion to const <a class="el" href="../../dc/dae/classez_array_ptr.htm" title="This class encapsulates an array and it&#39;s size. It is recommended to use this class instead of plain ...">ezArrayPtr</a>. <br /></td></tr>
<tr class="separator:a6f3159683169130e19c955855dd0d854"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9b31378a3f8bc9df6ad9fe4187bcef1"><td class="memItemLeft" align="right" valign="top"><a id="ab9b31378a3f8bc9df6ad9fe4187bcef1"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d59/classez_array_base.htm#ab9b31378a3f8bc9df6ad9fe4187bcef1">operator ezArrayPtr&lt; T &gt;</a> ()</td></tr>
<tr class="memdesc:ab9b31378a3f8bc9df6ad9fe4187bcef1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Conversion to <a class="el" href="../../dc/dae/classez_array_ptr.htm" title="This class encapsulates an array and it&#39;s size. It is recommended to use this class instead of plain ...">ezArrayPtr</a>. <br /></td></tr>
<tr class="separator:ab9b31378a3f8bc9df6ad9fe4187bcef1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1859a7e3f593f46b6b8873ff8c546ab"><td class="memItemLeft" align="right" valign="top"><a id="ad1859a7e3f593f46b6b8873ff8c546ab"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d59/classez_array_base.htm#ad1859a7e3f593f46b6b8873ff8c546ab">operator==</a> (const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; const T &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:ad1859a7e3f593f46b6b8873ff8c546ab"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares this array to another contiguous array type. <br /></td></tr>
<tr class="separator:ad1859a7e3f593f46b6b8873ff8c546ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a38748597d810f9982c54ee74e6913a0d"><td class="memItemLeft" align="right" valign="top"><a id="a38748597d810f9982c54ee74e6913a0d"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d59/classez_array_base.htm#a38748597d810f9982c54ee74e6913a0d">operator!=</a> (const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; const T &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:a38748597d810f9982c54ee74e6913a0d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares this array to another contiguous array type. <br /></td></tr>
<tr class="separator:a38748597d810f9982c54ee74e6913a0d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abc510e19e3e30cab9c5c7310ef5ffd68"><td class="memItemLeft" align="right" valign="top"><a id="abc510e19e3e30cab9c5c7310ef5ffd68"></a>
const T &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d59/classez_array_base.htm#abc510e19e3e30cab9c5c7310ef5ffd68">operator[]</a> (ezUInt32 uiIndex) const</td></tr>
<tr class="memdesc:abc510e19e3e30cab9c5c7310ef5ffd68"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the element at the given index. Does bounds checks in debug builds. <br /></td></tr>
<tr class="separator:abc510e19e3e30cab9c5c7310ef5ffd68"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5203f6eabcda79429422f4d1e14b7920"><td class="memItemLeft" align="right" valign="top"><a id="a5203f6eabcda79429422f4d1e14b7920"></a>
T &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d59/classez_array_base.htm#a5203f6eabcda79429422f4d1e14b7920">operator[]</a> (ezUInt32 uiIndex)</td></tr>
<tr class="memdesc:a5203f6eabcda79429422f4d1e14b7920"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the element at the given index. Does bounds checks in debug builds. <br /></td></tr>
<tr class="separator:a5203f6eabcda79429422f4d1e14b7920"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb1665da46f44fab7a676561cc1d611c"><td class="memItemLeft" align="right" valign="top"><a id="acb1665da46f44fab7a676561cc1d611c"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d59/classez_array_base.htm#acb1665da46f44fab7a676561cc1d611c">SetCount</a> (ezUInt32 uiCount)</td></tr>
<tr class="memdesc:acb1665da46f44fab7a676561cc1d611c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resizes the array to have exactly uiCount elements. Default constructs extra elements if the array is grown. <br /></td></tr>
<tr class="separator:acb1665da46f44fab7a676561cc1d611c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90d38ba98198344f380dc9f0ff1ea6cd"><td class="memItemLeft" align="right" valign="top"><a id="a90d38ba98198344f380dc9f0ff1ea6cd"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d59/classez_array_base.htm#a90d38ba98198344f380dc9f0ff1ea6cd">SetCount</a> (ezUInt32 uiCount, const T &amp;FillValue)</td></tr>
<tr class="memdesc:a90d38ba98198344f380dc9f0ff1ea6cd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resizes the array to have exactly uiCount elements. Constructs all new elements by copying the FillValue. <br /></td></tr>
<tr class="separator:a90d38ba98198344f380dc9f0ff1ea6cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa42fdcea580029c35b32658bd6d9fd50"><td class="memTemplParams" colspan="2"><a id="aa42fdcea580029c35b32658bd6d9fd50"></a>
template&lt;typename  = void&gt; </td></tr>
<tr class="memitem:aa42fdcea580029c35b32658bd6d9fd50"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../dc/d59/classez_array_base.htm#aa42fdcea580029c35b32658bd6d9fd50">SetCountUninitialized</a> (ezUInt32 uiCount)</td></tr>
<tr class="memdesc:aa42fdcea580029c35b32658bd6d9fd50"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resizes the array to have exactly uiCount elements. Extra elements might be uninitialized. <br /></td></tr>
<tr class="separator:aa42fdcea580029c35b32658bd6d9fd50"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad74465b5a0c6474b1611bbb462f635ef"><td class="memItemLeft" align="right" valign="top"><a id="ad74465b5a0c6474b1611bbb462f635ef"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d59/classez_array_base.htm#ad74465b5a0c6474b1611bbb462f635ef">EnsureCount</a> (ezUInt32 uiCount)</td></tr>
<tr class="memdesc:ad74465b5a0c6474b1611bbb462f635ef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Ensures the container has at least <em>uiCount</em> elements. Ie. calls <a class="el" href="../../dc/d59/classez_array_base.htm#acb1665da46f44fab7a676561cc1d611c" title="Resizes the array to have exactly uiCount elements. Default constructs extra elements if the array is...">SetCount()</a> if the container has fewer elements, does nothing otherwise. <br /></td></tr>
<tr class="separator:ad74465b5a0c6474b1611bbb462f635ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a51ba61fcbd2350ae8850754a41acbaa1"><td class="memItemLeft" align="right" valign="top"><a id="a51ba61fcbd2350ae8850754a41acbaa1"></a>
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d59/classez_array_base.htm#a51ba61fcbd2350ae8850754a41acbaa1">GetCount</a> () const</td></tr>
<tr class="memdesc:a51ba61fcbd2350ae8850754a41acbaa1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of active elements in the array. <br /></td></tr>
<tr class="separator:a51ba61fcbd2350ae8850754a41acbaa1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35630a870ec53cf3b022653232a31c60"><td class="memItemLeft" align="right" valign="top"><a id="a35630a870ec53cf3b022653232a31c60"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d59/classez_array_base.htm#a35630a870ec53cf3b022653232a31c60">IsEmpty</a> () const</td></tr>
<tr class="memdesc:a35630a870ec53cf3b022653232a31c60"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if the array does not contain any elements. <br /></td></tr>
<tr class="separator:a35630a870ec53cf3b022653232a31c60"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74099c2d7681df345aedf8cfe24f0bc4"><td class="memItemLeft" align="right" valign="top"><a id="a74099c2d7681df345aedf8cfe24f0bc4"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d59/classez_array_base.htm#a74099c2d7681df345aedf8cfe24f0bc4">Clear</a> ()</td></tr>
<tr class="memdesc:a74099c2d7681df345aedf8cfe24f0bc4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears the array. <br /></td></tr>
<tr class="separator:a74099c2d7681df345aedf8cfe24f0bc4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a78392f27dfa795763aebdb43e4a75289"><td class="memItemLeft" align="right" valign="top"><a id="a78392f27dfa795763aebdb43e4a75289"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d59/classez_array_base.htm#a78392f27dfa795763aebdb43e4a75289">Contains</a> (const T &amp;value) const</td></tr>
<tr class="memdesc:a78392f27dfa795763aebdb43e4a75289"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether the given value can be found in the array. O(n) complexity. <br /></td></tr>
<tr class="separator:a78392f27dfa795763aebdb43e4a75289"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab5a80cbcab233ea8ad8de5c99783ce68"><td class="memItemLeft" align="right" valign="top"><a id="ab5a80cbcab233ea8ad8de5c99783ce68"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d59/classez_array_base.htm#ab5a80cbcab233ea8ad8de5c99783ce68">Insert</a> (const T &amp;value, ezUInt32 uiIndex)</td></tr>
<tr class="memdesc:ab5a80cbcab233ea8ad8de5c99783ce68"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inserts value at index by shifting all following elements. <br /></td></tr>
<tr class="separator:ab5a80cbcab233ea8ad8de5c99783ce68"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af18f7e2130d4dd921d0978827e35a6c2"><td class="memItemLeft" align="right" valign="top"><a id="af18f7e2130d4dd921d0978827e35a6c2"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d59/classez_array_base.htm#af18f7e2130d4dd921d0978827e35a6c2">Insert</a> (T &amp;&amp;value, ezUInt32 uiIndex)</td></tr>
<tr class="memdesc:af18f7e2130d4dd921d0978827e35a6c2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inserts value at index by shifting all following elements. <br /></td></tr>
<tr class="separator:af18f7e2130d4dd921d0978827e35a6c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af19f26ca6dc39c04caad024913a2f2ec"><td class="memItemLeft" align="right" valign="top"><a id="af19f26ca6dc39c04caad024913a2f2ec"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d59/classez_array_base.htm#af19f26ca6dc39c04caad024913a2f2ec">RemoveAndCopy</a> (const T &amp;value)</td></tr>
<tr class="memdesc:af19f26ca6dc39c04caad024913a2f2ec"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes the first occurrence of value and fills the gap by shifting all following elements. <br /></td></tr>
<tr class="separator:af19f26ca6dc39c04caad024913a2f2ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aacea05b6f0ec519a663156dd0cc82309"><td class="memItemLeft" align="right" valign="top"><a id="aacea05b6f0ec519a663156dd0cc82309"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d59/classez_array_base.htm#aacea05b6f0ec519a663156dd0cc82309">RemoveAndSwap</a> (const T &amp;value)</td></tr>
<tr class="memdesc:aacea05b6f0ec519a663156dd0cc82309"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes the first occurrence of value and fills the gap by swapping in the last element. <br /></td></tr>
<tr class="separator:aacea05b6f0ec519a663156dd0cc82309"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29dfedb3f609d9a698f9becb213b697c"><td class="memItemLeft" align="right" valign="top"><a id="a29dfedb3f609d9a698f9becb213b697c"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d59/classez_array_base.htm#a29dfedb3f609d9a698f9becb213b697c">RemoveAtAndCopy</a> (ezUInt32 uiIndex, ezUInt32 uiNumElements=1)</td></tr>
<tr class="memdesc:a29dfedb3f609d9a698f9becb213b697c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes the element at index and fills the gap by shifting all following elements. <br /></td></tr>
<tr class="separator:a29dfedb3f609d9a698f9becb213b697c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae29e85a3ce212cb78d31d032b4225f28"><td class="memItemLeft" align="right" valign="top"><a id="ae29e85a3ce212cb78d31d032b4225f28"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d59/classez_array_base.htm#ae29e85a3ce212cb78d31d032b4225f28">RemoveAtAndSwap</a> (ezUInt32 uiIndex, ezUInt32 uiNumElements=1)</td></tr>
<tr class="memdesc:ae29e85a3ce212cb78d31d032b4225f28"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes the element at index and fills the gap by swapping in the last element. <br /></td></tr>
<tr class="separator:ae29e85a3ce212cb78d31d032b4225f28"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad0b2297aad995f6b5b6c83318f1deec4"><td class="memItemLeft" align="right" valign="top"><a id="ad0b2297aad995f6b5b6c83318f1deec4"></a>
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d59/classez_array_base.htm#ad0b2297aad995f6b5b6c83318f1deec4">IndexOf</a> (const T &amp;value, ezUInt32 uiStartIndex=0) const</td></tr>
<tr class="memdesc:ad0b2297aad995f6b5b6c83318f1deec4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Searches for the first occurrence of the given value and returns its index or ezInvalidIndex if not found. <br /></td></tr>
<tr class="separator:ad0b2297aad995f6b5b6c83318f1deec4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a394c5310d1f8bc5907014761f72a4884"><td class="memItemLeft" align="right" valign="top"><a id="a394c5310d1f8bc5907014761f72a4884"></a>
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d59/classez_array_base.htm#a394c5310d1f8bc5907014761f72a4884">LastIndexOf</a> (const T &amp;value, ezUInt32 uiStartIndex=ezInvalidIndex) const</td></tr>
<tr class="memdesc:a394c5310d1f8bc5907014761f72a4884"><td class="mdescLeft">&#160;</td><td class="mdescRight">Searches for the last occurrence of the given value and returns its index or ezInvalidIndex if not found. <br /></td></tr>
<tr class="separator:a394c5310d1f8bc5907014761f72a4884"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f0562f5239ac1e43a81764086de2e25"><td class="memItemLeft" align="right" valign="top"><a id="a0f0562f5239ac1e43a81764086de2e25"></a>
T &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d59/classez_array_base.htm#a0f0562f5239ac1e43a81764086de2e25">ExpandAndGetRef</a> ()</td></tr>
<tr class="memdesc:a0f0562f5239ac1e43a81764086de2e25"><td class="mdescLeft">&#160;</td><td class="mdescRight">Grows the array by one element and returns a reference to the newly created element. <br /></td></tr>
<tr class="separator:a0f0562f5239ac1e43a81764086de2e25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abc514bdf8b2de7b5b220ffdbd862e830"><td class="memItemLeft" align="right" valign="top"><a id="abc514bdf8b2de7b5b220ffdbd862e830"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d59/classez_array_base.htm#abc514bdf8b2de7b5b220ffdbd862e830">PushBack</a> (const T &amp;value)</td></tr>
<tr class="memdesc:abc514bdf8b2de7b5b220ffdbd862e830"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pushes value at the end of the array. <br /></td></tr>
<tr class="separator:abc514bdf8b2de7b5b220ffdbd862e830"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90fe79a4a545a67e31bf047bef3e5371"><td class="memItemLeft" align="right" valign="top"><a id="a90fe79a4a545a67e31bf047bef3e5371"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d59/classez_array_base.htm#a90fe79a4a545a67e31bf047bef3e5371">PushBack</a> (T &amp;&amp;value)</td></tr>
<tr class="memdesc:a90fe79a4a545a67e31bf047bef3e5371"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pushes value at the end of the array. <br /></td></tr>
<tr class="separator:a90fe79a4a545a67e31bf047bef3e5371"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6db54827aba606bd753936dd0becbd54"><td class="memItemLeft" align="right" valign="top"><a id="a6db54827aba606bd753936dd0becbd54"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d59/classez_array_base.htm#a6db54827aba606bd753936dd0becbd54">PushBackUnchecked</a> (const T &amp;value)</td></tr>
<tr class="memdesc:a6db54827aba606bd753936dd0becbd54"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pushes value at the end of the array. Does NOT ensure capacity. <br /></td></tr>
<tr class="separator:a6db54827aba606bd753936dd0becbd54"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5bd43f6f7c9946b6b1a936b1381374bb"><td class="memItemLeft" align="right" valign="top"><a id="a5bd43f6f7c9946b6b1a936b1381374bb"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d59/classez_array_base.htm#a5bd43f6f7c9946b6b1a936b1381374bb">PushBackUnchecked</a> (T &amp;&amp;value)</td></tr>
<tr class="memdesc:a5bd43f6f7c9946b6b1a936b1381374bb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pushes value at the end of the array. Does NOT ensure capacity. <br /></td></tr>
<tr class="separator:a5bd43f6f7c9946b6b1a936b1381374bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6223c492c021ef85253fb486dfd6434"><td class="memItemLeft" align="right" valign="top"><a id="ac6223c492c021ef85253fb486dfd6434"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d59/classez_array_base.htm#ac6223c492c021ef85253fb486dfd6434">PushBackRange</a> (const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; const T &gt; &amp;range)</td></tr>
<tr class="memdesc:ac6223c492c021ef85253fb486dfd6434"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pushes all elements in range at the end of the array. Increases the capacity if necessary. <br /></td></tr>
<tr class="separator:ac6223c492c021ef85253fb486dfd6434"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa48856c14d2870761e22ac1e000c32fd"><td class="memItemLeft" align="right" valign="top"><a id="aa48856c14d2870761e22ac1e000c32fd"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d59/classez_array_base.htm#aa48856c14d2870761e22ac1e000c32fd">PopBack</a> (ezUInt32 uiCountToRemove=1)</td></tr>
<tr class="memdesc:aa48856c14d2870761e22ac1e000c32fd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes count elements from the end of the array. <br /></td></tr>
<tr class="separator:aa48856c14d2870761e22ac1e000c32fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5b5afca8aa70c69f07360eecd7171bc"><td class="memItemLeft" align="right" valign="top"><a id="ae5b5afca8aa70c69f07360eecd7171bc"></a>
T &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d59/classez_array_base.htm#ae5b5afca8aa70c69f07360eecd7171bc">PeekBack</a> ()</td></tr>
<tr class="memdesc:ae5b5afca8aa70c69f07360eecd7171bc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the last element of the array. <br /></td></tr>
<tr class="separator:ae5b5afca8aa70c69f07360eecd7171bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3eb031c276e814889dce6b7bd5e398ff"><td class="memItemLeft" align="right" valign="top"><a id="a3eb031c276e814889dce6b7bd5e398ff"></a>
const T &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d59/classez_array_base.htm#a3eb031c276e814889dce6b7bd5e398ff">PeekBack</a> () const</td></tr>
<tr class="memdesc:a3eb031c276e814889dce6b7bd5e398ff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the last element of the array. <br /></td></tr>
<tr class="separator:a3eb031c276e814889dce6b7bd5e398ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a318047b04f505092c25d6c115ec5f72c"><td class="memTemplParams" colspan="2"><a id="a318047b04f505092c25d6c115ec5f72c"></a>
template&lt;typename Comparer &gt; </td></tr>
<tr class="memitem:a318047b04f505092c25d6c115ec5f72c"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../dc/d59/classez_array_base.htm#a318047b04f505092c25d6c115ec5f72c">Sort</a> (const Comparer &amp;comparer)</td></tr>
<tr class="memdesc:a318047b04f505092c25d6c115ec5f72c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sort with explicit comparer. <br /></td></tr>
<tr class="separator:a318047b04f505092c25d6c115ec5f72c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae111f173c0e5c067d7b5fae92e755c25"><td class="memItemLeft" align="right" valign="top"><a id="ae111f173c0e5c067d7b5fae92e755c25"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d59/classez_array_base.htm#ae111f173c0e5c067d7b5fae92e755c25">Sort</a> ()</td></tr>
<tr class="memdesc:ae111f173c0e5c067d7b5fae92e755c25"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sort with default comparer. <br /></td></tr>
<tr class="separator:ae111f173c0e5c067d7b5fae92e755c25"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a170f421d9abdce1695e55b84212c59b0"><td class="memItemLeft" align="right" valign="top"><a id="a170f421d9abdce1695e55b84212c59b0"></a>
T *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d59/classez_array_base.htm#a170f421d9abdce1695e55b84212c59b0">GetData</a> ()</td></tr>
<tr class="memdesc:a170f421d9abdce1695e55b84212c59b0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a pointer to the array data, or nullptr if the array is empty. <br /></td></tr>
<tr class="separator:a170f421d9abdce1695e55b84212c59b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2501c98f4cb3feeb4c0dbb688977274"><td class="memItemLeft" align="right" valign="top"><a id="ac2501c98f4cb3feeb4c0dbb688977274"></a>
const T *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d59/classez_array_base.htm#ac2501c98f4cb3feeb4c0dbb688977274">GetData</a> () const</td></tr>
<tr class="memdesc:ac2501c98f4cb3feeb4c0dbb688977274"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a pointer to the array data, or nullptr if the array is empty. <br /></td></tr>
<tr class="separator:ac2501c98f4cb3feeb4c0dbb688977274"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad668df6ff81bdcac0bc118666d5817cf"><td class="memItemLeft" align="right" valign="top"><a id="ad668df6ff81bdcac0bc118666d5817cf"></a>
<a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; T &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d59/classez_array_base.htm#ad668df6ff81bdcac0bc118666d5817cf">GetArrayPtr</a> ()</td></tr>
<tr class="memdesc:ad668df6ff81bdcac0bc118666d5817cf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an array pointer to the array data, or an empty array pointer if the array is empty. <br /></td></tr>
<tr class="separator:ad668df6ff81bdcac0bc118666d5817cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af264c6192b46155871e4c5e85c9c1114"><td class="memItemLeft" align="right" valign="top"><a id="af264c6192b46155871e4c5e85c9c1114"></a>
<a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; const T &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d59/classez_array_base.htm#af264c6192b46155871e4c5e85c9c1114">GetArrayPtr</a> () const</td></tr>
<tr class="memdesc:af264c6192b46155871e4c5e85c9c1114"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an array pointer to the array data, or an empty array pointer if the array is empty. <br /></td></tr>
<tr class="separator:af264c6192b46155871e4c5e85c9c1114"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a05b276d26b66885700fc8f36dd8efc50"><td class="memItemLeft" align="right" valign="top"><a id="a05b276d26b66885700fc8f36dd8efc50"></a>
<a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; typename <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; T &gt;::ByteType &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d59/classez_array_base.htm#a05b276d26b66885700fc8f36dd8efc50">GetByteArrayPtr</a> ()</td></tr>
<tr class="memdesc:a05b276d26b66885700fc8f36dd8efc50"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a byte array pointer to the array data, or an empty array pointer if the array is empty. <br /></td></tr>
<tr class="separator:a05b276d26b66885700fc8f36dd8efc50"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a88dd290606aab5e0382d469241ab0c17"><td class="memItemLeft" align="right" valign="top"><a id="a88dd290606aab5e0382d469241ab0c17"></a>
<a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; typename <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; const T &gt;::ByteType &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d59/classez_array_base.htm#a88dd290606aab5e0382d469241ab0c17">GetByteArrayPtr</a> () const</td></tr>
<tr class="memdesc:a88dd290606aab5e0382d469241ab0c17"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a byte array pointer to the array data, or an empty array pointer if the array is empty. <br /></td></tr>
<tr class="separator:a88dd290606aab5e0382d469241ab0c17"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0dae037b4e2abdb7e7376776d2144851"><td class="memItemLeft" align="right" valign="top"><a id="a0dae037b4e2abdb7e7376776d2144851"></a>
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d59/classez_array_base.htm#a0dae037b4e2abdb7e7376776d2144851">GetCapacity</a> () const</td></tr>
<tr class="memdesc:a0dae037b4e2abdb7e7376776d2144851"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the reserved number of elements that the array can hold without reallocating. <br /></td></tr>
<tr class="separator:a0dae037b4e2abdb7e7376776d2144851"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a13b030bd72634b97cd7a42bb1a6c2a09"><td class="memItemLeft" align="right" valign="top"><a id="a13b030bd72634b97cd7a42bb1a6c2a09"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>DoSwap</b> (<a class="el" href="../../dc/d59/classez_array_base.htm">ezArrayBase</a>&lt; T, Derived &gt; &amp;other)</td></tr>
<tr class="separator:a13b030bd72634b97cd7a42bb1a6c2a09"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a11fdadf058dc71d62867f690b832f5f2"><td class="memItemLeft" align="right" valign="top"><a id="a11fdadf058dc71d62867f690b832f5f2"></a>
T *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d59/classez_array_base.htm#a11fdadf058dc71d62867f690b832f5f2">m_pElements</a> = nullptr</td></tr>
<tr class="memdesc:a11fdadf058dc71d62867f690b832f5f2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Element-type access to m_Data. <br /></td></tr>
<tr class="separator:a11fdadf058dc71d62867f690b832f5f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d6fd346fa2effc9fe7a5617f616ac82"><td class="memItemLeft" align="right" valign="top"><a id="a1d6fd346fa2effc9fe7a5617f616ac82"></a>
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d59/classez_array_base.htm#a1d6fd346fa2effc9fe7a5617f616ac82">m_uiCount</a> = 0</td></tr>
<tr class="memdesc:a1d6fd346fa2effc9fe7a5617f616ac82"><td class="mdescLeft">&#160;</td><td class="mdescRight">The number of elements used from the array. <br /></td></tr>
<tr class="separator:a1d6fd346fa2effc9fe7a5617f616ac82"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab4e32e79a0c17b99c3555d6ae8d0542"><td class="memItemLeft" align="right" valign="top"><a id="aab4e32e79a0c17b99c3555d6ae8d0542"></a>
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d59/classez_array_base.htm#aab4e32e79a0c17b99c3555d6ae8d0542">m_uiCapacity</a> = 0</td></tr>
<tr class="memdesc:aab4e32e79a0c17b99c3555d6ae8d0542"><td class="mdescLeft">&#160;</td><td class="mdescRight">The number of elements which can be stored in the array without re-allocating. <br /></td></tr>
<tr class="separator:aab4e32e79a0c17b99c3555d6ae8d0542"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename T, typename Derived&gt;<br />
class ezArrayBase&lt; T, Derived &gt;</h3>

<p>Base class for all array containers. Implements all the basic functionality that only require a pointer and the element count. </p>
</div><hr/>The documentation for this class was generated from the following files:<ul>
<li>Code/Engine/Foundation/Containers/<a class="el" href="../../dd/df5/_array_base_8h_source.htm">ArrayBase.h</a></li>
<li>Code/Engine/Foundation/Containers/Implementation/<a class="el" href="../../d0/d5a/_array_base__inl_8h_source.htm">ArrayBase_inl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dc/d59/classez_array_base.htm">ezArrayBase</a></li>
    <li class="footer">Generated on Tue Jun 8 2021 14:34:00 for ezEngine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1 </li>
  </ul>
</div>
</body>
</html>
