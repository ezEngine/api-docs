<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Types/Types.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">ezEngine<span id="projectnumber">&#160;Release 25.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function() { init_codefold(1); });
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('dc/d8c/_foundation_2_types_2_types_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">Types.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="comment">// ***** Definition of types *****</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span> </div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="preprocessor">#include &lt;cstdint&gt;</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span> </div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="keyword">using </span>ezUInt8 = uint8_t;</div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="keyword">using </span>ezUInt16 = uint16_t;</div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="keyword">using </span>ezUInt32 = uint32_t;</div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="keyword">using </span>ezUInt64 = <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> long;</div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span> </div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span><span class="keyword">using </span>ezInt8 = int8_t;</div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span><span class="keyword">using </span>ezInt16 = int16_t;</div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span><span class="keyword">using </span>ezInt32 = int32_t;</div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span><span class="keyword">using </span>ezInt64 = <span class="keywordtype">long</span> long;</div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span> </div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span><span class="comment">// no float-types, since those are well portable</span></div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span> </div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span><span class="comment">// Do some compile-time checks on the types</span></div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span><span class="keyword">static_assert</span>(<span class="keyword">sizeof</span>(bool) == 1);</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span><span class="keyword">static_assert</span>(<span class="keyword">sizeof</span>(char) == 1);</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span><span class="keyword">static_assert</span>(<span class="keyword">sizeof</span>(float) == 4);</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span><span class="keyword">static_assert</span>(<span class="keyword">sizeof</span>(double) == 8);</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span><span class="keyword">static_assert</span>(<span class="keyword">sizeof</span>(ezInt8) == 1);</div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span><span class="keyword">static_assert</span>(<span class="keyword">sizeof</span>(ezInt16) == 2);</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span><span class="keyword">static_assert</span>(<span class="keyword">sizeof</span>(ezInt32) == 4);</div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span><span class="keyword">static_assert</span>(<span class="keyword">sizeof</span>(ezInt64) == 8); <span class="comment">// must be defined in the specific compiler header</span></div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span><span class="keyword">static_assert</span>(<span class="keyword">sizeof</span>(ezUInt8) == 1);</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span><span class="keyword">static_assert</span>(<span class="keyword">sizeof</span>(ezUInt16) == 2);</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span><span class="keyword">static_assert</span>(<span class="keyword">sizeof</span>(ezUInt32) == 4);</div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span><span class="keyword">static_assert</span>(<span class="keyword">sizeof</span>(ezUInt64) == 8); <span class="comment">// must be defined in the specific compiler header</span></div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span><span class="keyword">static_assert</span>(<span class="keyword">sizeof</span>(<span class="keywordtype">long</span> <span class="keywordtype">long</span> int) == 8);</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span> </div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span><span class="preprocessor">#if EZ_ENABLED(EZ_PLATFORM_64BIT)</span></div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span><span class="preprocessor">#  define EZ_ALIGNMENT_MINIMUM 8</span></div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span><span class="preprocessor">#elif EZ_ENABLED(EZ_PLATFORM_32BIT)</span></div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span><span class="preprocessor">#  define EZ_ALIGNMENT_MINIMUM 4</span></div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span><span class="preprocessor">#else</span></div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span><span class="preprocessor">#  error &quot;Unknown pointer size.&quot;</span></div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span> </div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span><span class="keyword">static_assert</span>(<span class="keyword">sizeof</span>(<span class="keywordtype">void</span>*) == EZ_ALIGNMENT_MINIMUM);</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span><span class="keyword">static_assert</span>(<span class="keyword">alignof</span>(<span class="keywordtype">void</span>*) == EZ_ALIGNMENT_MINIMUM);</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span> </div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span><span class="keyword">enum</span> ezResultEnum</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span>{</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>  EZ_FAILURE,</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span>  EZ_SUCCESS</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span>};</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span> </div>
<div class="foldopen" id="foldopen00053" data-start="{" data-end="};">
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno"><a class="line" href="../../d4/da9/structez_result.htm">   53</a></span><span class="keyword">struct </span>[[nodiscard]] EZ_FOUNDATION_DLL <a class="code hl_struct" href="../../d4/da9/structez_result.htm">ezResult</a></div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>{</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>  <a class="code hl_struct" href="../../d4/da9/structez_result.htm">ezResult</a>(ezResultEnum res)</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>    : m_E(res)</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>  {</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>  }</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span> </div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>  <span class="keywordtype">void</span> operator=(ezResultEnum rhs) { m_E = rhs; }</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>  <span class="keywordtype">bool</span> operator==(ezResultEnum cmp)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_E == cmp; }</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>  <span class="keywordtype">bool</span> operator!=(ezResultEnum cmp)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_E != cmp; }</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span> </div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>  [[nodiscard]] EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> Succeeded()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_E == EZ_SUCCESS; }</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span>  [[nodiscard]] EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> Failed()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_E == EZ_FAILURE; }</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span> </div>
<div class="foldopen" id="foldopen00069" data-start="{" data-end="}">
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno"><a class="line" href="../../d4/da9/structez_result.htm#acb0bb72646ee6d5966edd5b4108fb670">   69</a></span>  EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../d4/da9/structez_result.htm#acb0bb72646ee6d5966edd5b4108fb670">IgnoreResult</a>()</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>  {</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>    <span class="comment">/* dummy to be called when a return value is [[nodiscard]] but the result is not needed */</span></div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>  }</div>
</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span> </div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>  <span class="keywordtype">void</span> AssertSuccess(<span class="keyword">const</span> <span class="keywordtype">char</span>* szMsg = <span class="keyword">nullptr</span>, <span class="keyword">const</span> <span class="keywordtype">char</span>* szDetails = <span class="keyword">nullptr</span>) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span> </div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>  ezResultEnum m_E;</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>};</div>
</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span> </div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>EZ_ALWAYS_INLINE <a class="code hl_struct" href="../../d4/da9/structez_result.htm">ezResult</a> ezToResult(<a class="code hl_struct" href="../../d4/da9/structez_result.htm">ezResult</a> result)</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>{</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>  <span class="keywordflow">return</span> result;</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>}</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span> </div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span><span class="preprocessor">#define EZ_SUCCEED_OR_RETURN(code) \</span></div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span><span class="preprocessor">  do                               \</span></div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span><span class="preprocessor">  {                                \</span></div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span><span class="preprocessor">    auto s = (code);               \</span></div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span><span class="preprocessor">    if (ezToResult(s).Failed())    \</span></div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span><span class="preprocessor">      return s;                    \</span></div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span><span class="preprocessor">  } while (false)</span></div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span> </div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span><span class="preprocessor">#define EZ_SUCCEED_OR_RETURN_LOG(code)                                       \</span></div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span><span class="preprocessor">  do                                                                         \</span></div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span><span class="preprocessor">  {                                                                          \</span></div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span><span class="preprocessor">    auto s = (code);                                                         \</span></div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span><span class="preprocessor">    if (ezToResult(s).Failed())                                              \</span></div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span><span class="preprocessor">    {                                                                        \</span></div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span><span class="preprocessor">      ezLog::Error(&quot;Call &#39;{0}&#39; failed with: {1}&quot;, EZ_PP_STRINGIFY(code), s); \</span></div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span><span class="preprocessor">      return s;                                                              \</span></div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span><span class="preprocessor">    }                                                                        \</span></div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span><span class="preprocessor">  } while (false)</span></div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span> </div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span><span class="preprocessor">#define EZ_SUCCEED_OR_RETURN_CUSTOM_LOG(code, log)                             \</span></div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span><span class="preprocessor">  do                                                                           \</span></div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span><span class="preprocessor">  {                                                                            \</span></div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span><span class="preprocessor">    auto s = (code);                                                           \</span></div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span><span class="preprocessor">    if (ezToResult(s).Failed())                                                \</span></div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span><span class="preprocessor">    {                                                                          \</span></div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span><span class="preprocessor">      ezLog::Error(&quot;Call &#39;{0}&#39; failed with: {1}&quot;, EZ_PP_STRINGIFY(code), log); \</span></div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span><span class="preprocessor">      return s;                                                                \</span></div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span><span class="preprocessor">    }                                                                          \</span></div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span><span class="preprocessor">  } while (false)</span></div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span> </div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span> </div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span><span class="keyword">class </span><a class="code hl_class" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>;</div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span><span class="keyword">class </span><a class="code hl_class" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a>;</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span> </div>
<div class="foldopen" id="foldopen00132" data-start="{" data-end="};">
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno"><a class="line" href="../../d4/d02/classez_no_base.htm">  132</a></span><span class="keyword">class </span><a class="code hl_class" href="../../d4/d02/classez_no_base.htm">ezNoBase</a></div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span>{</div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span>  <span class="keyword">static</span> <span class="keyword">const</span> <a class="code hl_class" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* GetStaticRTTI() { <span class="keywordflow">return</span> <span class="keyword">nullptr</span>; }</div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span>};</div>
</div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span> </div>
<div class="foldopen" id="foldopen00139" data-start="{" data-end="};">
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno"><a class="line" href="../../df/d46/classez_enum_base.htm">  139</a></span><span class="keyword">class </span><a class="code hl_class" href="../../df/d46/classez_enum_base.htm">ezEnumBase</a></div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>{</div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span>};</div>
</div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span> </div>
<div class="foldopen" id="foldopen00144" data-start="{" data-end="};">
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno"><a class="line" href="../../da/d2b/classez_bitflags_base.htm">  144</a></span><span class="keyword">class </span><a class="code hl_class" href="../../da/d2b/classez_bitflags_base.htm">ezBitflagsBase</a></div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span>{</div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span>};</div>
</div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span> </div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span><span class="keyword">template</span> &lt;<span class="keywordtype">size_t</span> SizeInByte&gt;</div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno"><a class="line" href="../../d6/da6/structez_size_to_type.htm">  150</a></span><span class="keyword">struct </span><a class="code hl_struct" href="../../d6/da6/structez_size_to_type.htm">ezSizeToType</a>;</div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span><span class="keyword">template</span> &lt;&gt;</div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span><span class="keyword">struct </span><a class="code hl_struct" href="../../d6/da6/structez_size_to_type.htm">ezSizeToType</a>&lt;1&gt;</div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span>{</div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span>  <span class="keyword">using </span>Type = ezUInt8;</div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span>};</div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span><span class="keyword">template</span> &lt;&gt;</div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span><span class="keyword">struct </span><a class="code hl_struct" href="../../d6/da6/structez_size_to_type.htm">ezSizeToType</a>&lt;2&gt;</div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span>{</div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span>  <span class="keyword">using </span>Type = ezUInt16;</div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span>};</div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span><span class="keyword">template</span> &lt;&gt;</div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span><span class="keyword">struct </span><a class="code hl_struct" href="../../d6/da6/structez_size_to_type.htm">ezSizeToType</a>&lt;3&gt;</div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span>{</div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span>  <span class="keyword">using </span>Type = ezUInt32;</div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span>};</div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span><span class="keyword">template</span> &lt;&gt;</div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span><span class="keyword">struct </span><a class="code hl_struct" href="../../d6/da6/structez_size_to_type.htm">ezSizeToType</a>&lt;4&gt;</div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span>{</div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span>  <span class="keyword">using </span>Type = ezUInt32;</div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span>};</div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span><span class="keyword">template</span> &lt;&gt;</div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span><span class="keyword">struct </span><a class="code hl_struct" href="../../d6/da6/structez_size_to_type.htm">ezSizeToType</a>&lt;5&gt;</div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span>{</div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span>  <span class="keyword">using </span>Type = ezUInt64;</div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span>};</div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span><span class="keyword">template</span> &lt;&gt;</div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span><span class="keyword">struct </span><a class="code hl_struct" href="../../d6/da6/structez_size_to_type.htm">ezSizeToType</a>&lt;6&gt;</div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span>{</div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span>  <span class="keyword">using </span>Type = ezUInt64;</div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span>};</div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span><span class="keyword">template</span> &lt;&gt;</div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno">  183</span><span class="keyword">struct </span><a class="code hl_struct" href="../../d6/da6/structez_size_to_type.htm">ezSizeToType</a>&lt;7&gt;</div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span>{</div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span>  <span class="keyword">using </span>Type = ezUInt64;</div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span>};</div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span><span class="keyword">template</span> &lt;&gt;</div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span><span class="keyword">struct </span><a class="code hl_struct" href="../../d6/da6/structez_size_to_type.htm">ezSizeToType</a>&lt;8&gt;</div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span>{</div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span>  <span class="keyword">using </span>Type = ezUInt64;</div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span>};</div>
<div class="ttc" id="aclassez_allocator_htm"><div class="ttname"><a href="../../d0/dbb/classez_allocator.htm">ezAllocator</a></div><div class="ttdoc">Base class for all memory allocators.</div><div class="ttdef"><b>Definition</b> Allocator.h:23</div></div>
<div class="ttc" id="aclassez_bitflags_base_htm"><div class="ttname"><a href="../../da/d2b/classez_bitflags_base.htm">ezBitflagsBase</a></div><div class="ttdoc">Dummy type to pass to templates and macros that expect a base type for an bitflags class.</div><div class="ttdef"><b>Definition</b> Types.h:145</div></div>
<div class="ttc" id="aclassez_enum_base_htm"><div class="ttname"><a href="../../df/d46/classez_enum_base.htm">ezEnumBase</a></div><div class="ttdoc">Dummy type to pass to templates and macros that expect a base type for an enum class.</div><div class="ttdef"><b>Definition</b> Types.h:140</div></div>
<div class="ttc" id="aclassez_no_base_htm"><div class="ttname"><a href="../../d4/d02/classez_no_base.htm">ezNoBase</a></div><div class="ttdoc">Dummy type to pass to templates and macros that expect a base type for a class that has no base.</div><div class="ttdef"><b>Definition</b> Types.h:133</div></div>
<div class="ttc" id="aclassez_r_t_t_i_htm"><div class="ttname"><a href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a></div><div class="ttdoc">This class holds information about reflected types. Each instance represents one type that is known t...</div><div class="ttdef"><b>Definition</b> RTTI.h:30</div></div>
<div class="ttc" id="astructez_result_htm"><div class="ttname"><a href="../../d4/da9/structez_result.htm">ezResult</a></div><div class="ttdoc">Default enum for returning failure or success, instead of using a bool.</div><div class="ttdef"><b>Definition</b> Types.h:54</div></div>
<div class="ttc" id="astructez_result_htm_acb0bb72646ee6d5966edd5b4108fb670"><div class="ttname"><a href="../../d4/da9/structez_result.htm#acb0bb72646ee6d5966edd5b4108fb670">ezResult::IgnoreResult</a></div><div class="ttdeci">EZ_ALWAYS_INLINE void IgnoreResult()</div><div class="ttdoc">Used to silence compiler warnings, when success or failure doesn't matter.</div><div class="ttdef"><b>Definition</b> Types.h:69</div></div>
<div class="ttc" id="astructez_size_to_type_htm"><div class="ttname"><a href="../../d6/da6/structez_size_to_type.htm">ezSizeToType</a></div><div class="ttdoc">Helper struct to get a storage type from a size in byte.</div><div class="ttdef"><b>Definition</b> Types.h:150</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_f95f7c440efc771b227d40e9293549bd.htm">Types</a></li><li class="navelem"><b>Types.h</b></li>
    <li class="footer">Generated on Fri Jul 11 2025 12:17:56 for ezEngine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
