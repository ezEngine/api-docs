<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Containers/Set.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">ezEngine<span id="projectnumber">&#160;Release 25.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function() { init_codefold(1); });
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('dc/d09/_set_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">Set.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="preprocessor">#include &lt;Foundation/Containers/Deque.h&gt;</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span> </div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> KeyType, <span class="keyword">typename</span> Comparer&gt;</div>
<div class="foldopen" id="foldopen00012" data-start="{" data-end="};">
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno"><a class="line" href="../../dc/d4b/classez_set_base.htm">   12</a></span><span class="keyword">class </span><a class="code hl_class" href="../../dc/d4b/classez_set_base.htm">ezSetBase</a></div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span>{</div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span>  <span class="keyword">struct </span>Node;</div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span> </div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span>  <span class="keyword">struct </span>NilNode</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span>  {</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span>    ezUInt16 m_uiLevel = 0;</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span>    Node* m_pParent = <span class="keyword">nullptr</span>;</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span>    Node* m_pLink[2] = {<span class="keyword">nullptr</span>, <span class="keyword">nullptr</span>};</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span>  };</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span> </div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span>  <span class="keyword">struct </span>Node : <span class="keyword">public</span> NilNode</div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span>  {</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span>    KeyType m_Key;</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span>  };</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span> </div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>  <span class="keyword">template</span> &lt;<span class="keywordtype">bool</span> REVERSE&gt;</div>
<div class="foldopen" id="foldopen00034" data-start="{" data-end="};">
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno"><a class="line" href="../../de/d50/structez_set_base_1_1_iterator_base.htm">   34</a></span>  <span class="keyword">struct </span><a class="code hl_struct" href="../../de/d50/structez_set_base_1_1_iterator_base.htm">IteratorBase</a></div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>  {</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span>    <span class="keyword">using </span>iterator_category = std::forward_iterator_tag;</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span>    <span class="keyword">using </span><a class="code hl_struct" href="../../de/d50/structez_set_base_1_1_iterator_base.htm">value_type</a> = <a class="code hl_struct" href="../../de/d50/structez_set_base_1_1_iterator_base.htm">IteratorBase&lt;REVERSE&gt;</a>;</div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>    <span class="keyword">using </span>difference_type = std::ptrdiff_t;</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span>    <span class="keyword">using </span><a class="code hl_struct" href="../../de/d50/structez_set_base_1_1_iterator_base.htm">pointer</a> = <a class="code hl_struct" href="../../de/d50/structez_set_base_1_1_iterator_base.htm">IteratorBase&lt;REVERSE&gt;</a>*;</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span>    <span class="keyword">using </span><a class="code hl_struct" href="../../de/d50/structez_set_base_1_1_iterator_base.htm">reference</a> = <a class="code hl_struct" href="../../de/d50/structez_set_base_1_1_iterator_base.htm">IteratorBase&lt;REVERSE&gt;</a>&amp;;</div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span> </div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>    EZ_DECLARE_POD_TYPE();</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span> </div>
<div class="foldopen" id="foldopen00045" data-start="{" data-end="}">
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno"><a class="line" href="../../de/d50/structez_set_base_1_1_iterator_base.htm#a743580cfb97d9cdfdbdaf34188f0b318">   45</a></span>    EZ_ALWAYS_INLINE <a class="code hl_function" href="../../de/d50/structez_set_base_1_1_iterator_base.htm#a743580cfb97d9cdfdbdaf34188f0b318">IteratorBase</a>()</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span>      : m_pElement(nullptr)</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span>    {</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>    } <span class="comment">// [tested]</span></div>
</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span> </div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno"><a class="line" href="../../de/d50/structez_set_base_1_1_iterator_base.htm#afa625721e2a7844eeac4a76e08e16d4c">   51</a></span>    EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code hl_function" href="../../de/d50/structez_set_base_1_1_iterator_base.htm#afa625721e2a7844eeac4a76e08e16d4c">IsValid</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> (m_pElement != <span class="keyword">nullptr</span>); } <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span> </div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno"><a class="line" href="../../de/d50/structez_set_base_1_1_iterator_base.htm#a50e91c55ef28552e3e660043952e2c3e">   54</a></span>    EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code hl_function" href="../../de/d50/structez_set_base_1_1_iterator_base.htm#a50e91c55ef28552e3e660043952e2c3e">operator==</a>(<span class="keyword">const</span> <span class="keyword">typename</span> <a class="code hl_class" href="../../dc/d4b/classez_set_base.htm">ezSetBase&lt;KeyType, Comparer&gt;::IteratorBase&lt;REVERSE&gt;</a>&amp; it2)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> (m_pElement == it2.m_pElement); }</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>    EZ_ADD_DEFAULT_OPERATOR_NOTEQUAL(<span class="keyword">const</span> <span class="keyword">typename</span> <a class="code hl_class" href="../../dc/d4b/classez_set_base.htm">ezSetBase&lt;KeyType, Comparer&gt;::IteratorBase&lt;REVERSE&gt;</a>&amp;);</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span> </div>
<div class="foldopen" id="foldopen00058" data-start="{" data-end="}">
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno"><a class="line" href="../../de/d50/structez_set_base_1_1_iterator_base.htm#a01ba09301264d262f351b4aeee9d9174">   58</a></span>    EZ_FORCE_INLINE <span class="keyword">const</span> KeyType&amp; <a class="code hl_function" href="../../de/d50/structez_set_base_1_1_iterator_base.htm#a01ba09301264d262f351b4aeee9d9174">Key</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span>      EZ_ASSERT_DEBUG(<a class="code hl_function" href="../../de/d50/structez_set_base_1_1_iterator_base.htm#afa625721e2a7844eeac4a76e08e16d4c">IsValid</a>(), <span class="stringliteral">&quot;Cannot access the &#39;key&#39; of an invalid iterator.&quot;</span>);</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>      <span class="keywordflow">return</span> m_pElement-&gt;m_Key;</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>    } <span class="comment">// [tested]</span></div>
</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span> </div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno"><a class="line" href="../../de/d50/structez_set_base_1_1_iterator_base.htm#ae469dba90b1c304d00d14953216ef061">   65</a></span>    EZ_ALWAYS_INLINE <span class="keyword">const</span> KeyType&amp; <a class="code hl_function" href="../../de/d50/structez_set_base_1_1_iterator_base.htm#ae469dba90b1c304d00d14953216ef061">operator*</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code hl_function" href="../../de/d50/structez_set_base_1_1_iterator_base.htm#a01ba09301264d262f351b4aeee9d9174">Key</a>(); }</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span> </div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>    <span class="keywordtype">void</span> <a class="code hl_function" href="../../de/d50/structez_set_base_1_1_iterator_base.htm#a429f60a611e7c20a2f86ef8666ec57ad">Next</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span> </div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>    <span class="keywordtype">void</span> <a class="code hl_function" href="../../de/d50/structez_set_base_1_1_iterator_base.htm#a33d262d0ff7b5ab76f5e79d899341688">Prev</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span> </div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno"><a class="line" href="../../de/d50/structez_set_base_1_1_iterator_base.htm#a91f12b2589ff1ab0d00a36a90ceb6577">   74</a></span>    EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../de/d50/structez_set_base_1_1_iterator_base.htm#a91f12b2589ff1ab0d00a36a90ceb6577">operator++</a>() { <a class="code hl_function" href="../../de/d50/structez_set_base_1_1_iterator_base.htm#a429f60a611e7c20a2f86ef8666ec57ad">Next</a>(); } <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span> </div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno"><a class="line" href="../../de/d50/structez_set_base_1_1_iterator_base.htm#a8e5a431fa3360b68a37eab986b5288af">   77</a></span>    EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../de/d50/structez_set_base_1_1_iterator_base.htm#a8e5a431fa3360b68a37eab986b5288af">operator--</a>() { <a class="code hl_function" href="../../de/d50/structez_set_base_1_1_iterator_base.htm#a33d262d0ff7b5ab76f5e79d899341688">Prev</a>(); } <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span> </div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>  <span class="keyword">protected</span>:</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>    <span class="keywordtype">void</span> Advance(ezInt32 dir0, ezInt32 dir1);</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span> </div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span>    <span class="keyword">friend</span> <span class="keyword">class </span><a class="code hl_class" href="../../dc/d4b/classez_set_base.htm">ezSetBase</a>&lt;KeyType, Comparer&gt;;</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span> </div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>    EZ_ALWAYS_INLINE <span class="keyword">explicit</span> <a class="code hl_function" href="../../de/d50/structez_set_base_1_1_iterator_base.htm#a743580cfb97d9cdfdbdaf34188f0b318">IteratorBase</a>(Node* pInit)</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>      : m_pElement(pInit)</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>    {</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>    }</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span> </div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>    Node* m_pElement;</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>  };</div>
</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span> </div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>  <span class="keyword">using </span>Iterator = IteratorBase&lt;false&gt;;</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>  <span class="keyword">using </span>ReverseIterator = IteratorBase&lt;true&gt;;</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span> </div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span><span class="keyword">protected</span>:</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span>  <a class="code hl_class" href="../../dc/d4b/classez_set_base.htm">ezSetBase</a>(<span class="keyword">const</span> Comparer&amp; comparer, <a class="code hl_class" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span> </div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>  <a class="code hl_class" href="../../dc/d4b/classez_set_base.htm">ezSetBase</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/d4b/classez_set_base.htm">ezSetBase&lt;KeyType, Comparer&gt;</a>&amp; cc, <a class="code hl_class" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span> </div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>  <a class="code hl_function" href="../../dc/d4b/classez_set_base.htm#a79935f77e8e9e1f058537d4e1f396b3c">~ezSetBase</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span> </div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../dc/d4b/classez_set_base.htm#a31c031cf509d78327fec1c4f23b775f6">operator=</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/d4b/classez_set_base.htm">ezSetBase&lt;KeyType, Comparer&gt;</a>&amp; rhs); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span> </div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="../../dc/d4b/classez_set_base.htm#a28aa829398bac4738375d27ec5b26d67">IsEmpty</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span> </div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>  ezUInt32 <a class="code hl_function" href="../../dc/d4b/classez_set_base.htm#af8d413bb3bbec419cfbaaab5b48bca62">GetCount</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span> </div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../dc/d4b/classez_set_base.htm#aaf9b11b02b7dc68cd4a4d95f2e678ce5">Clear</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span> </div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>  Iterator <a class="code hl_function" href="../../dc/d4b/classez_set_base.htm#a9a0df40f4bd4f84e5c6ca4e908daad44">GetIterator</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span> </div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>  ReverseIterator <a class="code hl_function" href="../../dc/d4b/classez_set_base.htm#a87c31cbcf3db1e75fe5742e88373e710">GetReverseIterator</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span> </div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span>  Iterator <a class="code hl_function" href="../../dc/d4b/classez_set_base.htm#a48fcf3d5be80596908f4daebfe984bf4">Insert</a>(CompatibleKeyType&amp;&amp; key); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span> </div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="../../dc/d4b/classez_set_base.htm#a8873ec8c8c39b9ee1735ab9f4d026cd8">Remove</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span> </div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span>  Iterator <a class="code hl_function" href="../../dc/d4b/classez_set_base.htm#a8873ec8c8c39b9ee1735ab9f4d026cd8">Remove</a>(<span class="keyword">const</span> Iterator&amp; pos); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span> </div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno"><a class="line" href="../../dc/d4b/classez_set_base.htm#a51740c019dcc0da6afa1bad6b970486a">  137</a></span>  <a class="code hl_struct" href="../../de/d50/structez_set_base_1_1_iterator_base.htm">Iterator</a> <a class="code hl_function" href="../../dc/d4b/classez_set_base.htm#a51740c019dcc0da6afa1bad6b970486a">Find</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span> </div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno"><a class="line" href="../../dc/d4b/classez_set_base.htm#a29e6ff286c2883e3f3a2c647d7a225db">  141</a></span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="../../dc/d4b/classez_set_base.htm#a29e6ff286c2883e3f3a2c647d7a225db">Contains</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span> </div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="../../dc/d4b/classez_set_base.htm#a7e3d6dec6e73f77bd804ccd051b12e4c">ContainsSet</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/d4b/classez_set_base.htm">ezSetBase&lt;KeyType, Comparer&gt;</a>&amp; operand) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span> </div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno"><a class="line" href="../../dc/d4b/classez_set_base.htm#a5ae601269a798870895be7818e07d0cb">  149</a></span>  <a class="code hl_struct" href="../../de/d50/structez_set_base_1_1_iterator_base.htm">Iterator</a> <a class="code hl_function" href="../../dc/d4b/classez_set_base.htm#a5ae601269a798870895be7818e07d0cb">LowerBound</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span> </div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno"><a class="line" href="../../dc/d4b/classez_set_base.htm#a165e4059d89375b118570be343a704de">  154</a></span>  <a class="code hl_struct" href="../../de/d50/structez_set_base_1_1_iterator_base.htm">Iterator</a> <a class="code hl_function" href="../../dc/d4b/classez_set_base.htm#a165e4059d89375b118570be343a704de">UpperBound</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span> </div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../dc/d4b/classez_set_base.htm#aee636569824a7ccbae563839dd50ec57">Union</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/d4b/classez_set_base.htm">ezSetBase&lt;KeyType, Comparer&gt;</a>&amp; operand); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span> </div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../dc/d4b/classez_set_base.htm#a6cd727af03c407c8807c19b2b2ace759">Difference</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/d4b/classez_set_base.htm">ezSetBase&lt;KeyType, Comparer&gt;</a>&amp; operand); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span> </div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../dc/d4b/classez_set_base.htm#a463675853c88dd0a90d44bba4dd95b3e">Intersection</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/d4b/classez_set_base.htm">ezSetBase&lt;KeyType, Comparer&gt;</a>&amp; operand); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span> </div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno"><a class="line" href="../../dc/d4b/classez_set_base.htm#a0c6c841c31a23d72ae8bc57d6b95110c">  166</a></span>  <a class="code hl_class" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a>* <a class="code hl_function" href="../../dc/d4b/classez_set_base.htm#a0c6c841c31a23d72ae8bc57d6b95110c">GetAllocator</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_Elements.<a class="code hl_function" href="../../d7/d68/classez_deque_base.htm#a7537cd4a6b79b4f7cfe20fbea72e1853">GetAllocator</a>(); }</div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span> </div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="../../dc/d4b/classez_set_base.htm#a9c086e931d3c985838274f22f3fcd466">operator==</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/d4b/classez_set_base.htm">ezSetBase&lt;KeyType, Comparer&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span>  EZ_ADD_DEFAULT_OPERATOR_NOTEQUAL(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/d4b/classez_set_base.htm">ezSetBase&lt;KeyType, Comparer&gt;</a>&amp;);</div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span> </div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno"><a class="line" href="../../dc/d4b/classez_set_base.htm#a32d1b5c5da96fcdb49b20d719ed2af17">  173</a></span>  ezUInt64 <a class="code hl_function" href="../../dc/d4b/classez_set_base.htm#a32d1b5c5da96fcdb49b20d719ed2af17">GetHeapMemoryUsage</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_Elements.<a class="code hl_function" href="../../d7/d68/classez_deque_base.htm#a4bb01ad03a63c829a87eef8685e4a318">GetHeapMemoryUsage</a>(); } <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span> </div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../dc/d4b/classez_set_base.htm#a9fddb61a95208ee0431f553e512959bd">Swap</a>(<a class="code hl_class" href="../../dc/d4b/classez_set_base.htm">ezSetBase&lt;KeyType, Comparer&gt;</a>&amp; other); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span> </div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span>  Node* Internal_Find(<span class="keyword">const</span> CompatibleKeyType&amp; key) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span>  Node* Internal_LowerBound(<span class="keyword">const</span> CompatibleKeyType&amp; key) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno">  183</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span>  Node* Internal_UpperBound(<span class="keyword">const</span> CompatibleKeyType&amp; key) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span> </div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span>  <span class="keywordtype">void</span> Constructor();</div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span> </div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span>  Node* AcquireNode(CompatibleKeyType&amp;&amp; key, ezUInt16 uiLevel, Node* pParent);</div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span> </div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span>  <span class="keywordtype">void</span> ReleaseNode(Node* pNode);</div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span> </div>
<div class="line"><a id="l00199" name="l00199"></a><span class="lineno">  199</span>  Node* SkewNode(Node* root);</div>
<div class="line"><a id="l00200" name="l00200"></a><span class="lineno">  200</span>  Node* SplitNode(Node* root);</div>
<div class="line"><a id="l00201" name="l00201"></a><span class="lineno">  201</span> </div>
<div class="line"><a id="l00202" name="l00202"></a><span class="lineno">  202</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a id="l00203" name="l00203"></a><span class="lineno">  203</span>  Node* <a class="code hl_function" href="../../dc/d4b/classez_set_base.htm#a48fcf3d5be80596908f4daebfe984bf4">Insert</a>(Node* root, CompatibleKeyType&amp;&amp; key, Node*&amp; pInsertedNode);</div>
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno">  204</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a id="l00205" name="l00205"></a><span class="lineno">  205</span>  Node* <a class="code hl_function" href="../../dc/d4b/classez_set_base.htm#a8873ec8c8c39b9ee1735ab9f4d026cd8">Remove</a>(Node* root, <span class="keyword">const</span> CompatibleKeyType&amp; key, <span class="keywordtype">bool</span>&amp; bRemoved);</div>
<div class="line"><a id="l00206" name="l00206"></a><span class="lineno">  206</span> </div>
<div class="line"><a id="l00208" name="l00208"></a><span class="lineno">  208</span>  Node* GetLeftMost() <span class="keyword">const</span>;</div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno">  209</span> </div>
<div class="line"><a id="l00211" name="l00211"></a><span class="lineno">  211</span>  Node* GetRightMost() <span class="keyword">const</span>;</div>
<div class="line"><a id="l00212" name="l00212"></a><span class="lineno">  212</span> </div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno">  214</span>  <span class="keywordtype">void</span> SwapNilNode(Node*&amp; pCurNode, NilNode* pOld, NilNode* pNew);</div>
<div class="line"><a id="l00215" name="l00215"></a><span class="lineno">  215</span> </div>
<div class="line"><a id="l00217" name="l00217"></a><span class="lineno">  217</span>  Node* m_pRoot;</div>
<div class="line"><a id="l00218" name="l00218"></a><span class="lineno">  218</span> </div>
<div class="line"><a id="l00220" name="l00220"></a><span class="lineno">  220</span>  NilNode m_NilNode;</div>
<div class="line"><a id="l00221" name="l00221"></a><span class="lineno">  221</span> </div>
<div class="line"><a id="l00223" name="l00223"></a><span class="lineno">  223</span>  ezUInt32 m_uiCount;</div>
<div class="line"><a id="l00224" name="l00224"></a><span class="lineno">  224</span> </div>
<div class="line"><a id="l00226" name="l00226"></a><span class="lineno">  226</span>  <a class="code hl_class" href="../../d9/dfe/classez_deque.htm">ezDeque&lt;Node, ezNullAllocatorWrapper, false&gt;</a> m_Elements;</div>
<div class="line"><a id="l00227" name="l00227"></a><span class="lineno">  227</span> </div>
<div class="line"><a id="l00229" name="l00229"></a><span class="lineno">  229</span>  Node* m_pFreeElementStack;</div>
<div class="line"><a id="l00230" name="l00230"></a><span class="lineno">  230</span> </div>
<div class="line"><a id="l00232" name="l00232"></a><span class="lineno">  232</span>  Comparer m_Comparer;</div>
<div class="line"><a id="l00233" name="l00233"></a><span class="lineno">  233</span>};</div>
</div>
<div class="line"><a id="l00234" name="l00234"></a><span class="lineno">  234</span> </div>
<div class="line"><a id="l00236" name="l00236"></a><span class="lineno">  236</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> KeyType, <span class="keyword">typename</span> Comparer = ezCompareHelper&lt;KeyType&gt;, <span class="keyword">typename</span> AllocatorWrapper = ezDefaultAllocatorWrapper&gt;</div>
<div class="foldopen" id="foldopen00237" data-start="{" data-end="};">
<div class="line"><a id="l00237" name="l00237"></a><span class="lineno"><a class="line" href="../../d0/d90/classez_set.htm">  237</a></span><span class="keyword">class </span><a class="code hl_class" href="../../d0/d90/classez_set.htm">ezSet</a> : <span class="keyword">public</span> <a class="code hl_class" href="../../dc/d4b/classez_set_base.htm">ezSetBase</a>&lt;KeyType, Comparer&gt;</div>
<div class="line"><a id="l00238" name="l00238"></a><span class="lineno">  238</span>{</div>
<div class="line"><a id="l00239" name="l00239"></a><span class="lineno">  239</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00240" name="l00240"></a><span class="lineno">  240</span>  <a class="code hl_class" href="../../d0/d90/classez_set.htm">ezSet</a>();</div>
<div class="line"><a id="l00241" name="l00241"></a><span class="lineno">  241</span>  <span class="keyword">explicit</span> <a class="code hl_class" href="../../d0/d90/classez_set.htm">ezSet</a>(<a class="code hl_class" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a>* pAllocator);</div>
<div class="line"><a id="l00242" name="l00242"></a><span class="lineno">  242</span>  <a class="code hl_class" href="../../d0/d90/classez_set.htm">ezSet</a>(<span class="keyword">const</span> Comparer&amp; comparer, <a class="code hl_class" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a>* pAllocator);</div>
<div class="line"><a id="l00243" name="l00243"></a><span class="lineno">  243</span> </div>
<div class="line"><a id="l00244" name="l00244"></a><span class="lineno">  244</span>  <a class="code hl_class" href="../../d0/d90/classez_set.htm">ezSet</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d0/d90/classez_set.htm">ezSet&lt;KeyType, Comparer, AllocatorWrapper&gt;</a>&amp; other);</div>
<div class="line"><a id="l00245" name="l00245"></a><span class="lineno">  245</span>  <a class="code hl_class" href="../../d0/d90/classez_set.htm">ezSet</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/d4b/classez_set_base.htm">ezSetBase&lt;KeyType, Comparer&gt;</a>&amp; other);</div>
<div class="line"><a id="l00246" name="l00246"></a><span class="lineno">  246</span> </div>
<div class="line"><a id="l00247" name="l00247"></a><span class="lineno">  247</span>  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> <a class="code hl_class" href="../../d0/d90/classez_set.htm">ezSet&lt;KeyType, Comparer, AllocatorWrapper&gt;</a>&amp; rhs);</div>
<div class="line"><a id="l00248" name="l00248"></a><span class="lineno">  248</span>  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/d4b/classez_set_base.htm">ezSetBase&lt;KeyType, Comparer&gt;</a>&amp; rhs);</div>
<div class="line"><a id="l00249" name="l00249"></a><span class="lineno">  249</span>};</div>
</div>
<div class="line"><a id="l00250" name="l00250"></a><span class="lineno">  250</span> </div>
<div class="line"><a id="l00251" name="l00251"></a><span class="lineno">  251</span> </div>
<div class="line"><a id="l00252" name="l00252"></a><span class="lineno">  252</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> KeyType, <span class="keyword">typename</span> Comparer&gt;</div>
<div class="line"><a id="l00253" name="l00253"></a><span class="lineno">  253</span><span class="keyword">typename</span> <a class="code hl_struct" href="../../de/d50/structez_set_base_1_1_iterator_base.htm">ezSetBase&lt;KeyType, Comparer&gt;::Iterator</a> begin(<a class="code hl_class" href="../../dc/d4b/classez_set_base.htm">ezSetBase&lt;KeyType, Comparer&gt;</a>&amp; ref_container)</div>
<div class="line"><a id="l00254" name="l00254"></a><span class="lineno">  254</span>{</div>
<div class="line"><a id="l00255" name="l00255"></a><span class="lineno">  255</span>  <span class="keywordflow">return</span> ref_container.<a class="code hl_function" href="../../dc/d4b/classez_set_base.htm#a9a0df40f4bd4f84e5c6ca4e908daad44">GetIterator</a>();</div>
<div class="line"><a id="l00256" name="l00256"></a><span class="lineno">  256</span>}</div>
<div class="line"><a id="l00257" name="l00257"></a><span class="lineno">  257</span> </div>
<div class="line"><a id="l00258" name="l00258"></a><span class="lineno">  258</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> KeyType, <span class="keyword">typename</span> Comparer&gt;</div>
<div class="line"><a id="l00259" name="l00259"></a><span class="lineno">  259</span><span class="keyword">typename</span> <a class="code hl_struct" href="../../de/d50/structez_set_base_1_1_iterator_base.htm">ezSetBase&lt;KeyType, Comparer&gt;::Iterator</a> begin(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/d4b/classez_set_base.htm">ezSetBase&lt;KeyType, Comparer&gt;</a>&amp; container)</div>
<div class="line"><a id="l00260" name="l00260"></a><span class="lineno">  260</span>{</div>
<div class="line"><a id="l00261" name="l00261"></a><span class="lineno">  261</span>  <span class="keywordflow">return</span> container.<a class="code hl_function" href="../../dc/d4b/classez_set_base.htm#a9a0df40f4bd4f84e5c6ca4e908daad44">GetIterator</a>();</div>
<div class="line"><a id="l00262" name="l00262"></a><span class="lineno">  262</span>}</div>
<div class="line"><a id="l00263" name="l00263"></a><span class="lineno">  263</span> </div>
<div class="line"><a id="l00264" name="l00264"></a><span class="lineno">  264</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> KeyType, <span class="keyword">typename</span> Comparer&gt;</div>
<div class="line"><a id="l00265" name="l00265"></a><span class="lineno">  265</span><span class="keyword">typename</span> <a class="code hl_struct" href="../../de/d50/structez_set_base_1_1_iterator_base.htm">ezSetBase&lt;KeyType, Comparer&gt;::Iterator</a> cbegin(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/d4b/classez_set_base.htm">ezSetBase&lt;KeyType, Comparer&gt;</a>&amp; container)</div>
<div class="line"><a id="l00266" name="l00266"></a><span class="lineno">  266</span>{</div>
<div class="line"><a id="l00267" name="l00267"></a><span class="lineno">  267</span>  <span class="keywordflow">return</span> container.<a class="code hl_function" href="../../dc/d4b/classez_set_base.htm#a9a0df40f4bd4f84e5c6ca4e908daad44">GetIterator</a>();</div>
<div class="line"><a id="l00268" name="l00268"></a><span class="lineno">  268</span>}</div>
<div class="line"><a id="l00269" name="l00269"></a><span class="lineno">  269</span> </div>
<div class="line"><a id="l00270" name="l00270"></a><span class="lineno">  270</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> KeyType, <span class="keyword">typename</span> Comparer&gt;</div>
<div class="line"><a id="l00271" name="l00271"></a><span class="lineno">  271</span><span class="keyword">typename</span> <a class="code hl_struct" href="../../de/d50/structez_set_base_1_1_iterator_base.htm">ezSetBase&lt;KeyType, Comparer&gt;::Iterator</a> end(<a class="code hl_class" href="../../dc/d4b/classez_set_base.htm">ezSetBase&lt;KeyType, Comparer&gt;</a>&amp; ref_container)</div>
<div class="line"><a id="l00272" name="l00272"></a><span class="lineno">  272</span>{</div>
<div class="line"><a id="l00273" name="l00273"></a><span class="lineno">  273</span>  EZ_IGNORE_UNUSED(ref_container);</div>
<div class="line"><a id="l00274" name="l00274"></a><span class="lineno">  274</span>  <span class="keywordflow">return</span> <span class="keyword">typename</span> <a class="code hl_struct" href="../../de/d50/structez_set_base_1_1_iterator_base.htm">ezSetBase&lt;KeyType, Comparer&gt;::Iterator</a>();</div>
<div class="line"><a id="l00275" name="l00275"></a><span class="lineno">  275</span>}</div>
<div class="line"><a id="l00276" name="l00276"></a><span class="lineno">  276</span> </div>
<div class="line"><a id="l00277" name="l00277"></a><span class="lineno">  277</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> KeyType, <span class="keyword">typename</span> Comparer&gt;</div>
<div class="line"><a id="l00278" name="l00278"></a><span class="lineno">  278</span><span class="keyword">typename</span> <a class="code hl_struct" href="../../de/d50/structez_set_base_1_1_iterator_base.htm">ezSetBase&lt;KeyType, Comparer&gt;::Iterator</a> end(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/d4b/classez_set_base.htm">ezSetBase&lt;KeyType, Comparer&gt;</a>&amp; container)</div>
<div class="line"><a id="l00279" name="l00279"></a><span class="lineno">  279</span>{</div>
<div class="line"><a id="l00280" name="l00280"></a><span class="lineno">  280</span>  EZ_IGNORE_UNUSED(container);</div>
<div class="line"><a id="l00281" name="l00281"></a><span class="lineno">  281</span>  <span class="keywordflow">return</span> <span class="keyword">typename</span> <a class="code hl_struct" href="../../de/d50/structez_set_base_1_1_iterator_base.htm">ezSetBase&lt;KeyType, Comparer&gt;::Iterator</a>();</div>
<div class="line"><a id="l00282" name="l00282"></a><span class="lineno">  282</span>}</div>
<div class="line"><a id="l00283" name="l00283"></a><span class="lineno">  283</span> </div>
<div class="line"><a id="l00284" name="l00284"></a><span class="lineno">  284</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> KeyType, <span class="keyword">typename</span> Comparer&gt;</div>
<div class="line"><a id="l00285" name="l00285"></a><span class="lineno">  285</span><span class="keyword">typename</span> <a class="code hl_struct" href="../../de/d50/structez_set_base_1_1_iterator_base.htm">ezSetBase&lt;KeyType, Comparer&gt;::Iterator</a> cend(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/d4b/classez_set_base.htm">ezSetBase&lt;KeyType, Comparer&gt;</a>&amp; container)</div>
<div class="line"><a id="l00286" name="l00286"></a><span class="lineno">  286</span>{</div>
<div class="line"><a id="l00287" name="l00287"></a><span class="lineno">  287</span>  EZ_IGNORE_UNUSED(container);</div>
<div class="line"><a id="l00288" name="l00288"></a><span class="lineno">  288</span>  <span class="keywordflow">return</span> <span class="keyword">typename</span> <a class="code hl_struct" href="../../de/d50/structez_set_base_1_1_iterator_base.htm">ezSetBase&lt;KeyType, Comparer&gt;::Iterator</a>();</div>
<div class="line"><a id="l00289" name="l00289"></a><span class="lineno">  289</span>}</div>
<div class="line"><a id="l00290" name="l00290"></a><span class="lineno">  290</span> </div>
<div class="line"><a id="l00291" name="l00291"></a><span class="lineno">  291</span> </div>
<div class="line"><a id="l00292" name="l00292"></a><span class="lineno">  292</span><span class="preprocessor">#include &lt;Foundation/Containers/Implementation/Set_inl.h&gt;</span></div>
<div class="ttc" id="aclassez_allocator_htm"><div class="ttname"><a href="../../d0/dbb/classez_allocator.htm">ezAllocator</a></div><div class="ttdoc">Base class for all memory allocators.</div><div class="ttdef"><b>Definition</b> Allocator.h:23</div></div>
<div class="ttc" id="aclassez_deque_base_htm_a4bb01ad03a63c829a87eef8685e4a318"><div class="ttname"><a href="../../d7/d68/classez_deque_base.htm#a4bb01ad03a63c829a87eef8685e4a318">ezDequeBase::GetHeapMemoryUsage</a></div><div class="ttdeci">ezUInt64 GetHeapMemoryUsage() const</div><div class="ttdoc">Returns the amount of bytes that are currently allocated on the heap.</div><div class="ttdef"><b>Definition</b> Deque_inl.h:970</div></div>
<div class="ttc" id="aclassez_deque_base_htm_a7537cd4a6b79b4f7cfe20fbea72e1853"><div class="ttname"><a href="../../d7/d68/classez_deque_base.htm#a7537cd4a6b79b4f7cfe20fbea72e1853">ezDequeBase::GetAllocator</a></div><div class="ttdeci">ezAllocator * GetAllocator() const</div><div class="ttdoc">Returns the allocator that is used by this instance.</div><div class="ttdef"><b>Definition</b> Deque.h:168</div></div>
<div class="ttc" id="aclassez_deque_htm"><div class="ttname"><a href="../../d9/dfe/classez_deque.htm">ezDeque</a></div><div class="ttdef"><b>Definition</b> Deque.h:270</div></div>
<div class="ttc" id="aclassez_set_base_htm"><div class="ttname"><a href="../../dc/d4b/classez_set_base.htm">ezSetBase</a></div><div class="ttdoc">A set container that only stores whether an element resides in it or not. Similar to STL::set.</div><div class="ttdef"><b>Definition</b> Set.h:13</div></div>
<div class="ttc" id="aclassez_set_base_htm_a0c6c841c31a23d72ae8bc57d6b95110c"><div class="ttname"><a href="../../dc/d4b/classez_set_base.htm#a0c6c841c31a23d72ae8bc57d6b95110c">ezSetBase::GetAllocator</a></div><div class="ttdeci">ezAllocator * GetAllocator() const</div><div class="ttdoc">Returns the allocator that is used by this instance.</div><div class="ttdef"><b>Definition</b> Set.h:166</div></div>
<div class="ttc" id="aclassez_set_base_htm_a165e4059d89375b118570be343a704de"><div class="ttname"><a href="../../dc/d4b/classez_set_base.htm#a165e4059d89375b118570be343a704de">ezSetBase::UpperBound</a></div><div class="ttdeci">Iterator UpperBound(const CompatibleKeyType &amp;key) const</div><div class="ttdoc">Returns an Iterator to the element with a key that is LARGER than the given key. Returns an invalid i...</div></div>
<div class="ttc" id="aclassez_set_base_htm_a28aa829398bac4738375d27ec5b26d67"><div class="ttname"><a href="../../dc/d4b/classez_set_base.htm#a28aa829398bac4738375d27ec5b26d67">ezSetBase::IsEmpty</a></div><div class="ttdeci">bool IsEmpty() const</div><div class="ttdoc">Returns whether there are no elements in the set. O(1) operation.</div><div class="ttdef"><b>Definition</b> Set_inl.h:152</div></div>
<div class="ttc" id="aclassez_set_base_htm_a29e6ff286c2883e3f3a2c647d7a225db"><div class="ttname"><a href="../../dc/d4b/classez_set_base.htm#a29e6ff286c2883e3f3a2c647d7a225db">ezSetBase::Contains</a></div><div class="ttdeci">bool Contains(const CompatibleKeyType &amp;key) const</div><div class="ttdoc">Checks whether the given key is in the container.</div></div>
<div class="ttc" id="aclassez_set_base_htm_a31c031cf509d78327fec1c4f23b775f6"><div class="ttname"><a href="../../dc/d4b/classez_set_base.htm#a31c031cf509d78327fec1c4f23b775f6">ezSetBase::operator=</a></div><div class="ttdeci">void operator=(const ezSetBase&lt; KeyType, Comparer &gt; &amp;rhs)</div><div class="ttdoc">Copies all keys from the given set into this one.</div><div class="ttdef"><b>Definition</b> Set_inl.h:124</div></div>
<div class="ttc" id="aclassez_set_base_htm_a32d1b5c5da96fcdb49b20d719ed2af17"><div class="ttname"><a href="../../dc/d4b/classez_set_base.htm#a32d1b5c5da96fcdb49b20d719ed2af17">ezSetBase::GetHeapMemoryUsage</a></div><div class="ttdeci">ezUInt64 GetHeapMemoryUsage() const</div><div class="ttdoc">Returns the amount of bytes that are currently allocated on the heap.</div><div class="ttdef"><b>Definition</b> Set.h:173</div></div>
<div class="ttc" id="aclassez_set_base_htm_a463675853c88dd0a90d44bba4dd95b3e"><div class="ttname"><a href="../../dc/d4b/classez_set_base.htm#a463675853c88dd0a90d44bba4dd95b3e">ezSetBase::Intersection</a></div><div class="ttdeci">void Intersection(const ezSetBase&lt; KeyType, Comparer &gt; &amp;operand)</div><div class="ttdoc">Makes this set the intersection of itself and the operand.</div><div class="ttdef"><b>Definition</b> Set_inl.h:338</div></div>
<div class="ttc" id="aclassez_set_base_htm_a48fcf3d5be80596908f4daebfe984bf4"><div class="ttname"><a href="../../dc/d4b/classez_set_base.htm#a48fcf3d5be80596908f4daebfe984bf4">ezSetBase::Insert</a></div><div class="ttdeci">Iterator Insert(CompatibleKeyType &amp;&amp;key)</div><div class="ttdoc">Inserts the key into the tree and returns an Iterator to it. O(log n) operation.</div><div class="ttdef"><b>Definition</b> Set_inl.h:351</div></div>
<div class="ttc" id="aclassez_set_base_htm_a51740c019dcc0da6afa1bad6b970486a"><div class="ttname"><a href="../../dc/d4b/classez_set_base.htm#a51740c019dcc0da6afa1bad6b970486a">ezSetBase::Find</a></div><div class="ttdeci">Iterator Find(const CompatibleKeyType &amp;key) const</div><div class="ttdoc">Searches for key, returns an Iterator to it or an invalid iterator, if no such key is found....</div></div>
<div class="ttc" id="aclassez_set_base_htm_a5ae601269a798870895be7818e07d0cb"><div class="ttname"><a href="../../dc/d4b/classez_set_base.htm#a5ae601269a798870895be7818e07d0cb">ezSetBase::LowerBound</a></div><div class="ttdeci">Iterator LowerBound(const CompatibleKeyType &amp;key) const</div><div class="ttdoc">Returns an Iterator to the element with a key equal or larger than the given key. Returns an invalid ...</div></div>
<div class="ttc" id="aclassez_set_base_htm_a6cd727af03c407c8807c19b2b2ace759"><div class="ttname"><a href="../../dc/d4b/classez_set_base.htm#a6cd727af03c407c8807c19b2b2ace759">ezSetBase::Difference</a></div><div class="ttdeci">void Difference(const ezSetBase&lt; KeyType, Comparer &gt; &amp;operand)</div><div class="ttdoc">Makes this set the difference of itself and the operand, i.e. subtracts operand.</div><div class="ttdef"><b>Definition</b> Set_inl.h:329</div></div>
<div class="ttc" id="aclassez_set_base_htm_a79935f77e8e9e1f058537d4e1f396b3c"><div class="ttname"><a href="../../dc/d4b/classez_set_base.htm#a79935f77e8e9e1f058537d4e1f396b3c">ezSetBase::~ezSetBase</a></div><div class="ttdeci">~ezSetBase()</div><div class="ttdoc">Destroys all elements in the set.</div><div class="ttdef"><b>Definition</b> Set_inl.h:118</div></div>
<div class="ttc" id="aclassez_set_base_htm_a7e3d6dec6e73f77bd804ccd051b12e4c"><div class="ttname"><a href="../../dc/d4b/classez_set_base.htm#a7e3d6dec6e73f77bd804ccd051b12e4c">ezSetBase::ContainsSet</a></div><div class="ttdeci">bool ContainsSet(const ezSetBase&lt; KeyType, Comparer &gt; &amp;operand) const</div><div class="ttdoc">Checks whether all keys of the given set are in the container.</div><div class="ttdef"><b>Definition</b> Set_inl.h:242</div></div>
<div class="ttc" id="aclassez_set_base_htm_a87c31cbcf3db1e75fe5742e88373e710"><div class="ttname"><a href="../../dc/d4b/classez_set_base.htm#a87c31cbcf3db1e75fe5742e88373e710">ezSetBase::GetReverseIterator</a></div><div class="ttdeci">ReverseIterator GetReverseIterator() const</div><div class="ttdoc">Returns a constant ReverseIterator to the very last element.</div><div class="ttdef"><b>Definition</b> Set_inl.h:171</div></div>
<div class="ttc" id="aclassez_set_base_htm_a8873ec8c8c39b9ee1735ab9f4d026cd8"><div class="ttname"><a href="../../dc/d4b/classez_set_base.htm#a8873ec8c8c39b9ee1735ab9f4d026cd8">ezSetBase::Remove</a></div><div class="ttdeci">bool Remove(const CompatibleKeyType &amp;key)</div><div class="ttdoc">Erases the element with the given key, if it exists. O(log n) operation.</div><div class="ttdef"><b>Definition</b> Set_inl.h:364</div></div>
<div class="ttc" id="aclassez_set_base_htm_a9a0df40f4bd4f84e5c6ca4e908daad44"><div class="ttname"><a href="../../dc/d4b/classez_set_base.htm#a9a0df40f4bd4f84e5c6ca4e908daad44">ezSetBase::GetIterator</a></div><div class="ttdeci">Iterator GetIterator() const</div><div class="ttdoc">Returns a constant Iterator to the very first element.</div><div class="ttdef"><b>Definition</b> Set_inl.h:165</div></div>
<div class="ttc" id="aclassez_set_base_htm_a9c086e931d3c985838274f22f3fcd466"><div class="ttname"><a href="../../dc/d4b/classez_set_base.htm#a9c086e931d3c985838274f22f3fcd466">ezSetBase::operator==</a></div><div class="ttdeci">bool operator==(const ezSetBase&lt; KeyType, Comparer &gt; &amp;rhs) const</div><div class="ttdoc">Comparison operator.</div><div class="ttdef"><b>Definition</b> Set_inl.h:684</div></div>
<div class="ttc" id="aclassez_set_base_htm_a9fddb61a95208ee0431f553e512959bd"><div class="ttname"><a href="../../dc/d4b/classez_set_base.htm#a9fddb61a95208ee0431f553e512959bd">ezSetBase::Swap</a></div><div class="ttdeci">void Swap(ezSetBase&lt; KeyType, Comparer &gt; &amp;other)</div><div class="ttdoc">Swaps this map with the other one.</div><div class="ttdef"><b>Definition</b> Set_inl.h:749</div></div>
<div class="ttc" id="aclassez_set_base_htm_aaf9b11b02b7dc68cd4a4d95f2e678ce5"><div class="ttname"><a href="../../dc/d4b/classez_set_base.htm#aaf9b11b02b7dc68cd4a4d95f2e678ce5">ezSetBase::Clear</a></div><div class="ttdeci">void Clear()</div><div class="ttdoc">Destroys all elements in the set and resets its size to zero.</div><div class="ttdef"><b>Definition</b> Set_inl.h:133</div></div>
<div class="ttc" id="aclassez_set_base_htm_aee636569824a7ccbae563839dd50ec57"><div class="ttname"><a href="../../dc/d4b/classez_set_base.htm#aee636569824a7ccbae563839dd50ec57">ezSetBase::Union</a></div><div class="ttdeci">void Union(const ezSetBase&lt; KeyType, Comparer &gt; &amp;operand)</div><div class="ttdoc">Makes this set the union of itself and the operand.</div><div class="ttdef"><b>Definition</b> Set_inl.h:320</div></div>
<div class="ttc" id="aclassez_set_base_htm_af8d413bb3bbec419cfbaaab5b48bca62"><div class="ttname"><a href="../../dc/d4b/classez_set_base.htm#af8d413bb3bbec419cfbaaab5b48bca62">ezSetBase::GetCount</a></div><div class="ttdeci">ezUInt32 GetCount() const</div><div class="ttdoc">Returns the number of elements currently stored in the set. O(1) operation.</div><div class="ttdef"><b>Definition</b> Set_inl.h:158</div></div>
<div class="ttc" id="aclassez_set_htm"><div class="ttname"><a href="../../d0/d90/classez_set.htm">ezSet</a></div><div class="ttdef"><b>Definition</b> Set.h:238</div></div>
<div class="ttc" id="astructez_set_base_1_1_iterator_base_htm"><div class="ttname"><a href="../../de/d50/structez_set_base_1_1_iterator_base.htm">ezSetBase::IteratorBase</a></div><div class="ttdoc">Base class for all iterators.</div><div class="ttdef"><b>Definition</b> Set.h:35</div></div>
<div class="ttc" id="astructez_set_base_1_1_iterator_base_htm_a01ba09301264d262f351b4aeee9d9174"><div class="ttname"><a href="../../de/d50/structez_set_base_1_1_iterator_base.htm#a01ba09301264d262f351b4aeee9d9174">ezSetBase::IteratorBase::Key</a></div><div class="ttdeci">EZ_FORCE_INLINE const KeyType &amp; Key() const</div><div class="ttdoc">Returns the 'key' of the element that this iterator points to.</div><div class="ttdef"><b>Definition</b> Set.h:58</div></div>
<div class="ttc" id="astructez_set_base_1_1_iterator_base_htm_a33d262d0ff7b5ab76f5e79d899341688"><div class="ttname"><a href="../../de/d50/structez_set_base_1_1_iterator_base.htm#a33d262d0ff7b5ab76f5e79d899341688">ezSetBase::IteratorBase::Prev</a></div><div class="ttdeci">void Prev()</div><div class="ttdoc">Advances the iterator to the previous element in the set. The iterator will not be valid anymore,...</div><div class="ttdef"><b>Definition</b> Set_inl.h:72</div></div>
<div class="ttc" id="astructez_set_base_1_1_iterator_base_htm_a429f60a611e7c20a2f86ef8666ec57ad"><div class="ttname"><a href="../../de/d50/structez_set_base_1_1_iterator_base.htm#a429f60a611e7c20a2f86ef8666ec57ad">ezSetBase::IteratorBase::Next</a></div><div class="ttdeci">void Next()</div><div class="ttdoc">Advances the iterator to the next element in the set. The iterator will not be valid anymore,...</div><div class="ttdef"><b>Definition</b> Set_inl.h:58</div></div>
<div class="ttc" id="astructez_set_base_1_1_iterator_base_htm_a50e91c55ef28552e3e660043952e2c3e"><div class="ttname"><a href="../../de/d50/structez_set_base_1_1_iterator_base.htm#a50e91c55ef28552e3e660043952e2c3e">ezSetBase::IteratorBase::operator==</a></div><div class="ttdeci">EZ_ALWAYS_INLINE bool operator==(const typename ezSetBase&lt; KeyType, Comparer &gt;::IteratorBase&lt; REVERSE &gt; &amp;it2) const</div><div class="ttdoc">Checks whether the two iterators point to the same element.</div><div class="ttdef"><b>Definition</b> Set.h:54</div></div>
<div class="ttc" id="astructez_set_base_1_1_iterator_base_htm_a743580cfb97d9cdfdbdaf34188f0b318"><div class="ttname"><a href="../../de/d50/structez_set_base_1_1_iterator_base.htm#a743580cfb97d9cdfdbdaf34188f0b318">ezSetBase::IteratorBase::IteratorBase</a></div><div class="ttdeci">EZ_ALWAYS_INLINE IteratorBase()</div><div class="ttdoc">Constructs an invalid iterator.</div><div class="ttdef"><b>Definition</b> Set.h:45</div></div>
<div class="ttc" id="astructez_set_base_1_1_iterator_base_htm_a8e5a431fa3360b68a37eab986b5288af"><div class="ttname"><a href="../../de/d50/structez_set_base_1_1_iterator_base.htm#a8e5a431fa3360b68a37eab986b5288af">ezSetBase::IteratorBase::operator--</a></div><div class="ttdeci">EZ_ALWAYS_INLINE void operator--()</div><div class="ttdoc">Shorthand for 'Prev'.</div><div class="ttdef"><b>Definition</b> Set.h:77</div></div>
<div class="ttc" id="astructez_set_base_1_1_iterator_base_htm_a91f12b2589ff1ab0d00a36a90ceb6577"><div class="ttname"><a href="../../de/d50/structez_set_base_1_1_iterator_base.htm#a91f12b2589ff1ab0d00a36a90ceb6577">ezSetBase::IteratorBase::operator++</a></div><div class="ttdeci">EZ_ALWAYS_INLINE void operator++()</div><div class="ttdoc">Shorthand for 'Next'.</div><div class="ttdef"><b>Definition</b> Set.h:74</div></div>
<div class="ttc" id="astructez_set_base_1_1_iterator_base_htm_ae469dba90b1c304d00d14953216ef061"><div class="ttname"><a href="../../de/d50/structez_set_base_1_1_iterator_base.htm#ae469dba90b1c304d00d14953216ef061">ezSetBase::IteratorBase::operator*</a></div><div class="ttdeci">EZ_ALWAYS_INLINE const KeyType &amp; operator*() const</div><div class="ttdoc">Returns the 'key' of the element that this iterator points to.</div><div class="ttdef"><b>Definition</b> Set.h:65</div></div>
<div class="ttc" id="astructez_set_base_1_1_iterator_base_htm_afa625721e2a7844eeac4a76e08e16d4c"><div class="ttname"><a href="../../de/d50/structez_set_base_1_1_iterator_base.htm#afa625721e2a7844eeac4a76e08e16d4c">ezSetBase::IteratorBase::IsValid</a></div><div class="ttdeci">EZ_ALWAYS_INLINE bool IsValid() const</div><div class="ttdoc">Checks whether this iterator points to a valid element.</div><div class="ttdef"><b>Definition</b> Set.h:51</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_6b567e6755824bd0b8ffd754b9d67ac0.htm">Containers</a></li><li class="navelem"><b>Set.h</b></li>
    <li class="footer">Generated on Fri Jul 11 2025 12:17:51 for ezEngine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
