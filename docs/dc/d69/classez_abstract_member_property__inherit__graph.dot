digraph "ezAbstractMemberProperty"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="ezAbstractMemberProperty",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="This is the base class for all properties that are members of a class. It provides more information a..."];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="ezAbstractProperty",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d81/classez_abstract_property.htm",tooltip="This is the base interface for all properties in the reflection system. It provides enough informatio..."];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="ezTypedMemberProperty\l\< ezColorGammaUB \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/deb/classez_typed_member_property.htm",tooltip=" "];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="ezTypedMemberProperty\l\< ezTypeTraits\< Type\l \>::NonConstReferenceType \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/deb/classez_typed_member_property.htm",tooltip=" "];
  Node4 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="ezAccessorProperty\l\< Class, Type \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/d65/classez_accessor_property.htm",tooltip="[internal] An implementation of ezTypedMemberProperty that uses custom getter / setter functions to a..."];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="ezTypedMemberProperty\l\< ezColor \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/deb/classez_typed_member_property.htm",tooltip=" "];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="ezAbstractEnumerationProperty",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/d61/classez_abstract_enumeration_property.htm",tooltip="The base class for enum and bitflags member properties."];
  Node7 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="ezTypedEnumProperty\l\< EnumType \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d5d/classez_typed_enum_property.htm",tooltip="[internal] Base class for enum / bitflags properties that already defines the type."];
  Node8 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="ezBitflagsAccessorProperty\l\< Class, EnumType, Type \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d58/classez_bitflags_accessor_property.htm",tooltip="[internal] An implementation of ezTypedEnumProperty that uses custom getter / setter functions to acc..."];
  Node8 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="ezBitflagsMemberProperty\l\< Class, EnumType, Type \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d0/d3e/classez_bitflags_member_property.htm",tooltip="[internal] An implementation of ezTypedEnumProperty that accesses the bitflags property data directly..."];
  Node8 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="ezEnumAccessorProperty\l\< Class, EnumType, Type \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/dd4/classez_enum_accessor_property.htm",tooltip="[internal] An implementation of ezTypedEnumProperty that uses custom getter / setter functions to acc..."];
  Node8 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="ezEnumMemberProperty\l\< Class, EnumType, Type \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/d6d/classez_enum_member_property.htm",tooltip="[internal] An implementation of ezTypedEnumProperty that accesses the enum property data directly."];
  Node1 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="ezPhantomMemberProperty",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/dcc/classez_phantom_member_property.htm",tooltip=" "];
  Node1 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="ezTypedMemberProperty\l\< Type \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/deb/classez_typed_member_property.htm",tooltip="The base class for all typed member properties. I.e. once the type of a property is determined,..."];
  Node14 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="ezMemberProperty\< Class,\l Type \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/d85/classez_member_property.htm",tooltip="[internal] An implementation of ezTypedMemberProperty that accesses the property data directly."];
  Node1 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="ezTypedMemberProperty\l\< const char * \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$de/dcc/classez_typed_member_property_3_01const_01char_01_5_01_4.htm",tooltip="Specialization of ezTypedMemberProperty for const char*."];
}
