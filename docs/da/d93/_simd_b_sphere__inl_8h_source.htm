<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/SimdMath/Implementation/SimdBSphere_inl.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 23.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('da/d93/_simd_b_sphere__inl_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">SimdBSphere_inl.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;EZ_ALWAYS_INLINE <a class="code" href="../../d4/db3/classez_simd_b_sphere.htm#a87921b8562f00a9bfa2a700d2af4731c">ezSimdBSphere::ezSimdBSphere</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160; </div>
<div class="line"><a name="l00005"></a><span class="lineno"><a class="line" href="../../d4/db3/classez_simd_b_sphere.htm#a9684a89c2ceef9940d43d7dc774962c7">    5</a></span>&#160;EZ_ALWAYS_INLINE <a class="code" href="../../d4/db3/classez_simd_b_sphere.htm#a87921b8562f00a9bfa2a700d2af4731c">ezSimdBSphere::ezSimdBSphere</a>(<span class="keyword">const</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>&amp; vCenter, <span class="keyword">const</span> <a class="code" href="../../d2/d0c/classez_simd_float.htm">ezSimdFloat</a>&amp; fRadius)</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;  : m_CenterAndRadius(vCenter)</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;{</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;  m_CenterAndRadius.SetW(fRadius);</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;}</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160; </div>
<div class="line"><a name="l00011"></a><span class="lineno"><a class="line" href="../../d4/db3/classez_simd_b_sphere.htm#ac068e1f17bf0d6bda63d853ffb53d26d">   11</a></span>&#160;EZ_ALWAYS_INLINE <a class="code" href="../../d4/db3/classez_simd_b_sphere.htm">ezSimdBSphere</a> <a class="code" href="../../d4/db3/classez_simd_b_sphere.htm#ac068e1f17bf0d6bda63d853ffb53d26d">ezSimdBSphere::MakeZero</a>()</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;{</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;  <a class="code" href="../../d4/db3/classez_simd_b_sphere.htm">ezSimdBSphere</a> res;</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;  res.m_CenterAndRadius = <a class="code" href="../../db/d0d/classez_simd_vec4f.htm#a1bbdedd947e594b431539062a2b50b95">ezSimdVec4f::MakeZero</a>();</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;  <span class="keywordflow">return</span> res;</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;}</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160; </div>
<div class="line"><a name="l00018"></a><span class="lineno"><a class="line" href="../../d4/db3/classez_simd_b_sphere.htm#a98fda72e911391505db551a5d3cee2c6">   18</a></span>&#160;EZ_ALWAYS_INLINE <a class="code" href="../../d4/db3/classez_simd_b_sphere.htm">ezSimdBSphere</a> <a class="code" href="../../d4/db3/classez_simd_b_sphere.htm#a98fda72e911391505db551a5d3cee2c6">ezSimdBSphere::MakeInvalid</a>(<span class="keyword">const</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>&amp; vCenter <span class="comment">/*= ezSimdVec4f::MakeZero()*/</span>)</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;{</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;  <a class="code" href="../../d4/db3/classez_simd_b_sphere.htm">ezSimdBSphere</a> res;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;  res.m_CenterAndRadius.Set(0.0f, 0.0f, 0.0f, -ezMath::SmallEpsilon&lt;float&gt;());</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;  <span class="keywordflow">return</span> res;</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;}</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160; </div>
<div class="line"><a name="l00025"></a><span class="lineno"><a class="line" href="../../d4/db3/classez_simd_b_sphere.htm#a2a561f5b88bdb694d0db735c18312023">   25</a></span>&#160;EZ_ALWAYS_INLINE <a class="code" href="../../d4/db3/classez_simd_b_sphere.htm">ezSimdBSphere</a> <a class="code" href="../../d4/db3/classez_simd_b_sphere.htm#a2a561f5b88bdb694d0db735c18312023">ezSimdBSphere::MakeFromCenterAndRadius</a>(<span class="keyword">const</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>&amp; vCenter, <span class="keyword">const</span> <a class="code" href="../../d2/d0c/classez_simd_float.htm">ezSimdFloat</a>&amp; fRadius)</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;{</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d4/db3/classez_simd_b_sphere.htm#a87921b8562f00a9bfa2a700d2af4731c">ezSimdBSphere</a>(vCenter, fRadius);</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;}</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160; </div>
<div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="../../d4/db3/classez_simd_b_sphere.htm#a0c0cf78fef995a9b31da75b83c70e6c0">   30</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="../../d4/db3/classez_simd_b_sphere.htm">ezSimdBSphere</a> <a class="code" href="../../d4/db3/classez_simd_b_sphere.htm#a0c0cf78fef995a9b31da75b83c70e6c0">ezSimdBSphere::MakeFromPoints</a>(<span class="keyword">const</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>* pPoints, ezUInt32 uiNumPoints, ezUInt32 uiStride <span class="comment">/*= sizeof(ezSimdVec4f)*/</span>)</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;{</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;  EZ_ASSERT_DEBUG(pPoints != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;The array must not be empty.&quot;</span>);</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;  EZ_ASSERT_DEBUG(uiStride &gt;= <span class="keyword">sizeof</span>(<a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>), <span class="stringliteral">&quot;The data must not overlap.&quot;</span>);</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  EZ_ASSERT_DEBUG(uiNumPoints &gt; 0, <span class="stringliteral">&quot;The array must contain at least one point.&quot;</span>);</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160; </div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;  <a class="code" href="../../d4/db3/classez_simd_b_sphere.htm">ezSimdBSphere</a> res;</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160; </div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>* pCur = pPoints;</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160; </div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> vCenter = <a class="code" href="../../db/d0d/classez_simd_vec4f.htm#a1bbdedd947e594b431539062a2b50b95">ezSimdVec4f::MakeZero</a>();</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  <span class="keywordflow">for</span> (ezUInt32 i = 0; i &lt; uiNumPoints; ++i)</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;  {</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    vCenter += *pCur;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    pCur = <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a0bedfdd60a93e5a48cd7e412a4aa984b">ezMemoryUtils::AddByteOffset</a>(pCur, uiStride);</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  }</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160; </div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;  res.m_CenterAndRadius = vCenter / <a class="code" href="../../d2/d0c/classez_simd_float.htm">ezSimdFloat</a>(uiNumPoints);</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160; </div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;  pCur = pPoints;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160; </div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;  <a class="code" href="../../d2/d0c/classez_simd_float.htm">ezSimdFloat</a> fMaxDistSquare = <a class="code" href="../../d2/d0c/classez_simd_float.htm#a65f4e4eb30afc0f63ca9fbd2dae15bbc">ezSimdFloat::MakeZero</a>();</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  <span class="keywordflow">for</span> (ezUInt32 i = 0; i &lt; uiNumPoints; ++i)</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;  {</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keyword">const</span> <a class="code" href="../../d2/d0c/classez_simd_float.htm">ezSimdFloat</a> fDistSQR = (*pCur - res.m_CenterAndRadius).GetLengthSquared&lt;3&gt;();</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    fMaxDistSquare = fMaxDistSquare.Max(fDistSQR);</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160; </div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    pCur = <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a0bedfdd60a93e5a48cd7e412a4aa984b">ezMemoryUtils::AddByteOffset</a>(pCur, uiStride);</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  }</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160; </div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;  res.m_CenterAndRadius.SetW(fMaxDistSquare.GetSqrt());</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160; </div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;  <span class="keywordflow">return</span> res;</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;}</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160; </div>
<div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="../../d4/db3/classez_simd_b_sphere.htm#aad104f6b716801a586d04f1706c56d15">   65</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d4/db3/classez_simd_b_sphere.htm#aad104f6b716801a586d04f1706c56d15">ezSimdBSphere::SetInvalid</a>()</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;{</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;  m_CenterAndRadius.Set(0.0f, 0.0f, 0.0f, -ezMath::SmallEpsilon&lt;float&gt;());</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;}</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160; </div>
<div class="line"><a name="l00070"></a><span class="lineno"><a class="line" href="../../d4/db3/classez_simd_b_sphere.htm#a7f37c863cfaac1b1dc45ad4b66932d07">   70</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../d4/db3/classez_simd_b_sphere.htm#a7f37c863cfaac1b1dc45ad4b66932d07">ezSimdBSphere::IsValid</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;  <span class="keywordflow">return</span> m_CenterAndRadius.IsValid&lt;4&gt;() &amp;&amp; <a class="code" href="../../d4/db3/classez_simd_b_sphere.htm#a5d56a3cee32af2928dabaa3b3ebcd028">GetRadius</a>() &gt;= <a class="code" href="../../d2/d0c/classez_simd_float.htm#a65f4e4eb30afc0f63ca9fbd2dae15bbc">ezSimdFloat::MakeZero</a>();</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;}</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160; </div>
<div class="line"><a name="l00075"></a><span class="lineno"><a class="line" href="../../d4/db3/classez_simd_b_sphere.htm#ab5d8eb31a6c6fc5651d363e71a10a0d7">   75</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../d4/db3/classez_simd_b_sphere.htm#ab5d8eb31a6c6fc5651d363e71a10a0d7">ezSimdBSphere::IsNaN</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;  <span class="keywordflow">return</span> m_CenterAndRadius.IsNaN&lt;4&gt;();</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;}</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160; </div>
<div class="line"><a name="l00080"></a><span class="lineno"><a class="line" href="../../d4/db3/classez_simd_b_sphere.htm#ae7530c7a3db5058b7aa735d7075062f8">   80</a></span>&#160;EZ_ALWAYS_INLINE <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> <a class="code" href="../../d4/db3/classez_simd_b_sphere.htm#ae7530c7a3db5058b7aa735d7075062f8">ezSimdBSphere::GetCenter</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;  <span class="keywordflow">return</span> m_CenterAndRadius;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;}</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160; </div>
<div class="line"><a name="l00085"></a><span class="lineno"><a class="line" href="../../d4/db3/classez_simd_b_sphere.htm#a5d56a3cee32af2928dabaa3b3ebcd028">   85</a></span>&#160;EZ_ALWAYS_INLINE <a class="code" href="../../d2/d0c/classez_simd_float.htm">ezSimdFloat</a> <a class="code" href="../../d4/db3/classez_simd_b_sphere.htm#a5d56a3cee32af2928dabaa3b3ebcd028">ezSimdBSphere::GetRadius</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;  <span class="keywordflow">return</span> m_CenterAndRadius.w();</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;}</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160; </div>
<div class="line"><a name="l00090"></a><span class="lineno"><a class="line" href="../../d4/db3/classez_simd_b_sphere.htm#a2cb8d9443c9ae2e802220f223edbf6c2">   90</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d4/db3/classez_simd_b_sphere.htm#a2cb8d9443c9ae2e802220f223edbf6c2">ezSimdBSphere::SetFromPoints</a>(<span class="keyword">const</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>* pPoints, ezUInt32 uiNumPoints, ezUInt32 uiStride)</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;{</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;  *<span class="keyword">this</span> = <a class="code" href="../../d4/db3/classez_simd_b_sphere.htm#a0c0cf78fef995a9b31da75b83c70e6c0">MakeFromPoints</a>(pPoints, uiNumPoints, uiStride);</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;}</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160; </div>
<div class="line"><a name="l00095"></a><span class="lineno"><a class="line" href="../../d4/db3/classez_simd_b_sphere.htm#a04e4abc95bc2454a974cebfe35a9515d">   95</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d4/db3/classez_simd_b_sphere.htm#a04e4abc95bc2454a974cebfe35a9515d">ezSimdBSphere::ExpandToInclude</a>(<span class="keyword">const</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>&amp; vPoint)</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;{</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d2/d0c/classez_simd_float.htm">ezSimdFloat</a> fDist = (vPoint - m_CenterAndRadius).GetLength&lt;3&gt;();</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160; </div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;  m_CenterAndRadius.SetW(fDist.Max(<a class="code" href="../../d4/db3/classez_simd_b_sphere.htm#a5d56a3cee32af2928dabaa3b3ebcd028">GetRadius</a>()));</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;}</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160; </div>
<div class="line"><a name="l00102"></a><span class="lineno"><a class="line" href="../../d4/db3/classez_simd_b_sphere.htm#a64898f13403515dd51dcfb9c5aac146c">  102</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="../../d4/db3/classez_simd_b_sphere.htm#a04e4abc95bc2454a974cebfe35a9515d">ezSimdBSphere::ExpandToInclude</a>(<span class="keyword">const</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>* pPoints, ezUInt32 uiNumPoints, ezUInt32 uiStride)</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;  EZ_ASSERT_DEBUG(pPoints != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;The array must not be empty.&quot;</span>);</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;  EZ_ASSERT_DEBUG(uiStride &gt;= <span class="keyword">sizeof</span>(<a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>), <span class="stringliteral">&quot;The data must not overlap.&quot;</span>);</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160; </div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>* pCur = pPoints;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160; </div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;  <a class="code" href="../../d2/d0c/classez_simd_float.htm">ezSimdFloat</a> fMaxDistSquare = <a class="code" href="../../d2/d0c/classez_simd_float.htm#a65f4e4eb30afc0f63ca9fbd2dae15bbc">ezSimdFloat::MakeZero</a>();</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160; </div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;  <span class="keywordflow">for</span> (ezUInt32 i = 0; i &lt; uiNumPoints; ++i)</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;  {</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="keyword">const</span> <a class="code" href="../../d2/d0c/classez_simd_float.htm">ezSimdFloat</a> fDistSQR = (*pCur - m_CenterAndRadius).GetLengthSquared&lt;3&gt;();</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    fMaxDistSquare = fMaxDistSquare.Max(fDistSQR);</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160; </div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    pCur = <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a0bedfdd60a93e5a48cd7e412a4aa984b">ezMemoryUtils::AddByteOffset</a>(pCur, uiStride);</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;  }</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160; </div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;  m_CenterAndRadius.SetW(fMaxDistSquare.GetSqrt().Max(<a class="code" href="../../d4/db3/classez_simd_b_sphere.htm#a5d56a3cee32af2928dabaa3b3ebcd028">GetRadius</a>()));</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;}</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160; </div>
<div class="line"><a name="l00122"></a><span class="lineno"><a class="line" href="../../d4/db3/classez_simd_b_sphere.htm#a65bffadf7f165a888399ec71649ab5b6">  122</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d4/db3/classez_simd_b_sphere.htm#a04e4abc95bc2454a974cebfe35a9515d">ezSimdBSphere::ExpandToInclude</a>(<span class="keyword">const</span> <a class="code" href="../../d4/db3/classez_simd_b_sphere.htm">ezSimdBSphere</a>&amp; rhs)</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;{</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d2/d0c/classez_simd_float.htm">ezSimdFloat</a> fReqRadius = (rhs.m_CenterAndRadius - m_CenterAndRadius).GetLength&lt;3&gt;() + rhs.<a class="code" href="../../d4/db3/classez_simd_b_sphere.htm#a5d56a3cee32af2928dabaa3b3ebcd028">GetRadius</a>();</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160; </div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;  m_CenterAndRadius.SetW(fReqRadius.Max(<a class="code" href="../../d4/db3/classez_simd_b_sphere.htm#a5d56a3cee32af2928dabaa3b3ebcd028">GetRadius</a>()));</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;}</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160; </div>
<div class="line"><a name="l00129"></a><span class="lineno"><a class="line" href="../../d4/db3/classez_simd_b_sphere.htm#a63a881e4abae7f7a84cd8959bc1736d6">  129</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="../../d4/db3/classez_simd_b_sphere.htm#a63a881e4abae7f7a84cd8959bc1736d6">ezSimdBSphere::Transform</a>(<span class="keyword">const</span> <a class="code" href="../../da/d8b/classez_simd_transform.htm">ezSimdTransform</a>&amp; t)</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;{</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;  <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> newCenterAndRadius = t.TransformPosition(m_CenterAndRadius);</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;  newCenterAndRadius.SetW(t.<a class="code" href="../../da/d8b/classez_simd_transform.htm#a799b07d64f592516f8030f89d3c787e6">GetMaxScale</a>() * <a class="code" href="../../d4/db3/classez_simd_b_sphere.htm#a5d56a3cee32af2928dabaa3b3ebcd028">GetRadius</a>());</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160; </div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;  m_CenterAndRadius = newCenterAndRadius;</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;}</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160; </div>
<div class="line"><a name="l00137"></a><span class="lineno"><a class="line" href="../../d4/db3/classez_simd_b_sphere.htm#a6ca07efc7012eb851dd6651ce6ced83d">  137</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="../../d4/db3/classez_simd_b_sphere.htm#a63a881e4abae7f7a84cd8959bc1736d6">ezSimdBSphere::Transform</a>(<span class="keyword">const</span> <a class="code" href="../../d2/d62/classez_simd_mat4f.htm">ezSimdMat4f</a>&amp; mMat)</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;{</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;  <a class="code" href="../../d2/d0c/classez_simd_float.htm">ezSimdFloat</a> radius = m_CenterAndRadius.w();</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;  m_CenterAndRadius = mMat.<a class="code" href="../../d2/d62/classez_simd_mat4f.htm#a849d351580f175be2956da10ac443d02">TransformPosition</a>(m_CenterAndRadius);</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160; </div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;  <a class="code" href="../../d2/d0c/classez_simd_float.htm">ezSimdFloat</a> maxRadius = mMat.m_col0.Dot&lt;3&gt;(mMat.m_col0);</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  maxRadius = maxRadius.Max(mMat.m_col1.Dot&lt;3&gt;(mMat.m_col1));</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;  maxRadius = maxRadius.Max(mMat.m_col2.Dot&lt;3&gt;(mMat.m_col2));</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;  radius *= maxRadius.GetSqrt();</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160; </div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;  m_CenterAndRadius.SetW(radius);</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;}</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160; </div>
<div class="line"><a name="l00150"></a><span class="lineno"><a class="line" href="../../d4/db3/classez_simd_b_sphere.htm#a5b55fc5c83a88326dd15ebe8f04a51d2">  150</a></span>&#160;EZ_ALWAYS_INLINE <a class="code" href="../../d2/d0c/classez_simd_float.htm">ezSimdFloat</a> <a class="code" href="../../d4/db3/classez_simd_b_sphere.htm#a5b55fc5c83a88326dd15ebe8f04a51d2">ezSimdBSphere::GetDistanceTo</a>(<span class="keyword">const</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>&amp; vPoint)<span class="keyword"> const</span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;  <span class="keywordflow">return</span> (vPoint - m_CenterAndRadius).GetLength&lt;3&gt;() - <a class="code" href="../../d4/db3/classez_simd_b_sphere.htm#a5d56a3cee32af2928dabaa3b3ebcd028">GetRadius</a>();</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;}</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160; </div>
<div class="line"><a name="l00155"></a><span class="lineno"><a class="line" href="../../d4/db3/classez_simd_b_sphere.htm#afa99a018202fdd89a8a9ed0148405e02">  155</a></span>&#160;EZ_ALWAYS_INLINE <a class="code" href="../../d2/d0c/classez_simd_float.htm">ezSimdFloat</a> <a class="code" href="../../d4/db3/classez_simd_b_sphere.htm#a5b55fc5c83a88326dd15ebe8f04a51d2">ezSimdBSphere::GetDistanceTo</a>(<span class="keyword">const</span> <a class="code" href="../../d4/db3/classez_simd_b_sphere.htm">ezSimdBSphere</a>&amp; rhs)<span class="keyword"> const</span></div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;  <span class="keywordflow">return</span> (rhs.m_CenterAndRadius - m_CenterAndRadius).GetLength&lt;3&gt;() - <a class="code" href="../../d4/db3/classez_simd_b_sphere.htm#a5d56a3cee32af2928dabaa3b3ebcd028">GetRadius</a>() - rhs.<a class="code" href="../../d4/db3/classez_simd_b_sphere.htm#a5d56a3cee32af2928dabaa3b3ebcd028">GetRadius</a>();</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;}</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160; </div>
<div class="line"><a name="l00160"></a><span class="lineno"><a class="line" href="../../d4/db3/classez_simd_b_sphere.htm#af0c188f366de19a871e96c948845e6cb">  160</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../d4/db3/classez_simd_b_sphere.htm#af0c188f366de19a871e96c948845e6cb">ezSimdBSphere::Contains</a>(<span class="keyword">const</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>&amp; vPoint)<span class="keyword"> const</span></div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;  <a class="code" href="../../d2/d0c/classez_simd_float.htm">ezSimdFloat</a> radius = <a class="code" href="../../d4/db3/classez_simd_b_sphere.htm#a5d56a3cee32af2928dabaa3b3ebcd028">GetRadius</a>();</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;  <span class="keywordflow">return</span> (vPoint - m_CenterAndRadius).GetLengthSquared&lt;3&gt;() &lt;= (radius * radius);</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;}</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160; </div>
<div class="line"><a name="l00166"></a><span class="lineno"><a class="line" href="../../d4/db3/classez_simd_b_sphere.htm#a8b51e9fe2ad48d4dab7bd0da34be1916">  166</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../d4/db3/classez_simd_b_sphere.htm#af0c188f366de19a871e96c948845e6cb">ezSimdBSphere::Contains</a>(<span class="keyword">const</span> <a class="code" href="../../d4/db3/classez_simd_b_sphere.htm">ezSimdBSphere</a>&amp; rhs)<span class="keyword"> const</span></div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;  <span class="keywordflow">return</span> (rhs.m_CenterAndRadius - m_CenterAndRadius).GetLength&lt;3&gt;() + rhs.<a class="code" href="../../d4/db3/classez_simd_b_sphere.htm#a5d56a3cee32af2928dabaa3b3ebcd028">GetRadius</a>() &lt;= <a class="code" href="../../d4/db3/classez_simd_b_sphere.htm#a5d56a3cee32af2928dabaa3b3ebcd028">GetRadius</a>();</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;}</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160; </div>
<div class="line"><a name="l00171"></a><span class="lineno"><a class="line" href="../../d4/db3/classez_simd_b_sphere.htm#ad71ae5395e3a7642bf2444f571c45600">  171</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../d4/db3/classez_simd_b_sphere.htm#ad71ae5395e3a7642bf2444f571c45600">ezSimdBSphere::Overlaps</a>(<span class="keyword">const</span> <a class="code" href="../../d4/db3/classez_simd_b_sphere.htm">ezSimdBSphere</a>&amp; rhs)<span class="keyword"> const</span></div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;  <a class="code" href="../../d2/d0c/classez_simd_float.htm">ezSimdFloat</a> radius = (rhs.m_CenterAndRadius + m_CenterAndRadius).w();</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;  <span class="keywordflow">return</span> (rhs.m_CenterAndRadius - m_CenterAndRadius).GetLengthSquared&lt;3&gt;() &lt; (radius * radius);</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;}</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160; </div>
<div class="line"><a name="l00177"></a><span class="lineno"><a class="line" href="../../d4/db3/classez_simd_b_sphere.htm#aac88d0855ece66945791330da6d4ec4e">  177</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> <a class="code" href="../../d4/db3/classez_simd_b_sphere.htm#aac88d0855ece66945791330da6d4ec4e">ezSimdBSphere::GetClampedPoint</a>(<span class="keyword">const</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>&amp; vPoint)</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;{</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;  <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> vDir = vPoint - m_CenterAndRadius;</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;  <a class="code" href="../../d2/d0c/classez_simd_float.htm">ezSimdFloat</a> fDist = vDir.GetLengthAndNormalize&lt;3&gt;().Min(<a class="code" href="../../d4/db3/classez_simd_b_sphere.htm#a5d56a3cee32af2928dabaa3b3ebcd028">GetRadius</a>());</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160; </div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;  <span class="keywordflow">return</span> m_CenterAndRadius + (vDir * fDist);</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;}</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160; </div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> ezSimdBSphere::operator==(<span class="keyword">const</span> <a class="code" href="../../d4/db3/classez_simd_b_sphere.htm">ezSimdBSphere</a>&amp; rhs)<span class="keyword"> const</span></div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;  <span class="keywordflow">return</span> (m_CenterAndRadius == rhs.m_CenterAndRadius).AllSet();</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;}</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160; </div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> ezSimdBSphere::operator!=(<span class="keyword">const</span> <a class="code" href="../../d4/db3/classez_simd_b_sphere.htm">ezSimdBSphere</a>&amp; rhs)<span class="keyword"> const</span></div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;  <span class="keywordflow">return</span> (m_CenterAndRadius != rhs.m_CenterAndRadius).AnySet();</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;}</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassez_simd_b_sphere_htm_ad71ae5395e3a7642bf2444f571c45600"><div class="ttname"><a href="../../d4/db3/classez_simd_b_sphere.htm#ad71ae5395e3a7642bf2444f571c45600">ezSimdBSphere::Overlaps</a></div><div class="ttdeci">bool Overlaps(const ezSimdBSphere &amp;rhs) const</div><div class="ttdoc">Checks whether the two objects overlap.</div><div class="ttdef"><b>Definition:</b> SimdBSphere_inl.h:171</div></div>
<div class="ttc" id="aclassez_simd_float_htm_a65f4e4eb30afc0f63ca9fbd2dae15bbc"><div class="ttname"><a href="../../d2/d0c/classez_simd_float.htm#a65f4e4eb30afc0f63ca9fbd2dae15bbc">ezSimdFloat::MakeZero</a></div><div class="ttdeci">static ezSimdFloat MakeZero()</div><div class="ttdoc">Creates an ezSimdFloat that is initialized to zero.</div><div class="ttdef"><b>Definition:</b> FPUFloat_inl.h:36</div></div>
<div class="ttc" id="aclassez_simd_b_sphere_htm_a7f37c863cfaac1b1dc45ad4b66932d07"><div class="ttname"><a href="../../d4/db3/classez_simd_b_sphere.htm#a7f37c863cfaac1b1dc45ad4b66932d07">ezSimdBSphere::IsValid</a></div><div class="ttdeci">bool IsValid() const</div><div class="ttdoc">Returns whether the sphere has valid values.</div><div class="ttdef"><b>Definition:</b> SimdBSphere_inl.h:70</div></div>
<div class="ttc" id="aclassez_simd_transform_htm"><div class="ttname"><a href="../../da/d8b/classez_simd_transform.htm">ezSimdTransform</a></div><div class="ttdef"><b>Definition:</b> SimdTransform.h:5</div></div>
<div class="ttc" id="aclassez_simd_b_sphere_htm_a87921b8562f00a9bfa2a700d2af4731c"><div class="ttname"><a href="../../d4/db3/classez_simd_b_sphere.htm#a87921b8562f00a9bfa2a700d2af4731c">ezSimdBSphere::ezSimdBSphere</a></div><div class="ttdeci">ezSimdBSphere()</div><div class="ttdoc">Default constructor does not initialize any data.</div></div>
<div class="ttc" id="aclassez_simd_b_sphere_htm_aad104f6b716801a586d04f1706c56d15"><div class="ttname"><a href="../../d4/db3/classez_simd_b_sphere.htm#aad104f6b716801a586d04f1706c56d15">ezSimdBSphere::SetInvalid</a></div><div class="ttdeci">void SetInvalid()</div><div class="ttdoc">Sets the bounding sphere to invalid values.</div><div class="ttdef"><b>Definition:</b> SimdBSphere_inl.h:65</div></div>
<div class="ttc" id="aclassez_simd_b_sphere_htm"><div class="ttname"><a href="../../d4/db3/classez_simd_b_sphere.htm">ezSimdBSphere</a></div><div class="ttdef"><b>Definition:</b> SimdBSphere.h:5</div></div>
<div class="ttc" id="aclassez_simd_b_sphere_htm_a2a561f5b88bdb694d0db735c18312023"><div class="ttname"><a href="../../d4/db3/classez_simd_b_sphere.htm#a2a561f5b88bdb694d0db735c18312023">ezSimdBSphere::MakeFromCenterAndRadius</a></div><div class="ttdeci">static ezSimdBSphere MakeFromCenterAndRadius(const ezSimdVec4f &amp;vCenter, const ezSimdFloat &amp;fRadius)</div><div class="ttdoc">Creates a sphere with the provided center and radius.</div><div class="ttdef"><b>Definition:</b> SimdBSphere_inl.h:25</div></div>
<div class="ttc" id="aclassez_simd_b_sphere_htm_a0c0cf78fef995a9b31da75b83c70e6c0"><div class="ttname"><a href="../../d4/db3/classez_simd_b_sphere.htm#a0c0cf78fef995a9b31da75b83c70e6c0">ezSimdBSphere::MakeFromPoints</a></div><div class="ttdeci">static ezSimdBSphere MakeFromPoints(const ezSimdVec4f *pPoints, ezUInt32 uiNumPoints, ezUInt32 uiStride=sizeof(ezSimdVec4f))</div><div class="ttdoc">Creates a bounding sphere around the provided points.</div><div class="ttdef"><b>Definition:</b> SimdBSphere_inl.h:30</div></div>
<div class="ttc" id="aclassez_simd_b_sphere_htm_a63a881e4abae7f7a84cd8959bc1736d6"><div class="ttname"><a href="../../d4/db3/classez_simd_b_sphere.htm#a63a881e4abae7f7a84cd8959bc1736d6">ezSimdBSphere::Transform</a></div><div class="ttdeci">void Transform(const ezSimdTransform &amp;t)</div><div class="ttdoc">Transforms the sphere in its local space.</div><div class="ttdef"><b>Definition:</b> SimdBSphere_inl.h:129</div></div>
<div class="ttc" id="aclassez_memory_utils_htm_a0bedfdd60a93e5a48cd7e412a4aa984b"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm#a0bedfdd60a93e5a48cd7e412a4aa984b">ezMemoryUtils::AddByteOffset</a></div><div class="ttdeci">static T * AddByteOffset(T *pPtr, ptrdiff_t iOffset)</div><div class="ttdoc">Returns the address stored in ptr plus the given byte offset iOffset, cast to type T.</div></div>
<div class="ttc" id="aclassez_simd_b_sphere_htm_aac88d0855ece66945791330da6d4ec4e"><div class="ttname"><a href="../../d4/db3/classez_simd_b_sphere.htm#aac88d0855ece66945791330da6d4ec4e">ezSimdBSphere::GetClampedPoint</a></div><div class="ttdeci">ezSimdVec4f GetClampedPoint(const ezSimdVec4f &amp;vPoint)</div><div class="ttdoc">Clamps the given position to the volume of the sphere. The resulting point will always be inside the ...</div><div class="ttdef"><b>Definition:</b> SimdBSphere_inl.h:177</div></div>
<div class="ttc" id="aclassez_simd_b_sphere_htm_a98fda72e911391505db551a5d3cee2c6"><div class="ttname"><a href="../../d4/db3/classez_simd_b_sphere.htm#a98fda72e911391505db551a5d3cee2c6">ezSimdBSphere::MakeInvalid</a></div><div class="ttdeci">static ezSimdBSphere MakeInvalid(const ezSimdVec4f &amp;vCenter=ezSimdVec4f::MakeZero())</div><div class="ttdoc">Creates an 'invalid' sphere, with its center at the given position and a negative radius.</div><div class="ttdef"><b>Definition:</b> SimdBSphere_inl.h:18</div></div>
<div class="ttc" id="aclassez_simd_float_htm"><div class="ttname"><a href="../../d2/d0c/classez_simd_float.htm">ezSimdFloat</a></div><div class="ttdef"><b>Definition:</b> SimdFloat.h:6</div></div>
<div class="ttc" id="aclassez_simd_b_sphere_htm_a5b55fc5c83a88326dd15ebe8f04a51d2"><div class="ttname"><a href="../../d4/db3/classez_simd_b_sphere.htm#a5b55fc5c83a88326dd15ebe8f04a51d2">ezSimdBSphere::GetDistanceTo</a></div><div class="ttdeci">ezSimdFloat GetDistanceTo(const ezSimdVec4f &amp;vPoint) const</div><div class="ttdoc">Computes the distance of the point to the sphere's surface. Returns negative values for points inside...</div><div class="ttdef"><b>Definition:</b> SimdBSphere_inl.h:150</div></div>
<div class="ttc" id="aclassez_simd_transform_htm_a799b07d64f592516f8030f89d3c787e6"><div class="ttname"><a href="../../da/d8b/classez_simd_transform.htm#a799b07d64f592516f8030f89d3c787e6">ezSimdTransform::GetMaxScale</a></div><div class="ttdeci">ezSimdFloat GetMaxScale() const</div><div class="ttdoc">Returns the scale component with maximum magnitude.</div><div class="ttdef"><b>Definition:</b> SimdTransform_inl.h:54</div></div>
<div class="ttc" id="aclassez_simd_b_sphere_htm_a04e4abc95bc2454a974cebfe35a9515d"><div class="ttname"><a href="../../d4/db3/classez_simd_b_sphere.htm#a04e4abc95bc2454a974cebfe35a9515d">ezSimdBSphere::ExpandToInclude</a></div><div class="ttdeci">void ExpandToInclude(const ezSimdVec4f &amp;vPoint)</div><div class="ttdoc">Increases the sphere's radius to include this point.</div><div class="ttdef"><b>Definition:</b> SimdBSphere_inl.h:95</div></div>
<div class="ttc" id="aclassez_simd_vec4f_htm_a1bbdedd947e594b431539062a2b50b95"><div class="ttname"><a href="../../db/d0d/classez_simd_vec4f.htm#a1bbdedd947e594b431539062a2b50b95">ezSimdVec4f::MakeZero</a></div><div class="ttdeci">static ezSimdVec4f MakeZero()</div><div class="ttdoc">Creates an ezSimdVec4f that is initialized to zero.</div><div class="ttdef"><b>Definition:</b> SimdVec4f_inl.h:8</div></div>
<div class="ttc" id="aclassez_simd_b_sphere_htm_ae7530c7a3db5058b7aa735d7075062f8"><div class="ttname"><a href="../../d4/db3/classez_simd_b_sphere.htm#ae7530c7a3db5058b7aa735d7075062f8">ezSimdBSphere::GetCenter</a></div><div class="ttdeci">ezSimdVec4f GetCenter() const</div><div class="ttdoc">Returns the center.</div><div class="ttdef"><b>Definition:</b> SimdBSphere_inl.h:80</div></div>
<div class="ttc" id="aclassez_simd_b_sphere_htm_a5d56a3cee32af2928dabaa3b3ebcd028"><div class="ttname"><a href="../../d4/db3/classez_simd_b_sphere.htm#a5d56a3cee32af2928dabaa3b3ebcd028">ezSimdBSphere::GetRadius</a></div><div class="ttdeci">ezSimdFloat GetRadius() const</div><div class="ttdoc">Returns the radius.</div><div class="ttdef"><b>Definition:</b> SimdBSphere_inl.h:85</div></div>
<div class="ttc" id="aclassez_simd_b_sphere_htm_ac068e1f17bf0d6bda63d853ffb53d26d"><div class="ttname"><a href="../../d4/db3/classez_simd_b_sphere.htm#ac068e1f17bf0d6bda63d853ffb53d26d">ezSimdBSphere::MakeZero</a></div><div class="ttdeci">static ezSimdBSphere MakeZero()</div><div class="ttdoc">Creates a sphere at the origin with radius zero.</div><div class="ttdef"><b>Definition:</b> SimdBSphere_inl.h:11</div></div>
<div class="ttc" id="aclassez_simd_b_sphere_htm_a2cb8d9443c9ae2e802220f223edbf6c2"><div class="ttname"><a href="../../d4/db3/classez_simd_b_sphere.htm#a2cb8d9443c9ae2e802220f223edbf6c2">ezSimdBSphere::SetFromPoints</a></div><div class="ttdeci">void SetFromPoints(const ezSimdVec4f *pPoints, ezUInt32 uiNumPoints, ezUInt32 uiStride=sizeof(ezSimdVec4f))</div><div class="ttdoc">Initializes the sphere to be the bounding sphere of all the given points.</div><div class="ttdef"><b>Definition:</b> SimdBSphere_inl.h:90</div></div>
<div class="ttc" id="aclassez_simd_mat4f_htm"><div class="ttname"><a href="../../d2/d62/classez_simd_mat4f.htm">ezSimdMat4f</a></div><div class="ttdoc">A 4x4 matrix class.</div><div class="ttdef"><b>Definition:</b> SimdMat4f.h:6</div></div>
<div class="ttc" id="aclassez_simd_mat4f_htm_a849d351580f175be2956da10ac443d02"><div class="ttname"><a href="../../d2/d62/classez_simd_mat4f.htm#a849d351580f175be2956da10ac443d02">ezSimdMat4f::TransformPosition</a></div><div class="ttdeci">ezSimdVec4f TransformPosition(const ezSimdVec4f &amp;v) const</div><div class="ttdoc">Matrix-vector multiplication, assuming the 4th component of the vector is one (default behavior).</div><div class="ttdef"><b>Definition:</b> SimdMat4f_inl.h:141</div></div>
<div class="ttc" id="aclassez_simd_vec4f_htm"><div class="ttname"><a href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a></div><div class="ttdoc">A 4-component SIMD vector class.</div><div class="ttdef"><b>Definition:</b> SimdVec4f.h:7</div></div>
<div class="ttc" id="aclassez_simd_b_sphere_htm_ab5d8eb31a6c6fc5651d363e71a10a0d7"><div class="ttname"><a href="../../d4/db3/classez_simd_b_sphere.htm#ab5d8eb31a6c6fc5651d363e71a10a0d7">ezSimdBSphere::IsNaN</a></div><div class="ttdeci">bool IsNaN() const</div><div class="ttdoc">Returns whether any value is NaN.</div><div class="ttdef"><b>Definition:</b> SimdBSphere_inl.h:75</div></div>
<div class="ttc" id="aclassez_simd_b_sphere_htm_af0c188f366de19a871e96c948845e6cb"><div class="ttname"><a href="../../d4/db3/classez_simd_b_sphere.htm#af0c188f366de19a871e96c948845e6cb">ezSimdBSphere::Contains</a></div><div class="ttdeci">bool Contains(const ezSimdVec4f &amp;vPoint) const</div><div class="ttdoc">Returns true if the given point is inside the sphere.</div><div class="ttdef"><b>Definition:</b> SimdBSphere_inl.h:160</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_6b9381ed4ec7e78ad4ad9509acce36a5.htm">SimdMath</a></li><li class="navelem"><a class="el" href="../../dir_3d955f3f3e7fff9f34f1ed045c0694e5.htm">Implementation</a></li><li class="navelem"><b>SimdBSphere_inl.h</b></li>
    <li class="footer">Generated on Tue Nov 7 2023 21:39:18 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
