<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: ezHistorySourcePass Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 24.09</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('da/dcd/classez_history_source_pass.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="../../df/d96/classez_history_source_pass-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ezHistorySourcePass Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Allows to access data from a previous frame. Always comes in a pair with a <a class="el" href="../../df/d71/classez_history_target_pass.htm" title="Allows to write data to be accessible in the next frame. See ezHistorySourcePass for usage.">ezHistoryTargetPass</a>. To preserve textures across the next frame you need to create this node to define the type of texture and initial state. This node's output pin will give access to the previous frame's content. Next, create an <a class="el" href="../../df/d71/classez_history_target_pass.htm" title="Allows to write data to be accessible in the next frame. See ezHistorySourcePass for usage.">ezHistoryTargetPass</a>. It's input pin exposes the same texture as provided by the source node but allows you to write to by connecting the input pin to another pass that produces the image that you want to carry to the next frame. To connect an <a class="el" href="../../df/d71/classez_history_target_pass.htm" title="Allows to write data to be accessible in the next frame. See ezHistorySourcePass for usage.">ezHistoryTargetPass</a> to its counterpart you need to set it's "SourcePassName" property to the name of the <a class="el" href="../../da/dcd/classez_history_source_pass.htm" title="Allows to access data from a previous frame. Always comes in a pair with a ezHistoryTargetPass....">ezHistorySourcePass</a> you want to match. As both nodes expose the same texture, special care has to be taken that it's not used as input and output of another pass at the same time. In those cases, add a <a class="el" href="../../d5/d6c/classez_copy_texture_pass.htm">ezCopyTexturePass</a> to break up invalid state.  
 <a href="../../da/dcd/classez_history_source_pass.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../de/d5a/_history_source_pass_8h_source.htm">HistorySourcePass.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for ezHistorySourcePass:</div>
<div class="dyncontent">
<div class="center"><img src="../../d9/d77/classez_history_source_pass__inherit__graph.png" border="0" usemap="#ez_history_source_pass_inherit__map" alt="Inheritance graph"/></div>
<map name="ez_history_source_pass_inherit__map" id="ez_history_source_pass_inherit__map">
<area shape="rect" title="Allows to access data from a previous frame. Always comes in a pair with a ezHistoryTargetPass...." alt="" coords="11,304,169,331"/>
<area shape="rect" href="../../d1/d0d/classez_render_pipeline_pass.htm" title=" " alt="" coords="8,229,172,256"/>
<area shape="rect" href="../../de/dd2/classez_render_pipeline_node.htm" title=" " alt="" coords="5,155,175,181"/>
<area shape="rect" href="../../db/d45/classez_reflected_class.htm" title="All classes that should be dynamically reflectable, need to be derived from this base class." alt="" coords="23,80,157,107"/>
<area shape="rect" href="../../d4/d02/classez_no_base.htm" title="Dummy type to pass to templates and macros that expect a base type for a class that has no base." alt="" coords="47,5,133,32"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a24b31a58829f21df4f08d7e7ffd56f11"><td class="memItemLeft" align="right" valign="top"><a id="a24b31a58829f21df4f08d7e7ffd56f11"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>ezHistorySourcePass</b> (const char *szName=&quot;HistorySourcePass&quot;)</td></tr>
<tr class="separator:a24b31a58829f21df4f08d7e7ffd56f11"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7988e11cb6b8fe71e96d4101a967a9ae"><td class="memItemLeft" align="right" valign="top"><a id="a7988e11cb6b8fe71e96d4101a967a9ae"></a>
virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dcd/classez_history_source_pass.htm#a7988e11cb6b8fe71e96d4101a967a9ae">GetRenderTargetDescriptions</a> (const <a class="el" href="../../d2/d23/classez_view.htm">ezView</a> &amp;view, const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; <a class="el" href="../../da/dad/structez_g_a_l_texture_creation_description.htm">ezGALTextureCreationDescription</a> *const &gt; inputs, <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; <a class="el" href="../../da/dad/structez_g_a_l_texture_creation_description.htm">ezGALTextureCreationDescription</a> &gt; outputs) override</td></tr>
<tr class="memdesc:a7988e11cb6b8fe71e96d4101a967a9ae"><td class="mdescLeft">&#160;</td><td class="mdescRight">For a given input pin configuration, provide the output configuration of this node. Outputs is already resized to the number of output pins. <br /></td></tr>
<tr class="separator:a7988e11cb6b8fe71e96d4101a967a9ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b5e943c63e4ea1bc9d93a9770e87ff9"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../de/d27/classez_g_a_l_texture_handle.htm">ezGALTextureHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dcd/classez_history_source_pass.htm#a0b5e943c63e4ea1bc9d93a9770e87ff9">QueryTextureProvider</a> (const <a class="el" href="../../d9/d96/structez_render_pipeline_node_pin.htm">ezRenderPipelineNodePin</a> *pPin, const <a class="el" href="../../da/dad/structez_g_a_l_texture_creation_description.htm">ezGALTextureCreationDescription</a> &amp;desc) override</td></tr>
<tr class="separator:a0b5e943c63e4ea1bc9d93a9770e87ff9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0aee68aab39c35a94c43f56a1aa8ca30"><td class="memItemLeft" align="right" valign="top"><a id="a0aee68aab39c35a94c43f56a1aa8ca30"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dcd/classez_history_source_pass.htm#a0aee68aab39c35a94c43f56a1aa8ca30">Execute</a> (const <a class="el" href="../../d7/d76/structez_render_view_context.htm">ezRenderViewContext</a> &amp;renderViewContext, const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; <a class="el" href="../../d5/d3f/structez_render_pipeline_pass_connection.htm">ezRenderPipelinePassConnection</a> *const &gt; inputs, const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; <a class="el" href="../../d5/d3f/structez_render_pipeline_pass_connection.htm">ezRenderPipelinePassConnection</a> *const &gt; outputs) override</td></tr>
<tr class="memdesc:a0aee68aab39c35a94c43f56a1aa8ca30"><td class="mdescLeft">&#160;</td><td class="mdescRight">Render into outputs. Both inputs and outputs are passed in with actual texture handles. Disconnected pins have a nullptr value in the passed in arrays. You can now create views and render target setups on the fly and fill the output targets with data. <br /></td></tr>
<tr class="separator:a0aee68aab39c35a94c43f56a1aa8ca30"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abec084f19e5fe62b0b52543555695e7f"><td class="memItemLeft" align="right" valign="top"><a id="abec084f19e5fe62b0b52543555695e7f"></a>
virtual <a class="el" href="../../d4/da9/structez_result.htm">ezResult</a>&#160;</td><td class="memItemRight" valign="bottom"><b>Serialize</b> (<a class="el" href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a> &amp;inout_stream) const override</td></tr>
<tr class="separator:abec084f19e5fe62b0b52543555695e7f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2db960a9d34cf270be392dd1036ec91c"><td class="memItemLeft" align="right" valign="top"><a id="a2db960a9d34cf270be392dd1036ec91c"></a>
virtual <a class="el" href="../../d4/da9/structez_result.htm">ezResult</a>&#160;</td><td class="memItemRight" valign="bottom"><b>Deserialize</b> (<a class="el" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a> &amp;inout_stream) override</td></tr>
<tr class="separator:a2db960a9d34cf270be392dd1036ec91c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classez_render_pipeline_pass"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classez_render_pipeline_pass')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../d1/d0d/classez_render_pipeline_pass.htm">ezRenderPipelinePass</a></td></tr>
<tr class="memitem:a3ca39ec398488b94ebc1a12e256632e2 inherit pub_methods_classez_render_pipeline_pass"><td class="memItemLeft" align="right" valign="top"><a id="a3ca39ec398488b94ebc1a12e256632e2"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>ezRenderPipelinePass</b> (const char *szName, bool bIsStereoAware=false)</td></tr>
<tr class="separator:a3ca39ec398488b94ebc1a12e256632e2 inherit pub_methods_classez_render_pipeline_pass"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad76fefc9d0a60ae7e18366d14f71ec6c inherit pub_methods_classez_render_pipeline_pass"><td class="memItemLeft" align="right" valign="top"><a id="ad76fefc9d0a60ae7e18366d14f71ec6c"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d0d/classez_render_pipeline_pass.htm#ad76fefc9d0a60ae7e18366d14f71ec6c">SetName</a> (const char *szName)</td></tr>
<tr class="memdesc:ad76fefc9d0a60ae7e18366d14f71ec6c inherit pub_methods_classez_render_pipeline_pass"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the name of the pass. <br /></td></tr>
<tr class="separator:ad76fefc9d0a60ae7e18366d14f71ec6c inherit pub_methods_classez_render_pipeline_pass"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f11834c0e221063911fb6f380cd560f inherit pub_methods_classez_render_pipeline_pass"><td class="memItemLeft" align="right" valign="top"><a id="a0f11834c0e221063911fb6f380cd560f"></a>
const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d0d/classez_render_pipeline_pass.htm#a0f11834c0e221063911fb6f380cd560f">GetName</a> () const</td></tr>
<tr class="memdesc:a0f11834c0e221063911fb6f380cd560f inherit pub_methods_classez_render_pipeline_pass"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the name of the pass. <br /></td></tr>
<tr class="separator:a0f11834c0e221063911fb6f380cd560f inherit pub_methods_classez_render_pipeline_pass"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa45954c7cf15f480180f23110134069b inherit pub_methods_classez_render_pipeline_pass"><td class="memItemLeft" align="right" valign="top"><a id="aa45954c7cf15f480180f23110134069b"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d0d/classez_render_pipeline_pass.htm#aa45954c7cf15f480180f23110134069b">IsStereoAware</a> () const</td></tr>
<tr class="memdesc:aa45954c7cf15f480180f23110134069b inherit pub_methods_classez_render_pipeline_pass"><td class="mdescLeft">&#160;</td><td class="mdescRight">True if the render pipeline pass can handle stereo cameras correctly. <br /></td></tr>
<tr class="separator:aa45954c7cf15f480180f23110134069b inherit pub_methods_classez_render_pipeline_pass"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a618d3f94d1eb4180faa1cfa4438cb0e2 inherit pub_methods_classez_render_pipeline_pass"><td class="memItemLeft" align="right" valign="top"><a id="a618d3f94d1eb4180faa1cfa4438cb0e2"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d0d/classez_render_pipeline_pass.htm#a618d3f94d1eb4180faa1cfa4438cb0e2">InitRenderPipelinePass</a> (const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; <a class="el" href="../../d5/d3f/structez_render_pipeline_pass_connection.htm">ezRenderPipelinePassConnection</a> *const &gt; inputs, const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; <a class="el" href="../../d5/d3f/structez_render_pipeline_pass_connection.htm">ezRenderPipelinePassConnection</a> *const &gt; outputs)</td></tr>
<tr class="memdesc:a618d3f94d1eb4180faa1cfa4438cb0e2 inherit pub_methods_classez_render_pipeline_pass"><td class="mdescLeft">&#160;</td><td class="mdescRight">After GetRenderTargetDescriptions was called successfully for each pass, this function is called with the inputs and outputs for review. Disconnected pins have a nullptr value in the passed in arrays. This is the time to create additional resources that are not covered by the pins automatically, e.g. a picking texture or eye adaptation buffer. <br /></td></tr>
<tr class="separator:a618d3f94d1eb4180faa1cfa4438cb0e2 inherit pub_methods_classez_render_pipeline_pass"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a922e7a676c1ca72c48416427a74d61f4 inherit pub_methods_classez_render_pipeline_pass"><td class="memItemLeft" align="right" valign="top"><a id="a922e7a676c1ca72c48416427a74d61f4"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><b>ExecuteInactive</b> (const <a class="el" href="../../d7/d76/structez_render_view_context.htm">ezRenderViewContext</a> &amp;renderViewContext, const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; <a class="el" href="../../d5/d3f/structez_render_pipeline_pass_connection.htm">ezRenderPipelinePassConnection</a> *const &gt; inputs, const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; <a class="el" href="../../d5/d3f/structez_render_pipeline_pass_connection.htm">ezRenderPipelinePassConnection</a> *const &gt; outputs)</td></tr>
<tr class="separator:a922e7a676c1ca72c48416427a74d61f4 inherit pub_methods_classez_render_pipeline_pass"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c4f71e9c47684c7a59cbb80e6bf4574 inherit pub_methods_classez_render_pipeline_pass"><td class="memItemLeft" align="right" valign="top"><a id="a9c4f71e9c47684c7a59cbb80e6bf4574"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d0d/classez_render_pipeline_pass.htm#a9c4f71e9c47684c7a59cbb80e6bf4574">ReadBackProperties</a> (<a class="el" href="../../d2/d23/classez_view.htm">ezView</a> *pView)</td></tr>
<tr class="memdesc:a9c4f71e9c47684c7a59cbb80e6bf4574 inherit pub_methods_classez_render_pipeline_pass"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allows for the pass to write data back using ezView::SetRenderPassReadBackProperty. E.g. picking results etc. <br /></td></tr>
<tr class="separator:a9c4f71e9c47684c7a59cbb80e6bf4574 inherit pub_methods_classez_render_pipeline_pass"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ee2da04b97813a1c68e012eb43aefe3 inherit pub_methods_classez_render_pipeline_pass"><td class="memItemLeft" align="right" valign="top"><a id="a8ee2da04b97813a1c68e012eb43aefe3"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>RenderDataWithCategory</b> (const <a class="el" href="../../d7/d76/structez_render_view_context.htm">ezRenderViewContext</a> &amp;renderViewContext, <a class="el" href="../../de/dc4/structez_render_data_1_1_category.htm">ezRenderData::Category</a> category, <a class="el" href="../../d1/d11/classez_render_data_batch.htm#a087f38efdb94ed5f585ae553330597b3">ezRenderDataBatch::Filter</a> filter=<a class="el" href="../../d1/d11/classez_render_data_batch.htm#a087f38efdb94ed5f585ae553330597b3">ezRenderDataBatch::Filter</a>())</td></tr>
<tr class="separator:a8ee2da04b97813a1c68e012eb43aefe3 inherit pub_methods_classez_render_pipeline_pass"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9b24d40d1d0ce249e83c92ea9156e8e3 inherit pub_methods_classez_render_pipeline_pass"><td class="memItemLeft" align="right" valign="top"><a id="a9b24d40d1d0ce249e83c92ea9156e8e3"></a>
EZ_ALWAYS_INLINE <a class="el" href="../../d8/dfa/classez_render_pipeline.htm">ezRenderPipeline</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetPipeline</b> ()</td></tr>
<tr class="separator:a9b24d40d1d0ce249e83c92ea9156e8e3 inherit pub_methods_classez_render_pipeline_pass"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9a66c725f8cd972b8a0f9bef7b11f7b inherit pub_methods_classez_render_pipeline_pass"><td class="memItemLeft" align="right" valign="top"><a id="ad9a66c725f8cd972b8a0f9bef7b11f7b"></a>
const EZ_ALWAYS_INLINE <a class="el" href="../../d8/dfa/classez_render_pipeline.htm">ezRenderPipeline</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetPipeline</b> () const</td></tr>
<tr class="separator:ad9a66c725f8cd972b8a0f9bef7b11f7b inherit pub_methods_classez_render_pipeline_pass"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classez_render_pipeline_node"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classez_render_pipeline_node')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../de/dd2/classez_render_pipeline_node.htm">ezRenderPipelineNode</a></td></tr>
<tr class="memitem:a8aabb3f7a9b7996994ff7add1c989f1a inherit pub_methods_classez_render_pipeline_node"><td class="memItemLeft" align="right" valign="top"><a id="a8aabb3f7a9b7996994ff7add1c989f1a"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>InitializePins</b> ()</td></tr>
<tr class="separator:a8aabb3f7a9b7996994ff7add1c989f1a inherit pub_methods_classez_render_pipeline_node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae08eab06edc74e1d4ee0bab1eb044307 inherit pub_methods_classez_render_pipeline_node"><td class="memItemLeft" align="right" valign="top"><a id="ae08eab06edc74e1d4ee0bab1eb044307"></a>
<a class="el" href="../../de/dce/classez_hashed_string.htm">ezHashedString</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetPinName</b> (const <a class="el" href="../../d9/d96/structez_render_pipeline_node_pin.htm">ezRenderPipelineNodePin</a> *pPin) const</td></tr>
<tr class="separator:ae08eab06edc74e1d4ee0bab1eb044307 inherit pub_methods_classez_render_pipeline_node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2000e365002b33fc40693be37012a514 inherit pub_methods_classez_render_pipeline_node"><td class="memItemLeft" align="right" valign="top"><a id="a2000e365002b33fc40693be37012a514"></a>
const <a class="el" href="../../d9/d96/structez_render_pipeline_node_pin.htm">ezRenderPipelineNodePin</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetPinByName</b> (const char *szName) const</td></tr>
<tr class="separator:a2000e365002b33fc40693be37012a514 inherit pub_methods_classez_render_pipeline_node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d4061807b66370ff217a07a4e715ad2 inherit pub_methods_classez_render_pipeline_node"><td class="memItemLeft" align="right" valign="top"><a id="a5d4061807b66370ff217a07a4e715ad2"></a>
const <a class="el" href="../../d9/d96/structez_render_pipeline_node_pin.htm">ezRenderPipelineNodePin</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetPinByName</b> (<a class="el" href="../../de/dce/classez_hashed_string.htm">ezHashedString</a> sName) const</td></tr>
<tr class="separator:a5d4061807b66370ff217a07a4e715ad2 inherit pub_methods_classez_render_pipeline_node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea8bebf2a79022fcf41af041c8629435 inherit pub_methods_classez_render_pipeline_node"><td class="memItemLeft" align="right" valign="top"><a id="aea8bebf2a79022fcf41af041c8629435"></a>
const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; const <a class="el" href="../../d9/d96/structez_render_pipeline_node_pin.htm">ezRenderPipelineNodePin</a> *const  &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetInputPins</b> () const</td></tr>
<tr class="separator:aea8bebf2a79022fcf41af041c8629435 inherit pub_methods_classez_render_pipeline_node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6967689b044288ab674135fc53e8043e inherit pub_methods_classez_render_pipeline_node"><td class="memItemLeft" align="right" valign="top"><a id="a6967689b044288ab674135fc53e8043e"></a>
const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; const <a class="el" href="../../d9/d96/structez_render_pipeline_node_pin.htm">ezRenderPipelineNodePin</a> *const  &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetOutputPins</b> () const</td></tr>
<tr class="separator:a6967689b044288ab674135fc53e8043e inherit pub_methods_classez_render_pipeline_node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classez_reflected_class"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classez_reflected_class')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../db/d45/classez_reflected_class.htm">ezReflectedClass</a></td></tr>
<tr class="memitem:a36b3c91f3b77fee7a0e4c7d262735a89 inherit pub_methods_classez_reflected_class"><td class="memItemLeft" align="right" valign="top"><a id="a36b3c91f3b77fee7a0e4c7d262735a89"></a>
virtual const <a class="el" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetDynamicRTTI</b> () const</td></tr>
<tr class="separator:a36b3c91f3b77fee7a0e4c7d262735a89 inherit pub_methods_classez_reflected_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab746c8e33a03b96c25b117ee04cf6f00 inherit pub_methods_classez_reflected_class"><td class="memItemLeft" align="right" valign="top"><a id="ab746c8e33a03b96c25b117ee04cf6f00"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d45/classez_reflected_class.htm#ab746c8e33a03b96c25b117ee04cf6f00">IsInstanceOf</a> (const <a class="el" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a> *pType) const</td></tr>
<tr class="memdesc:ab746c8e33a03b96c25b117ee04cf6f00 inherit pub_methods_classez_reflected_class"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the type of this instance is of the given type or derived from it. <br /></td></tr>
<tr class="separator:ab746c8e33a03b96c25b117ee04cf6f00 inherit pub_methods_classez_reflected_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86c6a804cc97a425928bce744607400a inherit pub_methods_classez_reflected_class"><td class="memTemplParams" colspan="2"><a id="a86c6a804cc97a425928bce744607400a"></a>
template&lt;typename T &gt; </td></tr>
<tr class="memitem:a86c6a804cc97a425928bce744607400a inherit pub_methods_classez_reflected_class"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../db/d45/classez_reflected_class.htm#a86c6a804cc97a425928bce744607400a">IsInstanceOf</a> () const</td></tr>
<tr class="memdesc:a86c6a804cc97a425928bce744607400a inherit pub_methods_classez_reflected_class"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the type of this instance is of the given type or derived from it. <br /></td></tr>
<tr class="separator:a86c6a804cc97a425928bce744607400a inherit pub_methods_classez_reflected_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:ac81d0a1a9697be3a365bb80772e45748"><td class="memItemLeft" align="right" valign="top"><a id="ac81d0a1a9697be3a365bb80772e45748"></a>
<a class="el" href="../../d1/d11/structez_render_pipeline_node_output_provider_pin.htm">ezRenderPipelineNodeOutputProviderPin</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_PinOutput</b></td></tr>
<tr class="separator:ac81d0a1a9697be3a365bb80772e45748"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae262b86935d144b188f1c133705146d5"><td class="memItemLeft" align="right" valign="top"><a id="ae262b86935d144b188f1c133705146d5"></a>
<a class="el" href="../../d6/dd9/structez_enum.htm">ezEnum</a>&lt; <a class="el" href="../../db/d6b/structez_source_format.htm">ezSourceFormat</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_Format</b> = ezSourceFormat::Default</td></tr>
<tr class="separator:ae262b86935d144b188f1c133705146d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeac3530ff23dcd42ed0aef33f35afbc9"><td class="memItemLeft" align="right" valign="top"><a id="aeac3530ff23dcd42ed0aef33f35afbc9"></a>
<a class="el" href="../../d6/dd9/structez_enum.htm">ezEnum</a>&lt; <a class="el" href="../../d8/d1f/structez_g_a_l_m_s_a_a_sample_count.htm">ezGALMSAASampleCount</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_MsaaMode</b> = ezGALMSAASampleCount::None</td></tr>
<tr class="separator:aeac3530ff23dcd42ed0aef33f35afbc9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b4699d246e99718eb050d11af86e308"><td class="memItemLeft" align="right" valign="top"><a id="a5b4699d246e99718eb050d11af86e308"></a>
<a class="el" href="../../dd/d01/classez_color.htm">ezColor</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_ClearColor</b> = <a class="el" href="../../dd/d01/classez_color.htm#a43dc57a70163f540c60e47e531399106">ezColor::Black</a></td></tr>
<tr class="separator:a5b4699d246e99718eb050d11af86e308"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a498797fd4ccabb2da6f12c6863d79092"><td class="memItemLeft" align="right" valign="top"><a id="a498797fd4ccabb2da6f12c6863d79092"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>m_bFirstExecute</b> = true</td></tr>
<tr class="separator:a498797fd4ccabb2da6f12c6863d79092"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_static_methods_classez_no_base"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_classez_no_base')"><img src="../../closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="../../d4/d02/classez_no_base.htm">ezNoBase</a></td></tr>
<tr class="memitem:ad676281ced156eb886aa4f74a2a45d2f inherit pub_static_methods_classez_no_base"><td class="memItemLeft" align="right" valign="top"><a id="ad676281ced156eb886aa4f74a2a45d2f"></a>
static const <a class="el" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetStaticRTTI</b> ()</td></tr>
<tr class="separator:ad676281ced156eb886aa4f74a2a45d2f inherit pub_static_methods_classez_no_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Allows to access data from a previous frame. Always comes in a pair with a <a class="el" href="../../df/d71/classez_history_target_pass.htm" title="Allows to write data to be accessible in the next frame. See ezHistorySourcePass for usage.">ezHistoryTargetPass</a>. To preserve textures across the next frame you need to create this node to define the type of texture and initial state. This node's output pin will give access to the previous frame's content. Next, create an <a class="el" href="../../df/d71/classez_history_target_pass.htm" title="Allows to write data to be accessible in the next frame. See ezHistorySourcePass for usage.">ezHistoryTargetPass</a>. It's input pin exposes the same texture as provided by the source node but allows you to write to by connecting the input pin to another pass that produces the image that you want to carry to the next frame. To connect an <a class="el" href="../../df/d71/classez_history_target_pass.htm" title="Allows to write data to be accessible in the next frame. See ezHistorySourcePass for usage.">ezHistoryTargetPass</a> to its counterpart you need to set it's "SourcePassName" property to the name of the <a class="el" href="../../da/dcd/classez_history_source_pass.htm" title="Allows to access data from a previous frame. Always comes in a pair with a ezHistoryTargetPass....">ezHistorySourcePass</a> you want to match. As both nodes expose the same texture, special care has to be taken that it's not used as input and output of another pass at the same time. In those cases, add a <a class="el" href="../../d5/d6c/classez_copy_texture_pass.htm">ezCopyTexturePass</a> to break up invalid state. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a0b5e943c63e4ea1bc9d93a9770e87ff9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0b5e943c63e4ea1bc9d93a9770e87ff9">&#9670;&nbsp;</a></span>QueryTextureProvider()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../de/d27/classez_g_a_l_texture_handle.htm">ezGALTextureHandle</a> ezHistorySourcePass::QueryTextureProvider </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d9/d96/structez_render_pipeline_node_pin.htm">ezRenderPipelineNodePin</a> *&#160;</td>
          <td class="paramname"><em>pPin</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../da/dad/structez_g_a_l_texture_creation_description.htm">ezGALTextureCreationDescription</a> &amp;&#160;</td>
          <td class="paramname"><em>desc</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Returns the current texture this node provides at the given *ProviderPin. This function is called every frame if this node holds a <a class="el" href="../../d1/d2e/structez_render_pipeline_node_input_provider_pin.htm">ezRenderPipelineNodeInputProviderPin</a> or <a class="el" href="../../d1/d11/structez_render_pipeline_node_output_provider_pin.htm">ezRenderPipelineNodeOutputProviderPin</a> pin. The node can return a valid texture handle, or an invalid handle, in which case the missing texture will be created from the texture pool. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pPin</td><td>The member pin for which the texture is requested. </td></tr>
    <tr><td class="paramname">desc</td><td>The format of the texture that should be provided. </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The texture to use for this pin's connections. Or invalid, in which case it reverts to a regular input / output pin. </dd></dl>

<p>Reimplemented from <a class="el" href="../../d1/d0d/classez_render_pipeline_pass.htm#a0ce843074aa4a8346c426ce9a718153c">ezRenderPipelinePass</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/RendererCore/Pipeline/Passes/<a class="el" href="../../de/d5a/_history_source_pass_8h_source.htm">HistorySourcePass.h</a></li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/RendererCore/Pipeline/Implementation/Passes/HistorySourcePass.cpp</li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../da/dcd/classez_history_source_pass.htm">ezHistorySourcePass</a></li>
    <li class="footer">Generated on Sun Aug 25 2024 13:06:28 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
