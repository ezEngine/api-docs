<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Memory/MemoryUtils.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 22.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('da/d0b/_memory_utils_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">MemoryUtils.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;Foundation/Basics.h&gt;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;cstdint&gt;</span> <span class="comment">// for uintptr_t</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160; </div>
<div class="line"><a name="l00019"></a><span class="lineno"><a class="line" href="../../dc/d4d/classez_memory_utils.htm">   19</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../dc/d4d/classez_memory_utils.htm">ezMemoryUtils</a></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;{</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;  <span class="keyword">using</span> ConstructorFunction = void (*)(<span class="keywordtype">void</span>* pDestination);</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;  <span class="keyword">using</span> CopyConstructorFunction = void (*)(<span class="keywordtype">void</span>* pDestination, <span class="keyword">const</span> <span class="keywordtype">void</span>* pSource);</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;  <span class="keyword">using</span> DestructorFunction = void (*)(<span class="keywordtype">void</span>* pDestination);</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160; </div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a2944b511c0f4181b4b6a96b472df703f">Construct</a>(T* pDestination, <span class="keywordtype">size_t</span> uiCount); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160; </div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  <span class="keyword">static</span> ConstructorFunction <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a784da93eacf66f6fd369f5c93426f407">MakeConstructorFunction</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160; </div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#ac8fa5b7a4d059fb8c423be8ff75cfcf8">DefaultConstruct</a>(T* pDestination, <span class="keywordtype">size_t</span> uiCount); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160; </div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  <span class="keyword">static</span> ConstructorFunction <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a974eaaa7df95b7d10480cfa7f2f41992">MakeDefaultConstructorFunction</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160; </div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Destination, <span class="keyword">typename</span> Source&gt;</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#ab768b24491ab1feb611b5036d37e39f2">CopyConstruct</a>(Destination* pDestination, <span class="keyword">const</span> Source&amp; copy, <span class="keywordtype">size_t</span> uiCount); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160; </div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a4c12c5af647ec366b7a99b15cca9386b">CopyConstructArray</a>(T* pDestination, <span class="keyword">const</span> T* pSource, <span class="keywordtype">size_t</span> uiCount); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160; </div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;  <span class="keyword">static</span> CopyConstructorFunction <a class="code" href="../../dc/d4d/classez_memory_utils.htm#aa87226b4362949aa02ffbbea97bf14d0">MakeCopyConstructorFunction</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160; </div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a945a697e081b8f264a7b9d4ec8f66ffe">MoveConstruct</a>(T* pDestination, T&amp;&amp; source); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160; </div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a945a697e081b8f264a7b9d4ec8f66ffe">MoveConstruct</a>(T* pDestination, T* pSource, <span class="keywordtype">size_t</span> uiCount);</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160; </div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Destination, <span class="keyword">typename</span> Source&gt;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a0a8156e3c8c1686be6a27ddac6e5772f">CopyOrMoveConstruct</a>(Destination* pDestination, Source&amp;&amp; source);</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160; </div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a43ee17f152fe10a7e2cea71bdbf68521">RelocateConstruct</a>(T* pDestination, T* pSource, <span class="keywordtype">size_t</span> uiCount);</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160; </div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#aea6c4d3ce40c31abd9cc00fd94759c64">Destruct</a>(T* pDestination, <span class="keywordtype">size_t</span> uiCount); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160; </div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  <span class="keyword">static</span> DestructorFunction <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a30225d2e06fd8980244a0bc8a07b66bc">MakeDestructorFunction</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160; </div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a15ff9286bc6efd02271c6d61578b5c02">Copy</a>(T* pDestination, <span class="keyword">const</span> T* pSource, <span class="keywordtype">size_t</span> uiCount); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160; </div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a8f9eefe70348ce0b05f0bb5a884c9eae">RawByteCopy</a>(<span class="keywordtype">void</span>* pDestination, <span class="keyword">const</span> <span class="keywordtype">void</span>* pSource, <span class="keywordtype">size_t</span> uiNumBytesToCopy);</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160; </div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a3dcba6aa092c250b6569eed266df9184">CopyOverlapped</a>(T* pDestination, <span class="keyword">const</span> T* pSource, <span class="keywordtype">size_t</span> uiCount);</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160; </div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a5b91f2f466d6009ce02116e3397dfbfb">Relocate</a>(T* pDestination, T* pSource, <span class="keywordtype">size_t</span> uiCount); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160; </div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#adce58a6d9b1e90c6c4f59e1bb9004c61">RelocateOverlapped</a>(T* pDestination, T* pSource, <span class="keywordtype">size_t</span> uiCount); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160; </div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a9fd0a49960e146262101081c5ae0feeb">Prepend</a>(T* pDestination, <span class="keyword">const</span> T&amp; source, <span class="keywordtype">size_t</span> uiCount);</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160; </div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a9fd0a49960e146262101081c5ae0feeb">Prepend</a>(T* pDestination, T&amp;&amp; source, <span class="keywordtype">size_t</span> uiCount);</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160; </div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a9fd0a49960e146262101081c5ae0feeb">Prepend</a>(T* pDestination, <span class="keyword">const</span> T* source, <span class="keywordtype">size_t</span> uiSourceCount, <span class="keywordtype">size_t</span> uiCount);</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160; </div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a744d60b4b000c61f2dd3819a12410595">IsEqual</a>(<span class="keyword">const</span> T* a, <span class="keyword">const</span> T* b, <span class="keywordtype">size_t</span> uiCount = 1); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160; </div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#aed226ed6447ce30053c0b5b990b978ff">ZeroFill</a>(T* pDestination, <span class="keywordtype">size_t</span> uiCount); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160; </div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keywordtype">size_t</span> N&gt;</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#aed226ed6447ce30053c0b5b990b978ff">ZeroFill</a>(T (&amp;destination)[N]); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160; </div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a8357dd1b098551c03e6faa59f64968ae">PatternFill</a>(T* pDestination, ezUInt8 uiBytePattern, <span class="keywordtype">size_t</span> uiCount); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160; </div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keywordtype">size_t</span> N&gt;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a8357dd1b098551c03e6faa59f64968ae">PatternFill</a>(T (&amp;destination)[N], ezUInt8 uiBytePattern); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160; </div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;  <span class="keyword">static</span> ezInt32 <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a7671e5bce6bc9fd9636ab50206b0f033">Compare</a>(<span class="keyword">const</span> T* a, <span class="keyword">const</span> T* b, <span class="keywordtype">size_t</span> uiCount = 1); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160; </div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;  <span class="keyword">static</span> ezInt32 <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a9e6294897c28081e935147d72340788d">RawByteCompare</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* a, <span class="keyword">const</span> <span class="keywordtype">void</span>* b, <span class="keywordtype">size_t</span> uiNumBytesToCompare);</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160; </div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;  <span class="keyword">static</span> T* <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a154a2ccb52b2abdfdbe6d068948bc6b4">AddByteOffset</a>(T* ptr, ptrdiff_t iOffset); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160; </div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;  <span class="keyword">static</span> T* <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a7f5327cc82286e4d378b8101478c0eab">AlignBackwards</a>(T* ptr, <span class="keywordtype">size_t</span> uiAlignment); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160; </div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;  <span class="keyword">static</span> T* <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a5a6c549d62f7a9de30863c9ef22ed0f6">AlignForwards</a>(T* ptr, <span class="keywordtype">size_t</span> uiAlignment); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160; </div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;  <span class="keyword">static</span> T <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a2583fd48644a0a7b3eb72797c7c65a34">AlignSize</a>(T uiSize, T uiAlignment); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160; </div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#aa7c2521406e21cf4c64519a4a460dffe">IsAligned</a>(<span class="keyword">const</span> T* ptr, <span class="keywordtype">size_t</span> uiAlignment); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160; </div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a9fffe2aadea9b3876e558e8cc8a6a45b">IsSizeAligned</a>(T uiSize, T uiAlignment); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160; </div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a5c202a89351b70fe9701684071b47003">ReserveLower4GBAddressSpace</a>();</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160; </div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a2944b511c0f4181b4b6a96b472df703f">Construct</a>(T* pDestination, <span class="keywordtype">size_t</span> uiCount, <a class="code" href="../../d6/d09/structez_trait_int.htm">ezTypeIsPod</a>);</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a2944b511c0f4181b4b6a96b472df703f">Construct</a>(T* pDestination, <span class="keywordtype">size_t</span> uiCount, <a class="code" href="../../d6/d09/structez_trait_int.htm">ezTypeIsClass</a>);</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160; </div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;  <span class="keyword">static</span> ConstructorFunction <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a784da93eacf66f6fd369f5c93426f407">MakeConstructorFunction</a>(<a class="code" href="../../d6/d09/structez_trait_int.htm">ezTypeIsPod</a>);</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;  <span class="keyword">static</span> ConstructorFunction <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a784da93eacf66f6fd369f5c93426f407">MakeConstructorFunction</a>(<a class="code" href="../../d6/d09/structez_trait_int.htm">ezTypeIsClass</a>);</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160; </div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Destination, <span class="keyword">typename</span> Source&gt;</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#ab768b24491ab1feb611b5036d37e39f2">CopyConstruct</a>(Destination* pDestination, <span class="keyword">const</span> Source&amp; copy, <span class="keywordtype">size_t</span> uiCount, <a class="code" href="../../d6/d09/structez_trait_int.htm">ezTypeIsPod</a>);</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Destination, <span class="keyword">typename</span> Source&gt;</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#ab768b24491ab1feb611b5036d37e39f2">CopyConstruct</a>(Destination* pDestination, <span class="keyword">const</span> Source&amp; copy, <span class="keywordtype">size_t</span> uiCount, <a class="code" href="../../d6/d09/structez_trait_int.htm">ezTypeIsClass</a>);</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160; </div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a4c12c5af647ec366b7a99b15cca9386b">CopyConstructArray</a>(T* pDestination, <span class="keyword">const</span> T* pSource, <span class="keywordtype">size_t</span> uiCount, <a class="code" href="../../d6/d09/structez_trait_int.htm">ezTypeIsPod</a>);</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a4c12c5af647ec366b7a99b15cca9386b">CopyConstructArray</a>(T* pDestination, <span class="keyword">const</span> T* pSource, <span class="keywordtype">size_t</span> uiCount, <a class="code" href="../../d6/d09/structez_trait_int.htm">ezTypeIsClass</a>);</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160; </div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160; </div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;  <span class="keyword">using</span> NotRValueReference = std::false_type;</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;  <span class="keyword">using</span> IsRValueReference = std::true_type;</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160; </div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Destination, <span class="keyword">typename</span> Source&gt;</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a0a8156e3c8c1686be6a27ddac6e5772f">CopyOrMoveConstruct</a>(Destination* pDestination, <span class="keyword">const</span> Source&amp; source, NotRValueReference);</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Destination, <span class="keyword">typename</span> Source&gt;</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a0a8156e3c8c1686be6a27ddac6e5772f">CopyOrMoveConstruct</a>(Destination* pDestination, Source&amp;&amp; source, IsRValueReference);</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160; </div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a43ee17f152fe10a7e2cea71bdbf68521">RelocateConstruct</a>(T* pDestination, T* pSource, <span class="keywordtype">size_t</span> uiCount, <a class="code" href="../../d6/d09/structez_trait_int.htm">ezTypeIsPod</a>);</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a43ee17f152fe10a7e2cea71bdbf68521">RelocateConstruct</a>(T* pDestination, T* pSource, <span class="keywordtype">size_t</span> uiCount, <a class="code" href="../../d6/d09/structez_trait_int.htm">ezTypeIsMemRelocatable</a>);</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a43ee17f152fe10a7e2cea71bdbf68521">RelocateConstruct</a>(T* pDestination, T* pSource, <span class="keywordtype">size_t</span> uiCount, <a class="code" href="../../d6/d09/structez_trait_int.htm">ezTypeIsClass</a>);</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160; </div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#aea6c4d3ce40c31abd9cc00fd94759c64">Destruct</a>(T* pDestination, <span class="keywordtype">size_t</span> uiCount, <a class="code" href="../../d6/d09/structez_trait_int.htm">ezTypeIsPod</a>);</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#aea6c4d3ce40c31abd9cc00fd94759c64">Destruct</a>(T* pDestination, <span class="keywordtype">size_t</span> uiCount, <a class="code" href="../../d6/d09/structez_trait_int.htm">ezTypeIsClass</a>);</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160; </div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;  <span class="keyword">static</span> DestructorFunction <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a30225d2e06fd8980244a0bc8a07b66bc">MakeDestructorFunction</a>(<a class="code" href="../../d6/d09/structez_trait_int.htm">ezTypeIsPod</a>);</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;  <span class="keyword">static</span> DestructorFunction <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a30225d2e06fd8980244a0bc8a07b66bc">MakeDestructorFunction</a>(<a class="code" href="../../d6/d09/structez_trait_int.htm">ezTypeIsClass</a>);</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160; </div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a15ff9286bc6efd02271c6d61578b5c02">Copy</a>(T* pDestination, <span class="keyword">const</span> T* pSource, <span class="keywordtype">size_t</span> uiCount, <a class="code" href="../../d6/d09/structez_trait_int.htm">ezTypeIsPod</a>);</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a15ff9286bc6efd02271c6d61578b5c02">Copy</a>(T* pDestination, <span class="keyword">const</span> T* pSource, <span class="keywordtype">size_t</span> uiCount, <a class="code" href="../../d6/d09/structez_trait_int.htm">ezTypeIsClass</a>);</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160; </div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a3dcba6aa092c250b6569eed266df9184">CopyOverlapped</a>(T* pDestination, <span class="keyword">const</span> T* pSource, <span class="keywordtype">size_t</span> uiCount, <a class="code" href="../../d6/d09/structez_trait_int.htm">ezTypeIsPod</a>);</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a3dcba6aa092c250b6569eed266df9184">CopyOverlapped</a>(T* pDestination, <span class="keyword">const</span> T* pSource, <span class="keywordtype">size_t</span> uiCount, <a class="code" href="../../d6/d09/structez_trait_int.htm">ezTypeIsClass</a>);</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160; </div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a5b91f2f466d6009ce02116e3397dfbfb">Relocate</a>(T* pDestination, T* pSource, <span class="keywordtype">size_t</span> uiCount, <a class="code" href="../../d6/d09/structez_trait_int.htm">ezTypeIsPod</a>);</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a5b91f2f466d6009ce02116e3397dfbfb">Relocate</a>(T* pDestination, T* pSource, <span class="keywordtype">size_t</span> uiCount, <a class="code" href="../../d6/d09/structez_trait_int.htm">ezTypeIsMemRelocatable</a>);</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a5b91f2f466d6009ce02116e3397dfbfb">Relocate</a>(T* pDestination, T* pSource, <span class="keywordtype">size_t</span> uiCount, <a class="code" href="../../d6/d09/structez_trait_int.htm">ezTypeIsClass</a>);</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160; </div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#adce58a6d9b1e90c6c4f59e1bb9004c61">RelocateOverlapped</a>(T* pDestination, T* pSource, <span class="keywordtype">size_t</span> uiCount, <a class="code" href="../../d6/d09/structez_trait_int.htm">ezTypeIsPod</a>);</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#adce58a6d9b1e90c6c4f59e1bb9004c61">RelocateOverlapped</a>(T* pDestination, T* pSource, <span class="keywordtype">size_t</span> uiCount, <a class="code" href="../../d6/d09/structez_trait_int.htm">ezTypeIsMemRelocatable</a>);</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#adce58a6d9b1e90c6c4f59e1bb9004c61">RelocateOverlapped</a>(T* pDestination, T* pSource, <span class="keywordtype">size_t</span> uiCount, <a class="code" href="../../d6/d09/structez_trait_int.htm">ezTypeIsClass</a>);</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160; </div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a9fd0a49960e146262101081c5ae0feeb">Prepend</a>(T* pDestination, <span class="keyword">const</span> T&amp; source, <span class="keywordtype">size_t</span> uiCount, <a class="code" href="../../d6/d09/structez_trait_int.htm">ezTypeIsPod</a>);</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a9fd0a49960e146262101081c5ae0feeb">Prepend</a>(T* pDestination, <span class="keyword">const</span> T&amp; source, <span class="keywordtype">size_t</span> uiCount, <a class="code" href="../../d6/d09/structez_trait_int.htm">ezTypeIsMemRelocatable</a>);</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a9fd0a49960e146262101081c5ae0feeb">Prepend</a>(T* pDestination, <span class="keyword">const</span> T&amp; source, <span class="keywordtype">size_t</span> uiCount, <a class="code" href="../../d6/d09/structez_trait_int.htm">ezTypeIsClass</a>);</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160; </div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a9fd0a49960e146262101081c5ae0feeb">Prepend</a>(T* pDestination, T&amp;&amp; source, <span class="keywordtype">size_t</span> uiCount, <a class="code" href="../../d6/d09/structez_trait_int.htm">ezTypeIsPod</a>);</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a9fd0a49960e146262101081c5ae0feeb">Prepend</a>(T* pDestination, T&amp;&amp; source, <span class="keywordtype">size_t</span> uiCount, <a class="code" href="../../d6/d09/structez_trait_int.htm">ezTypeIsMemRelocatable</a>);</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a9fd0a49960e146262101081c5ae0feeb">Prepend</a>(T* pDestination, T&amp;&amp; source, <span class="keywordtype">size_t</span> uiCount, <a class="code" href="../../d6/d09/structez_trait_int.htm">ezTypeIsClass</a>);</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160; </div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a9fd0a49960e146262101081c5ae0feeb">Prepend</a>(T* pDestination, <span class="keyword">const</span> T* pSource, <span class="keywordtype">size_t</span> uiSourceCount, <span class="keywordtype">size_t</span> uiCount, <a class="code" href="../../d6/d09/structez_trait_int.htm">ezTypeIsPod</a>);</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a9fd0a49960e146262101081c5ae0feeb">Prepend</a>(T* pDestination, <span class="keyword">const</span> T* pSource, <span class="keywordtype">size_t</span> uiSourceCount, <span class="keywordtype">size_t</span> uiCount, <a class="code" href="../../d6/d09/structez_trait_int.htm">ezTypeIsMemRelocatable</a>);</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a9fd0a49960e146262101081c5ae0feeb">Prepend</a>(T* pDestination, <span class="keyword">const</span> T* pSource, <span class="keywordtype">size_t</span> uiSourceCount, <span class="keywordtype">size_t</span> uiCount, <a class="code" href="../../d6/d09/structez_trait_int.htm">ezTypeIsClass</a>);</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160; </div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a744d60b4b000c61f2dd3819a12410595">IsEqual</a>(<span class="keyword">const</span> T* a, <span class="keyword">const</span> T* b, <span class="keywordtype">size_t</span> uiCount, <a class="code" href="../../d6/d09/structez_trait_int.htm">ezTypeIsPod</a>);</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a744d60b4b000c61f2dd3819a12410595">IsEqual</a>(<span class="keyword">const</span> T* a, <span class="keyword">const</span> T* b, <span class="keywordtype">size_t</span> uiCount, <a class="code" href="../../d6/d09/structez_trait_int.htm">ezTypeIsClass</a>);</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;};</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160; </div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;<span class="preprocessor">#include &lt;Foundation/Memory/Implementation/MemoryUtils_inl.h&gt;</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassez_memory_utils_htm_a9e6294897c28081e935147d72340788d"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm#a9e6294897c28081e935147d72340788d">ezMemoryUtils::RawByteCompare</a></div><div class="ttdeci">static ezInt32 RawByteCompare(const void *a, const void *b, size_t uiNumBytesToCompare)</div><div class="ttdoc">Compares exactly uiNumBytesToCompare from a and b, independent of the involved types and their sizes.</div><div class="ttdef"><b>Definition:</b> MemoryUtils_inl.h:203</div></div>
<div class="ttc" id="aclassez_memory_utils_htm"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm">ezMemoryUtils</a></div><div class="ttdoc">This class provides functions to work on raw memory.</div><div class="ttdef"><b>Definition:</b> MemoryUtils.h:19</div></div>
<div class="ttc" id="aclassez_memory_utils_htm_a4c12c5af647ec366b7a99b15cca9386b"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm#a4c12c5af647ec366b7a99b15cca9386b">ezMemoryUtils::CopyConstructArray</a></div><div class="ttdeci">static void CopyConstructArray(T *pDestination, const T *pSource, size_t uiCount)</div><div class="ttdoc">Constructs uiCount objects of type T in a raw buffer at pDestination from an existing array of object...</div></div>
<div class="ttc" id="aclassez_memory_utils_htm_a5b91f2f466d6009ce02116e3397dfbfb"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm#a5b91f2f466d6009ce02116e3397dfbfb">ezMemoryUtils::Relocate</a></div><div class="ttdeci">static void Relocate(T *pDestination, T *pSource, size_t uiCount)</div><div class="ttdoc">Moves objects of type T from pSource to pDestination.</div></div>
<div class="ttc" id="aclassez_memory_utils_htm_a154a2ccb52b2abdfdbe6d068948bc6b4"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm#a154a2ccb52b2abdfdbe6d068948bc6b4">ezMemoryUtils::AddByteOffset</a></div><div class="ttdeci">static T * AddByteOffset(T *ptr, ptrdiff_t iOffset)</div><div class="ttdoc">Returns the address stored in ptr plus the given byte offset iOffset, cast to type T.</div></div>
<div class="ttc" id="aclassez_memory_utils_htm_a8357dd1b098551c03e6faa59f64968ae"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm#a8357dd1b098551c03e6faa59f64968ae">ezMemoryUtils::PatternFill</a></div><div class="ttdeci">static void PatternFill(T *pDestination, ezUInt8 uiBytePattern, size_t uiCount)</div><div class="ttdoc">Fills every byte of the provided buffer with the given value.</div></div>
<div class="ttc" id="aclassez_memory_utils_htm_aa87226b4362949aa02ffbbea97bf14d0"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm#aa87226b4362949aa02ffbbea97bf14d0">ezMemoryUtils::MakeCopyConstructorFunction</a></div><div class="ttdeci">static CopyConstructorFunction MakeCopyConstructorFunction()</div><div class="ttdoc">Returns a function pointer to copy construct an instance of T.</div></div>
<div class="ttc" id="aclassez_memory_utils_htm_adce58a6d9b1e90c6c4f59e1bb9004c61"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm#adce58a6d9b1e90c6c4f59e1bb9004c61">ezMemoryUtils::RelocateOverlapped</a></div><div class="ttdeci">static void RelocateOverlapped(T *pDestination, T *pSource, size_t uiCount)</div><div class="ttdoc">Moves objects of type T from pSource to pDestination.</div></div>
<div class="ttc" id="aclassez_memory_utils_htm_a5a6c549d62f7a9de30863c9ef22ed0f6"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm#a5a6c549d62f7a9de30863c9ef22ed0f6">ezMemoryUtils::AlignForwards</a></div><div class="ttdeci">static T * AlignForwards(T *ptr, size_t uiAlignment)</div><div class="ttdoc">Aligns the pointer ptr by moving its address forwards to the next multiple of uiAlignment.</div></div>
<div class="ttc" id="aclassez_memory_utils_htm_a7f5327cc82286e4d378b8101478c0eab"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm#a7f5327cc82286e4d378b8101478c0eab">ezMemoryUtils::AlignBackwards</a></div><div class="ttdeci">static T * AlignBackwards(T *ptr, size_t uiAlignment)</div><div class="ttdoc">Aligns the pointer ptr by moving its address backwards to the previous multiple of uiAlignment.</div></div>
<div class="ttc" id="aclassez_memory_utils_htm_a974eaaa7df95b7d10480cfa7f2f41992"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm#a974eaaa7df95b7d10480cfa7f2f41992">ezMemoryUtils::MakeDefaultConstructorFunction</a></div><div class="ttdeci">static ConstructorFunction MakeDefaultConstructorFunction()</div><div class="ttdoc">Returns a function pointer to construct an instance of T. Always returns a constructor function regar...</div></div>
<div class="ttc" id="aclassez_memory_utils_htm_a945a697e081b8f264a7b9d4ec8f66ffe"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm#a945a697e081b8f264a7b9d4ec8f66ffe">ezMemoryUtils::MoveConstruct</a></div><div class="ttdeci">static void MoveConstruct(T *pDestination, T &amp;&amp;source)</div><div class="ttdoc">Constructs an object of type T in a raw buffer at pDestination, by using move construction from sourc...</div></div>
<div class="ttc" id="aclassez_memory_utils_htm_a15ff9286bc6efd02271c6d61578b5c02"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm#a15ff9286bc6efd02271c6d61578b5c02">ezMemoryUtils::Copy</a></div><div class="ttdeci">static void Copy(T *pDestination, const T *pSource, size_t uiCount)</div><div class="ttdoc">Copies objects of type T from pSource to pDestination.</div></div>
<div class="ttc" id="aclassez_memory_utils_htm_a2944b511c0f4181b4b6a96b472df703f"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm#a2944b511c0f4181b4b6a96b472df703f">ezMemoryUtils::Construct</a></div><div class="ttdeci">static void Construct(T *pDestination, size_t uiCount)</div><div class="ttdoc">Constructs uiCount objects of type T in a raw buffer at pDestination.</div></div>
<div class="ttc" id="aclassez_memory_utils_htm_aa7c2521406e21cf4c64519a4a460dffe"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm#aa7c2521406e21cf4c64519a4a460dffe">ezMemoryUtils::IsAligned</a></div><div class="ttdeci">static bool IsAligned(const T *ptr, size_t uiAlignment)</div><div class="ttdoc">Checks whether ptr is aligned to a memory address that is a multiple of uiAlignment.</div></div>
<div class="ttc" id="aclassez_memory_utils_htm_a784da93eacf66f6fd369f5c93426f407"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm#a784da93eacf66f6fd369f5c93426f407">ezMemoryUtils::MakeConstructorFunction</a></div><div class="ttdeci">static ConstructorFunction MakeConstructorFunction()</div><div class="ttdoc">Returns a function pointer to construct an instance of T. Returns nullptr for trivial types.</div></div>
<div class="ttc" id="aclassez_memory_utils_htm_a9fffe2aadea9b3876e558e8cc8a6a45b"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm#a9fffe2aadea9b3876e558e8cc8a6a45b">ezMemoryUtils::IsSizeAligned</a></div><div class="ttdeci">static bool IsSizeAligned(T uiSize, T uiAlignment)</div><div class="ttdoc">Checks whether the given size is aligned.</div></div>
<div class="ttc" id="aclassez_memory_utils_htm_a43ee17f152fe10a7e2cea71bdbf68521"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm#a43ee17f152fe10a7e2cea71bdbf68521">ezMemoryUtils::RelocateConstruct</a></div><div class="ttdeci">static void RelocateConstruct(T *pDestination, T *pSource, size_t uiCount)</div><div class="ttdoc">Constructs uiCount objects of type T in a raw buffer at pDestination from an existing array of object...</div></div>
<div class="ttc" id="aclassez_memory_utils_htm_ab768b24491ab1feb611b5036d37e39f2"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm#ab768b24491ab1feb611b5036d37e39f2">ezMemoryUtils::CopyConstruct</a></div><div class="ttdeci">static void CopyConstruct(Destination *pDestination, const Source &amp;copy, size_t uiCount)</div><div class="ttdoc">Constructs uiCount objects of type T in a raw buffer at pDestination, by creating uiCount copies of c...</div></div>
<div class="ttc" id="aclassez_memory_utils_htm_aea6c4d3ce40c31abd9cc00fd94759c64"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm#aea6c4d3ce40c31abd9cc00fd94759c64">ezMemoryUtils::Destruct</a></div><div class="ttdeci">static void Destruct(T *pDestination, size_t uiCount)</div><div class="ttdoc">Destructs uiCount objects of type T at pDestination.</div></div>
<div class="ttc" id="aclassez_memory_utils_htm_a30225d2e06fd8980244a0bc8a07b66bc"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm#a30225d2e06fd8980244a0bc8a07b66bc">ezMemoryUtils::MakeDestructorFunction</a></div><div class="ttdeci">static DestructorFunction MakeDestructorFunction()</div><div class="ttdoc">Returns a function pointer to destruct an instance of T. Returns nullptr for POD-types.</div></div>
<div class="ttc" id="aclassez_memory_utils_htm_a0a8156e3c8c1686be6a27ddac6e5772f"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm#a0a8156e3c8c1686be6a27ddac6e5772f">ezMemoryUtils::CopyOrMoveConstruct</a></div><div class="ttdeci">static void CopyOrMoveConstruct(Destination *pDestination, Source &amp;&amp;source)</div><div class="ttdoc">This function will either move call MoveConstruct or CopyConstruct for a single element source,...</div></div>
<div class="ttc" id="aclassez_memory_utils_htm_a7671e5bce6bc9fd9636ab50206b0f033"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm#a7671e5bce6bc9fd9636ab50206b0f033">ezMemoryUtils::Compare</a></div><div class="ttdeci">static ezInt32 Compare(const T *a, const T *b, size_t uiCount=1)</div><div class="ttdoc">Compares two buffers of raw memory byte wise.</div></div>
<div class="ttc" id="aclassez_memory_utils_htm_ac8fa5b7a4d059fb8c423be8ff75cfcf8"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm#ac8fa5b7a4d059fb8c423be8ff75cfcf8">ezMemoryUtils::DefaultConstruct</a></div><div class="ttdeci">static void DefaultConstruct(T *pDestination, size_t uiCount)</div><div class="ttdoc">Default constructs uiCount objects of type T in a raw buffer at pDestination regardless of T being a ...</div></div>
<div class="ttc" id="aclassez_memory_utils_htm_a3dcba6aa092c250b6569eed266df9184"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm#a3dcba6aa092c250b6569eed266df9184">ezMemoryUtils::CopyOverlapped</a></div><div class="ttdeci">static void CopyOverlapped(T *pDestination, const T *pSource, size_t uiCount)</div><div class="ttdoc">Copies objects of type T from pSource to pDestination.</div></div>
<div class="ttc" id="aclassez_memory_utils_htm_a2583fd48644a0a7b3eb72797c7c65a34"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm#a2583fd48644a0a7b3eb72797c7c65a34">ezMemoryUtils::AlignSize</a></div><div class="ttdeci">static T AlignSize(T uiSize, T uiAlignment)</div><div class="ttdoc">Aligns the given size uiSize by rounding up to the next multiple of the size.</div></div>
<div class="ttc" id="aclassez_memory_utils_htm_a8f9eefe70348ce0b05f0bb5a884c9eae"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm#a8f9eefe70348ce0b05f0bb5a884c9eae">ezMemoryUtils::RawByteCopy</a></div><div class="ttdeci">static void RawByteCopy(void *pDestination, const void *pSource, size_t uiNumBytesToCopy)</div><div class="ttdoc">Copies exactly uiNumBytesToCopy from pSource to pDestination, independent of the involved types and t...</div><div class="ttdef"><b>Definition:</b> MemoryUtils_inl.h:117</div></div>
<div class="ttc" id="aclassez_memory_utils_htm_a9fd0a49960e146262101081c5ae0feeb"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm#a9fd0a49960e146262101081c5ae0feeb">ezMemoryUtils::Prepend</a></div><div class="ttdeci">static void Prepend(T *pDestination, const T &amp;source, size_t uiCount)</div><div class="ttdoc">Moves uiCount objects in pDestination by one object and copies source to the free space.</div></div>
<div class="ttc" id="astructez_trait_int_htm"><div class="ttname"><a href="../../d6/d09/structez_trait_int.htm">ezTraitInt</a></div><div class="ttdoc">Type traits.</div><div class="ttdef"><b>Definition:</b> TypeTraits.h:9</div></div>
<div class="ttc" id="aclassez_memory_utils_htm_a5c202a89351b70fe9701684071b47003"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm#a5c202a89351b70fe9701684071b47003">ezMemoryUtils::ReserveLower4GBAddressSpace</a></div><div class="ttdeci">static void ReserveLower4GBAddressSpace()</div><div class="ttdoc">Reserves the lower 4GB of address space in 64-bit builds to ensure all allocations start above 4GB.</div><div class="ttdef"><b>Definition:</b> MemoryUtils.cpp:7</div></div>
<div class="ttc" id="aclassez_memory_utils_htm_a744d60b4b000c61f2dd3819a12410595"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm#a744d60b4b000c61f2dd3819a12410595">ezMemoryUtils::IsEqual</a></div><div class="ttdeci">static bool IsEqual(const T *a, const T *b, size_t uiCount=1)</div><div class="ttdoc">Tests if objects of type T from pSource and pDestination are equal.</div></div>
<div class="ttc" id="aclassez_memory_utils_htm_aed226ed6447ce30053c0b5b990b978ff"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm#aed226ed6447ce30053c0b5b990b978ff">ezMemoryUtils::ZeroFill</a></div><div class="ttdeci">static void ZeroFill(T *pDestination, size_t uiCount)</div><div class="ttdoc">Zeros every byte in the provided memory buffer.</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_adb0ac2a169525f5fa05f0527c58e205.htm">Memory</a></li><li class="navelem"><b>MemoryUtils.h</b></li>
    <li class="footer">Generated on Fri Nov 18 2022 14:47:59 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
