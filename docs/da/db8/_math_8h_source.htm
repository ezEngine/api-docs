<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Math/Math.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 25.03</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('da/db8/_math_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Math.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;Foundation/Basics.h&gt;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;Foundation/Math/Angle.h&gt;</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;Foundation/Math/Constants.h&gt;</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;Foundation/Math/Declarations.h&gt;</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160; </div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160; </div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="keyword">namespace </span><a class="code" href="../../db/d78/namespaceez_math.htm">ezMath</a></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;{</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;  constexpr <span class="keyword">static</span> <span class="keywordtype">bool</span> IsNaN(Type value)</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;  {</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    EZ_IGNORE_UNUSED(value);</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;  }</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160; </div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;  constexpr <span class="keyword">static</span> <span class="keywordtype">bool</span> IsFinite(Type value)</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;  {</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    EZ_IGNORE_UNUSED(value);</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;  }</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160; </div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160; </div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  [[nodiscard]] <span class="keywordtype">float</span> <a class="code" href="../../db/d78/namespaceez_math.htm#a05995060e61c0946e14619b45cd1adef">Sin</a>(<a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a> a); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160; </div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;  [[nodiscard]] <span class="keywordtype">float</span> <a class="code" href="../../db/d78/namespaceez_math.htm#a40cf3173aac40e0e462c57728e9410ab">Cos</a>(<a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a> a); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160; </div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  [[nodiscard]] <span class="keywordtype">float</span> <a class="code" href="../../db/d78/namespaceez_math.htm#ade2e0a31251abf869a932b0d038a410b">Tan</a>(<a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a> a); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160; </div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  [[nodiscard]] <a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a> <a class="code" href="../../db/d78/namespaceez_math.htm#a40d1040acdbbf0e452767d15d1c7a564">ASin</a>(<span class="keywordtype">float</span> f); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160; </div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;  [[nodiscard]] <a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a> <a class="code" href="../../db/d78/namespaceez_math.htm#afcbf5132d5cbfc7070cd6d3086709ceb">ACos</a>(<span class="keywordtype">float</span> f); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160; </div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;  [[nodiscard]] <a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a> <a class="code" href="../../db/d78/namespaceez_math.htm#afc8b4b9979785105fb73b9f7f8d58c74">ATan</a>(<span class="keywordtype">float</span> f); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160; </div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  [[nodiscard]] <a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a> <a class="code" href="../../db/d78/namespaceez_math.htm#a41072c694c87f95f34ab5c13b562fcfe">ATan2</a>(<span class="keywordtype">float</span> y, <span class="keywordtype">float</span> x); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160; </div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  [[nodiscard]] <span class="keywordtype">float</span> Exp(<span class="keywordtype">float</span> f); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160; </div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  [[nodiscard]] <span class="keywordtype">float</span> Ln(<span class="keywordtype">float</span> f); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160; </div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  [[nodiscard]] <span class="keywordtype">float</span> Log2(<span class="keywordtype">float</span> f); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160; </div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  [[nodiscard]] ezUInt32 <a class="code" href="../../db/d78/namespaceez_math.htm#a83324fcba89f4cb6ed5d1612bfaa0244">Log2i</a>(ezUInt32 uiVal); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160; </div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;  [[nodiscard]] <span class="keywordtype">float</span> Log10(<span class="keywordtype">float</span> f); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160; </div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  [[nodiscard]] <span class="keywordtype">float</span> Log(<span class="keywordtype">float</span> fBase, <span class="keywordtype">float</span> f); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160; </div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  [[nodiscard]] <span class="keywordtype">float</span> Pow2(<span class="keywordtype">float</span> f); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160; </div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  [[nodiscard]] <span class="keywordtype">float</span> Pow(<span class="keywordtype">float</span> fBase, <span class="keywordtype">float</span> fExp); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160; </div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  [[nodiscard]] constexpr ezInt32 Pow2(ezInt32 i); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160; </div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;  [[nodiscard]] ezInt32 Pow(ezInt32 iBase, ezInt32 iExp); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160; </div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;  [[nodiscard]] constexpr T <a class="code" href="../../db/d78/namespaceez_math.htm#adfc8bc546fb58a0280cce97f9a40f324">Square</a>(T f); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160; </div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;  [[nodiscard]] <span class="keywordtype">float</span> <a class="code" href="../../db/d78/namespaceez_math.htm#a7f4e38e30c7914d11bcc85b0a4b1c09a">Sqrt</a>(<span class="keywordtype">float</span> f); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160; </div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;  [[nodiscard]] <span class="keywordtype">double</span> <a class="code" href="../../db/d78/namespaceez_math.htm#a7f4e38e30c7914d11bcc85b0a4b1c09a">Sqrt</a>(<span class="keywordtype">double</span> f); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160; </div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;  [[nodiscard]] <span class="keywordtype">float</span> Root(<span class="keywordtype">float</span> f, <span class="keywordtype">float</span> fNthRoot); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160; </div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;  [[nodiscard]] constexpr T <a class="code" href="../../db/d78/namespaceez_math.htm#a916b088a06b14fe88660d630f8f63489">Sign</a>(T f); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160; </div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  [[nodiscard]] constexpr T <a class="code" href="../../db/d78/namespaceez_math.htm#a746232810344aec07f7b870fa302fa8f">Abs</a>(T f); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160; </div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;  [[nodiscard]] constexpr T <a class="code" href="../../db/d78/namespaceez_math.htm#ad8009b4da9cb427658d71e30576f209e">Min</a>(T f1, T f2); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160; </div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span>... ARGS&gt;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;  [[nodiscard]] constexpr T <a class="code" href="../../db/d78/namespaceez_math.htm#ad8009b4da9cb427658d71e30576f209e">Min</a>(T f1, T f2, ARGS... f); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160; </div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;  [[nodiscard]] constexpr T <a class="code" href="../../db/d78/namespaceez_math.htm#a6f7ee19d0f8e81ff6ae5f394075e3a56">Max</a>(T f1, T f2); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160; </div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span>... ARGS&gt;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;  [[nodiscard]] constexpr T <a class="code" href="../../db/d78/namespaceez_math.htm#ad8009b4da9cb427658d71e30576f209e">Min</a>(T f1, T f2, ARGS... f); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160; </div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;  [[nodiscard]] constexpr T <a class="code" href="../../db/d78/namespaceez_math.htm#aaaedc100ad5d35ae5362021b9d1b0e7c">Clamp</a>(T value, T min_val, T max_val); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160; </div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;  [[nodiscard]] constexpr ezUInt32 <a class="code" href="../../db/d78/namespaceez_math.htm#a604439b84c0d15be6b53f09c55d7873c">WrapUInt</a>(ezUInt32 uiValue, ezUInt32 uiExcludedMaxValue); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160; </div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;  [[nodiscard]] constexpr ezInt32 <a class="code" href="../../db/d78/namespaceez_math.htm#a7e3405f4477905a98d86fb7cffb82810">WrapInt</a>(ezInt32 iValue, ezUInt32 uiExcludedMaxValue); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160; </div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;  [[nodiscard]] constexpr ezInt32 <a class="code" href="../../db/d78/namespaceez_math.htm#a7e3405f4477905a98d86fb7cffb82810">WrapInt</a>(ezInt32 iValue, ezInt32 iMinValue, ezInt32 iExcludedMaxValue); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160; </div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;  [[nodiscard]] <span class="keywordtype">float</span> <a class="code" href="../../db/d78/namespaceez_math.htm#a1e4b5eef602178ce352c6ba2efa47fa9">WrapFloat01</a>(<span class="keywordtype">float</span> fValue); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160; </div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;  [[nodiscard]] <span class="keywordtype">float</span> <a class="code" href="../../db/d78/namespaceez_math.htm#a6d7ddb902f81a02e172e9c2cd041754d">WrapFloat</a>(<span class="keywordtype">float</span> fValue, <span class="keywordtype">float</span> fMinValue, <span class="keywordtype">float</span> fMaxValue); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160; </div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;  [[nodiscard]] constexpr T <a class="code" href="../../db/d78/namespaceez_math.htm#ade0bbc96e88750c5d07fed586baa0bd6">Saturate</a>(T value); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160; </div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;  [[nodiscard]] <span class="keywordtype">float</span> Floor(<span class="keywordtype">float</span> f); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160; </div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;  [[nodiscard]] ezInt32 <a class="code" href="../../db/d78/namespaceez_math.htm#a9110f05274235ec1582030e30f5b66ab">FloorToInt</a>(<span class="keywordtype">float</span> f); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160; </div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;  [[nodiscard]] <span class="keywordtype">float</span> Ceil(<span class="keywordtype">float</span> f); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160; </div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;  [[nodiscard]] ezInt32 <a class="code" href="../../db/d78/namespaceez_math.htm#ad53c88db688345074c3363124b1e770c">CeilToInt</a>(<span class="keywordtype">float</span> f); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160; </div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;  [[nodiscard]] <span class="keywordtype">float</span> <a class="code" href="../../db/d78/namespaceez_math.htm#a7c2327035769c42fcb8d220fa92a55d7">RoundDown</a>(<span class="keywordtype">float</span> f, <span class="keywordtype">float</span> fMultiple); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160; </div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;  [[nodiscard]] <span class="keywordtype">double</span> <a class="code" href="../../db/d78/namespaceez_math.htm#a7c2327035769c42fcb8d220fa92a55d7">RoundDown</a>(<span class="keywordtype">double</span> f, <span class="keywordtype">double</span> fMultiple); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160; </div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;  [[nodiscard]] <span class="keywordtype">float</span> <a class="code" href="../../db/d78/namespaceez_math.htm#a40900843c7a836171770b66bf233c4a4">RoundUp</a>(<span class="keywordtype">float</span> f, <span class="keywordtype">float</span> fMultiple); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160; </div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;  [[nodiscard]] <span class="keywordtype">double</span> <a class="code" href="../../db/d78/namespaceez_math.htm#a40900843c7a836171770b66bf233c4a4">RoundUp</a>(<span class="keywordtype">double</span> f, <span class="keywordtype">double</span> fMultiple); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160; </div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;  [[nodiscard]] Type <a class="code" href="../../db/d78/namespaceez_math.htm#a89a5cb364bf8bf76155b42b477e2540a">Trunc</a>(Type f); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160; </div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;  [[nodiscard]] constexpr ezInt32 <a class="code" href="../../db/d78/namespaceez_math.htm#a9781d1a2a59d4b4e8d453a0321b659ca">FloatToInt</a>(<span class="keywordtype">float</span> value);</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160; </div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;  <span class="comment">// There is a compiler bug in VS 2019 targeting 32-bit that causes an internal compiler error when casting double to long long.</span></div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;  <span class="comment">// FloatToInt(double) is not available on these version of the MSVC compiler.</span></div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="preprocessor">#if EZ_DISABLED(EZ_PLATFORM_ARCH_X86) || (_MSC_VER &lt;= 1916)</span></div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;  [[nodiscard]] constexpr ezInt64 <a class="code" href="../../db/d78/namespaceez_math.htm#a9781d1a2a59d4b4e8d453a0321b659ca">FloatToInt</a>(<span class="keywordtype">double</span> value);</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160; </div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;  [[nodiscard]] <span class="keywordtype">float</span> <a class="code" href="../../db/d78/namespaceez_math.htm#a3eaa04e59a8c066cc25b1966f760f08d">Round</a>(<span class="keywordtype">float</span> f); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160; </div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;  [[nodiscard]] ezInt32 <a class="code" href="../../db/d78/namespaceez_math.htm#a877f8338e5a9e70ca0ab22017cff9d12">RoundToInt</a>(<span class="keywordtype">float</span> f); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160; </div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;  [[nodiscard]] <span class="keywordtype">double</span> <a class="code" href="../../db/d78/namespaceez_math.htm#a3eaa04e59a8c066cc25b1966f760f08d">Round</a>(<span class="keywordtype">double</span> f); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160; </div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;  [[nodiscard]] <span class="keywordtype">float</span> <a class="code" href="../../db/d78/namespaceez_math.htm#a0722f85d43ba80c523681eb5107b54d9">RoundToMultiple</a>(<span class="keywordtype">float</span> f, <span class="keywordtype">float</span> fMultiple);</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160; </div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;  [[nodiscard]] <span class="keywordtype">double</span> <a class="code" href="../../db/d78/namespaceez_math.htm#a0722f85d43ba80c523681eb5107b54d9">RoundToMultiple</a>(<span class="keywordtype">double</span> f, <span class="keywordtype">double</span> fMultiple);</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160; </div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;  [[nodiscard]] Type <a class="code" href="../../db/d78/namespaceez_math.htm#ab6648cbd915168c7e2b5d4a922ee1974">Fraction</a>(Type f); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160; </div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;  [[nodiscard]] <span class="keywordtype">float</span> <a class="code" href="../../db/d78/namespaceez_math.htm#a836d8cdcc38eea643d9442df6d4fd3c0">Mod</a>(<span class="keywordtype">float</span> value, <span class="keywordtype">float</span> fDiv); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160; </div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;  [[nodiscard]] <span class="keywordtype">double</span> <a class="code" href="../../db/d78/namespaceez_math.htm#a836d8cdcc38eea643d9442df6d4fd3c0">Mod</a>(<span class="keywordtype">double</span> f, <span class="keywordtype">double</span> fDiv); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160; </div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;  [[nodiscard]] constexpr Type <a class="code" href="../../db/d78/namespaceez_math.htm#ac0dc1e649849596eedbfa9f54894d779">Invert</a>(Type f); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160; </div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;  [[nodiscard]] constexpr ezInt32 <a class="code" href="../../db/d78/namespaceez_math.htm#a40900843c7a836171770b66bf233c4a4">RoundUp</a>(ezInt32 value, ezUInt16 uiMultiple); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160; </div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;  [[nodiscard]] constexpr ezInt32 <a class="code" href="../../db/d78/namespaceez_math.htm#a7c2327035769c42fcb8d220fa92a55d7">RoundDown</a>(ezInt32 value, ezUInt16 uiMultiple); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160; </div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;  [[nodiscard]] constexpr ezUInt32 <a class="code" href="../../db/d78/namespaceez_math.htm#a40900843c7a836171770b66bf233c4a4">RoundUp</a>(ezUInt32 value, ezUInt16 uiMultiple); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160; </div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;  [[nodiscard]] constexpr ezUInt32 <a class="code" href="../../db/d78/namespaceez_math.htm#a7c2327035769c42fcb8d220fa92a55d7">RoundDown</a>(ezUInt32 value, ezUInt16 uiMultiple); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160; </div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;  [[nodiscard]] constexpr <span class="keywordtype">bool</span> <a class="code" href="../../db/d78/namespaceez_math.htm#ad9d9df58f7044ddb022783ab558211e2">IsOdd</a>(ezInt32 i); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160; </div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;  [[nodiscard]] constexpr <span class="keywordtype">bool</span> <a class="code" href="../../db/d78/namespaceez_math.htm#ab4b97f95f8efcf2bf31dbc6148cf772d">IsEven</a>(ezInt32 i); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160; </div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;  [[nodiscard]] ezUInt32 <a class="code" href="../../db/d78/namespaceez_math.htm#a20cbb5a32d60124534dd65b2871166d0">FirstBitLow</a>(ezUInt32 uiBitmask); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160; </div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;  [[nodiscard]] ezUInt32 <a class="code" href="../../db/d78/namespaceez_math.htm#a20cbb5a32d60124534dd65b2871166d0">FirstBitLow</a>(ezUInt64 uiBitmask); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160; </div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;  [[nodiscard]] ezUInt32 <a class="code" href="../../db/d78/namespaceez_math.htm#a35aee647f78c0673015f09c8791c448f">FirstBitHigh</a>(ezUInt32 uiBitmask); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160; </div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;  [[nodiscard]] ezUInt32 <a class="code" href="../../db/d78/namespaceez_math.htm#a35aee647f78c0673015f09c8791c448f">FirstBitHigh</a>(ezUInt64 uiBitmask); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160; </div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;  [[nodiscard]] ezUInt32 <a class="code" href="../../db/d78/namespaceez_math.htm#a9a0cd6f0b8682242cb973308553f7b13">CountTrailingZeros</a>(ezUInt32 uiBitmask); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160; </div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;  [[nodiscard]] ezUInt32 <a class="code" href="../../db/d78/namespaceez_math.htm#a9a0cd6f0b8682242cb973308553f7b13">CountTrailingZeros</a>(ezUInt64 uiBitmask); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160; </div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;  [[nodiscard]] ezUInt32 <a class="code" href="../../db/d78/namespaceez_math.htm#ace4ed6e4b2f22c9ef2c8a9666f734807">CountLeadingZeros</a>(ezUInt32 uiBitmask); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160; </div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;  [[nodiscard]] ezUInt32 <a class="code" href="../../db/d78/namespaceez_math.htm#a6a78ee109368657dafd74a19d26d6b7c">CountBits</a>(ezUInt32 value);</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160; </div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;  [[nodiscard]] ezUInt32 <a class="code" href="../../db/d78/namespaceez_math.htm#a6a78ee109368657dafd74a19d26d6b7c">CountBits</a>(ezUInt64 value);</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160; </div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;  [[nodiscard]] constexpr Type <a class="code" href="../../db/d78/namespaceez_math.htm#afb95cdd675f69671282510d4fa49cb3a">Bitmask_LowN</a>(ezUInt32 uiNumBitsToSet);</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160; </div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;  [[nodiscard]] constexpr Type <a class="code" href="../../db/d78/namespaceez_math.htm#a274a1ed00781741fe87164b33f224c54">Bitmask_HighN</a>(ezUInt32 uiNumBitsToSet);</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160; </div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../db/d78/namespaceez_math.htm#a0cd624055a97c96719b925cb11e6a08e">Swap</a>(T&amp; ref_f1, T&amp; ref_f2); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160; </div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;  [[nodiscard]] T <a class="code" href="../../db/d78/namespaceez_math.htm#a70aea4554d1be096b314db9f10c9f1fc">Lerp</a>(T f1, T f2, <span class="keywordtype">float</span> fFactor); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160; </div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;  [[nodiscard]] T <a class="code" href="../../db/d78/namespaceez_math.htm#a70aea4554d1be096b314db9f10c9f1fc">Lerp</a>(T f1, T f2, <span class="keywordtype">double</span> fFactor); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160; </div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;  [[nodiscard]] constexpr <span class="keywordtype">float</span> <a class="code" href="../../db/d78/namespaceez_math.htm#a080168606b845e32c317e262662e1bec">Unlerp</a>(T fMin, T fMax, T fValue); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160; </div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;  [[nodiscard]] constexpr T <a class="code" href="../../db/d78/namespaceez_math.htm#ac3f7bcae4b9569e58e64417ba8b622f5">Step</a>(T value, T edge); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160; </div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;  [[nodiscard]] Type <a class="code" href="../../db/d78/namespaceez_math.htm#ae5e77037bdf9e792c81afa239f70ad7a">SmoothStep</a>(Type value, Type edge1, Type edge2); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160; </div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;  [[nodiscard]] Type <a class="code" href="../../db/d78/namespaceez_math.htm#a9bdb5031c0d3e896ecb0f5f959b22c01">SmootherStep</a>(Type value, Type edge1, Type edge2); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160; </div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;  [[nodiscard]] EZ_FOUNDATION_DLL <span class="keywordtype">bool</span> <a class="code" href="../../db/d78/namespaceez_math.htm#a65a9116c394ebb50149efb4b15e3275e">IsPowerOf</a>(ezInt32 value, ezInt32 iBase); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160; </div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;  [[nodiscard]] constexpr <span class="keywordtype">bool</span> <a class="code" href="../../db/d78/namespaceez_math.htm#a194e5582f9a01688fc03e4620e231d29">IsPowerOf2</a>(ezInt32 value); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160; </div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;  [[nodiscard]] constexpr <span class="keywordtype">bool</span> <a class="code" href="../../db/d78/namespaceez_math.htm#a194e5582f9a01688fc03e4620e231d29">IsPowerOf2</a>(ezUInt32 value); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160; </div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;  [[nodiscard]] constexpr <span class="keywordtype">bool</span> <a class="code" href="../../db/d78/namespaceez_math.htm#a194e5582f9a01688fc03e4620e231d29">IsPowerOf2</a>(ezUInt64 value); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160; </div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;  [[nodiscard]] EZ_FOUNDATION_DLL ezUInt32 <a class="code" href="../../db/d78/namespaceez_math.htm#ae63590d458f167068281fa07e86e7f2c">PowerOfTwo_Floor</a>(ezUInt32 value); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160; </div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;  [[nodiscard]] EZ_FOUNDATION_DLL ezUInt64 <a class="code" href="../../db/d78/namespaceez_math.htm#ae63590d458f167068281fa07e86e7f2c">PowerOfTwo_Floor</a>(ezUInt64 value); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160; </div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;  [[nodiscard]] EZ_FOUNDATION_DLL ezUInt32 <a class="code" href="../../db/d78/namespaceez_math.htm#ac03a1258ad9611e0d8d109e1876e34e2">PowerOfTwo_Ceil</a>(ezUInt32 value); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160; </div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;  [[nodiscard]] EZ_FOUNDATION_DLL ezUInt64 <a class="code" href="../../db/d78/namespaceez_math.htm#ac03a1258ad9611e0d8d109e1876e34e2">PowerOfTwo_Ceil</a>(ezUInt64 value); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160; </div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;  [[nodiscard]] EZ_FOUNDATION_DLL ezUInt32 <a class="code" href="../../db/d78/namespaceez_math.htm#afb6684a23d8bdf2887da1f14243cbca0">GreatestCommonDivisor</a>(ezUInt32 a, ezUInt32 b); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160; </div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;  [[nodiscard]] constexpr <span class="keywordtype">bool</span> <a class="code" href="../../db/d78/namespaceez_math.htm#aa15fef5dd09bffb82b0d3ce5d7de3255">IsEqual</a>(Type lhs, Type rhs, Type fEpsilon);</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160; </div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;  [[nodiscard]] constexpr <span class="keywordtype">bool</span> <a class="code" href="../../db/d78/namespaceez_math.htm#ae076df9c39820ea636c580267e2e379a">IsInRange</a>(T value, T minVal, T maxVal); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160; </div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;  [[nodiscard]] <span class="keywordtype">bool</span> <a class="code" href="../../db/d78/namespaceez_math.htm#ad0c686588a98fa8c07722fc48f1ffd7f">IsZero</a>(Type f, Type fEpsilon); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160; </div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;  <span class="keyword">template</span> &lt;ezUInt32 NumBits&gt;</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;  [[nodiscard]] ezUInt32 <a class="code" href="../../db/d78/namespaceez_math.htm#a18032e3efb5e0895ac6f9c4cb417e8a2">ColorFloatToUnsignedInt</a>(<span class="keywordtype">float</span> value);</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160; </div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;  [[nodiscard]] ezUInt8 <a class="code" href="../../db/d78/namespaceez_math.htm#a457021bab9536d2908c2a0e3cafed9ac">ColorFloatToByte</a>(<span class="keywordtype">float</span> value); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160; </div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;  [[nodiscard]] ezUInt16 <a class="code" href="../../db/d78/namespaceez_math.htm#a30569f90ca9871c3f39ab6090bfa5d1e">ColorFloatToShort</a>(<span class="keywordtype">float</span> value); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160; </div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;  [[nodiscard]] ezInt8 <a class="code" href="../../db/d78/namespaceez_math.htm#a156f52cf5bf3a533b7a3525aaf0f4f7a">ColorFloatToSignedByte</a>(<span class="keywordtype">float</span> value); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160; </div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;  [[nodiscard]] ezInt16 <a class="code" href="../../db/d78/namespaceez_math.htm#ad79cf3137df7949cc1ab78d3c72f785b">ColorFloatToSignedShort</a>(<span class="keywordtype">float</span> value); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160; </div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;  [[nodiscard]] constexpr <span class="keywordtype">float</span> <a class="code" href="../../db/d78/namespaceez_math.htm#a7cd11d5080a5fa2de5dcb370c52b3df1">ColorByteToFloat</a>(ezUInt8 value); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160; </div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;  [[nodiscard]] constexpr <span class="keywordtype">float</span> <a class="code" href="../../db/d78/namespaceez_math.htm#a900c21bd68b35b424f5b9062dc8d01dc">ColorShortToFloat</a>(ezUInt16 value); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160; </div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;  [[nodiscard]] constexpr <span class="keywordtype">float</span> <a class="code" href="../../db/d78/namespaceez_math.htm#a808d5693a74e2431e20be639af567135">ColorSignedByteToFloat</a>(ezInt8 value); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160; </div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;  [[nodiscard]] constexpr <span class="keywordtype">float</span> <a class="code" href="../../db/d78/namespaceez_math.htm#a5542431bf5124093dcea8d21cff1df7b">ColorSignedShortToFloat</a>(ezInt16 value); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160; </div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> T2&gt;</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;  [[nodiscard]] T <a class="code" href="../../db/d78/namespaceez_math.htm#abe0f677cabbc6c19aa2dfdc514e21780">EvaluateBezierCurve</a>(T2 t, <span class="keyword">const</span> T&amp; startPoint, <span class="keyword">const</span> T&amp; controlPoint1, <span class="keyword">const</span> T&amp; controlPoint2, <span class="keyword">const</span> T&amp; endPoint);</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160; </div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;  EZ_FOUNDATION_DLL <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code" href="../../db/d78/namespaceez_math.htm#a8ee9639723a86148408e88ba6ca4b834">TryMultiply32</a>(ezUInt32&amp; out_uiResult, ezUInt32 a, ezUInt32 b, ezUInt32 c = 1, ezUInt32 d = 1); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160; </div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;  [[nodiscard]] EZ_FOUNDATION_DLL ezUInt32 <a class="code" href="../../db/d78/namespaceez_math.htm#aacf98afd3d0bc523352b1c6da141f78a">SafeMultiply32</a>(ezUInt32 a, ezUInt32 b, ezUInt32 c = 1, ezUInt32 d = 1);</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160; </div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;  EZ_FOUNDATION_DLL <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code" href="../../db/d78/namespaceez_math.htm#a8b9a21046b4ad398fad49a67cc6d94aa">TryMultiply64</a>(ezUInt64&amp; out_uiResult, ezUInt64 a, ezUInt64 b, ezUInt64 c = 1, ezUInt64 d = 1); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160; </div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;  [[nodiscard]] EZ_FOUNDATION_DLL ezUInt64 <a class="code" href="../../db/d78/namespaceez_math.htm#aa782473cf562ce4044652dec9ec0498f">SafeMultiply64</a>(ezUInt64 a, ezUInt64 b, ezUInt64 c = 1, ezUInt64 d = 1);</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160; </div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;  <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code" href="../../db/d78/namespaceez_math.htm#ad07e5d240ab190a460120eae06405251">TryConvertToSizeT</a>(<span class="keywordtype">size_t</span>&amp; out_uiResult, ezUInt64 uiValue); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160; </div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;  [[nodiscard]] EZ_FOUNDATION_DLL <span class="keywordtype">size_t</span> <a class="code" href="../../db/d78/namespaceez_math.htm#a8448ef254ee34432d1fa3c2718dc1dd7">SafeConvertToSizeT</a>(ezUInt64 uiValue);</div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160; </div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;  [[nodiscard]] EZ_FOUNDATION_DLL <span class="keywordtype">float</span> <a class="code" href="../../db/d78/namespaceez_math.htm#adb86e73a85c63426980452dbf19ea5ff">ReplaceNaN</a>(<span class="keywordtype">float</span> fValue, <span class="keywordtype">float</span> fFallback); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160; </div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;  [[nodiscard]] EZ_FOUNDATION_DLL <span class="keywordtype">double</span> <a class="code" href="../../db/d78/namespaceez_math.htm#adb86e73a85c63426980452dbf19ea5ff">ReplaceNaN</a>(<span class="keywordtype">double</span> fValue, <span class="keywordtype">double</span> fFallback); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160; </div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;  [[nodiscard]] constexpr ezUInt64 <a class="code" href="../../db/d78/namespaceez_math.htm#a957d72ff599c64680d1db1a8660470de">MakeUInt64</a>(ezUInt32 uiHigh32, ezUInt32 uiLow32);</div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160; </div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;} <span class="comment">// namespace ezMath</span></div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160; </div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;<span class="preprocessor">#include &lt;Foundation/Math/Implementation/MathDouble_inl.h&gt;</span></div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;<span class="preprocessor">#include &lt;Foundation/Math/Implementation/MathFixedPoint_inl.h&gt;</span></div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;<span class="preprocessor">#include &lt;Foundation/Math/Implementation/MathFloat_inl.h&gt;</span></div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;<span class="preprocessor">#include &lt;Foundation/Math/Implementation/MathInt32_inl.h&gt;</span></div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;<span class="preprocessor">#include &lt;Foundation/Math/Implementation/Math_inl.h&gt;</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespaceez_math_htm_ae5e77037bdf9e792c81afa239f70ad7a"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#ae5e77037bdf9e792c81afa239f70ad7a">ezMath::SmoothStep</a></div><div class="ttdeci">Type SmoothStep(Type x, Type edge1, Type edge2)</div><div class="ttdoc">Returns 0, if value is &lt;= edge1, 1 if value &gt;= edge2 and the hermite interpolation in between.</div><div class="ttdef"><b>Definition:</b> Math_inl.h:311</div></div>
<div class="ttc" id="anamespaceez_math_htm_a6d7ddb902f81a02e172e9c2cd041754d"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a6d7ddb902f81a02e172e9c2cd041754d">ezMath::WrapFloat</a></div><div class="ttdeci">float WrapFloat(float fValue, float fMinValue, float fMaxValue)</div><div class="ttdoc">Wraps a float value around to stay within the [min; max] range.</div><div class="ttdef"><b>Definition:</b> Math_inl.h:527</div></div>
<div class="ttc" id="anamespaceez_math_htm_aa782473cf562ce4044652dec9ec0498f"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#aa782473cf562ce4044652dec9ec0498f">ezMath::SafeMultiply64</a></div><div class="ttdeci">EZ_FOUNDATION_DLL ezUInt64 SafeMultiply64(ezUInt64 a, ezUInt64 b, ezUInt64 c=1, ezUInt64 d=1)</div><div class="ttdoc">returns a * b. If an overflow happens, the program is terminated.</div><div class="ttdef"><b>Definition:</b> Math.cpp:200</div></div>
<div class="ttc" id="astructez_result_htm"><div class="ttname"><a href="../../d4/da9/structez_result.htm">ezResult</a></div><div class="ttdoc">Default enum for returning failure or success, instead of using a bool.</div><div class="ttdef"><b>Definition:</b> Types.h:53</div></div>
<div class="ttc" id="anamespaceez_math_htm_a9781d1a2a59d4b4e8d453a0321b659ca"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a9781d1a2a59d4b4e8d453a0321b659ca">ezMath::FloatToInt</a></div><div class="ttdeci">constexpr ezInt32 FloatToInt(float value)</div><div class="ttdoc">Casts the float to an integer, removes the fractional part.</div><div class="ttdef"><b>Definition:</b> Math_inl.h:461</div></div>
<div class="ttc" id="anamespaceez_math_htm_a604439b84c0d15be6b53f09c55d7873c"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a604439b84c0d15be6b53f09c55d7873c">ezMath::WrapUInt</a></div><div class="ttdeci">constexpr ezUInt32 WrapUInt(ezUInt32 uiValue, ezUInt32 uiExcludedMaxValue)</div><div class="ttdoc">Wraps uiValue around the maximum value, so that it stays within the range [0; uiExcludedMaxValue-1].</div><div class="ttdef"><b>Definition:</b> Math_inl.h:496</div></div>
<div class="ttc" id="anamespaceez_math_htm_ae63590d458f167068281fa07e86e7f2c"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#ae63590d458f167068281fa07e86e7f2c">ezMath::PowerOfTwo_Floor</a></div><div class="ttdeci">EZ_FOUNDATION_DLL ezUInt32 PowerOfTwo_Floor(ezUInt32 value)</div><div class="ttdoc">Returns the next power-of-two that is &lt;= value.</div><div class="ttdef"><b>Definition:</b> Math.cpp:32</div></div>
<div class="ttc" id="anamespaceez_math_htm_a9a0cd6f0b8682242cb973308553f7b13"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a9a0cd6f0b8682242cb973308553f7b13">ezMath::CountTrailingZeros</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezUInt32 CountTrailingZeros(ezUInt32 uiBitmask)</div><div class="ttdef"><b>Definition:</b> Math_inl.h:167</div></div>
<div class="ttc" id="anamespaceez_math_htm_a957d72ff599c64680d1db1a8660470de"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a957d72ff599c64680d1db1a8660470de">ezMath::MakeUInt64</a></div><div class="ttdeci">constexpr ezUInt64 MakeUInt64(ezUInt32 uiHigh32, ezUInt32 uiLow32)</div><div class="ttdoc">Combines the two 32 bit uint values into one 64 bit value.</div><div class="ttdef"><b>Definition:</b> Math_inl.h:533</div></div>
<div class="ttc" id="anamespaceez_math_htm_afb6684a23d8bdf2887da1f14243cbca0"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#afb6684a23d8bdf2887da1f14243cbca0">ezMath::GreatestCommonDivisor</a></div><div class="ttdeci">EZ_FOUNDATION_DLL ezUInt32 GreatestCommonDivisor(ezUInt32 a, ezUInt32 b)</div><div class="ttdoc">Returns the greatest common divisor.</div><div class="ttdef"><b>Definition:</b> Math.cpp:79</div></div>
<div class="ttc" id="anamespaceez_math_htm_ab6648cbd915168c7e2b5d4a922ee1974"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#ab6648cbd915168c7e2b5d4a922ee1974">ezMath::Fraction</a></div><div class="ttdeci">EZ_ALWAYS_INLINE Type Fraction(Type f)</div><div class="ttdoc">Returns the fraction-part of f.</div><div class="ttdef"><b>Definition:</b> Math_inl.h:305</div></div>
<div class="ttc" id="anamespaceez_math_htm_a40d1040acdbbf0e452767d15d1c7a564"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a40d1040acdbbf0e452767d15d1c7a564">ezMath::ASin</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezAngle ASin(float f)</div><div class="ttdoc">Returns the arcus sinus of f.</div><div class="ttdef"><b>Definition:</b> MathFloat_inl.h:92</div></div>
<div class="ttc" id="anamespaceez_math_htm_a1e4b5eef602178ce352c6ba2efa47fa9"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a1e4b5eef602178ce352c6ba2efa47fa9">ezMath::WrapFloat01</a></div><div class="ttdeci">float WrapFloat01(float fValue)</div><div class="ttdoc">Wraps a float value around to stay within the [0; 1] range.</div><div class="ttdef"><b>Definition:</b> Math_inl.h:513</div></div>
<div class="ttc" id="anamespaceez_math_htm_a7cd11d5080a5fa2de5dcb370c52b3df1"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a7cd11d5080a5fa2de5dcb370c52b3df1">ezMath::ColorByteToFloat</a></div><div class="ttdeci">constexpr float ColorByteToFloat(ezUInt8 value)</div><div class="ttdoc">Converts a color value from unsigned byte [0;255] range to float [0;1] range, with proper rounding.</div><div class="ttdef"><b>Definition:</b> Math_inl.h:413</div></div>
<div class="ttc" id="anamespaceez_math_htm_ac0dc1e649849596eedbfa9f54894d779"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#ac0dc1e649849596eedbfa9f54894d779">ezMath::Invert</a></div><div class="ttdeci">constexpr Type Invert(Type f)</div><div class="ttdoc">Returns 1 / f.</div><div class="ttdef"><b>Definition:</b> Math_inl.h:63</div></div>
<div class="ttc" id="anamespaceez_math_htm_a89a5cb364bf8bf76155b42b477e2540a"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a89a5cb364bf8bf76155b42b477e2540a">ezMath::Trunc</a></div><div class="ttdeci">EZ_ALWAYS_INLINE Type Trunc(Type f)</div><div class="ttdoc">Returns the integer-part of f (removes the fraction).</div><div class="ttdef"><b>Definition:</b> Math_inl.h:296</div></div>
<div class="ttc" id="anamespaceez_math_htm_a9bdb5031c0d3e896ecb0f5f959b22c01"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a9bdb5031c0d3e896ecb0f5f959b22c01">ezMath::SmootherStep</a></div><div class="ttdeci">Type SmootherStep(Type x, Type edge1, Type edge2)</div><div class="ttdoc">Returns 0, if value is &lt;= edge1, 1 if value &gt;= edge2 and the second order hermite interpolation in be...</div><div class="ttdef"><b>Definition:</b> Math_inl.h:326</div></div>
<div class="ttc" id="anamespaceez_math_htm_a7f4e38e30c7914d11bcc85b0a4b1c09a"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a7f4e38e30c7914d11bcc85b0a4b1c09a">ezMath::Sqrt</a></div><div class="ttdeci">EZ_ALWAYS_INLINE double Sqrt(double f)</div><div class="ttdoc">Returns the square root of f.</div><div class="ttdef"><b>Definition:</b> MathDouble_inl.h:99</div></div>
<div class="ttc" id="anamespaceez_math_htm_a194e5582f9a01688fc03e4620e231d29"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a194e5582f9a01688fc03e4620e231d29">ezMath::IsPowerOf2</a></div><div class="ttdeci">constexpr EZ_FORCE_INLINE bool IsPowerOf2(ezInt32 value)</div><div class="ttdoc">Returns true, if there exists some x with 2^x == value.</div><div class="ttdef"><b>Definition:</b> Math_inl.h:260</div></div>
<div class="ttc" id="anamespaceez_math_htm_a35aee647f78c0673015f09c8791c448f"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a35aee647f78c0673015f09c8791c448f">ezMath::FirstBitHigh</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezUInt32 FirstBitHigh(ezUInt32 value)</div><div class="ttdoc">Returns the index of the most significant bit set.</div><div class="ttdef"><b>Definition:</b> Math_inl.h:119</div></div>
<div class="ttc" id="anamespaceez_math_htm_a900c21bd68b35b424f5b9062dc8d01dc"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a900c21bd68b35b424f5b9062dc8d01dc">ezMath::ColorShortToFloat</a></div><div class="ttdeci">constexpr float ColorShortToFloat(ezUInt16 value)</div><div class="ttdoc">Converts a color value from unsigned short [0;65535] range to float [0;1] range, with proper rounding...</div><div class="ttdef"><b>Definition:</b> Math_inl.h:420</div></div>
<div class="ttc" id="anamespaceez_math_htm_a6f7ee19d0f8e81ff6ae5f394075e3a56"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a6f7ee19d0f8e81ff6ae5f394075e3a56">ezMath::Max</a></div><div class="ttdeci">constexpr EZ_ALWAYS_INLINE T Max(T f1, T f2)</div><div class="ttdoc">Returns the greater value, f1 or f2.</div><div class="ttdef"><b>Definition:</b> Math_inl.h:39</div></div>
<div class="ttc" id="anamespaceez_math_htm_ae076df9c39820ea636c580267e2e379a"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#ae076df9c39820ea636c580267e2e379a">ezMath::IsInRange</a></div><div class="ttdeci">constexpr bool IsInRange(T value, T minVal, T maxVal)</div><div class="ttdoc">Checks whether the value of the first parameter lies between the value of the second and third.</div><div class="ttdef"><b>Definition:</b> Math_inl.h:282</div></div>
<div class="ttc" id="anamespaceez_math_htm_a156f52cf5bf3a533b7a3525aaf0f4f7a"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a156f52cf5bf3a533b7a3525aaf0f4f7a">ezMath::ColorFloatToSignedByte</a></div><div class="ttdeci">ezInt8 ColorFloatToSignedByte(float value)</div><div class="ttdoc">Converts a color value from float [-1;1] range to signed byte [-127;127] range, with proper rounding.</div><div class="ttdef"><b>Definition:</b> Math_inl.h:367</div></div>
<div class="ttc" id="anamespaceez_math_htm_a70aea4554d1be096b314db9f10c9f1fc"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a70aea4554d1be096b314db9f10c9f1fc">ezMath::Lerp</a></div><div class="ttdeci">EZ_FORCE_INLINE T Lerp(T f1, T f2, float fFactor)</div><div class="ttdoc">Returns the linear interpolation of f1 and f2. factor is a value between 0 and 1.</div><div class="ttdef"><b>Definition:</b> Math_inl.h:230</div></div>
<div class="ttc" id="anamespaceez_math_htm_a9110f05274235ec1582030e30f5b66ab"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a9110f05274235ec1582030e30f5b66ab">ezMath::FloorToInt</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezInt32 FloorToInt(float f)</div><div class="ttdoc">Returns the next smaller integer, closest to f. Also the SMALLER value, if f is negative.</div><div class="ttdef"><b>Definition:</b> MathFloat_inl.h:32</div></div>
<div class="ttc" id="anamespaceez_math_htm_a05995060e61c0946e14619b45cd1adef"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a05995060e61c0946e14619b45cd1adef">ezMath::Sin</a></div><div class="ttdeci">EZ_ALWAYS_INLINE float Sin(ezAngle a)</div><div class="ttdoc">***** Trigonometric Functions *****</div><div class="ttdef"><b>Definition:</b> MathFloat_inl.h:77</div></div>
<div class="ttc" id="anamespaceez_math_htm_a3eaa04e59a8c066cc25b1966f760f08d"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a3eaa04e59a8c066cc25b1966f760f08d">ezMath::Round</a></div><div class="ttdeci">EZ_ALWAYS_INLINE double Round(double f)</div><div class="ttdoc">Rounds f to the next integer.</div><div class="ttdef"><b>Definition:</b> MathDouble_inl.h:35</div></div>
<div class="ttc" id="anamespaceez_math_htm_a41072c694c87f95f34ab5c13b562fcfe"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a41072c694c87f95f34ab5c13b562fcfe">ezMath::ATan2</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezAngle ATan2(float y, float x)</div><div class="ttdoc">Returns the atan2 of x and y.</div><div class="ttdef"><b>Definition:</b> MathFloat_inl.h:107</div></div>
<div class="ttc" id="anamespaceez_math_htm_a746232810344aec07f7b870fa302fa8f"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a746232810344aec07f7b870fa302fa8f">ezMath::Abs</a></div><div class="ttdeci">constexpr EZ_ALWAYS_INLINE T Abs(T f)</div><div class="ttdoc">Returns the absolute value of f.</div><div class="ttdef"><b>Definition:</b> Math_inl.h:21</div></div>
<div class="ttc" id="anamespaceez_math_htm_aaaedc100ad5d35ae5362021b9d1b0e7c"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#aaaedc100ad5d35ae5362021b9d1b0e7c">ezMath::Clamp</a></div><div class="ttdeci">constexpr EZ_ALWAYS_INLINE T Clamp(T value, T min_val, T max_val)</div><div class="ttdoc">Clamps &quot;value&quot; to the range [min; max]. Returns &quot;value&quot;, if it is inside the range already.</div><div class="ttdef"><b>Definition:</b> Math_inl.h:51</div></div>
<div class="ttc" id="anamespaceez_math_htm_ac3f7bcae4b9569e58e64417ba8b622f5"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#ac3f7bcae4b9569e58e64417ba8b622f5">ezMath::Step</a></div><div class="ttdeci">constexpr EZ_FORCE_INLINE T Step(T value, T edge)</div><div class="ttdoc">Returns 0, if value &lt; edge, and 1, if value &gt;= edge.</div><div class="ttdef"><b>Definition:</b> Math_inl.h:255</div></div>
<div class="ttc" id="anamespaceez_math_htm_a8ee9639723a86148408e88ba6ca4b834"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a8ee9639723a86148408e88ba6ca4b834">ezMath::TryMultiply32</a></div><div class="ttdeci">EZ_FOUNDATION_DLL ezResult TryMultiply32(ezUInt32 &amp;out_uiResult, ezUInt32 a, ezUInt32 b, ezUInt32 c=1, ezUInt32 d=1)</div><div class="ttdoc">out_Result = a * b. If an overflow happens, EZ_FAILURE is returned.</div><div class="ttdef"><b>Definition:</b> Math.cpp:105</div></div>
<div class="ttc" id="anamespaceez_math_htm_a8b9a21046b4ad398fad49a67cc6d94aa"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a8b9a21046b4ad398fad49a67cc6d94aa">ezMath::TryMultiply64</a></div><div class="ttdeci">EZ_FOUNDATION_DLL ezResult TryMultiply64(ezUInt64 &amp;out_uiResult, ezUInt64 a, ezUInt64 b, ezUInt64 c=1, ezUInt64 d=1)</div><div class="ttdoc">out_Result = a * b. If an overflow happens, EZ_FAILURE is returned.</div><div class="ttdef"><b>Definition:</b> Math.cpp:144</div></div>
<div class="ttc" id="anamespaceez_math_htm_ad79cf3137df7949cc1ab78d3c72f785b"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#ad79cf3137df7949cc1ab78d3c72f785b">ezMath::ColorFloatToSignedShort</a></div><div class="ttdeci">ezInt16 ColorFloatToSignedShort(float value)</div><div class="ttdoc">Converts a color value from float [-1;1] range to signed short [-32767;32767] range,...</div><div class="ttdef"><b>Definition:</b> Math_inl.h:390</div></div>
<div class="ttc" id="anamespaceez_math_htm_afb95cdd675f69671282510d4fa49cb3a"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#afb95cdd675f69671282510d4fa49cb3a">ezMath::Bitmask_LowN</a></div><div class="ttdeci">constexpr EZ_ALWAYS_INLINE Type Bitmask_LowN(ezUInt32 uiNumBitsToSet)</div><div class="ttdoc">Creates a bitmask in which the low N bits are set. For example for N=5, this would be '0000 ....</div><div class="ttdef"><b>Definition:</b> Math_inl.h:212</div></div>
<div class="ttc" id="anamespaceez_math_htm_adb86e73a85c63426980452dbf19ea5ff"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#adb86e73a85c63426980452dbf19ea5ff">ezMath::ReplaceNaN</a></div><div class="ttdeci">EZ_FOUNDATION_DLL float ReplaceNaN(float fValue, float fFallback)</div><div class="ttdoc">If 'value' is not-a-number (NaN) 'fallback' is returned, otherwise 'value' is passed through unmodifi...</div><div class="ttdef"><b>Definition:</b> Math.cpp:247</div></div>
<div class="ttc" id="anamespaceez_math_htm_a7e3405f4477905a98d86fb7cffb82810"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a7e3405f4477905a98d86fb7cffb82810">ezMath::WrapInt</a></div><div class="ttdeci">constexpr ezInt32 WrapInt(ezInt32 iValue, ezUInt32 uiExcludedMaxValue)</div><div class="ttdoc">Wraps iValue around the maximum value, so that it stays within the range [0; uiExcludedMaxValue-1].</div><div class="ttdef"><b>Definition:</b> Math_inl.h:501</div></div>
<div class="ttc" id="anamespaceez_math_htm_a080168606b845e32c317e262662e1bec"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a080168606b845e32c317e262662e1bec">ezMath::Unlerp</a></div><div class="ttdeci">constexpr EZ_FORCE_INLINE float Unlerp(T fMin, T fMax, T fValue)</div><div class="ttdoc">Returns the interpolation factor such that Lerp(fMin, fMax, factor) == fValue.</div><div class="ttdef"><b>Definition:</b> Math_inl.h:248</div></div>
<div class="ttc" id="anamespaceez_math_htm_aacf98afd3d0bc523352b1c6da141f78a"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#aacf98afd3d0bc523352b1c6da141f78a">ezMath::SafeMultiply32</a></div><div class="ttdeci">EZ_FOUNDATION_DLL ezUInt32 SafeMultiply32(ezUInt32 a, ezUInt32 b, ezUInt32 c=1, ezUInt32 d=1)</div><div class="ttdoc">returns a * b. If an overflow happens, the program is terminated.</div><div class="ttdef"><b>Definition:</b> Math.cpp:132</div></div>
<div class="ttc" id="anamespaceez_math_htm_abe0f677cabbc6c19aa2dfdc514e21780"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#abe0f677cabbc6c19aa2dfdc514e21780">ezMath::EvaluateBezierCurve</a></div><div class="ttdeci">T EvaluateBezierCurve(T2 t, const T &amp;startPoint, const T &amp;controlPoint1, const T &amp;controlPoint2, const T &amp;endPoint)</div><div class="ttdoc">Evaluates the cubic spline defined by four control points at time t and returns the interpolated resu...</div><div class="ttdef"><b>Definition:</b> Math_inl.h:442</div></div>
<div class="ttc" id="anamespaceez_math_htm_ad0c686588a98fa8c07722fc48f1ffd7f"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#ad0c686588a98fa8c07722fc48f1ffd7f">ezMath::IsZero</a></div><div class="ttdeci">bool IsZero(Type f, Type fEpsilon)</div><div class="ttdoc">Checks whether the given number is close to zero.</div><div class="ttdef"><b>Definition:</b> Math_inl.h:288</div></div>
<div class="ttc" id="anamespaceez_math_htm_a83324fcba89f4cb6ed5d1612bfaa0244"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a83324fcba89f4cb6ed5d1612bfaa0244">ezMath::Log2i</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezUInt32 Log2i(ezUInt32 uiVal)</div><div class="ttdoc">Returns the integral logarithm to the base 2, that comes closest to the given integer.</div><div class="ttdef"><b>Definition:</b> MathInt32_inl.h:41</div></div>
<div class="ttc" id="anamespaceez_math_htm_a916b088a06b14fe88660d630f8f63489"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a916b088a06b14fe88660d630f8f63489">ezMath::Sign</a></div><div class="ttdeci">constexpr EZ_ALWAYS_INLINE T Sign(T f)</div><div class="ttdoc">Returns the sign of f (i.e: -1, 1 or 0)</div><div class="ttdef"><b>Definition:</b> Math_inl.h:14</div></div>
<div class="ttc" id="anamespaceez_math_htm_a40900843c7a836171770b66bf233c4a4"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a40900843c7a836171770b66bf233c4a4">ezMath::RoundUp</a></div><div class="ttdeci">double RoundUp(double f, double fMultiple)</div><div class="ttdoc">Returns a multiple of fMultiple that is larger than f.</div><div class="ttdef"><b>Definition:</b> MathDouble_inl.h:47</div></div>
<div class="ttc" id="anamespaceez_math_htm_a5542431bf5124093dcea8d21cff1df7b"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a5542431bf5124093dcea8d21cff1df7b">ezMath::ColorSignedShortToFloat</a></div><div class="ttdeci">constexpr float ColorSignedShortToFloat(ezInt16 value)</div><div class="ttdoc">Converts a color value from signed short [-32768;32767] range to float [0;1] range,...</div><div class="ttdef"><b>Definition:</b> Math_inl.h:434</div></div>
<div class="ttc" id="anamespaceez_math_htm_a30569f90ca9871c3f39ab6090bfa5d1e"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a30569f90ca9871c3f39ab6090bfa5d1e">ezMath::ColorFloatToShort</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezUInt16 ColorFloatToShort(float value)</div><div class="ttdoc">Converts a color value from float [0;1] range to unsigned short [0;65535] range, with proper rounding...</div><div class="ttdef"><b>Definition:</b> Math_inl.h:362</div></div>
<div class="ttc" id="anamespaceez_math_htm_a877f8338e5a9e70ca0ab22017cff9d12"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a877f8338e5a9e70ca0ab22017cff9d12">ezMath::RoundToInt</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezInt32 RoundToInt(float f)</div><div class="ttdoc">Rounds f to the next integer.</div><div class="ttdef"><b>Definition:</b> MathFloat_inl.h:52</div></div>
<div class="ttc" id="anamespaceez_math_htm_afc8b4b9979785105fb73b9f7f8d58c74"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#afc8b4b9979785105fb73b9f7f8d58c74">ezMath::ATan</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezAngle ATan(float f)</div><div class="ttdoc">Returns the arcus tangent of f.</div><div class="ttdef"><b>Definition:</b> MathFloat_inl.h:102</div></div>
<div class="ttc" id="anamespaceez_math_htm_a808d5693a74e2431e20be639af567135"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a808d5693a74e2431e20be639af567135">ezMath::ColorSignedByteToFloat</a></div><div class="ttdeci">constexpr float ColorSignedByteToFloat(ezInt8 value)</div><div class="ttdoc">Converts a color value from signed byte [-128;127] range to float [-1;1] range, with proper rounding.</div><div class="ttdef"><b>Definition:</b> Math_inl.h:427</div></div>
<div class="ttc" id="aclassez_angle_htm"><div class="ttname"><a href="../../db/d6f/classez_angle.htm">ezAngle</a></div><div class="ttdoc">Float wrapper struct for a safe usage and conversions of angles.</div><div class="ttdef"><b>Definition:</b> Angle.h:9</div></div>
<div class="ttc" id="anamespaceez_math_htm_a18032e3efb5e0895ac6f9c4cb417e8a2"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a18032e3efb5e0895ac6f9c4cb417e8a2">ezMath::ColorFloatToUnsignedInt</a></div><div class="ttdeci">ezUInt32 ColorFloatToUnsignedInt(float value)</div><div class="ttdoc">Converts a color value from float [0;1] range to unsigned int with the given number of bits,...</div><div class="ttdef"><b>Definition:</b> Math_inl.h:341</div></div>
<div class="ttc" id="anamespaceez_math_htm_ace4ed6e4b2f22c9ef2c8a9666f734807"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#ace4ed6e4b2f22c9ef2c8a9666f734807">ezMath::CountLeadingZeros</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezUInt32 CountLeadingZeros(ezUInt32 uiBitmask)</div><div class="ttdef"><b>Definition:</b> Math_inl.h:180</div></div>
<div class="ttc" id="anamespaceez_math_htm_a836d8cdcc38eea643d9442df6d4fd3c0"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a836d8cdcc38eea643d9442df6d4fd3c0">ezMath::Mod</a></div><div class="ttdeci">EZ_ALWAYS_INLINE double Mod(double f, double fDiv)</div><div class="ttdoc">Returns &quot;value mod div&quot; for doubles. This also works with negative numbers, both for value and for di...</div><div class="ttdef"><b>Definition:</b> MathDouble_inl.h:104</div></div>
<div class="ttc" id="anamespaceez_math_htm_ad53c88db688345074c3363124b1e770c"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#ad53c88db688345074c3363124b1e770c">ezMath::CeilToInt</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezInt32 CeilToInt(float f)</div><div class="ttdoc">Returns the next higher integer, closest to f. Also the HIGHER value, if f is negative.</div><div class="ttdef"><b>Definition:</b> MathFloat_inl.h:42</div></div>
<div class="ttc" id="anamespaceez_math_htm_a40cf3173aac40e0e462c57728e9410ab"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a40cf3173aac40e0e462c57728e9410ab">ezMath::Cos</a></div><div class="ttdeci">EZ_ALWAYS_INLINE float Cos(ezAngle a)</div><div class="ttdoc">Takes an angle, returns its cosine.</div><div class="ttdef"><b>Definition:</b> MathFloat_inl.h:82</div></div>
<div class="ttc" id="anamespaceez_math_htm_a20cbb5a32d60124534dd65b2871166d0"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a20cbb5a32d60124534dd65b2871166d0">ezMath::FirstBitLow</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezUInt32 FirstBitLow(ezUInt32 value)</div><div class="ttdoc">Returns the index of the least significant bit set.</div><div class="ttdef"><b>Definition:</b> Math_inl.h:70</div></div>
<div class="ttc" id="anamespaceez_math_htm"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm">ezMath</a></div><div class="ttdoc">This namespace provides common math-functionality as functions.</div><div class="ttdef"><b>Definition:</b> Constants.h:5</div></div>
<div class="ttc" id="anamespaceez_math_htm_ac03a1258ad9611e0d8d109e1876e34e2"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#ac03a1258ad9611e0d8d109e1876e34e2">ezMath::PowerOfTwo_Ceil</a></div><div class="ttdeci">EZ_FOUNDATION_DLL ezUInt32 PowerOfTwo_Ceil(ezUInt32 value)</div><div class="ttdoc">Returns the next power-of-two that is &gt;= value.</div><div class="ttdef"><b>Definition:</b> Math.cpp:53</div></div>
<div class="ttc" id="anamespaceez_math_htm_a65a9116c394ebb50149efb4b15e3275e"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a65a9116c394ebb50149efb4b15e3275e">ezMath::IsPowerOf</a></div><div class="ttdeci">EZ_FOUNDATION_DLL bool IsPowerOf(ezInt32 value, ezInt32 iBase)</div><div class="ttdoc">Returns true, if there exists some x with base^x == value.</div><div class="ttdef"><b>Definition:</b> Math.cpp:16</div></div>
<div class="ttc" id="anamespaceez_math_htm_ad8009b4da9cb427658d71e30576f209e"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#ad8009b4da9cb427658d71e30576f209e">ezMath::Min</a></div><div class="ttdeci">constexpr EZ_ALWAYS_INLINE T Min(T f1, T f2)</div><div class="ttdoc">Returns the smaller value, f1 or f2.</div><div class="ttdef"><b>Definition:</b> Math_inl.h:27</div></div>
<div class="ttc" id="anamespaceez_math_htm_adfc8bc546fb58a0280cce97f9a40f324"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#adfc8bc546fb58a0280cce97f9a40f324">ezMath::Square</a></div><div class="ttdeci">constexpr EZ_ALWAYS_INLINE T Square(T f)</div><div class="ttdoc">Returns f * f.</div><div class="ttdef"><b>Definition:</b> Math_inl.h:8</div></div>
<div class="ttc" id="anamespaceez_math_htm_a0722f85d43ba80c523681eb5107b54d9"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a0722f85d43ba80c523681eb5107b54d9">ezMath::RoundToMultiple</a></div><div class="ttdeci">EZ_ALWAYS_INLINE double RoundToMultiple(double f, double fMultiple)</div><div class="ttdoc">Rounds f to the closest value of multiple.</div><div class="ttdef"><b>Definition:</b> MathDouble_inl.h:54</div></div>
<div class="ttc" id="anamespaceez_math_htm_ade2e0a31251abf869a932b0d038a410b"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#ade2e0a31251abf869a932b0d038a410b">ezMath::Tan</a></div><div class="ttdeci">EZ_ALWAYS_INLINE float Tan(ezAngle a)</div><div class="ttdoc">Takes an angle, returns its tangent.</div><div class="ttdef"><b>Definition:</b> MathFloat_inl.h:87</div></div>
<div class="ttc" id="anamespaceez_math_htm_ab4b97f95f8efcf2bf31dbc6148cf772d"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#ab4b97f95f8efcf2bf31dbc6148cf772d">ezMath::IsEven</a></div><div class="ttdeci">constexpr EZ_ALWAYS_INLINE bool IsEven(ezInt32 i)</div><div class="ttdoc">Returns true, if i is an even number.</div><div class="ttdef"><b>Definition:</b> MathInt32_inl.h:35</div></div>
<div class="ttc" id="anamespaceez_math_htm_a0cd624055a97c96719b925cb11e6a08e"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a0cd624055a97c96719b925cb11e6a08e">ezMath::Swap</a></div><div class="ttdeci">EZ_ALWAYS_INLINE void Swap(T &amp;ref_f1, T &amp;ref_f2)</div><div class="ttdoc">Swaps the values in the two variables f1 and f2.</div><div class="ttdef"><b>Definition:</b> Math_inl.h:224</div></div>
<div class="ttc" id="anamespaceez_math_htm_ade0bbc96e88750c5d07fed586baa0bd6"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#ade0bbc96e88750c5d07fed586baa0bd6">ezMath::Saturate</a></div><div class="ttdeci">constexpr EZ_ALWAYS_INLINE T Saturate(T value)</div><div class="ttdoc">Clamps &quot;value&quot; to the range [0; 1]. Returns &quot;value&quot;, if it is inside the range already.</div><div class="ttdef"><b>Definition:</b> Math_inl.h:57</div></div>
<div class="ttc" id="anamespaceez_math_htm_ad07e5d240ab190a460120eae06405251"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#ad07e5d240ab190a460120eae06405251">ezMath::TryConvertToSizeT</a></div><div class="ttdeci">ezResult TryConvertToSizeT(size_t &amp;out_uiResult, ezUInt64 uiValue)</div><div class="ttdoc">Checks whether the given 64bit value actually fits into size_t, If it doesn't EZ_FAILURE is returned.</div><div class="ttdef"><b>Definition:</b> Math_inl.h:473</div></div>
<div class="ttc" id="anamespaceez_math_htm_a274a1ed00781741fe87164b33f224c54"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a274a1ed00781741fe87164b33f224c54">ezMath::Bitmask_HighN</a></div><div class="ttdeci">constexpr EZ_ALWAYS_INLINE Type Bitmask_HighN(ezUInt32 uiNumBitsToSet)</div><div class="ttdoc">Creates a bitmask in which the high N bits are set. For example for N=5, this would be '1111 1000 ....</div><div class="ttdef"><b>Definition:</b> Math_inl.h:218</div></div>
<div class="ttc" id="anamespaceez_math_htm_aa15fef5dd09bffb82b0d3ce5d7de3255"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#aa15fef5dd09bffb82b0d3ce5d7de3255">ezMath::IsEqual</a></div><div class="ttdeci">constexpr bool IsEqual(Type lhs, Type rhs, Type fEpsilon)</div><div class="ttdoc">Checks, whether fValue is in the range [fDesired - fMaxImprecision; fDesired + fMaxImprecision].</div><div class="ttdef"><b>Definition:</b> Math_inl.h:276</div></div>
<div class="ttc" id="anamespaceez_math_htm_a457021bab9536d2908c2a0e3cafed9ac"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a457021bab9536d2908c2a0e3cafed9ac">ezMath::ColorFloatToByte</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezUInt8 ColorFloatToByte(float value)</div><div class="ttdoc">Converts a color value from float [0;1] range to unsigned byte [0;255] range, with proper rounding.</div><div class="ttdef"><b>Definition:</b> Math_inl.h:357</div></div>
<div class="ttc" id="anamespaceez_math_htm_a8448ef254ee34432d1fa3c2718dc1dd7"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a8448ef254ee34432d1fa3c2718dc1dd7">ezMath::SafeConvertToSizeT</a></div><div class="ttdeci">EZ_FOUNDATION_DLL size_t SafeConvertToSizeT(ezUInt64 uiValue)</div><div class="ttdoc">Checks whether the given 64bit value actually fits into size_t, If it doesn't the program is terminat...</div></div>
<div class="ttc" id="anamespaceez_math_htm_a7c2327035769c42fcb8d220fa92a55d7"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a7c2327035769c42fcb8d220fa92a55d7">ezMath::RoundDown</a></div><div class="ttdeci">double RoundDown(double f, double fMultiple)</div><div class="ttdoc">Returns a multiple of fMultiple that is smaller than f.</div><div class="ttdef"><b>Definition:</b> MathDouble_inl.h:40</div></div>
<div class="ttc" id="anamespaceez_math_htm_ad9d9df58f7044ddb022783ab558211e2"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#ad9d9df58f7044ddb022783ab558211e2">ezMath::IsOdd</a></div><div class="ttdeci">constexpr EZ_ALWAYS_INLINE bool IsOdd(ezInt32 i)</div><div class="ttdoc">Returns true, if i is an odd number.</div><div class="ttdef"><b>Definition:</b> MathInt32_inl.h:29</div></div>
<div class="ttc" id="anamespaceez_math_htm_a6a78ee109368657dafd74a19d26d6b7c"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a6a78ee109368657dafd74a19d26d6b7c">ezMath::CountBits</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezUInt32 CountBits(ezUInt32 value)</div><div class="ttdoc">Returns the number of bits set.</div><div class="ttdef"><b>Definition:</b> Math_inl.h:186</div></div>
<div class="ttc" id="anamespaceez_math_htm_afcbf5132d5cbfc7070cd6d3086709ceb"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#afcbf5132d5cbfc7070cd6d3086709ceb">ezMath::ACos</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezAngle ACos(float f)</div><div class="ttdoc">Returns the arcus cosinus of f.</div><div class="ttdef"><b>Definition:</b> MathFloat_inl.h:97</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_4ad0f5fbee83b30173e7fecedeea26f0.htm">Math</a></li><li class="navelem"><b>Math.h</b></li>
    <li class="footer">Generated on Mon Mar 3 2025 17:23:44 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
