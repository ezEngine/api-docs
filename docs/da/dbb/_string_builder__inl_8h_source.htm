<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Strings/Implementation/StringBuilder_inl.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 21.6</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('da/dbb/_string_builder__inl_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">StringBuilder_inl.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;Foundation/Strings/StringConversion.h&gt;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160; </div>
<div class="line"><a name="l00005"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#aae3cd3eb70eabea17763d6a7200fe311">    5</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#aae3cd3eb70eabea17763d6a7200fe311">ezStringBuilder::ezStringBuilder</a>(<a class="code" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a>* pAllocator)</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;  : m_Data(pAllocator)</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;{</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;  m_uiCharacterCount = 0;</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;  AppendTerminator();</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;}</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160; </div>
<div class="line"><a name="l00012"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a0eff19ce3b5583ef753b658e019518e7">   12</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#aae3cd3eb70eabea17763d6a7200fe311">ezStringBuilder::ezStringBuilder</a>(<span class="keyword">const</span> <a class="code" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>&amp; rhs)</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;  : m_Data(rhs.GetAllocator())</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;{</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;  m_uiCharacterCount = 0;</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;  AppendTerminator();</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160; </div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;  *<span class="keyword">this</span> = rhs;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;}</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160; </div>
<div class="line"><a name="l00021"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a04e87df39f893e06bdb918c8cfd954db">   21</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#aae3cd3eb70eabea17763d6a7200fe311">ezStringBuilder::ezStringBuilder</a>(<a class="code" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>&amp;&amp; rhs) noexcept</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;  : m_Data(rhs.GetAllocator())</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;{</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;  m_uiCharacterCount = 0;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;  AppendTerminator();</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;  *<span class="keyword">this</span> = std::move(rhs);</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;}</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160; </div>
<div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a55946185f5a252a8ecde7048e2646e18">   30</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#aae3cd3eb70eabea17763d6a7200fe311">ezStringBuilder::ezStringBuilder</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szUTF8, <a class="code" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a>* pAllocator)</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  : m_Data(pAllocator)</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;{</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;  m_uiCharacterCount = 0;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  AppendTerminator();</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160; </div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;  *<span class="keyword">this</span> = szUTF8;</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;}</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160; </div>
<div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a45dfa156bdea76762a890bcf8df27fd8">   39</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#aae3cd3eb70eabea17763d6a7200fe311">ezStringBuilder::ezStringBuilder</a>(<span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* szWChar, <a class="code" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a>* pAllocator)</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  : m_Data(pAllocator)</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;  m_uiCharacterCount = 0;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  AppendTerminator();</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160; </div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  *<span class="keyword">this</span> = szWChar;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;}</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160; </div>
<div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#aeaa536460686d538948a19a2f40554f1">   48</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#aae3cd3eb70eabea17763d6a7200fe311">ezStringBuilder::ezStringBuilder</a>(<span class="keyword">const</span> <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a>&amp; rhs, <a class="code" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a>* pAllocator)</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;  : m_Data(pAllocator)</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;{</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;  m_uiCharacterCount = 0;</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  AppendTerminator();</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160; </div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;  *<span class="keyword">this</span> = rhs;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;}</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160; </div>
<div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a79d01c58613d2704c36a582db95b1e42">   57</a></span>&#160;EZ_ALWAYS_INLINE <a class="code" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a>* <a class="code" href="../../d3/d88/classez_string_builder.htm#a79d01c58613d2704c36a582db95b1e42">ezStringBuilder::GetAllocator</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;  <span class="keywordflow">return</span> m_Data.<a class="code" href="../../d5/d3f/classez_dynamic_array_base.htm#af69a2cab402c0cf89448e33e1b998cd4">GetAllocator</a>();</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;}</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160; </div>
<div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#adc69c60c893d5e43cd3595236e68f26b">   62</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#a97d0149bd32e043f5177ac63e172b2dd">ezStringBuilder::operator=</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szUTF8)</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;{</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  <a class="code" href="../../d3/d88/classez_string_builder.htm#a6ba7492a22f19af45352d44ddbdb30fa">Set</a>(szUTF8);</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;}</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160; </div>
<div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a5bc23091233479a950adb7b23f2ecda7">   67</a></span>&#160;EZ_FORCE_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#a97d0149bd32e043f5177ac63e172b2dd">ezStringBuilder::operator=</a>(<span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* szWChar)</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;{</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;  <span class="comment">// fine to do this, szWChar can never come from the stringbuilder&#39;s own data array</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  <a class="code" href="../../d3/d88/classez_string_builder.htm#a162e5eb18bb60fd044c2fbbcdfa79228">Clear</a>();</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;  <a class="code" href="../../d3/d88/classez_string_builder.htm#a605f325ea4c9c3242454a16657e24ef7">Append</a>(szWChar);</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;}</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160; </div>
<div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a97d0149bd32e043f5177ac63e172b2dd">   74</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#a97d0149bd32e043f5177ac63e172b2dd">ezStringBuilder::operator=</a>(<span class="keyword">const</span> <a class="code" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>&amp; rhs)</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;{</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  m_uiCharacterCount = rhs.m_uiCharacterCount;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;  m_Data = rhs.m_Data;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;}</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160; </div>
<div class="line"><a name="l00080"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#ab2b87a1bec387cbcfe36629b6560957f">   80</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#a97d0149bd32e043f5177ac63e172b2dd">ezStringBuilder::operator=</a>(<a class="code" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>&amp;&amp; rhs) noexcept</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;{</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;  m_uiCharacterCount = rhs.m_uiCharacterCount;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;  m_Data = std::move(rhs.m_Data);</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;}</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160; </div>
<div class="line"><a name="l00086"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a946ff0b7b84634095a79a548777b51fd">   86</a></span>&#160;EZ_ALWAYS_INLINE ezUInt32 <a class="code" href="../../d3/d88/classez_string_builder.htm#a946ff0b7b84634095a79a548777b51fd">ezStringBuilder::GetElementCount</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;  <span class="keywordflow">return</span> m_Data.<a class="code" href="../../dc/d59/classez_array_base.htm#a51ba61fcbd2350ae8850754a41acbaa1">GetCount</a>() - 1; <span class="comment">// exclude the &#39;\0&#39; terminator</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;}</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160; </div>
<div class="line"><a name="l00091"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a0a3a36dcfd096259e15f167e2bd6ca07">   91</a></span>&#160;EZ_ALWAYS_INLINE ezUInt32 <a class="code" href="../../d3/d88/classez_string_builder.htm#a0a3a36dcfd096259e15f167e2bd6ca07">ezStringBuilder::GetCharacterCount</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  <span class="keywordflow">return</span> m_uiCharacterCount;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;}</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160; </div>
<div class="line"><a name="l00096"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#adcad83a62b2769887a7d405e0f4b6453">   96</a></span>&#160;EZ_ALWAYS_INLINE ezStringBuilder::operator <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a>(GetData(), GetData() + GetElementCount());</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;}</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160; </div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160; </div>
<div class="line"><a name="l00102"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#ada4ae74d30a0ec1d027123f6e1ae6e8e">  102</a></span>&#160;EZ_ALWAYS_INLINE <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> <a class="code" href="../../d3/d88/classez_string_builder.htm#ada4ae74d30a0ec1d027123f6e1ae6e8e">ezStringBuilder::GetView</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a>(<a class="code" href="../../d3/d88/classez_string_builder.htm#a3063473d38e978ef950a11d302983bba">GetData</a>(), <a class="code" href="../../d3/d88/classez_string_builder.htm#a3063473d38e978ef950a11d302983bba">GetData</a>() + <a class="code" href="../../d3/d88/classez_string_builder.htm#a946ff0b7b84634095a79a548777b51fd">GetElementCount</a>());</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;}</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160; </div>
<div class="line"><a name="l00107"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a162e5eb18bb60fd044c2fbbcdfa79228">  107</a></span>&#160;EZ_FORCE_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#a162e5eb18bb60fd044c2fbbcdfa79228">ezStringBuilder::Clear</a>()</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;{</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;  m_uiCharacterCount = 0;</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;  m_Data.<a class="code" href="../../dc/d59/classez_array_base.htm#aa42fdcea580029c35b32658bd6d9fd50">SetCountUninitialized</a>(1);</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;  m_Data[0] = <span class="charliteral">&#39;\0&#39;</span>;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;}</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160; </div>
<div class="line"><a name="l00114"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a605f325ea4c9c3242454a16657e24ef7">  114</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#a605f325ea4c9c3242454a16657e24ef7">ezStringBuilder::Append</a>(ezUInt32 uiChar)</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;{</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;  <span class="keywordtype">char</span> szChar[6] = {0, 0, 0, 0, 0, 0};</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;  <span class="keywordtype">char</span>* pChar = &amp;szChar[0];</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160; </div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;  <a class="code" href="../../d9/d32/classez_unicode_utils.htm#ae783ba4fa2cc96ea397955039f3f5e48">ezUnicodeUtils::EncodeUtf32ToUtf8</a>(uiChar, pChar);</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;  ezUInt32 uiCharLen = (ezUInt32)(pChar - szChar);</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;  ezUInt32 uiOldCount = m_Data.<a class="code" href="../../dc/d59/classez_array_base.htm#a51ba61fcbd2350ae8850754a41acbaa1">GetCount</a>();</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;  m_Data.<a class="code" href="../../dc/d59/classez_array_base.htm#aa42fdcea580029c35b32658bd6d9fd50">SetCountUninitialized</a>(uiOldCount + uiCharLen);</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;  uiOldCount--;</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;  <span class="keywordflow">for</span> (ezUInt32 i = 0; i &lt; uiCharLen; i++)</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;  {</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    m_Data[uiOldCount + i] = szChar[i];</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;  }</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;  m_Data[uiOldCount + uiCharLen] = <span class="charliteral">&#39;\0&#39;</span>;</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;  ++m_uiCharacterCount;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;}</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160; </div>
<div class="line"><a name="l00132"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a2f2c181d7a18b4296425754854710f6b">  132</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#a2f2c181d7a18b4296425754854710f6b">ezStringBuilder::Prepend</a>(ezUInt32 uiChar)</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;{</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;  <span class="keywordtype">char</span> szChar[6] = {0, 0, 0, 0, 0, 0};</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;  <span class="keywordtype">char</span>* pChar = &amp;szChar[0];</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160; </div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;  <a class="code" href="../../d9/d32/classez_unicode_utils.htm#ae783ba4fa2cc96ea397955039f3f5e48">ezUnicodeUtils::EncodeUtf32ToUtf8</a>(uiChar, pChar);</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;  <a class="code" href="../../d3/d88/classez_string_builder.htm#a2f2c181d7a18b4296425754854710f6b">Prepend</a>(szChar);</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;}</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160; </div>
<div class="line"><a name="l00141"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#abeb5eb562d24b4c7c6b8819900e28766">  141</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#a605f325ea4c9c3242454a16657e24ef7">ezStringBuilder::Append</a>(</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData1, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData2, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData3, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData4, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData5, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData6)</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;{</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;  <span class="comment">// this is a bit heavy on the stack size (6KB)</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;  <span class="comment">// but it is really only a convenience function, as one could always just use the char* Append function and convert explicitly</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;  <a class="code" href="../../d9/d95/classez_string_utf8.htm">ezStringUtf8</a> s1(pData1, m_Data.<a class="code" href="../../d5/d3f/classez_dynamic_array_base.htm#af69a2cab402c0cf89448e33e1b998cd4">GetAllocator</a>());</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;  <a class="code" href="../../d9/d95/classez_string_utf8.htm">ezStringUtf8</a> s2(pData2, m_Data.<a class="code" href="../../d5/d3f/classez_dynamic_array_base.htm#af69a2cab402c0cf89448e33e1b998cd4">GetAllocator</a>());</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;  <a class="code" href="../../d9/d95/classez_string_utf8.htm">ezStringUtf8</a> s3(pData3, m_Data.<a class="code" href="../../d5/d3f/classez_dynamic_array_base.htm#af69a2cab402c0cf89448e33e1b998cd4">GetAllocator</a>());</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;  <a class="code" href="../../d9/d95/classez_string_utf8.htm">ezStringUtf8</a> s4(pData4, m_Data.<a class="code" href="../../d5/d3f/classez_dynamic_array_base.htm#af69a2cab402c0cf89448e33e1b998cd4">GetAllocator</a>());</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;  <a class="code" href="../../d9/d95/classez_string_utf8.htm">ezStringUtf8</a> s5(pData5, m_Data.<a class="code" href="../../d5/d3f/classez_dynamic_array_base.htm#af69a2cab402c0cf89448e33e1b998cd4">GetAllocator</a>());</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;  <a class="code" href="../../d9/d95/classez_string_utf8.htm">ezStringUtf8</a> s6(pData6, m_Data.<a class="code" href="../../d5/d3f/classez_dynamic_array_base.htm#af69a2cab402c0cf89448e33e1b998cd4">GetAllocator</a>());</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160; </div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;  <a class="code" href="../../d3/d88/classez_string_builder.htm#a605f325ea4c9c3242454a16657e24ef7">Append</a>(s1.GetData(), s2.GetData(), s3.GetData(), s4.GetData(), s5.GetData(), s6.GetData());</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;}</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160; </div>
<div class="line"><a name="l00156"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a59f53f467d198e72c0e284a587ca73fa">  156</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#a2f2c181d7a18b4296425754854710f6b">ezStringBuilder::Prepend</a>(</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData1, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData2, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData3, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData4, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData5, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData6)</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;{</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;  <span class="comment">// this is a bit heavy on the stack size (6KB)</span></div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;  <span class="comment">// but it is really only a convenience function, as one could always just use the char* Append function and convert explicitly</span></div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;  <a class="code" href="../../d9/d95/classez_string_utf8.htm">ezStringUtf8</a> s1(pData1, m_Data.<a class="code" href="../../d5/d3f/classez_dynamic_array_base.htm#af69a2cab402c0cf89448e33e1b998cd4">GetAllocator</a>());</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;  <a class="code" href="../../d9/d95/classez_string_utf8.htm">ezStringUtf8</a> s2(pData2, m_Data.<a class="code" href="../../d5/d3f/classez_dynamic_array_base.htm#af69a2cab402c0cf89448e33e1b998cd4">GetAllocator</a>());</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;  <a class="code" href="../../d9/d95/classez_string_utf8.htm">ezStringUtf8</a> s3(pData3, m_Data.<a class="code" href="../../d5/d3f/classez_dynamic_array_base.htm#af69a2cab402c0cf89448e33e1b998cd4">GetAllocator</a>());</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;  <a class="code" href="../../d9/d95/classez_string_utf8.htm">ezStringUtf8</a> s4(pData4, m_Data.<a class="code" href="../../d5/d3f/classez_dynamic_array_base.htm#af69a2cab402c0cf89448e33e1b998cd4">GetAllocator</a>());</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;  <a class="code" href="../../d9/d95/classez_string_utf8.htm">ezStringUtf8</a> s5(pData5, m_Data.<a class="code" href="../../d5/d3f/classez_dynamic_array_base.htm#af69a2cab402c0cf89448e33e1b998cd4">GetAllocator</a>());</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;  <a class="code" href="../../d9/d95/classez_string_utf8.htm">ezStringUtf8</a> s6(pData6, m_Data.<a class="code" href="../../d5/d3f/classez_dynamic_array_base.htm#af69a2cab402c0cf89448e33e1b998cd4">GetAllocator</a>());</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160; </div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;  <a class="code" href="../../d3/d88/classez_string_builder.htm#a2f2c181d7a18b4296425754854710f6b">Prepend</a>(s1.GetData(), s2.GetData(), s3.GetData(), s4.GetData(), s5.GetData(), s6.GetData());</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;}</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160; </div>
<div class="line"><a name="l00171"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a3063473d38e978ef950a11d302983bba">  171</a></span>&#160;EZ_ALWAYS_INLINE <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="../../d3/d88/classez_string_builder.htm#a3063473d38e978ef950a11d302983bba">ezStringBuilder::GetData</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;  EZ_ASSERT_DEBUG(!m_Data.<a class="code" href="../../dc/d59/classez_array_base.htm#a35630a870ec53cf3b022653232a31c60">IsEmpty</a>(), <span class="stringliteral">&quot;ezStringBuilder has been corrupted, the array can never be empty.&quot;</span>);</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160; </div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;  <span class="keywordflow">return</span> &amp;m_Data[0];</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;}</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160; </div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> ezStringBuilder::AppendTerminator()</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;{</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;  <span class="comment">// make sure the string terminates with a zero.</span></div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;  <span class="keywordflow">if</span> (m_Data.<a class="code" href="../../dc/d59/classez_array_base.htm#a35630a870ec53cf3b022653232a31c60">IsEmpty</a>() || (m_Data.<a class="code" href="../../dc/d59/classez_array_base.htm#a96092a83818db3f1b5d62a182fd38c8e">PeekBack</a>() != <span class="charliteral">&#39;\0&#39;</span>))</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    m_Data.<a class="code" href="../../dc/d59/classez_array_base.htm#abc514bdf8b2de7b5b220ffdbd862e830">PushBack</a>(<span class="charliteral">&#39;\0&#39;</span>);</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;}</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160; </div>
<div class="line"><a name="l00185"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a8beb183188db5f5ddacca112fe279e3c">  185</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#a8beb183188db5f5ddacca112fe279e3c">ezStringBuilder::ToUpper</a>()</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;{</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;  <span class="keyword">const</span> ezUInt32 uiNewStringLength = <a class="code" href="../../de/df8/classez_string_utils.htm#a7f700515442b9c61864de2fa3ac81998">ezStringUtils::ToUpperString</a>(&amp;m_Data[0]);</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160; </div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;  <span class="comment">// the array stores the number of bytes, so set the count to the actually used number of bytes</span></div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;  m_Data.<a class="code" href="../../dc/d59/classez_array_base.htm#aa42fdcea580029c35b32658bd6d9fd50">SetCountUninitialized</a>(uiNewStringLength + 1);</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;}</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160; </div>
<div class="line"><a name="l00193"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a61765d9803ff70f064cfc17c1fd04d89">  193</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#a61765d9803ff70f064cfc17c1fd04d89">ezStringBuilder::ToLower</a>()</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;{</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;  <span class="keyword">const</span> ezUInt32 uiNewStringLength = <a class="code" href="../../de/df8/classez_string_utils.htm#a3335c5fa83fe13480e69f4ee8f5c24e8">ezStringUtils::ToLowerString</a>(&amp;m_Data[0]);</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160; </div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;  <span class="comment">// the array stores the number of bytes, so set the count to the actually used number of bytes</span></div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;  m_Data.<a class="code" href="../../dc/d59/classez_array_base.htm#aa42fdcea580029c35b32658bd6d9fd50">SetCountUninitialized</a>(uiNewStringLength + 1);</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;}</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160; </div>
<div class="line"><a name="l00201"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a30892f8031346691835a90f009973138">  201</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#a30892f8031346691835a90f009973138">ezStringBuilder::ChangeCharacter</a>(iterator&amp; it, ezUInt32 uiCharacter)</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;{</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;  EZ_ASSERT_DEV(it.IsValid(), <span class="stringliteral">&quot;The given character iterator does not point to a valid character.&quot;</span>);</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;  EZ_ASSERT_DEV(it.GetData() &gt;= <a class="code" href="../../d3/d88/classez_string_builder.htm#a3063473d38e978ef950a11d302983bba">GetData</a>() &amp;&amp; it.GetData() &lt; <a class="code" href="../../d3/d88/classez_string_builder.htm#a3063473d38e978ef950a11d302983bba">GetData</a>() + <a class="code" href="../../d3/d88/classez_string_builder.htm#a946ff0b7b84634095a79a548777b51fd">GetElementCount</a>(),</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <span class="stringliteral">&quot;The given character iterator does not point into this string. It was either created from another string, or this string &quot;</span></div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    <span class="stringliteral">&quot;has been reallocated in the mean time.&quot;</span>);</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160; </div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;  <span class="comment">// this is only an optimization for pure ASCII strings</span></div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;  <span class="comment">// without it, the code below would still work</span></div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;  <span class="keywordflow">if</span> (<a class="code" href="../../d9/d32/classez_unicode_utils.htm#aa8fc2304ec3c1db82831c424097a30f5">ezUnicodeUtils::IsASCII</a>(*it) &amp;&amp; <a class="code" href="../../d9/d32/classez_unicode_utils.htm#aa8fc2304ec3c1db82831c424097a30f5">ezUnicodeUtils::IsASCII</a>(uiCharacter))</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;  {</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    <span class="keywordtype">char</span>* pPos = <span class="keyword">const_cast&lt;</span><span class="keywordtype">char</span>*<span class="keyword">&gt;</span>(it.GetData()); <span class="comment">// yes, I know...</span></div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    *pPos = uiCharacter &amp; 0xFF;</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;  }</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160; </div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;  ChangeCharacterNonASCII(it, uiCharacter);</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;}</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160; </div>
<div class="line"><a name="l00220"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#ac36f8202651a4273fcc6ac38b3116bda">  220</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#ac36f8202651a4273fcc6ac38b3116bda">ezStringBuilder::IsPureASCII</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;  <span class="keywordflow">return</span> m_uiCharacterCount + 1 == m_Data.<a class="code" href="../../dc/d59/classez_array_base.htm#a51ba61fcbd2350ae8850754a41acbaa1">GetCount</a>();</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;}</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160; </div>
<div class="line"><a name="l00225"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#aa8e97941dfc6747eabf7e8dfb1c8c783">  225</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#aa8e97941dfc6747eabf7e8dfb1c8c783">ezStringBuilder::Reserve</a>(ezUInt32 uiNumElements)</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;{</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;  m_Data.<a class="code" href="../../d5/d3f/classez_dynamic_array_base.htm#a50350d5df71a36771f23feabe9315296">Reserve</a>(uiNumElements);</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;}</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160; </div>
<div class="line"><a name="l00230"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a8d35fbf420bed080094ffd42141656db">  230</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#a8d35fbf420bed080094ffd42141656db">ezStringBuilder::Insert</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szInsertAtPos, <span class="keyword">const</span> <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a>&amp; szTextToInsert)</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;{</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;  <a class="code" href="../../d3/d88/classez_string_builder.htm#a1344a3f45ece14cf68c50012129fc870">ReplaceSubString</a>(szInsertAtPos, szInsertAtPos, szTextToInsert);</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;}</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160; </div>
<div class="line"><a name="l00235"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#ad9e3819efaa857a532b63a7c204f5b5f">  235</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#ad9e3819efaa857a532b63a7c204f5b5f">ezStringBuilder::Remove</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szRemoveFromPos, <span class="keyword">const</span> <span class="keywordtype">char</span>* szRemoveToPos)</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;{</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;  <a class="code" href="../../d3/d88/classez_string_builder.htm#a1344a3f45ece14cf68c50012129fc870">ReplaceSubString</a>(szRemoveFromPos, szRemoveToPos, <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a>());</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;}</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160; </div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Container&gt;</div>
<div class="line"><a name="l00241"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a2247bea5abf668d0fb7545dfb3acf413">  241</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#a2247bea5abf668d0fb7545dfb3acf413">ezStringBuilder::Split</a>(<span class="keywordtype">bool</span> bReturnEmptyStrings, Container&amp; Output, <span class="keyword">const</span> <span class="keywordtype">char</span>* szSeparator1, <span class="keyword">const</span> <span class="keywordtype">char</span>* szSeparator2, <span class="keyword">const</span> <span class="keywordtype">char</span>* szSeparator3,</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span>* szSeparator4, <span class="keyword">const</span> <span class="keywordtype">char</span>* szSeparator5, <span class="keyword">const</span> <span class="keywordtype">char</span>* szSeparator6)<span class="keyword"> const</span></div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;  Output.Clear();</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160; </div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;  <span class="keywordflow">if</span> (<a class="code" href="../../dd/d69/structez_string_base.htm#a3b169646f62ef8a8d33b63e2b8731afb">IsEmpty</a>())</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160; </div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;  <span class="keyword">const</span> ezUInt32 uiParams = 6;</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160; </div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span>* Seps[uiParams] = {szSeparator1, szSeparator2, szSeparator3, szSeparator4, szSeparator5, szSeparator6};</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160; </div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;  ezUInt32 SepLen[uiParams];</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160; </div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;  <span class="keywordflow">for</span> (ezInt32 i = 0; i &lt; uiParams; ++i)</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    SepLen[i] = <a class="code" href="../../de/df8/classez_string_utils.htm#ad44fcc9c80d1da803b7248cb88acefd4">ezStringUtils::GetStringElementCount</a>(Seps[i]);</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160; </div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span>* szReadPos = <a class="code" href="../../d3/d88/classez_string_builder.htm#a3063473d38e978ef950a11d302983bba">GetData</a>();</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160; </div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;  <span class="keywordflow">while</span> (<span class="keyword">true</span>)</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;  {</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span>* szFoundPos = ezUnicodeUtils::GetMaxStringEnd&lt;char&gt;();</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    ezInt32 iFoundSeparator = 0;</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160; </div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    <span class="keywordflow">for</span> (ezInt32 i = 0; i &lt; uiParams; ++i)</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    {</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;      <span class="keyword">const</span> <span class="keywordtype">char</span>* szFound = <a class="code" href="../../de/df8/classez_string_utils.htm#a6b40e1a14058c184d69c1b25d9543a13">ezStringUtils::FindSubString</a>(szReadPos, Seps[i]);</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160; </div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;      <span class="keywordflow">if</span> ((szFound != <span class="keyword">nullptr</span>) &amp;&amp; (szFound &lt; szFoundPos))</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;      {</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;        szFoundPos = szFound;</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;        iFoundSeparator = i;</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;      }</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;    }</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160; </div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    <span class="comment">// nothing found</span></div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    <span class="keywordflow">if</span> (szFoundPos == ezUnicodeUtils::GetMaxStringEnd&lt;char&gt;())</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    {</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;      <span class="keyword">const</span> ezUInt32 uiLen = <a class="code" href="../../de/df8/classez_string_utils.htm#ad44fcc9c80d1da803b7248cb88acefd4">ezStringUtils::GetStringElementCount</a>(szReadPos);</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160; </div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;      <span class="keywordflow">if</span> (bReturnEmptyStrings || (uiLen &gt; 0))</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;        Output.PushBack(<a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a>(szReadPos, szReadPos + uiLen));</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160; </div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;      <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    }</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160; </div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    <span class="keywordflow">if</span> (bReturnEmptyStrings || (szFoundPos &gt; szReadPos))</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;      Output.PushBack(<a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a>(szReadPos, szFoundPos));</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160; </div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;    szReadPos = szFoundPos + SepLen[iFoundSeparator];</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;  }</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;}</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160; </div>
<div class="line"><a name="l00294"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#adca3d6d8405f4ceb59e42a6cf79190a6">  294</a></span>&#160;EZ_FORCE_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#adca3d6d8405f4ceb59e42a6cf79190a6">ezStringBuilder::HasAnyExtension</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d4/de7/classez_path_utils.htm#a875e05396b1bc4d460420743d59f7b30">ezPathUtils::HasAnyExtension</a>(<a class="code" href="../../d3/d88/classez_string_builder.htm#a3063473d38e978ef950a11d302983bba">GetData</a>(), <a class="code" href="../../d3/d88/classez_string_builder.htm#a3063473d38e978ef950a11d302983bba">GetData</a>() + <a class="code" href="../../d3/d88/classez_string_builder.htm#a946ff0b7b84634095a79a548777b51fd">GetElementCount</a>());</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;}</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160; </div>
<div class="line"><a name="l00299"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#ae7edf5fa09c8095b876ebe14744175eb">  299</a></span>&#160;EZ_FORCE_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#ae7edf5fa09c8095b876ebe14744175eb">ezStringBuilder::HasExtension</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szExtension)<span class="keyword"> const</span></div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d4/de7/classez_path_utils.htm#a000295743bb7a6044d36c8cc9017a249">ezPathUtils::HasExtension</a>(<a class="code" href="../../d3/d88/classez_string_builder.htm#a3063473d38e978ef950a11d302983bba">GetData</a>(), szExtension, <a class="code" href="../../d3/d88/classez_string_builder.htm#a3063473d38e978ef950a11d302983bba">GetData</a>() + <a class="code" href="../../d3/d88/classez_string_builder.htm#a946ff0b7b84634095a79a548777b51fd">GetElementCount</a>());</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;}</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160; </div>
<div class="line"><a name="l00304"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#adf39deb8045ac38ec59f18b14fd77d7c">  304</a></span>&#160;EZ_FORCE_INLINE <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> <a class="code" href="../../d3/d88/classez_string_builder.htm#adf39deb8045ac38ec59f18b14fd77d7c">ezStringBuilder::GetFileExtension</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d4/de7/classez_path_utils.htm#ac9da600c89d6cc82029ce57e551faadd">ezPathUtils::GetFileExtension</a>(<a class="code" href="../../d3/d88/classez_string_builder.htm#a3063473d38e978ef950a11d302983bba">GetData</a>(), <a class="code" href="../../d3/d88/classez_string_builder.htm#a3063473d38e978ef950a11d302983bba">GetData</a>() + <a class="code" href="../../d3/d88/classez_string_builder.htm#a946ff0b7b84634095a79a548777b51fd">GetElementCount</a>());</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;}</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160; </div>
<div class="line"><a name="l00309"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#acf870607ef58a5899a139868ac2aa4bf">  309</a></span>&#160;EZ_FORCE_INLINE <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> <a class="code" href="../../d3/d88/classez_string_builder.htm#acf870607ef58a5899a139868ac2aa4bf">ezStringBuilder::GetFileName</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d4/de7/classez_path_utils.htm#af82a5a491fea15820ff763062eda2532">ezPathUtils::GetFileName</a>(<a class="code" href="../../d3/d88/classez_string_builder.htm#a3063473d38e978ef950a11d302983bba">GetData</a>(), <a class="code" href="../../d3/d88/classez_string_builder.htm#a3063473d38e978ef950a11d302983bba">GetData</a>() + <a class="code" href="../../d3/d88/classez_string_builder.htm#a946ff0b7b84634095a79a548777b51fd">GetElementCount</a>());</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;}</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160; </div>
<div class="line"><a name="l00314"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#adb91acdad116235acba89117ad5de589">  314</a></span>&#160;EZ_FORCE_INLINE <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> <a class="code" href="../../d3/d88/classez_string_builder.htm#adb91acdad116235acba89117ad5de589">ezStringBuilder::GetFileNameAndExtension</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d4/de7/classez_path_utils.htm#a39c0ccb77026908c282a6e251364e9fa">ezPathUtils::GetFileNameAndExtension</a>(<a class="code" href="../../d3/d88/classez_string_builder.htm#a3063473d38e978ef950a11d302983bba">GetData</a>(), <a class="code" href="../../d3/d88/classez_string_builder.htm#a3063473d38e978ef950a11d302983bba">GetData</a>() + <a class="code" href="../../d3/d88/classez_string_builder.htm#a946ff0b7b84634095a79a548777b51fd">GetElementCount</a>());</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;}</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160; </div>
<div class="line"><a name="l00319"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a20f0efd1e9666494ca11fb1495bcbf73">  319</a></span>&#160;EZ_FORCE_INLINE <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> <a class="code" href="../../d3/d88/classez_string_builder.htm#a20f0efd1e9666494ca11fb1495bcbf73">ezStringBuilder::GetFileDirectory</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d4/de7/classez_path_utils.htm#a9cedd8346a62d0555703f64302174cb3">ezPathUtils::GetFileDirectory</a>(<a class="code" href="../../d3/d88/classez_string_builder.htm#a3063473d38e978ef950a11d302983bba">GetData</a>(), <a class="code" href="../../d3/d88/classez_string_builder.htm#a3063473d38e978ef950a11d302983bba">GetData</a>() + <a class="code" href="../../d3/d88/classez_string_builder.htm#a946ff0b7b84634095a79a548777b51fd">GetElementCount</a>());</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;}</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160; </div>
<div class="line"><a name="l00324"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a28f1b234f7f346757bfd3dfa3b41450c">  324</a></span>&#160;EZ_FORCE_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#a28f1b234f7f346757bfd3dfa3b41450c">ezStringBuilder::IsAbsolutePath</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d4/de7/classez_path_utils.htm#a412e0b87612623b0ca7501b25ce99d1f">ezPathUtils::IsAbsolutePath</a>(<a class="code" href="../../d3/d88/classez_string_builder.htm#a3063473d38e978ef950a11d302983bba">GetData</a>());</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;}</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160; </div>
<div class="line"><a name="l00329"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#aef98e02aad87a198d1b3d9bc3f23ca37">  329</a></span>&#160;EZ_FORCE_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#aef98e02aad87a198d1b3d9bc3f23ca37">ezStringBuilder::IsRelativePath</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d4/de7/classez_path_utils.htm#ad13fcc1113a5a18c0591df65bb029ff7">ezPathUtils::IsRelativePath</a>(<a class="code" href="../../d3/d88/classez_string_builder.htm#a3063473d38e978ef950a11d302983bba">GetData</a>());</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;}</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160; </div>
<div class="line"><a name="l00334"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a3dcc5f63ea6302ef729fc6af6c23ef5c">  334</a></span>&#160;EZ_FORCE_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#a3dcc5f63ea6302ef729fc6af6c23ef5c">ezStringBuilder::IsRootedPath</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d4/de7/classez_path_utils.htm#a9a7575f0abf20fa42e1f3991b5658b31">ezPathUtils::IsRootedPath</a>(<a class="code" href="../../d3/d88/classez_string_builder.htm#a3063473d38e978ef950a11d302983bba">GetData</a>());</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;}</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160; </div>
<div class="line"><a name="l00339"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#af28ee56b65ef97cb7f5cd3b45f503019">  339</a></span>&#160;EZ_FORCE_INLINE <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> <a class="code" href="../../d3/d88/classez_string_builder.htm#af28ee56b65ef97cb7f5cd3b45f503019">ezStringBuilder::GetRootedPathRootName</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d4/de7/classez_path_utils.htm#a1f8d96653278c672edbd7c79fb91fc14">ezPathUtils::GetRootedPathRootName</a>(<a class="code" href="../../d3/d88/classez_string_builder.htm#a3063473d38e978ef950a11d302983bba">GetData</a>());</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;}</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160; </div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;<span class="preprocessor">#include &lt;Foundation/Strings/Implementation/AllStrings_inl.h&gt;</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassez_unicode_utils_htm_ae783ba4fa2cc96ea397955039f3f5e48"><div class="ttname"><a href="../../d9/d32/classez_unicode_utils.htm#ae783ba4fa2cc96ea397955039f3f5e48">ezUnicodeUtils::EncodeUtf32ToUtf8</a></div><div class="ttdeci">static void EncodeUtf32ToUtf8(ezUInt32 uiUtf32, ByteIterator &amp;szUtf8Output)</div><div class="ttdoc">Encodes the given Utf32 character to Utf8 and writes as many bytes to the output iterator,...</div><div class="ttdef"><b>Definition:</b> UnicodeUtils_inl.h:92</div></div>
<div class="ttc" id="aclassez_unicode_utils_htm_aa8fc2304ec3c1db82831c424097a30f5"><div class="ttname"><a href="../../d9/d32/classez_unicode_utils.htm#aa8fc2304ec3c1db82831c424097a30f5">ezUnicodeUtils::IsASCII</a></div><div class="ttdeci">static bool IsASCII(ezUInt32 uiChar)</div><div class="ttdoc">Returns whether a character is a pure ASCII character (only the first 7 Bits are used)</div><div class="ttdef"><b>Definition:</b> UnicodeUtils_inl.h:23</div></div>
<div class="ttc" id="aclassez_string_utils_htm_a7f700515442b9c61864de2fa3ac81998"><div class="ttname"><a href="../../de/df8/classez_string_utils.htm#a7f700515442b9c61864de2fa3ac81998">ezStringUtils::ToUpperString</a></div><div class="ttdeci">static ezUInt32 ToUpperString(char *szString, const char *pStringEnd=ezUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Converts a (UTF-8) string in-place to upper case.</div><div class="ttdef"><b>Definition:</b> StringUtils.cpp:203</div></div>
<div class="ttc" id="aclassez_string_utils_htm_a3335c5fa83fe13480e69f4ee8f5c24e8"><div class="ttname"><a href="../../de/df8/classez_string_utils.htm#a3335c5fa83fe13480e69f4ee8f5c24e8">ezStringUtils::ToLowerString</a></div><div class="ttdeci">static ezUInt32 ToLowerString(char *szString, const char *pStringEnd=ezUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Converts a (UTF-8) string in-place to lower case.</div><div class="ttdef"><b>Definition:</b> StringUtils.cpp:221</div></div>
<div class="ttc" id="aclassez_string_builder_htm_acf870607ef58a5899a139868ac2aa4bf"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#acf870607ef58a5899a139868ac2aa4bf">ezStringBuilder::GetFileName</a></div><div class="ttdeci">ezStringView GetFileName() const</div><div class="ttdoc">Returns the file name of a path, excluding the path and extension.</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:309</div></div>
<div class="ttc" id="aclassez_string_builder_htm_adca3d6d8405f4ceb59e42a6cf79190a6"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#adca3d6d8405f4ceb59e42a6cf79190a6">ezStringBuilder::HasAnyExtension</a></div><div class="ttdeci">bool HasAnyExtension() const</div><div class="ttdoc">Checks whether the given path has any file extension.</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:294</div></div>
<div class="ttc" id="aclassez_path_utils_htm_a000295743bb7a6044d36c8cc9017a249"><div class="ttname"><a href="../../d4/de7/classez_path_utils.htm#a000295743bb7a6044d36c8cc9017a249">ezPathUtils::HasExtension</a></div><div class="ttdeci">static bool HasExtension(const char *szPath, const char *szExtension, const char *szPathEnd=ezUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Checks whether the given path ends with the given extension. szExtension should start with a '....</div><div class="ttdef"><b>Definition:</b> PathUtils.cpp:37</div></div>
<div class="ttc" id="aclassez_string_builder_htm_aae3cd3eb70eabea17763d6a7200fe311"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#aae3cd3eb70eabea17763d6a7200fe311">ezStringBuilder::ezStringBuilder</a></div><div class="ttdeci">ezStringBuilder(ezAllocatorBase *pAllocator=ezFoundation::GetDefaultAllocator())</div><div class="ttdoc">Initializes the string to be empty. No data is allocated, but the ezStringBuilder ALWAYS creates an a...</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:5</div></div>
<div class="ttc" id="aclassez_array_base_htm_abc514bdf8b2de7b5b220ffdbd862e830"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#abc514bdf8b2de7b5b220ffdbd862e830">ezArrayBase::PushBack</a></div><div class="ttdeci">void PushBack(const T &amp;value)</div><div class="ttdoc">Pushes value at the end of the array.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:304</div></div>
<div class="ttc" id="aclassez_path_utils_htm_a875e05396b1bc4d460420743d59f7b30"><div class="ttname"><a href="../../d4/de7/classez_path_utils.htm#a875e05396b1bc4d460420743d59f7b30">ezPathUtils::HasAnyExtension</a></div><div class="ttdeci">static bool HasAnyExtension(const char *szPath, const char *szPathEnd=ezUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Checks whether the given path has any file extension.</div><div class="ttdef"><b>Definition:</b> PathUtils.cpp:22</div></div>
<div class="ttc" id="aclassez_path_utils_htm_a39c0ccb77026908c282a6e251364e9fa"><div class="ttname"><a href="../../d4/de7/classez_path_utils.htm#a39c0ccb77026908c282a6e251364e9fa">ezPathUtils::GetFileNameAndExtension</a></div><div class="ttdeci">static ezStringView GetFileNameAndExtension(const char *szPath, const char *szPathEnd=ezUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Returns the substring that represents the file name including the file extension.</div><div class="ttdef"><b>Definition:</b> PathUtils.cpp:66</div></div>
<div class="ttc" id="aclassez_string_builder_htm_a30892f8031346691835a90f009973138"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a30892f8031346691835a90f009973138">ezStringBuilder::ChangeCharacter</a></div><div class="ttdeci">void ChangeCharacter(iterator &amp;it, ezUInt32 uiCharacter)</div><div class="ttdoc">Changes the single character in this string, to which the iterator currently points.</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:201</div></div>
<div class="ttc" id="aclassez_string_builder_htm_a2f2c181d7a18b4296425754854710f6b"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a2f2c181d7a18b4296425754854710f6b">ezStringBuilder::Prepend</a></div><div class="ttdeci">void Prepend(ezUInt32 uiChar)</div><div class="ttdoc">Prepends a single Utf32 character.</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:132</div></div>
<div class="ttc" id="aclassez_string_builder_htm_a61765d9803ff70f064cfc17c1fd04d89"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a61765d9803ff70f064cfc17c1fd04d89">ezStringBuilder::ToLower</a></div><div class="ttdeci">void ToLower()</div><div class="ttdoc">Converts all characters to lower case. Might move the string data around, so all iterators to the dat...</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:193</div></div>
<div class="ttc" id="aclassez_string_builder_htm_adf39deb8045ac38ec59f18b14fd77d7c"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#adf39deb8045ac38ec59f18b14fd77d7c">ezStringBuilder::GetFileExtension</a></div><div class="ttdeci">ezStringView GetFileExtension() const</div><div class="ttdoc">Returns the file extension of the given path. Will be empty, if the path does not end with a proper e...</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:304</div></div>
<div class="ttc" id="aclassez_string_builder_htm_a79d01c58613d2704c36a582db95b1e42"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a79d01c58613d2704c36a582db95b1e42">ezStringBuilder::GetAllocator</a></div><div class="ttdeci">ezAllocatorBase * GetAllocator() const</div><div class="ttdoc">Returns the allocator that is used by this object.</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:57</div></div>
<div class="ttc" id="aclassez_path_utils_htm_a412e0b87612623b0ca7501b25ce99d1f"><div class="ttname"><a href="../../d4/de7/classez_path_utils.htm#a412e0b87612623b0ca7501b25ce99d1f">ezPathUtils::IsAbsolutePath</a></div><div class="ttdeci">static bool IsAbsolutePath(const char *szPath)</div><div class="ttdoc">Returns true, if the given path represents an absolute path on the current OS.</div><div class="ttdef"><b>Definition:</b> PathUtils.cpp:137</div></div>
<div class="ttc" id="aclassez_string_builder_htm_a6ba7492a22f19af45352d44ddbdb30fa"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a6ba7492a22f19af45352d44ddbdb30fa">ezStringBuilder::Set</a></div><div class="ttdeci">void Set(const char *pData1, const char *pData2=nullptr, const char *pData3=nullptr, const char *pData4=nullptr, const char *pData5=nullptr, const char *pData6=nullptr)</div><div class="ttdoc">Sets the string by concatenating all given strings.</div><div class="ttdef"><b>Definition:</b> StringBuilder.cpp:18</div></div>
<div class="ttc" id="aclassez_string_builder_htm_a946ff0b7b84634095a79a548777b51fd"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a946ff0b7b84634095a79a548777b51fd">ezStringBuilder::GetElementCount</a></div><div class="ttdeci">ezUInt32 GetElementCount() const</div><div class="ttdoc">Returns the number of bytes that this string takes up.</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:86</div></div>
<div class="ttc" id="aclassez_path_utils_htm_af82a5a491fea15820ff763062eda2532"><div class="ttname"><a href="../../d4/de7/classez_path_utils.htm#af82a5a491fea15820ff763062eda2532">ezPathUtils::GetFileName</a></div><div class="ttdeci">static ezStringView GetFileName(const char *szPath, const char *szPathEnd=ezUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Returns the file name of a path, excluding the path and extension.</div><div class="ttdef"><b>Definition:</b> PathUtils.cpp:78</div></div>
<div class="ttc" id="aclassez_string_builder_htm_a0a3a36dcfd096259e15f167e2bd6ca07"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a0a3a36dcfd096259e15f167e2bd6ca07">ezStringBuilder::GetCharacterCount</a></div><div class="ttdeci">ezUInt32 GetCharacterCount() const</div><div class="ttdoc">Returns the number of characters of which this string consists. Might be less than GetElementCount,...</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:91</div></div>
<div class="ttc" id="aclassez_string_builder_htm_a162e5eb18bb60fd044c2fbbcdfa79228"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a162e5eb18bb60fd044c2fbbcdfa79228">ezStringBuilder::Clear</a></div><div class="ttdeci">void Clear()</div><div class="ttdoc">Resets this string to be empty. Does not deallocate any previously allocated data,...</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:107</div></div>
<div class="ttc" id="aclassez_array_base_htm_aa42fdcea580029c35b32658bd6d9fd50"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#aa42fdcea580029c35b32658bd6d9fd50">ezArrayBase::SetCountUninitialized</a></div><div class="ttdeci">void SetCountUninitialized(ezUInt32 uiCount)</div><div class="ttdoc">Resizes the array to have exactly uiCount elements. Extra elements might be uninitialized.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:138</div></div>
<div class="ttc" id="aclassez_array_base_htm_a35630a870ec53cf3b022653232a31c60"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a35630a870ec53cf3b022653232a31c60">ezArrayBase::IsEmpty</a></div><div class="ttdeci">bool IsEmpty() const</div><div class="ttdoc">Returns true, if the array does not contain any elements.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:164</div></div>
<div class="ttc" id="aclassez_dynamic_array_base_htm_af69a2cab402c0cf89448e33e1b998cd4"><div class="ttname"><a href="../../d5/d3f/classez_dynamic_array_base.htm#af69a2cab402c0cf89448e33e1b998cd4">ezDynamicArrayBase::GetAllocator</a></div><div class="ttdeci">ezAllocatorBase * GetAllocator() const</div><div class="ttdoc">Returns the allocator that is used by this instance.</div><div class="ttdef"><b>Definition:</b> DynamicArray.h:53</div></div>
<div class="ttc" id="aclassez_allocator_base_htm"><div class="ttname"><a href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a></div><div class="ttdoc">Base class for all memory allocators.</div><div class="ttdef"><b>Definition:</b> AllocatorBase.h:22</div></div>
<div class="ttc" id="aclassez_string_builder_htm_aef98e02aad87a198d1b3d9bc3f23ca37"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#aef98e02aad87a198d1b3d9bc3f23ca37">ezStringBuilder::IsRelativePath</a></div><div class="ttdeci">bool IsRelativePath() const</div><div class="ttdoc">Returns true, if the given path represents a relative path on the current OS.</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:329</div></div>
<div class="ttc" id="aclassez_string_utf8_htm"><div class="ttname"><a href="../../d9/d95/classez_string_utf8.htm">ezStringUtf8</a></div><div class="ttdoc">A small string class that converts any other encoding to Utf8.</div><div class="ttdef"><b>Definition:</b> StringConversion.h:45</div></div>
<div class="ttc" id="aclassez_array_base_htm_a51ba61fcbd2350ae8850754a41acbaa1"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a51ba61fcbd2350ae8850754a41acbaa1">ezArrayBase::GetCount</a></div><div class="ttdeci">ezUInt32 GetCount() const</div><div class="ttdoc">Returns the number of active elements in the array.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:158</div></div>
<div class="ttc" id="aclassez_path_utils_htm_a1f8d96653278c672edbd7c79fb91fc14"><div class="ttname"><a href="../../d4/de7/classez_path_utils.htm#a1f8d96653278c672edbd7c79fb91fc14">ezPathUtils::GetRootedPathRootName</a></div><div class="ttdeci">static ezStringView GetRootedPathRootName(const char *szPath)</div><div class="ttdoc">Special case of GetRootedPathParts that returns the root of the input path and discards the relative ...</div><div class="ttdef"><b>Definition:</b> PathUtils.cpp:213</div></div>
<div class="ttc" id="aclassez_string_builder_htm_ae7edf5fa09c8095b876ebe14744175eb"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#ae7edf5fa09c8095b876ebe14744175eb">ezStringBuilder::HasExtension</a></div><div class="ttdeci">bool HasExtension(const char *szExtension) const</div><div class="ttdoc">Checks whether the given path ends with the given extension. szExtension should start with a '....</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:299</div></div>
<div class="ttc" id="aclassez_string_builder_htm_a605f325ea4c9c3242454a16657e24ef7"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a605f325ea4c9c3242454a16657e24ef7">ezStringBuilder::Append</a></div><div class="ttdeci">void Append(ezUInt32 uiChar)</div><div class="ttdoc">Appends a single Utf32 character.</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:114</div></div>
<div class="ttc" id="aclassez_path_utils_htm_a9a7575f0abf20fa42e1f3991b5658b31"><div class="ttname"><a href="../../d4/de7/classez_path_utils.htm#a9a7575f0abf20fa42e1f3991b5658b31">ezPathUtils::IsRootedPath</a></div><div class="ttdeci">static bool IsRootedPath(const char *szPath)</div><div class="ttdoc">A rooted path starts with a colon and then names a file-system data directory. Rooted paths are used ...</div><div class="ttdef"><b>Definition:</b> PathUtils.cpp:170</div></div>
<div class="ttc" id="aclassez_path_utils_htm_a9cedd8346a62d0555703f64302174cb3"><div class="ttname"><a href="../../d4/de7/classez_path_utils.htm#a9cedd8346a62d0555703f64302174cb3">ezPathUtils::GetFileDirectory</a></div><div class="ttdeci">static ezStringView GetFileDirectory(const char *szPath, const char *szPathEnd=ezUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Returns the directory of the given file, which is the substring up to the last path separator.</div><div class="ttdef"><b>Definition:</b> PathUtils.cpp:105</div></div>
<div class="ttc" id="aclassez_dynamic_array_base_htm_a50350d5df71a36771f23feabe9315296"><div class="ttname"><a href="../../d5/d3f/classez_dynamic_array_base.htm#a50350d5df71a36771f23feabe9315296">ezDynamicArrayBase::Reserve</a></div><div class="ttdeci">void Reserve(ezUInt32 uiCapacity)</div><div class="ttdoc">Expands the array so it can at least store the given capacity.</div><div class="ttdef"><b>Definition:</b> DynamicArray_inl.h:182</div></div>
<div class="ttc" id="aclassez_string_builder_htm_a3063473d38e978ef950a11d302983bba"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a3063473d38e978ef950a11d302983bba">ezStringBuilder::GetData</a></div><div class="ttdeci">const char * GetData() const</div><div class="ttdoc">Returns a char pointer to the internal Utf8 data.</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:171</div></div>
<div class="ttc" id="astructez_string_base_htm_a3b169646f62ef8a8d33b63e2b8731afb"><div class="ttname"><a href="../../dd/d69/structez_string_base.htm#a3b169646f62ef8a8d33b63e2b8731afb">ezStringBase&lt; ezStringBuilder &gt;::IsEmpty</a></div><div class="ttdeci">bool IsEmpty() const</div><div class="ttdoc">Returns whether the string is an empty string.</div><div class="ttdef"><b>Definition:</b> StringBase_inl.h:25</div></div>
<div class="ttc" id="aclassez_string_builder_htm_a1344a3f45ece14cf68c50012129fc870"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a1344a3f45ece14cf68c50012129fc870">ezStringBuilder::ReplaceSubString</a></div><div class="ttdeci">void ReplaceSubString(const char *szStartPos, const char *szEndPos, const ezStringView &amp;szReplaceWith)</div><div class="ttdoc">Replaces the string that starts at szStartPos and ends at szEndPos with the string szReplaceWith.</div><div class="ttdef"><b>Definition:</b> StringBuilder.cpp:341</div></div>
<div class="ttc" id="aclassez_array_base_htm_a96092a83818db3f1b5d62a182fd38c8e"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a96092a83818db3f1b5d62a182fd38c8e">ezArrayBase::PeekBack</a></div><div class="ttdeci">T &amp; PeekBack()</div><div class="ttdoc">Returns the last element of the array.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:360</div></div>
<div class="ttc" id="aclassez_path_utils_htm_ac9da600c89d6cc82029ce57e551faadd"><div class="ttname"><a href="../../d4/de7/classez_path_utils.htm#ac9da600c89d6cc82029ce57e551faadd">ezPathUtils::GetFileExtension</a></div><div class="ttdeci">static ezStringView GetFileExtension(const char *szPath, const char *szPathEnd=ezUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Returns the file extension of the given path. Will be empty, if the path does not end with a proper e...</div><div class="ttdef"><b>Definition:</b> PathUtils.cpp:48</div></div>
<div class="ttc" id="aclassez_string_builder_htm_a8beb183188db5f5ddacca112fe279e3c"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a8beb183188db5f5ddacca112fe279e3c">ezStringBuilder::ToUpper</a></div><div class="ttdeci">void ToUpper()</div><div class="ttdoc">Converts all characters to upper case. Might move the string data around, so all iterators to the dat...</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:185</div></div>
<div class="ttc" id="aclassez_string_builder_htm_ac36f8202651a4273fcc6ac38b3116bda"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#ac36f8202651a4273fcc6ac38b3116bda">ezStringBuilder::IsPureASCII</a></div><div class="ttdeci">bool IsPureASCII() const</div><div class="ttdoc">Returns whether this string only contains ASCII characters, which means that GetElementCount() == Get...</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:220</div></div>
<div class="ttc" id="astructez_string_view_htm"><div class="ttname"><a href="../../de/db8/structez_string_view.htm">ezStringView</a></div><div class="ttdoc">ezStringView represent a read-only sub-string of a larger string, as it can store a dedicated string ...</div><div class="ttdef"><b>Definition:</b> StringView.h:20</div></div>
<div class="ttc" id="aclassez_string_utils_htm_a6b40e1a14058c184d69c1b25d9543a13"><div class="ttname"><a href="../../de/df8/classez_string_utils.htm#a6b40e1a14058c184d69c1b25d9543a13">ezStringUtils::FindSubString</a></div><div class="ttdeci">static const char * FindSubString(const char *szSource, const char *szStringToFind, const char *pSourceEnd=ezUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Searches for the first occurrence of szStringToFind in szSource.</div><div class="ttdef"><b>Definition:</b> StringUtils.cpp:604</div></div>
<div class="ttc" id="aclassez_string_builder_htm_a97d0149bd32e043f5177ac63e172b2dd"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a97d0149bd32e043f5177ac63e172b2dd">ezStringBuilder::operator=</a></div><div class="ttdeci">void operator=(const ezStringBuilder &amp;rhs)</div><div class="ttdoc">Copies the given string into this one.</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:74</div></div>
<div class="ttc" id="aclassez_string_builder_htm_adb91acdad116235acba89117ad5de589"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#adb91acdad116235acba89117ad5de589">ezStringBuilder::GetFileNameAndExtension</a></div><div class="ttdeci">ezStringView GetFileNameAndExtension() const</div><div class="ttdoc">Returns the substring that represents the file name including the file extension.</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:314</div></div>
<div class="ttc" id="aclassez_string_builder_htm_a8d35fbf420bed080094ffd42141656db"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a8d35fbf420bed080094ffd42141656db">ezStringBuilder::Insert</a></div><div class="ttdeci">void Insert(const char *szInsertAtPos, const ezStringView &amp;szTextToInsert)</div><div class="ttdoc">A wrapper around ReplaceSubString. Will insert the given string at szInsertAtPos.</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:230</div></div>
<div class="ttc" id="aclassez_string_builder_htm_a3dcc5f63ea6302ef729fc6af6c23ef5c"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a3dcc5f63ea6302ef729fc6af6c23ef5c">ezStringBuilder::IsRootedPath</a></div><div class="ttdeci">bool IsRootedPath() const</div><div class="ttdoc">Returns true, if the given path represents a 'rooted' path. See ezFileSystem for details.</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:334</div></div>
<div class="ttc" id="aclassez_string_builder_htm_a28f1b234f7f346757bfd3dfa3b41450c"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a28f1b234f7f346757bfd3dfa3b41450c">ezStringBuilder::IsAbsolutePath</a></div><div class="ttdeci">bool IsAbsolutePath() const</div><div class="ttdoc">Returns true, if the given path represents an absolute path on the current OS.</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:324</div></div>
<div class="ttc" id="aclassez_path_utils_htm_ad13fcc1113a5a18c0591df65bb029ff7"><div class="ttname"><a href="../../d4/de7/classez_path_utils.htm#ad13fcc1113a5a18c0591df65bb029ff7">ezPathUtils::IsRelativePath</a></div><div class="ttdeci">static bool IsRelativePath(const char *szPath)</div><div class="ttdoc">Returns true, if the given path represents a relative path on the current OS.</div><div class="ttdef"><b>Definition:</b> PathUtils.cpp:158</div></div>
<div class="ttc" id="aclassez_string_builder_htm_aa8e97941dfc6747eabf7e8dfb1c8c783"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#aa8e97941dfc6747eabf7e8dfb1c8c783">ezStringBuilder::Reserve</a></div><div class="ttdeci">void Reserve(ezUInt32 uiNumElements)</div><div class="ttdoc">Reserves uiNumElements bytes.</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:225</div></div>
<div class="ttc" id="aclassez_string_builder_htm_af28ee56b65ef97cb7f5cd3b45f503019"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#af28ee56b65ef97cb7f5cd3b45f503019">ezStringBuilder::GetRootedPathRootName</a></div><div class="ttdeci">ezStringView GetRootedPathRootName() const</div><div class="ttdoc">Extracts the root name from a rooted path.</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:339</div></div>
<div class="ttc" id="aclassez_string_builder_htm"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></div><div class="ttdoc">ezStringBuilder is a class that is meant for creating and modifying strings.</div><div class="ttdef"><b>Definition:</b> StringBuilder.h:34</div></div>
<div class="ttc" id="aclassez_string_builder_htm_a2247bea5abf668d0fb7545dfb3acf413"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a2247bea5abf668d0fb7545dfb3acf413">ezStringBuilder::Split</a></div><div class="ttdeci">void Split(bool bReturnEmptyStrings, Container &amp;Output, const char *szSeparator1, const char *szSeparator2=nullptr, const char *szSeparator3=nullptr, const char *szSeparator4=nullptr, const char *szSeparator5=nullptr, const char *szSeparator6=nullptr) const</div><div class="ttdoc">Fills the given container with ezStringView's which represent each found substring....</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:241</div></div>
<div class="ttc" id="aclassez_string_builder_htm_ada4ae74d30a0ec1d027123f6e1ae6e8e"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#ada4ae74d30a0ec1d027123f6e1ae6e8e">ezStringBuilder::GetView</a></div><div class="ttdeci">ezStringView GetView() const</div><div class="ttdoc">Returns a string view to this string's data.</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:102</div></div>
<div class="ttc" id="aclassez_string_builder_htm_a20f0efd1e9666494ca11fb1495bcbf73"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a20f0efd1e9666494ca11fb1495bcbf73">ezStringBuilder::GetFileDirectory</a></div><div class="ttdeci">ezStringView GetFileDirectory() const</div><div class="ttdoc">Returns the directory of the given file, which is the substring up to the last path separator.</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:319</div></div>
<div class="ttc" id="aclassez_string_builder_htm_ad9e3819efaa857a532b63a7c204f5b5f"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#ad9e3819efaa857a532b63a7c204f5b5f">ezStringBuilder::Remove</a></div><div class="ttdeci">void Remove(const char *szRemoveFromPos, const char *szRemoveToPos)</div><div class="ttdoc">A wrapper around ReplaceSubString. Will remove the substring which starts at szRemoveFromPos and ends...</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:235</div></div>
<div class="ttc" id="aclassez_string_utils_htm_ad44fcc9c80d1da803b7248cb88acefd4"><div class="ttname"><a href="../../de/df8/classez_string_utils.htm#ad44fcc9c80d1da803b7248cb88acefd4">ezStringUtils::GetStringElementCount</a></div><div class="ttdeci">static ezUInt32 GetStringElementCount(const T *pString, const T *pStringEnd=(const T *) -1)</div><div class="ttdoc">Returns the number of elements of type T that the string contains, until it hits an element that is z...</div><div class="ttdef"><b>Definition:</b> StringUtils_inl.h:46</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_b52479c911fe9a42767226b3387b3a02.htm">Strings</a></li><li class="navelem"><a class="el" href="../../dir_067384bf2c73f8a8078edb859c0ba426.htm">Implementation</a></li><li class="navelem"><b>StringBuilder_inl.h</b></li>
    <li class="footer">Generated on Mon Oct 18 2021 15:24:11 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
