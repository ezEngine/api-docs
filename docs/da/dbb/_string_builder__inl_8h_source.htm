<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Strings/Implementation/StringBuilder_inl.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 22.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('da/dbb/_string_builder__inl_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">StringBuilder_inl.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;Foundation/Strings/StringConversion.h&gt;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160; </div>
<div class="line"><a name="l00005"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#aae3cd3eb70eabea17763d6a7200fe311">    5</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#aae3cd3eb70eabea17763d6a7200fe311">ezStringBuilder::ezStringBuilder</a>(<a class="code" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a>* pAllocator)</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;  : m_Data(pAllocator)</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;{</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;  m_uiCharacterCount = 0;</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;  AppendTerminator();</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;}</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160; </div>
<div class="line"><a name="l00012"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a0eff19ce3b5583ef753b658e019518e7">   12</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#aae3cd3eb70eabea17763d6a7200fe311">ezStringBuilder::ezStringBuilder</a>(<span class="keyword">const</span> <a class="code" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>&amp; rhs)</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;  : m_Data(rhs.GetAllocator())</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;{</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;  m_uiCharacterCount = 0;</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;  AppendTerminator();</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160; </div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;  *<span class="keyword">this</span> = rhs;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;}</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160; </div>
<div class="line"><a name="l00021"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a04e87df39f893e06bdb918c8cfd954db">   21</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#aae3cd3eb70eabea17763d6a7200fe311">ezStringBuilder::ezStringBuilder</a>(<a class="code" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>&amp;&amp; rhs) noexcept</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;  : m_Data(rhs.GetAllocator())</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;{</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;  m_uiCharacterCount = 0;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;  AppendTerminator();</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;  *<span class="keyword">this</span> = std::move(rhs);</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;}</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160; </div>
<div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a55946185f5a252a8ecde7048e2646e18">   30</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#aae3cd3eb70eabea17763d6a7200fe311">ezStringBuilder::ezStringBuilder</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szUTF8, <a class="code" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a>* pAllocator)</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  : m_Data(pAllocator)</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;{</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;  m_uiCharacterCount = 0;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  AppendTerminator();</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160; </div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;  *<span class="keyword">this</span> = szUTF8;</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;}</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160; </div>
<div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a45dfa156bdea76762a890bcf8df27fd8">   39</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#aae3cd3eb70eabea17763d6a7200fe311">ezStringBuilder::ezStringBuilder</a>(<span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* szWChar, <a class="code" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a>* pAllocator)</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  : m_Data(pAllocator)</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;{</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;  m_uiCharacterCount = 0;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  AppendTerminator();</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160; </div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  *<span class="keyword">this</span> = szWChar;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;}</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160; </div>
<div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a836504b01918aa23063a6090dffdcb44">   48</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#aae3cd3eb70eabea17763d6a7200fe311">ezStringBuilder::ezStringBuilder</a>(<a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> rhs, <a class="code" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a>* pAllocator)</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;  : m_Data(pAllocator)</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;{</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;  m_uiCharacterCount = 0;</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  AppendTerminator();</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160; </div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;  *<span class="keyword">this</span> = rhs;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;}</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160; </div>
<div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a79d01c58613d2704c36a582db95b1e42">   57</a></span>&#160;EZ_ALWAYS_INLINE <a class="code" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a>* <a class="code" href="../../d3/d88/classez_string_builder.htm#a79d01c58613d2704c36a582db95b1e42">ezStringBuilder::GetAllocator</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;  <span class="keywordflow">return</span> m_Data.<a class="code" href="../../d5/d3f/classez_dynamic_array_base.htm#af69a2cab402c0cf89448e33e1b998cd4">GetAllocator</a>();</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;}</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160; </div>
<div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#adc69c60c893d5e43cd3595236e68f26b">   62</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#a97d0149bd32e043f5177ac63e172b2dd">ezStringBuilder::operator=</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szUTF8)</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;{</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  <a class="code" href="../../d3/d88/classez_string_builder.htm#a89edfb3b0898cd4469625bd0ef4ec357">Set</a>(szUTF8);</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;}</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160; </div>
<div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a5bc23091233479a950adb7b23f2ecda7">   67</a></span>&#160;EZ_FORCE_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#a97d0149bd32e043f5177ac63e172b2dd">ezStringBuilder::operator=</a>(<span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* szWChar)</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;{</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;  <span class="comment">// fine to do this, szWChar can never come from the stringbuilder&#39;s own data array</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  <a class="code" href="../../d3/d88/classez_string_builder.htm#a162e5eb18bb60fd044c2fbbcdfa79228">Clear</a>();</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;  <a class="code" href="../../d3/d88/classez_string_builder.htm#a605f325ea4c9c3242454a16657e24ef7">Append</a>(szWChar);</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;}</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160; </div>
<div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a97d0149bd32e043f5177ac63e172b2dd">   74</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#a97d0149bd32e043f5177ac63e172b2dd">ezStringBuilder::operator=</a>(<span class="keyword">const</span> <a class="code" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>&amp; rhs)</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;{</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  m_uiCharacterCount = rhs.m_uiCharacterCount;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;  m_Data = rhs.m_Data;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;}</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160; </div>
<div class="line"><a name="l00080"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#ab2b87a1bec387cbcfe36629b6560957f">   80</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#a97d0149bd32e043f5177ac63e172b2dd">ezStringBuilder::operator=</a>(<a class="code" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>&amp;&amp; rhs) noexcept</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;{</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;  m_uiCharacterCount = rhs.m_uiCharacterCount;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;  m_Data = std::move(rhs.m_Data);</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;}</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160; </div>
<div class="line"><a name="l00086"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a946ff0b7b84634095a79a548777b51fd">   86</a></span>&#160;EZ_ALWAYS_INLINE ezUInt32 <a class="code" href="../../d3/d88/classez_string_builder.htm#a946ff0b7b84634095a79a548777b51fd">ezStringBuilder::GetElementCount</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;  <span class="keywordflow">return</span> m_Data.<a class="code" href="../../dc/d59/classez_array_base.htm#a51ba61fcbd2350ae8850754a41acbaa1">GetCount</a>() - 1; <span class="comment">// exclude the &#39;\0&#39; terminator</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;}</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160; </div>
<div class="line"><a name="l00091"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a0a3a36dcfd096259e15f167e2bd6ca07">   91</a></span>&#160;EZ_ALWAYS_INLINE ezUInt32 <a class="code" href="../../d3/d88/classez_string_builder.htm#a0a3a36dcfd096259e15f167e2bd6ca07">ezStringBuilder::GetCharacterCount</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  <span class="keywordflow">return</span> m_uiCharacterCount;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;}</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160; </div>
<div class="line"><a name="l00096"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a162e5eb18bb60fd044c2fbbcdfa79228">   96</a></span>&#160;EZ_FORCE_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#a162e5eb18bb60fd044c2fbbcdfa79228">ezStringBuilder::Clear</a>()</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;{</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  m_uiCharacterCount = 0;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;  m_Data.<a class="code" href="../../dc/d59/classez_array_base.htm#aa42fdcea580029c35b32658bd6d9fd50">SetCountUninitialized</a>(1);</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;  m_Data[0] = <span class="charliteral">&#39;\0&#39;</span>;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;}</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160; </div>
<div class="line"><a name="l00103"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a605f325ea4c9c3242454a16657e24ef7">  103</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#a605f325ea4c9c3242454a16657e24ef7">ezStringBuilder::Append</a>(ezUInt32 uiChar)</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;{</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;  <span class="keywordtype">char</span> szChar[6] = {0, 0, 0, 0, 0, 0};</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;  <span class="keywordtype">char</span>* pChar = &amp;szChar[0];</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160; </div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;  <a class="code" href="../../d9/d32/classez_unicode_utils.htm#ae783ba4fa2cc96ea397955039f3f5e48">ezUnicodeUtils::EncodeUtf32ToUtf8</a>(uiChar, pChar);</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;  ezUInt32 uiCharLen = (ezUInt32)(pChar - szChar);</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;  ezUInt32 uiOldCount = m_Data.<a class="code" href="../../dc/d59/classez_array_base.htm#a51ba61fcbd2350ae8850754a41acbaa1">GetCount</a>();</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;  m_Data.<a class="code" href="../../dc/d59/classez_array_base.htm#aa42fdcea580029c35b32658bd6d9fd50">SetCountUninitialized</a>(uiOldCount + uiCharLen);</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;  uiOldCount--;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;  <span class="keywordflow">for</span> (ezUInt32 i = 0; i &lt; uiCharLen; i++)</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;  {</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    m_Data[uiOldCount + i] = szChar[i];</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;  }</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;  m_Data[uiOldCount + uiCharLen] = <span class="charliteral">&#39;\0&#39;</span>;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;  ++m_uiCharacterCount;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;}</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160; </div>
<div class="line"><a name="l00121"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a2f2c181d7a18b4296425754854710f6b">  121</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#a2f2c181d7a18b4296425754854710f6b">ezStringBuilder::Prepend</a>(ezUInt32 uiChar)</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;{</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;  <span class="keywordtype">char</span> szChar[6] = {0, 0, 0, 0, 0, 0};</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;  <span class="keywordtype">char</span>* pChar = &amp;szChar[0];</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160; </div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;  <a class="code" href="../../d9/d32/classez_unicode_utils.htm#ae783ba4fa2cc96ea397955039f3f5e48">ezUnicodeUtils::EncodeUtf32ToUtf8</a>(uiChar, pChar);</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;  <a class="code" href="../../d3/d88/classez_string_builder.htm#a2f2c181d7a18b4296425754854710f6b">Prepend</a>(szChar);</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;}</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160; </div>
<div class="line"><a name="l00130"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#abeb5eb562d24b4c7c6b8819900e28766">  130</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#a605f325ea4c9c3242454a16657e24ef7">ezStringBuilder::Append</a>(</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData1, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData2, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData3, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData4, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData5, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData6)</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;{</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;  <span class="comment">// this is a bit heavy on the stack size (6KB)</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;  <span class="comment">// but it is really only a convenience function, as one could always just use the char* Append function and convert explicitly</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;  <a class="code" href="../../d9/d95/classez_string_utf8.htm">ezStringUtf8</a> s1(pData1, m_Data.<a class="code" href="../../d5/d3f/classez_dynamic_array_base.htm#af69a2cab402c0cf89448e33e1b998cd4">GetAllocator</a>());</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;  <a class="code" href="../../d9/d95/classez_string_utf8.htm">ezStringUtf8</a> s2(pData2, m_Data.<a class="code" href="../../d5/d3f/classez_dynamic_array_base.htm#af69a2cab402c0cf89448e33e1b998cd4">GetAllocator</a>());</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;  <a class="code" href="../../d9/d95/classez_string_utf8.htm">ezStringUtf8</a> s3(pData3, m_Data.<a class="code" href="../../d5/d3f/classez_dynamic_array_base.htm#af69a2cab402c0cf89448e33e1b998cd4">GetAllocator</a>());</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;  <a class="code" href="../../d9/d95/classez_string_utf8.htm">ezStringUtf8</a> s4(pData4, m_Data.<a class="code" href="../../d5/d3f/classez_dynamic_array_base.htm#af69a2cab402c0cf89448e33e1b998cd4">GetAllocator</a>());</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;  <a class="code" href="../../d9/d95/classez_string_utf8.htm">ezStringUtf8</a> s5(pData5, m_Data.<a class="code" href="../../d5/d3f/classez_dynamic_array_base.htm#af69a2cab402c0cf89448e33e1b998cd4">GetAllocator</a>());</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;  <a class="code" href="../../d9/d95/classez_string_utf8.htm">ezStringUtf8</a> s6(pData6, m_Data.<a class="code" href="../../d5/d3f/classez_dynamic_array_base.htm#af69a2cab402c0cf89448e33e1b998cd4">GetAllocator</a>());</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160; </div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;  <a class="code" href="../../d3/d88/classez_string_builder.htm#a605f325ea4c9c3242454a16657e24ef7">Append</a>(s1.GetView(), s2.GetView(), s3.GetView(), s4.GetView(), s5.GetView(), s6.GetView());</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;}</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160; </div>
<div class="line"><a name="l00145"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a59f53f467d198e72c0e284a587ca73fa">  145</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#a2f2c181d7a18b4296425754854710f6b">ezStringBuilder::Prepend</a>(</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData1, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData2, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData3, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData4, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData5, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData6)</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;{</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;  <span class="comment">// this is a bit heavy on the stack size (6KB)</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;  <span class="comment">// but it is really only a convenience function, as one could always just use the char* Append function and convert explicitly</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;  <a class="code" href="../../d9/d95/classez_string_utf8.htm">ezStringUtf8</a> s1(pData1, m_Data.<a class="code" href="../../d5/d3f/classez_dynamic_array_base.htm#af69a2cab402c0cf89448e33e1b998cd4">GetAllocator</a>());</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;  <a class="code" href="../../d9/d95/classez_string_utf8.htm">ezStringUtf8</a> s2(pData2, m_Data.<a class="code" href="../../d5/d3f/classez_dynamic_array_base.htm#af69a2cab402c0cf89448e33e1b998cd4">GetAllocator</a>());</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;  <a class="code" href="../../d9/d95/classez_string_utf8.htm">ezStringUtf8</a> s3(pData3, m_Data.<a class="code" href="../../d5/d3f/classez_dynamic_array_base.htm#af69a2cab402c0cf89448e33e1b998cd4">GetAllocator</a>());</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;  <a class="code" href="../../d9/d95/classez_string_utf8.htm">ezStringUtf8</a> s4(pData4, m_Data.<a class="code" href="../../d5/d3f/classez_dynamic_array_base.htm#af69a2cab402c0cf89448e33e1b998cd4">GetAllocator</a>());</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;  <a class="code" href="../../d9/d95/classez_string_utf8.htm">ezStringUtf8</a> s5(pData5, m_Data.<a class="code" href="../../d5/d3f/classez_dynamic_array_base.htm#af69a2cab402c0cf89448e33e1b998cd4">GetAllocator</a>());</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;  <a class="code" href="../../d9/d95/classez_string_utf8.htm">ezStringUtf8</a> s6(pData6, m_Data.<a class="code" href="../../d5/d3f/classez_dynamic_array_base.htm#af69a2cab402c0cf89448e33e1b998cd4">GetAllocator</a>());</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160; </div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;  <a class="code" href="../../d3/d88/classez_string_builder.htm#a2f2c181d7a18b4296425754854710f6b">Prepend</a>(s1.GetView(), s2.GetView(), s3.GetView(), s4.GetView(), s5.GetView(), s6.GetView());</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;}</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160; </div>
<div class="line"><a name="l00160"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a3063473d38e978ef950a11d302983bba">  160</a></span>&#160;EZ_ALWAYS_INLINE <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="../../d3/d88/classez_string_builder.htm#a3063473d38e978ef950a11d302983bba">ezStringBuilder::GetData</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;  EZ_ASSERT_DEBUG(!m_Data.<a class="code" href="../../dc/d59/classez_array_base.htm#a35630a870ec53cf3b022653232a31c60">IsEmpty</a>(), <span class="stringliteral">&quot;ezStringBuilder has been corrupted, the array can never be empty.&quot;</span>);</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160; </div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;  <span class="keywordflow">return</span> &amp;m_Data[0];</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;}</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160; </div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> ezStringBuilder::AppendTerminator()</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;{</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;  <span class="comment">// make sure the string terminates with a zero.</span></div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;  <span class="keywordflow">if</span> (m_Data.<a class="code" href="../../dc/d59/classez_array_base.htm#a35630a870ec53cf3b022653232a31c60">IsEmpty</a>() || (m_Data.<a class="code" href="../../dc/d59/classez_array_base.htm#a96092a83818db3f1b5d62a182fd38c8e">PeekBack</a>() != <span class="charliteral">&#39;\0&#39;</span>))</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    m_Data.<a class="code" href="../../dc/d59/classez_array_base.htm#abc514bdf8b2de7b5b220ffdbd862e830">PushBack</a>(<span class="charliteral">&#39;\0&#39;</span>);</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;}</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160; </div>
<div class="line"><a name="l00174"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a8beb183188db5f5ddacca112fe279e3c">  174</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#a8beb183188db5f5ddacca112fe279e3c">ezStringBuilder::ToUpper</a>()</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;{</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;  <span class="keyword">const</span> ezUInt32 uiNewStringLength = <a class="code" href="../../de/df8/classez_string_utils.htm#a7f700515442b9c61864de2fa3ac81998">ezStringUtils::ToUpperString</a>(&amp;m_Data[0]);</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160; </div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;  <span class="comment">// the array stores the number of bytes, so set the count to the actually used number of bytes</span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;  m_Data.<a class="code" href="../../dc/d59/classez_array_base.htm#aa42fdcea580029c35b32658bd6d9fd50">SetCountUninitialized</a>(uiNewStringLength + 1);</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;}</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160; </div>
<div class="line"><a name="l00182"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a61765d9803ff70f064cfc17c1fd04d89">  182</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#a61765d9803ff70f064cfc17c1fd04d89">ezStringBuilder::ToLower</a>()</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;{</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;  <span class="keyword">const</span> ezUInt32 uiNewStringLength = <a class="code" href="../../de/df8/classez_string_utils.htm#a3335c5fa83fe13480e69f4ee8f5c24e8">ezStringUtils::ToLowerString</a>(&amp;m_Data[0]);</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160; </div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;  <span class="comment">// the array stores the number of bytes, so set the count to the actually used number of bytes</span></div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;  m_Data.<a class="code" href="../../dc/d59/classez_array_base.htm#aa42fdcea580029c35b32658bd6d9fd50">SetCountUninitialized</a>(uiNewStringLength + 1);</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;}</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160; </div>
<div class="line"><a name="l00190"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a30892f8031346691835a90f009973138">  190</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#a30892f8031346691835a90f009973138">ezStringBuilder::ChangeCharacter</a>(iterator&amp; it, ezUInt32 uiCharacter)</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;{</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;  EZ_ASSERT_DEV(it.IsValid(), <span class="stringliteral">&quot;The given character iterator does not point to a valid character.&quot;</span>);</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;  EZ_ASSERT_DEV(it.GetData() &gt;= <a class="code" href="../../d3/d88/classez_string_builder.htm#a3063473d38e978ef950a11d302983bba">GetData</a>() &amp;&amp; it.GetData() &lt; <a class="code" href="../../d3/d88/classez_string_builder.htm#a3063473d38e978ef950a11d302983bba">GetData</a>() + <a class="code" href="../../d3/d88/classez_string_builder.htm#a946ff0b7b84634095a79a548777b51fd">GetElementCount</a>(),</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    <span class="stringliteral">&quot;The given character iterator does not point into this string. It was either created from another string, or this string &quot;</span></div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;    <span class="stringliteral">&quot;has been reallocated in the mean time.&quot;</span>);</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160; </div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;  <span class="comment">// this is only an optimization for pure ASCII strings</span></div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;  <span class="comment">// without it, the code below would still work</span></div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;  <span class="keywordflow">if</span> (<a class="code" href="../../d9/d32/classez_unicode_utils.htm#aa8fc2304ec3c1db82831c424097a30f5">ezUnicodeUtils::IsASCII</a>(*it) &amp;&amp; <a class="code" href="../../d9/d32/classez_unicode_utils.htm#aa8fc2304ec3c1db82831c424097a30f5">ezUnicodeUtils::IsASCII</a>(uiCharacter))</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;  {</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    <span class="keywordtype">char</span>* pPos = <span class="keyword">const_cast&lt;</span><span class="keywordtype">char</span>*<span class="keyword">&gt;</span>(it.GetData()); <span class="comment">// yes, I know...</span></div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;    *pPos = uiCharacter &amp; 0xFF;</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;  }</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160; </div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;  ChangeCharacterNonASCII(it, uiCharacter);</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;}</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160; </div>
<div class="line"><a name="l00209"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#ac36f8202651a4273fcc6ac38b3116bda">  209</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#ac36f8202651a4273fcc6ac38b3116bda">ezStringBuilder::IsPureASCII</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;  <span class="keywordflow">return</span> m_uiCharacterCount + 1 == m_Data.<a class="code" href="../../dc/d59/classez_array_base.htm#a51ba61fcbd2350ae8850754a41acbaa1">GetCount</a>();</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;}</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160; </div>
<div class="line"><a name="l00214"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#aa8e97941dfc6747eabf7e8dfb1c8c783">  214</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#aa8e97941dfc6747eabf7e8dfb1c8c783">ezStringBuilder::Reserve</a>(ezUInt32 uiNumElements)</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;{</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;  m_Data.<a class="code" href="../../d5/d3f/classez_dynamic_array_base.htm#a50350d5df71a36771f23feabe9315296">Reserve</a>(uiNumElements);</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;}</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160; </div>
<div class="line"><a name="l00219"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a2a2e146fd60089c7bd1acd6659788ae6">  219</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#a2a2e146fd60089c7bd1acd6659788ae6">ezStringBuilder::Insert</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szInsertAtPos, <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> szTextToInsert)</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;{</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;  <a class="code" href="../../d3/d88/classez_string_builder.htm#a5f1d91dce4d44ee31ee8ad353eb344ed">ReplaceSubString</a>(szInsertAtPos, szInsertAtPos, szTextToInsert);</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;}</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160; </div>
<div class="line"><a name="l00224"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#ad9e3819efaa857a532b63a7c204f5b5f">  224</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#ad9e3819efaa857a532b63a7c204f5b5f">ezStringBuilder::Remove</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szRemoveFromPos, <span class="keyword">const</span> <span class="keywordtype">char</span>* szRemoveToPos)</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;{</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;  <a class="code" href="../../d3/d88/classez_string_builder.htm#a5f1d91dce4d44ee31ee8ad353eb344ed">ReplaceSubString</a>(szRemoveFromPos, szRemoveToPos, <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a>());</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;}</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160; </div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="preprocessor">#include &lt;Foundation/Strings/Implementation/AllStrings_inl.h&gt;</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassez_string_builder_htm_a89edfb3b0898cd4469625bd0ef4ec357"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a89edfb3b0898cd4469625bd0ef4ec357">ezStringBuilder::Set</a></div><div class="ttdeci">void Set(ezStringView pData1, ezStringView pData2={}, ezStringView pData3={}, ezStringView pData4={}, ezStringView pData5={}, ezStringView pData6={})</div><div class="ttdoc">Sets the string by concatenating all given strings.</div><div class="ttdef"><b>Definition:</b> StringBuilder.cpp:17</div></div>
<div class="ttc" id="aclassez_unicode_utils_htm_ae783ba4fa2cc96ea397955039f3f5e48"><div class="ttname"><a href="../../d9/d32/classez_unicode_utils.htm#ae783ba4fa2cc96ea397955039f3f5e48">ezUnicodeUtils::EncodeUtf32ToUtf8</a></div><div class="ttdeci">static void EncodeUtf32ToUtf8(ezUInt32 uiUtf32, ByteIterator &amp;szUtf8Output)</div><div class="ttdoc">Encodes the given Utf32 character to Utf8 and writes as many bytes to the output iterator,...</div><div class="ttdef"><b>Definition:</b> UnicodeUtils_inl.h:92</div></div>
<div class="ttc" id="aclassez_unicode_utils_htm_aa8fc2304ec3c1db82831c424097a30f5"><div class="ttname"><a href="../../d9/d32/classez_unicode_utils.htm#aa8fc2304ec3c1db82831c424097a30f5">ezUnicodeUtils::IsASCII</a></div><div class="ttdeci">static bool IsASCII(ezUInt32 uiChar)</div><div class="ttdoc">Returns whether a character is a pure ASCII character (only the first 7 Bits are used)</div><div class="ttdef"><b>Definition:</b> UnicodeUtils_inl.h:23</div></div>
<div class="ttc" id="aclassez_string_utils_htm_a7f700515442b9c61864de2fa3ac81998"><div class="ttname"><a href="../../de/df8/classez_string_utils.htm#a7f700515442b9c61864de2fa3ac81998">ezStringUtils::ToUpperString</a></div><div class="ttdeci">static ezUInt32 ToUpperString(char *szString, const char *pStringEnd=ezUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Converts a (UTF-8) string in-place to upper case.</div><div class="ttdef"><b>Definition:</b> StringUtils.cpp:203</div></div>
<div class="ttc" id="aclassez_string_utils_htm_a3335c5fa83fe13480e69f4ee8f5c24e8"><div class="ttname"><a href="../../de/df8/classez_string_utils.htm#a3335c5fa83fe13480e69f4ee8f5c24e8">ezStringUtils::ToLowerString</a></div><div class="ttdeci">static ezUInt32 ToLowerString(char *szString, const char *pStringEnd=ezUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Converts a (UTF-8) string in-place to lower case.</div><div class="ttdef"><b>Definition:</b> StringUtils.cpp:221</div></div>
<div class="ttc" id="aclassez_string_builder_htm_aae3cd3eb70eabea17763d6a7200fe311"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#aae3cd3eb70eabea17763d6a7200fe311">ezStringBuilder::ezStringBuilder</a></div><div class="ttdeci">ezStringBuilder(ezAllocatorBase *pAllocator=ezFoundation::GetDefaultAllocator())</div><div class="ttdoc">Initializes the string to be empty. No data is allocated, but the ezStringBuilder ALWAYS creates an a...</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:5</div></div>
<div class="ttc" id="aclassez_array_base_htm_abc514bdf8b2de7b5b220ffdbd862e830"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#abc514bdf8b2de7b5b220ffdbd862e830">ezArrayBase::PushBack</a></div><div class="ttdeci">void PushBack(const T &amp;value)</div><div class="ttdoc">Pushes value at the end of the array.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:327</div></div>
<div class="ttc" id="aclassez_string_builder_htm_a30892f8031346691835a90f009973138"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a30892f8031346691835a90f009973138">ezStringBuilder::ChangeCharacter</a></div><div class="ttdeci">void ChangeCharacter(iterator &amp;it, ezUInt32 uiCharacter)</div><div class="ttdoc">Changes the single character in this string, to which the iterator currently points.</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:190</div></div>
<div class="ttc" id="aclassez_string_builder_htm_a2f2c181d7a18b4296425754854710f6b"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a2f2c181d7a18b4296425754854710f6b">ezStringBuilder::Prepend</a></div><div class="ttdeci">void Prepend(ezUInt32 uiChar)</div><div class="ttdoc">Prepends a single Utf32 character.</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:121</div></div>
<div class="ttc" id="aclassez_string_builder_htm_a61765d9803ff70f064cfc17c1fd04d89"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a61765d9803ff70f064cfc17c1fd04d89">ezStringBuilder::ToLower</a></div><div class="ttdeci">void ToLower()</div><div class="ttdoc">Converts all characters to lower case. Might move the string data around, so all iterators to the dat...</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:182</div></div>
<div class="ttc" id="aclassez_string_builder_htm_a79d01c58613d2704c36a582db95b1e42"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a79d01c58613d2704c36a582db95b1e42">ezStringBuilder::GetAllocator</a></div><div class="ttdeci">ezAllocatorBase * GetAllocator() const</div><div class="ttdoc">Returns the allocator that is used by this object.</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:57</div></div>
<div class="ttc" id="aclassez_string_builder_htm_a946ff0b7b84634095a79a548777b51fd"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a946ff0b7b84634095a79a548777b51fd">ezStringBuilder::GetElementCount</a></div><div class="ttdeci">ezUInt32 GetElementCount() const</div><div class="ttdoc">Returns the number of bytes that this string takes up.</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:86</div></div>
<div class="ttc" id="aclassez_string_builder_htm_a0a3a36dcfd096259e15f167e2bd6ca07"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a0a3a36dcfd096259e15f167e2bd6ca07">ezStringBuilder::GetCharacterCount</a></div><div class="ttdeci">ezUInt32 GetCharacterCount() const</div><div class="ttdoc">Returns the number of characters of which this string consists. Might be less than GetElementCount,...</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:91</div></div>
<div class="ttc" id="aclassez_string_builder_htm_a162e5eb18bb60fd044c2fbbcdfa79228"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a162e5eb18bb60fd044c2fbbcdfa79228">ezStringBuilder::Clear</a></div><div class="ttdeci">void Clear()</div><div class="ttdoc">Resets this string to be empty. Does not deallocate any previously allocated data,...</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:96</div></div>
<div class="ttc" id="aclassez_array_base_htm_aa42fdcea580029c35b32658bd6d9fd50"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#aa42fdcea580029c35b32658bd6d9fd50">ezArrayBase::SetCountUninitialized</a></div><div class="ttdeci">void SetCountUninitialized(ezUInt32 uiCount)</div><div class="ttdoc">Resizes the array to have exactly uiCount elements. Extra elements might be uninitialized.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:144</div></div>
<div class="ttc" id="aclassez_array_base_htm_a35630a870ec53cf3b022653232a31c60"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a35630a870ec53cf3b022653232a31c60">ezArrayBase::IsEmpty</a></div><div class="ttdeci">bool IsEmpty() const</div><div class="ttdoc">Returns true, if the array does not contain any elements.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:170</div></div>
<div class="ttc" id="aclassez_dynamic_array_base_htm_af69a2cab402c0cf89448e33e1b998cd4"><div class="ttname"><a href="../../d5/d3f/classez_dynamic_array_base.htm#af69a2cab402c0cf89448e33e1b998cd4">ezDynamicArrayBase::GetAllocator</a></div><div class="ttdeci">ezAllocatorBase * GetAllocator() const</div><div class="ttdoc">Returns the allocator that is used by this instance.</div><div class="ttdef"><b>Definition:</b> DynamicArray.h:53</div></div>
<div class="ttc" id="aclassez_allocator_base_htm"><div class="ttname"><a href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a></div><div class="ttdoc">Base class for all memory allocators.</div><div class="ttdef"><b>Definition:</b> AllocatorBase.h:22</div></div>
<div class="ttc" id="aclassez_string_utf8_htm"><div class="ttname"><a href="../../d9/d95/classez_string_utf8.htm">ezStringUtf8</a></div><div class="ttdoc">A small string class that converts any other encoding to Utf8.</div><div class="ttdef"><b>Definition:</b> StringConversion.h:46</div></div>
<div class="ttc" id="aclassez_array_base_htm_a51ba61fcbd2350ae8850754a41acbaa1"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a51ba61fcbd2350ae8850754a41acbaa1">ezArrayBase::GetCount</a></div><div class="ttdeci">ezUInt32 GetCount() const</div><div class="ttdoc">Returns the number of active elements in the array.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:164</div></div>
<div class="ttc" id="aclassez_string_builder_htm_a605f325ea4c9c3242454a16657e24ef7"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a605f325ea4c9c3242454a16657e24ef7">ezStringBuilder::Append</a></div><div class="ttdeci">void Append(ezUInt32 uiChar)</div><div class="ttdoc">Appends a single Utf32 character.</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:103</div></div>
<div class="ttc" id="aclassez_dynamic_array_base_htm_a50350d5df71a36771f23feabe9315296"><div class="ttname"><a href="../../d5/d3f/classez_dynamic_array_base.htm#a50350d5df71a36771f23feabe9315296">ezDynamicArrayBase::Reserve</a></div><div class="ttdeci">void Reserve(ezUInt32 uiCapacity)</div><div class="ttdoc">Expands the array so it can at least store the given capacity.</div><div class="ttdef"><b>Definition:</b> DynamicArray_inl.h:182</div></div>
<div class="ttc" id="aclassez_string_builder_htm_a3063473d38e978ef950a11d302983bba"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a3063473d38e978ef950a11d302983bba">ezStringBuilder::GetData</a></div><div class="ttdeci">const char * GetData() const</div><div class="ttdoc">Returns a char pointer to the internal Utf8 data.</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:160</div></div>
<div class="ttc" id="aclassez_array_base_htm_a96092a83818db3f1b5d62a182fd38c8e"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a96092a83818db3f1b5d62a182fd38c8e">ezArrayBase::PeekBack</a></div><div class="ttdeci">T &amp; PeekBack()</div><div class="ttdoc">Returns the last element of the array.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:383</div></div>
<div class="ttc" id="aclassez_string_builder_htm_a8beb183188db5f5ddacca112fe279e3c"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a8beb183188db5f5ddacca112fe279e3c">ezStringBuilder::ToUpper</a></div><div class="ttdeci">void ToUpper()</div><div class="ttdoc">Converts all characters to upper case. Might move the string data around, so all iterators to the dat...</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:174</div></div>
<div class="ttc" id="aclassez_string_builder_htm_ac36f8202651a4273fcc6ac38b3116bda"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#ac36f8202651a4273fcc6ac38b3116bda">ezStringBuilder::IsPureASCII</a></div><div class="ttdeci">bool IsPureASCII() const</div><div class="ttdoc">Returns whether this string only contains ASCII characters, which means that GetElementCount() == Get...</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:209</div></div>
<div class="ttc" id="astructez_string_view_htm"><div class="ttname"><a href="../../de/db8/structez_string_view.htm">ezStringView</a></div><div class="ttdoc">ezStringView represent a read-only sub-string of a larger string, as it can store a dedicated string ...</div><div class="ttdef"><b>Definition:</b> StringView.h:23</div></div>
<div class="ttc" id="aclassez_string_builder_htm_a97d0149bd32e043f5177ac63e172b2dd"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a97d0149bd32e043f5177ac63e172b2dd">ezStringBuilder::operator=</a></div><div class="ttdeci">void operator=(const ezStringBuilder &amp;rhs)</div><div class="ttdoc">Copies the given string into this one.</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:74</div></div>
<div class="ttc" id="aclassez_string_builder_htm_aa8e97941dfc6747eabf7e8dfb1c8c783"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#aa8e97941dfc6747eabf7e8dfb1c8c783">ezStringBuilder::Reserve</a></div><div class="ttdeci">void Reserve(ezUInt32 uiNumElements)</div><div class="ttdoc">Reserves uiNumElements bytes.</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:214</div></div>
<div class="ttc" id="aclassez_string_builder_htm_a5f1d91dce4d44ee31ee8ad353eb344ed"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a5f1d91dce4d44ee31ee8ad353eb344ed">ezStringBuilder::ReplaceSubString</a></div><div class="ttdeci">void ReplaceSubString(const char *szStartPos, const char *szEndPos, ezStringView szReplaceWith)</div><div class="ttdoc">Replaces the string that starts at szStartPos and ends at szEndPos with the string szReplaceWith.</div><div class="ttdef"><b>Definition:</b> StringBuilder.cpp:295</div></div>
<div class="ttc" id="aclassez_string_builder_htm"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></div><div class="ttdoc">ezStringBuilder is a class that is meant for creating and modifying strings.</div><div class="ttdef"><b>Definition:</b> StringBuilder.h:34</div></div>
<div class="ttc" id="aclassez_string_builder_htm_a2a2e146fd60089c7bd1acd6659788ae6"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a2a2e146fd60089c7bd1acd6659788ae6">ezStringBuilder::Insert</a></div><div class="ttdeci">void Insert(const char *szInsertAtPos, ezStringView szTextToInsert)</div><div class="ttdoc">A wrapper around ReplaceSubString. Will insert the given string at szInsertAtPos.</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:219</div></div>
<div class="ttc" id="aclassez_string_builder_htm_ad9e3819efaa857a532b63a7c204f5b5f"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#ad9e3819efaa857a532b63a7c204f5b5f">ezStringBuilder::Remove</a></div><div class="ttdeci">void Remove(const char *szRemoveFromPos, const char *szRemoveToPos)</div><div class="ttdoc">A wrapper around ReplaceSubString. Will remove the substring which starts at szRemoveFromPos and ends...</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:224</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_b52479c911fe9a42767226b3387b3a02.htm">Strings</a></li><li class="navelem"><a class="el" href="../../dir_067384bf2c73f8a8078edb859c0ba426.htm">Implementation</a></li><li class="navelem"><b>StringBuilder_inl.h</b></li>
    <li class="footer">Generated on Fri Nov 18 2022 14:48:00 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
