<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Strings/Implementation/StringBuilder_inl.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">ezEngine<span id="projectnumber">&#160;Release 25.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function() { init_codefold(1); });
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('da/dbb/_string_builder__inl_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">StringBuilder_inl.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="preprocessor">#include &lt;Foundation/Strings/StringConversion.h&gt;</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span> </div>
<div class="foldopen" id="foldopen00005" data-start="{" data-end="}">
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a572bcaa03de5c9da673e98a62fe64d86">    5</a></span><span class="keyword">inline</span> <a class="code hl_function" href="../../d3/d88/classez_string_builder.htm#a572bcaa03de5c9da673e98a62fe64d86">ezStringBuilder::ezStringBuilder</a>(<a class="code hl_class" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a>* pAllocator)</div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span>  : m_Data(pAllocator)</div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span>{</div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span>  AppendTerminator();</div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span>}</div>
</div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span> </div>
<div class="foldopen" id="foldopen00011" data-start="{" data-end="}">
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a0eff19ce3b5583ef753b658e019518e7">   11</a></span><span class="keyword">inline</span> <a class="code hl_function" href="../../d3/d88/classez_string_builder.htm#a572bcaa03de5c9da673e98a62fe64d86">ezStringBuilder::ezStringBuilder</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>&amp; rhs)</div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span>  : m_Data(rhs.GetAllocator())</div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span>{</div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span>  AppendTerminator();</div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span> </div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span>  *<span class="keyword">this</span> = rhs;</div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span>}</div>
</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span> </div>
<div class="foldopen" id="foldopen00019" data-start="{" data-end="}">
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a04e87df39f893e06bdb918c8cfd954db">   19</a></span><span class="keyword">inline</span> <a class="code hl_function" href="../../d3/d88/classez_string_builder.htm#a572bcaa03de5c9da673e98a62fe64d86">ezStringBuilder::ezStringBuilder</a>(<a class="code hl_class" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>&amp;&amp; rhs) noexcept</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span>  : m_Data(rhs.GetAllocator())</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span>{</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span>  AppendTerminator();</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span> </div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span>  *<span class="keyword">this</span> = std::move(rhs);</div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span>}</div>
</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span> </div>
<div class="foldopen" id="foldopen00027" data-start="{" data-end="}">
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#ae0a24a7d1186445c0174c4052e9f11cb">   27</a></span><span class="keyword">inline</span> <a class="code hl_function" href="../../d3/d88/classez_string_builder.htm#a572bcaa03de5c9da673e98a62fe64d86">ezStringBuilder::ezStringBuilder</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szUTF8, <a class="code hl_class" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a>* pAllocator)</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span>  : m_Data(pAllocator)</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span>{</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span>  AppendTerminator();</div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span> </div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span>  *<span class="keyword">this</span> = szUTF8;</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>}</div>
</div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span> </div>
<div class="foldopen" id="foldopen00035" data-start="{" data-end="}">
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#aa26df083989a4b54cab7e50122b2e48a">   35</a></span><span class="keyword">inline</span> <a class="code hl_function" href="../../d3/d88/classez_string_builder.htm#a572bcaa03de5c9da673e98a62fe64d86">ezStringBuilder::ezStringBuilder</a>(<span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pWChar, <a class="code hl_class" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a>* pAllocator)</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span>  : m_Data(pAllocator)</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span>{</div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>  AppendTerminator();</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span> </div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span>  *<span class="keyword">this</span> = pWChar;</div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>}</div>
</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span> </div>
<div class="foldopen" id="foldopen00043" data-start="{" data-end="}">
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a56cac06f37afc20835a298860f524302">   43</a></span><span class="keyword">inline</span> <a class="code hl_function" href="../../d3/d88/classez_string_builder.htm#a572bcaa03de5c9da673e98a62fe64d86">ezStringBuilder::ezStringBuilder</a>(<a class="code hl_class" href="../../d9/d18/classez_string_view.htm">ezStringView</a> rhs, <a class="code hl_class" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a>* pAllocator)</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>  : m_Data(pAllocator)</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>{</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span>  AppendTerminator();</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span> </div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>  *<span class="keyword">this</span> = rhs;</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span>}</div>
</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span> </div>
<div class="foldopen" id="foldopen00051" data-start="{" data-end="}">
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a2648971fba117e2e48484b5e828e9a99">   51</a></span>EZ_ALWAYS_INLINE <a class="code hl_class" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a>* <a class="code hl_function" href="../../d3/d88/classez_string_builder.htm#a2648971fba117e2e48484b5e828e9a99">ezStringBuilder::GetAllocator</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>  <span class="keywordflow">return</span> m_Data.<a class="code hl_function" href="../../d5/d3f/classez_dynamic_array_base.htm#a93e9fd534f3b4e2d0372f6cb0db69d9a">GetAllocator</a>();</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>}</div>
</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span> </div>
<div class="foldopen" id="foldopen00056" data-start="{" data-end="}">
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#adc69c60c893d5e43cd3595236e68f26b">   56</a></span>EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../d3/d88/classez_string_builder.htm#a97d0149bd32e043f5177ac63e172b2dd">ezStringBuilder::operator=</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szUTF8)</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>{</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>  <a class="code hl_function" href="../../d3/d88/classez_string_builder.htm#a5afb1486975ac3d876d0afe0b0a77686">Set</a>(szUTF8);</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>}</div>
</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span> </div>
<div class="foldopen" id="foldopen00061" data-start="{" data-end="}">
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#ad754ed0b6ea472e20b16bf3c93e327ea">   61</a></span>EZ_FORCE_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../d3/d88/classez_string_builder.htm#a97d0149bd32e043f5177ac63e172b2dd">ezStringBuilder::operator=</a>(<span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pWChar)</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>{</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>  <span class="comment">// fine to do this, szWChar can never come from the stringbuilder&#39;s own data array</span></div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span>  <a class="code hl_function" href="../../d3/d88/classez_string_builder.htm#a162e5eb18bb60fd044c2fbbcdfa79228">Clear</a>();</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>  <a class="code hl_function" href="../../d3/d88/classez_string_builder.htm#a605f325ea4c9c3242454a16657e24ef7">Append</a>(pWChar);</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span>}</div>
</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span> </div>
<div class="foldopen" id="foldopen00068" data-start="{" data-end="}">
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a97d0149bd32e043f5177ac63e172b2dd">   68</a></span>EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../d3/d88/classez_string_builder.htm#a97d0149bd32e043f5177ac63e172b2dd">ezStringBuilder::operator=</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>&amp; rhs)</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>{</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>  m_Data = rhs.m_Data;</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>}</div>
</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span> </div>
<div class="foldopen" id="foldopen00073" data-start="{" data-end="}">
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#ab2b87a1bec387cbcfe36629b6560957f">   73</a></span>EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../d3/d88/classez_string_builder.htm#a97d0149bd32e043f5177ac63e172b2dd">ezStringBuilder::operator=</a>(<a class="code hl_class" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>&amp;&amp; rhs) <span class="keyword">noexcept</span></div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>{</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>  m_Data = std::move(rhs.m_Data);</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>}</div>
</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span> </div>
<div class="foldopen" id="foldopen00078" data-start="{" data-end="}">
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a946ff0b7b84634095a79a548777b51fd">   78</a></span>EZ_ALWAYS_INLINE ezUInt32 <a class="code hl_function" href="../../d3/d88/classez_string_builder.htm#a946ff0b7b84634095a79a548777b51fd">ezStringBuilder::GetElementCount</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>  <span class="keywordflow">return</span> m_Data.<a class="code hl_function" href="../../dc/d59/classez_array_base.htm#a51ba61fcbd2350ae8850754a41acbaa1">GetCount</a>() - 1; <span class="comment">// exclude the &#39;\0&#39; terminator</span></div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>}</div>
</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span> </div>
<div class="foldopen" id="foldopen00083" data-start="{" data-end="}">
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a0a3a36dcfd096259e15f167e2bd6ca07">   83</a></span>EZ_ALWAYS_INLINE ezUInt32 <a class="code hl_function" href="../../d3/d88/classez_string_builder.htm#a0a3a36dcfd096259e15f167e2bd6ca07">ezStringBuilder::GetCharacterCount</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>  <span class="keywordflow">return</span> <a class="code hl_function" href="../../de/df8/classez_string_utils.htm#a1825871aad703fcbda09e6a5f96eb40b">ezStringUtils::GetCharacterCount</a>(m_Data.<a class="code hl_function" href="../../dc/d59/classez_array_base.htm#a170f421d9abdce1695e55b84212c59b0">GetData</a>());</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>}</div>
</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span> </div>
<div class="foldopen" id="foldopen00088" data-start="{" data-end="}">
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a162e5eb18bb60fd044c2fbbcdfa79228">   88</a></span>EZ_FORCE_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../d3/d88/classez_string_builder.htm#a162e5eb18bb60fd044c2fbbcdfa79228">ezStringBuilder::Clear</a>()</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>{</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>  m_Data.<a class="code hl_function" href="../../dc/d59/classez_array_base.htm#aa42fdcea580029c35b32658bd6d9fd50">SetCountUninitialized</a>(1);</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>  m_Data[0] = <span class="charliteral">&#39;\0&#39;</span>;</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>}</div>
</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span> </div>
<div class="foldopen" id="foldopen00094" data-start="{" data-end="}">
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a605f325ea4c9c3242454a16657e24ef7">   94</a></span><span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../d3/d88/classez_string_builder.htm#a605f325ea4c9c3242454a16657e24ef7">ezStringBuilder::Append</a>(ezUInt32 uiChar)</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>{</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>  <span class="keywordtype">char</span> szChar[6] = {0, 0, 0, 0, 0, 0};</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span>  <span class="keywordtype">char</span>* pChar = &amp;szChar[0];</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span> </div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>  <a class="code hl_function" href="../../d9/d32/classez_unicode_utils.htm#a482bd0122e8ad37eca5bf535b07a7315">ezUnicodeUtils::EncodeUtf32ToUtf8</a>(uiChar, pChar);</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>  ezUInt32 uiCharLen = (ezUInt32)(pChar - szChar);</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>  ezUInt32 uiOldCount = m_Data.<a class="code hl_function" href="../../dc/d59/classez_array_base.htm#a51ba61fcbd2350ae8850754a41acbaa1">GetCount</a>();</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>  m_Data.<a class="code hl_function" href="../../dc/d59/classez_array_base.htm#aa42fdcea580029c35b32658bd6d9fd50">SetCountUninitialized</a>(uiOldCount + uiCharLen);</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>  uiOldCount--;</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>  <span class="keywordflow">for</span> (ezUInt32 i = 0; i &lt; uiCharLen; i++)</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>  {</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>    m_Data[uiOldCount + i] = szChar[i];</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>  }</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>  m_Data[uiOldCount + uiCharLen] = <span class="charliteral">&#39;\0&#39;</span>;</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>}</div>
</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span> </div>
<div class="foldopen" id="foldopen00111" data-start="{" data-end="}">
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a2f2c181d7a18b4296425754854710f6b">  111</a></span><span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../d3/d88/classez_string_builder.htm#a2f2c181d7a18b4296425754854710f6b">ezStringBuilder::Prepend</a>(ezUInt32 uiChar)</div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span>{</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>  <span class="keywordtype">char</span> szChar[6] = {0, 0, 0, 0, 0, 0};</div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span>  <span class="keywordtype">char</span>* pChar = &amp;szChar[0];</div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span> </div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>  <a class="code hl_function" href="../../d9/d32/classez_unicode_utils.htm#a482bd0122e8ad37eca5bf535b07a7315">ezUnicodeUtils::EncodeUtf32ToUtf8</a>(uiChar, pChar);</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>  <a class="code hl_function" href="../../d3/d88/classez_string_builder.htm#a2f2c181d7a18b4296425754854710f6b">Prepend</a>(szChar);</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span>}</div>
</div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span> </div>
<div class="foldopen" id="foldopen00120" data-start="{" data-end="}">
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#abeb5eb562d24b4c7c6b8819900e28766">  120</a></span><span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../d3/d88/classez_string_builder.htm#a605f325ea4c9c3242454a16657e24ef7">ezStringBuilder::Append</a>(<span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData1, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData2, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData3, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData4, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData5, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData6)</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span>{</div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>  <span class="comment">// this is a bit heavy on the stack size (6KB)</span></div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span>  <span class="comment">// but it is really only a convenience function, as one could always just use the char* Append function and convert explicitly</span></div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span>  <a class="code hl_class" href="../../d9/d95/classez_string_utf8.htm">ezStringUtf8</a> s1(pData1, m_Data.<a class="code hl_function" href="../../d5/d3f/classez_dynamic_array_base.htm#a93e9fd534f3b4e2d0372f6cb0db69d9a">GetAllocator</a>());</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span>  <a class="code hl_class" href="../../d9/d95/classez_string_utf8.htm">ezStringUtf8</a> s2(pData2, m_Data.<a class="code hl_function" href="../../d5/d3f/classez_dynamic_array_base.htm#a93e9fd534f3b4e2d0372f6cb0db69d9a">GetAllocator</a>());</div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span>  <a class="code hl_class" href="../../d9/d95/classez_string_utf8.htm">ezStringUtf8</a> s3(pData3, m_Data.<a class="code hl_function" href="../../d5/d3f/classez_dynamic_array_base.htm#a93e9fd534f3b4e2d0372f6cb0db69d9a">GetAllocator</a>());</div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span>  <a class="code hl_class" href="../../d9/d95/classez_string_utf8.htm">ezStringUtf8</a> s4(pData4, m_Data.<a class="code hl_function" href="../../d5/d3f/classez_dynamic_array_base.htm#a93e9fd534f3b4e2d0372f6cb0db69d9a">GetAllocator</a>());</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span>  <a class="code hl_class" href="../../d9/d95/classez_string_utf8.htm">ezStringUtf8</a> s5(pData5, m_Data.<a class="code hl_function" href="../../d5/d3f/classez_dynamic_array_base.htm#a93e9fd534f3b4e2d0372f6cb0db69d9a">GetAllocator</a>());</div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span>  <a class="code hl_class" href="../../d9/d95/classez_string_utf8.htm">ezStringUtf8</a> s6(pData6, m_Data.<a class="code hl_function" href="../../d5/d3f/classez_dynamic_array_base.htm#a93e9fd534f3b4e2d0372f6cb0db69d9a">GetAllocator</a>());</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span> </div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span>  <a class="code hl_function" href="../../d3/d88/classez_string_builder.htm#a605f325ea4c9c3242454a16657e24ef7">Append</a>(s1.GetView(), s2.GetView(), s3.GetView(), s4.GetView(), s5.GetView(), s6.GetView());</div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span>}</div>
</div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span> </div>
<div class="foldopen" id="foldopen00134" data-start="{" data-end="}">
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a59f53f467d198e72c0e284a587ca73fa">  134</a></span><span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../d3/d88/classez_string_builder.htm#a2f2c181d7a18b4296425754854710f6b">ezStringBuilder::Prepend</a>(<span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData1, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData2, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData3, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData4, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData5, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData6)</div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span>{</div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span>  <span class="comment">// this is a bit heavy on the stack size (6KB)</span></div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span>  <span class="comment">// but it is really only a convenience function, as one could always just use the char* Append function and convert explicitly</span></div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span>  <a class="code hl_class" href="../../d9/d95/classez_string_utf8.htm">ezStringUtf8</a> s1(pData1, m_Data.<a class="code hl_function" href="../../d5/d3f/classez_dynamic_array_base.htm#a93e9fd534f3b4e2d0372f6cb0db69d9a">GetAllocator</a>());</div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span>  <a class="code hl_class" href="../../d9/d95/classez_string_utf8.htm">ezStringUtf8</a> s2(pData2, m_Data.<a class="code hl_function" href="../../d5/d3f/classez_dynamic_array_base.htm#a93e9fd534f3b4e2d0372f6cb0db69d9a">GetAllocator</a>());</div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>  <a class="code hl_class" href="../../d9/d95/classez_string_utf8.htm">ezStringUtf8</a> s3(pData3, m_Data.<a class="code hl_function" href="../../d5/d3f/classez_dynamic_array_base.htm#a93e9fd534f3b4e2d0372f6cb0db69d9a">GetAllocator</a>());</div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span>  <a class="code hl_class" href="../../d9/d95/classez_string_utf8.htm">ezStringUtf8</a> s4(pData4, m_Data.<a class="code hl_function" href="../../d5/d3f/classez_dynamic_array_base.htm#a93e9fd534f3b4e2d0372f6cb0db69d9a">GetAllocator</a>());</div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>  <a class="code hl_class" href="../../d9/d95/classez_string_utf8.htm">ezStringUtf8</a> s5(pData5, m_Data.<a class="code hl_function" href="../../d5/d3f/classez_dynamic_array_base.htm#a93e9fd534f3b4e2d0372f6cb0db69d9a">GetAllocator</a>());</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span>  <a class="code hl_class" href="../../d9/d95/classez_string_utf8.htm">ezStringUtf8</a> s6(pData6, m_Data.<a class="code hl_function" href="../../d5/d3f/classez_dynamic_array_base.htm#a93e9fd534f3b4e2d0372f6cb0db69d9a">GetAllocator</a>());</div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span> </div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span>  <a class="code hl_function" href="../../d3/d88/classez_string_builder.htm#a2f2c181d7a18b4296425754854710f6b">Prepend</a>(s1.GetView(), s2.GetView(), s3.GetView(), s4.GetView(), s5.GetView(), s6.GetView());</div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span>}</div>
</div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span> </div>
<div class="foldopen" id="foldopen00148" data-start="{" data-end="}">
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#ae70343bc31fa6d5dff4e2bc66abbc6d5">  148</a></span>EZ_ALWAYS_INLINE <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code hl_function" href="../../d3/d88/classez_string_builder.htm#ae70343bc31fa6d5dff4e2bc66abbc6d5">ezStringBuilder::GetData</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span>  EZ_ASSERT_DEBUG(!m_Data.<a class="code hl_function" href="../../dc/d59/classez_array_base.htm#a35630a870ec53cf3b022653232a31c60">IsEmpty</a>(), <span class="stringliteral">&quot;ezStringBuilder has been corrupted, the array can never be empty.&quot;</span>);</div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span> </div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span>  <span class="keywordflow">return</span> &amp;m_Data[0];</div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span>}</div>
</div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span> </div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span><span class="keyword">inline</span> <span class="keywordtype">void</span> ezStringBuilder::AppendTerminator()</div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span>{</div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span>  <span class="comment">// make sure the string terminates with a zero.</span></div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span>  <span class="keywordflow">if</span> (m_Data.<a class="code hl_function" href="../../dc/d59/classez_array_base.htm#a35630a870ec53cf3b022653232a31c60">IsEmpty</a>() || (m_Data.<a class="code hl_function" href="../../dc/d59/classez_array_base.htm#ae5b5afca8aa70c69f07360eecd7171bc">PeekBack</a>() != <span class="charliteral">&#39;\0&#39;</span>))</div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span>    m_Data.<a class="code hl_function" href="../../dc/d59/classez_array_base.htm#abc514bdf8b2de7b5b220ffdbd862e830">PushBack</a>(<span class="charliteral">&#39;\0&#39;</span>);</div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span>}</div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span> </div>
<div class="foldopen" id="foldopen00162" data-start="{" data-end="}">
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a8beb183188db5f5ddacca112fe279e3c">  162</a></span><span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../d3/d88/classez_string_builder.htm#a8beb183188db5f5ddacca112fe279e3c">ezStringBuilder::ToUpper</a>()</div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span>{</div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span>  <span class="keyword">const</span> ezUInt32 uiNewStringLength = <a class="code hl_function" href="../../de/df8/classez_string_utils.htm#a7f700515442b9c61864de2fa3ac81998">ezStringUtils::ToUpperString</a>(&amp;m_Data[0]);</div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span> </div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span>  <span class="comment">// the array stores the number of bytes, so set the count to the actually used number of bytes</span></div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span>  m_Data.<a class="code hl_function" href="../../dc/d59/classez_array_base.htm#aa42fdcea580029c35b32658bd6d9fd50">SetCountUninitialized</a>(uiNewStringLength + 1);</div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span>}</div>
</div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span> </div>
<div class="foldopen" id="foldopen00170" data-start="{" data-end="}">
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a61765d9803ff70f064cfc17c1fd04d89">  170</a></span><span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../d3/d88/classez_string_builder.htm#a61765d9803ff70f064cfc17c1fd04d89">ezStringBuilder::ToLower</a>()</div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span>{</div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span>  <span class="keyword">const</span> ezUInt32 uiNewStringLength = <a class="code hl_function" href="../../de/df8/classez_string_utils.htm#a3335c5fa83fe13480e69f4ee8f5c24e8">ezStringUtils::ToLowerString</a>(&amp;m_Data[0]);</div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span> </div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span>  <span class="comment">// the array stores the number of bytes, so set the count to the actually used number of bytes</span></div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span>  m_Data.<a class="code hl_function" href="../../dc/d59/classez_array_base.htm#aa42fdcea580029c35b32658bd6d9fd50">SetCountUninitialized</a>(uiNewStringLength + 1);</div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span>}</div>
</div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span> </div>
<div class="foldopen" id="foldopen00178" data-start="{" data-end="}">
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a98f618275d4d78bc56825499b8c21b13">  178</a></span><span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../d3/d88/classez_string_builder.htm#a98f618275d4d78bc56825499b8c21b13">ezStringBuilder::ChangeCharacter</a>(iterator&amp; ref_it, ezUInt32 uiCharacter)</div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span>{</div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span>  EZ_ASSERT_DEV(ref_it.IsValid(), <span class="stringliteral">&quot;The given character iterator does not point to a valid character.&quot;</span>);</div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span>  EZ_ASSERT_DEV(ref_it.GetData() &gt;= <a class="code hl_function" href="../../d3/d88/classez_string_builder.htm#ae70343bc31fa6d5dff4e2bc66abbc6d5">GetData</a>() &amp;&amp; ref_it.GetData() &lt; <a class="code hl_function" href="../../d3/d88/classez_string_builder.htm#ae70343bc31fa6d5dff4e2bc66abbc6d5">GetData</a>() + <a class="code hl_function" href="../../d3/d88/classez_string_builder.htm#a946ff0b7b84634095a79a548777b51fd">GetElementCount</a>(),</div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span>    <span class="stringliteral">&quot;The given character iterator does not point into this string. It was either created from another string, or this string &quot;</span></div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno">  183</span>    <span class="stringliteral">&quot;has been reallocated in the mean time.&quot;</span>);</div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span> </div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span>  <span class="comment">// this is only an optimization for pure ASCII strings</span></div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span>  <span class="comment">// without it, the code below would still work</span></div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span>  <span class="keywordflow">if</span> (<a class="code hl_function" href="../../d9/d32/classez_unicode_utils.htm#aa8fc2304ec3c1db82831c424097a30f5">ezUnicodeUtils::IsASCII</a>(*ref_it) &amp;&amp; <a class="code hl_function" href="../../d9/d32/classez_unicode_utils.htm#aa8fc2304ec3c1db82831c424097a30f5">ezUnicodeUtils::IsASCII</a>(uiCharacter))</div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span>  {</div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span>    <span class="keywordtype">char</span>* pPos = <span class="keyword">const_cast&lt;</span><span class="keywordtype">char</span>*<span class="keyword">&gt;</span>(ref_it.GetData()); <span class="comment">// yes, I know...</span></div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span>    *pPos = uiCharacter &amp; 0xFF;</div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span>    <span class="keywordflow">return</span>;</div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span>  }</div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span> </div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span>  ChangeCharacterNonASCII(ref_it, uiCharacter);</div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span>}</div>
</div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span> </div>
<div class="foldopen" id="foldopen00197" data-start="{" data-end="}">
<div class="line"><a id="l00197" name="l00197"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#aa8e97941dfc6747eabf7e8dfb1c8c783">  197</a></span>EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../d3/d88/classez_string_builder.htm#aa8e97941dfc6747eabf7e8dfb1c8c783">ezStringBuilder::Reserve</a>(ezUInt32 uiNumElements)</div>
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno">  198</span>{</div>
<div class="line"><a id="l00199" name="l00199"></a><span class="lineno">  199</span>  m_Data.<a class="code hl_function" href="../../d5/d3f/classez_dynamic_array_base.htm#a50350d5df71a36771f23feabe9315296">Reserve</a>(uiNumElements);</div>
<div class="line"><a id="l00200" name="l00200"></a><span class="lineno">  200</span>}</div>
</div>
<div class="line"><a id="l00201" name="l00201"></a><span class="lineno">  201</span> </div>
<div class="foldopen" id="foldopen00202" data-start="{" data-end="}">
<div class="line"><a id="l00202" name="l00202"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a256a6671500684d47ced992673752e88">  202</a></span>EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../d3/d88/classez_string_builder.htm#a256a6671500684d47ced992673752e88">ezStringBuilder::Insert</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szInsertAtPos, <a class="code hl_class" href="../../d9/d18/classez_string_view.htm">ezStringView</a> sTextToInsert)</div>
<div class="line"><a id="l00203" name="l00203"></a><span class="lineno">  203</span>{</div>
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno">  204</span>  <a class="code hl_function" href="../../d3/d88/classez_string_builder.htm#a3e617f7559a49a9a838defed90a7272f">ReplaceSubString</a>(szInsertAtPos, szInsertAtPos, sTextToInsert);</div>
<div class="line"><a id="l00205" name="l00205"></a><span class="lineno">  205</span>}</div>
</div>
<div class="line"><a id="l00206" name="l00206"></a><span class="lineno">  206</span> </div>
<div class="foldopen" id="foldopen00207" data-start="{" data-end="}">
<div class="line"><a id="l00207" name="l00207"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#ad9e3819efaa857a532b63a7c204f5b5f">  207</a></span>EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../d3/d88/classez_string_builder.htm#ad9e3819efaa857a532b63a7c204f5b5f">ezStringBuilder::Remove</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szRemoveFromPos, <span class="keyword">const</span> <span class="keywordtype">char</span>* szRemoveToPos)</div>
<div class="line"><a id="l00208" name="l00208"></a><span class="lineno">  208</span>{</div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno">  209</span>  <a class="code hl_function" href="../../d3/d88/classez_string_builder.htm#a3e617f7559a49a9a838defed90a7272f">ReplaceSubString</a>(szRemoveFromPos, szRemoveToPos, <a class="code hl_class" href="../../d9/d18/classez_string_view.htm">ezStringView</a>());</div>
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno">  210</span>}</div>
</div>
<div class="line"><a id="l00211" name="l00211"></a><span class="lineno">  211</span> </div>
<div class="line"><a id="l00212" name="l00212"></a><span class="lineno">  212</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Container&gt;</div>
<div class="foldopen" id="foldopen00213" data-start="{" data-end="}">
<div class="line"><a id="l00213" name="l00213"></a><span class="lineno"><a class="line" href="../../d9/d32/classez_unicode_utils.htm#aad14aa352862f29d33165e6aa35907c3">  213</a></span><span class="keywordtype">bool</span> <a class="code hl_function" href="../../d9/d32/classez_unicode_utils.htm#aad14aa352862f29d33165e6aa35907c3">ezUnicodeUtils::RepairNonUtf8Text</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* pStartData, <span class="keyword">const</span> <span class="keywordtype">char</span>* pEndData, Container&amp; out_result)</div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno">  214</span>{</div>
<div class="line"><a id="l00215" name="l00215"></a><span class="lineno">  215</span>  <span class="keywordflow">if</span> (<a class="code hl_function" href="../../d9/d32/classez_unicode_utils.htm#ae560190e97c0762412f9cae4b8ea39b9">ezUnicodeUtils::IsValidUtf8</a>(pStartData, pEndData))</div>
<div class="line"><a id="l00216" name="l00216"></a><span class="lineno">  216</span>  {</div>
<div class="line"><a id="l00217" name="l00217"></a><span class="lineno">  217</span>    out_result = <a class="code hl_class" href="../../d9/d18/classez_string_view.htm">ezStringView</a>(pStartData, pEndData);</div>
<div class="line"><a id="l00218" name="l00218"></a><span class="lineno">  218</span>    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00219" name="l00219"></a><span class="lineno">  219</span>  }</div>
<div class="line"><a id="l00220" name="l00220"></a><span class="lineno">  220</span> </div>
<div class="line"><a id="l00221" name="l00221"></a><span class="lineno">  221</span>  out_result.Clear();</div>
<div class="line"><a id="l00222" name="l00222"></a><span class="lineno">  222</span> </div>
<div class="line"><a id="l00223" name="l00223"></a><span class="lineno">  223</span>  <a class="code hl_class" href="../../d8/deb/classez_hybrid_array.htm">ezHybridArray&lt;char, 1024&gt;</a> fixedText;</div>
<div class="line"><a id="l00224" name="l00224"></a><span class="lineno">  224</span>  <a class="code hl_struct" href="../../da/d97/structez_unicode_utils_1_1_utf_inserter.htm">ezUnicodeUtils::UtfInserter</a>&lt;char, <span class="keyword">decltype</span>(fixedText)&gt; inserter(&amp;fixedText);</div>
<div class="line"><a id="l00225" name="l00225"></a><span class="lineno">  225</span> </div>
<div class="line"><a id="l00226" name="l00226"></a><span class="lineno">  226</span>  <span class="keywordflow">while</span> (pStartData &lt; pEndData)</div>
<div class="line"><a id="l00227" name="l00227"></a><span class="lineno">  227</span>  {</div>
<div class="line"><a id="l00228" name="l00228"></a><span class="lineno">  228</span>    <span class="keyword">const</span> ezUInt32 uiChar = <a class="code hl_function" href="../../d9/d32/classez_unicode_utils.htm#a7ee2e30f7fc86483b43011333a3f6702">ezUnicodeUtils::DecodeUtf8ToUtf32</a>(pStartData);</div>
<div class="line"><a id="l00229" name="l00229"></a><span class="lineno">  229</span>    <a class="code hl_function" href="../../d9/d32/classez_unicode_utils.htm#a482bd0122e8ad37eca5bf535b07a7315">ezUnicodeUtils::EncodeUtf32ToUtf8</a>(uiChar, inserter);</div>
<div class="line"><a id="l00230" name="l00230"></a><span class="lineno">  230</span>  }</div>
<div class="line"><a id="l00231" name="l00231"></a><span class="lineno">  231</span> </div>
<div class="line"><a id="l00232" name="l00232"></a><span class="lineno">  232</span>  EZ_ASSERT_DEV(<a class="code hl_function" href="../../d9/d32/classez_unicode_utils.htm#ae560190e97c0762412f9cae4b8ea39b9">ezUnicodeUtils::IsValidUtf8</a>(fixedText.<a class="code hl_function" href="../../dc/d59/classez_array_base.htm#a170f421d9abdce1695e55b84212c59b0">GetData</a>(), fixedText.<a class="code hl_function" href="../../dc/d59/classez_array_base.htm#a170f421d9abdce1695e55b84212c59b0">GetData</a>() + fixedText.<a class="code hl_function" href="../../dc/d59/classez_array_base.htm#a51ba61fcbd2350ae8850754a41acbaa1">GetCount</a>()), <span class="stringliteral">&quot;Repaired text is still not a valid Utf8 string.&quot;</span>);</div>
<div class="line"><a id="l00233" name="l00233"></a><span class="lineno">  233</span> </div>
<div class="line"><a id="l00234" name="l00234"></a><span class="lineno">  234</span>  out_result = <a class="code hl_class" href="../../d9/d18/classez_string_view.htm">ezStringView</a>(fixedText.<a class="code hl_function" href="../../dc/d59/classez_array_base.htm#a170f421d9abdce1695e55b84212c59b0">GetData</a>(), fixedText.<a class="code hl_function" href="../../dc/d59/classez_array_base.htm#a51ba61fcbd2350ae8850754a41acbaa1">GetCount</a>());</div>
<div class="line"><a id="l00235" name="l00235"></a><span class="lineno">  235</span>  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a id="l00236" name="l00236"></a><span class="lineno">  236</span>}</div>
</div>
<div class="line"><a id="l00237" name="l00237"></a><span class="lineno">  237</span> </div>
<div class="line"><a id="l00238" name="l00238"></a><span class="lineno">  238</span><span class="preprocessor">#include &lt;Foundation/Strings/Implementation/AllStrings_inl.h&gt;</span></div>
<div class="ttc" id="aclassez_allocator_htm"><div class="ttname"><a href="../../d0/dbb/classez_allocator.htm">ezAllocator</a></div><div class="ttdoc">Base class for all memory allocators.</div><div class="ttdef"><b>Definition</b> Allocator.h:23</div></div>
<div class="ttc" id="aclassez_array_base_htm_a170f421d9abdce1695e55b84212c59b0"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a170f421d9abdce1695e55b84212c59b0">ezArrayBase::GetData</a></div><div class="ttdeci">T * GetData()</div><div class="ttdoc">Returns a pointer to the array data, or nullptr if the array is empty.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:423</div></div>
<div class="ttc" id="aclassez_array_base_htm_a35630a870ec53cf3b022653232a31c60"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a35630a870ec53cf3b022653232a31c60">ezArrayBase::IsEmpty</a></div><div class="ttdeci">bool IsEmpty() const</div><div class="ttdoc">Returns true, if the array does not contain any elements.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:178</div></div>
<div class="ttc" id="aclassez_array_base_htm_a51ba61fcbd2350ae8850754a41acbaa1"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a51ba61fcbd2350ae8850754a41acbaa1">ezArrayBase::GetCount</a></div><div class="ttdeci">ezUInt32 GetCount() const</div><div class="ttdoc">Returns the number of active elements in the array.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:172</div></div>
<div class="ttc" id="aclassez_array_base_htm_aa42fdcea580029c35b32658bd6d9fd50"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#aa42fdcea580029c35b32658bd6d9fd50">ezArrayBase::SetCountUninitialized</a></div><div class="ttdeci">void SetCountUninitialized(ezUInt32 uiCount)</div><div class="ttdoc">Resizes the array to have exactly uiCount elements. Extra elements might be uninitialized.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:155</div></div>
<div class="ttc" id="aclassez_array_base_htm_abc514bdf8b2de7b5b220ffdbd862e830"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#abc514bdf8b2de7b5b220ffdbd862e830">ezArrayBase::PushBack</a></div><div class="ttdeci">void PushBack(const T &amp;value)</div><div class="ttdoc">Pushes value at the end of the array.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:333</div></div>
<div class="ttc" id="aclassez_array_base_htm_ae5b5afca8aa70c69f07360eecd7171bc"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#ae5b5afca8aa70c69f07360eecd7171bc">ezArrayBase::PeekBack</a></div><div class="ttdeci">T &amp; PeekBack()</div><div class="ttdoc">Returns the last element of the array.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:388</div></div>
<div class="ttc" id="aclassez_dynamic_array_base_htm_a50350d5df71a36771f23feabe9315296"><div class="ttname"><a href="../../d5/d3f/classez_dynamic_array_base.htm#a50350d5df71a36771f23feabe9315296">ezDynamicArrayBase::Reserve</a></div><div class="ttdeci">void Reserve(ezUInt32 uiCapacity)</div><div class="ttdoc">Expands the array so it can at least store the given capacity.</div><div class="ttdef"><b>Definition</b> DynamicArray_inl.h:179</div></div>
<div class="ttc" id="aclassez_dynamic_array_base_htm_a93e9fd534f3b4e2d0372f6cb0db69d9a"><div class="ttname"><a href="../../d5/d3f/classez_dynamic_array_base.htm#a93e9fd534f3b4e2d0372f6cb0db69d9a">ezDynamicArrayBase::GetAllocator</a></div><div class="ttdeci">ezAllocator * GetAllocator() const</div><div class="ttdoc">Returns the allocator that is used by this instance.</div><div class="ttdef"><b>Definition</b> DynamicArray.h:53</div></div>
<div class="ttc" id="aclassez_hybrid_array_htm"><div class="ttname"><a href="../../d8/deb/classez_hybrid_array.htm">ezHybridArray</a></div><div class="ttdoc">A hybrid array uses in-place storage to handle the first few elements without any allocation....</div><div class="ttdef"><b>Definition</b> HybridArray.h:12</div></div>
<div class="ttc" id="aclassez_string_builder_htm"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></div><div class="ttdoc">ezStringBuilder is a class that is meant for creating and modifying strings.</div><div class="ttdef"><b>Definition</b> StringBuilder.h:35</div></div>
<div class="ttc" id="aclassez_string_builder_htm_a0a3a36dcfd096259e15f167e2bd6ca07"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a0a3a36dcfd096259e15f167e2bd6ca07">ezStringBuilder::GetCharacterCount</a></div><div class="ttdeci">ezUInt32 GetCharacterCount() const</div><div class="ttdoc">Returns the number of characters of which this string consists. Might be less than GetElementCount,...</div><div class="ttdef"><b>Definition</b> StringBuilder_inl.h:83</div></div>
<div class="ttc" id="aclassez_string_builder_htm_a162e5eb18bb60fd044c2fbbcdfa79228"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a162e5eb18bb60fd044c2fbbcdfa79228">ezStringBuilder::Clear</a></div><div class="ttdeci">void Clear()</div><div class="ttdoc">Resets this string to be empty. Does not deallocate any previously allocated data,...</div><div class="ttdef"><b>Definition</b> StringBuilder_inl.h:88</div></div>
<div class="ttc" id="aclassez_string_builder_htm_a256a6671500684d47ced992673752e88"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a256a6671500684d47ced992673752e88">ezStringBuilder::Insert</a></div><div class="ttdeci">void Insert(const char *szInsertAtPos, ezStringView sTextToInsert)</div><div class="ttdoc">A wrapper around ReplaceSubString. Will insert the given string at szInsertAtPos.</div><div class="ttdef"><b>Definition</b> StringBuilder_inl.h:202</div></div>
<div class="ttc" id="aclassez_string_builder_htm_a2648971fba117e2e48484b5e828e9a99"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a2648971fba117e2e48484b5e828e9a99">ezStringBuilder::GetAllocator</a></div><div class="ttdeci">ezAllocator * GetAllocator() const</div><div class="ttdoc">Returns the allocator that is used by this object.</div><div class="ttdef"><b>Definition</b> StringBuilder_inl.h:51</div></div>
<div class="ttc" id="aclassez_string_builder_htm_a2f2c181d7a18b4296425754854710f6b"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a2f2c181d7a18b4296425754854710f6b">ezStringBuilder::Prepend</a></div><div class="ttdeci">void Prepend(ezUInt32 uiChar)</div><div class="ttdoc">Prepends a single Utf32 character.</div><div class="ttdef"><b>Definition</b> StringBuilder_inl.h:111</div></div>
<div class="ttc" id="aclassez_string_builder_htm_a3e617f7559a49a9a838defed90a7272f"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a3e617f7559a49a9a838defed90a7272f">ezStringBuilder::ReplaceSubString</a></div><div class="ttdeci">void ReplaceSubString(const char *szStartPos, const char *szEndPos, ezStringView sReplaceWith)</div><div class="ttdoc">Replaces the string that starts at szStartPos and ends at szEndPos with the string szReplaceWith.</div><div class="ttdef"><b>Definition</b> StringBuilder.cpp:427</div></div>
<div class="ttc" id="aclassez_string_builder_htm_a572bcaa03de5c9da673e98a62fe64d86"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a572bcaa03de5c9da673e98a62fe64d86">ezStringBuilder::ezStringBuilder</a></div><div class="ttdeci">ezStringBuilder(ezAllocator *pAllocator=ezFoundation::GetDefaultAllocator())</div><div class="ttdoc">Initializes the string to be empty. No data is allocated, but the ezStringBuilder ALWAYS creates an a...</div><div class="ttdef"><b>Definition</b> StringBuilder_inl.h:5</div></div>
<div class="ttc" id="aclassez_string_builder_htm_a5afb1486975ac3d876d0afe0b0a77686"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a5afb1486975ac3d876d0afe0b0a77686">ezStringBuilder::Set</a></div><div class="ttdeci">void Set(ezStringView sData1)</div><div class="ttdoc">Sets the string to the given string.</div><div class="ttdef"><b>Definition</b> StringBuilder.cpp:16</div></div>
<div class="ttc" id="aclassez_string_builder_htm_a605f325ea4c9c3242454a16657e24ef7"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a605f325ea4c9c3242454a16657e24ef7">ezStringBuilder::Append</a></div><div class="ttdeci">void Append(ezUInt32 uiChar)</div><div class="ttdoc">Appends a single Utf32 character.</div><div class="ttdef"><b>Definition</b> StringBuilder_inl.h:94</div></div>
<div class="ttc" id="aclassez_string_builder_htm_a61765d9803ff70f064cfc17c1fd04d89"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a61765d9803ff70f064cfc17c1fd04d89">ezStringBuilder::ToLower</a></div><div class="ttdeci">void ToLower()</div><div class="ttdoc">Converts all characters to lower case. Might move the string data around, so all iterators to the dat...</div><div class="ttdef"><b>Definition</b> StringBuilder_inl.h:170</div></div>
<div class="ttc" id="aclassez_string_builder_htm_a8beb183188db5f5ddacca112fe279e3c"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a8beb183188db5f5ddacca112fe279e3c">ezStringBuilder::ToUpper</a></div><div class="ttdeci">void ToUpper()</div><div class="ttdoc">Converts all characters to upper case. Might move the string data around, so all iterators to the dat...</div><div class="ttdef"><b>Definition</b> StringBuilder_inl.h:162</div></div>
<div class="ttc" id="aclassez_string_builder_htm_a946ff0b7b84634095a79a548777b51fd"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a946ff0b7b84634095a79a548777b51fd">ezStringBuilder::GetElementCount</a></div><div class="ttdeci">ezUInt32 GetElementCount() const</div><div class="ttdoc">Returns the number of bytes that this string takes up.</div><div class="ttdef"><b>Definition</b> StringBuilder_inl.h:78</div></div>
<div class="ttc" id="aclassez_string_builder_htm_a97d0149bd32e043f5177ac63e172b2dd"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a97d0149bd32e043f5177ac63e172b2dd">ezStringBuilder::operator=</a></div><div class="ttdeci">void operator=(const ezStringBuilder &amp;rhs)</div><div class="ttdoc">Copies the given string into this one.</div><div class="ttdef"><b>Definition</b> StringBuilder_inl.h:68</div></div>
<div class="ttc" id="aclassez_string_builder_htm_a98f618275d4d78bc56825499b8c21b13"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a98f618275d4d78bc56825499b8c21b13">ezStringBuilder::ChangeCharacter</a></div><div class="ttdeci">void ChangeCharacter(iterator &amp;ref_it, ezUInt32 uiCharacter)</div><div class="ttdoc">Changes the single character in this string, to which the iterator currently points.</div><div class="ttdef"><b>Definition</b> StringBuilder_inl.h:178</div></div>
<div class="ttc" id="aclassez_string_builder_htm_aa8e97941dfc6747eabf7e8dfb1c8c783"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#aa8e97941dfc6747eabf7e8dfb1c8c783">ezStringBuilder::Reserve</a></div><div class="ttdeci">void Reserve(ezUInt32 uiNumElements)</div><div class="ttdoc">Reserves uiNumElements bytes.</div><div class="ttdef"><b>Definition</b> StringBuilder_inl.h:197</div></div>
<div class="ttc" id="aclassez_string_builder_htm_ad9e3819efaa857a532b63a7c204f5b5f"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#ad9e3819efaa857a532b63a7c204f5b5f">ezStringBuilder::Remove</a></div><div class="ttdeci">void Remove(const char *szRemoveFromPos, const char *szRemoveToPos)</div><div class="ttdoc">A wrapper around ReplaceSubString. Will remove the substring which starts at szRemoveFromPos and ends...</div><div class="ttdef"><b>Definition</b> StringBuilder_inl.h:207</div></div>
<div class="ttc" id="aclassez_string_builder_htm_ae70343bc31fa6d5dff4e2bc66abbc6d5"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#ae70343bc31fa6d5dff4e2bc66abbc6d5">ezStringBuilder::GetData</a></div><div class="ttdeci">const char * GetData() const</div><div class="ttdoc">Returns a char pointer to the internal Utf8 data.</div><div class="ttdef"><b>Definition</b> StringBuilder_inl.h:148</div></div>
<div class="ttc" id="aclassez_string_utf8_htm"><div class="ttname"><a href="../../d9/d95/classez_string_utf8.htm">ezStringUtf8</a></div><div class="ttdoc">A small string class that converts any other encoding to Utf8.</div><div class="ttdef"><b>Definition</b> StringConversion.h:47</div></div>
<div class="ttc" id="aclassez_string_utils_htm_a1825871aad703fcbda09e6a5f96eb40b"><div class="ttname"><a href="../../de/df8/classez_string_utils.htm#a1825871aad703fcbda09e6a5f96eb40b">ezStringUtils::GetCharacterCount</a></div><div class="ttdeci">static ezUInt32 GetCharacterCount(const char *szUtf8, const char *pStringEnd=ezUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Returns the number of characters (not Bytes!) in a Utf8 string (excluding the zero terminator),...</div><div class="ttdef"><b>Definition</b> StringUtils_inl.h:81</div></div>
<div class="ttc" id="aclassez_string_utils_htm_a3335c5fa83fe13480e69f4ee8f5c24e8"><div class="ttname"><a href="../../de/df8/classez_string_utils.htm#a3335c5fa83fe13480e69f4ee8f5c24e8">ezStringUtils::ToLowerString</a></div><div class="ttdeci">static ezUInt32 ToLowerString(char *szString, const char *pStringEnd=ezUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Converts a (UTF-8) string in-place to lower case.</div><div class="ttdef"><b>Definition</b> StringUtils.cpp:176</div></div>
<div class="ttc" id="aclassez_string_utils_htm_a7f700515442b9c61864de2fa3ac81998"><div class="ttname"><a href="../../de/df8/classez_string_utils.htm#a7f700515442b9c61864de2fa3ac81998">ezStringUtils::ToUpperString</a></div><div class="ttdeci">static ezUInt32 ToUpperString(char *szString, const char *pStringEnd=ezUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Converts a (UTF-8) string in-place to upper case.</div><div class="ttdef"><b>Definition</b> StringUtils.cpp:158</div></div>
<div class="ttc" id="aclassez_string_view_htm"><div class="ttname"><a href="../../d9/d18/classez_string_view.htm">ezStringView</a></div><div class="ttdoc">ezStringView represent a read-only sub-string of a larger string, as it can store a dedicated string ...</div><div class="ttdef"><b>Definition</b> StringView.h:34</div></div>
<div class="ttc" id="aclassez_unicode_utils_htm_a482bd0122e8ad37eca5bf535b07a7315"><div class="ttname"><a href="../../d9/d32/classez_unicode_utils.htm#a482bd0122e8ad37eca5bf535b07a7315">ezUnicodeUtils::EncodeUtf32ToUtf8</a></div><div class="ttdeci">static void EncodeUtf32ToUtf8(ezUInt32 uiUtf32, ByteIterator &amp;ref_szUtf8Output)</div><div class="ttdoc">Encodes the given Utf32 character to Utf8 and writes as many bytes to the output iterator,...</div><div class="ttdef"><b>Definition</b> UnicodeUtils_inl.h:92</div></div>
<div class="ttc" id="aclassez_unicode_utils_htm_a7ee2e30f7fc86483b43011333a3f6702"><div class="ttname"><a href="../../d9/d32/classez_unicode_utils.htm#a7ee2e30f7fc86483b43011333a3f6702">ezUnicodeUtils::DecodeUtf8ToUtf32</a></div><div class="ttdeci">static ezUInt32 DecodeUtf8ToUtf32(ByteIterator &amp;ref_szUtf8Iterator)</div><div class="ttdoc">Decodes the next character from the given Utf8 sequence to Utf32 and increments the iterator as far a...</div><div class="ttdef"><b>Definition</b> UnicodeUtils_inl.h:51</div></div>
<div class="ttc" id="aclassez_unicode_utils_htm_aa8fc2304ec3c1db82831c424097a30f5"><div class="ttname"><a href="../../d9/d32/classez_unicode_utils.htm#aa8fc2304ec3c1db82831c424097a30f5">ezUnicodeUtils::IsASCII</a></div><div class="ttdeci">static bool IsASCII(ezUInt32 uiChar)</div><div class="ttdoc">Returns whether a character is a pure ASCII character (only the first 7 Bits are used)</div><div class="ttdef"><b>Definition</b> UnicodeUtils_inl.h:23</div></div>
<div class="ttc" id="aclassez_unicode_utils_htm_aad14aa352862f29d33165e6aa35907c3"><div class="ttname"><a href="../../d9/d32/classez_unicode_utils.htm#aad14aa352862f29d33165e6aa35907c3">ezUnicodeUtils::RepairNonUtf8Text</a></div><div class="ttdeci">static bool RepairNonUtf8Text(const char *pStartData, const char *pEndData, Container &amp;out_result)</div><div class="ttdoc">Checks an array of char's, whether it is a valid Utf8 string. If not, it repairs the string,...</div><div class="ttdef"><b>Definition</b> StringBuilder_inl.h:213</div></div>
<div class="ttc" id="aclassez_unicode_utils_htm_ae560190e97c0762412f9cae4b8ea39b9"><div class="ttname"><a href="../../d9/d32/classez_unicode_utils.htm#ae560190e97c0762412f9cae4b8ea39b9">ezUnicodeUtils::IsValidUtf8</a></div><div class="ttdeci">static bool IsValidUtf8(const char *szString, const char *szStringEnd=GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Returns false if the given string does not contain a completely valid Utf8 string.</div><div class="ttdef"><b>Definition</b> UnicodeUtils_inl.h:150</div></div>
<div class="ttc" id="astructez_unicode_utils_1_1_utf_inserter_htm"><div class="ttname"><a href="../../da/d97/structez_unicode_utils_1_1_utf_inserter.htm">ezUnicodeUtils::UtfInserter</a></div><div class="ttdoc">[internal] Small helper class to append bytes to some arbitrary container. Used for Utf8 string build...</div><div class="ttdef"><b>Definition</b> UnicodeUtils.h:111</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_b52479c911fe9a42767226b3387b3a02.htm">Strings</a></li><li class="navelem"><a class="el" href="../../dir_067384bf2c73f8a8078edb859c0ba426.htm">Implementation</a></li><li class="navelem"><b>StringBuilder_inl.h</b></li>
    <li class="footer">Generated on Fri Jul 11 2025 12:17:53 for ezEngine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
