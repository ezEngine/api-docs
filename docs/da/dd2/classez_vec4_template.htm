<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: ezVec4Template&lt; Type &gt; Class Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">ezEngine<span id="projectnumber">&#160;Release 25.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('da/dd2/classez_vec4_template.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="../../d3/d64/classez_vec4_template-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">ezVec4Template&lt; Type &gt; Class Template Reference</div></div>
</div><!--header-->
<div class="contents">

<p>A 4-component vector class.  
 <a href="../../da/dd2/classez_vec4_template.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../df/d6a/_vec4_8h_source.htm">Vec4.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-types" name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a3bcbd3184d6dcba11d013b7ae00a3216" id="r_a3bcbd3184d6dcba11d013b7ae00a3216"><td class="memItemLeft" align="right" valign="top"><a id="a3bcbd3184d6dcba11d013b7ae00a3216" name="a3bcbd3184d6dcba11d013b7ae00a3216"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>ComponentType</b> = Type</td></tr>
<tr class="separator:a3bcbd3184d6dcba11d013b7ae00a3216"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aa0cd27b7fdba30aed805c221e41c9511" id="r_aa0cd27b7fdba30aed805c221e41c9511"><td class="memItemLeft" align="right" valign="top"><a id="aa0cd27b7fdba30aed805c221e41c9511" name="aa0cd27b7fdba30aed805c221e41c9511"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>EZ_DECLARE_POD_TYPE</b> ()</td></tr>
<tr class="separator:aa0cd27b7fdba30aed805c221e41c9511"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a58ca6e0fd129b688b3520529bbebe6e7" id="r_a58ca6e0fd129b688b3520529bbebe6e7"><td class="memItemLeft" align="right" valign="top"><a id="a58ca6e0fd129b688b3520529bbebe6e7" name="a58ca6e0fd129b688b3520529bbebe6e7"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>ezVec4Template</b> ()</td></tr>
<tr class="memdesc:a58ca6e0fd129b688b3520529bbebe6e7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default-constructed vector is uninitialized (for speed) <br /></td></tr>
<tr class="separator:a58ca6e0fd129b688b3520529bbebe6e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aacd37055d4349db084842a4ac78fe228" id="r_aacd37055d4349db084842a4ac78fe228"><td class="memItemLeft" align="right" valign="top"><a id="aacd37055d4349db084842a4ac78fe228" name="aacd37055d4349db084842a4ac78fe228"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>ezVec4Template</b> (Type x, Type y, Type z, Type w)</td></tr>
<tr class="memdesc:aacd37055d4349db084842a4ac78fe228"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the vector with x,y,z,w. <br /></td></tr>
<tr class="separator:aacd37055d4349db084842a4ac78fe228"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1678722e4e840a5925d34cb3fbc5fb0e" id="r_a1678722e4e840a5925d34cb3fbc5fb0e"><td class="memItemLeft" align="right" valign="top"><a id="a1678722e4e840a5925d34cb3fbc5fb0e" name="a1678722e4e840a5925d34cb3fbc5fb0e"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>ezVec4Template</b> (<a class="el" href="../../da/df1/classez_vec3_template.htm">ezVec3Template</a>&lt; Type &gt; vXyz, Type w)</td></tr>
<tr class="memdesc:a1678722e4e840a5925d34cb3fbc5fb0e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the vector from a vec3 and a float. <br /></td></tr>
<tr class="separator:a1678722e4e840a5925d34cb3fbc5fb0e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c07a268fb4667e574e307876fae40c0" id="r_a1c07a268fb4667e574e307876fae40c0"><td class="memItemLeft" align="right" valign="top"><a id="a1c07a268fb4667e574e307876fae40c0" name="a1c07a268fb4667e574e307876fae40c0"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>ezVec4Template</b> (Type v)</td></tr>
<tr class="memdesc:a1c07a268fb4667e574e307876fae40c0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes all 4 components with xyzw. <br /></td></tr>
<tr class="separator:a1c07a268fb4667e574e307876fae40c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a499cf78b2a49b534060d22190dc161f3" id="r_a499cf78b2a49b534060d22190dc161f3"><td class="memItemLeft" align="right" valign="top"><a id="a499cf78b2a49b534060d22190dc161f3" name="a499cf78b2a49b534060d22190dc161f3"></a>
const <a class="el" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetAsVec2</b> () const</td></tr>
<tr class="memdesc:a499cf78b2a49b534060d22190dc161f3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an <a class="el" href="../../d1/df8/classez_vec2_template.htm" title="A 2-component vector class.">ezVec2Template</a> with x and y from this vector. <br /></td></tr>
<tr class="separator:a499cf78b2a49b534060d22190dc161f3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86dacf4c029ff7b1bdc0c24ee8327ef2" id="r_a86dacf4c029ff7b1bdc0c24ee8327ef2"><td class="memItemLeft" align="right" valign="top"><a id="a86dacf4c029ff7b1bdc0c24ee8327ef2" name="a86dacf4c029ff7b1bdc0c24ee8327ef2"></a>
const <a class="el" href="../../da/df1/classez_vec3_template.htm">ezVec3Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetAsVec3</b> () const</td></tr>
<tr class="memdesc:a86dacf4c029ff7b1bdc0c24ee8327ef2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an <a class="el" href="../../da/df1/classez_vec3_template.htm" title="A 3-component vector class.">ezVec3Template</a> with x,y and z from this vector. <br /></td></tr>
<tr class="separator:a86dacf4c029ff7b1bdc0c24ee8327ef2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d43bd35d69d432ce60f79ab566114ec" id="r_a2d43bd35d69d432ce60f79ab566114ec"><td class="memItemLeft" align="right" valign="top"><a id="a2d43bd35d69d432ce60f79ab566114ec" name="a2d43bd35d69d432ce60f79ab566114ec"></a>
const Type *&#160;</td><td class="memItemRight" valign="bottom"><b>GetData</b> () const</td></tr>
<tr class="memdesc:a2d43bd35d69d432ce60f79ab566114ec"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the data as an array. <br /></td></tr>
<tr class="separator:a2d43bd35d69d432ce60f79ab566114ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af70a6c6a497809c3c7b8c16f4dbd146f" id="r_af70a6c6a497809c3c7b8c16f4dbd146f"><td class="memItemLeft" align="right" valign="top"><a id="af70a6c6a497809c3c7b8c16f4dbd146f" name="af70a6c6a497809c3c7b8c16f4dbd146f"></a>
Type *&#160;</td><td class="memItemRight" valign="bottom"><b>GetData</b> ()</td></tr>
<tr class="memdesc:af70a6c6a497809c3c7b8c16f4dbd146f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the data as an array. <br /></td></tr>
<tr class="separator:af70a6c6a497809c3c7b8c16f4dbd146f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a734bd1957e14960f1bd196cbad95df07" id="r_a734bd1957e14960f1bd196cbad95df07"><td class="memItemLeft" align="right" valign="top"><a id="a734bd1957e14960f1bd196cbad95df07" name="a734bd1957e14960f1bd196cbad95df07"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Set</b> (Type xyzw)</td></tr>
<tr class="memdesc:a734bd1957e14960f1bd196cbad95df07"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets all 4 components to this value. <br /></td></tr>
<tr class="separator:a734bd1957e14960f1bd196cbad95df07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a604ece36dac750d084809479a5132814" id="r_a604ece36dac750d084809479a5132814"><td class="memItemLeft" align="right" valign="top"><a id="a604ece36dac750d084809479a5132814" name="a604ece36dac750d084809479a5132814"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Set</b> (Type x, Type y, Type z, Type w)</td></tr>
<tr class="memdesc:a604ece36dac750d084809479a5132814"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the vector to these values. <br /></td></tr>
<tr class="separator:a604ece36dac750d084809479a5132814"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a85ee092f91af27c089c8416d7c37f20c" id="r_a85ee092f91af27c089c8416d7c37f20c"><td class="memItemLeft" align="right" valign="top"><a id="a85ee092f91af27c089c8416d7c37f20c" name="a85ee092f91af27c089c8416d7c37f20c"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetZero</b> ()</td></tr>
<tr class="memdesc:a85ee092f91af27c089c8416d7c37f20c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the vector to all zero. <br /></td></tr>
<tr class="separator:a85ee092f91af27c089c8416d7c37f20c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a16ba78f0b9c5010790ac01144777c7a7" id="r_a16ba78f0b9c5010790ac01144777c7a7"><td class="memItemLeft" align="right" valign="top"><a id="a16ba78f0b9c5010790ac01144777c7a7" name="a16ba78f0b9c5010790ac01144777c7a7"></a>
EZ_DECLARE_IF_FLOAT_TYPE Type&#160;</td><td class="memItemRight" valign="bottom"><b>GetLength</b> () const</td></tr>
<tr class="memdesc:a16ba78f0b9c5010790ac01144777c7a7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the length of the vector. <br /></td></tr>
<tr class="separator:a16ba78f0b9c5010790ac01144777c7a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a50e33e22bdbf34a39c02cdc75b0df213" id="r_a50e33e22bdbf34a39c02cdc75b0df213"><td class="memItemLeft" align="right" valign="top"><a id="a50e33e22bdbf34a39c02cdc75b0df213" name="a50e33e22bdbf34a39c02cdc75b0df213"></a>
Type&#160;</td><td class="memItemRight" valign="bottom"><b>GetLengthSquared</b> () const</td></tr>
<tr class="memdesc:a50e33e22bdbf34a39c02cdc75b0df213"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the squared length. Faster, since no square-root is taken. Useful, if one only wants to compare the lengths of two vectors. <br /></td></tr>
<tr class="separator:a50e33e22bdbf34a39c02cdc75b0df213"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc982398ad9f57956fbea7b8783ded1f" id="r_afc982398ad9f57956fbea7b8783ded1f"><td class="memItemLeft" align="right" valign="top"><a id="afc982398ad9f57956fbea7b8783ded1f" name="afc982398ad9f57956fbea7b8783ded1f"></a>
EZ_DECLARE_IF_FLOAT_TYPE Type&#160;</td><td class="memItemRight" valign="bottom"><b>GetLengthAndNormalize</b> ()</td></tr>
<tr class="memdesc:afc982398ad9f57956fbea7b8783ded1f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Normalizes this vector and returns its previous length in one operation. More efficient than calling GetLength and then Normalize. <br /></td></tr>
<tr class="separator:afc982398ad9f57956fbea7b8783ded1f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab0129f40fcb3291a7902d0d2f43401e4" id="r_ab0129f40fcb3291a7902d0d2f43401e4"><td class="memItemLeft" align="right" valign="top"><a id="ab0129f40fcb3291a7902d0d2f43401e4" name="ab0129f40fcb3291a7902d0d2f43401e4"></a>
EZ_DECLARE_IF_FLOAT_TYPE const <a class="el" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetNormalized</b> () const</td></tr>
<tr class="memdesc:ab0129f40fcb3291a7902d0d2f43401e4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a normalized version of this vector, leaves the vector itself unchanged. <br /></td></tr>
<tr class="separator:ab0129f40fcb3291a7902d0d2f43401e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a79da06407a8943dc1670da10bdc23283" id="r_a79da06407a8943dc1670da10bdc23283"><td class="memItemLeft" align="right" valign="top"><a id="a79da06407a8943dc1670da10bdc23283" name="a79da06407a8943dc1670da10bdc23283"></a>
EZ_DECLARE_IF_FLOAT_TYPE void&#160;</td><td class="memItemRight" valign="bottom"><b>Normalize</b> ()</td></tr>
<tr class="memdesc:a79da06407a8943dc1670da10bdc23283"><td class="mdescLeft">&#160;</td><td class="mdescRight">Normalizes this vector. <br /></td></tr>
<tr class="separator:a79da06407a8943dc1670da10bdc23283"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9aa4c087b8836e898362b36d979bf659" id="r_a9aa4c087b8836e898362b36d979bf659"><td class="memItemLeft" align="right" valign="top"><a id="a9aa4c087b8836e898362b36d979bf659" name="a9aa4c087b8836e898362b36d979bf659"></a>
EZ_DECLARE_IF_FLOAT_TYPE <a class="el" href="../../d4/da9/structez_result.htm">ezResult</a>&#160;</td><td class="memItemRight" valign="bottom"><b>NormalizeIfNotZero</b> (const <a class="el" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template</a>&lt; Type &gt; &amp;vFallback=<a class="el" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template</a>&lt; Type &gt;(1, 0, 0, 0), Type fEpsilon=ezMath::SmallEpsilon&lt; Type &gt;())</td></tr>
<tr class="memdesc:a9aa4c087b8836e898362b36d979bf659"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tries to normalize this vector. If the vector is too close to zero, EZ_FAILURE is returned and the vector is set to the given fallback value. <br /></td></tr>
<tr class="separator:a9aa4c087b8836e898362b36d979bf659"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa848eab17984566c4244748c4002f174" id="r_aa848eab17984566c4244748c4002f174"><td class="memItemLeft" align="right" valign="top"><a id="aa848eab17984566c4244748c4002f174" name="aa848eab17984566c4244748c4002f174"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsZero</b> () const</td></tr>
<tr class="memdesc:aa848eab17984566c4244748c4002f174"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns, whether this vector is (0, 0, 0, 0). <br /></td></tr>
<tr class="separator:aa848eab17984566c4244748c4002f174"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6dedf2d28bc7c3e56682dc9dd6521494" id="r_a6dedf2d28bc7c3e56682dc9dd6521494"><td class="memItemLeft" align="right" valign="top"><a id="a6dedf2d28bc7c3e56682dc9dd6521494" name="a6dedf2d28bc7c3e56682dc9dd6521494"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsZero</b> (Type fEpsilon) const</td></tr>
<tr class="memdesc:a6dedf2d28bc7c3e56682dc9dd6521494"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns, whether this vector is (0, 0, 0, 0). <br /></td></tr>
<tr class="separator:a6dedf2d28bc7c3e56682dc9dd6521494"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d541672c8f315839b056a58fee9c263" id="r_a1d541672c8f315839b056a58fee9c263"><td class="memItemLeft" align="right" valign="top">EZ_DECLARE_IF_FLOAT_TYPE bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dd2/classez_vec4_template.htm#a1d541672c8f315839b056a58fee9c263">IsNormalized</a> (Type fEpsilon=ezMath::HugeEpsilon&lt; Type &gt;()) const</td></tr>
<tr class="memdesc:a1d541672c8f315839b056a58fee9c263"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns, whether the squared length of this vector is between 0.999f and 1.001f.  <br /></td></tr>
<tr class="separator:a1d541672c8f315839b056a58fee9c263"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad6e390f941878d363223b114ac24b99d" id="r_ad6e390f941878d363223b114ac24b99d"><td class="memItemLeft" align="right" valign="top"><a id="ad6e390f941878d363223b114ac24b99d" name="ad6e390f941878d363223b114ac24b99d"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsNaN</b> () const</td></tr>
<tr class="memdesc:ad6e390f941878d363223b114ac24b99d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if any of x, y, z or w is NaN. <br /></td></tr>
<tr class="separator:ad6e390f941878d363223b114ac24b99d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a52e6bbfa4721c65bfe90e6813a2e3330" id="r_a52e6bbfa4721c65bfe90e6813a2e3330"><td class="memItemLeft" align="right" valign="top"><a id="a52e6bbfa4721c65bfe90e6813a2e3330" name="a52e6bbfa4721c65bfe90e6813a2e3330"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsValid</b> () const</td></tr>
<tr class="memdesc:a52e6bbfa4721c65bfe90e6813a2e3330"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks that all components are finite numbers. <br /></td></tr>
<tr class="separator:a52e6bbfa4721c65bfe90e6813a2e3330"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aef4e44aec65a52387494e7d1d06f0875" id="r_aef4e44aec65a52387494e7d1d06f0875"><td class="memItemLeft" align="right" valign="top"><a id="aef4e44aec65a52387494e7d1d06f0875" name="aef4e44aec65a52387494e7d1d06f0875"></a>
const <a class="el" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>operator-</b> () const</td></tr>
<tr class="memdesc:aef4e44aec65a52387494e7d1d06f0875"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the negation of this vector. <br /></td></tr>
<tr class="separator:aef4e44aec65a52387494e7d1d06f0875"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1dc3e7c5e39ee2f0feec6373f547df30" id="r_a1dc3e7c5e39ee2f0feec6373f547df30"><td class="memItemLeft" align="right" valign="top"><a id="a1dc3e7c5e39ee2f0feec6373f547df30" name="a1dc3e7c5e39ee2f0feec6373f547df30"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator+=</b> (const <a class="el" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template</a>&lt; Type &gt; &amp;vCc)</td></tr>
<tr class="memdesc:a1dc3e7c5e39ee2f0feec6373f547df30"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds cc component-wise to this vector. <br /></td></tr>
<tr class="separator:a1dc3e7c5e39ee2f0feec6373f547df30"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68ab26d7d3d0df4d8a1fd22eeccdb3f4" id="r_a68ab26d7d3d0df4d8a1fd22eeccdb3f4"><td class="memItemLeft" align="right" valign="top"><a id="a68ab26d7d3d0df4d8a1fd22eeccdb3f4" name="a68ab26d7d3d0df4d8a1fd22eeccdb3f4"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator-=</b> (const <a class="el" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template</a>&lt; Type &gt; &amp;vCc)</td></tr>
<tr class="memdesc:a68ab26d7d3d0df4d8a1fd22eeccdb3f4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Subtracts cc component-wise from this vector. <br /></td></tr>
<tr class="separator:a68ab26d7d3d0df4d8a1fd22eeccdb3f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a01ef497261e43f39dff0379e4d31dc3f" id="r_a01ef497261e43f39dff0379e4d31dc3f"><td class="memItemLeft" align="right" valign="top"><a id="a01ef497261e43f39dff0379e4d31dc3f" name="a01ef497261e43f39dff0379e4d31dc3f"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator*=</b> (Type f)</td></tr>
<tr class="memdesc:a01ef497261e43f39dff0379e4d31dc3f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Multiplies all components of this vector with f. <br /></td></tr>
<tr class="separator:a01ef497261e43f39dff0379e4d31dc3f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e309d10d40a1f37ab4f4e88d4949a67" id="r_a0e309d10d40a1f37ab4f4e88d4949a67"><td class="memItemLeft" align="right" valign="top"><a id="a0e309d10d40a1f37ab4f4e88d4949a67" name="a0e309d10d40a1f37ab4f4e88d4949a67"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator/=</b> (Type f)</td></tr>
<tr class="memdesc:a0e309d10d40a1f37ab4f4e88d4949a67"><td class="mdescLeft">&#160;</td><td class="mdescRight">Divides all components of this vector by f. <br /></td></tr>
<tr class="separator:a0e309d10d40a1f37ab4f4e88d4949a67"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a998a04b66d071e9943026ee4b73cec6a" id="r_a998a04b66d071e9943026ee4b73cec6a"><td class="memItemLeft" align="right" valign="top"><a id="a998a04b66d071e9943026ee4b73cec6a" name="a998a04b66d071e9943026ee4b73cec6a"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsIdentical</b> (const <a class="el" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template</a>&lt; Type &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:a998a04b66d071e9943026ee4b73cec6a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Equality Check (bitwise). <br /></td></tr>
<tr class="separator:a998a04b66d071e9943026ee4b73cec6a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a30c9a06bc89e117da8db839f8a64af32" id="r_a30c9a06bc89e117da8db839f8a64af32"><td class="memItemLeft" align="right" valign="top"><a id="a30c9a06bc89e117da8db839f8a64af32" name="a30c9a06bc89e117da8db839f8a64af32"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsEqual</b> (const <a class="el" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template</a>&lt; Type &gt; &amp;rhs, Type fEpsilon) const</td></tr>
<tr class="memdesc:a30c9a06bc89e117da8db839f8a64af32"><td class="mdescLeft">&#160;</td><td class="mdescRight">Equality Check with epsilon. <br /></td></tr>
<tr class="separator:a30c9a06bc89e117da8db839f8a64af32"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a49b21d01ca53426ea97bbcb301b0d878" id="r_a49b21d01ca53426ea97bbcb301b0d878"><td class="memItemLeft" align="right" valign="top"><a id="a49b21d01ca53426ea97bbcb301b0d878" name="a49b21d01ca53426ea97bbcb301b0d878"></a>
Type&#160;</td><td class="memItemRight" valign="bottom"><b>Dot</b> (const <a class="el" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template</a>&lt; Type &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:a49b21d01ca53426ea97bbcb301b0d878"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the dot-product of the two vectors (commutative, order does not matter). <br /></td></tr>
<tr class="separator:a49b21d01ca53426ea97bbcb301b0d878"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d761f0cd1b26c036d406107e0b15934" id="r_a3d761f0cd1b26c036d406107e0b15934"><td class="memItemLeft" align="right" valign="top"><a id="a3d761f0cd1b26c036d406107e0b15934" name="a3d761f0cd1b26c036d406107e0b15934"></a>
const <a class="el" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>CompMin</b> (const <a class="el" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template</a>&lt; Type &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:a3d761f0cd1b26c036d406107e0b15934"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the component-wise minimum of *this and rhs. <br /></td></tr>
<tr class="separator:a3d761f0cd1b26c036d406107e0b15934"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7dd284122aeb9fb1191e0f3b4557d684" id="r_a7dd284122aeb9fb1191e0f3b4557d684"><td class="memItemLeft" align="right" valign="top"><a id="a7dd284122aeb9fb1191e0f3b4557d684" name="a7dd284122aeb9fb1191e0f3b4557d684"></a>
const <a class="el" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>CompMax</b> (const <a class="el" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template</a>&lt; Type &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:a7dd284122aeb9fb1191e0f3b4557d684"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the component-wise maximum of *this and rhs. <br /></td></tr>
<tr class="separator:a7dd284122aeb9fb1191e0f3b4557d684"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a461ad8757c32b6019b29a76481ae1863" id="r_a461ad8757c32b6019b29a76481ae1863"><td class="memItemLeft" align="right" valign="top"><a id="a461ad8757c32b6019b29a76481ae1863" name="a461ad8757c32b6019b29a76481ae1863"></a>
const <a class="el" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>CompClamp</b> (const <a class="el" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template</a>&lt; Type &gt; &amp;vLow, const <a class="el" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template</a>&lt; Type &gt; &amp;vHigh) const</td></tr>
<tr class="memdesc:a461ad8757c32b6019b29a76481ae1863"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the component-wise clamped value of *this between low and high. <br /></td></tr>
<tr class="separator:a461ad8757c32b6019b29a76481ae1863"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6ae1e5ba6b2a63221d21e3677c492b9" id="r_ae6ae1e5ba6b2a63221d21e3677c492b9"><td class="memItemLeft" align="right" valign="top"><a id="ae6ae1e5ba6b2a63221d21e3677c492b9" name="ae6ae1e5ba6b2a63221d21e3677c492b9"></a>
const <a class="el" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>CompMul</b> (const <a class="el" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template</a>&lt; Type &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:ae6ae1e5ba6b2a63221d21e3677c492b9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the component-wise multiplication of *this and rhs. <br /></td></tr>
<tr class="separator:ae6ae1e5ba6b2a63221d21e3677c492b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f9bb6e4b1370a9964964f1c816b1323" id="r_a5f9bb6e4b1370a9964964f1c816b1323"><td class="memItemLeft" align="right" valign="top"><a id="a5f9bb6e4b1370a9964964f1c816b1323" name="a5f9bb6e4b1370a9964964f1c816b1323"></a>
const <a class="el" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>CompDiv</b> (const <a class="el" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template</a>&lt; Type &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:a5f9bb6e4b1370a9964964f1c816b1323"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the component-wise division of *this and rhs. <br /></td></tr>
<tr class="separator:a5f9bb6e4b1370a9964964f1c816b1323"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37a73e8688b13fd0a5bd4f2b86fa94e8" id="r_a37a73e8688b13fd0a5bd4f2b86fa94e8"><td class="memItemLeft" align="right" valign="top"><a id="a37a73e8688b13fd0a5bd4f2b86fa94e8" name="a37a73e8688b13fd0a5bd4f2b86fa94e8"></a>
const <a class="el" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>Abs</b> () const</td></tr>
<tr class="memdesc:a37a73e8688b13fd0a5bd4f2b86fa94e8"><td class="mdescLeft">&#160;</td><td class="mdescRight">brief Returns the component-wise absolute of *this. <br /></td></tr>
<tr class="separator:a37a73e8688b13fd0a5bd4f2b86fa94e8"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-methods" name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a180fb54d02857df5597c7933ddc51c7e" id="r_a180fb54d02857df5597c7933ddc51c7e"><td class="memItemLeft" align="right" valign="top"><a id="a180fb54d02857df5597c7933ddc51c7e" name="a180fb54d02857df5597c7933ddc51c7e"></a>
static EZ_DECLARE_IF_FLOAT_TYPE <a class="el" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>MakeNaN</b> ()</td></tr>
<tr class="memdesc:a180fb54d02857df5597c7933ddc51c7e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a vector with all components set to Not-a-Number (NaN). <br /></td></tr>
<tr class="separator:a180fb54d02857df5597c7933ddc51c7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b7ef2e6937ee4798311fde68c8a31b8" id="r_a3b7ef2e6937ee4798311fde68c8a31b8"><td class="memItemLeft" align="right" valign="top"><a id="a3b7ef2e6937ee4798311fde68c8a31b8" name="a3b7ef2e6937ee4798311fde68c8a31b8"></a>
static <a class="el" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template</a>&lt; Type &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>MakeZero</b> ()</td></tr>
<tr class="memdesc:a3b7ef2e6937ee4798311fde68c8a31b8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a vector with all components set to zero. <br /></td></tr>
<tr class="separator:a3b7ef2e6937ee4798311fde68c8a31b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-attribs" name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a536ca48a16aa5b45e2175b49738e1f38" id="r_a536ca48a16aa5b45e2175b49738e1f38"><td class="memItemLeft" align="right" valign="top"><a id="a536ca48a16aa5b45e2175b49738e1f38" name="a536ca48a16aa5b45e2175b49738e1f38"></a>
Type&#160;</td><td class="memItemRight" valign="bottom"><b>x</b></td></tr>
<tr class="separator:a536ca48a16aa5b45e2175b49738e1f38"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a47767ea6507ac352e8ffa4f2c30a449d" id="r_a47767ea6507ac352e8ffa4f2c30a449d"><td class="memItemLeft" align="right" valign="top"><a id="a47767ea6507ac352e8ffa4f2c30a449d" name="a47767ea6507ac352e8ffa4f2c30a449d"></a>
Type&#160;</td><td class="memItemRight" valign="bottom"><b>y</b></td></tr>
<tr class="separator:a47767ea6507ac352e8ffa4f2c30a449d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8955a591a63a05ca1720726c61b645d" id="r_ad8955a591a63a05ca1720726c61b645d"><td class="memItemLeft" align="right" valign="top"><a id="ad8955a591a63a05ca1720726c61b645d" name="ad8955a591a63a05ca1720726c61b645d"></a>
Type&#160;</td><td class="memItemRight" valign="bottom"><b>z</b></td></tr>
<tr class="separator:ad8955a591a63a05ca1720726c61b645d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a666ef27635838bd6d23e42ff08d8d515" id="r_a666ef27635838bd6d23e42ff08d8d515"><td class="memItemLeft" align="right" valign="top"><a id="a666ef27635838bd6d23e42ff08d8d515" name="a666ef27635838bd6d23e42ff08d8d515"></a>
Type&#160;</td><td class="memItemRight" valign="bottom"><b>w</b></td></tr>
<tr class="separator:a666ef27635838bd6d23e42ff08d8d515"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><div class="compoundTemplParams">template&lt;typename Type&gt;<br />
class ezVec4Template&lt; Type &gt;</div><p>A 4-component vector class. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a1d541672c8f315839b056a58fee9c263" name="a1d541672c8f315839b056a58fee9c263"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1d541672c8f315839b056a58fee9c263">&#9670;&#160;</a></span>IsNormalized()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">EZ_IMPLEMENT_IF_FLOAT_TYPE bool <a class="el" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template</a>&lt; Type &gt;::IsNormalized </td>
          <td>(</td>
          <td class="paramtype">Type&#160;</td>
          <td class="paramname"><em>fEpsilon</em> = <code>ezMath::HugeEpsilon&lt;Type&gt;()</code></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns, whether the squared length of this vector is between 0.999f and 1.001f. </p>
<dl class="section note"><dt>Note</dt><dd>Normalization, especially with SSE is not very precise. So this function checks whether the (squared) length is between a lower and upper limit. </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Math/<a class="el" href="../../d4/dbc/_engine_2_foundation_2_math_2_declarations_8h_source.htm">Declarations.h</a></li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Math/<a class="el" href="../../df/d6a/_vec4_8h_source.htm">Vec4.h</a></li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Math/Implementation/<a class="el" href="../../db/dba/_vec4__inl_8h_source.htm">Vec4_inl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template</a></li>
    <li class="footer">Generated on Fri Jul 11 2025 12:18:01 for ezEngine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
