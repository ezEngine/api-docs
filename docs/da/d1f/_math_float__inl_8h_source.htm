<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Math/Implementation/MathFloat_inl.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 25.03</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('da/d1f/_math_float__inl_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">MathFloat_inl.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;algorithm&gt;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160; </div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="keyword">namespace </span><a class="code" href="../../db/d78/namespaceez_math.htm">ezMath</a></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;{</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;  EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> IsFinite(<span class="keywordtype">float</span> value)</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;  {</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;    <span class="comment">// Check the 8 exponent bits.</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;    <span class="comment">// NAN -&gt; (exponent = all 1, mantissa = non-zero)</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;    <span class="comment">// INF -&gt; (exponent = all 1, mantissa = zero)</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160; </div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;    <a class="code" href="../../d8/d2c/unionez_int_float_union.htm">ezIntFloatUnion</a> i2f(value);</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;    <span class="keywordflow">return</span> ((i2f.i &amp; 0x7f800000u) != 0x7f800000u);</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;  }</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160; </div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;  EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> IsNaN(<span class="keywordtype">float</span> value)</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;  {</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    <span class="comment">// Check the 8 exponent bits.</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;    <span class="comment">// NAN -&gt; (exponent = all 1, mantissa = non-zero)</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    <span class="comment">// INF -&gt; (exponent = all 1, mantissa = zero)</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160; </div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    <a class="code" href="../../d8/d2c/unionez_int_float_union.htm">ezIntFloatUnion</a> i2f(value);</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    <span class="keywordflow">return</span> (((i2f.i &amp; 0x7f800000u) == 0x7f800000u) &amp;&amp; ((i2f.i &amp; 0x7FFFFFu) != 0));</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;  }</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno"><a class="line" href="../../db/d78/namespaceez_math.htm#a4f1f04277a5268f8368143df99fcb58d">   27</a></span>&#160;  EZ_ALWAYS_INLINE <span class="keywordtype">float</span> Floor(<span class="keywordtype">float</span> f)</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  {</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    <span class="keywordflow">return</span> floorf(f);</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;  }</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160; </div>
<div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="../../db/d78/namespaceez_math.htm#a9110f05274235ec1582030e30f5b66ab">   32</a></span>&#160;  EZ_ALWAYS_INLINE ezInt32 <a class="code" href="../../db/d78/namespaceez_math.htm#a9110f05274235ec1582030e30f5b66ab">FloorToInt</a>(<span class="keywordtype">float</span> f)</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;  {</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span>ezInt32<span class="keyword">&gt;</span>(floorf(f));</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;  }</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160; </div>
<div class="line"><a name="l00037"></a><span class="lineno"><a class="line" href="../../db/d78/namespaceez_math.htm#a69f658b9dc1a50b90df3dce2c41ddbfe">   37</a></span>&#160;  EZ_ALWAYS_INLINE <span class="keywordtype">float</span> Ceil(<span class="keywordtype">float</span> f)</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  {</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <span class="keywordflow">return</span> ceilf(f);</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  }</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160; </div>
<div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="../../db/d78/namespaceez_math.htm#ad53c88db688345074c3363124b1e770c">   42</a></span>&#160;  EZ_ALWAYS_INLINE ezInt32 <a class="code" href="../../db/d78/namespaceez_math.htm#ad53c88db688345074c3363124b1e770c">CeilToInt</a>(<span class="keywordtype">float</span> f)</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  {</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span>ezInt32<span class="keyword">&gt;</span>(ceilf(f));</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  }</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160; </div>
<div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="../../db/d78/namespaceez_math.htm#ace725c91daf115ff11418655fcf83f0c">   47</a></span>&#160;  EZ_ALWAYS_INLINE <span class="keywordtype">float</span> <a class="code" href="../../db/d78/namespaceez_math.htm#a3eaa04e59a8c066cc25b1966f760f08d">Round</a>(<span class="keywordtype">float</span> f)</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;  {</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keywordflow">return</span> Floor(f + 0.5f);</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;  }</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160; </div>
<div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="../../db/d78/namespaceez_math.htm#a877f8338e5a9e70ca0ab22017cff9d12">   52</a></span>&#160;  EZ_ALWAYS_INLINE ezInt32 <a class="code" href="../../db/d78/namespaceez_math.htm#a877f8338e5a9e70ca0ab22017cff9d12">RoundToInt</a>(<span class="keywordtype">float</span> f)</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;  {</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../db/d78/namespaceez_math.htm#a9110f05274235ec1582030e30f5b66ab">FloorToInt</a>(f + 0.5f);</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  }</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160; </div>
<div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="../../db/d78/namespaceez_math.htm#a0d0896fa18391bd771afac0a9af31ad2">   57</a></span>&#160;  EZ_ALWAYS_INLINE <span class="keywordtype">float</span> <a class="code" href="../../db/d78/namespaceez_math.htm#a0722f85d43ba80c523681eb5107b54d9">RoundToMultiple</a>(<span class="keywordtype">float</span> f, <span class="keywordtype">float</span> fMultiple)</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  {</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../db/d78/namespaceez_math.htm#a3eaa04e59a8c066cc25b1966f760f08d">Round</a>(f / fMultiple) * fMultiple;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;  }</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160; </div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160; </div>
<div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="../../db/d78/namespaceez_math.htm#aa37de9214425b8b8e412050ab645c51a">   63</a></span>&#160;  <span class="keyword">inline</span> <span class="keywordtype">float</span> <a class="code" href="../../db/d78/namespaceez_math.htm#a7c2327035769c42fcb8d220fa92a55d7">RoundDown</a>(<span class="keywordtype">float</span> f, <span class="keywordtype">float</span> fMultiple)</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  {</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    <span class="keywordtype">float</span> fDivides = f / fMultiple;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    <span class="keywordtype">float</span> fFactor = Floor(fDivides);</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <span class="keywordflow">return</span> fFactor * fMultiple;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;  }</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160; </div>
<div class="line"><a name="l00070"></a><span class="lineno"><a class="line" href="../../db/d78/namespaceez_math.htm#a67a9c8adeef5f887b65a4056f813867f">   70</a></span>&#160;  <span class="keyword">inline</span> <span class="keywordtype">float</span> <a class="code" href="../../db/d78/namespaceez_math.htm#a40900843c7a836171770b66bf233c4a4">RoundUp</a>(<span class="keywordtype">float</span> f, <span class="keywordtype">float</span> fMultiple)</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;  {</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    <span class="keywordtype">float</span> fDivides = f / fMultiple;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    <span class="keywordtype">float</span> fFactor = Ceil(fDivides);</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keywordflow">return</span> fFactor * fMultiple;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;  }</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160; </div>
<div class="line"><a name="l00077"></a><span class="lineno"><a class="line" href="../../db/d78/namespaceez_math.htm#a05995060e61c0946e14619b45cd1adef">   77</a></span>&#160;  EZ_ALWAYS_INLINE <span class="keywordtype">float</span> <a class="code" href="../../db/d78/namespaceez_math.htm#a05995060e61c0946e14619b45cd1adef">Sin</a>(<a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a> a)</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;  {</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="keywordflow">return</span> sinf(a.<a class="code" href="../../db/d6f/classez_angle.htm#ad0abad83b3f0b0ff5427034dc99111d0">GetRadian</a>());</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;  }</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160; </div>
<div class="line"><a name="l00082"></a><span class="lineno"><a class="line" href="../../db/d78/namespaceez_math.htm#a40cf3173aac40e0e462c57728e9410ab">   82</a></span>&#160;  EZ_ALWAYS_INLINE <span class="keywordtype">float</span> <a class="code" href="../../db/d78/namespaceez_math.htm#a40cf3173aac40e0e462c57728e9410ab">Cos</a>(<a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a> a)</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;  {</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="keywordflow">return</span> cosf(a.<a class="code" href="../../db/d6f/classez_angle.htm#ad0abad83b3f0b0ff5427034dc99111d0">GetRadian</a>());</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  }</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160; </div>
<div class="line"><a name="l00087"></a><span class="lineno"><a class="line" href="../../db/d78/namespaceez_math.htm#ade2e0a31251abf869a932b0d038a410b">   87</a></span>&#160;  EZ_ALWAYS_INLINE <span class="keywordtype">float</span> <a class="code" href="../../db/d78/namespaceez_math.htm#ade2e0a31251abf869a932b0d038a410b">Tan</a>(<a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a> a)</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;  {</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keywordflow">return</span> tanf(a.<a class="code" href="../../db/d6f/classez_angle.htm#ad0abad83b3f0b0ff5427034dc99111d0">GetRadian</a>());</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;  }</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160; </div>
<div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="../../db/d78/namespaceez_math.htm#a40d1040acdbbf0e452767d15d1c7a564">   92</a></span>&#160;  EZ_ALWAYS_INLINE <a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a> <a class="code" href="../../db/d78/namespaceez_math.htm#a40d1040acdbbf0e452767d15d1c7a564">ASin</a>(<span class="keywordtype">float</span> f)</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  {</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../db/d6f/classez_angle.htm#af0d5329191f5e431830ad76f91f7cc0f">ezAngle::MakeFromRadian</a>(asinf(f));</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;  }</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160; </div>
<div class="line"><a name="l00097"></a><span class="lineno"><a class="line" href="../../db/d78/namespaceez_math.htm#afcbf5132d5cbfc7070cd6d3086709ceb">   97</a></span>&#160;  EZ_ALWAYS_INLINE <a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a> <a class="code" href="../../db/d78/namespaceez_math.htm#afcbf5132d5cbfc7070cd6d3086709ceb">ACos</a>(<span class="keywordtype">float</span> f)</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  {</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../db/d6f/classez_angle.htm#af0d5329191f5e431830ad76f91f7cc0f">ezAngle::MakeFromRadian</a>(acosf(f));</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;  }</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160; </div>
<div class="line"><a name="l00102"></a><span class="lineno"><a class="line" href="../../db/d78/namespaceez_math.htm#afc8b4b9979785105fb73b9f7f8d58c74">  102</a></span>&#160;  EZ_ALWAYS_INLINE <a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a> <a class="code" href="../../db/d78/namespaceez_math.htm#afc8b4b9979785105fb73b9f7f8d58c74">ATan</a>(<span class="keywordtype">float</span> f)</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  {</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../db/d6f/classez_angle.htm#af0d5329191f5e431830ad76f91f7cc0f">ezAngle::MakeFromRadian</a>(atanf(f));</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;  }</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160; </div>
<div class="line"><a name="l00107"></a><span class="lineno"><a class="line" href="../../db/d78/namespaceez_math.htm#a41072c694c87f95f34ab5c13b562fcfe">  107</a></span>&#160;  EZ_ALWAYS_INLINE <a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a> <a class="code" href="../../db/d78/namespaceez_math.htm#a41072c694c87f95f34ab5c13b562fcfe">ATan2</a>(<span class="keywordtype">float</span> y, <span class="keywordtype">float</span> x)</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;  {</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../db/d6f/classez_angle.htm#af0d5329191f5e431830ad76f91f7cc0f">ezAngle::MakeFromRadian</a>(atan2f(y, x));</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;  }</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160; </div>
<div class="line"><a name="l00112"></a><span class="lineno"><a class="line" href="../../db/d78/namespaceez_math.htm#a93c351504ab4f4235860c9d7f2d6171f">  112</a></span>&#160;  EZ_ALWAYS_INLINE <span class="keywordtype">float</span> Exp(<span class="keywordtype">float</span> f)</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;  {</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="keywordflow">return</span> expf(f);</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;  }</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160; </div>
<div class="line"><a name="l00117"></a><span class="lineno"><a class="line" href="../../db/d78/namespaceez_math.htm#a23e1fdae842b9d178197e896c72e34f2">  117</a></span>&#160;  EZ_ALWAYS_INLINE <span class="keywordtype">float</span> Ln(<span class="keywordtype">float</span> f)</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;  {</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="keywordflow">return</span> logf(f);</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;  }</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160; </div>
<div class="line"><a name="l00122"></a><span class="lineno"><a class="line" href="../../db/d78/namespaceez_math.htm#aebc3ad877b97ba2123615bf85aec9c6a">  122</a></span>&#160;  EZ_ALWAYS_INLINE <span class="keywordtype">float</span> Log2(<span class="keywordtype">float</span> f)</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;  {</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="keywordflow">return</span> log2f(f);</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;  }</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160; </div>
<div class="line"><a name="l00127"></a><span class="lineno"><a class="line" href="../../db/d78/namespaceez_math.htm#ae8fdca7daed33fbd76b910b0e55694e5">  127</a></span>&#160;  EZ_ALWAYS_INLINE <span class="keywordtype">float</span> Log10(<span class="keywordtype">float</span> f)</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;  {</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <span class="keywordflow">return</span> log10f(f);</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;  }</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160; </div>
<div class="line"><a name="l00132"></a><span class="lineno"><a class="line" href="../../db/d78/namespaceez_math.htm#ab28c06a7b41b3a10471800114245ecaa">  132</a></span>&#160;  EZ_ALWAYS_INLINE <span class="keywordtype">float</span> Log(<span class="keywordtype">float</span> fBase, <span class="keywordtype">float</span> f)</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;  {</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="keywordflow">return</span> log10f(f) / log10f(fBase);</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;  }</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160; </div>
<div class="line"><a name="l00137"></a><span class="lineno"><a class="line" href="../../db/d78/namespaceez_math.htm#a764946f655a1beee0f608ceaec62c34a">  137</a></span>&#160;  EZ_ALWAYS_INLINE <span class="keywordtype">float</span> Pow2(<span class="keywordtype">float</span> f)</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;  {</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    <span class="keywordflow">return</span> exp2f(f);</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;  }</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160; </div>
<div class="line"><a name="l00142"></a><span class="lineno"><a class="line" href="../../db/d78/namespaceez_math.htm#a95ff8f3c62d49c17356695c4bd8ecca7">  142</a></span>&#160;  EZ_ALWAYS_INLINE <span class="keywordtype">float</span> Pow(<span class="keywordtype">float</span> fBase, <span class="keywordtype">float</span> fExp)</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  {</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    <span class="keywordflow">return</span> powf(fBase, fExp);</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;  }</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160; </div>
<div class="line"><a name="l00147"></a><span class="lineno"><a class="line" href="../../db/d78/namespaceez_math.htm#a1c67fafdb07e8d738b3b3e5cf7e0cf55">  147</a></span>&#160;  EZ_ALWAYS_INLINE <span class="keywordtype">float</span> Root(<span class="keywordtype">float</span> f, <span class="keywordtype">float</span> fNthRoot)</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;  {</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    <span class="keywordflow">return</span> powf(f, 1.0f / fNthRoot);</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;  }</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160; </div>
<div class="line"><a name="l00152"></a><span class="lineno"><a class="line" href="../../db/d78/namespaceez_math.htm#ad2218b9e1098791893b5944d217c72e1">  152</a></span>&#160;  EZ_ALWAYS_INLINE <span class="keywordtype">float</span> <a class="code" href="../../db/d78/namespaceez_math.htm#a7f4e38e30c7914d11bcc85b0a4b1c09a">Sqrt</a>(<span class="keywordtype">float</span> f)</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;  {</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <span class="keywordflow">return</span> sqrtf(f);</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;  }</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160; </div>
<div class="line"><a name="l00157"></a><span class="lineno"><a class="line" href="../../db/d78/namespaceez_math.htm#a1f9702c1b0c654715c3bcd83103b0fb8">  157</a></span>&#160;  EZ_ALWAYS_INLINE <span class="keywordtype">float</span> <a class="code" href="../../db/d78/namespaceez_math.htm#a836d8cdcc38eea643d9442df6d4fd3c0">Mod</a>(<span class="keywordtype">float</span> f, <span class="keywordtype">float</span> fDiv)</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;  {</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    <span class="keywordflow">return</span> fmodf(f, fDiv);</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;  }</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;} <span class="comment">// namespace ezMath</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespaceez_math_htm_a40d1040acdbbf0e452767d15d1c7a564"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a40d1040acdbbf0e452767d15d1c7a564">ezMath::ASin</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezAngle ASin(float f)</div><div class="ttdoc">Returns the arcus sinus of f.</div><div class="ttdef"><b>Definition:</b> MathFloat_inl.h:92</div></div>
<div class="ttc" id="aclassez_angle_htm_ad0abad83b3f0b0ff5427034dc99111d0"><div class="ttname"><a href="../../db/d6f/classez_angle.htm#ad0abad83b3f0b0ff5427034dc99111d0">ezAngle::GetRadian</a></div><div class="ttdeci">constexpr float GetRadian() const</div><div class="ttdoc">Returns the radian value. (No need for any conversion)</div><div class="ttdef"><b>Definition:</b> Angle_inl.h:48</div></div>
<div class="ttc" id="anamespaceez_math_htm_a7f4e38e30c7914d11bcc85b0a4b1c09a"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a7f4e38e30c7914d11bcc85b0a4b1c09a">ezMath::Sqrt</a></div><div class="ttdeci">EZ_ALWAYS_INLINE double Sqrt(double f)</div><div class="ttdoc">Returns the square root of f.</div><div class="ttdef"><b>Definition:</b> MathDouble_inl.h:99</div></div>
<div class="ttc" id="aunionez_int_float_union_htm"><div class="ttname"><a href="../../d8/d2c/unionez_int_float_union.htm">ezIntFloatUnion</a></div><div class="ttdoc">Simple helper union to store ints and floats to modify their bit patterns.</div><div class="ttdef"><b>Definition:</b> Declarations.h:17</div></div>
<div class="ttc" id="anamespaceez_math_htm_a9110f05274235ec1582030e30f5b66ab"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a9110f05274235ec1582030e30f5b66ab">ezMath::FloorToInt</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezInt32 FloorToInt(float f)</div><div class="ttdoc">Returns the next smaller integer, closest to f. Also the SMALLER value, if f is negative.</div><div class="ttdef"><b>Definition:</b> MathFloat_inl.h:32</div></div>
<div class="ttc" id="anamespaceez_math_htm_a05995060e61c0946e14619b45cd1adef"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a05995060e61c0946e14619b45cd1adef">ezMath::Sin</a></div><div class="ttdeci">EZ_ALWAYS_INLINE float Sin(ezAngle a)</div><div class="ttdoc">***** Trigonometric Functions *****</div><div class="ttdef"><b>Definition:</b> MathFloat_inl.h:77</div></div>
<div class="ttc" id="anamespaceez_math_htm_a3eaa04e59a8c066cc25b1966f760f08d"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a3eaa04e59a8c066cc25b1966f760f08d">ezMath::Round</a></div><div class="ttdeci">EZ_ALWAYS_INLINE double Round(double f)</div><div class="ttdoc">Rounds f to the next integer.</div><div class="ttdef"><b>Definition:</b> MathDouble_inl.h:35</div></div>
<div class="ttc" id="anamespaceez_math_htm_a41072c694c87f95f34ab5c13b562fcfe"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a41072c694c87f95f34ab5c13b562fcfe">ezMath::ATan2</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezAngle ATan2(float y, float x)</div><div class="ttdoc">Returns the atan2 of x and y.</div><div class="ttdef"><b>Definition:</b> MathFloat_inl.h:107</div></div>
<div class="ttc" id="anamespaceez_math_htm_a40900843c7a836171770b66bf233c4a4"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a40900843c7a836171770b66bf233c4a4">ezMath::RoundUp</a></div><div class="ttdeci">double RoundUp(double f, double fMultiple)</div><div class="ttdoc">Returns a multiple of fMultiple that is larger than f.</div><div class="ttdef"><b>Definition:</b> MathDouble_inl.h:47</div></div>
<div class="ttc" id="anamespaceez_math_htm_a877f8338e5a9e70ca0ab22017cff9d12"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a877f8338e5a9e70ca0ab22017cff9d12">ezMath::RoundToInt</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezInt32 RoundToInt(float f)</div><div class="ttdoc">Rounds f to the next integer.</div><div class="ttdef"><b>Definition:</b> MathFloat_inl.h:52</div></div>
<div class="ttc" id="anamespaceez_math_htm_afc8b4b9979785105fb73b9f7f8d58c74"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#afc8b4b9979785105fb73b9f7f8d58c74">ezMath::ATan</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezAngle ATan(float f)</div><div class="ttdoc">Returns the arcus tangent of f.</div><div class="ttdef"><b>Definition:</b> MathFloat_inl.h:102</div></div>
<div class="ttc" id="aclassez_angle_htm_af0d5329191f5e431830ad76f91f7cc0f"><div class="ttname"><a href="../../db/d6f/classez_angle.htm#af0d5329191f5e431830ad76f91f7cc0f">ezAngle::MakeFromRadian</a></div><div class="ttdeci">constexpr static ezAngle MakeFromRadian(float fRadian)</div><div class="ttdoc">Creates an instance of ezAngle that was initialized from radian. (No need for any conversion)</div><div class="ttdef"><b>Definition:</b> Angle_inl.h:38</div></div>
<div class="ttc" id="aclassez_angle_htm"><div class="ttname"><a href="../../db/d6f/classez_angle.htm">ezAngle</a></div><div class="ttdoc">Float wrapper struct for a safe usage and conversions of angles.</div><div class="ttdef"><b>Definition:</b> Angle.h:9</div></div>
<div class="ttc" id="anamespaceez_math_htm_a836d8cdcc38eea643d9442df6d4fd3c0"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a836d8cdcc38eea643d9442df6d4fd3c0">ezMath::Mod</a></div><div class="ttdeci">EZ_ALWAYS_INLINE double Mod(double f, double fDiv)</div><div class="ttdoc">Returns &quot;value mod div&quot; for doubles. This also works with negative numbers, both for value and for di...</div><div class="ttdef"><b>Definition:</b> MathDouble_inl.h:104</div></div>
<div class="ttc" id="anamespaceez_math_htm_ad53c88db688345074c3363124b1e770c"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#ad53c88db688345074c3363124b1e770c">ezMath::CeilToInt</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezInt32 CeilToInt(float f)</div><div class="ttdoc">Returns the next higher integer, closest to f. Also the HIGHER value, if f is negative.</div><div class="ttdef"><b>Definition:</b> MathFloat_inl.h:42</div></div>
<div class="ttc" id="anamespaceez_math_htm_a40cf3173aac40e0e462c57728e9410ab"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a40cf3173aac40e0e462c57728e9410ab">ezMath::Cos</a></div><div class="ttdeci">EZ_ALWAYS_INLINE float Cos(ezAngle a)</div><div class="ttdoc">Takes an angle, returns its cosine.</div><div class="ttdef"><b>Definition:</b> MathFloat_inl.h:82</div></div>
<div class="ttc" id="anamespaceez_math_htm"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm">ezMath</a></div><div class="ttdoc">This namespace provides common math-functionality as functions.</div><div class="ttdef"><b>Definition:</b> Constants.h:5</div></div>
<div class="ttc" id="anamespaceez_math_htm_a0722f85d43ba80c523681eb5107b54d9"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a0722f85d43ba80c523681eb5107b54d9">ezMath::RoundToMultiple</a></div><div class="ttdeci">EZ_ALWAYS_INLINE double RoundToMultiple(double f, double fMultiple)</div><div class="ttdoc">Rounds f to the closest value of multiple.</div><div class="ttdef"><b>Definition:</b> MathDouble_inl.h:54</div></div>
<div class="ttc" id="anamespaceez_math_htm_ade2e0a31251abf869a932b0d038a410b"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#ade2e0a31251abf869a932b0d038a410b">ezMath::Tan</a></div><div class="ttdeci">EZ_ALWAYS_INLINE float Tan(ezAngle a)</div><div class="ttdoc">Takes an angle, returns its tangent.</div><div class="ttdef"><b>Definition:</b> MathFloat_inl.h:87</div></div>
<div class="ttc" id="anamespaceez_math_htm_a7c2327035769c42fcb8d220fa92a55d7"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a7c2327035769c42fcb8d220fa92a55d7">ezMath::RoundDown</a></div><div class="ttdeci">double RoundDown(double f, double fMultiple)</div><div class="ttdoc">Returns a multiple of fMultiple that is smaller than f.</div><div class="ttdef"><b>Definition:</b> MathDouble_inl.h:40</div></div>
<div class="ttc" id="anamespaceez_math_htm_afcbf5132d5cbfc7070cd6d3086709ceb"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#afcbf5132d5cbfc7070cd6d3086709ceb">ezMath::ACos</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezAngle ACos(float f)</div><div class="ttdoc">Returns the arcus cosinus of f.</div><div class="ttdef"><b>Definition:</b> MathFloat_inl.h:97</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_4ad0f5fbee83b30173e7fecedeea26f0.htm">Math</a></li><li class="navelem"><a class="el" href="../../dir_89ec743f7412cd7cb287fad7b6649245.htm">Implementation</a></li><li class="navelem"><b>MathFloat_inl.h</b></li>
    <li class="footer">Generated on Mon Mar 3 2025 17:23:44 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
