<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/EnginePlugins/VisualScriptPlugin/Runtime/VisualScriptNodeUserData.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 25.03</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('da/d59/_visual_script_node_user_data_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">VisualScriptNodeUserData.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;Foundation/CodeUtils/Expression/ExpressionByteCode.h&gt;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;Foundation/Reflection/ReflectionUtils.h&gt;</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;VisualScriptPlugin/Runtime/VisualScript.h&gt;</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160; </div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="keyword">using</span> SerializeFunction = <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> (*)(<span class="keyword">const</span> <a class="code" href="../../d8/def/structez_visual_script_node_description.htm">ezVisualScriptNodeDescription</a>&amp; nodeDesc, <a class="code" href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a>&amp; inout_stream, ezUInt32&amp; out_Size, ezUInt32&amp; out_alignment);</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="keyword">using</span> DeserializeFunction = <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> (*)(<a class="code" href="../../d5/d20/structez_visual_script_graph_description_1_1_node.htm">ezVisualScriptGraphDescription::Node</a>&amp; node, <a class="code" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a>&amp; inout_stream, ezUInt8*&amp; inout_pAdditionalData);</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="keyword">using</span> ToStringFunction = void (*)(<span class="keyword">const</span> <a class="code" href="../../d8/def/structez_visual_script_node_description.htm">ezVisualScriptNodeDescription</a>&amp; nodeDesc, <a class="code" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>&amp; out_sResult);</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160; </div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">namespace</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;{</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> U&gt;</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;  <span class="keyword">static</span> ezUInt32 GetDynamicSize(ezUInt32 uiCount)</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;  {</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;    ezUInt32 uiSize = <span class="keyword">sizeof</span>(T);</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;    <span class="keywordflow">if</span> (uiCount &gt; 1)</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    {</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;      uiSize += <span class="keyword">sizeof</span>(U) * (uiCount - 1);</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;    }</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    <span class="keywordflow">return</span> uiSize;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;  }</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160; </div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160; </div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;  <span class="keyword">static</span> constexpr ezUInt32 GetUserDataAlignment()</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;  {</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    <span class="keywordflow">return</span> ezVisualScriptGraphDescription::Node::GetUserDataAlignment&lt;T&gt;();</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;  }</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160; </div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  <span class="keyword">struct </span>NodeUserData_Type</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;  {</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <span class="keyword">const</span> <a class="code" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* m_pType = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160; </div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#if EZ_ENABLED(EZ_PLATFORM_32BIT)</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    ezUInt32 m_uiPadding;</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160; </div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    <span class="keyword">static</span> <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> Serialize(<span class="keyword">const</span> <a class="code" href="../../d8/def/structez_visual_script_node_description.htm">ezVisualScriptNodeDescription</a>&amp; nodeDesc, <a class="code" href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a>&amp; inout_stream, ezUInt32&amp; out_uiSize, ezUInt32&amp; out_uiAlignment)</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    {</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;      inout_stream &lt;&lt; nodeDesc.m_sTargetTypeName;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160; </div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;      out_uiSize = <span class="keyword">sizeof</span>(NodeUserData_Type);</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;      out_uiAlignment = GetUserDataAlignment&lt;NodeUserData_Type&gt;();</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;      <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    }</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160; </div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    <span class="keyword">static</span> <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> ReadType(<a class="code" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a>&amp; inout_stream, <span class="keyword">const</span> <a class="code" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>*&amp; out_pType)</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    {</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;      <a class="code" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a> sTypeName;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;      inout_stream &gt;&gt; sTypeName;</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160; </div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;      out_pType = <a class="code" href="../../dd/d19/classez_r_t_t_i.htm#abd87c140d164747f60c74a0f9fecc321">ezRTTI::FindTypeByName</a>(sTypeName);</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;      <span class="keywordflow">if</span> (out_pType == <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;      {</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        <a class="code" href="../../dc/d9e/classez_log.htm#ae5b1ee0c969668bdac113be5f4b15fa3">ezLog::Error</a>(<span class="stringliteral">&quot;Unknown type &#39;{}&#39;&quot;</span>, sTypeName);</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        <span class="keywordflow">return</span> EZ_FAILURE;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;      }</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160; </div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;      <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    }</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160; </div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <span class="keyword">static</span> <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> Deserialize(<a class="code" href="../../d5/d20/structez_visual_script_graph_description_1_1_node.htm">ezVisualScriptGraphDescription::Node</a>&amp; ref_node, <a class="code" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a>&amp; inout_stream, ezUInt8*&amp; inout_pAdditionalData)</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    {</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;      <span class="keyword">auto</span>&amp; userData = ref_node.InitUserData&lt;NodeUserData_Type&gt;(inout_pAdditionalData);</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;      EZ_SUCCEED_OR_RETURN(ReadType(inout_stream, userData.m_pType));</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;      <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    }</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160; </div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/d1a/namespaceez_conversion_utils.htm#aee7b9863241f562e0eb3aa7d360153b6">ToString</a>(<span class="keyword">const</span> <a class="code" href="../../d8/def/structez_visual_script_node_description.htm">ezVisualScriptNodeDescription</a>&amp; nodeDesc, <a class="code" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>&amp; out_sResult)</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    {</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;      <span class="keywordflow">if</span> (nodeDesc.m_sTargetTypeName.<a class="code" href="../../de/dce/classez_hashed_string.htm#abbc9fe061e32ddeb9166e7d4226c25b6">IsEmpty</a>() == <span class="keyword">false</span>)</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;      {</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        out_sResult.<a class="code" href="../../d3/d88/classez_string_builder.htm#a605f325ea4c9c3242454a16657e24ef7">Append</a>(nodeDesc.m_sTargetTypeName);</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;      }</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    }</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;  };</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160; </div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  static_assert(<span class="keyword">sizeof</span>(NodeUserData_Type) == 8);</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;  static_assert(GetUserDataAlignment&lt;NodeUserData_Type&gt;() == 8);</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160; </div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160; </div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;  <span class="keyword">struct </span>NodeUserData_TypeAndProperty : <span class="keyword">public</span> NodeUserData_Type</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  {</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    <span class="keyword">const</span> <a class="code" href="../../d6/d81/classez_abstract_property.htm">ezAbstractProperty</a>* m_pProperty = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160; </div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="preprocessor">#if EZ_ENABLED(EZ_PLATFORM_32BIT)</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    ezUInt32 m_uiPadding;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160; </div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <span class="keyword">static</span> <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> Serialize(<span class="keyword">const</span> <a class="code" href="../../d8/def/structez_visual_script_node_description.htm">ezVisualScriptNodeDescription</a>&amp; nodeDesc, <a class="code" href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a>&amp; inout_stream, ezUInt32&amp; out_uiSize, ezUInt32&amp; out_uiAlignment)</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    {</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;      EZ_SUCCEED_OR_RETURN(NodeUserData_Type::Serialize(nodeDesc, inout_stream, out_uiSize, out_uiAlignment));</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160; </div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;      <span class="keyword">const</span> <a class="code" href="../../d2/d4f/classez_dynamic_array.htm">ezVariantArray</a>&amp; propertiesVar = nodeDesc.m_Value.<a class="code" href="../../de/de6/classez_variant.htm#a053a9279ed97d59955850d0e0760327c">Get</a>&lt;<a class="code" href="../../d2/d4f/classez_dynamic_array.htm">ezVariantArray</a>&gt;();</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;      EZ_ASSERT_DEBUG(propertiesVar.<a class="code" href="../../dc/d59/classez_array_base.htm#a51ba61fcbd2350ae8850754a41acbaa1">GetCount</a>() == 1, <span class="stringliteral">&quot;Invalid number of properties&quot;</span>);</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160; </div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;      inout_stream &lt;&lt; propertiesVar[0].Get&lt;<a class="code" href="../../de/dce/classez_hashed_string.htm">ezHashedString</a>&gt;();</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160; </div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;      out_uiSize = <span class="keyword">sizeof</span>(NodeUserData_TypeAndProperty);</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;      out_uiAlignment = GetUserDataAlignment&lt;NodeUserData_TypeAndProperty&gt;();</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;      <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    }</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160; </div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="keyword">static</span> <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> ReadProperty(<a class="code" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a>&amp; inout_stream, <span class="keyword">const</span> <a class="code" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* pType, <a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;T&gt;</a> properties, <span class="keyword">const</span> <a class="code" href="../../d6/d81/classez_abstract_property.htm">ezAbstractProperty</a>*&amp; out_pProp)</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    {</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;      <a class="code" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a> sPropName;</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;      inout_stream &gt;&gt; sPropName;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160; </div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;      out_pProp = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;      <span class="keywordflow">for</span> (<span class="keyword">auto</span>&amp; pProp : properties)</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;      {</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;        <span class="keywordflow">if</span> (sPropName == pProp-&gt;GetPropertyName())</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        {</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;          out_pProp = pProp;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;          <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        }</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;      }</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160; </div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;      <span class="keywordflow">if</span> (out_pProp == <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;      {</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        constexpr <span class="keywordtype">bool</span> isFunction = std::is_same_v&lt;T, const ezAbstractFunctionProperty* const&gt;;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;        <a class="code" href="../../dc/d9e/classez_log.htm#ae5b1ee0c969668bdac113be5f4b15fa3">ezLog::Error</a>(<span class="stringliteral">&quot;{} &#39;{}&#39; not found on type &#39;{}&#39;&quot;</span>, isFunction ? <span class="stringliteral">&quot;Function&quot;</span> : <span class="stringliteral">&quot;Property&quot;</span>, sPropName, pType-&gt;<a class="code" href="../../dd/d19/classez_r_t_t_i.htm#a12bb619302f06a0750a230ac62b01886">GetTypeName</a>());</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;        <span class="keywordflow">return</span> EZ_FAILURE;</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;      }</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160; </div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;      <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    }</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160; </div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="keyword">template</span> &lt;<span class="keywordtype">bool</span> PropIsFunction&gt;</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="keyword">static</span> <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> Deserialize(<a class="code" href="../../d5/d20/structez_visual_script_graph_description_1_1_node.htm">ezVisualScriptGraphDescription::Node</a>&amp; ref_node, <a class="code" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a>&amp; inout_stream, ezUInt8*&amp; inout_pAdditionalData)</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    {</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;      <span class="keyword">auto</span>&amp; userData = ref_node.InitUserData&lt;NodeUserData_TypeAndProperty&gt;(inout_pAdditionalData);</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;      EZ_SUCCEED_OR_RETURN(ReadType(inout_stream, userData.m_pType));</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160; </div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;      <span class="keywordflow">if</span> constexpr (PropIsFunction)</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;      {</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;        EZ_SUCCEED_OR_RETURN(ReadProperty(inout_stream, userData.m_pType, userData.m_pType-&gt;GetFunctions(), userData.m_pProperty));</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;      }</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;      <span class="keywordflow">else</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;      {</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        EZ_SUCCEED_OR_RETURN(ReadProperty(inout_stream, userData.m_pType, userData.m_pType-&gt;GetProperties(), userData.m_pProperty));</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;      }</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160; </div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;      <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    }</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160; </div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/d1a/namespaceez_conversion_utils.htm#aee7b9863241f562e0eb3aa7d360153b6">ToString</a>(<span class="keyword">const</span> <a class="code" href="../../d8/def/structez_visual_script_node_description.htm">ezVisualScriptNodeDescription</a>&amp; nodeDesc, <a class="code" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>&amp; out_sResult)</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    {</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;      NodeUserData_Type::ToString(nodeDesc, out_sResult);</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160; </div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;      <span class="keywordflow">if</span> (nodeDesc.m_Value.<a class="code" href="../../de/de6/classez_variant.htm#a694f12156828e7de34c4d592ef554aef">IsA</a>&lt;<a class="code" href="../../d2/d4f/classez_dynamic_array.htm">ezVariantArray</a>&gt;())</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;      {</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        <span class="keyword">const</span> <a class="code" href="../../d2/d4f/classez_dynamic_array.htm">ezVariantArray</a>&amp; propertiesVar = nodeDesc.m_Value.<a class="code" href="../../de/de6/classez_variant.htm#a053a9279ed97d59955850d0e0760327c">Get</a>&lt;<a class="code" href="../../d2/d4f/classez_dynamic_array.htm">ezVariantArray</a>&gt;();</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;        <span class="keywordflow">if</span> (propertiesVar.<a class="code" href="../../dc/d59/classez_array_base.htm#a35630a870ec53cf3b022653232a31c60">IsEmpty</a>() == <span class="keyword">false</span>)</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;        {</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;          out_sResult.<a class="code" href="../../d3/d88/classez_string_builder.htm#a605f325ea4c9c3242454a16657e24ef7">Append</a>(<span class="stringliteral">&quot;.&quot;</span>, propertiesVar[0].Get&lt;ezHashedString&gt;());</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        }</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;      }</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;    }</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;  };</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160; </div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;  static_assert(<span class="keyword">sizeof</span>(NodeUserData_TypeAndProperty) == 16);</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;  static_assert(GetUserDataAlignment&lt;NodeUserData_TypeAndProperty&gt;() == 8);</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160; </div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160; </div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;  <span class="keyword">struct </span>NodeUserData_TypeAndProperties : <span class="keyword">public</span> NodeUserData_Type</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;  {</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    ezUInt32 m_uiNumProperties = 0;</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160; </div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="preprocessor">#if EZ_ENABLED(EZ_PLATFORM_32BIT)</span></div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    ezUInt32 m_uiPadding0;</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160; </div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <span class="comment">// This struct is allocated with enough space behind it to hold an array with m_uiNumProperties size.</span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;    <span class="keyword">const</span> <a class="code" href="../../d6/d81/classez_abstract_property.htm">ezAbstractProperty</a>* m_Properties[1];</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160; </div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="preprocessor">#if EZ_ENABLED(EZ_PLATFORM_32BIT)</span></div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    ezUInt32 m_uiPadding1;</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160; </div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    <span class="keyword">static</span> <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> Serialize(<span class="keyword">const</span> <a class="code" href="../../d8/def/structez_visual_script_node_description.htm">ezVisualScriptNodeDescription</a>&amp; nodeDesc, <a class="code" href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a>&amp; inout_stream, ezUInt32&amp; out_uiSize, ezUInt32&amp; out_uiAlignment)</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    {</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;      EZ_SUCCEED_OR_RETURN(NodeUserData_Type::Serialize(nodeDesc, inout_stream, out_uiSize, out_uiAlignment));</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160; </div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;      <span class="keyword">const</span> <a class="code" href="../../d2/d4f/classez_dynamic_array.htm">ezVariantArray</a>&amp; propertiesVar = nodeDesc.m_Value.<a class="code" href="../../de/de6/classez_variant.htm#a053a9279ed97d59955850d0e0760327c">Get</a>&lt;<a class="code" href="../../d2/d4f/classez_dynamic_array.htm">ezVariantArray</a>&gt;();</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160; </div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;      ezUInt32 uiCount = propertiesVar.<a class="code" href="../../dc/d59/classez_array_base.htm#a51ba61fcbd2350ae8850754a41acbaa1">GetCount</a>();</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;      inout_stream &lt;&lt; uiCount;</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160; </div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;      <span class="keywordflow">for</span> (<span class="keyword">auto</span>&amp; var : propertiesVar)</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;      {</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;        <a class="code" href="../../de/dce/classez_hashed_string.htm">ezHashedString</a> sPropName = var.Get&lt;<a class="code" href="../../de/dce/classez_hashed_string.htm">ezHashedString</a>&gt;();</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;        inout_stream &lt;&lt; sPropName;</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;      }</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160; </div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;      static_assert(<span class="keyword">sizeof</span>(<span class="keywordtype">void</span>*) &lt;= <span class="keyword">sizeof</span>(ezUInt64));</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;      out_uiSize = GetDynamicSize&lt;NodeUserData_TypeAndProperties, ezUInt64&gt;(uiCount);</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;      out_uiAlignment = GetUserDataAlignment&lt;NodeUserData_TypeAndProperties&gt;();</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;      <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    }</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160; </div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    <span class="keyword">static</span> <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> Deserialize(<a class="code" href="../../d5/d20/structez_visual_script_graph_description_1_1_node.htm">ezVisualScriptGraphDescription::Node</a>&amp; ref_node, <a class="code" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a>&amp; inout_stream, ezUInt8*&amp; inout_pAdditionalData)</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    {</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;      <span class="keyword">const</span> <a class="code" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* pType = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;      EZ_SUCCEED_OR_RETURN(ReadType(inout_stream, pType));</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160; </div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;      ezUInt32 uiCount = 0;</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;      inout_stream &gt;&gt; uiCount;</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160; </div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;      <span class="keyword">const</span> ezUInt32 uiByteSize = GetDynamicSize&lt;NodeUserData_TypeAndProperties, ezUInt64&gt;(uiCount);</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;      <span class="keyword">auto</span>&amp; userData = ref_node.InitUserData&lt;NodeUserData_TypeAndProperties&gt;(inout_pAdditionalData, uiByteSize);</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;      userData.m_pType = pType;</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;      userData.m_uiNumProperties = uiCount;</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160; </div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;      <a class="code" href="../../d8/deb/classez_hybrid_array.htm">ezHybridArray&lt;const ezAbstractProperty*, 32&gt;</a> properties;</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;      userData.m_pType-&gt;GetAllProperties(properties);</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160; </div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;      <span class="keywordflow">for</span> (ezUInt32 i = 0; i &lt; uiCount; ++i)</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;      {</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;        <span class="keyword">const</span> <a class="code" href="../../d6/d81/classez_abstract_property.htm">ezAbstractProperty</a>* pProperty = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;        EZ_SUCCEED_OR_RETURN(NodeUserData_TypeAndProperty::ReadProperty(inout_stream, userData.m_pType, properties.<a class="code" href="../../dc/d59/classez_array_base.htm#a44e03a9168d3860a6df71b16da2e3e82">GetArrayPtr</a>(), pProperty));</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;        userData.m_Properties[i] = pProperty;</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;      }</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160; </div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;      <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    }</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160; </div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/d1a/namespaceez_conversion_utils.htm#aee7b9863241f562e0eb3aa7d360153b6">ToString</a>(<span class="keyword">const</span> <a class="code" href="../../d8/def/structez_visual_script_node_description.htm">ezVisualScriptNodeDescription</a>&amp; nodeDesc, <a class="code" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>&amp; out_sResult)</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    {</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;      NodeUserData_TypeAndProperty::ToString(nodeDesc, out_sResult);</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;    }</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;  };</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160; </div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;  static_assert(<span class="keyword">sizeof</span>(NodeUserData_TypeAndProperties) == 24);</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;  static_assert(GetUserDataAlignment&lt;NodeUserData_TypeAndProperties&gt;() == 8);</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160; </div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160; </div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;  <span class="keyword">struct </span>NodeUserData_Switch</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;  {</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    ezUInt32 m_uiNumCases = 0;</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160; </div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;    <span class="comment">// This struct is allocated with enough space behind it to hold an array with m_uiNumCases size.</span></div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;    ezInt64 m_Cases[1];</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160; </div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    <span class="keyword">static</span> <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> Serialize(<span class="keyword">const</span> <a class="code" href="../../d8/def/structez_visual_script_node_description.htm">ezVisualScriptNodeDescription</a>&amp; nodeDesc, <a class="code" href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a>&amp; inout_stream, ezUInt32&amp; out_uiSize, ezUInt32&amp; out_uiAlignment)</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;    {</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;      <span class="keyword">const</span> <a class="code" href="../../d2/d4f/classez_dynamic_array.htm">ezVariantArray</a>&amp; casesVar = nodeDesc.m_Value.<a class="code" href="../../de/de6/classez_variant.htm#a053a9279ed97d59955850d0e0760327c">Get</a>&lt;<a class="code" href="../../d2/d4f/classez_dynamic_array.htm">ezVariantArray</a>&gt;();</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160; </div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;      ezUInt32 uiCount = casesVar.<a class="code" href="../../dc/d59/classez_array_base.htm#a51ba61fcbd2350ae8850754a41acbaa1">GetCount</a>();</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;      inout_stream &lt;&lt; uiCount;</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160; </div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;      <span class="keywordflow">for</span> (<span class="keyword">auto</span>&amp; var : casesVar)</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;      {</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;        ezInt64 iCaseValue = var.ConvertTo&lt;ezInt64&gt;();</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;        inout_stream &lt;&lt; iCaseValue;</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;      }</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160; </div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;      out_uiSize = GetDynamicSize&lt;NodeUserData_Switch, ezInt64&gt;(uiCount);</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;      out_uiAlignment = GetUserDataAlignment&lt;NodeUserData_Switch&gt;();</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;      <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    }</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160; </div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;    <span class="keyword">static</span> <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> Deserialize(<a class="code" href="../../d5/d20/structez_visual_script_graph_description_1_1_node.htm">ezVisualScriptGraphDescription::Node</a>&amp; ref_node, <a class="code" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a>&amp; inout_stream, ezUInt8*&amp; inout_pAdditionalData)</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    {</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;      ezUInt32 uiCount = 0;</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;      inout_stream &gt;&gt; uiCount;</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160; </div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;      <span class="keyword">const</span> ezUInt32 uiByteSize = GetDynamicSize&lt;NodeUserData_Switch, ezInt64&gt;(uiCount);</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;      <span class="keyword">auto</span>&amp; userData = ref_node.InitUserData&lt;NodeUserData_Switch&gt;(inout_pAdditionalData, uiByteSize);</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;      userData.m_uiNumCases = uiCount;</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160; </div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;      <span class="keywordflow">for</span> (ezUInt32 i = 0; i &lt; uiCount; ++i)</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;      {</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;        inout_stream &gt;&gt; userData.m_Cases[i];</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;      }</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160; </div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;      <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;    }</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160; </div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/d1a/namespaceez_conversion_utils.htm#aee7b9863241f562e0eb3aa7d360153b6">ToString</a>(<span class="keyword">const</span> <a class="code" href="../../d8/def/structez_visual_script_node_description.htm">ezVisualScriptNodeDescription</a>&amp; nodeDesc, <a class="code" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>&amp; out_sResult)</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;    {</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;      <span class="comment">// Nothing to add here</span></div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;    }</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;  };</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160; </div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;  static_assert(<span class="keyword">sizeof</span>(NodeUserData_Switch) == 16);</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;  static_assert(GetUserDataAlignment&lt;NodeUserData_Switch&gt;() == 8);</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160; </div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160; </div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;  <span class="keyword">struct </span>NodeUserData_Comparison</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;  {</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    <a class="code" href="../../d6/dd9/structez_enum.htm">ezEnum&lt;ezComparisonOperator&gt;</a> m_ComparisonOperator;</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160; </div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;    <span class="keyword">static</span> <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> Serialize(<span class="keyword">const</span> <a class="code" href="../../d8/def/structez_visual_script_node_description.htm">ezVisualScriptNodeDescription</a>&amp; nodeDesc, <a class="code" href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a>&amp; inout_stream, ezUInt32&amp; out_uiSize, ezUInt32&amp; out_uiAlignment)</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;    {</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;      <a class="code" href="../../d6/dd9/structez_enum.htm">ezEnum&lt;ezComparisonOperator&gt;</a> compOp = <span class="keyword">static_cast&lt;</span>ezComparisonOperator::Enum<span class="keyword">&gt;</span>(nodeDesc.m_Value.<a class="code" href="../../de/de6/classez_variant.htm#a053a9279ed97d59955850d0e0760327c">Get</a>&lt;ezInt64&gt;());</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;      inout_stream &lt;&lt; compOp;</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160; </div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;      out_uiSize = <span class="keyword">sizeof</span>(NodeUserData_Comparison);</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;      out_uiAlignment = GetUserDataAlignment&lt;NodeUserData_Comparison&gt;();</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;      <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;    }</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160; </div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;    <span class="keyword">static</span> <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> Deserialize(<a class="code" href="../../d5/d20/structez_visual_script_graph_description_1_1_node.htm">ezVisualScriptGraphDescription::Node</a>&amp; ref_node, <a class="code" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a>&amp; inout_stream, ezUInt8*&amp; inout_pAdditionalData)</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    {</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;      <span class="keyword">auto</span>&amp; userData = ref_node.InitUserData&lt;NodeUserData_Comparison&gt;(inout_pAdditionalData);</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;      inout_stream &gt;&gt; userData.m_ComparisonOperator;</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160; </div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;      <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    }</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160; </div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/d1a/namespaceez_conversion_utils.htm#aee7b9863241f562e0eb3aa7d360153b6">ToString</a>(<span class="keyword">const</span> <a class="code" href="../../d8/def/structez_visual_script_node_description.htm">ezVisualScriptNodeDescription</a>&amp; nodeDesc, <a class="code" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>&amp; out_sResult)</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;    {</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;      <a class="code" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a> sCompOp;</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;      <a class="code" href="../../d3/da6/classez_reflection_utils.htm#ad0e3f65598da517c28893964a2af97c8">ezReflectionUtils::EnumerationToString</a>(ezGetStaticRTTI&lt;ezComparisonOperator&gt;(), nodeDesc.m_Value.<a class="code" href="../../de/de6/classez_variant.htm#a053a9279ed97d59955850d0e0760327c">Get</a>&lt;ezInt64&gt;(), sCompOp, ezReflectionUtils::EnumConversionMode::ValueNameOnly);</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160; </div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;      out_sResult.<a class="code" href="../../d3/d88/classez_string_builder.htm#a605f325ea4c9c3242454a16657e24ef7">Append</a>(<span class="stringliteral">&quot; &quot;</span>, sCompOp);</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;    }</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;  };</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160; </div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;  static_assert(<span class="keyword">sizeof</span>(NodeUserData_Comparison) == 1);</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;  static_assert(GetUserDataAlignment&lt;NodeUserData_Comparison&gt;() == 8);</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160; </div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160; </div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;  <span class="keyword">struct </span>NodeUserData_Expression</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;  {</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;    <a class="code" href="../../da/d22/classez_expression_byte_code.htm">ezExpressionByteCode</a> m_ByteCode;</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160; </div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;<span class="preprocessor">#if EZ_ENABLED(EZ_PLATFORM_32BIT)</span></div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160;    ezUInt32 m_uiPadding[4];</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160; </div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;    <span class="keyword">static</span> <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> Serialize(<span class="keyword">const</span> <a class="code" href="../../d8/def/structez_visual_script_node_description.htm">ezVisualScriptNodeDescription</a>&amp; nodeDesc, <a class="code" href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a>&amp; inout_stream, ezUInt32&amp; out_uiSize, ezUInt32&amp; out_uiAlignment)</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;    {</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;      <span class="keyword">const</span> <a class="code" href="../../da/d22/classez_expression_byte_code.htm">ezExpressionByteCode</a>&amp; byteCode = nodeDesc.m_Value.<a class="code" href="../../de/de6/classez_variant.htm#a053a9279ed97d59955850d0e0760327c">Get</a>&lt;<a class="code" href="../../da/d22/classez_expression_byte_code.htm">ezExpressionByteCode</a>&gt;();</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160; </div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;      ezUInt32 uiDataSize = <span class="keyword">static_cast&lt;</span>ezUInt32<span class="keyword">&gt;</span>(byteCode.GetDataBlob().<a class="code" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>());</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;      inout_stream &lt;&lt; uiDataSize;</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160; </div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;      EZ_SUCCEED_OR_RETURN(byteCode.Save(inout_stream));</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160; </div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;      out_uiSize = <span class="keyword">sizeof</span>(NodeUserData_Expression) + uiDataSize;</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;      out_uiAlignment = GetUserDataAlignment&lt;NodeUserData_Expression&gt;();</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;      <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    }</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160; </div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;    <span class="keyword">static</span> <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> Deserialize(<a class="code" href="../../d5/d20/structez_visual_script_graph_description_1_1_node.htm">ezVisualScriptGraphDescription::Node</a>&amp; ref_node, <a class="code" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a>&amp; inout_stream, ezUInt8*&amp; inout_pAdditionalData)</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;    {</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;      <span class="keyword">auto</span>&amp; userData = ref_node.InitUserData&lt;NodeUserData_Expression&gt;(inout_pAdditionalData);</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160; </div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;      ezUInt32 uiDataSize = 0;</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;      inout_stream &gt;&gt; uiDataSize;</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160; </div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;      <span class="keyword">auto</span> externalMemory = ezMakeArrayPtr(inout_pAdditionalData, uiDataSize);</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;      inout_pAdditionalData += uiDataSize;</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160; </div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;      EZ_SUCCEED_OR_RETURN(userData.m_ByteCode.Load(inout_stream, externalMemory));</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160; </div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;      <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;    }</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160; </div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/d1a/namespaceez_conversion_utils.htm#aee7b9863241f562e0eb3aa7d360153b6">ToString</a>(<span class="keyword">const</span> <a class="code" href="../../d8/def/structez_visual_script_node_description.htm">ezVisualScriptNodeDescription</a>&amp; nodeDesc, <a class="code" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>&amp; out_sResult)</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;    {</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;      <span class="comment">// Nothing to add here</span></div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;    }</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;  };</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160; </div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;  static_assert(<span class="keyword">sizeof</span>(NodeUserData_Expression) == 64);</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;  static_assert(GetUserDataAlignment&lt;NodeUserData_Expression&gt;() == 8);</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160; </div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160; </div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;  <span class="keyword">struct </span>NodeUserData_StartCoroutine : <span class="keyword">public</span> NodeUserData_Type</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;  {</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;    <a class="code" href="../../d6/dd9/structez_enum.htm">ezEnum&lt;ezScriptCoroutineCreationMode&gt;</a> m_CreationMode;</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160; </div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;<span class="preprocessor">#if EZ_ENABLED(EZ_PLATFORM_32BIT)</span></div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;    ezUInt32 m_uiPadding;</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160; </div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;    <span class="keyword">static</span> <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> Serialize(<span class="keyword">const</span> <a class="code" href="../../d8/def/structez_visual_script_node_description.htm">ezVisualScriptNodeDescription</a>&amp; nodeDesc, <a class="code" href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a>&amp; inout_stream, ezUInt32&amp; out_uiSize, ezUInt32&amp; out_uiAlignment)</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;    {</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;      EZ_SUCCEED_OR_RETURN(NodeUserData_Type::Serialize(nodeDesc, inout_stream, out_uiSize, out_uiAlignment));</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160; </div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;      <a class="code" href="../../d6/dd9/structez_enum.htm">ezEnum&lt;ezScriptCoroutineCreationMode&gt;</a> creationMode = <span class="keyword">static_cast&lt;</span><a class="code" href="../../d1/d7c/structez_script_coroutine_creation_mode.htm#a2cb6eac13e35184e2fd8e0d2d7d808a4">ezScriptCoroutineCreationMode::Enum</a><span class="keyword">&gt;</span>(nodeDesc.m_Value.<a class="code" href="../../de/de6/classez_variant.htm#a053a9279ed97d59955850d0e0760327c">Get</a>&lt;ezInt64&gt;());</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;      inout_stream &lt;&lt; creationMode;</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160; </div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;      out_uiSize = <span class="keyword">sizeof</span>(NodeUserData_StartCoroutine);</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;      out_uiAlignment = GetUserDataAlignment&lt;NodeUserData_StartCoroutine&gt;();</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;      <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;    }</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160; </div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;    <span class="keyword">static</span> <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> Deserialize(<a class="code" href="../../d5/d20/structez_visual_script_graph_description_1_1_node.htm">ezVisualScriptGraphDescription::Node</a>&amp; ref_node, <a class="code" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a>&amp; inout_stream, ezUInt8*&amp; inout_pAdditionalData)</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;    {</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;      <span class="keyword">auto</span>&amp; userData = ref_node.InitUserData&lt;NodeUserData_StartCoroutine&gt;(inout_pAdditionalData);</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;      EZ_SUCCEED_OR_RETURN(ReadType(inout_stream, userData.m_pType));</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160; </div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;      inout_stream &gt;&gt; userData.m_CreationMode;</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160; </div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;      <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;    }</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160; </div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;    <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/d1a/namespaceez_conversion_utils.htm#aee7b9863241f562e0eb3aa7d360153b6">ToString</a>(<span class="keyword">const</span> <a class="code" href="../../d8/def/structez_visual_script_node_description.htm">ezVisualScriptNodeDescription</a>&amp; nodeDesc, <a class="code" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>&amp; out_sResult)</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;    {</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;      NodeUserData_Type::ToString(nodeDesc, out_sResult);</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160; </div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;      <a class="code" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a> sCreationMode;</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;      <a class="code" href="../../d3/da6/classez_reflection_utils.htm#ad0e3f65598da517c28893964a2af97c8">ezReflectionUtils::EnumerationToString</a>(ezGetStaticRTTI&lt;ezScriptCoroutineCreationMode&gt;(), nodeDesc.m_Value.<a class="code" href="../../de/de6/classez_variant.htm#a053a9279ed97d59955850d0e0760327c">Get</a>&lt;ezInt64&gt;(), sCreationMode, ezReflectionUtils::EnumConversionMode::ValueNameOnly);</div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160; </div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;      out_sResult.<a class="code" href="../../d3/d88/classez_string_builder.htm#a605f325ea4c9c3242454a16657e24ef7">Append</a>(<span class="stringliteral">&quot; &quot;</span>, sCreationMode);</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;    }</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;  };</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160; </div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;  static_assert(<span class="keyword">sizeof</span>(NodeUserData_StartCoroutine) == 16);</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;  static_assert(GetUserDataAlignment&lt;NodeUserData_StartCoroutine&gt;() == 8);</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160; </div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160; </div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;  <span class="keyword">struct </span>UserDataContext</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;  {</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;    SerializeFunction m_SerializeFunc = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;    DeserializeFunction m_DeserializeFunc = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;    ToStringFunction m_ToStringFunc = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;  };</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160; </div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;  <span class="keyword">inline</span> UserDataContext s_TypeToUserDataContexts[] = {</div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;    {},                                           <span class="comment">// Invalid,</span></div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;    {},                                           <span class="comment">// EntryCall,</span></div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;    {},                                           <span class="comment">// EntryCall_Coroutine,</span></div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;    {&amp;NodeUserData_TypeAndProperties::Serialize,</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;      &amp;NodeUserData_TypeAndProperties::Deserialize,</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;      &amp;NodeUserData_TypeAndProperties::ToString}, <span class="comment">// MessageHandler,</span></div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;    {&amp;NodeUserData_TypeAndProperties::Serialize,</div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;      &amp;NodeUserData_TypeAndProperties::Deserialize,</div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;      &amp;NodeUserData_TypeAndProperties::ToString}, <span class="comment">// MessageHandler_Coroutine,</span></div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;    {&amp;NodeUserData_TypeAndProperty::Serialize,</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;      &amp;NodeUserData_TypeAndProperty::Deserialize&lt;true&gt;,</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;      &amp;NodeUserData_TypeAndProperty::ToString},   <span class="comment">// ReflectedFunction,</span></div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;    {&amp;NodeUserData_TypeAndProperty::Serialize,</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;      &amp;NodeUserData_TypeAndProperty::Deserialize&lt;false&gt;,</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;      &amp;NodeUserData_TypeAndProperty::ToString},   <span class="comment">// GetReflectedProperty,</span></div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;    {&amp;NodeUserData_TypeAndProperty::Serialize,</div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;      &amp;NodeUserData_TypeAndProperty::Deserialize&lt;false&gt;,</div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;      &amp;NodeUserData_TypeAndProperty::ToString},   <span class="comment">// SetReflectedProperty,</span></div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;    {&amp;NodeUserData_TypeAndProperty::Serialize,</div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;      &amp;NodeUserData_TypeAndProperty::Deserialize&lt;true&gt;,</div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;      &amp;NodeUserData_TypeAndProperty::ToString},   <span class="comment">// InplaceCoroutine,</span></div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;    {},                                           <span class="comment">// GetScriptOwner,</span></div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;    {&amp;NodeUserData_TypeAndProperties::Serialize,</div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;      &amp;NodeUserData_TypeAndProperties::Deserialize,</div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;      &amp;NodeUserData_TypeAndProperties::ToString}, <span class="comment">// SendMessage,</span></div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160; </div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;    {},                                           <span class="comment">// FirstBuiltin,</span></div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160; </div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;    {},                                           <span class="comment">// Builtin_Constant,</span></div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;    {},                                           <span class="comment">// Builtin_GetVariable,</span></div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;    {},                                           <span class="comment">// Builtin_SetVariable,</span></div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;    {},                                           <span class="comment">// Builtin_IncVariable,</span></div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;    {},                                           <span class="comment">// Builtin_DecVariable,</span></div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;    {},                                           <span class="comment">// Builtin_TempVariable,</span></div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160; </div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;    {},                                           <span class="comment">// Builtin_Branch,</span></div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;    {&amp;NodeUserData_Switch::Serialize,</div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;      &amp;NodeUserData_Switch::Deserialize,</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;      &amp;NodeUserData_Switch::ToString},            <span class="comment">// Builtin_Switch,</span></div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;    {},                                           <span class="comment">// Builtin_WhileLoop,</span></div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;    {},                                           <span class="comment">// Builtin_ForLoop,</span></div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;    {},                                           <span class="comment">// Builtin_ForEachLoop,</span></div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;    {},                                           <span class="comment">// Builtin_ReverseForEachLoop,</span></div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;    {},                                           <span class="comment">// Builtin_Break,</span></div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;    {},                                           <span class="comment">// Builtin_Jump,</span></div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160; </div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;    {},                                           <span class="comment">// Builtin_And,</span></div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;    {},                                           <span class="comment">// Builtin_Or,</span></div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;    {},                                           <span class="comment">// Builtin_Not,</span></div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;    {&amp;NodeUserData_Comparison::Serialize,</div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;      &amp;NodeUserData_Comparison::Deserialize,</div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;      &amp;NodeUserData_Comparison::ToString},        <span class="comment">// Builtin_Compare,</span></div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;    {},                                           <span class="comment">// Builtin_CompareExec,</span></div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;    {},                                           <span class="comment">// Builtin_IsValid,</span></div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;    {},                                           <span class="comment">// Builtin_Select,</span></div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160; </div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;    {},                                           <span class="comment">// Builtin_Add,</span></div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;    {},                                           <span class="comment">// Builtin_Subtract,</span></div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;    {},                                           <span class="comment">// Builtin_Multiply,</span></div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;    {},                                           <span class="comment">// Builtin_Divide,</span></div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;    {&amp;NodeUserData_Expression::Serialize,</div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;      &amp;NodeUserData_Expression::Deserialize,</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;      &amp;NodeUserData_Expression::ToString},        <span class="comment">// Builtin_Expression,</span></div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160; </div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;    {},                                           <span class="comment">// Builtin_ToBool,</span></div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;    {},                                           <span class="comment">// Builtin_ToByte,</span></div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;    {},                                           <span class="comment">// Builtin_ToInt,</span></div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;    {},                                           <span class="comment">// Builtin_ToInt64,</span></div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;    {},                                           <span class="comment">// Builtin_ToFloat,</span></div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;    {},                                           <span class="comment">// Builtin_ToDouble,</span></div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;    {},                                           <span class="comment">// Builtin_ToString,</span></div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;    {},                                           <span class="comment">// Builtin_String_Format,</span></div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;    {},                                           <span class="comment">// Builtin_ToHashedString,</span></div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;    {},                                           <span class="comment">// Builtin_ToVariant,</span></div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;    {},                                           <span class="comment">// Builtin_Variant_ConvertTo,</span></div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160; </div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;    {},                                           <span class="comment">// Builtin_MakeArray</span></div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;    {},                                           <span class="comment">// Builtin_Array_GetElement,</span></div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160;    {},                                           <span class="comment">// Builtin_Array_SetElement,</span></div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;    {},                                           <span class="comment">// Builtin_Array_GetCount,</span></div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;    {},                                           <span class="comment">// Builtin_Array_IsEmpty,</span></div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;    {},                                           <span class="comment">// Builtin_Array_Clear,</span></div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;    {},                                           <span class="comment">// Builtin_Array_Contains,</span></div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;    {},                                           <span class="comment">// Builtin_Array_IndexOf,</span></div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;    {},                                           <span class="comment">// Builtin_Array_Insert,</span></div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;    {},                                           <span class="comment">// Builtin_Array_PushBack,</span></div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;    {},                                           <span class="comment">// Builtin_Array_Remove,</span></div>
<div class="line"><a name="l00521"></a><span class="lineno">  521</span>&#160;    {},                                           <span class="comment">// Builtin_Array_RemoveAt,</span></div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160; </div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;    {&amp;NodeUserData_Type::Serialize,</div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160;      &amp;NodeUserData_Type::Deserialize,</div>
<div class="line"><a name="l00525"></a><span class="lineno">  525</span>&#160;      &amp;NodeUserData_Type::ToString}, <span class="comment">// Builtin_TryGetComponentOfBaseType</span></div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160; </div>
<div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;    {&amp;NodeUserData_StartCoroutine::Serialize,</div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;      &amp;NodeUserData_StartCoroutine::Deserialize,</div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;      &amp;NodeUserData_StartCoroutine::ToString}, <span class="comment">// Builtin_StartCoroutine,</span></div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;    {},                                        <span class="comment">// Builtin_StopCoroutine,</span></div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;    {},                                        <span class="comment">// Builtin_StopAllCoroutines,</span></div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;    {},                                        <span class="comment">// Builtin_WaitForAll,</span></div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;    {},                                        <span class="comment">// Builtin_WaitForAny,</span></div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;    {},                                        <span class="comment">// Builtin_Yield,</span></div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160; </div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;    {},                                        <span class="comment">// LastBuiltin,</span></div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;  };</div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160; </div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;  static_assert(EZ_ARRAY_SIZE(s_TypeToUserDataContexts) == ezVisualScriptNodeDescription::Type::Count);</div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;} <span class="comment">// namespace</span></div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160; </div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;<span class="keyword">const</span> UserDataContext&amp; GetUserDataContext(ezVisualScriptNodeDescription::Type::Enum nodeType)</div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;{</div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;  EZ_ASSERT_DEBUG(nodeType &gt;= 0 &amp;&amp; <span class="keyword">static_cast&lt;</span>ezUInt32<span class="keyword">&gt;</span>(nodeType) &lt; EZ_ARRAY_SIZE(s_TypeToUserDataContexts), <span class="stringliteral">&quot;Out of bounds access&quot;</span>);</div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;  <span class="keywordflow">return</span> s_TypeToUserDataContexts[nodeType];</div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;}</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassez_log_htm_ae5b1ee0c969668bdac113be5f4b15fa3"><div class="ttname"><a href="../../dc/d9e/classez_log.htm#ae5b1ee0c969668bdac113be5f4b15fa3">ezLog::Error</a></div><div class="ttdeci">static void Error(ezLogInterface *pInterface, const ezFormatString &amp;string)</div><div class="ttdoc">An error that needs to be fixed as soon as possible.</div><div class="ttdef"><b>Definition:</b> Log.cpp:324</div></div>
<div class="ttc" id="astructez_result_htm"><div class="ttname"><a href="../../d4/da9/structez_result.htm">ezResult</a></div><div class="ttdoc">Default enum for returning failure or success, instead of using a bool.</div><div class="ttdef"><b>Definition:</b> Types.h:53</div></div>
<div class="ttc" id="astructez_script_coroutine_creation_mode_htm_a2cb6eac13e35184e2fd8e0d2d7d808a4"><div class="ttname"><a href="../../d1/d7c/structez_script_coroutine_creation_mode.htm#a2cb6eac13e35184e2fd8e0d2d7d808a4">ezScriptCoroutineCreationMode::Enum</a></div><div class="ttdeci">Enum</div><div class="ttdef"><b>Definition:</b> ScriptCoroutine.h:121</div></div>
<div class="ttc" id="aclassez_stream_writer_htm"><div class="ttname"><a href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a></div><div class="ttdoc">Interface for binary out (write) streams.</div><div class="ttdef"><b>Definition:</b> Stream.h:106</div></div>
<div class="ttc" id="aclassez_r_t_t_i_htm"><div class="ttname"><a href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a></div><div class="ttdoc">This class holds information about reflected types. Each instance represents one type that is known t...</div><div class="ttdef"><b>Definition:</b> RTTI.h:29</div></div>
<div class="ttc" id="aclassez_array_base_htm_a44e03a9168d3860a6df71b16da2e3e82"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a44e03a9168d3860a6df71b16da2e3e82">ezArrayBase&lt; T, ezDynamicArrayBase&lt; T &gt; &gt;::GetArrayPtr</a></div><div class="ttdeci">ezArrayPtr&lt; T &gt; GetArrayPtr()</div><div class="ttdoc">Returns an array pointer to the array data, or an empty array pointer if the array is empty.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:441</div></div>
<div class="ttc" id="aclassez_stream_reader_htm"><div class="ttname"><a href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a></div><div class="ttdoc">Interface for binary in (read) streams.</div><div class="ttdef"><b>Definition:</b> Stream.h:21</div></div>
<div class="ttc" id="aclassez_r_t_t_i_htm_abd87c140d164747f60c74a0f9fecc321"><div class="ttname"><a href="../../dd/d19/classez_r_t_t_i.htm#abd87c140d164747f60c74a0f9fecc321">ezRTTI::FindTypeByName</a></div><div class="ttdeci">static const ezRTTI * FindTypeByName(ezStringView sName)</div><div class="ttdoc">Searches all ezRTTI instances for the one with the given name, or nullptr if no such type exists.</div><div class="ttdef"><b>Definition:</b> RTTI.cpp:271</div></div>
<div class="ttc" id="aclassez_array_ptr_htm"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a></div><div class="ttdoc">This class encapsulates an array and it's size. It is recommended to use this class instead of plain ...</div><div class="ttdef"><b>Definition:</b> ArrayPtr.h:40</div></div>
<div class="ttc" id="astructez_visual_script_graph_description_1_1_node_htm"><div class="ttname"><a href="../../d5/d20/structez_visual_script_graph_description_1_1_node.htm">ezVisualScriptGraphDescription::Node</a></div><div class="ttdef"><b>Definition:</b> VisualScript.h:187</div></div>
<div class="ttc" id="aclassez_variant_htm_a053a9279ed97d59955850d0e0760327c"><div class="ttname"><a href="../../de/de6/classez_variant.htm#a053a9279ed97d59955850d0e0760327c">ezVariant::Get</a></div><div class="ttdeci">const T &amp; Get() const</div><div class="ttdoc">Returns the variants value as the provided type.</div></div>
<div class="ttc" id="aclassez_variant_htm_a694f12156828e7de34c4d592ef554aef"><div class="ttname"><a href="../../de/de6/classez_variant.htm#a694f12156828e7de34c4d592ef554aef">ezVariant::IsA</a></div><div class="ttdeci">bool IsA() const</div><div class="ttdoc">Returns whether the stored type is exactly the given type.</div></div>
<div class="ttc" id="aclassez_expression_byte_code_htm"><div class="ttname"><a href="../../da/d22/classez_expression_byte_code.htm">ezExpressionByteCode</a></div><div class="ttdef"><b>Definition:</b> ExpressionByteCode.h:9</div></div>
<div class="ttc" id="aclassez_blob_ptr_htm_a36043e87f673094c53d4d0f7e8e8a970"><div class="ttname"><a href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">ezBlobPtr::GetCount</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezUInt64 GetCount() const</div><div class="ttdoc">Returns the number of elements in the array.</div><div class="ttdef"><b>Definition:</b> Blob.h:109</div></div>
<div class="ttc" id="aclassez_array_base_htm_a35630a870ec53cf3b022653232a31c60"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a35630a870ec53cf3b022653232a31c60">ezArrayBase::IsEmpty</a></div><div class="ttdeci">bool IsEmpty() const</div><div class="ttdoc">Returns true, if the array does not contain any elements.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:178</div></div>
<div class="ttc" id="aclassez_array_base_htm_a51ba61fcbd2350ae8850754a41acbaa1"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a51ba61fcbd2350ae8850754a41acbaa1">ezArrayBase::GetCount</a></div><div class="ttdeci">ezUInt32 GetCount() const</div><div class="ttdoc">Returns the number of active elements in the array.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:172</div></div>
<div class="ttc" id="aclassez_dynamic_array_htm"><div class="ttname"><a href="../../d2/d4f/classez_dynamic_array.htm">ezDynamicArray</a></div><div class="ttdef"><b>Definition:</b> DynamicArray.h:80</div></div>
<div class="ttc" id="aclassez_string_builder_htm_a605f325ea4c9c3242454a16657e24ef7"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a605f325ea4c9c3242454a16657e24ef7">ezStringBuilder::Append</a></div><div class="ttdeci">void Append(ezUInt32 uiChar)</div><div class="ttdoc">Appends a single Utf32 character.</div><div class="ttdef"><b>Definition:</b> StringBuilder_inl.h:94</div></div>
<div class="ttc" id="astructez_enum_htm"><div class="ttname"><a href="../../d6/dd9/structez_enum.htm">ezEnum&lt; ezComparisonOperator &gt;</a></div></div>
<div class="ttc" id="aclassez_r_t_t_i_htm_a12bb619302f06a0750a230ac62b01886"><div class="ttname"><a href="../../dd/d19/classez_r_t_t_i.htm#a12bb619302f06a0750a230ac62b01886">ezRTTI::GetTypeName</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezStringView GetTypeName() const</div><div class="ttdoc">Returns the name of this type.</div><div class="ttdef"><b>Definition:</b> RTTI.h:48</div></div>
<div class="ttc" id="anamespaceez_conversion_utils_htm_aee7b9863241f562e0eb3aa7d360153b6"><div class="ttname"><a href="../../d7/d1a/namespaceez_conversion_utils.htm#aee7b9863241f562e0eb3aa7d360153b6">ezConversionUtils::ToString</a></div><div class="ttdeci">const EZ_ALWAYS_INLINE ezStringBuilder &amp; ToString(bool value, ezStringBuilder &amp;out_sResult)</div><div class="ttdoc">Converts a bool to a string.</div><div class="ttdef"><b>Definition:</b> ConversionUtils.h:176</div></div>
<div class="ttc" id="aclassez_hashed_string_htm"><div class="ttname"><a href="../../de/dce/classez_hashed_string.htm">ezHashedString</a></div><div class="ttdoc">This class is optimized to take nearly no memory (sizeof(void*)) and to allow very fast checks whethe...</div><div class="ttdef"><b>Definition:</b> HashedString.h:24</div></div>
<div class="ttc" id="aclassez_hybrid_array_htm"><div class="ttname"><a href="../../d8/deb/classez_hybrid_array.htm">ezHybridArray</a></div><div class="ttdoc">A hybrid array uses in-place storage to handle the first few elements without any allocation....</div><div class="ttdef"><b>Definition:</b> HybridArray.h:11</div></div>
<div class="ttc" id="aclassez_string_builder_htm"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></div><div class="ttdoc">ezStringBuilder is a class that is meant for creating and modifying strings.</div><div class="ttdef"><b>Definition:</b> StringBuilder.h:34</div></div>
<div class="ttc" id="aclassez_hashed_string_htm_abbc9fe061e32ddeb9166e7d4226c25b6"><div class="ttname"><a href="../../de/dce/classez_hashed_string.htm#abbc9fe061e32ddeb9166e7d4226c25b6">ezHashedString::IsEmpty</a></div><div class="ttdeci">bool IsEmpty() const</div><div class="ttdoc">Returns whether the string is empty.</div><div class="ttdef"><b>Definition:</b> HashedString.cpp:121</div></div>
<div class="ttc" id="aclassez_reflection_utils_htm_ad0e3f65598da517c28893964a2af97c8"><div class="ttname"><a href="../../d3/da6/classez_reflection_utils.htm#ad0e3f65598da517c28893964a2af97c8">ezReflectionUtils::EnumerationToString</a></div><div class="ttdeci">static bool EnumerationToString(const ezRTTI *pEnumerationRtti, ezInt64 iValue, ezStringBuilder &amp;out_sOutput, ezEnum&lt; EnumConversionMode &gt; conversionMode=EnumConversionMode::Default)</div><div class="ttdoc">Converts an enum or bitfield value into its string representation.</div><div class="ttdef"><b>Definition:</b> ReflectionUtils.cpp:953</div></div>
<div class="ttc" id="astructez_visual_script_node_description_htm"><div class="ttname"><a href="../../d8/def/structez_visual_script_node_description.htm">ezVisualScriptNodeDescription</a></div><div class="ttdef"><b>Definition:</b> VisualScript.h:9</div></div>
<div class="ttc" id="aclassez_abstract_property_htm"><div class="ttname"><a href="../../d6/d81/classez_abstract_property.htm">ezAbstractProperty</a></div><div class="ttdoc">This is the base interface for all properties in the reflection system. It provides enough informatio...</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:149</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_103378c88ff4c88de6bfabe12da9ec96.htm">EnginePlugins</a></li><li class="navelem"><a class="el" href="../../dir_fd6ca2c49d94c8469eba18ba47e441f3.htm">VisualScriptPlugin</a></li><li class="navelem"><a class="el" href="../../dir_a5717271583c0b9d0429740eb2ab8606.htm">Runtime</a></li><li class="navelem"><b>VisualScriptNodeUserData.h</b></li>
    <li class="footer">Generated on Mon Mar 3 2025 17:23:48 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
