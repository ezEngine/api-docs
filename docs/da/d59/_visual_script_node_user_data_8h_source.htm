<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/EnginePlugins/VisualScriptPlugin/Runtime/VisualScriptNodeUserData.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">ezEngine<span id="projectnumber">&#160;Release 25.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function() { init_codefold(1); });
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('da/d59/_visual_script_node_user_data_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">VisualScriptNodeUserData.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="preprocessor">#include &lt;Foundation/CodeUtils/Expression/ExpressionByteCode.h&gt;</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="preprocessor">#include &lt;Foundation/Reflection/ReflectionUtils.h&gt;</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="preprocessor">#include &lt;VisualScriptPlugin/Runtime/VisualScript.h&gt;</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span> </div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="keyword">using </span>SerializeFunction = <a class="code hl_struct" href="../../d4/da9/structez_result.htm">ezResult</a> (*)(<span class="keyword">const</span> <a class="code hl_struct" href="../../d8/def/structez_visual_script_node_description.htm">ezVisualScriptNodeDescription</a>&amp; nodeDesc, <a class="code hl_class" href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a>&amp; inout_stream, ezUInt32&amp; out_Size, ezUInt32&amp; out_alignment);</div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="keyword">using </span>DeserializeFunction = <a class="code hl_struct" href="../../d4/da9/structez_result.htm">ezResult</a> (*)(<a class="code hl_struct" href="../../d5/d20/structez_visual_script_graph_description_1_1_node.htm">ezVisualScriptGraphDescription::Node</a>&amp; node, <a class="code hl_class" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a>&amp; inout_stream, ezUInt8*&amp; inout_pAdditionalData);</div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="keyword">using </span>ToStringFunction = void (*)(<span class="keyword">const</span> <a class="code hl_struct" href="../../d8/def/structez_visual_script_node_description.htm">ezVisualScriptNodeDescription</a>&amp; nodeDesc, <a class="code hl_class" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>&amp; out_sResult);</div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span> </div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="keyword">namespace</span></div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span>{</div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> U&gt;</div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span>  <span class="keyword">static</span> ezUInt32 GetDynamicSize(ezUInt32 uiCount)</div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span>  {</div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span>    ezUInt32 uiSize = <span class="keyword">sizeof</span>(T);</div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span>    <span class="keywordflow">if</span> (uiCount &gt; 1)</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span>    {</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span>      uiSize += <span class="keyword">sizeof</span>(U) * (uiCount - 1);</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span>    }</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span>    <span class="keywordflow">return</span> uiSize;</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span>  }</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span> </div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span> </div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span>  <span class="keyword">static</span> <span class="keyword">constexpr</span> ezUInt32 GetUserDataAlignment()</div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span>  {</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span>    <span class="keywordflow">return</span> ezVisualScriptGraphDescription::Node::GetUserDataAlignment&lt;T&gt;();</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span>  }</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span> </div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span>  <span class="keyword">struct </span>NodeUserData_Type</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span>  {</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>    <span class="keyword">const</span> <a class="code hl_class" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* m_pType = <span class="keyword">nullptr</span>;</div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span> </div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span><span class="preprocessor">#if EZ_ENABLED(EZ_PLATFORM_32BIT)</span></div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span>    ezUInt32 m_uiPadding;</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span> </div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span>    <span class="keyword">static</span> <a class="code hl_struct" href="../../d4/da9/structez_result.htm">ezResult</a> Serialize(<span class="keyword">const</span> <a class="code hl_struct" href="../../d8/def/structez_visual_script_node_description.htm">ezVisualScriptNodeDescription</a>&amp; nodeDesc, <a class="code hl_class" href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a>&amp; inout_stream, ezUInt32&amp; out_uiSize, ezUInt32&amp; out_uiAlignment)</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span>    {</div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>      inout_stream &lt;&lt; nodeDesc.m_sTargetTypeName;</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span> </div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span>      out_uiSize = <span class="keyword">sizeof</span>(NodeUserData_Type);</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>      out_uiAlignment = GetUserDataAlignment&lt;NodeUserData_Type&gt;();</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>      <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span>    }</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span> </div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>    <span class="keyword">static</span> <a class="code hl_struct" href="../../d4/da9/structez_result.htm">ezResult</a> ReadType(<a class="code hl_class" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a>&amp; inout_stream, <span class="keyword">const</span> <a class="code hl_class" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>*&amp; out_pType)</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span>    {</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span>      <a class="code hl_class" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a> sTypeName;</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>      inout_stream &gt;&gt; sTypeName;</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span> </div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>      out_pType = <a class="code hl_function" href="../../dd/d19/classez_r_t_t_i.htm#abd87c140d164747f60c74a0f9fecc321">ezRTTI::FindTypeByName</a>(sTypeName);</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>      <span class="keywordflow">if</span> (out_pType == <span class="keyword">nullptr</span>)</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>      {</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>        <a class="code hl_function" href="../../dc/d9e/classez_log.htm#ae5b1ee0c969668bdac113be5f4b15fa3">ezLog::Error</a>(<span class="stringliteral">&quot;Unknown type &#39;{}&#39;&quot;</span>, sTypeName);</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>        <span class="keywordflow">return</span> EZ_FAILURE;</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>      }</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span> </div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span>      <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>    }</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span> </div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>    <span class="keyword">static</span> <a class="code hl_struct" href="../../d4/da9/structez_result.htm">ezResult</a> Deserialize(<a class="code hl_struct" href="../../d5/d20/structez_visual_script_graph_description_1_1_node.htm">ezVisualScriptGraphDescription::Node</a>&amp; ref_node, <a class="code hl_class" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a>&amp; inout_stream, ezUInt8*&amp; inout_pAdditionalData)</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span>    {</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>      <span class="keyword">auto</span>&amp; userData = ref_node.InitUserData&lt;NodeUserData_Type&gt;(inout_pAdditionalData);</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span>      EZ_SUCCEED_OR_RETURN(ReadType(inout_stream, userData.m_pType));</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>      <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>    }</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span> </div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>    <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../d7/d1a/namespaceez_conversion_utils.htm#a53c566e49fa9fd25bfd321812459657e">ToString</a>(<span class="keyword">const</span> <a class="code hl_struct" href="../../d8/def/structez_visual_script_node_description.htm">ezVisualScriptNodeDescription</a>&amp; nodeDesc, <a class="code hl_class" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>&amp; out_sResult)</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>    {</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>      <span class="keywordflow">if</span> (nodeDesc.m_sTargetTypeName.<a class="code hl_function" href="../../de/dce/classez_hashed_string.htm#abbc9fe061e32ddeb9166e7d4226c25b6">IsEmpty</a>() == <span class="keyword">false</span>)</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>      {</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>        out_sResult.<a class="code hl_function" href="../../d3/d88/classez_string_builder.htm#a605f325ea4c9c3242454a16657e24ef7">Append</a>(nodeDesc.m_sTargetTypeName);</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>      }</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>    }</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>  };</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span> </div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>  <span class="keyword">static_assert</span>(<span class="keyword">sizeof</span>(NodeUserData_Type) == 8);</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>  <span class="keyword">static_assert</span>(GetUserDataAlignment&lt;NodeUserData_Type&gt;() == 8);</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span> </div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span> </div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>  <span class="keyword">struct </span>NodeUserData_TypeAndProperty : <span class="keyword">public</span> NodeUserData_Type</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>  {</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>    <span class="keyword">const</span> <a class="code hl_class" href="../../d6/d81/classez_abstract_property.htm">ezAbstractProperty</a>* m_pProperty = <span class="keyword">nullptr</span>;</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span> </div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span><span class="preprocessor">#if EZ_ENABLED(EZ_PLATFORM_32BIT)</span></div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>    ezUInt32 m_uiPadding;</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span> </div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>    <span class="keyword">static</span> <a class="code hl_struct" href="../../d4/da9/structez_result.htm">ezResult</a> Serialize(<span class="keyword">const</span> <a class="code hl_struct" href="../../d8/def/structez_visual_script_node_description.htm">ezVisualScriptNodeDescription</a>&amp; nodeDesc, <a class="code hl_class" href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a>&amp; inout_stream, ezUInt32&amp; out_uiSize, ezUInt32&amp; out_uiAlignment)</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>    {</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span>      EZ_SUCCEED_OR_RETURN(NodeUserData_Type::Serialize(nodeDesc, inout_stream, out_uiSize, out_uiAlignment));</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span> </div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>      <span class="keyword">const</span> <a class="code hl_class" href="../../d2/d4f/classez_dynamic_array.htm">ezVariantArray</a>&amp; propertiesVar = nodeDesc.m_Value.<a class="code hl_function" href="../../de/de6/classez_variant.htm#a6e809b1d790d0cc9e65b390f1007a984">Get</a>&lt;<a class="code hl_class" href="../../d2/d4f/classez_dynamic_array.htm">ezVariantArray</a>&gt;();</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span>      EZ_ASSERT_DEBUG(propertiesVar.<a class="code hl_function" href="../../dc/d59/classez_array_base.htm#a51ba61fcbd2350ae8850754a41acbaa1">GetCount</a>() == 1, <span class="stringliteral">&quot;Invalid number of properties&quot;</span>);</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span> </div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>      inout_stream &lt;&lt; propertiesVar[0].Get&lt;<a class="code hl_class" href="../../de/dce/classez_hashed_string.htm">ezHashedString</a>&gt;();</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span> </div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>      out_uiSize = <span class="keyword">sizeof</span>(NodeUserData_TypeAndProperty);</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>      out_uiAlignment = GetUserDataAlignment&lt;NodeUserData_TypeAndProperty&gt;();</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>      <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>    }</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span> </div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>    <span class="keyword">static</span> <a class="code hl_struct" href="../../d4/da9/structez_result.htm">ezResult</a> ReadProperty(<a class="code hl_class" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a>&amp; inout_stream, <span class="keyword">const</span> <a class="code hl_class" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* pType, <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;T&gt;</a> properties, <span class="keyword">const</span> <a class="code hl_class" href="../../d6/d81/classez_abstract_property.htm">ezAbstractProperty</a>*&amp; out_pProp)</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>    {</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>      <a class="code hl_class" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a> sPropName;</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span>      inout_stream &gt;&gt; sPropName;</div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span> </div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span>      out_pProp = <span class="keyword">nullptr</span>;</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>      <span class="keywordflow">for</span> (<span class="keyword">auto</span>&amp; pProp : properties)</div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span>      {</div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span>        <span class="keywordflow">if</span> (sPropName == pProp-&gt;GetPropertyName())</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>        {</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>          out_pProp = pProp;</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span>          <span class="keywordflow">break</span>;</div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>        }</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>      }</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span> </div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>      <span class="keywordflow">if</span> (out_pProp == <span class="keyword">nullptr</span>)</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span>      {</div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span>        <span class="keyword">constexpr</span> <span class="keywordtype">bool</span> isFunction = std::is_same_v&lt;T, const ezAbstractFunctionProperty* const&gt;;</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span>        <a class="code hl_function" href="../../dc/d9e/classez_log.htm#ae5b1ee0c969668bdac113be5f4b15fa3">ezLog::Error</a>(<span class="stringliteral">&quot;{} &#39;{}&#39; not found on type &#39;{}&#39;&quot;</span>, isFunction ? <span class="stringliteral">&quot;Function&quot;</span> : <span class="stringliteral">&quot;Property&quot;</span>, sPropName, pType-&gt;GetTypeName());</div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span>        <span class="keywordflow">return</span> EZ_FAILURE;</div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span>      }</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span> </div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span>      <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span>    }</div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span> </div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span>    <span class="keyword">static</span> <a class="code hl_struct" href="../../d4/da9/structez_result.htm">ezResult</a> Deserialize(<a class="code hl_struct" href="../../d5/d20/structez_visual_script_graph_description_1_1_node.htm">ezVisualScriptGraphDescription::Node</a>&amp; ref_node, <a class="code hl_class" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a>&amp; inout_stream, ezUInt8*&amp; inout_pAdditionalData)</div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span>    {</div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>      <span class="keyword">auto</span>&amp; userData = ref_node.InitUserData&lt;NodeUserData_TypeAndProperty&gt;(inout_pAdditionalData);</div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span>      EZ_SUCCEED_OR_RETURN(ReadType(inout_stream, userData.m_pType));</div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span>      EZ_SUCCEED_OR_RETURN(ReadProperty(inout_stream, userData.m_pType, userData.m_pType-&gt;GetProperties(), userData.m_pProperty));</div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span> </div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span>      <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span>    }</div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span> </div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span>    <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../d7/d1a/namespaceez_conversion_utils.htm#a53c566e49fa9fd25bfd321812459657e">ToString</a>(<span class="keyword">const</span> <a class="code hl_struct" href="../../d8/def/structez_visual_script_node_description.htm">ezVisualScriptNodeDescription</a>&amp; nodeDesc, <a class="code hl_class" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>&amp; out_sResult)</div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>    {</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span>      NodeUserData_Type::ToString(nodeDesc, out_sResult);</div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span> </div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span>      <span class="keywordflow">if</span> (nodeDesc.m_Value.<a class="code hl_function" href="../../de/de6/classez_variant.htm#a694f12156828e7de34c4d592ef554aef">IsA</a>&lt;<a class="code hl_class" href="../../d2/d4f/classez_dynamic_array.htm">ezVariantArray</a>&gt;())</div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span>      {</div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span>        <span class="keyword">const</span> <a class="code hl_class" href="../../d2/d4f/classez_dynamic_array.htm">ezVariantArray</a>&amp; propertiesVar = nodeDesc.m_Value.<a class="code hl_function" href="../../de/de6/classez_variant.htm#a6e809b1d790d0cc9e65b390f1007a984">Get</a>&lt;<a class="code hl_class" href="../../d2/d4f/classez_dynamic_array.htm">ezVariantArray</a>&gt;();</div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span>        <span class="keywordflow">if</span> (propertiesVar.<a class="code hl_function" href="../../dc/d59/classez_array_base.htm#a35630a870ec53cf3b022653232a31c60">IsEmpty</a>() == <span class="keyword">false</span>)</div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span>        {</div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span>          out_sResult.<a class="code hl_function" href="../../d3/d88/classez_string_builder.htm#a605f325ea4c9c3242454a16657e24ef7">Append</a>(<span class="stringliteral">&quot;.&quot;</span>, propertiesVar[0].Get&lt;ezHashedString&gt;());</div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span>        }</div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span>      }</div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span>    }</div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span>  };</div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span> </div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span>  <span class="keyword">static_assert</span>(<span class="keyword">sizeof</span>(NodeUserData_TypeAndProperty) == 16);</div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span>  <span class="keyword">static_assert</span>(GetUserDataAlignment&lt;NodeUserData_TypeAndProperty&gt;() == 8);</div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span> </div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span> </div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span>  <span class="keyword">struct </span>NodeUserData_TypeAndProperties : <span class="keyword">public</span> NodeUserData_Type</div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span>  {</div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span>    ezUInt32 m_uiNumProperties = 0;</div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span> </div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span><span class="preprocessor">#if EZ_ENABLED(EZ_PLATFORM_32BIT)</span></div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span>    ezUInt32 m_uiPadding0;</div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span> </div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span>    <span class="comment">// This struct is allocated with enough space behind it to hold an array with m_uiNumProperties size.</span></div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span>    <span class="keyword">const</span> <a class="code hl_class" href="../../d6/d81/classez_abstract_property.htm">ezAbstractProperty</a>* m_Properties[1];</div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span> </div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span><span class="preprocessor">#if EZ_ENABLED(EZ_PLATFORM_32BIT)</span></div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span>    ezUInt32 m_uiPadding1;</div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span> </div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span>    <span class="keyword">static</span> <a class="code hl_struct" href="../../d4/da9/structez_result.htm">ezResult</a> Serialize(<span class="keyword">const</span> <a class="code hl_struct" href="../../d8/def/structez_visual_script_node_description.htm">ezVisualScriptNodeDescription</a>&amp; nodeDesc, <a class="code hl_class" href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a>&amp; inout_stream, ezUInt32&amp; out_uiSize, ezUInt32&amp; out_uiAlignment)</div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span>    {</div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span>      EZ_SUCCEED_OR_RETURN(NodeUserData_Type::Serialize(nodeDesc, inout_stream, out_uiSize, out_uiAlignment));</div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span> </div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span>      <span class="keyword">const</span> <a class="code hl_class" href="../../d2/d4f/classez_dynamic_array.htm">ezVariantArray</a>&amp; propertiesVar = nodeDesc.m_Value.<a class="code hl_function" href="../../de/de6/classez_variant.htm#a6e809b1d790d0cc9e65b390f1007a984">Get</a>&lt;<a class="code hl_class" href="../../d2/d4f/classez_dynamic_array.htm">ezVariantArray</a>&gt;();</div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span> </div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span>      ezUInt32 uiCount = propertiesVar.<a class="code hl_function" href="../../dc/d59/classez_array_base.htm#a51ba61fcbd2350ae8850754a41acbaa1">GetCount</a>();</div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno">  183</span>      inout_stream &lt;&lt; uiCount;</div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span> </div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span>      <span class="keywordflow">for</span> (<span class="keyword">auto</span>&amp; var : propertiesVar)</div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span>      {</div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span>        <a class="code hl_class" href="../../de/dce/classez_hashed_string.htm">ezHashedString</a> sPropName = var.Get&lt;<a class="code hl_class" href="../../de/dce/classez_hashed_string.htm">ezHashedString</a>&gt;();</div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span>        inout_stream &lt;&lt; sPropName;</div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span>      }</div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span> </div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span>      <span class="keyword">static_assert</span>(<span class="keyword">sizeof</span>(<span class="keywordtype">void</span>*) &lt;= <span class="keyword">sizeof</span>(ezUInt64));</div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span>      out_uiSize = GetDynamicSize&lt;NodeUserData_TypeAndProperties, ezUInt64&gt;(uiCount);</div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span>      out_uiAlignment = GetUserDataAlignment&lt;NodeUserData_TypeAndProperties&gt;();</div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span>      <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span>    }</div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span> </div>
<div class="line"><a id="l00197" name="l00197"></a><span class="lineno">  197</span>    <span class="keyword">static</span> <a class="code hl_struct" href="../../d4/da9/structez_result.htm">ezResult</a> Deserialize(<a class="code hl_struct" href="../../d5/d20/structez_visual_script_graph_description_1_1_node.htm">ezVisualScriptGraphDescription::Node</a>&amp; ref_node, <a class="code hl_class" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a>&amp; inout_stream, ezUInt8*&amp; inout_pAdditionalData)</div>
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno">  198</span>    {</div>
<div class="line"><a id="l00199" name="l00199"></a><span class="lineno">  199</span>      <span class="keyword">const</span> <a class="code hl_class" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* pType = <span class="keyword">nullptr</span>;</div>
<div class="line"><a id="l00200" name="l00200"></a><span class="lineno">  200</span>      EZ_SUCCEED_OR_RETURN(ReadType(inout_stream, pType));</div>
<div class="line"><a id="l00201" name="l00201"></a><span class="lineno">  201</span> </div>
<div class="line"><a id="l00202" name="l00202"></a><span class="lineno">  202</span>      ezUInt32 uiCount = 0;</div>
<div class="line"><a id="l00203" name="l00203"></a><span class="lineno">  203</span>      inout_stream &gt;&gt; uiCount;</div>
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno">  204</span> </div>
<div class="line"><a id="l00205" name="l00205"></a><span class="lineno">  205</span>      <span class="keyword">const</span> ezUInt32 uiByteSize = GetDynamicSize&lt;NodeUserData_TypeAndProperties, ezUInt64&gt;(uiCount);</div>
<div class="line"><a id="l00206" name="l00206"></a><span class="lineno">  206</span>      <span class="keyword">auto</span>&amp; userData = ref_node.InitUserData&lt;NodeUserData_TypeAndProperties&gt;(inout_pAdditionalData, uiByteSize);</div>
<div class="line"><a id="l00207" name="l00207"></a><span class="lineno">  207</span>      userData.m_pType = pType;</div>
<div class="line"><a id="l00208" name="l00208"></a><span class="lineno">  208</span>      userData.m_uiNumProperties = uiCount;</div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno">  209</span> </div>
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno">  210</span>      <a class="code hl_class" href="../../d8/deb/classez_hybrid_array.htm">ezHybridArray&lt;const ezAbstractProperty*, 32&gt;</a> properties;</div>
<div class="line"><a id="l00211" name="l00211"></a><span class="lineno">  211</span>      userData.m_pType-&gt;GetAllProperties(properties);</div>
<div class="line"><a id="l00212" name="l00212"></a><span class="lineno">  212</span> </div>
<div class="line"><a id="l00213" name="l00213"></a><span class="lineno">  213</span>      <span class="keywordflow">for</span> (ezUInt32 i = 0; i &lt; uiCount; ++i)</div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno">  214</span>      {</div>
<div class="line"><a id="l00215" name="l00215"></a><span class="lineno">  215</span>        <span class="keyword">const</span> <a class="code hl_class" href="../../d6/d81/classez_abstract_property.htm">ezAbstractProperty</a>* pProperty = <span class="keyword">nullptr</span>;</div>
<div class="line"><a id="l00216" name="l00216"></a><span class="lineno">  216</span>        EZ_SUCCEED_OR_RETURN(NodeUserData_TypeAndProperty::ReadProperty(inout_stream, userData.m_pType, properties.<a class="code hl_function" href="../../dc/d59/classez_array_base.htm#ad668df6ff81bdcac0bc118666d5817cf">GetArrayPtr</a>(), pProperty));</div>
<div class="line"><a id="l00217" name="l00217"></a><span class="lineno">  217</span>        userData.m_Properties[i] = pProperty;</div>
<div class="line"><a id="l00218" name="l00218"></a><span class="lineno">  218</span>      }</div>
<div class="line"><a id="l00219" name="l00219"></a><span class="lineno">  219</span> </div>
<div class="line"><a id="l00220" name="l00220"></a><span class="lineno">  220</span>      <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a id="l00221" name="l00221"></a><span class="lineno">  221</span>    }</div>
<div class="line"><a id="l00222" name="l00222"></a><span class="lineno">  222</span> </div>
<div class="line"><a id="l00223" name="l00223"></a><span class="lineno">  223</span>    <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../d7/d1a/namespaceez_conversion_utils.htm#a53c566e49fa9fd25bfd321812459657e">ToString</a>(<span class="keyword">const</span> <a class="code hl_struct" href="../../d8/def/structez_visual_script_node_description.htm">ezVisualScriptNodeDescription</a>&amp; nodeDesc, <a class="code hl_class" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>&amp; out_sResult)</div>
<div class="line"><a id="l00224" name="l00224"></a><span class="lineno">  224</span>    {</div>
<div class="line"><a id="l00225" name="l00225"></a><span class="lineno">  225</span>      NodeUserData_TypeAndProperty::ToString(nodeDesc, out_sResult);</div>
<div class="line"><a id="l00226" name="l00226"></a><span class="lineno">  226</span>    }</div>
<div class="line"><a id="l00227" name="l00227"></a><span class="lineno">  227</span>  };</div>
<div class="line"><a id="l00228" name="l00228"></a><span class="lineno">  228</span> </div>
<div class="line"><a id="l00229" name="l00229"></a><span class="lineno">  229</span>  <span class="keyword">static_assert</span>(<span class="keyword">sizeof</span>(NodeUserData_TypeAndProperties) == 24);</div>
<div class="line"><a id="l00230" name="l00230"></a><span class="lineno">  230</span>  <span class="keyword">static_assert</span>(GetUserDataAlignment&lt;NodeUserData_TypeAndProperties&gt;() == 8);</div>
<div class="line"><a id="l00231" name="l00231"></a><span class="lineno">  231</span> </div>
<div class="line"><a id="l00233" name="l00233"></a><span class="lineno">  233</span> </div>
<div class="line"><a id="l00234" name="l00234"></a><span class="lineno">  234</span>  <span class="keyword">struct </span>NodeUserData_TypeAndFunction : <span class="keyword">public</span> NodeUserData_TypeAndProperty</div>
<div class="line"><a id="l00235" name="l00235"></a><span class="lineno">  235</span>  {</div>
<div class="line"><a id="l00236" name="l00236"></a><span class="lineno">  236</span>    ezUInt32 m_uiInputArgsMask = 0;</div>
<div class="line"><a id="l00237" name="l00237"></a><span class="lineno">  237</span>    ezUInt32 m_uiOutputArgsMask = 0;</div>
<div class="line"><a id="l00238" name="l00238"></a><span class="lineno">  238</span> </div>
<div class="line"><a id="l00239" name="l00239"></a><span class="lineno">  239</span>    <span class="keyword">static</span> <a class="code hl_struct" href="../../d4/da9/structez_result.htm">ezResult</a> Serialize(<span class="keyword">const</span> <a class="code hl_struct" href="../../d8/def/structez_visual_script_node_description.htm">ezVisualScriptNodeDescription</a>&amp; nodeDesc, <a class="code hl_class" href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a>&amp; inout_stream, ezUInt32&amp; out_uiSize, ezUInt32&amp; out_uiAlignment)</div>
<div class="line"><a id="l00240" name="l00240"></a><span class="lineno">  240</span>    {</div>
<div class="line"><a id="l00241" name="l00241"></a><span class="lineno">  241</span>      EZ_SUCCEED_OR_RETURN(NodeUserData_Type::Serialize(nodeDesc, inout_stream, out_uiSize, out_uiAlignment));</div>
<div class="line"><a id="l00242" name="l00242"></a><span class="lineno">  242</span> </div>
<div class="line"><a id="l00243" name="l00243"></a><span class="lineno">  243</span>      <span class="keyword">const</span> <a class="code hl_class" href="../../d2/d4f/classez_dynamic_array.htm">ezVariantArray</a>&amp; propertiesVar = nodeDesc.m_Value.<a class="code hl_function" href="../../de/de6/classez_variant.htm#a6e809b1d790d0cc9e65b390f1007a984">Get</a>&lt;<a class="code hl_class" href="../../d2/d4f/classez_dynamic_array.htm">ezVariantArray</a>&gt;();</div>
<div class="line"><a id="l00244" name="l00244"></a><span class="lineno">  244</span>      EZ_ASSERT_DEBUG(propertiesVar.<a class="code hl_function" href="../../dc/d59/classez_array_base.htm#a51ba61fcbd2350ae8850754a41acbaa1">GetCount</a>() == 1, <span class="stringliteral">&quot;Invalid number of properties&quot;</span>);</div>
<div class="line"><a id="l00245" name="l00245"></a><span class="lineno">  245</span> </div>
<div class="line"><a id="l00246" name="l00246"></a><span class="lineno">  246</span>      <a class="code hl_class" href="../../de/dce/classez_hashed_string.htm">ezHashedString</a> sFunctionName = propertiesVar[0].Get&lt;<a class="code hl_class" href="../../de/dce/classez_hashed_string.htm">ezHashedString</a>&gt;();</div>
<div class="line"><a id="l00247" name="l00247"></a><span class="lineno">  247</span>      inout_stream &lt;&lt; sFunctionName;</div>
<div class="line"><a id="l00248" name="l00248"></a><span class="lineno">  248</span> </div>
<div class="line"><a id="l00249" name="l00249"></a><span class="lineno">  249</span>      <span class="keyword">const</span> <a class="code hl_class" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* pType = <a class="code hl_function" href="../../dd/d19/classez_r_t_t_i.htm#abd87c140d164747f60c74a0f9fecc321">ezRTTI::FindTypeByName</a>(nodeDesc.m_sTargetTypeName);</div>
<div class="line"><a id="l00250" name="l00250"></a><span class="lineno">  250</span>      <span class="keywordflow">if</span> (pType == <span class="keyword">nullptr</span>)</div>
<div class="line"><a id="l00251" name="l00251"></a><span class="lineno">  251</span>        <span class="keywordflow">return</span> EZ_FAILURE;</div>
<div class="line"><a id="l00252" name="l00252"></a><span class="lineno">  252</span> </div>
<div class="line"><a id="l00253" name="l00253"></a><span class="lineno">  253</span>      <span class="keyword">const</span> <a class="code hl_class" href="../../d3/d4c/classez_abstract_function_property.htm">ezAbstractFunctionProperty</a>* pFunction = <span class="keyword">nullptr</span>;</div>
<div class="line"><a id="l00254" name="l00254"></a><span class="lineno">  254</span>      <span class="keywordflow">for</span> (<span class="keyword">auto</span> pFunc : pType-&gt;GetFunctions())</div>
<div class="line"><a id="l00255" name="l00255"></a><span class="lineno">  255</span>      {</div>
<div class="line"><a id="l00256" name="l00256"></a><span class="lineno">  256</span>        <span class="keywordflow">if</span> (pFunc-&gt;GetPropertyName() == sFunctionName)</div>
<div class="line"><a id="l00257" name="l00257"></a><span class="lineno">  257</span>        {</div>
<div class="line"><a id="l00258" name="l00258"></a><span class="lineno">  258</span>          pFunction = pFunc;</div>
<div class="line"><a id="l00259" name="l00259"></a><span class="lineno">  259</span>          <span class="keywordflow">break</span>;</div>
<div class="line"><a id="l00260" name="l00260"></a><span class="lineno">  260</span>        }</div>
<div class="line"><a id="l00261" name="l00261"></a><span class="lineno">  261</span>      }</div>
<div class="line"><a id="l00262" name="l00262"></a><span class="lineno">  262</span> </div>
<div class="line"><a id="l00263" name="l00263"></a><span class="lineno">  263</span>      <span class="keywordflow">if</span> (pFunction == <span class="keyword">nullptr</span>)</div>
<div class="line"><a id="l00264" name="l00264"></a><span class="lineno">  264</span>        <span class="keywordflow">return</span> EZ_FAILURE;</div>
<div class="line"><a id="l00265" name="l00265"></a><span class="lineno">  265</span> </div>
<div class="line"><a id="l00266" name="l00266"></a><span class="lineno">  266</span>      <span class="keyword">auto</span> pScriptableFunctionAttribute = pFunction-&gt;<a class="code hl_function" href="../../d6/d81/classez_abstract_property.htm#aaf854f28a9813d44b239d1d4a6f0765f">GetAttributeByType</a>&lt;<a class="code hl_class" href="../../d1/ddf/classez_scriptable_function_attribute.htm">ezScriptableFunctionAttribute</a>&gt;();</div>
<div class="line"><a id="l00267" name="l00267"></a><span class="lineno">  267</span>      <span class="keywordflow">if</span> (pScriptableFunctionAttribute == <span class="keyword">nullptr</span>)</div>
<div class="line"><a id="l00268" name="l00268"></a><span class="lineno">  268</span>        <span class="keywordflow">return</span> EZ_FAILURE;</div>
<div class="line"><a id="l00269" name="l00269"></a><span class="lineno">  269</span> </div>
<div class="line"><a id="l00270" name="l00270"></a><span class="lineno">  270</span>      ezUInt32 uiInputArgsMask = 0;</div>
<div class="line"><a id="l00271" name="l00271"></a><span class="lineno">  271</span>      ezUInt32 uiOutputArgsMask = 0;</div>
<div class="line"><a id="l00272" name="l00272"></a><span class="lineno">  272</span>      <span class="keywordflow">for</span> (ezUInt32 i = 0; i &lt; pScriptableFunctionAttribute-&gt;GetArgumentCount(); ++i)</div>
<div class="line"><a id="l00273" name="l00273"></a><span class="lineno">  273</span>      {</div>
<div class="line"><a id="l00274" name="l00274"></a><span class="lineno">  274</span>        <span class="keyword">auto</span> argType = pScriptableFunctionAttribute-&gt;GetArgumentType(i);</div>
<div class="line"><a id="l00275" name="l00275"></a><span class="lineno">  275</span>        <span class="keywordflow">if</span> (argType == ezScriptableFunctionAttribute::In || argType == ezScriptableFunctionAttribute::Inout)</div>
<div class="line"><a id="l00276" name="l00276"></a><span class="lineno">  276</span>        {</div>
<div class="line"><a id="l00277" name="l00277"></a><span class="lineno">  277</span>          uiInputArgsMask |= EZ_BIT(i);</div>
<div class="line"><a id="l00278" name="l00278"></a><span class="lineno">  278</span>        }</div>
<div class="line"><a id="l00279" name="l00279"></a><span class="lineno">  279</span> </div>
<div class="line"><a id="l00280" name="l00280"></a><span class="lineno">  280</span>        <span class="keywordflow">if</span> (argType == ezScriptableFunctionAttribute::Out || argType == ezScriptableFunctionAttribute::Inout)</div>
<div class="line"><a id="l00281" name="l00281"></a><span class="lineno">  281</span>        {</div>
<div class="line"><a id="l00282" name="l00282"></a><span class="lineno">  282</span>          uiOutputArgsMask |= EZ_BIT(i);</div>
<div class="line"><a id="l00283" name="l00283"></a><span class="lineno">  283</span>        }</div>
<div class="line"><a id="l00284" name="l00284"></a><span class="lineno">  284</span>      }</div>
<div class="line"><a id="l00285" name="l00285"></a><span class="lineno">  285</span> </div>
<div class="line"><a id="l00286" name="l00286"></a><span class="lineno">  286</span>      inout_stream &lt;&lt; uiInputArgsMask;</div>
<div class="line"><a id="l00287" name="l00287"></a><span class="lineno">  287</span>      inout_stream &lt;&lt; uiOutputArgsMask;</div>
<div class="line"><a id="l00288" name="l00288"></a><span class="lineno">  288</span> </div>
<div class="line"><a id="l00289" name="l00289"></a><span class="lineno">  289</span>      out_uiSize = <span class="keyword">sizeof</span>(NodeUserData_TypeAndFunction);</div>
<div class="line"><a id="l00290" name="l00290"></a><span class="lineno">  290</span>      out_uiAlignment = GetUserDataAlignment&lt;NodeUserData_TypeAndFunction&gt;();</div>
<div class="line"><a id="l00291" name="l00291"></a><span class="lineno">  291</span>      <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a id="l00292" name="l00292"></a><span class="lineno">  292</span>    }</div>
<div class="line"><a id="l00293" name="l00293"></a><span class="lineno">  293</span> </div>
<div class="line"><a id="l00294" name="l00294"></a><span class="lineno">  294</span>    <span class="keyword">static</span> <a class="code hl_struct" href="../../d4/da9/structez_result.htm">ezResult</a> Deserialize(<a class="code hl_struct" href="../../d5/d20/structez_visual_script_graph_description_1_1_node.htm">ezVisualScriptGraphDescription::Node</a>&amp; ref_node, <a class="code hl_class" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a>&amp; inout_stream, ezUInt8*&amp; inout_pAdditionalData)</div>
<div class="line"><a id="l00295" name="l00295"></a><span class="lineno">  295</span>    {</div>
<div class="line"><a id="l00296" name="l00296"></a><span class="lineno">  296</span>      <span class="keyword">auto</span>&amp; userData = ref_node.InitUserData&lt;NodeUserData_TypeAndFunction&gt;(inout_pAdditionalData);</div>
<div class="line"><a id="l00297" name="l00297"></a><span class="lineno">  297</span>      EZ_SUCCEED_OR_RETURN(ReadType(inout_stream, userData.m_pType));</div>
<div class="line"><a id="l00298" name="l00298"></a><span class="lineno">  298</span>      EZ_SUCCEED_OR_RETURN(ReadProperty(inout_stream, userData.m_pType, userData.m_pType-&gt;GetFunctions(), userData.m_pProperty));</div>
<div class="line"><a id="l00299" name="l00299"></a><span class="lineno">  299</span> </div>
<div class="line"><a id="l00300" name="l00300"></a><span class="lineno">  300</span>      inout_stream &gt;&gt; userData.m_uiInputArgsMask;</div>
<div class="line"><a id="l00301" name="l00301"></a><span class="lineno">  301</span>      inout_stream &gt;&gt; userData.m_uiOutputArgsMask;</div>
<div class="line"><a id="l00302" name="l00302"></a><span class="lineno">  302</span> </div>
<div class="line"><a id="l00303" name="l00303"></a><span class="lineno">  303</span>      <span class="keywordflow">if</span> (<span class="keyword">static_cast&lt;</span><span class="keyword">const </span><a class="code hl_class" href="../../d3/d4c/classez_abstract_function_property.htm">ezAbstractFunctionProperty</a>*<span class="keyword">&gt;</span>(userData.m_pProperty)-&gt;<a class="code hl_function" href="../../d3/d4c/classez_abstract_function_property.htm#a1f18213c668db11e5364fe91407cc237">GetArgumentCount</a>() != <a class="code hl_function" href="../../db/d78/namespaceez_math.htm#a6a78ee109368657dafd74a19d26d6b7c">ezMath::CountBits</a>(userData.m_uiInputArgsMask | userData.m_uiOutputArgsMask))</div>
<div class="line"><a id="l00304" name="l00304"></a><span class="lineno">  304</span>      {</div>
<div class="line"><a id="l00305" name="l00305"></a><span class="lineno">  305</span>        <a class="code hl_function" href="../../dc/d9e/classez_log.htm#ae5b1ee0c969668bdac113be5f4b15fa3">ezLog::Error</a>(<span class="stringliteral">&quot;Visual script {} &#39;{}&#39;: Argument count mismatch. Script needs re-transform.&quot;</span>, ezVisualScriptNodeDescription::Type::GetName(ref_node.m_Type), userData.m_pProperty-&gt;GetPropertyName());</div>
<div class="line"><a id="l00306" name="l00306"></a><span class="lineno">  306</span>        <span class="keywordflow">return</span> EZ_FAILURE;</div>
<div class="line"><a id="l00307" name="l00307"></a><span class="lineno">  307</span>      }</div>
<div class="line"><a id="l00308" name="l00308"></a><span class="lineno">  308</span> </div>
<div class="line"><a id="l00309" name="l00309"></a><span class="lineno">  309</span>      <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a id="l00310" name="l00310"></a><span class="lineno">  310</span>    }</div>
<div class="line"><a id="l00311" name="l00311"></a><span class="lineno">  311</span> </div>
<div class="line"><a id="l00312" name="l00312"></a><span class="lineno">  312</span>    <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../d7/d1a/namespaceez_conversion_utils.htm#a53c566e49fa9fd25bfd321812459657e">ToString</a>(<span class="keyword">const</span> <a class="code hl_struct" href="../../d8/def/structez_visual_script_node_description.htm">ezVisualScriptNodeDescription</a>&amp; nodeDesc, <a class="code hl_class" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>&amp; out_sResult)</div>
<div class="line"><a id="l00313" name="l00313"></a><span class="lineno">  313</span>    {</div>
<div class="line"><a id="l00314" name="l00314"></a><span class="lineno">  314</span>      NodeUserData_TypeAndProperty::ToString(nodeDesc, out_sResult);</div>
<div class="line"><a id="l00315" name="l00315"></a><span class="lineno">  315</span>    }</div>
<div class="line"><a id="l00316" name="l00316"></a><span class="lineno">  316</span>  };</div>
<div class="line"><a id="l00317" name="l00317"></a><span class="lineno">  317</span> </div>
<div class="line"><a id="l00318" name="l00318"></a><span class="lineno">  318</span>  <span class="keyword">static_assert</span>(<span class="keyword">sizeof</span>(NodeUserData_TypeAndFunction) == 24);</div>
<div class="line"><a id="l00319" name="l00319"></a><span class="lineno">  319</span>  <span class="keyword">static_assert</span>(GetUserDataAlignment&lt;NodeUserData_TypeAndFunction&gt;() == 8);</div>
<div class="line"><a id="l00320" name="l00320"></a><span class="lineno">  320</span> </div>
<div class="line"><a id="l00322" name="l00322"></a><span class="lineno">  322</span> </div>
<div class="line"><a id="l00323" name="l00323"></a><span class="lineno">  323</span>  <span class="keyword">struct </span>NodeUserData_Switch</div>
<div class="line"><a id="l00324" name="l00324"></a><span class="lineno">  324</span>  {</div>
<div class="line"><a id="l00325" name="l00325"></a><span class="lineno">  325</span>    ezUInt32 m_uiNumCases = 0;</div>
<div class="line"><a id="l00326" name="l00326"></a><span class="lineno">  326</span> </div>
<div class="line"><a id="l00327" name="l00327"></a><span class="lineno">  327</span>    <span class="comment">// This struct is allocated with enough space behind it to hold an array with m_uiNumCases size.</span></div>
<div class="line"><a id="l00328" name="l00328"></a><span class="lineno">  328</span>    ezInt64 m_Cases[1];</div>
<div class="line"><a id="l00329" name="l00329"></a><span class="lineno">  329</span> </div>
<div class="line"><a id="l00330" name="l00330"></a><span class="lineno">  330</span>    <span class="keyword">static</span> <a class="code hl_struct" href="../../d4/da9/structez_result.htm">ezResult</a> Serialize(<span class="keyword">const</span> <a class="code hl_struct" href="../../d8/def/structez_visual_script_node_description.htm">ezVisualScriptNodeDescription</a>&amp; nodeDesc, <a class="code hl_class" href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a>&amp; inout_stream, ezUInt32&amp; out_uiSize, ezUInt32&amp; out_uiAlignment)</div>
<div class="line"><a id="l00331" name="l00331"></a><span class="lineno">  331</span>    {</div>
<div class="line"><a id="l00332" name="l00332"></a><span class="lineno">  332</span>      <span class="keyword">const</span> <a class="code hl_class" href="../../d2/d4f/classez_dynamic_array.htm">ezVariantArray</a>&amp; casesVar = nodeDesc.m_Value.<a class="code hl_function" href="../../de/de6/classez_variant.htm#a6e809b1d790d0cc9e65b390f1007a984">Get</a>&lt;<a class="code hl_class" href="../../d2/d4f/classez_dynamic_array.htm">ezVariantArray</a>&gt;();</div>
<div class="line"><a id="l00333" name="l00333"></a><span class="lineno">  333</span> </div>
<div class="line"><a id="l00334" name="l00334"></a><span class="lineno">  334</span>      ezUInt32 uiCount = casesVar.<a class="code hl_function" href="../../dc/d59/classez_array_base.htm#a51ba61fcbd2350ae8850754a41acbaa1">GetCount</a>();</div>
<div class="line"><a id="l00335" name="l00335"></a><span class="lineno">  335</span>      inout_stream &lt;&lt; uiCount;</div>
<div class="line"><a id="l00336" name="l00336"></a><span class="lineno">  336</span> </div>
<div class="line"><a id="l00337" name="l00337"></a><span class="lineno">  337</span>      <span class="keywordflow">for</span> (<span class="keyword">auto</span>&amp; var : casesVar)</div>
<div class="line"><a id="l00338" name="l00338"></a><span class="lineno">  338</span>      {</div>
<div class="line"><a id="l00339" name="l00339"></a><span class="lineno">  339</span>        ezInt64 iCaseValue = var.ConvertTo&lt;ezInt64&gt;();</div>
<div class="line"><a id="l00340" name="l00340"></a><span class="lineno">  340</span>        inout_stream &lt;&lt; iCaseValue;</div>
<div class="line"><a id="l00341" name="l00341"></a><span class="lineno">  341</span>      }</div>
<div class="line"><a id="l00342" name="l00342"></a><span class="lineno">  342</span> </div>
<div class="line"><a id="l00343" name="l00343"></a><span class="lineno">  343</span>      out_uiSize = GetDynamicSize&lt;NodeUserData_Switch, ezInt64&gt;(uiCount);</div>
<div class="line"><a id="l00344" name="l00344"></a><span class="lineno">  344</span>      out_uiAlignment = GetUserDataAlignment&lt;NodeUserData_Switch&gt;();</div>
<div class="line"><a id="l00345" name="l00345"></a><span class="lineno">  345</span>      <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a id="l00346" name="l00346"></a><span class="lineno">  346</span>    }</div>
<div class="line"><a id="l00347" name="l00347"></a><span class="lineno">  347</span> </div>
<div class="line"><a id="l00348" name="l00348"></a><span class="lineno">  348</span>    <span class="keyword">static</span> <a class="code hl_struct" href="../../d4/da9/structez_result.htm">ezResult</a> Deserialize(<a class="code hl_struct" href="../../d5/d20/structez_visual_script_graph_description_1_1_node.htm">ezVisualScriptGraphDescription::Node</a>&amp; ref_node, <a class="code hl_class" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a>&amp; inout_stream, ezUInt8*&amp; inout_pAdditionalData)</div>
<div class="line"><a id="l00349" name="l00349"></a><span class="lineno">  349</span>    {</div>
<div class="line"><a id="l00350" name="l00350"></a><span class="lineno">  350</span>      ezUInt32 uiCount = 0;</div>
<div class="line"><a id="l00351" name="l00351"></a><span class="lineno">  351</span>      inout_stream &gt;&gt; uiCount;</div>
<div class="line"><a id="l00352" name="l00352"></a><span class="lineno">  352</span> </div>
<div class="line"><a id="l00353" name="l00353"></a><span class="lineno">  353</span>      <span class="keyword">const</span> ezUInt32 uiByteSize = GetDynamicSize&lt;NodeUserData_Switch, ezInt64&gt;(uiCount);</div>
<div class="line"><a id="l00354" name="l00354"></a><span class="lineno">  354</span>      <span class="keyword">auto</span>&amp; userData = ref_node.InitUserData&lt;NodeUserData_Switch&gt;(inout_pAdditionalData, uiByteSize);</div>
<div class="line"><a id="l00355" name="l00355"></a><span class="lineno">  355</span>      userData.m_uiNumCases = uiCount;</div>
<div class="line"><a id="l00356" name="l00356"></a><span class="lineno">  356</span> </div>
<div class="line"><a id="l00357" name="l00357"></a><span class="lineno">  357</span>      <span class="keywordflow">for</span> (ezUInt32 i = 0; i &lt; uiCount; ++i)</div>
<div class="line"><a id="l00358" name="l00358"></a><span class="lineno">  358</span>      {</div>
<div class="line"><a id="l00359" name="l00359"></a><span class="lineno">  359</span>        inout_stream &gt;&gt; userData.m_Cases[i];</div>
<div class="line"><a id="l00360" name="l00360"></a><span class="lineno">  360</span>      }</div>
<div class="line"><a id="l00361" name="l00361"></a><span class="lineno">  361</span> </div>
<div class="line"><a id="l00362" name="l00362"></a><span class="lineno">  362</span>      <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a id="l00363" name="l00363"></a><span class="lineno">  363</span>    }</div>
<div class="line"><a id="l00364" name="l00364"></a><span class="lineno">  364</span> </div>
<div class="line"><a id="l00365" name="l00365"></a><span class="lineno">  365</span>    <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../d7/d1a/namespaceez_conversion_utils.htm#a53c566e49fa9fd25bfd321812459657e">ToString</a>(<span class="keyword">const</span> <a class="code hl_struct" href="../../d8/def/structez_visual_script_node_description.htm">ezVisualScriptNodeDescription</a>&amp; nodeDesc, <a class="code hl_class" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>&amp; out_sResult)</div>
<div class="line"><a id="l00366" name="l00366"></a><span class="lineno">  366</span>    {</div>
<div class="line"><a id="l00367" name="l00367"></a><span class="lineno">  367</span>      <span class="comment">// Nothing to add here</span></div>
<div class="line"><a id="l00368" name="l00368"></a><span class="lineno">  368</span>    }</div>
<div class="line"><a id="l00369" name="l00369"></a><span class="lineno">  369</span>  };</div>
<div class="line"><a id="l00370" name="l00370"></a><span class="lineno">  370</span> </div>
<div class="line"><a id="l00371" name="l00371"></a><span class="lineno">  371</span>  <span class="keyword">static_assert</span>(<span class="keyword">sizeof</span>(NodeUserData_Switch) == 16);</div>
<div class="line"><a id="l00372" name="l00372"></a><span class="lineno">  372</span>  <span class="keyword">static_assert</span>(GetUserDataAlignment&lt;NodeUserData_Switch&gt;() == 8);</div>
<div class="line"><a id="l00373" name="l00373"></a><span class="lineno">  373</span> </div>
<div class="line"><a id="l00375" name="l00375"></a><span class="lineno">  375</span> </div>
<div class="line"><a id="l00376" name="l00376"></a><span class="lineno">  376</span>  <span class="keyword">struct </span>NodeUserData_Comparison</div>
<div class="line"><a id="l00377" name="l00377"></a><span class="lineno">  377</span>  {</div>
<div class="line"><a id="l00378" name="l00378"></a><span class="lineno">  378</span>    <a class="code hl_struct" href="../../d6/dd9/structez_enum.htm">ezEnum&lt;ezComparisonOperator&gt;</a> m_ComparisonOperator;</div>
<div class="line"><a id="l00379" name="l00379"></a><span class="lineno">  379</span> </div>
<div class="line"><a id="l00380" name="l00380"></a><span class="lineno">  380</span>    <span class="keyword">static</span> <a class="code hl_struct" href="../../d4/da9/structez_result.htm">ezResult</a> Serialize(<span class="keyword">const</span> <a class="code hl_struct" href="../../d8/def/structez_visual_script_node_description.htm">ezVisualScriptNodeDescription</a>&amp; nodeDesc, <a class="code hl_class" href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a>&amp; inout_stream, ezUInt32&amp; out_uiSize, ezUInt32&amp; out_uiAlignment)</div>
<div class="line"><a id="l00381" name="l00381"></a><span class="lineno">  381</span>    {</div>
<div class="line"><a id="l00382" name="l00382"></a><span class="lineno">  382</span>      <a class="code hl_struct" href="../../d6/dd9/structez_enum.htm">ezEnum&lt;ezComparisonOperator&gt;</a> compOp = <span class="keyword">static_cast&lt;</span>ezComparisonOperator::Enum<span class="keyword">&gt;</span>(nodeDesc.m_Value.<a class="code hl_function" href="../../de/de6/classez_variant.htm#a6e809b1d790d0cc9e65b390f1007a984">Get</a>&lt;ezInt64&gt;());</div>
<div class="line"><a id="l00383" name="l00383"></a><span class="lineno">  383</span>      inout_stream &lt;&lt; compOp;</div>
<div class="line"><a id="l00384" name="l00384"></a><span class="lineno">  384</span> </div>
<div class="line"><a id="l00385" name="l00385"></a><span class="lineno">  385</span>      out_uiSize = <span class="keyword">sizeof</span>(NodeUserData_Comparison);</div>
<div class="line"><a id="l00386" name="l00386"></a><span class="lineno">  386</span>      out_uiAlignment = GetUserDataAlignment&lt;NodeUserData_Comparison&gt;();</div>
<div class="line"><a id="l00387" name="l00387"></a><span class="lineno">  387</span>      <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a id="l00388" name="l00388"></a><span class="lineno">  388</span>    }</div>
<div class="line"><a id="l00389" name="l00389"></a><span class="lineno">  389</span> </div>
<div class="line"><a id="l00390" name="l00390"></a><span class="lineno">  390</span>    <span class="keyword">static</span> <a class="code hl_struct" href="../../d4/da9/structez_result.htm">ezResult</a> Deserialize(<a class="code hl_struct" href="../../d5/d20/structez_visual_script_graph_description_1_1_node.htm">ezVisualScriptGraphDescription::Node</a>&amp; ref_node, <a class="code hl_class" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a>&amp; inout_stream, ezUInt8*&amp; inout_pAdditionalData)</div>
<div class="line"><a id="l00391" name="l00391"></a><span class="lineno">  391</span>    {</div>
<div class="line"><a id="l00392" name="l00392"></a><span class="lineno">  392</span>      <span class="keyword">auto</span>&amp; userData = ref_node.InitUserData&lt;NodeUserData_Comparison&gt;(inout_pAdditionalData);</div>
<div class="line"><a id="l00393" name="l00393"></a><span class="lineno">  393</span>      inout_stream &gt;&gt; userData.m_ComparisonOperator;</div>
<div class="line"><a id="l00394" name="l00394"></a><span class="lineno">  394</span> </div>
<div class="line"><a id="l00395" name="l00395"></a><span class="lineno">  395</span>      <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a id="l00396" name="l00396"></a><span class="lineno">  396</span>    }</div>
<div class="line"><a id="l00397" name="l00397"></a><span class="lineno">  397</span> </div>
<div class="line"><a id="l00398" name="l00398"></a><span class="lineno">  398</span>    <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../d7/d1a/namespaceez_conversion_utils.htm#a53c566e49fa9fd25bfd321812459657e">ToString</a>(<span class="keyword">const</span> <a class="code hl_struct" href="../../d8/def/structez_visual_script_node_description.htm">ezVisualScriptNodeDescription</a>&amp; nodeDesc, <a class="code hl_class" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>&amp; out_sResult)</div>
<div class="line"><a id="l00399" name="l00399"></a><span class="lineno">  399</span>    {</div>
<div class="line"><a id="l00400" name="l00400"></a><span class="lineno">  400</span>      <a class="code hl_class" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a> sCompOp;</div>
<div class="line"><a id="l00401" name="l00401"></a><span class="lineno">  401</span>      <a class="code hl_function" href="../../d3/da6/classez_reflection_utils.htm#ad0e3f65598da517c28893964a2af97c8">ezReflectionUtils::EnumerationToString</a>(ezGetStaticRTTI&lt;ezComparisonOperator&gt;(), nodeDesc.m_Value.<a class="code hl_function" href="../../de/de6/classez_variant.htm#a6e809b1d790d0cc9e65b390f1007a984">Get</a>&lt;ezInt64&gt;(), sCompOp, ezReflectionUtils::EnumConversionMode::ValueNameOnly);</div>
<div class="line"><a id="l00402" name="l00402"></a><span class="lineno">  402</span> </div>
<div class="line"><a id="l00403" name="l00403"></a><span class="lineno">  403</span>      out_sResult.<a class="code hl_function" href="../../d3/d88/classez_string_builder.htm#a605f325ea4c9c3242454a16657e24ef7">Append</a>(<span class="stringliteral">&quot; &quot;</span>, sCompOp);</div>
<div class="line"><a id="l00404" name="l00404"></a><span class="lineno">  404</span>    }</div>
<div class="line"><a id="l00405" name="l00405"></a><span class="lineno">  405</span>  };</div>
<div class="line"><a id="l00406" name="l00406"></a><span class="lineno">  406</span> </div>
<div class="line"><a id="l00407" name="l00407"></a><span class="lineno">  407</span>  <span class="keyword">static_assert</span>(<span class="keyword">sizeof</span>(NodeUserData_Comparison) == 1);</div>
<div class="line"><a id="l00408" name="l00408"></a><span class="lineno">  408</span>  <span class="keyword">static_assert</span>(GetUserDataAlignment&lt;NodeUserData_Comparison&gt;() == 8);</div>
<div class="line"><a id="l00409" name="l00409"></a><span class="lineno">  409</span> </div>
<div class="line"><a id="l00411" name="l00411"></a><span class="lineno">  411</span> </div>
<div class="line"><a id="l00412" name="l00412"></a><span class="lineno">  412</span>  <span class="keyword">struct </span>NodeUserData_Expression</div>
<div class="line"><a id="l00413" name="l00413"></a><span class="lineno">  413</span>  {</div>
<div class="line"><a id="l00414" name="l00414"></a><span class="lineno">  414</span>    <a class="code hl_class" href="../../da/d22/classez_expression_byte_code.htm">ezExpressionByteCode</a> m_ByteCode;</div>
<div class="line"><a id="l00415" name="l00415"></a><span class="lineno">  415</span> </div>
<div class="line"><a id="l00416" name="l00416"></a><span class="lineno">  416</span><span class="preprocessor">#if EZ_ENABLED(EZ_PLATFORM_32BIT)</span></div>
<div class="line"><a id="l00417" name="l00417"></a><span class="lineno">  417</span>    ezUInt32 m_uiPadding[4];</div>
<div class="line"><a id="l00418" name="l00418"></a><span class="lineno">  418</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00419" name="l00419"></a><span class="lineno">  419</span> </div>
<div class="line"><a id="l00420" name="l00420"></a><span class="lineno">  420</span>    <span class="keyword">static</span> <a class="code hl_struct" href="../../d4/da9/structez_result.htm">ezResult</a> Serialize(<span class="keyword">const</span> <a class="code hl_struct" href="../../d8/def/structez_visual_script_node_description.htm">ezVisualScriptNodeDescription</a>&amp; nodeDesc, <a class="code hl_class" href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a>&amp; inout_stream, ezUInt32&amp; out_uiSize, ezUInt32&amp; out_uiAlignment)</div>
<div class="line"><a id="l00421" name="l00421"></a><span class="lineno">  421</span>    {</div>
<div class="line"><a id="l00422" name="l00422"></a><span class="lineno">  422</span>      <span class="keyword">const</span> <a class="code hl_class" href="../../da/d22/classez_expression_byte_code.htm">ezExpressionByteCode</a>&amp; byteCode = nodeDesc.m_Value.<a class="code hl_function" href="../../de/de6/classez_variant.htm#a6e809b1d790d0cc9e65b390f1007a984">Get</a>&lt;<a class="code hl_class" href="../../da/d22/classez_expression_byte_code.htm">ezExpressionByteCode</a>&gt;();</div>
<div class="line"><a id="l00423" name="l00423"></a><span class="lineno">  423</span> </div>
<div class="line"><a id="l00424" name="l00424"></a><span class="lineno">  424</span>      ezUInt32 uiDataSize = <span class="keyword">static_cast&lt;</span>ezUInt32<span class="keyword">&gt;</span>(byteCode.GetDataBlob().<a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>());</div>
<div class="line"><a id="l00425" name="l00425"></a><span class="lineno">  425</span>      inout_stream &lt;&lt; uiDataSize;</div>
<div class="line"><a id="l00426" name="l00426"></a><span class="lineno">  426</span> </div>
<div class="line"><a id="l00427" name="l00427"></a><span class="lineno">  427</span>      EZ_SUCCEED_OR_RETURN(byteCode.Save(inout_stream));</div>
<div class="line"><a id="l00428" name="l00428"></a><span class="lineno">  428</span> </div>
<div class="line"><a id="l00429" name="l00429"></a><span class="lineno">  429</span>      out_uiSize = <span class="keyword">sizeof</span>(NodeUserData_Expression) + uiDataSize;</div>
<div class="line"><a id="l00430" name="l00430"></a><span class="lineno">  430</span>      out_uiAlignment = GetUserDataAlignment&lt;NodeUserData_Expression&gt;();</div>
<div class="line"><a id="l00431" name="l00431"></a><span class="lineno">  431</span>      <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a id="l00432" name="l00432"></a><span class="lineno">  432</span>    }</div>
<div class="line"><a id="l00433" name="l00433"></a><span class="lineno">  433</span> </div>
<div class="line"><a id="l00434" name="l00434"></a><span class="lineno">  434</span>    <span class="keyword">static</span> <a class="code hl_struct" href="../../d4/da9/structez_result.htm">ezResult</a> Deserialize(<a class="code hl_struct" href="../../d5/d20/structez_visual_script_graph_description_1_1_node.htm">ezVisualScriptGraphDescription::Node</a>&amp; ref_node, <a class="code hl_class" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a>&amp; inout_stream, ezUInt8*&amp; inout_pAdditionalData)</div>
<div class="line"><a id="l00435" name="l00435"></a><span class="lineno">  435</span>    {</div>
<div class="line"><a id="l00436" name="l00436"></a><span class="lineno">  436</span>      <span class="keyword">auto</span>&amp; userData = ref_node.InitUserData&lt;NodeUserData_Expression&gt;(inout_pAdditionalData);</div>
<div class="line"><a id="l00437" name="l00437"></a><span class="lineno">  437</span> </div>
<div class="line"><a id="l00438" name="l00438"></a><span class="lineno">  438</span>      ezUInt32 uiDataSize = 0;</div>
<div class="line"><a id="l00439" name="l00439"></a><span class="lineno">  439</span>      inout_stream &gt;&gt; uiDataSize;</div>
<div class="line"><a id="l00440" name="l00440"></a><span class="lineno">  440</span> </div>
<div class="line"><a id="l00441" name="l00441"></a><span class="lineno">  441</span>      <span class="keyword">auto</span> externalMemory = ezMakeArrayPtr(inout_pAdditionalData, uiDataSize);</div>
<div class="line"><a id="l00442" name="l00442"></a><span class="lineno">  442</span>      inout_pAdditionalData += uiDataSize;</div>
<div class="line"><a id="l00443" name="l00443"></a><span class="lineno">  443</span> </div>
<div class="line"><a id="l00444" name="l00444"></a><span class="lineno">  444</span>      EZ_SUCCEED_OR_RETURN(userData.m_ByteCode.Load(inout_stream, externalMemory));</div>
<div class="line"><a id="l00445" name="l00445"></a><span class="lineno">  445</span> </div>
<div class="line"><a id="l00446" name="l00446"></a><span class="lineno">  446</span>      <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a id="l00447" name="l00447"></a><span class="lineno">  447</span>    }</div>
<div class="line"><a id="l00448" name="l00448"></a><span class="lineno">  448</span> </div>
<div class="line"><a id="l00449" name="l00449"></a><span class="lineno">  449</span>    <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../d7/d1a/namespaceez_conversion_utils.htm#a53c566e49fa9fd25bfd321812459657e">ToString</a>(<span class="keyword">const</span> <a class="code hl_struct" href="../../d8/def/structez_visual_script_node_description.htm">ezVisualScriptNodeDescription</a>&amp; nodeDesc, <a class="code hl_class" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>&amp; out_sResult)</div>
<div class="line"><a id="l00450" name="l00450"></a><span class="lineno">  450</span>    {</div>
<div class="line"><a id="l00451" name="l00451"></a><span class="lineno">  451</span>      <span class="comment">// Nothing to add here</span></div>
<div class="line"><a id="l00452" name="l00452"></a><span class="lineno">  452</span>    }</div>
<div class="line"><a id="l00453" name="l00453"></a><span class="lineno">  453</span>  };</div>
<div class="line"><a id="l00454" name="l00454"></a><span class="lineno">  454</span> </div>
<div class="line"><a id="l00455" name="l00455"></a><span class="lineno">  455</span>  <span class="keyword">static_assert</span>(<span class="keyword">sizeof</span>(NodeUserData_Expression) == 64);</div>
<div class="line"><a id="l00456" name="l00456"></a><span class="lineno">  456</span>  <span class="keyword">static_assert</span>(GetUserDataAlignment&lt;NodeUserData_Expression&gt;() == 8);</div>
<div class="line"><a id="l00457" name="l00457"></a><span class="lineno">  457</span> </div>
<div class="line"><a id="l00459" name="l00459"></a><span class="lineno">  459</span> </div>
<div class="line"><a id="l00460" name="l00460"></a><span class="lineno">  460</span>  <span class="keyword">struct </span>NodeUserData_StartCoroutine : <span class="keyword">public</span> NodeUserData_Type</div>
<div class="line"><a id="l00461" name="l00461"></a><span class="lineno">  461</span>  {</div>
<div class="line"><a id="l00462" name="l00462"></a><span class="lineno">  462</span>    <a class="code hl_struct" href="../../d6/dd9/structez_enum.htm">ezEnum&lt;ezScriptCoroutineCreationMode&gt;</a> m_CreationMode;</div>
<div class="line"><a id="l00463" name="l00463"></a><span class="lineno">  463</span> </div>
<div class="line"><a id="l00464" name="l00464"></a><span class="lineno">  464</span><span class="preprocessor">#if EZ_ENABLED(EZ_PLATFORM_32BIT)</span></div>
<div class="line"><a id="l00465" name="l00465"></a><span class="lineno">  465</span>    ezUInt32 m_uiPadding;</div>
<div class="line"><a id="l00466" name="l00466"></a><span class="lineno">  466</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00467" name="l00467"></a><span class="lineno">  467</span> </div>
<div class="line"><a id="l00468" name="l00468"></a><span class="lineno">  468</span>    <span class="keyword">static</span> <a class="code hl_struct" href="../../d4/da9/structez_result.htm">ezResult</a> Serialize(<span class="keyword">const</span> <a class="code hl_struct" href="../../d8/def/structez_visual_script_node_description.htm">ezVisualScriptNodeDescription</a>&amp; nodeDesc, <a class="code hl_class" href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a>&amp; inout_stream, ezUInt32&amp; out_uiSize, ezUInt32&amp; out_uiAlignment)</div>
<div class="line"><a id="l00469" name="l00469"></a><span class="lineno">  469</span>    {</div>
<div class="line"><a id="l00470" name="l00470"></a><span class="lineno">  470</span>      EZ_SUCCEED_OR_RETURN(NodeUserData_Type::Serialize(nodeDesc, inout_stream, out_uiSize, out_uiAlignment));</div>
<div class="line"><a id="l00471" name="l00471"></a><span class="lineno">  471</span> </div>
<div class="line"><a id="l00472" name="l00472"></a><span class="lineno">  472</span>      <a class="code hl_struct" href="../../d6/dd9/structez_enum.htm">ezEnum&lt;ezScriptCoroutineCreationMode&gt;</a> creationMode = <span class="keyword">static_cast&lt;</span><a class="code hl_enumeration" href="../../d1/d7c/structez_script_coroutine_creation_mode.htm#a2cb6eac13e35184e2fd8e0d2d7d808a4">ezScriptCoroutineCreationMode::Enum</a><span class="keyword">&gt;</span>(nodeDesc.m_Value.<a class="code hl_function" href="../../de/de6/classez_variant.htm#a6e809b1d790d0cc9e65b390f1007a984">Get</a>&lt;ezInt64&gt;());</div>
<div class="line"><a id="l00473" name="l00473"></a><span class="lineno">  473</span>      inout_stream &lt;&lt; creationMode;</div>
<div class="line"><a id="l00474" name="l00474"></a><span class="lineno">  474</span> </div>
<div class="line"><a id="l00475" name="l00475"></a><span class="lineno">  475</span>      out_uiSize = <span class="keyword">sizeof</span>(NodeUserData_StartCoroutine);</div>
<div class="line"><a id="l00476" name="l00476"></a><span class="lineno">  476</span>      out_uiAlignment = GetUserDataAlignment&lt;NodeUserData_StartCoroutine&gt;();</div>
<div class="line"><a id="l00477" name="l00477"></a><span class="lineno">  477</span>      <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a id="l00478" name="l00478"></a><span class="lineno">  478</span>    }</div>
<div class="line"><a id="l00479" name="l00479"></a><span class="lineno">  479</span> </div>
<div class="line"><a id="l00480" name="l00480"></a><span class="lineno">  480</span>    <span class="keyword">static</span> <a class="code hl_struct" href="../../d4/da9/structez_result.htm">ezResult</a> Deserialize(<a class="code hl_struct" href="../../d5/d20/structez_visual_script_graph_description_1_1_node.htm">ezVisualScriptGraphDescription::Node</a>&amp; ref_node, <a class="code hl_class" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a>&amp; inout_stream, ezUInt8*&amp; inout_pAdditionalData)</div>
<div class="line"><a id="l00481" name="l00481"></a><span class="lineno">  481</span>    {</div>
<div class="line"><a id="l00482" name="l00482"></a><span class="lineno">  482</span>      <span class="keyword">auto</span>&amp; userData = ref_node.InitUserData&lt;NodeUserData_StartCoroutine&gt;(inout_pAdditionalData);</div>
<div class="line"><a id="l00483" name="l00483"></a><span class="lineno">  483</span>      EZ_SUCCEED_OR_RETURN(ReadType(inout_stream, userData.m_pType));</div>
<div class="line"><a id="l00484" name="l00484"></a><span class="lineno">  484</span> </div>
<div class="line"><a id="l00485" name="l00485"></a><span class="lineno">  485</span>      inout_stream &gt;&gt; userData.m_CreationMode;</div>
<div class="line"><a id="l00486" name="l00486"></a><span class="lineno">  486</span> </div>
<div class="line"><a id="l00487" name="l00487"></a><span class="lineno">  487</span>      <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a id="l00488" name="l00488"></a><span class="lineno">  488</span>    }</div>
<div class="line"><a id="l00489" name="l00489"></a><span class="lineno">  489</span> </div>
<div class="line"><a id="l00490" name="l00490"></a><span class="lineno">  490</span>    <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../d7/d1a/namespaceez_conversion_utils.htm#a53c566e49fa9fd25bfd321812459657e">ToString</a>(<span class="keyword">const</span> <a class="code hl_struct" href="../../d8/def/structez_visual_script_node_description.htm">ezVisualScriptNodeDescription</a>&amp; nodeDesc, <a class="code hl_class" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>&amp; out_sResult)</div>
<div class="line"><a id="l00491" name="l00491"></a><span class="lineno">  491</span>    {</div>
<div class="line"><a id="l00492" name="l00492"></a><span class="lineno">  492</span>      NodeUserData_Type::ToString(nodeDesc, out_sResult);</div>
<div class="line"><a id="l00493" name="l00493"></a><span class="lineno">  493</span> </div>
<div class="line"><a id="l00494" name="l00494"></a><span class="lineno">  494</span>      <a class="code hl_class" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a> sCreationMode;</div>
<div class="line"><a id="l00495" name="l00495"></a><span class="lineno">  495</span>      <a class="code hl_function" href="../../d3/da6/classez_reflection_utils.htm#ad0e3f65598da517c28893964a2af97c8">ezReflectionUtils::EnumerationToString</a>(ezGetStaticRTTI&lt;ezScriptCoroutineCreationMode&gt;(), nodeDesc.m_Value.<a class="code hl_function" href="../../de/de6/classez_variant.htm#a6e809b1d790d0cc9e65b390f1007a984">Get</a>&lt;ezInt64&gt;(), sCreationMode, ezReflectionUtils::EnumConversionMode::ValueNameOnly);</div>
<div class="line"><a id="l00496" name="l00496"></a><span class="lineno">  496</span> </div>
<div class="line"><a id="l00497" name="l00497"></a><span class="lineno">  497</span>      out_sResult.<a class="code hl_function" href="../../d3/d88/classez_string_builder.htm#a605f325ea4c9c3242454a16657e24ef7">Append</a>(<span class="stringliteral">&quot; &quot;</span>, sCreationMode);</div>
<div class="line"><a id="l00498" name="l00498"></a><span class="lineno">  498</span>    }</div>
<div class="line"><a id="l00499" name="l00499"></a><span class="lineno">  499</span>  };</div>
<div class="line"><a id="l00500" name="l00500"></a><span class="lineno">  500</span> </div>
<div class="line"><a id="l00501" name="l00501"></a><span class="lineno">  501</span>  <span class="keyword">static_assert</span>(<span class="keyword">sizeof</span>(NodeUserData_StartCoroutine) == 16);</div>
<div class="line"><a id="l00502" name="l00502"></a><span class="lineno">  502</span>  <span class="keyword">static_assert</span>(GetUserDataAlignment&lt;NodeUserData_StartCoroutine&gt;() == 8);</div>
<div class="line"><a id="l00503" name="l00503"></a><span class="lineno">  503</span> </div>
<div class="line"><a id="l00505" name="l00505"></a><span class="lineno">  505</span> </div>
<div class="line"><a id="l00506" name="l00506"></a><span class="lineno">  506</span>  <span class="keyword">struct </span>UserDataContext</div>
<div class="line"><a id="l00507" name="l00507"></a><span class="lineno">  507</span>  {</div>
<div class="line"><a id="l00508" name="l00508"></a><span class="lineno">  508</span>    SerializeFunction m_SerializeFunc = <span class="keyword">nullptr</span>;</div>
<div class="line"><a id="l00509" name="l00509"></a><span class="lineno">  509</span>    DeserializeFunction m_DeserializeFunc = <span class="keyword">nullptr</span>;</div>
<div class="line"><a id="l00510" name="l00510"></a><span class="lineno">  510</span>    ToStringFunction m_ToStringFunc = <span class="keyword">nullptr</span>;</div>
<div class="line"><a id="l00511" name="l00511"></a><span class="lineno">  511</span>  };</div>
<div class="line"><a id="l00512" name="l00512"></a><span class="lineno">  512</span> </div>
<div class="line"><a id="l00513" name="l00513"></a><span class="lineno">  513</span>  <span class="keyword">inline</span> UserDataContext s_TypeToUserDataContexts[] = {</div>
<div class="line"><a id="l00514" name="l00514"></a><span class="lineno">  514</span>    {},                                           <span class="comment">// Invalid,</span></div>
<div class="line"><a id="l00515" name="l00515"></a><span class="lineno">  515</span>    {},                                           <span class="comment">// EntryCall,</span></div>
<div class="line"><a id="l00516" name="l00516"></a><span class="lineno">  516</span>    {},                                           <span class="comment">// EntryCall_Coroutine,</span></div>
<div class="line"><a id="l00517" name="l00517"></a><span class="lineno">  517</span>    {&amp;NodeUserData_TypeAndProperties::Serialize,</div>
<div class="line"><a id="l00518" name="l00518"></a><span class="lineno">  518</span>      &amp;NodeUserData_TypeAndProperties::Deserialize,</div>
<div class="line"><a id="l00519" name="l00519"></a><span class="lineno">  519</span>      &amp;NodeUserData_TypeAndProperties::ToString}, <span class="comment">// MessageHandler,</span></div>
<div class="line"><a id="l00520" name="l00520"></a><span class="lineno">  520</span>    {&amp;NodeUserData_TypeAndProperties::Serialize,</div>
<div class="line"><a id="l00521" name="l00521"></a><span class="lineno">  521</span>      &amp;NodeUserData_TypeAndProperties::Deserialize,</div>
<div class="line"><a id="l00522" name="l00522"></a><span class="lineno">  522</span>      &amp;NodeUserData_TypeAndProperties::ToString}, <span class="comment">// MessageHandler_Coroutine,</span></div>
<div class="line"><a id="l00523" name="l00523"></a><span class="lineno">  523</span>    {&amp;NodeUserData_TypeAndFunction::Serialize,</div>
<div class="line"><a id="l00524" name="l00524"></a><span class="lineno">  524</span>      &amp;NodeUserData_TypeAndFunction::Deserialize,</div>
<div class="line"><a id="l00525" name="l00525"></a><span class="lineno">  525</span>      &amp;NodeUserData_TypeAndFunction::ToString},   <span class="comment">// ReflectedFunction,</span></div>
<div class="line"><a id="l00526" name="l00526"></a><span class="lineno">  526</span>    {&amp;NodeUserData_TypeAndProperty::Serialize,</div>
<div class="line"><a id="l00527" name="l00527"></a><span class="lineno">  527</span>      &amp;NodeUserData_TypeAndProperty::Deserialize,</div>
<div class="line"><a id="l00528" name="l00528"></a><span class="lineno">  528</span>      &amp;NodeUserData_TypeAndProperty::ToString},   <span class="comment">// GetReflectedProperty,</span></div>
<div class="line"><a id="l00529" name="l00529"></a><span class="lineno">  529</span>    {&amp;NodeUserData_TypeAndProperty::Serialize,</div>
<div class="line"><a id="l00530" name="l00530"></a><span class="lineno">  530</span>      &amp;NodeUserData_TypeAndProperty::Deserialize,</div>
<div class="line"><a id="l00531" name="l00531"></a><span class="lineno">  531</span>      &amp;NodeUserData_TypeAndProperty::ToString},   <span class="comment">// SetReflectedProperty,</span></div>
<div class="line"><a id="l00532" name="l00532"></a><span class="lineno">  532</span>    {&amp;NodeUserData_TypeAndFunction::Serialize,</div>
<div class="line"><a id="l00533" name="l00533"></a><span class="lineno">  533</span>      &amp;NodeUserData_TypeAndFunction::Deserialize,</div>
<div class="line"><a id="l00534" name="l00534"></a><span class="lineno">  534</span>      &amp;NodeUserData_TypeAndFunction::ToString},   <span class="comment">// InplaceCoroutine,</span></div>
<div class="line"><a id="l00535" name="l00535"></a><span class="lineno">  535</span>    {},                                           <span class="comment">// GetScriptOwner,</span></div>
<div class="line"><a id="l00536" name="l00536"></a><span class="lineno">  536</span>    {&amp;NodeUserData_TypeAndProperties::Serialize,</div>
<div class="line"><a id="l00537" name="l00537"></a><span class="lineno">  537</span>      &amp;NodeUserData_TypeAndProperties::Deserialize,</div>
<div class="line"><a id="l00538" name="l00538"></a><span class="lineno">  538</span>      &amp;NodeUserData_TypeAndProperties::ToString}, <span class="comment">// SendMessage,</span></div>
<div class="line"><a id="l00539" name="l00539"></a><span class="lineno">  539</span> </div>
<div class="line"><a id="l00540" name="l00540"></a><span class="lineno">  540</span>    {},                                           <span class="comment">// FirstBuiltin,</span></div>
<div class="line"><a id="l00541" name="l00541"></a><span class="lineno">  541</span> </div>
<div class="line"><a id="l00542" name="l00542"></a><span class="lineno">  542</span>    {},                                           <span class="comment">// Builtin_Constant,</span></div>
<div class="line"><a id="l00543" name="l00543"></a><span class="lineno">  543</span>    {},                                           <span class="comment">// Builtin_GetVariable,</span></div>
<div class="line"><a id="l00544" name="l00544"></a><span class="lineno">  544</span>    {},                                           <span class="comment">// Builtin_SetVariable,</span></div>
<div class="line"><a id="l00545" name="l00545"></a><span class="lineno">  545</span>    {},                                           <span class="comment">// Builtin_IncVariable,</span></div>
<div class="line"><a id="l00546" name="l00546"></a><span class="lineno">  546</span>    {},                                           <span class="comment">// Builtin_DecVariable,</span></div>
<div class="line"><a id="l00547" name="l00547"></a><span class="lineno">  547</span>    {},                                           <span class="comment">// Builtin_TempVariable,</span></div>
<div class="line"><a id="l00548" name="l00548"></a><span class="lineno">  548</span> </div>
<div class="line"><a id="l00549" name="l00549"></a><span class="lineno">  549</span>    {},                                           <span class="comment">// Builtin_Branch,</span></div>
<div class="line"><a id="l00550" name="l00550"></a><span class="lineno">  550</span>    {&amp;NodeUserData_Switch::Serialize,</div>
<div class="line"><a id="l00551" name="l00551"></a><span class="lineno">  551</span>      &amp;NodeUserData_Switch::Deserialize,</div>
<div class="line"><a id="l00552" name="l00552"></a><span class="lineno">  552</span>      &amp;NodeUserData_Switch::ToString},            <span class="comment">// Builtin_Switch,</span></div>
<div class="line"><a id="l00553" name="l00553"></a><span class="lineno">  553</span>    {},                                           <span class="comment">// Builtin_WhileLoop,</span></div>
<div class="line"><a id="l00554" name="l00554"></a><span class="lineno">  554</span>    {},                                           <span class="comment">// Builtin_ForLoop,</span></div>
<div class="line"><a id="l00555" name="l00555"></a><span class="lineno">  555</span>    {},                                           <span class="comment">// Builtin_ForEachLoop,</span></div>
<div class="line"><a id="l00556" name="l00556"></a><span class="lineno">  556</span>    {},                                           <span class="comment">// Builtin_ReverseForEachLoop,</span></div>
<div class="line"><a id="l00557" name="l00557"></a><span class="lineno">  557</span>    {},                                           <span class="comment">// Builtin_Break,</span></div>
<div class="line"><a id="l00558" name="l00558"></a><span class="lineno">  558</span>    {},                                           <span class="comment">// Builtin_Jump,</span></div>
<div class="line"><a id="l00559" name="l00559"></a><span class="lineno">  559</span> </div>
<div class="line"><a id="l00560" name="l00560"></a><span class="lineno">  560</span>    {},                                           <span class="comment">// Builtin_And,</span></div>
<div class="line"><a id="l00561" name="l00561"></a><span class="lineno">  561</span>    {},                                           <span class="comment">// Builtin_Or,</span></div>
<div class="line"><a id="l00562" name="l00562"></a><span class="lineno">  562</span>    {},                                           <span class="comment">// Builtin_Not,</span></div>
<div class="line"><a id="l00563" name="l00563"></a><span class="lineno">  563</span>    {&amp;NodeUserData_Comparison::Serialize,</div>
<div class="line"><a id="l00564" name="l00564"></a><span class="lineno">  564</span>      &amp;NodeUserData_Comparison::Deserialize,</div>
<div class="line"><a id="l00565" name="l00565"></a><span class="lineno">  565</span>      &amp;NodeUserData_Comparison::ToString},        <span class="comment">// Builtin_Compare,</span></div>
<div class="line"><a id="l00566" name="l00566"></a><span class="lineno">  566</span>    {},                                           <span class="comment">// Builtin_CompareExec,</span></div>
<div class="line"><a id="l00567" name="l00567"></a><span class="lineno">  567</span>    {},                                           <span class="comment">// Builtin_IsValid,</span></div>
<div class="line"><a id="l00568" name="l00568"></a><span class="lineno">  568</span>    {},                                           <span class="comment">// Builtin_Select,</span></div>
<div class="line"><a id="l00569" name="l00569"></a><span class="lineno">  569</span> </div>
<div class="line"><a id="l00570" name="l00570"></a><span class="lineno">  570</span>    {},                                           <span class="comment">// Builtin_Add,</span></div>
<div class="line"><a id="l00571" name="l00571"></a><span class="lineno">  571</span>    {},                                           <span class="comment">// Builtin_Subtract,</span></div>
<div class="line"><a id="l00572" name="l00572"></a><span class="lineno">  572</span>    {},                                           <span class="comment">// Builtin_Multiply,</span></div>
<div class="line"><a id="l00573" name="l00573"></a><span class="lineno">  573</span>    {},                                           <span class="comment">// Builtin_Divide,</span></div>
<div class="line"><a id="l00574" name="l00574"></a><span class="lineno">  574</span>    {&amp;NodeUserData_Expression::Serialize,</div>
<div class="line"><a id="l00575" name="l00575"></a><span class="lineno">  575</span>      &amp;NodeUserData_Expression::Deserialize,</div>
<div class="line"><a id="l00576" name="l00576"></a><span class="lineno">  576</span>      &amp;NodeUserData_Expression::ToString},        <span class="comment">// Builtin_Expression,</span></div>
<div class="line"><a id="l00577" name="l00577"></a><span class="lineno">  577</span> </div>
<div class="line"><a id="l00578" name="l00578"></a><span class="lineno">  578</span>    {},                                           <span class="comment">// Builtin_ToBool,</span></div>
<div class="line"><a id="l00579" name="l00579"></a><span class="lineno">  579</span>    {},                                           <span class="comment">// Builtin_ToByte,</span></div>
<div class="line"><a id="l00580" name="l00580"></a><span class="lineno">  580</span>    {},                                           <span class="comment">// Builtin_ToInt,</span></div>
<div class="line"><a id="l00581" name="l00581"></a><span class="lineno">  581</span>    {},                                           <span class="comment">// Builtin_ToInt64,</span></div>
<div class="line"><a id="l00582" name="l00582"></a><span class="lineno">  582</span>    {},                                           <span class="comment">// Builtin_ToFloat,</span></div>
<div class="line"><a id="l00583" name="l00583"></a><span class="lineno">  583</span>    {},                                           <span class="comment">// Builtin_ToDouble,</span></div>
<div class="line"><a id="l00584" name="l00584"></a><span class="lineno">  584</span>    {},                                           <span class="comment">// Builtin_ToString,</span></div>
<div class="line"><a id="l00585" name="l00585"></a><span class="lineno">  585</span>    {},                                           <span class="comment">// Builtin_String_Format,</span></div>
<div class="line"><a id="l00586" name="l00586"></a><span class="lineno">  586</span>    {},                                           <span class="comment">// Builtin_ToHashedString,</span></div>
<div class="line"><a id="l00587" name="l00587"></a><span class="lineno">  587</span>    {},                                           <span class="comment">// Builtin_ToVariant,</span></div>
<div class="line"><a id="l00588" name="l00588"></a><span class="lineno">  588</span>    {},                                           <span class="comment">// Builtin_Variant_ConvertTo,</span></div>
<div class="line"><a id="l00589" name="l00589"></a><span class="lineno">  589</span> </div>
<div class="line"><a id="l00590" name="l00590"></a><span class="lineno">  590</span>    {},                                           <span class="comment">// Builtin_MakeArray</span></div>
<div class="line"><a id="l00591" name="l00591"></a><span class="lineno">  591</span>    {},                                           <span class="comment">// Builtin_Array_GetElement,</span></div>
<div class="line"><a id="l00592" name="l00592"></a><span class="lineno">  592</span>    {},                                           <span class="comment">// Builtin_Array_SetElement,</span></div>
<div class="line"><a id="l00593" name="l00593"></a><span class="lineno">  593</span>    {},                                           <span class="comment">// Builtin_Array_GetCount,</span></div>
<div class="line"><a id="l00594" name="l00594"></a><span class="lineno">  594</span>    {},                                           <span class="comment">// Builtin_Array_IsEmpty,</span></div>
<div class="line"><a id="l00595" name="l00595"></a><span class="lineno">  595</span>    {},                                           <span class="comment">// Builtin_Array_Clear,</span></div>
<div class="line"><a id="l00596" name="l00596"></a><span class="lineno">  596</span>    {},                                           <span class="comment">// Builtin_Array_Contains,</span></div>
<div class="line"><a id="l00597" name="l00597"></a><span class="lineno">  597</span>    {},                                           <span class="comment">// Builtin_Array_IndexOf,</span></div>
<div class="line"><a id="l00598" name="l00598"></a><span class="lineno">  598</span>    {},                                           <span class="comment">// Builtin_Array_Insert,</span></div>
<div class="line"><a id="l00599" name="l00599"></a><span class="lineno">  599</span>    {},                                           <span class="comment">// Builtin_Array_PushBack,</span></div>
<div class="line"><a id="l00600" name="l00600"></a><span class="lineno">  600</span>    {},                                           <span class="comment">// Builtin_Array_Remove,</span></div>
<div class="line"><a id="l00601" name="l00601"></a><span class="lineno">  601</span>    {},                                           <span class="comment">// Builtin_Array_RemoveAt,</span></div>
<div class="line"><a id="l00602" name="l00602"></a><span class="lineno">  602</span> </div>
<div class="line"><a id="l00603" name="l00603"></a><span class="lineno">  603</span>    {&amp;NodeUserData_Type::Serialize,</div>
<div class="line"><a id="l00604" name="l00604"></a><span class="lineno">  604</span>      &amp;NodeUserData_Type::Deserialize,</div>
<div class="line"><a id="l00605" name="l00605"></a><span class="lineno">  605</span>      &amp;NodeUserData_Type::ToString}, <span class="comment">// Builtin_TryGetComponentOfBaseType</span></div>
<div class="line"><a id="l00606" name="l00606"></a><span class="lineno">  606</span> </div>
<div class="line"><a id="l00607" name="l00607"></a><span class="lineno">  607</span>    {&amp;NodeUserData_StartCoroutine::Serialize,</div>
<div class="line"><a id="l00608" name="l00608"></a><span class="lineno">  608</span>      &amp;NodeUserData_StartCoroutine::Deserialize,</div>
<div class="line"><a id="l00609" name="l00609"></a><span class="lineno">  609</span>      &amp;NodeUserData_StartCoroutine::ToString}, <span class="comment">// Builtin_StartCoroutine,</span></div>
<div class="line"><a id="l00610" name="l00610"></a><span class="lineno">  610</span>    {},                                        <span class="comment">// Builtin_StopCoroutine,</span></div>
<div class="line"><a id="l00611" name="l00611"></a><span class="lineno">  611</span>    {},                                        <span class="comment">// Builtin_StopAllCoroutines,</span></div>
<div class="line"><a id="l00612" name="l00612"></a><span class="lineno">  612</span>    {},                                        <span class="comment">// Builtin_WaitForAll,</span></div>
<div class="line"><a id="l00613" name="l00613"></a><span class="lineno">  613</span>    {},                                        <span class="comment">// Builtin_WaitForAny,</span></div>
<div class="line"><a id="l00614" name="l00614"></a><span class="lineno">  614</span>    {},                                        <span class="comment">// Builtin_Yield,</span></div>
<div class="line"><a id="l00615" name="l00615"></a><span class="lineno">  615</span> </div>
<div class="line"><a id="l00616" name="l00616"></a><span class="lineno">  616</span>    {},                                        <span class="comment">// LastBuiltin,</span></div>
<div class="line"><a id="l00617" name="l00617"></a><span class="lineno">  617</span>  };</div>
<div class="line"><a id="l00618" name="l00618"></a><span class="lineno">  618</span> </div>
<div class="line"><a id="l00619" name="l00619"></a><span class="lineno">  619</span>  <span class="keyword">static_assert</span>(EZ_ARRAY_SIZE(s_TypeToUserDataContexts) == ezVisualScriptNodeDescription::Type::Count);</div>
<div class="line"><a id="l00620" name="l00620"></a><span class="lineno">  620</span>} <span class="comment">// namespace</span></div>
<div class="line"><a id="l00621" name="l00621"></a><span class="lineno">  621</span> </div>
<div class="line"><a id="l00622" name="l00622"></a><span class="lineno">  622</span><span class="keyword">const</span> UserDataContext&amp; GetUserDataContext(ezVisualScriptNodeDescription::Type::Enum nodeType)</div>
<div class="line"><a id="l00623" name="l00623"></a><span class="lineno">  623</span>{</div>
<div class="line"><a id="l00624" name="l00624"></a><span class="lineno">  624</span>  EZ_ASSERT_DEBUG(nodeType &gt;= 0 &amp;&amp; <span class="keyword">static_cast&lt;</span>ezUInt32<span class="keyword">&gt;</span>(nodeType) &lt; EZ_ARRAY_SIZE(s_TypeToUserDataContexts), <span class="stringliteral">&quot;Out of bounds access&quot;</span>);</div>
<div class="line"><a id="l00625" name="l00625"></a><span class="lineno">  625</span>  <span class="keywordflow">return</span> s_TypeToUserDataContexts[nodeType];</div>
<div class="line"><a id="l00626" name="l00626"></a><span class="lineno">  626</span>}</div>
<div class="ttc" id="aclassez_abstract_function_property_htm"><div class="ttname"><a href="../../d3/d4c/classez_abstract_function_property.htm">ezAbstractFunctionProperty</a></div><div class="ttdoc">The base class for a property that represents a function.</div><div class="ttdef"><b>Definition</b> AbstractProperty.h:542</div></div>
<div class="ttc" id="aclassez_abstract_function_property_htm_a1f18213c668db11e5364fe91407cc237"><div class="ttname"><a href="../../d3/d4c/classez_abstract_function_property.htm#a1f18213c668db11e5364fe91407cc237">ezAbstractFunctionProperty::GetArgumentCount</a></div><div class="ttdeci">virtual ezUInt32 GetArgumentCount() const =0</div><div class="ttdoc">Returns the number of arguments.</div></div>
<div class="ttc" id="aclassez_abstract_property_htm"><div class="ttname"><a href="../../d6/d81/classez_abstract_property.htm">ezAbstractProperty</a></div><div class="ttdoc">This is the base interface for all properties in the reflection system. It provides enough informatio...</div><div class="ttdef"><b>Definition</b> AbstractProperty.h:152</div></div>
<div class="ttc" id="aclassez_abstract_property_htm_aaf854f28a9813d44b239d1d4a6f0765f"><div class="ttname"><a href="../../d6/d81/classez_abstract_property.htm#aaf854f28a9813d44b239d1d4a6f0765f">ezAbstractProperty::GetAttributeByType</a></div><div class="ttdeci">const Type * GetAttributeByType() const</div><div class="ttdoc">Returns the first attribute that derives from the given type, or nullptr if nothing is found.</div><div class="ttdef"><b>Definition</b> PropertyAttributes.h:942</div></div>
<div class="ttc" id="aclassez_array_base_htm_a35630a870ec53cf3b022653232a31c60"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a35630a870ec53cf3b022653232a31c60">ezArrayBase::IsEmpty</a></div><div class="ttdeci">bool IsEmpty() const</div><div class="ttdoc">Returns true, if the array does not contain any elements.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:178</div></div>
<div class="ttc" id="aclassez_array_base_htm_a51ba61fcbd2350ae8850754a41acbaa1"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a51ba61fcbd2350ae8850754a41acbaa1">ezArrayBase::GetCount</a></div><div class="ttdeci">ezUInt32 GetCount() const</div><div class="ttdoc">Returns the number of active elements in the array.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:172</div></div>
<div class="ttc" id="aclassez_array_base_htm_ad668df6ff81bdcac0bc118666d5817cf"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#ad668df6ff81bdcac0bc118666d5817cf">ezArrayBase::GetArrayPtr</a></div><div class="ttdeci">ezArrayPtr&lt; T &gt; GetArrayPtr()</div><div class="ttdoc">Returns an array pointer to the array data, or an empty array pointer if the array is empty.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:441</div></div>
<div class="ttc" id="aclassez_array_ptr_htm"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a></div><div class="ttdoc">This class encapsulates an array and it's size. It is recommended to use this class instead of plain ...</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:41</div></div>
<div class="ttc" id="aclassez_blob_ptr_htm_a36043e87f673094c53d4d0f7e8e8a970"><div class="ttname"><a href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">ezBlobPtr::GetCount</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezUInt64 GetCount() const</div><div class="ttdoc">Returns the number of elements in the array.</div><div class="ttdef"><b>Definition</b> Blob.h:109</div></div>
<div class="ttc" id="aclassez_dynamic_array_htm"><div class="ttname"><a href="../../d2/d4f/classez_dynamic_array.htm">ezDynamicArray&lt; ezVariant &gt;</a></div></div>
<div class="ttc" id="aclassez_expression_byte_code_htm"><div class="ttname"><a href="../../da/d22/classez_expression_byte_code.htm">ezExpressionByteCode</a></div><div class="ttdef"><b>Definition</b> ExpressionByteCode.h:10</div></div>
<div class="ttc" id="aclassez_hashed_string_htm"><div class="ttname"><a href="../../de/dce/classez_hashed_string.htm">ezHashedString</a></div><div class="ttdoc">This class is optimized to take nearly no memory (sizeof(void*)) and to allow very fast checks whethe...</div><div class="ttdef"><b>Definition</b> HashedString.h:25</div></div>
<div class="ttc" id="aclassez_hashed_string_htm_abbc9fe061e32ddeb9166e7d4226c25b6"><div class="ttname"><a href="../../de/dce/classez_hashed_string.htm#abbc9fe061e32ddeb9166e7d4226c25b6">ezHashedString::IsEmpty</a></div><div class="ttdeci">bool IsEmpty() const</div><div class="ttdoc">Returns whether the string is empty.</div><div class="ttdef"><b>Definition</b> HashedString.cpp:121</div></div>
<div class="ttc" id="aclassez_hybrid_array_htm"><div class="ttname"><a href="../../d8/deb/classez_hybrid_array.htm">ezHybridArray</a></div><div class="ttdoc">A hybrid array uses in-place storage to handle the first few elements without any allocation....</div><div class="ttdef"><b>Definition</b> HybridArray.h:12</div></div>
<div class="ttc" id="aclassez_log_htm_ae5b1ee0c969668bdac113be5f4b15fa3"><div class="ttname"><a href="../../dc/d9e/classez_log.htm#ae5b1ee0c969668bdac113be5f4b15fa3">ezLog::Error</a></div><div class="ttdeci">static void Error(ezLogInterface *pInterface, const ezFormatString &amp;string)</div><div class="ttdoc">An error that needs to be fixed as soon as possible.</div><div class="ttdef"><b>Definition</b> Log.cpp:358</div></div>
<div class="ttc" id="aclassez_r_t_t_i_htm"><div class="ttname"><a href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a></div><div class="ttdoc">This class holds information about reflected types. Each instance represents one type that is known t...</div><div class="ttdef"><b>Definition</b> RTTI.h:30</div></div>
<div class="ttc" id="aclassez_r_t_t_i_htm_abd87c140d164747f60c74a0f9fecc321"><div class="ttname"><a href="../../dd/d19/classez_r_t_t_i.htm#abd87c140d164747f60c74a0f9fecc321">ezRTTI::FindTypeByName</a></div><div class="ttdeci">static const ezRTTI * FindTypeByName(ezStringView sName)</div><div class="ttdoc">Searches all ezRTTI instances for the one with the given name, or nullptr if no such type exists.</div><div class="ttdef"><b>Definition</b> RTTI.cpp:271</div></div>
<div class="ttc" id="aclassez_reflection_utils_htm_ad0e3f65598da517c28893964a2af97c8"><div class="ttname"><a href="../../d3/da6/classez_reflection_utils.htm#ad0e3f65598da517c28893964a2af97c8">ezReflectionUtils::EnumerationToString</a></div><div class="ttdeci">static bool EnumerationToString(const ezRTTI *pEnumerationRtti, ezInt64 iValue, ezStringBuilder &amp;out_sOutput, ezEnum&lt; EnumConversionMode &gt; conversionMode=EnumConversionMode::Default)</div><div class="ttdoc">Converts an enum or bitfield value into its string representation.</div><div class="ttdef"><b>Definition</b> ReflectionUtils.cpp:953</div></div>
<div class="ttc" id="aclassez_scriptable_function_attribute_htm"><div class="ttname"><a href="../../d1/ddf/classez_scriptable_function_attribute.htm">ezScriptableFunctionAttribute</a></div><div class="ttdoc">Attribute to mark a function up to be exposed to the scripting system. Arguments specify the names of...</div><div class="ttdef"><b>Definition</b> PropertyAttributes.h:992</div></div>
<div class="ttc" id="aclassez_stream_reader_htm"><div class="ttname"><a href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a></div><div class="ttdoc">Interface for binary in (read) streams.</div><div class="ttdef"><b>Definition</b> Stream.h:22</div></div>
<div class="ttc" id="aclassez_stream_writer_htm"><div class="ttname"><a href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a></div><div class="ttdoc">Interface for binary out (write) streams.</div><div class="ttdef"><b>Definition</b> Stream.h:107</div></div>
<div class="ttc" id="aclassez_string_builder_htm"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></div><div class="ttdoc">ezStringBuilder is a class that is meant for creating and modifying strings.</div><div class="ttdef"><b>Definition</b> StringBuilder.h:35</div></div>
<div class="ttc" id="aclassez_string_builder_htm_a605f325ea4c9c3242454a16657e24ef7"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a605f325ea4c9c3242454a16657e24ef7">ezStringBuilder::Append</a></div><div class="ttdeci">void Append(ezUInt32 uiChar)</div><div class="ttdoc">Appends a single Utf32 character.</div><div class="ttdef"><b>Definition</b> StringBuilder_inl.h:94</div></div>
<div class="ttc" id="aclassez_variant_htm_a694f12156828e7de34c4d592ef554aef"><div class="ttname"><a href="../../de/de6/classez_variant.htm#a694f12156828e7de34c4d592ef554aef">ezVariant::IsA</a></div><div class="ttdeci">bool IsA() const</div><div class="ttdoc">Returns whether the stored type is exactly the given type.</div></div>
<div class="ttc" id="aclassez_variant_htm_a6e809b1d790d0cc9e65b390f1007a984"><div class="ttname"><a href="../../de/de6/classez_variant.htm#a6e809b1d790d0cc9e65b390f1007a984">ezVariant::Get</a></div><div class="ttdeci">const T &amp; Get() const</div><div class="ttdoc">Returns the variants value as the provided type.</div></div>
<div class="ttc" id="anamespaceez_conversion_utils_htm_a53c566e49fa9fd25bfd321812459657e"><div class="ttname"><a href="../../d7/d1a/namespaceez_conversion_utils.htm#a53c566e49fa9fd25bfd321812459657e">ezConversionUtils::ToString</a></div><div class="ttdeci">EZ_ALWAYS_INLINE const ezStringBuilder &amp; ToString(bool value, ezStringBuilder &amp;out_sResult)</div><div class="ttdoc">Converts a bool to a string.</div><div class="ttdef"><b>Definition</b> ConversionUtils.h:176</div></div>
<div class="ttc" id="anamespaceez_math_htm_a6a78ee109368657dafd74a19d26d6b7c"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a6a78ee109368657dafd74a19d26d6b7c">ezMath::CountBits</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezUInt32 CountBits(ezUInt32 value)</div><div class="ttdoc">Returns the number of bits set.</div><div class="ttdef"><b>Definition</b> Math_inl.h:186</div></div>
<div class="ttc" id="astructez_enum_htm"><div class="ttname"><a href="../../d6/dd9/structez_enum.htm">ezEnum</a></div><div class="ttdoc">A custom enum implementation that allows to define the underlying storage type to control its memory ...</div><div class="ttdef"><b>Definition</b> Enum.h:37</div></div>
<div class="ttc" id="astructez_result_htm"><div class="ttname"><a href="../../d4/da9/structez_result.htm">ezResult</a></div><div class="ttdoc">Default enum for returning failure or success, instead of using a bool.</div><div class="ttdef"><b>Definition</b> Types.h:54</div></div>
<div class="ttc" id="astructez_script_coroutine_creation_mode_htm_a2cb6eac13e35184e2fd8e0d2d7d808a4"><div class="ttname"><a href="../../d1/d7c/structez_script_coroutine_creation_mode.htm#a2cb6eac13e35184e2fd8e0d2d7d808a4">ezScriptCoroutineCreationMode::Enum</a></div><div class="ttdeci">Enum</div><div class="ttdef"><b>Definition</b> ScriptCoroutine.h:122</div></div>
<div class="ttc" id="astructez_visual_script_graph_description_1_1_node_htm"><div class="ttname"><a href="../../d5/d20/structez_visual_script_graph_description_1_1_node.htm">ezVisualScriptGraphDescription::Node</a></div><div class="ttdef"><b>Definition</b> VisualScript.h:188</div></div>
<div class="ttc" id="astructez_visual_script_node_description_htm"><div class="ttname"><a href="../../d8/def/structez_visual_script_node_description.htm">ezVisualScriptNodeDescription</a></div><div class="ttdef"><b>Definition</b> VisualScript.h:10</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_103378c88ff4c88de6bfabe12da9ec96.htm">EnginePlugins</a></li><li class="navelem"><a class="el" href="../../dir_fd6ca2c49d94c8469eba18ba47e441f3.htm">VisualScriptPlugin</a></li><li class="navelem"><a class="el" href="../../dir_a5717271583c0b9d0429740eb2ab8606.htm">Runtime</a></li><li class="navelem"><b>VisualScriptNodeUserData.h</b></li>
    <li class="footer">Generated on Fri Jul 11 2025 12:17:56 for ezEngine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
