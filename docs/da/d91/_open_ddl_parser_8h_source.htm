<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/IO/OpenDdlParser.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 22.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('da/d91/_open_ddl_parser_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">OpenDdlParser.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;Foundation/Basics.h&gt;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;Foundation/Containers/DynamicArray.h&gt;</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;Foundation/Containers/HybridArray.h&gt;</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;Foundation/IO/Stream.h&gt;</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160; </div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="keyword">class </span><a class="code" href="../../d2/d9e/classez_log_interface.htm">ezLogInterface</a>;</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160; </div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">enum class</span> ezOpenDdlPrimitiveType</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;{</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;  Bool,</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;  Int8,</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;  Int16,</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;  Int32,</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;  Int64,</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;  UInt8,</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;  UInt16,</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;  UInt32,</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;  UInt64,</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;  <span class="comment">// Half, // Currently not supported</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;  Float,</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;  Double,</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;  String,</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;  <span class="comment">// Ref, // Currently not supported</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;  <span class="comment">// Type // Currently not supported</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  Custom</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;};</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160; </div>
<div class="line"><a name="l00034"></a><span class="lineno"><a class="line" href="../../d8/d21/classez_open_ddl_parser.htm">   34</a></span>&#160;<span class="keyword">class </span>EZ_FOUNDATION_DLL <a class="code" href="../../d8/d21/classez_open_ddl_parser.htm">ezOpenDdlParser</a></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;{</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;  <a class="code" href="../../d8/d21/classez_open_ddl_parser.htm">ezOpenDdlParser</a>();</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  <span class="keyword">virtual</span> ~<a class="code" href="../../d8/d21/classez_open_ddl_parser.htm">ezOpenDdlParser</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160; </div>
<div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="../../d8/d21/classez_open_ddl_parser.htm#aa57e82c0e1623848152d65efa38ad378">   41</a></span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d8/d21/classez_open_ddl_parser.htm#aa57e82c0e1623848152d65efa38ad378">HadFatalParsingError</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_bHadFatalParsingError; } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160; </div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00045"></a><span class="lineno"><a class="line" href="../../d8/d21/classez_open_ddl_parser.htm#a0eee36c22e3458505b4cd58e64ce9f6f">   45</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d8/d21/classez_open_ddl_parser.htm#a0eee36c22e3458505b4cd58e64ce9f6f">SetLogInterface</a>(<a class="code" href="../../d2/d9e/classez_log_interface.htm">ezLogInterface</a>* pLog) { m_pLogInterface = pLog; }</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160; </div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  <span class="keywordtype">void</span> SetCacheSize(ezUInt32 uiSizeInKB);</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160; </div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  <span class="keywordtype">void</span> SetInputStream(<a class="code" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a>&amp; stream, ezUInt32 uiFirstLineOffset = 0); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160; </div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;  <span class="keywordtype">bool</span> ContinueParsing(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160; </div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> ParseAll(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160; </div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;  <span class="keywordtype">void</span> SkipRestOfObject();</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160; </div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;  <span class="keywordtype">void</span> StopParsing();</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160; </div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;  <span class="keywordtype">void</span> ParsingError(<span class="keyword">const</span> <span class="keywordtype">char</span>* szMessage, <span class="keywordtype">bool</span> bFatal);</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160; </div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;  <a class="code" href="../../d2/d9e/classez_log_interface.htm">ezLogInterface</a>* m_pLogInterface;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160; </div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="../../d8/d21/classez_open_ddl_parser.htm#adf261f5a3b6f7f96c9cac396fd8909b8">   83</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../d8/d21/classez_open_ddl_parser.htm#adf261f5a3b6f7f96c9cac396fd8909b8">OnParsingError</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szMessage, <span class="keywordtype">bool</span> bFatal, ezUInt32 uiLine, ezUInt32 uiColumn) {}</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160; </div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> OnBeginObject(<span class="keyword">const</span> <span class="keywordtype">char</span>* szType, <span class="keyword">const</span> <span class="keywordtype">char</span>* szName, <span class="keywordtype">bool</span> bGlobalName) = 0;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160; </div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> OnEndObject() = 0;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160; </div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> OnBeginPrimitiveList(ezOpenDdlPrimitiveType type, <span class="keyword">const</span> <span class="keywordtype">char</span>* szName, <span class="keywordtype">bool</span> bGlobalName) = 0;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160; </div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> OnEndPrimitiveList() = 0;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160; </div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  <span class="comment">// virtual void OnBeginPrimitiveArrayList(ezOpenDdlPrimitiveType type, ezUInt32 uiGroupSize) = 0;</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;  <span class="comment">// virtual void OnEndPrimitiveArrayList() = 0;</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160; </div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> OnPrimitiveBool(ezUInt32 count, <span class="keyword">const</span> <span class="keywordtype">bool</span>* pData, <span class="keywordtype">bool</span> bThisIsAll) = 0;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160; </div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> OnPrimitiveInt8(ezUInt32 count, <span class="keyword">const</span> ezInt8* pData, <span class="keywordtype">bool</span> bThisIsAll) = 0;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> OnPrimitiveInt16(ezUInt32 count, <span class="keyword">const</span> ezInt16* pData, <span class="keywordtype">bool</span> bThisIsAll) = 0;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> OnPrimitiveInt32(ezUInt32 count, <span class="keyword">const</span> ezInt32* pData, <span class="keywordtype">bool</span> bThisIsAll) = 0;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> OnPrimitiveInt64(ezUInt32 count, <span class="keyword">const</span> ezInt64* pData, <span class="keywordtype">bool</span> bThisIsAll) = 0;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160; </div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> OnPrimitiveUInt8(ezUInt32 count, <span class="keyword">const</span> ezUInt8* pData, <span class="keywordtype">bool</span> bThisIsAll) = 0;</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> OnPrimitiveUInt16(ezUInt32 count, <span class="keyword">const</span> ezUInt16* pData, <span class="keywordtype">bool</span> bThisIsAll) = 0;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> OnPrimitiveUInt32(ezUInt32 count, <span class="keyword">const</span> ezUInt32* pData, <span class="keywordtype">bool</span> bThisIsAll) = 0;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> OnPrimitiveUInt64(ezUInt32 count, <span class="keyword">const</span> ezUInt64* pData, <span class="keywordtype">bool</span> bThisIsAll) = 0;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160; </div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> OnPrimitiveFloat(ezUInt32 count, <span class="keyword">const</span> <span class="keywordtype">float</span>* pData, <span class="keywordtype">bool</span> bThisIsAll) = 0;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> OnPrimitiveDouble(ezUInt32 count, <span class="keyword">const</span> <span class="keywordtype">double</span>* pData, <span class="keywordtype">bool</span> bThisIsAll) = 0;</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160; </div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> OnPrimitiveString(ezUInt32 count, <span class="keyword">const</span> <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a>* pData, <span class="keywordtype">bool</span> bThisIsAll) = 0;</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160; </div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;  <span class="keyword">enum</span> State</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;  {</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    Finished,</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    Idle,</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    ReadingBool,</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    ReadingInt8,</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    ReadingInt16,</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    ReadingInt32,</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    ReadingInt64,</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    ReadingUInt8,</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    ReadingUInt16,</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    ReadingUInt32,</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    ReadingUInt64,</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    ReadingFloat,</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    ReadingDouble,</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    ReadingString,</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;  };</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160; </div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;  <span class="keyword">struct </span>DdlState</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;  {</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    DdlState()</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;      : m_State(Idle)</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    {</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    }</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    DdlState(State s)</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;      : m_State(s)</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    {</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    }</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160; </div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    State m_State;</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;  };</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160; </div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;  <span class="keywordtype">void</span> ReadNextByte();</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;  <span class="keywordtype">bool</span> ReadCharacter();</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;  <span class="keywordtype">bool</span> ReadCharacterSkipComments();</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;  <span class="keywordtype">void</span> SkipWhitespace();</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;  <span class="keywordtype">void</span> ContinueIdle();</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;  <span class="keywordtype">void</span> ReadIdentifier(ezUInt8* szString, ezUInt32&amp; count);</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;  <span class="keywordtype">void</span> ReadString();</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;  <span class="keywordtype">void</span> ReadWord();</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;  ezUInt64 ReadDecimalLiteral();</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;  <span class="keywordtype">void</span> PurgeCachedPrimitives(<span class="keywordtype">bool</span> bThisIsAll);</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;  <span class="keywordtype">bool</span> ContinuePrimitiveList();</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;  <span class="keywordtype">void</span> ContinueString();</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;  <span class="keywordtype">void</span> SkipString();</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;  <span class="keywordtype">void</span> ContinueBool();</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;  <span class="keywordtype">void</span> ContinueInt();</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;  <span class="keywordtype">void</span> ContinueFloat();</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160; </div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;  <span class="keywordtype">void</span> ReadDecimalFloat();</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;  <span class="keywordtype">void</span> ReadHexString();</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160; </div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;  <a class="code" href="../../d8/deb/classez_hybrid_array.htm">ezHybridArray&lt;DdlState, 32&gt;</a> m_StateStack;</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;  <a class="code" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a>* m_pInput;</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;  <a class="code" href="../../d2/d4f/classez_dynamic_array.htm">ezDynamicArray&lt;ezUInt8&gt;</a> m_Cache;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160; </div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;  <span class="keyword">static</span> <span class="keyword">const</span> ezUInt32 s_uiMaxIdentifierLength = 64;</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160; </div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;  ezUInt8 m_uiCurByte;</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;  ezUInt8 m_uiNextByte;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;  ezUInt32 m_uiCurLine;</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;  ezUInt32 m_uiCurColumn;</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;  <span class="keywordtype">bool</span> m_bSkippingMode;</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;  <span class="keywordtype">bool</span> m_bHadFatalParsingError;</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;  ezUInt8 m_szIdentifierType[s_uiMaxIdentifierLength];</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;  ezUInt8 m_szIdentifierName[s_uiMaxIdentifierLength];</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;  <a class="code" href="../../d2/d4f/classez_dynamic_array.htm">ezDynamicArray&lt;ezUInt8&gt;</a> m_TempString;</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;  ezUInt32 m_uiTempStringLength;</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160; </div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;  ezUInt32 m_uiNumCachedPrimitives;</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;  <span class="keywordtype">bool</span>* m_pBoolCache;</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;  ezInt8* m_pInt8Cache;</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;  ezInt16* m_pInt16Cache;</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;  ezInt32* m_pInt32Cache;</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;  ezInt64* m_pInt64Cache;</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;  ezUInt8* m_pUInt8Cache;</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;  ezUInt16* m_pUInt16Cache;</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;  ezUInt32* m_pUInt32Cache;</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;  ezUInt64* m_pUInt64Cache;</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;  <span class="keywordtype">float</span>* m_pFloatCache;</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;  <span class="keywordtype">double</span>* m_pDoubleCache;</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;};</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="astructez_result_htm"><div class="ttname"><a href="../../d4/da9/structez_result.htm">ezResult</a></div><div class="ttdoc">Default enum for returning failure or success, instead of using a bool.</div><div class="ttdef"><b>Definition:</b> Types.h:50</div></div>
<div class="ttc" id="aclassez_open_ddl_parser_htm"><div class="ttname"><a href="../../d8/d21/classez_open_ddl_parser.htm">ezOpenDdlParser</a></div><div class="ttdoc">A low level parser for the OpenDDL format. It can incrementally parse the structure,...</div><div class="ttdef"><b>Definition:</b> OpenDdlParser.h:34</div></div>
<div class="ttc" id="aclassez_stream_reader_htm"><div class="ttname"><a href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a></div><div class="ttdoc">Interface for binary in (read) streams.</div><div class="ttdef"><b>Definition:</b> Stream.h:20</div></div>
<div class="ttc" id="aclassez_open_ddl_parser_htm_aa57e82c0e1623848152d65efa38ad378"><div class="ttname"><a href="../../d8/d21/classez_open_ddl_parser.htm#aa57e82c0e1623848152d65efa38ad378">ezOpenDdlParser::HadFatalParsingError</a></div><div class="ttdeci">bool HadFatalParsingError() const</div><div class="ttdoc">Whether an error occured during parsing that resulted in cancelation of further parsing.</div><div class="ttdef"><b>Definition:</b> OpenDdlParser.h:41</div></div>
<div class="ttc" id="aclassez_log_interface_htm"><div class="ttname"><a href="../../d2/d9e/classez_log_interface.htm">ezLogInterface</a></div><div class="ttdoc">Base class for all logging classes.</div><div class="ttdef"><b>Definition:</b> Log.h:76</div></div>
<div class="ttc" id="aclassez_dynamic_array_htm"><div class="ttname"><a href="../../d2/d4f/classez_dynamic_array.htm">ezDynamicArray&lt; ezUInt8 &gt;</a></div></div>
<div class="ttc" id="astructez_string_view_htm"><div class="ttname"><a href="../../de/db8/structez_string_view.htm">ezStringView</a></div><div class="ttdoc">ezStringView represent a read-only sub-string of a larger string, as it can store a dedicated string ...</div><div class="ttdef"><b>Definition:</b> StringView.h:23</div></div>
<div class="ttc" id="aclassez_hybrid_array_htm"><div class="ttname"><a href="../../d8/deb/classez_hybrid_array.htm">ezHybridArray&lt; DdlState, 32 &gt;</a></div></div>
<div class="ttc" id="aclassez_open_ddl_parser_htm_a0eee36c22e3458505b4cd58e64ce9f6f"><div class="ttname"><a href="../../d8/d21/classez_open_ddl_parser.htm#a0eee36c22e3458505b4cd58e64ce9f6f">ezOpenDdlParser::SetLogInterface</a></div><div class="ttdeci">void SetLogInterface(ezLogInterface *pLog)</div><div class="ttdoc">Sets an ezLogInterface through which errors and warnings are reported.</div><div class="ttdef"><b>Definition:</b> OpenDdlParser.h:45</div></div>
<div class="ttc" id="aclassez_open_ddl_parser_htm_adf261f5a3b6f7f96c9cac396fd8909b8"><div class="ttname"><a href="../../d8/d21/classez_open_ddl_parser.htm#adf261f5a3b6f7f96c9cac396fd8909b8">ezOpenDdlParser::OnParsingError</a></div><div class="ttdeci">virtual void OnParsingError(const char *szMessage, bool bFatal, ezUInt32 uiLine, ezUInt32 uiColumn)</div><div class="ttdoc">Called when something unexpected is encountered in the document.</div><div class="ttdef"><b>Definition:</b> OpenDdlParser.h:83</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_64fdcb4094ee5a27b054d4fa23e28e01.htm">IO</a></li><li class="navelem"><b>OpenDdlParser.h</b></li>
    <li class="footer">Generated on Fri Nov 18 2022 14:47:59 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
