<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: ezInitContextVulkan Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">ezEngine<span id="projectnumber">&#160;Release 25.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('da/d70/classez_init_context_vulkan.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="../../da/d2c/classez_init_context_vulkan-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">ezInitContextVulkan Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p>Thread-safe context for initializing resources. Records a command buffer that transitions all newly created resources into their initial state.  
 <a href="../../da/d70/classez_init_context_vulkan.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d8/d53/_init_context_8h_source.htm">InitContext.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a9104d9794cc646939db0e413651f32ee" id="r_a9104d9794cc646939db0e413651f32ee"><td class="memItemLeft" align="right" valign="top"><a id="a9104d9794cc646939db0e413651f32ee" name="a9104d9794cc646939db0e413651f32ee"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>ezInitContextVulkan</b> (<a class="el" href="../../d1/d02/classez_g_a_l_device_vulkan.htm">ezGALDeviceVulkan</a> *pDevice)</td></tr>
<tr class="separator:a9104d9794cc646939db0e413651f32ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b1ec34a60489ed67931a1564f2242e9" id="r_a2b1ec34a60489ed67931a1564f2242e9"><td class="memItemLeft" align="right" valign="top"><a id="a2b1ec34a60489ed67931a1564f2242e9" name="a2b1ec34a60489ed67931a1564f2242e9"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>AfterBeginFrame</b> ()</td></tr>
<tr class="separator:a2b1ec34a60489ed67931a1564f2242e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d776bcae37899c01a81061882212894" id="r_a1d776bcae37899c01a81061882212894"><td class="memItemLeft" align="right" valign="top"><a id="a1d776bcae37899c01a81061882212894" name="a1d776bcae37899c01a81061882212894"></a>
<a class="el" href="../../dd/dbe/classez_mutex.htm">ezMutex</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>AccessLock</b> ()</td></tr>
<tr class="separator:a1d776bcae37899c01a81061882212894"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b8fe1efca76eaa617a28449bbcb673e" id="r_a6b8fe1efca76eaa617a28449bbcb673e"><td class="memItemLeft" align="right" valign="top"><a id="a6b8fe1efca76eaa617a28449bbcb673e" name="a6b8fe1efca76eaa617a28449bbcb673e"></a>
vk::CommandBuffer&#160;</td><td class="memItemRight" valign="bottom"><b>GetFinishedCommandBuffer</b> ()</td></tr>
<tr class="memdesc:a6b8fe1efca76eaa617a28449bbcb673e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a finished command buffer of all background loading up to this point. The command buffer is already ended and marked to be reclaimed so the only thing done on it should be to submit it. <br /></td></tr>
<tr class="separator:a6b8fe1efca76eaa617a28449bbcb673e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acfb611bc0c1abde7b18bdc5cebb7298b" id="r_acfb611bc0c1abde7b18bdc5cebb7298b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/d70/classez_init_context_vulkan.htm#acfb611bc0c1abde7b18bdc5cebb7298b">InitTexture</a> (const <a class="el" href="../../d9/d0a/classez_g_a_l_texture_vulkan.htm">ezGALTextureVulkan</a> *pTexture, vk::ImageCreateInfo &amp;createInfo, <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; <a class="el" href="../../d2/d8f/structez_g_a_l_system_memory_description.htm">ezGALSystemMemoryDescription</a> &gt; pInitialData)</td></tr>
<tr class="memdesc:acfb611bc0c1abde7b18bdc5cebb7298b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes a texture and moves it into its default state.  <br /></td></tr>
<tr class="separator:acfb611bc0c1abde7b18bdc5cebb7298b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a02c8e75010206cd0fdba4f4641728d8a" id="r_a02c8e75010206cd0fdba4f4641728d8a"><td class="memItemLeft" align="right" valign="top"><a id="a02c8e75010206cd0fdba4f4641728d8a" name="a02c8e75010206cd0fdba4f4641728d8a"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>TextureDestroyed</b> (const <a class="el" href="../../d9/d0a/classez_g_a_l_texture_vulkan.htm">ezGALTextureVulkan</a> *pTexture)</td></tr>
<tr class="memdesc:a02c8e75010206cd0fdba4f4641728d8a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Needs to be called by the <a class="el" href="../../d1/d02/classez_g_a_l_device_vulkan.htm" title="The Vulkan device implementation of the graphics abstraction layer.">ezGALDeviceVulkan</a> just before a texture is destroyed to clean up stale barriers. <br /></td></tr>
<tr class="separator:a02c8e75010206cd0fdba4f4641728d8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac757c11d7941995fd23d1f2c339be085" id="r_ac757c11d7941995fd23d1f2c339be085"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/d70/classez_init_context_vulkan.htm#ac757c11d7941995fd23d1f2c339be085">InitBuffer</a> (const <a class="el" href="../../d9/d93/classez_g_a_l_buffer_vulkan.htm">ezGALBufferVulkan</a> *pBuffer, <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezConstByteArrayPtr</a> pInitialData)</td></tr>
<tr class="memdesc:ac757c11d7941995fd23d1f2c339be085"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes a buffer with the given data.  <br /></td></tr>
<tr class="separator:ac757c11d7941995fd23d1f2c339be085"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a313036bebfc6f9659763f132dea69987" id="r_a313036bebfc6f9659763f132dea69987"><td class="memItemLeft" align="right" valign="top"><a id="a313036bebfc6f9659763f132dea69987" name="a313036bebfc6f9659763f132dea69987"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>UpdateTexture</b> (const <a class="el" href="../../d9/d0a/classez_g_a_l_texture_vulkan.htm">ezGALTextureVulkan</a> *pTexture, const <a class="el" href="../../d2/d1f/structez_g_a_l_texture_subresource.htm">ezGALTextureSubresource</a> &amp;subresource, const <a class="el" href="../../d6/d25/classez_bounding_box_template.htm">ezBoundingBoxu32</a> &amp;box, const <a class="el" href="../../d2/d8f/structez_g_a_l_system_memory_description.htm">ezGALSystemMemoryDescription</a> &amp;sourceData)</td></tr>
<tr class="memdesc:a313036bebfc6f9659763f132dea69987"><td class="mdescLeft">&#160;</td><td class="mdescRight">Updates a texture region. <br /></td></tr>
<tr class="separator:a313036bebfc6f9659763f132dea69987"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55d554cb92a31774899130b89ed9001f" id="r_a55d554cb92a31774899130b89ed9001f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/d70/classez_init_context_vulkan.htm#a55d554cb92a31774899130b89ed9001f">UpdateBuffer</a> (const <a class="el" href="../../d9/d93/classez_g_a_l_buffer_vulkan.htm">ezGALBufferVulkan</a> *pBuffer, ezUInt32 uiOffset, <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezConstByteArrayPtr</a> pSourceData)</td></tr>
<tr class="memdesc:a55d554cb92a31774899130b89ed9001f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Updates a buffer range.  <br /></td></tr>
<tr class="separator:a55d554cb92a31774899130b89ed9001f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a351a9c754d61e1ca67a8b98154ab3c5f" id="r_a351a9c754d61e1ca67a8b98154ab3c5f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/d70/classez_init_context_vulkan.htm#a351a9c754d61e1ca67a8b98154ab3c5f">UpdateDynamicUniformBuffer</a> (vk::Buffer gpuBuffer, vk::Buffer stagingBuffer, ezUInt32 uiOffset, ezUInt32 uiSize)</td></tr>
<tr class="memdesc:a351a9c754d61e1ca67a8b98154ab3c5f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Used by <a class="el" href="../../d6/d8b/classez_uniform_buffer_pool_vulkan.htm" title="ezGALBufferVulkan created with ezGALBufferUsageFlags::Transient will allocate scratch memory from thi...">ezUniformBufferPoolVulkan</a> to write the entire uniform scratch pool to the GPU.  <br /></td></tr>
<tr class="separator:a351a9c754d61e1ca67a8b98154ab3c5f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a118639378f20a58da4555204915a20d7" id="r_a118639378f20a58da4555204915a20d7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/d70/classez_init_context_vulkan.htm#a118639378f20a58da4555204915a20d7">ExecutePendingCopies</a> (<a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; <a class="el" href="../../d7/d19/structez_pending_buffer_copy_vulkan.htm">ezPendingBufferCopyVulkan</a> &gt; buffers, <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; <a class="el" href="../../da/de6/structez_pending_texture_copy_vulkan.htm">ezPendingTextureCopyVulkan</a> &gt; textures)</td></tr>
<tr class="memdesc:a118639378f20a58da4555204915a20d7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Executes work generates by ezGALDeviceVulkan::UpdateBufferForNextFramePlatform and UpdateTextureForNextFramePlatform.  <br /></td></tr>
<tr class="separator:a118639378f20a58da4555204915a20d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Thread-safe context for initializing resources. Records a command buffer that transitions all newly created resources into their initial state. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a118639378f20a58da4555204915a20d7" name="a118639378f20a58da4555204915a20d7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a118639378f20a58da4555204915a20d7">&#9670;&#160;</a></span>ExecutePendingCopies()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ezInitContextVulkan::ExecutePendingCopies </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; <a class="el" href="../../d7/d19/structez_pending_buffer_copy_vulkan.htm">ezPendingBufferCopyVulkan</a> &gt;&#160;</td>
          <td class="paramname"><em>buffers</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; <a class="el" href="../../da/de6/structez_pending_texture_copy_vulkan.htm">ezPendingTextureCopyVulkan</a> &gt;&#160;</td>
          <td class="paramname"><em>textures</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Executes work generates by ezGALDeviceVulkan::UpdateBufferForNextFramePlatform and UpdateTextureForNextFramePlatform. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">buffers</td><td>The pending buffer copies. </td></tr>
    <tr><td class="paramname">textures</td><td>The pending texture copies. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ac757c11d7941995fd23d1f2c339be085" name="ac757c11d7941995fd23d1f2c339be085"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac757c11d7941995fd23d1f2c339be085">&#9670;&#160;</a></span>InitBuffer()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ezInitContextVulkan::InitBuffer </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d9/d93/classez_g_a_l_buffer_vulkan.htm">ezGALBufferVulkan</a> *&#160;</td>
          <td class="paramname"><em>pBuffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../dc/dae/classez_array_ptr.htm">ezConstByteArrayPtr</a>&#160;</td>
          <td class="paramname"><em>pInitialData</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initializes a buffer with the given data. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pBuffer</td><td>The buffer to initialize. </td></tr>
    <tr><td class="paramname">pInitialData</td><td>The initial data that the buffer should be filled with. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="acfb611bc0c1abde7b18bdc5cebb7298b" name="acfb611bc0c1abde7b18bdc5cebb7298b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#acfb611bc0c1abde7b18bdc5cebb7298b">&#9670;&#160;</a></span>InitTexture()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ezInitContextVulkan::InitTexture </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d9/d0a/classez_g_a_l_texture_vulkan.htm">ezGALTextureVulkan</a> *&#160;</td>
          <td class="paramname"><em>pTexture</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">vk::ImageCreateInfo &amp;&#160;</td>
          <td class="paramname"><em>createInfo</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; <a class="el" href="../../d2/d8f/structez_g_a_l_system_memory_description.htm">ezGALSystemMemoryDescription</a> &gt;&#160;</td>
          <td class="paramname"><em>pInitialData</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initializes a texture and moves it into its default state. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pTexture</td><td>The texture to initialize. </td></tr>
    <tr><td class="paramname">createInfo</td><td>The image creation info for the texture. Needed for initial state information. </td></tr>
    <tr><td class="paramname">pInitialData</td><td>The initial data of the texture. If not set, the initial content will be undefined. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a55d554cb92a31774899130b89ed9001f" name="a55d554cb92a31774899130b89ed9001f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a55d554cb92a31774899130b89ed9001f">&#9670;&#160;</a></span>UpdateBuffer()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ezInitContextVulkan::UpdateBuffer </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d9/d93/classez_g_a_l_buffer_vulkan.htm">ezGALBufferVulkan</a> *&#160;</td>
          <td class="paramname"><em>pBuffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ezUInt32&#160;</td>
          <td class="paramname"><em>uiOffset</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../dc/dae/classez_array_ptr.htm">ezConstByteArrayPtr</a>&#160;</td>
          <td class="paramname"><em>pSourceData</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Updates a buffer range. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">pBuffer</td><td>The buffer to update. </td></tr>
    <tr><td class="paramname">uiOffset</td><td>The offset inside the buffer where the new data should be placed. </td></tr>
    <tr><td class="paramname">pSourceData</td><td>The new data to update the buffer with. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a351a9c754d61e1ca67a8b98154ab3c5f" name="a351a9c754d61e1ca67a8b98154ab3c5f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a351a9c754d61e1ca67a8b98154ab3c5f">&#9670;&#160;</a></span>UpdateDynamicUniformBuffer()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ezInitContextVulkan::UpdateDynamicUniformBuffer </td>
          <td>(</td>
          <td class="paramtype">vk::Buffer&#160;</td>
          <td class="paramname"><em>gpuBuffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">vk::Buffer&#160;</td>
          <td class="paramname"><em>stagingBuffer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ezUInt32&#160;</td>
          <td class="paramname"><em>uiOffset</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ezUInt32&#160;</td>
          <td class="paramname"><em>uiSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Used by <a class="el" href="../../d6/d8b/classez_uniform_buffer_pool_vulkan.htm" title="ezGALBufferVulkan created with ezGALBufferUsageFlags::Transient will allocate scratch memory from thi...">ezUniformBufferPoolVulkan</a> to write the entire uniform scratch pool to the GPU. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">gpuBuffer</td><td>The device local buffer to update. </td></tr>
    <tr><td class="paramname">stagingBuffer</td><td>The staging buffer that contains the data to be copied to gpuBuffer. If null, buffer is CPU writable and already contains the data. </td></tr>
    <tr><td class="paramname">uiOffset</td><td>Offset in the buffer. </td></tr>
    <tr><td class="paramname">uiSize</td><td>The size of the data to be copied from stagingBuffer to gpuBuffer. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/RendererVulkan/Device/<a class="el" href="../../d8/d53/_init_context_8h_source.htm">InitContext.h</a></li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/RendererVulkan/Device/Implementation/<b>InitContext.cpp</b></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../da/d70/classez_init_context_vulkan.htm">ezInitContextVulkan</a></li>
    <li class="footer">Generated on Fri Jul 11 2025 12:17:58 for ezEngine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
