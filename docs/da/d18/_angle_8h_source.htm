<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Math/Angle.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">ezEngine<span id="projectnumber">&#160;Release 25.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function() { init_codefold(1); });
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('da/d18/_angle_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">Angle.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="preprocessor">#include &lt;Foundation/Math/Declarations.h&gt;</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span> </div>
<div class="foldopen" id="foldopen00009" data-start="{" data-end="};">
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno"><a class="line" href="../../db/d6f/classez_angle.htm">    9</a></span><span class="keyword">class </span>EZ_FOUNDATION_DLL <a class="code hl_class" href="../../db/d6f/classez_angle.htm">ezAngle</a></div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span>{</div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span>  EZ_DECLARE_POD_TYPE();</div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span> </div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span>  <span class="keyword">constexpr</span> <span class="keyword">static</span> EZ_ALWAYS_INLINE Type DegToRadMultiplier(); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span> </div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span>  <span class="keyword">constexpr</span> <span class="keyword">static</span> EZ_ALWAYS_INLINE Type RadToDegMultiplier(); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span> </div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span>  <span class="keyword">constexpr</span> <span class="keyword">static</span> Type DegToRad(Type f); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span> </div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span>  <span class="keyword">constexpr</span> <span class="keyword">static</span> Type RadToDeg(Type f); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span> </div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno"><a class="line" href="../../db/d6f/classez_angle.htm#a349f820fe9ec757f212e01025a9e48b7">   31</a></span>  [[nodiscard]] <span class="keyword">constexpr</span> <span class="keyword">static</span> <a class="code hl_class" href="../../db/d6f/classez_angle.htm">ezAngle</a> <a class="code hl_function" href="../../db/d6f/classez_angle.htm#a349f820fe9ec757f212e01025a9e48b7">MakeZero</a>() { <span class="keywordflow">return</span> <a class="code hl_class" href="../../db/d6f/classez_angle.htm">ezAngle</a>(); }</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span> </div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span>  [[nodiscard]] <span class="keyword">constexpr</span> <span class="keyword">static</span> <a class="code hl_class" href="../../db/d6f/classez_angle.htm">ezAngle</a> MakeFromDegree(<span class="keywordtype">float</span> fDegree); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span> </div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span>  [[nodiscard]] <span class="keyword">constexpr</span> <span class="keyword">static</span> <a class="code hl_class" href="../../db/d6f/classez_angle.htm">ezAngle</a> MakeFromRadian(<span class="keywordtype">float</span> fRadian); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span> </div>
<div class="foldopen" id="foldopen00040" data-start="{" data-end="}">
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno"><a class="line" href="../../db/d6f/classez_angle.htm#a4313120f7698856e3215669339486c83">   40</a></span>  <span class="keyword">constexpr</span> <a class="code hl_function" href="../../db/d6f/classez_angle.htm#a4313120f7698856e3215669339486c83">ezAngle</a>()</div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>    : m_fRadian(0.0f)</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>  {</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span>  } <span class="comment">// [tested]</span></div>
</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span> </div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span>  <span class="keyword">constexpr</span> <span class="keywordtype">float</span> GetDegree() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span> </div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span>  <span class="keyword">constexpr</span> <span class="keywordtype">float</span> GetRadian() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span> </div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno"><a class="line" href="../../db/d6f/classez_angle.htm#a4930fd197855eaebc5878f3af3805c04">   52</a></span>  EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../db/d6f/classez_angle.htm#a4930fd197855eaebc5878f3af3805c04">SetRadian</a>(<span class="keywordtype">float</span> fRad) { m_fRadian = fRad; };</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span> </div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>  <span class="keywordtype">void</span> NormalizeRange(); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span> </div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span>  <a class="code hl_class" href="../../db/d6f/classez_angle.htm">ezAngle</a> GetNormalizedRange() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span> </div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>  <span class="keyword">constexpr</span> <span class="keyword">static</span> <a class="code hl_class" href="../../db/d6f/classez_angle.htm">ezAngle</a> AngleBetween(<a class="code hl_class" href="../../db/d6f/classez_angle.htm">ezAngle</a> a, <a class="code hl_class" href="../../db/d6f/classez_angle.htm">ezAngle</a> b); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span> </div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>  <span class="keywordtype">bool</span> IsEqualSimple(<a class="code hl_class" href="../../db/d6f/classez_angle.htm">ezAngle</a> rhs, <a class="code hl_class" href="../../db/d6f/classez_angle.htm">ezAngle</a> epsilon) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span> </div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>  <span class="keywordtype">bool</span> IsEqualNormalized(<a class="code hl_class" href="../../db/d6f/classez_angle.htm">ezAngle</a> rhs, <a class="code hl_class" href="../../db/d6f/classez_angle.htm">ezAngle</a> epsilon) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span> </div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>  <span class="comment">// unary operators</span></div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>  <span class="keyword">constexpr</span> <a class="code hl_class" href="../../db/d6f/classez_angle.htm">ezAngle</a> operator-() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span> </div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>  <span class="comment">// arithmetic operators</span></div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>  <span class="keyword">constexpr</span> <a class="code hl_class" href="../../db/d6f/classez_angle.htm">ezAngle</a> operator+(<a class="code hl_class" href="../../db/d6f/classez_angle.htm">ezAngle</a> r) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>  <span class="keyword">constexpr</span> <a class="code hl_class" href="../../db/d6f/classez_angle.htm">ezAngle</a> operator-(<a class="code hl_class" href="../../db/d6f/classez_angle.htm">ezAngle</a> r) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span> </div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>  <span class="comment">// compound assignment operators</span></div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>  <span class="keywordtype">void</span> operator+=(<a class="code hl_class" href="../../db/d6f/classez_angle.htm">ezAngle</a> r); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span>  <span class="keywordtype">void</span> operator-=(<a class="code hl_class" href="../../db/d6f/classez_angle.htm">ezAngle</a> r); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span> </div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>  <span class="comment">// comparison</span></div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>  <span class="keyword">constexpr</span> <span class="keywordtype">bool</span> operator==(<span class="keyword">const</span> <a class="code hl_class" href="../../db/d6f/classez_angle.htm">ezAngle</a>&amp; r) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>  <span class="keyword">constexpr</span> <span class="keywordtype">bool</span> operator!=(<span class="keyword">const</span> <a class="code hl_class" href="../../db/d6f/classez_angle.htm">ezAngle</a>&amp; r) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span> </div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>  <span class="comment">// At least the &lt; operator is implement to make clamping etc. work</span></div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>  <span class="keyword">constexpr</span> <span class="keywordtype">bool</span> operator&lt;(<span class="keyword">const</span> <a class="code hl_class" href="../../db/d6f/classez_angle.htm">ezAngle</a>&amp; r) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>  <span class="keyword">constexpr</span> <span class="keywordtype">bool</span> operator&gt;(<span class="keyword">const</span> <a class="code hl_class" href="../../db/d6f/classez_angle.htm">ezAngle</a>&amp; r) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>  <span class="keyword">constexpr</span> <span class="keywordtype">bool</span> operator&lt;=(<span class="keyword">const</span> <a class="code hl_class" href="../../db/d6f/classez_angle.htm">ezAngle</a>&amp; r) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>  <span class="keyword">constexpr</span> <span class="keywordtype">bool</span> operator&gt;=(<span class="keyword">const</span> <a class="code hl_class" href="../../db/d6f/classez_angle.htm">ezAngle</a>&amp; r) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span> </div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span>  <span class="comment">// Note: relational operators on angles are not really possible - is 0 degree smaller or bigger than 359 degree?</span></div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span> </div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span>  <span class="keyword">constexpr</span> <span class="keyword">explicit</span> <a class="code hl_class" href="../../db/d6f/classez_angle.htm">ezAngle</a>(<span class="keywordtype">float</span> fRadian)</div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>    : m_fRadian(fRadian)</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>  {</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>  }</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span> </div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>  <span class="keywordtype">float</span> m_fRadian;</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span> </div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>  <span class="keyword">constexpr</span> <span class="keyword">static</span> Type <a class="code hl_function" href="../../db/d78/namespaceez_math.htm#a2bb652d0912aad52e81a1e6895ce79da">Pi</a>();</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>};</div>
</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span> </div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span><span class="comment">// Mathematical operators with float</span></div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span> </div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span><span class="keyword">constexpr</span> <a class="code hl_class" href="../../db/d6f/classez_angle.htm">ezAngle</a> operator*(<span class="keyword">const</span> <a class="code hl_class" href="../../db/d6f/classez_angle.htm">ezAngle</a>&amp; a, <span class="keywordtype">float</span> f); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span><span class="keyword">constexpr</span> <a class="code hl_class" href="../../db/d6f/classez_angle.htm">ezAngle</a> operator*(<span class="keywordtype">float</span> f, <span class="keyword">const</span> <a class="code hl_class" href="../../db/d6f/classez_angle.htm">ezAngle</a>&amp; a); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span> </div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span><span class="keyword">constexpr</span> <a class="code hl_class" href="../../db/d6f/classez_angle.htm">ezAngle</a> operator/(<span class="keyword">const</span> <a class="code hl_class" href="../../db/d6f/classez_angle.htm">ezAngle</a>&amp; a, <span class="keywordtype">float</span> f); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span><span class="keyword">constexpr</span> <span class="keywordtype">float</span> operator/(<span class="keyword">const</span> <a class="code hl_class" href="../../db/d6f/classez_angle.htm">ezAngle</a>&amp; a, <span class="keyword">const</span> <a class="code hl_class" href="../../db/d6f/classez_angle.htm">ezAngle</a>&amp; b); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span> </div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span><span class="preprocessor">#include &lt;Foundation/Math/Implementation/Angle_inl.h&gt;</span></div>
<div class="ttc" id="aclassez_angle_htm"><div class="ttname"><a href="../../db/d6f/classez_angle.htm">ezAngle</a></div><div class="ttdoc">Float wrapper struct for a safe usage and conversions of angles.</div><div class="ttdef"><b>Definition</b> Angle.h:10</div></div>
<div class="ttc" id="aclassez_angle_htm_a349f820fe9ec757f212e01025a9e48b7"><div class="ttname"><a href="../../db/d6f/classez_angle.htm#a349f820fe9ec757f212e01025a9e48b7">ezAngle::MakeZero</a></div><div class="ttdeci">static constexpr ezAngle MakeZero()</div><div class="ttdoc">Returns a zero initialized angle. Same as a default constructed object.</div><div class="ttdef"><b>Definition</b> Angle.h:31</div></div>
<div class="ttc" id="aclassez_angle_htm_a4313120f7698856e3215669339486c83"><div class="ttname"><a href="../../db/d6f/classez_angle.htm#a4313120f7698856e3215669339486c83">ezAngle::ezAngle</a></div><div class="ttdeci">constexpr ezAngle()</div><div class="ttdoc">Standard constructor, initializing with 0.</div><div class="ttdef"><b>Definition</b> Angle.h:40</div></div>
<div class="ttc" id="aclassez_angle_htm_a4930fd197855eaebc5878f3af3805c04"><div class="ttname"><a href="../../db/d6f/classez_angle.htm#a4930fd197855eaebc5878f3af3805c04">ezAngle::SetRadian</a></div><div class="ttdeci">EZ_ALWAYS_INLINE void SetRadian(float fRad)</div><div class="ttdoc">Sets the radian value. (No need for any conversion)</div><div class="ttdef"><b>Definition</b> Angle.h:52</div></div>
<div class="ttc" id="anamespaceez_math_htm_a2bb652d0912aad52e81a1e6895ce79da"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a2bb652d0912aad52e81a1e6895ce79da">ezMath::Pi</a></div><div class="ttdeci">constexpr TYPE Pi()</div><div class="ttdoc">Returns the natural constant Pi.</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_4ad0f5fbee83b30173e7fecedeea26f0.htm">Math</a></li><li class="navelem"><b>Angle.h</b></li>
    <li class="footer">Generated on Fri Jul 11 2025 12:17:51 for ezEngine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
