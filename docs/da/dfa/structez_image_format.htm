<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: ezImageFormat Struct Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 23.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('da/dfa/structez_image_format.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="../../da/d30/structez_image_format-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ezImageFormat Struct Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Enum describing the encoding format of the pixels of an image.  
 <a href="../../da/dfa/structez_image_format.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d3/d5d/_image_format_8h_source.htm">ImageFormat.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a1c595e37b9f96c35dd90570bfcd8f853"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dfa/structez_image_format.htm#a1c595e37b9f96c35dd90570bfcd8f853">Enum</a> : ezUInt16 { <br />
&#160;&#160;<b>UNKNOWN</b>, 
<b>R32G32B32A32_FLOAT</b>, 
<b>R32G32B32A32_UINT</b>, 
<b>R32G32B32A32_SINT</b>, 
<br />
&#160;&#160;<b>R32G32B32_FLOAT</b>, 
<b>R32G32B32_UINT</b>, 
<b>R32G32B32_SINT</b>, 
<b>R16G16B16A16_FLOAT</b>, 
<br />
&#160;&#160;<b>R16G16B16A16_UNORM</b>, 
<b>R16G16B16A16_UINT</b>, 
<b>R16G16B16A16_SNORM</b>, 
<b>R16G16B16A16_SINT</b>, 
<br />
&#160;&#160;<b>R16G16B16_UNORM</b>, 
<b>R32G32_FLOAT</b>, 
<b>R32G32_UINT</b>, 
<b>R32G32_SINT</b>, 
<br />
&#160;&#160;<b>D32_FLOAT_S8X24_UINT</b>, 
<b>R10G10B10A2_UNORM</b>, 
<b>R10G10B10A2_UINT</b>, 
<b>R11G11B10_FLOAT</b>, 
<br />
&#160;&#160;<b>R8G8B8A8_UNORM</b>, 
<b>R8G8B8A8_UNORM_SRGB</b>, 
<b>R8G8B8A8_UINT</b>, 
<b>R8G8B8A8_SNORM</b>, 
<br />
&#160;&#160;<b>R8G8B8A8_SINT</b>, 
<b>B8G8R8A8_UNORM</b>, 
<b>B8G8R8A8_UNORM_SRGB</b>, 
<b>B8G8R8X8_UNORM</b>, 
<br />
&#160;&#160;<b>B8G8R8X8_UNORM_SRGB</b>, 
<b>R16G16_FLOAT</b>, 
<b>R16G16_UNORM</b>, 
<b>R16G16_UINT</b>, 
<br />
&#160;&#160;<b>R16G16_SNORM</b>, 
<b>R16G16_SINT</b>, 
<b>D32_FLOAT</b>, 
<b>R32_FLOAT</b>, 
<br />
&#160;&#160;<b>R32_UINT</b>, 
<b>R32_SINT</b>, 
<b>D24_UNORM_S8_UINT</b>, 
<b>R8G8B8_UNORM</b>, 
<br />
&#160;&#160;<b>R8G8B8_UNORM_SRGB</b>, 
<b>B8G8R8_UNORM</b>, 
<b>B8G8R8_UNORM_SRGB</b>, 
<b>R8G8_UNORM</b>, 
<br />
&#160;&#160;<b>R8G8_UINT</b>, 
<b>R8G8_SNORM</b>, 
<b>R8G8_SINT</b>, 
<b>R16_FLOAT</b>, 
<br />
&#160;&#160;<b>D16_UNORM</b>, 
<b>R16_UNORM</b>, 
<b>R16_UINT</b>, 
<b>R16_SNORM</b>, 
<br />
&#160;&#160;<b>R16_SINT</b>, 
<b>R8_UNORM</b>, 
<b>R8_UINT</b>, 
<b>R8_SNORM</b>, 
<br />
&#160;&#160;<b>R8_SINT</b>, 
<b>BC1_UNORM</b>, 
<b>BC1_UNORM_SRGB</b>, 
<b>BC2_UNORM</b>, 
<br />
&#160;&#160;<b>BC2_UNORM_SRGB</b>, 
<b>BC3_UNORM</b>, 
<b>BC3_UNORM_SRGB</b>, 
<b>BC4_UNORM</b>, 
<br />
&#160;&#160;<b>BC4_SNORM</b>, 
<b>BC5_UNORM</b>, 
<b>BC5_SNORM</b>, 
<b>BC6H_UF16</b>, 
<br />
&#160;&#160;<b>BC6H_SF16</b>, 
<b>BC7_UNORM</b>, 
<b>BC7_UNORM_SRGB</b>, 
<b>ASTC_4x4_UNORM</b>, 
<br />
&#160;&#160;<b>ASTC_4x4_UNORM_SRGB</b>, 
<b>ASTC_5x4_UNORM</b>, 
<b>ASTC_5x4_UNORM_SRGB</b>, 
<b>ASTC_5x5_UNORM</b>, 
<br />
&#160;&#160;<b>ASTC_5x5_UNORM_SRGB</b>, 
<b>ASTC_6x5_UNORM</b>, 
<b>ASTC_6x5_UNORM_SRGB</b>, 
<b>ASTC_6x6_UNORM</b>, 
<br />
&#160;&#160;<b>ASTC_6x6_UNORM_SRGB</b>, 
<b>ASTC_8x5_UNORM</b>, 
<b>ASTC_8x5_UNORM_SRGB</b>, 
<b>ASTC_8x6_UNORM</b>, 
<br />
&#160;&#160;<b>ASTC_8x6_UNORM_SRGB</b>, 
<b>ASTC_10x5_UNORM</b>, 
<b>ASTC_10x5_UNORM_SRGB</b>, 
<b>ASTC_10x6_UNORM</b>, 
<br />
&#160;&#160;<b>ASTC_10x6_UNORM_SRGB</b>, 
<b>ASTC_8x8_UNORM</b>, 
<b>ASTC_8x8_UNORM_SRGB</b>, 
<b>ASTC_10x8_UNORM</b>, 
<br />
&#160;&#160;<b>ASTC_10x8_UNORM_SRGB</b>, 
<b>ASTC_10x10_UNORM</b>, 
<b>ASTC_10x10_UNORM_SRGB</b>, 
<b>ASTC_12x10_UNORM</b>, 
<br />
&#160;&#160;<b>ASTC_12x10_UNORM_SRGB</b>, 
<b>ASTC_12x12_UNORM</b>, 
<b>ASTC_12x12_UNORM_SRGB</b>, 
<b>B4G4R4A4_UNORM</b>, 
<br />
&#160;&#160;<b>B4G4R4A4_UNORM_SRGB</b>, 
<b>A4B4G4R4_UNORM</b>, 
<b>A4B4G4R4_UNORM_SRGB</b>, 
<b>B5G6R5_UNORM</b>, 
<br />
&#160;&#160;<b>B5G6R5_UNORM_SRGB</b>, 
<b>B5G5R5A1_UNORM</b>, 
<b>B5G5R5A1_UNORM_SRGB</b>, 
<b>B5G5R5X1_UNORM</b>, 
<br />
&#160;&#160;<b>B5G5R5X1_UNORM_SRGB</b>, 
<b>A1B5G5R5_UNORM</b>, 
<b>A1B5G5R5_UNORM_SRGB</b>, 
<b>X1B5G5R5_UNORM</b>, 
<br />
&#160;&#160;<b>X1B5G5R5_UNORM_SRGB</b>, 
<b>NV12</b>, 
<b>NUM_FORMATS</b>, 
<b>Default</b> = UNKNOWN
<br />
 }</td></tr>
<tr class="memdesc:a1c595e37b9f96c35dd90570bfcd8f853"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enum describing the encoding format of the pixels of an image.  <a href="../../da/dfa/structez_image_format.htm#a1c595e37b9f96c35dd90570bfcd8f853">More...</a><br /></td></tr>
<tr class="separator:a1c595e37b9f96c35dd90570bfcd8f853"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39ed1ee28b97f2fff82f3f48271d1f88"><td class="memItemLeft" align="right" valign="top"><a id="a39ed1ee28b97f2fff82f3f48271d1f88"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>StorageType</b> = ezUInt16</td></tr>
<tr class="separator:a39ed1ee28b97f2fff82f3f48271d1f88"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a1d21a0b757ee56133c40cec4b1a5b95f"><td class="memItemLeft" align="right" valign="top">static const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dfa/structez_image_format.htm#a1d21a0b757ee56133c40cec4b1a5b95f">GetName</a> (<a class="el" href="../../da/dfa/structez_image_format.htm#a1c595e37b9f96c35dd90570bfcd8f853">Enum</a> format)</td></tr>
<tr class="memdesc:a1d21a0b757ee56133c40cec4b1a5b95f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the name of the given format.  <a href="../../da/dfa/structez_image_format.htm#a1d21a0b757ee56133c40cec4b1a5b95f">More...</a><br /></td></tr>
<tr class="separator:a1d21a0b757ee56133c40cec4b1a5b95f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abc6f5238981b67fff3116a94adec97dd"><td class="memItemLeft" align="right" valign="top"><a id="abc6f5238981b67fff3116a94adec97dd"></a>
static ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dfa/structez_image_format.htm#abc6f5238981b67fff3116a94adec97dd">GetPlaneCount</a> (<a class="el" href="../../da/dfa/structez_image_format.htm#a1c595e37b9f96c35dd90570bfcd8f853">Enum</a> format)</td></tr>
<tr class="memdesc:abc6f5238981b67fff3116a94adec97dd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns number of planes in the format, or 1 for non-planar formats. <br /></td></tr>
<tr class="separator:abc6f5238981b67fff3116a94adec97dd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a872d64bac273068de3db60cd844685e6"><td class="memItemLeft" align="right" valign="top"><a id="a872d64bac273068de3db60cd844685e6"></a>
static ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dfa/structez_image_format.htm#a872d64bac273068de3db60cd844685e6">GetBitsPerPixel</a> (<a class="el" href="../../da/dfa/structez_image_format.htm#a1c595e37b9f96c35dd90570bfcd8f853">Enum</a> format, ezUInt32 uiPlaneIndex=0)</td></tr>
<tr class="memdesc:a872d64bac273068de3db60cd844685e6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of bits per pixel of the given format. If the format's bpp is non-integral, the returned value rounded up to to the next integer. <br /></td></tr>
<tr class="separator:a872d64bac273068de3db60cd844685e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1bc30746015459823261270652889f1e"><td class="memItemLeft" align="right" valign="top"><a id="a1bc30746015459823261270652889f1e"></a>
static float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dfa/structez_image_format.htm#a1bc30746015459823261270652889f1e">GetExactBitsPerPixel</a> (<a class="el" href="../../da/dfa/structez_image_format.htm#a1c595e37b9f96c35dd90570bfcd8f853">Enum</a> format, ezUInt32 uiPlaneIndex=0)</td></tr>
<tr class="memdesc:a1bc30746015459823261270652889f1e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Exact pixel size in bits. May be non-integral for some compressed formats. <br /></td></tr>
<tr class="separator:a1bc30746015459823261270652889f1e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6eb71a87e4a9c1345348a265c13ecdbe"><td class="memItemLeft" align="right" valign="top"><a id="a6eb71a87e4a9c1345348a265c13ecdbe"></a>
static ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dfa/structez_image_format.htm#a6eb71a87e4a9c1345348a265c13ecdbe">GetBitsPerBlock</a> (<a class="el" href="../../da/dfa/structez_image_format.htm#a1c595e37b9f96c35dd90570bfcd8f853">Enum</a> format, ezUInt32 uiPlaneIndex=0)</td></tr>
<tr class="memdesc:a6eb71a87e4a9c1345348a265c13ecdbe"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the block size in bits. For uncompressed formats, a block is considered a single pixel. <br /></td></tr>
<tr class="separator:a6eb71a87e4a9c1345348a265c13ecdbe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca90ea5d15da5d076464e6dc28be9d63"><td class="memItemLeft" align="right" valign="top"><a id="aca90ea5d15da5d076464e6dc28be9d63"></a>
static ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dfa/structez_image_format.htm#aca90ea5d15da5d076464e6dc28be9d63">GetNumChannels</a> (<a class="el" href="../../da/dfa/structez_image_format.htm#a1c595e37b9f96c35dd90570bfcd8f853">Enum</a> format)</td></tr>
<tr class="memdesc:aca90ea5d15da5d076464e6dc28be9d63"><td class="mdescLeft">&#160;</td><td class="mdescRight">Number of channels (r, g, b, a, depth, stencil) supported by this format. <br /></td></tr>
<tr class="separator:aca90ea5d15da5d076464e6dc28be9d63"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab68bdf8c35939a4554669fa4972e05f"><td class="memItemLeft" align="right" valign="top"><a id="aab68bdf8c35939a4554669fa4972e05f"></a>
static ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dfa/structez_image_format.htm#aab68bdf8c35939a4554669fa4972e05f">GetChannelMask</a> (<a class="el" href="../../da/dfa/structez_image_format.htm#a1c595e37b9f96c35dd90570bfcd8f853">Enum</a> format, <a class="el" href="../../d8/de0/structez_image_format_channel.htm#a3c3b3d7dab0a86a677e934a23612a6fa">ezImageFormatChannel::Enum</a> c)</td></tr>
<tr class="memdesc:aab68bdf8c35939a4554669fa4972e05f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Bitmask of each channel of the format. This is not defined for some formats, and may return 0. <br /></td></tr>
<tr class="separator:aab68bdf8c35939a4554669fa4972e05f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb8e2ee433833d41531b01262cd4d055"><td class="memItemLeft" align="right" valign="top"><a id="acb8e2ee433833d41531b01262cd4d055"></a>
static ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dfa/structez_image_format.htm#acb8e2ee433833d41531b01262cd4d055">GetBitsPerChannel</a> (<a class="el" href="../../da/dfa/structez_image_format.htm#a1c595e37b9f96c35dd90570bfcd8f853">Enum</a> format, <a class="el" href="../../d8/de0/structez_image_format_channel.htm#a3c3b3d7dab0a86a677e934a23612a6fa">ezImageFormatChannel::Enum</a> c)</td></tr>
<tr class="memdesc:acb8e2ee433833d41531b01262cd4d055"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of bits for each channel of the format. <br /></td></tr>
<tr class="separator:acb8e2ee433833d41531b01262cd4d055"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3accf24f1892895b2dbbb6bc98469ab8"><td class="memItemLeft" align="right" valign="top"><a id="a3accf24f1892895b2dbbb6bc98469ab8"></a>
static ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dfa/structez_image_format.htm#a3accf24f1892895b2dbbb6bc98469ab8">GetRedMask</a> (<a class="el" href="../../da/dfa/structez_image_format.htm#a1c595e37b9f96c35dd90570bfcd8f853">Enum</a> format)</td></tr>
<tr class="memdesc:a3accf24f1892895b2dbbb6bc98469ab8"><td class="mdescLeft">&#160;</td><td class="mdescRight">If applicable, returns a bitmask for the red component of the format. <br /></td></tr>
<tr class="separator:a3accf24f1892895b2dbbb6bc98469ab8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afabb489aa21dc7b9712045f4d3869a84"><td class="memItemLeft" align="right" valign="top"><a id="afabb489aa21dc7b9712045f4d3869a84"></a>
static ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dfa/structez_image_format.htm#afabb489aa21dc7b9712045f4d3869a84">GetGreenMask</a> (<a class="el" href="../../da/dfa/structez_image_format.htm#a1c595e37b9f96c35dd90570bfcd8f853">Enum</a> format)</td></tr>
<tr class="memdesc:afabb489aa21dc7b9712045f4d3869a84"><td class="mdescLeft">&#160;</td><td class="mdescRight">If applicable, returns a bitmask for the green component of the format. <br /></td></tr>
<tr class="separator:afabb489aa21dc7b9712045f4d3869a84"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2eab558ae45767c81054845999e72f5e"><td class="memItemLeft" align="right" valign="top"><a id="a2eab558ae45767c81054845999e72f5e"></a>
static ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dfa/structez_image_format.htm#a2eab558ae45767c81054845999e72f5e">GetBlueMask</a> (<a class="el" href="../../da/dfa/structez_image_format.htm#a1c595e37b9f96c35dd90570bfcd8f853">Enum</a> format)</td></tr>
<tr class="memdesc:a2eab558ae45767c81054845999e72f5e"><td class="mdescLeft">&#160;</td><td class="mdescRight">If applicable, returns a bitmask for the blue component of the format. <br /></td></tr>
<tr class="separator:a2eab558ae45767c81054845999e72f5e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d6d632088734e7cdf3824de2bc86193"><td class="memItemLeft" align="right" valign="top"><a id="a8d6d632088734e7cdf3824de2bc86193"></a>
static ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dfa/structez_image_format.htm#a8d6d632088734e7cdf3824de2bc86193">GetAlphaMask</a> (<a class="el" href="../../da/dfa/structez_image_format.htm#a1c595e37b9f96c35dd90570bfcd8f853">Enum</a> format)</td></tr>
<tr class="memdesc:a8d6d632088734e7cdf3824de2bc86193"><td class="mdescLeft">&#160;</td><td class="mdescRight">If applicable, returns a bitmask for the alpha component of the format. <br /></td></tr>
<tr class="separator:a8d6d632088734e7cdf3824de2bc86193"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abab78a23e945d72fc295a795f18a5ef0"><td class="memItemLeft" align="right" valign="top"><a id="abab78a23e945d72fc295a795f18a5ef0"></a>
static ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dfa/structez_image_format.htm#abab78a23e945d72fc295a795f18a5ef0">GetBlockWidth</a> (<a class="el" href="../../da/dfa/structez_image_format.htm#a1c595e37b9f96c35dd90570bfcd8f853">Enum</a> format, ezUInt32 uiPlaneIndex=0)</td></tr>
<tr class="memdesc:abab78a23e945d72fc295a795f18a5ef0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Block width of a compressed format. Defaults to 1 for uncompressed formats. <br /></td></tr>
<tr class="separator:abab78a23e945d72fc295a795f18a5ef0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6187fce02c0103c3816ccad8770ed362"><td class="memItemLeft" align="right" valign="top"><a id="a6187fce02c0103c3816ccad8770ed362"></a>
static ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dfa/structez_image_format.htm#a6187fce02c0103c3816ccad8770ed362">GetBlockHeight</a> (<a class="el" href="../../da/dfa/structez_image_format.htm#a1c595e37b9f96c35dd90570bfcd8f853">Enum</a> format, ezUInt32 uiPlaneIndex=0)</td></tr>
<tr class="memdesc:a6187fce02c0103c3816ccad8770ed362"><td class="mdescLeft">&#160;</td><td class="mdescRight">Block height of a compressed format. Defaults to 1 for uncompressed formats. <br /></td></tr>
<tr class="separator:a6187fce02c0103c3816ccad8770ed362"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8262567df7b0fb3d7a89f40ea38500a"><td class="memItemLeft" align="right" valign="top"><a id="ad8262567df7b0fb3d7a89f40ea38500a"></a>
static ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dfa/structez_image_format.htm#ad8262567df7b0fb3d7a89f40ea38500a">GetBlockDepth</a> (<a class="el" href="../../da/dfa/structez_image_format.htm#a1c595e37b9f96c35dd90570bfcd8f853">Enum</a> format, ezUInt32 uiPlaneIndex=0)</td></tr>
<tr class="memdesc:ad8262567df7b0fb3d7a89f40ea38500a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Block depth of a compressed format. Defaults to 1 for uncompressed formats. <br /></td></tr>
<tr class="separator:ad8262567df7b0fb3d7a89f40ea38500a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72facdad275f2d2d73e3c087108f59eb"><td class="memItemLeft" align="right" valign="top"><a id="a72facdad275f2d2d73e3c087108f59eb"></a>
static <a class="el" href="../../d6/da3/structez_image_format_data_type.htm#a57ce6fd6baeba510a67634bc71cefe94">ezImageFormatDataType::Enum</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dfa/structez_image_format.htm#a72facdad275f2d2d73e3c087108f59eb">GetDataType</a> (<a class="el" href="../../da/dfa/structez_image_format.htm#a1c595e37b9f96c35dd90570bfcd8f853">Enum</a> format)</td></tr>
<tr class="memdesc:a72facdad275f2d2d73e3c087108f59eb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the data type represented by a format. <br /></td></tr>
<tr class="separator:a72facdad275f2d2d73e3c087108f59eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3acb3cc47742651bf021f1c62a1eb844"><td class="memItemLeft" align="right" valign="top"><a id="a3acb3cc47742651bf021f1c62a1eb844"></a>
static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dfa/structez_image_format.htm#a3acb3cc47742651bf021f1c62a1eb844">IsCompressed</a> (<a class="el" href="../../da/dfa/structez_image_format.htm#a1c595e37b9f96c35dd90570bfcd8f853">Enum</a> format)</td></tr>
<tr class="memdesc:a3acb3cc47742651bf021f1c62a1eb844"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if the format is compressed. <br /></td></tr>
<tr class="separator:a3acb3cc47742651bf021f1c62a1eb844"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7131f58828301d6139b408a4253cbbe7"><td class="memItemLeft" align="right" valign="top"><a id="a7131f58828301d6139b408a4253cbbe7"></a>
static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dfa/structez_image_format.htm#a7131f58828301d6139b408a4253cbbe7">IsDepth</a> (<a class="el" href="../../da/dfa/structez_image_format.htm#a1c595e37b9f96c35dd90570bfcd8f853">Enum</a> format)</td></tr>
<tr class="memdesc:a7131f58828301d6139b408a4253cbbe7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if the format is a depth format. <br /></td></tr>
<tr class="separator:a7131f58828301d6139b408a4253cbbe7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a635e54137afbd37e8ec350c0b728c0b2"><td class="memItemLeft" align="right" valign="top"><a id="a635e54137afbd37e8ec350c0b728c0b2"></a>
static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dfa/structez_image_format.htm#a635e54137afbd37e8ec350c0b728c0b2">IsSrgb</a> (<a class="el" href="../../da/dfa/structez_image_format.htm#a1c595e37b9f96c35dd90570bfcd8f853">Enum</a> format)</td></tr>
<tr class="memdesc:a635e54137afbd37e8ec350c0b728c0b2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the given format is an sRGB format. <br /></td></tr>
<tr class="separator:a635e54137afbd37e8ec350c0b728c0b2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a822e5a199899c1b1cbce5e52c50676"><td class="memItemLeft" align="right" valign="top"><a id="a6a822e5a199899c1b1cbce5e52c50676"></a>
static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dfa/structez_image_format.htm#a6a822e5a199899c1b1cbce5e52c50676">IsStencil</a> (<a class="el" href="../../da/dfa/structez_image_format.htm#a1c595e37b9f96c35dd90570bfcd8f853">Enum</a> format)</td></tr>
<tr class="memdesc:a6a822e5a199899c1b1cbce5e52c50676"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if the format is a stencil format. <br /></td></tr>
<tr class="separator:a6a822e5a199899c1b1cbce5e52c50676"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a66ce934a7a4b6ac57162daf0314e00ab"><td class="memItemLeft" align="right" valign="top"><a id="a66ce934a7a4b6ac57162daf0314e00ab"></a>
static <a class="el" href="../../da/dfa/structez_image_format.htm#a1c595e37b9f96c35dd90570bfcd8f853">Enum</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dfa/structez_image_format.htm#a66ce934a7a4b6ac57162daf0314e00ab">AsSrgb</a> (<a class="el" href="../../da/dfa/structez_image_format.htm#a1c595e37b9f96c35dd90570bfcd8f853">Enum</a> format)</td></tr>
<tr class="memdesc:a66ce934a7a4b6ac57162daf0314e00ab"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the corresponding sRGB format if one exists; otherwise returns the unmodified format. <br /></td></tr>
<tr class="separator:a66ce934a7a4b6ac57162daf0314e00ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada077e3ec5fc03d791bf1796de637449"><td class="memItemLeft" align="right" valign="top"><a id="ada077e3ec5fc03d791bf1796de637449"></a>
static <a class="el" href="../../da/dfa/structez_image_format.htm#a1c595e37b9f96c35dd90570bfcd8f853">Enum</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dfa/structez_image_format.htm#ada077e3ec5fc03d791bf1796de637449">AsLinear</a> (<a class="el" href="../../da/dfa/structez_image_format.htm#a1c595e37b9f96c35dd90570bfcd8f853">Enum</a> format)</td></tr>
<tr class="memdesc:ada077e3ec5fc03d791bf1796de637449"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the corresponding linear format if one exists; otherwise returns the unmodified format. <br /></td></tr>
<tr class="separator:ada077e3ec5fc03d791bf1796de637449"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a8951fd8755ad7838463272964528d0"><td class="memItemLeft" align="right" valign="top"><a id="a3a8951fd8755ad7838463272964528d0"></a>
static ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dfa/structez_image_format.htm#a3a8951fd8755ad7838463272964528d0">GetNumBlocksX</a> (<a class="el" href="../../da/dfa/structez_image_format.htm#a1c595e37b9f96c35dd90570bfcd8f853">Enum</a> format, ezUInt32 uiWidth, ezUInt32 uiPlaneIndex=0)</td></tr>
<tr class="memdesc:a3a8951fd8755ad7838463272964528d0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Computes the number of blocks in X direction (compressed) or pixels (if uncompressed) for a given width (in pixels). <br /></td></tr>
<tr class="separator:a3a8951fd8755ad7838463272964528d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab44d1f6848bd0f8da92a1288176e6f9c"><td class="memItemLeft" align="right" valign="top"><a id="ab44d1f6848bd0f8da92a1288176e6f9c"></a>
static ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dfa/structez_image_format.htm#ab44d1f6848bd0f8da92a1288176e6f9c">GetNumBlocksY</a> (<a class="el" href="../../da/dfa/structez_image_format.htm#a1c595e37b9f96c35dd90570bfcd8f853">Enum</a> format, ezUInt32 uiHeight, ezUInt32 uiPlaneIndex=0)</td></tr>
<tr class="memdesc:ab44d1f6848bd0f8da92a1288176e6f9c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Computes the number of blocks in Y direction (compressed) or pixels (if uncompressed) for a given height (in pixels). <br /></td></tr>
<tr class="separator:ab44d1f6848bd0f8da92a1288176e6f9c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4dcae978327969e68047474fca6b8317"><td class="memItemLeft" align="right" valign="top"><a id="a4dcae978327969e68047474fca6b8317"></a>
static ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dfa/structez_image_format.htm#a4dcae978327969e68047474fca6b8317">GetNumBlocksZ</a> (<a class="el" href="../../da/dfa/structez_image_format.htm#a1c595e37b9f96c35dd90570bfcd8f853">Enum</a> format, ezUInt32 uiDepth, ezUInt32 uiPlaneIndex=0)</td></tr>
<tr class="memdesc:a4dcae978327969e68047474fca6b8317"><td class="mdescLeft">&#160;</td><td class="mdescRight">Computes the number of blocks in Z direction (compressed) or pixels (if uncompressed) for a given height (in pixels). <br /></td></tr>
<tr class="separator:a4dcae978327969e68047474fca6b8317"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a270c2101f16faced537bc80556d84e05"><td class="memItemLeft" align="right" valign="top"><a id="a270c2101f16faced537bc80556d84e05"></a>
static ezUInt64&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dfa/structez_image_format.htm#a270c2101f16faced537bc80556d84e05">GetRowPitch</a> (<a class="el" href="../../da/dfa/structez_image_format.htm#a1c595e37b9f96c35dd90570bfcd8f853">Enum</a> format, ezUInt32 uiWidth, ezUInt32 uiPlaneIndex=0)</td></tr>
<tr class="memdesc:a270c2101f16faced537bc80556d84e05"><td class="mdescLeft">&#160;</td><td class="mdescRight">Computes the size in bytes of a row of blocks (compressed) or pixels (if uncompressed) of the given width. <br /></td></tr>
<tr class="separator:a270c2101f16faced537bc80556d84e05"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af87743d8fba209e3cff23239f7727154"><td class="memItemLeft" align="right" valign="top"><a id="af87743d8fba209e3cff23239f7727154"></a>
static ezUInt64&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dfa/structez_image_format.htm#af87743d8fba209e3cff23239f7727154">GetDepthPitch</a> (<a class="el" href="../../da/dfa/structez_image_format.htm#a1c595e37b9f96c35dd90570bfcd8f853">Enum</a> format, ezUInt32 uiWidth, ezUInt32 uiHeight, ezUInt32 uiPlaneIndex=0)</td></tr>
<tr class="memdesc:af87743d8fba209e3cff23239f7727154"><td class="mdescLeft">&#160;</td><td class="mdescRight">Computes the size in bytes of a 2D slice of blocks (compressed) or pixels (if uncompressed) of the given width and height. <br /></td></tr>
<tr class="separator:af87743d8fba209e3cff23239f7727154"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9ca744cbfbccd909707fdf24a6bd415"><td class="memItemLeft" align="right" valign="top"><a id="ab9ca744cbfbccd909707fdf24a6bd415"></a>
static <a class="el" href="../../d9/d98/structez_image_format_type.htm#aee97a49f3af73fd02429cdc48be337ba">ezImageFormatType::Enum</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dfa/structez_image_format.htm#ab9ca744cbfbccd909707fdf24a6bd415">GetType</a> (<a class="el" href="../../da/dfa/structez_image_format.htm#a1c595e37b9f96c35dd90570bfcd8f853">Enum</a> format)</td></tr>
<tr class="memdesc:ab9ca744cbfbccd909707fdf24a6bd415"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the type of the image format. <br /></td></tr>
<tr class="separator:ab9ca744cbfbccd909707fdf24a6bd415"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f2a125b7b0fa376e8555c88fcaf1619"><td class="memItemLeft" align="right" valign="top"><a id="a1f2a125b7b0fa376e8555c88fcaf1619"></a>
static <a class="el" href="../../da/dfa/structez_image_format.htm#a1c595e37b9f96c35dd90570bfcd8f853">ezImageFormat::Enum</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dfa/structez_image_format.htm#a1f2a125b7b0fa376e8555c88fcaf1619">FromPixelMask</a> (ezUInt32 uiRedMask, ezUInt32 uiGreenMask, ezUInt32 uiBlueMask, ezUInt32 uiAlphaMask, ezUInt32 uiBitsPerPixel)</td></tr>
<tr class="memdesc:a1f2a125b7b0fa376e8555c88fcaf1619"><td class="mdescLeft">&#160;</td><td class="mdescRight">Finds a format matching the given component masks. <br /></td></tr>
<tr class="separator:a1f2a125b7b0fa376e8555c88fcaf1619"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aadd0c294008e9abc3c65f146d6ade089"><td class="memItemLeft" align="right" valign="top"><a id="aadd0c294008e9abc3c65f146d6ade089"></a>
static <a class="el" href="../../da/dfa/structez_image_format.htm#a1c595e37b9f96c35dd90570bfcd8f853">ezImageFormat::Enum</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dfa/structez_image_format.htm#aadd0c294008e9abc3c65f146d6ade089">GetPlaneSubFormat</a> (<a class="el" href="../../da/dfa/structez_image_format.htm#a1c595e37b9f96c35dd90570bfcd8f853">ezImageFormat::Enum</a> format, ezUInt32 uiPlaneIndex)</td></tr>
<tr class="memdesc:aadd0c294008e9abc3c65f146d6ade089"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the format of a subplane of a given format. <br /></td></tr>
<tr class="separator:aadd0c294008e9abc3c65f146d6ade089"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0cbe838c3c286be963edaeebb5ef1a80"><td class="memItemLeft" align="right" valign="top"><a id="a0cbe838c3c286be963edaeebb5ef1a80"></a>
static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dfa/structez_image_format.htm#a0cbe838c3c286be963edaeebb5ef1a80">IsCompatible</a> (<a class="el" href="../../da/dfa/structez_image_format.htm#a1c595e37b9f96c35dd90570bfcd8f853">Enum</a> left, <a class="el" href="../../da/dfa/structez_image_format.htm#a1c595e37b9f96c35dd90570bfcd8f853">Enum</a> right)</td></tr>
<tr class="memdesc:a0cbe838c3c286be963edaeebb5ef1a80"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if the data formats are compatible, i.e. can be copied into one another. <br /></td></tr>
<tr class="separator:a0cbe838c3c286be963edaeebb5ef1a80"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12b1c23edd6aea4d7b674731cb3c936c"><td class="memItemLeft" align="right" valign="top"><a id="a12b1c23edd6aea4d7b674731cb3c936c"></a>
static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/dfa/structez_image_format.htm#a12b1c23edd6aea4d7b674731cb3c936c">RequiresFirstLevelBlockAlignment</a> (<a class="el" href="../../da/dfa/structez_image_format.htm#a1c595e37b9f96c35dd90570bfcd8f853">Enum</a> format)</td></tr>
<tr class="memdesc:a12b1c23edd6aea4d7b674731cb3c936c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if the most high-res miplevel requires block alignment. <br /></td></tr>
<tr class="separator:a12b1c23edd6aea4d7b674731cb3c936c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Enum describing the encoding format of the pixels of an image. </p>
</div><h2 class="groupheader">Member Enumeration Documentation</h2>
<a id="a1c595e37b9f96c35dd90570bfcd8f853"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1c595e37b9f96c35dd90570bfcd8f853">&#9670;&nbsp;</a></span>Enum</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="../../da/dfa/structez_image_format.htm#a1c595e37b9f96c35dd90570bfcd8f853">ezImageFormat::Enum</a> : ezUInt16</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Enum describing the encoding format of the pixels of an image. </p>
<p>Image formats can be separated into three types: linear, block compressed, and planar. In linear formats, the various channels of each pixel (such as R, G, B) are stored interleaved in memory [RGBRGBRGB...]. This is in contrast to planar formats, where each channel is stored in a separate slice of memory [RRR...GGG...BBB...]. Planar formats are typically used for video formats with luma and chroma channels, and may also be partially planarized. For example, NV12 has a luma (Y) plane and a chroma (UV) plane, where the chroma plane again stores the two sub-channels linearly interleaved. For these formats, <a class="el" href="../../da/dfa/structez_image_format.htm#aadd0c294008e9abc3c65f146d6ade089" title="Returns the format of a subplane of a given format.">GetPlaneSubFormat()</a> returns a description of the encoding within each plane. Block compressed formats use a different approach, where pixels are arranged in blocks of a fixed format-dependent size (from 4x4 for BC1-7 and up to 12x12 for some ASTC formats), with colors encoded with a fixed ratio compression. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a1d21a0b757ee56133c40cec4b1a5b95f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1d21a0b757ee56133c40cec4b1a5b95f">&#9670;&nbsp;</a></span>GetName()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const char * ezImageFormat::GetName </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../da/dfa/structez_image_format.htm#a1c595e37b9f96c35dd90570bfcd8f853">Enum</a>&#160;</td>
          <td class="paramname"><em>format</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the name of the given format. </p>
<p>The returned string is guaranteed to be stable across engine versions and thus suitable for serialization. </p>

</div>
</div>
<hr/>The documentation for this struct was generated from the following files:<ul>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Texture/Image/<a class="el" href="../../d3/d5d/_image_format_8h_source.htm">ImageFormat.h</a></li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Texture/Image/Implementation/ImageFormat.cpp</li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../da/dfa/structez_image_format.htm">ezImageFormat</a></li>
    <li class="footer">Generated on Tue Nov 7 2023 21:39:24 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
