<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Reflection/Implementation/MessageHandler.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 23.04</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('da/d67/_message_handler_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">MessageHandler.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160; </div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;Foundation/Basics.h&gt;</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;Foundation/Reflection/Implementation/RTTI.h&gt;</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160; </div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="keyword">class </span><a class="code" href="../../dd/d22/classez_message.htm">ezMessage</a>;</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160; </div>
<div class="line"><a name="l00011"></a><span class="lineno"><a class="line" href="../../d5/d1b/classez_abstract_message_handler.htm">   11</a></span>&#160;<span class="keyword">class </span>EZ_FOUNDATION_DLL <a class="code" href="../../d5/d1b/classez_abstract_message_handler.htm">ezAbstractMessageHandler</a></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;{</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;  EZ_ALWAYS_INLINE <span class="keywordtype">void</span> operator()(<span class="keywordtype">void</span>* pInstance, <a class="code" href="../../dd/d22/classez_message.htm">ezMessage</a>&amp; ref_msg) { (*m_DispatchFunc)(pInstance, ref_msg); }</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160; </div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;  EZ_FORCE_INLINE <span class="keywordtype">void</span> operator()(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance, <a class="code" href="../../dd/d22/classez_message.htm">ezMessage</a>&amp; ref_msg)</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;  {</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    EZ_ASSERT_DEV(m_bIsConst, <span class="stringliteral">&quot;Calling a non const message handler with a const instance.&quot;</span>);</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    (*m_ConstDispatchFunc)(pInstance, ref_msg);</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;  }</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160; </div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;  EZ_ALWAYS_INLINE ezMessageId GetMessageId()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_Id; }</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160; </div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;  EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> IsConst()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_bIsConst; }</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160; </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;  <span class="keyword">using</span> DispatchFunc = void (*)(<span class="keywordtype">void</span>*, <a class="code" href="../../dd/d22/classez_message.htm">ezMessage</a>&amp;);</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  <span class="keyword">using</span> ConstDispatchFunc = void (*)(<span class="keyword">const</span> <span class="keywordtype">void</span>*, <a class="code" href="../../dd/d22/classez_message.htm">ezMessage</a>&amp;);</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160; </div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;  <span class="keyword">union</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  {</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    DispatchFunc m_DispatchFunc;</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    ConstDispatchFunc m_ConstDispatchFunc;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  };</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;  ezMessageId m_Id;</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;  <span class="keywordtype">bool</span> m_bIsConst;</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;};</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160; </div>
<div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="../../d9/d44/structez_message_sender_info.htm">   39</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../d9/d44/structez_message_sender_info.htm">ezMessageSenderInfo</a></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span>* m_szName;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* m_pMessageType;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;};</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160; </div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keyword">namespace </span>ezInternal</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;{</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Class, <span class="keyword">typename</span> MessageType&gt;</div>
<div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="../../dc/d29/structez_internal_1_1_message_handler_traits.htm">   48</a></span>&#160;  <span class="keyword">struct </span><a class="code" href="../../dc/d29/structez_internal_1_1_message_handler_traits.htm">MessageHandlerTraits</a></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;  {</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    <span class="keyword">static</span> ezCompileTimeTrueType IsConst(<span class="keywordtype">void</span> (Class::*)(MessageType&amp;) <span class="keyword">const</span>);</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;    <span class="keyword">static</span> ezCompileTimeFalseType IsConst(...);</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  };</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160; </div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;  <span class="keyword">template</span> &lt;<span class="keywordtype">bool</span> bIsConst&gt;</div>
<div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="../../d5/df4/structez_internal_1_1_message_handler.htm">   55</a></span>&#160;  <span class="keyword">struct </span><a class="code" href="../../d5/df4/structez_internal_1_1_message_handler.htm">MessageHandler</a></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;  {</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Class, <span class="keyword">typename</span> MessageType, <span class="keywordtype">void</span> (Class::*Method)(MessageType&amp;)&gt;</div>
<div class="line"><a name="l00058"></a><span class="lineno"><a class="line" href="../../de/db6/classez_internal_1_1_message_handler_1_1_impl.htm">   58</a></span>&#160;    <span class="keyword">class </span><a class="code" href="../../de/db6/classez_internal_1_1_message_handler_1_1_impl.htm">Impl</a> : <span class="keyword">public</span> <a class="code" href="../../d5/d1b/classez_abstract_message_handler.htm">ezAbstractMessageHandler</a></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    {</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keyword">public</span>:</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;      <a class="code" href="../../de/db6/classez_internal_1_1_message_handler_1_1_impl.htm">Impl</a>()</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;      {</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        m_DispatchFunc = &amp;Dispatch;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        m_Id = MessageType::GetTypeMsgId();</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        m_bIsConst = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;      }</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160; </div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;      <span class="keyword">static</span> <span class="keywordtype">void</span> Dispatch(<span class="keywordtype">void</span>* pInstance, <a class="code" href="../../dd/d22/classez_message.htm">ezMessage</a>&amp; ref_msg)</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;      {</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        Class* pTargetInstance = <span class="keyword">static_cast&lt;</span>Class*<span class="keyword">&gt;</span>(pInstance);</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        (pTargetInstance-&gt;*Method)(<span class="keyword">static_cast&lt;</span>MessageType&amp;<span class="keyword">&gt;</span>(ref_msg));</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;      }</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    };</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;  };</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160; </div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  <span class="keyword">template</span> &lt;&gt;</div>
<div class="line"><a name="l00077"></a><span class="lineno"><a class="line" href="../../db/dd8/structez_internal_1_1_message_handler_3_01true_01_4.htm">   77</a></span>&#160;  <span class="keyword">struct </span><a class="code" href="../../d5/df4/structez_internal_1_1_message_handler.htm">MessageHandler</a>&lt;true&gt;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;  {</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Class, <span class="keyword">typename</span> MessageType, <span class="keywordtype">void</span> (Class::*Method)(MessageType&amp;) const&gt;</div>
<div class="line"><a name="l00080"></a><span class="lineno"><a class="line" href="../../d0/d45/classez_internal_1_1_message_handler_3_01true_01_4_1_1_impl.htm">   80</a></span>&#160;    <span class="keyword">class </span>Impl : <span class="keyword">public</span> <a class="code" href="../../d5/d1b/classez_abstract_message_handler.htm">ezAbstractMessageHandler</a></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    {</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="keyword">public</span>:</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;      Impl()</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;      {</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;        m_ConstDispatchFunc = &amp;Dispatch;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        m_Id = MessageType::GetTypeMsgId();</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        m_bIsConst = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;      }</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160; </div>
<div class="line"><a name="l00091"></a><span class="lineno"><a class="line" href="../../d0/d45/classez_internal_1_1_message_handler_3_01true_01_4_1_1_impl.htm#a14b97e54e80b314fa75e83a85bc3f463">   91</a></span>&#160;      <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../d0/d45/classez_internal_1_1_message_handler_3_01true_01_4_1_1_impl.htm#a14b97e54e80b314fa75e83a85bc3f463">Dispatch</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance, <a class="code" href="../../dd/d22/classez_message.htm">ezMessage</a>&amp; ref_msg)</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;      {</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        <span class="keyword">const</span> Class* pTargetInstance = <span class="keyword">static_cast&lt;</span><span class="keyword">const </span>Class*<span class="keyword">&gt;</span>(pInstance);</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        (pTargetInstance-&gt;*Method)(<span class="keyword">static_cast&lt;</span>MessageType&amp;<span class="keyword">&gt;</span>(ref_msg));</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;      }</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    };</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;  };</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;} <span class="comment">// namespace ezInternal</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160; </div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="preprocessor">#define EZ_IS_CONST_MESSAGE_HANDLER(Class, MessageType, Method) \</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="preprocessor">  (sizeof(ezInternal::MessageHandlerTraits&lt;Class, MessageType&gt;::IsConst(Method)) == sizeof(ezCompileTimeTrueType))</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="astructez_internal_1_1_message_handler_traits_htm"><div class="ttname"><a href="../../dc/d29/structez_internal_1_1_message_handler_traits.htm">ezInternal::MessageHandlerTraits</a></div><div class="ttdef"><b>Definition:</b> MessageHandler.h:48</div></div>
<div class="ttc" id="aclassez_message_htm"><div class="ttname"><a href="../../dd/d22/classez_message.htm">ezMessage</a></div><div class="ttdoc">Base class for all message types. Each message type has it's own id which is used to dispatch message...</div><div class="ttdef"><b>Definition:</b> Message.h:21</div></div>
<div class="ttc" id="aclassez_abstract_message_handler_htm"><div class="ttname"><a href="../../d5/d1b/classez_abstract_message_handler.htm">ezAbstractMessageHandler</a></div><div class="ttdoc">The base class for all message handlers that a type provides.</div><div class="ttdef"><b>Definition:</b> MessageHandler.h:11</div></div>
<div class="ttc" id="aclassez_r_t_t_i_htm"><div class="ttname"><a href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a></div><div class="ttdoc">This enumerable class holds information about reflected types. Each instance represents one type that...</div><div class="ttdef"><b>Definition:</b> RTTI.h:30</div></div>
<div class="ttc" id="astructez_internal_1_1_message_handler_htm"><div class="ttname"><a href="../../d5/df4/structez_internal_1_1_message_handler.htm">ezInternal::MessageHandler</a></div><div class="ttdef"><b>Definition:</b> MessageHandler.h:55</div></div>
<div class="ttc" id="astructez_message_sender_info_htm"><div class="ttname"><a href="../../d9/d44/structez_message_sender_info.htm">ezMessageSenderInfo</a></div><div class="ttdef"><b>Definition:</b> MessageHandler.h:39</div></div>
<div class="ttc" id="aclassez_internal_1_1_message_handler_1_1_impl_htm"><div class="ttname"><a href="../../de/db6/classez_internal_1_1_message_handler_1_1_impl.htm">ezInternal::MessageHandler::Impl</a></div><div class="ttdef"><b>Definition:</b> MessageHandler.h:58</div></div>
<div class="ttc" id="aclassez_internal_1_1_message_handler_3_01true_01_4_1_1_impl_htm_a14b97e54e80b314fa75e83a85bc3f463"><div class="ttname"><a href="../../d0/d45/classez_internal_1_1_message_handler_3_01true_01_4_1_1_impl.htm#a14b97e54e80b314fa75e83a85bc3f463">ezInternal::MessageHandler&lt; true &gt;::Impl::Dispatch</a></div><div class="ttdeci">static void Dispatch(const void *pInstance, ezMessage &amp;ref_msg)</div><div class="ttdoc">Casts the given message to the type of this message handler, then passes that to the class instance.</div><div class="ttdef"><b>Definition:</b> MessageHandler.h:91</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_217b90e143c3d27cf4319fb9e916f4ad.htm">Reflection</a></li><li class="navelem"><a class="el" href="../../dir_4d499b0494fc84c22e280b98d7f4832b.htm">Implementation</a></li><li class="navelem"><b>MessageHandler.h</b></li>
    <li class="footer">Generated on Sat Mar 25 2023 19:21:56 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
