digraph "Graphical Class Hierarchy"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node0 [label="ezAbstractProperty",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d81/classez_abstract_property.htm",tooltip="This is the base interface for all properties in the reflection system. It provides enough informatio..."];
  Node0 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node1 [label="ezAbstractArrayProperty",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/dfb/classez_abstract_array_property.htm",tooltip="The base class for a property that represents an array of values."];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="ezTypedArrayProperty\l\< ezTypeTraits\< Type\l \>::NonConstReferenceType \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/d33/classez_typed_array_property.htm",tooltip=" "];
  Node2 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="ezMemberArrayProperty\l\< Class, Container, Type \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/d8b/classez_member_array_property.htm",tooltip=" "];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="ezPhantomArrayProperty",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d21/classez_phantom_array_property.htm",tooltip=" "];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="ezTypedArrayProperty\l\< Type \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/d33/classez_typed_array_property.htm",tooltip="Do not cast into this class or any of its derived classes, use ezTypedArrayProperty instead."];
  Node5 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="ezAccessorArrayProperty\l\< Class, Type \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/dc1/classez_accessor_array_property.htm",tooltip=" "];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="ezTypedArrayProperty\l\< const char * \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d7a/classez_typed_array_property_3_01const_01char_01_5_01_4.htm",tooltip="Specialization of ezTypedArrayProperty to retain the pointer in const char*."];
  Node0 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="ezAbstractConstantProperty",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d8/d53/classez_abstract_constant_property.htm",tooltip="This is the base class for all constant properties that are stored inside the RTTI data."];
  Node8 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="ezPhantomConstantProperty",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/dbc/classez_phantom_constant_property.htm",tooltip=" "];
  Node8 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="ezTypedConstantProperty\l\< Type \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d2e/classez_typed_constant_property.htm",tooltip="The base class for all typed member properties. Ie. once the type of a property is determined,..."];
  Node10 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="ezConstantProperty\l\< Type \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/dfd/classez_constant_property.htm",tooltip="[internal] An implementation of ezTypedConstantProperty that accesses the property data directly."];
  Node0 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="ezAbstractFunctionProperty",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d3/d4c/classez_abstract_function_property.htm",tooltip="The base class for a property that represents a function."];
  Node12 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="ezTypedFunctionProperty\l\< CLASS *, Args... \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d3b/classez_typed_function_property.htm",tooltip=" "];
  Node13 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="ezConstructorFunctionProperty\l\< CLASS, Args \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/dc4/classez_constructor_function_property.htm",tooltip=" "];
  Node12 -> Node15 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node15 [label="ezTypedFunctionProperty\l\< R, Args... \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d3b/classez_typed_function_property.htm",tooltip=" "];
  Node15 -> Node16 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node16 [label="ezFunctionProperty\l\< R(*)(Args...)\>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/d18/classez_function_property_3_01_r_07_5_08_07_args_8_8_8_08_4.htm",tooltip=" "];
  Node12 -> Node17 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node17 [label="ezPhantomFunctionProperty",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d0/d33/classez_phantom_function_property.htm",tooltip=" "];
  Node12 -> Node18 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node18 [label="ezTypedFunctionProperty\l\< R, Args \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d3b/classez_typed_function_property.htm",tooltip=" "];
  Node0 -> Node19 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node19 [label="ezAbstractMapProperty",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d3/d48/classez_abstract_map_property.htm",tooltip="The base class for a property that represents a set of values."];
  Node19 -> Node20 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node20 [label="ezTypedMapProperty\l\< ezTypeTraits\< Type\l \>::NonConstReferenceType \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d97/classez_typed_map_property.htm",tooltip=" "];
  Node20 -> Node21 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node21 [label="ezMemberMapProperty\l\< Class, Container,\l Type \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dc/d36/classez_member_map_property.htm",tooltip=" "];
  Node19 -> Node22 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node22 [label="ezPhantomMapProperty",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d8/d39/classez_phantom_map_property.htm",tooltip=" "];
  Node19 -> Node23 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node23 [label="ezTypedMapProperty\l\< Type \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d97/classez_typed_map_property.htm",tooltip=" "];
  Node23 -> Node24 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node24 [label="ezAccessorMapProperty\l\< Class, Type, Container \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$de/d17/classez_accessor_map_property.htm",tooltip=" "];
  Node23 -> Node25 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node25 [label="ezWriteAccessorMapProperty\l\< Class, Type, Container \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/d8a/classez_write_accessor_map_property.htm",tooltip=" "];
  Node0 -> Node26 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node26 [label="ezAbstractMemberProperty",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d67/classez_abstract_member_property.htm",tooltip="This is the base class for all properties that are members of a class. It provides more information a..."];
  Node26 -> Node27 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node27 [label="ezTypedMemberProperty\l\< ezColorGammaUB \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/deb/classez_typed_member_property.htm",tooltip=" "];
  Node26 -> Node28 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node28 [label="ezTypedMemberProperty\l\< ezTypeTraits\< Type\l \>::NonConstReferenceType \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/deb/classez_typed_member_property.htm",tooltip=" "];
  Node28 -> Node29 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node29 [label="ezAccessorProperty\l\< Class, Type \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/d65/classez_accessor_property.htm",tooltip="[internal] An implementation of ezTypedMemberProperty that uses custom getter / setter functions to a..."];
  Node26 -> Node30 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node30 [label="ezTypedMemberProperty\l\< ezColor \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/deb/classez_typed_member_property.htm",tooltip=" "];
  Node26 -> Node31 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node31 [label="ezAbstractEnumerationProperty",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/d61/classez_abstract_enumeration_property.htm",tooltip="The base class for enum and bitflags member properties."];
  Node31 -> Node32 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node32 [label="ezTypedEnumProperty\l\< EnumType \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d5d/classez_typed_enum_property.htm",tooltip="[internal] Base class for enum / bitflags properties that already defines the type."];
  Node32 -> Node33 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node33 [label="ezBitflagsAccessorProperty\l\< Class, EnumType, Type \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/d58/classez_bitflags_accessor_property.htm",tooltip="[internal] An implementation of ezTypedEnumProperty that uses custom getter / setter functions to acc..."];
  Node32 -> Node34 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node34 [label="ezBitflagsMemberProperty\l\< Class, EnumType, Type \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d0/d3e/classez_bitflags_member_property.htm",tooltip="[internal] An implementation of ezTypedEnumProperty that accesses the bitflags property data directly..."];
  Node32 -> Node35 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node35 [label="ezEnumAccessorProperty\l\< Class, EnumType, Type \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/dd4/classez_enum_accessor_property.htm",tooltip="[internal] An implementation of ezTypedEnumProperty that uses custom getter / setter functions to acc..."];
  Node32 -> Node36 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node36 [label="ezEnumMemberProperty\l\< Class, EnumType, Type \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$df/d6d/classez_enum_member_property.htm",tooltip="[internal] An implementation of ezTypedEnumProperty that accesses the enum property data directly."];
  Node26 -> Node37 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node37 [label="ezPhantomMemberProperty",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/dcc/classez_phantom_member_property.htm",tooltip=" "];
  Node26 -> Node38 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node38 [label="ezTypedMemberProperty\l\< Type \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/deb/classez_typed_member_property.htm",tooltip="The base class for all typed member properties. I.e. once the type of a property is determined,..."];
  Node38 -> Node39 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node39 [label="ezMemberProperty\< Class,\l Type \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d2/d85/classez_member_property.htm",tooltip="[internal] An implementation of ezTypedMemberProperty that accesses the property data directly."];
  Node26 -> Node40 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node40 [label="ezTypedMemberProperty\l\< const char * \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$de/dcc/classez_typed_member_property_3_01const_01char_01_5_01_4.htm",tooltip="Specialization of ezTypedMemberProperty for const char*."];
  Node0 -> Node41 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node41 [label="ezAbstractSetProperty",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dc6/classez_abstract_set_property.htm",tooltip="The base class for a property that represents a set of values."];
  Node41 -> Node42 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node42 [label="ezTypedSetProperty\l\< ezTypeTraits\< const\l char * \>::NonConstReference\lType \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/d93/classez_typed_set_property.htm",tooltip=" "];
  Node42 -> Node43 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node43 [label="ezMemberSetProperty\l\< Class, ezTagSet, const\l char * \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d02/classez_member_set_property_3_01_class_00_01ez_tag_set_00_01const_01char_01_5_01_4.htm",tooltip=" "];
  Node41 -> Node44 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node44 [label="ezTypedSetProperty\l\< ezTypeTraits\< Type\l \>::NonConstReferenceType \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/d93/classez_typed_set_property.htm",tooltip=" "];
  Node44 -> Node45 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node45 [label="ezMemberSetProperty\l\< Class, Container,\l Type \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$dd/db3/classez_member_set_property.htm",tooltip=" "];
  Node41 -> Node46 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node46 [label="ezPhantomSetProperty",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/da1/classez_phantom_set_property.htm",tooltip=" "];
  Node41 -> Node47 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node47 [label="ezTypedSetProperty\l\< Type \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/d93/classez_typed_set_property.htm",tooltip="Do not cast into this class or any of its derived classes, use ezAbstractSetProperty instead."];
  Node47 -> Node48 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node48 [label="ezAccessorSetProperty\l\< Class, Type, Container \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d0/d0a/classez_accessor_set_property.htm",tooltip=" "];
  Node41 -> Node49 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node49 [label="ezTypedSetProperty\l\< const char * \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/d9d/classez_typed_set_property_3_01const_01char_01_5_01_4.htm",tooltip="Specialization of ezTypedArrayProperty to retain the pointer in const char*."];
}
