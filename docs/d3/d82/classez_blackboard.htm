<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: ezBlackboard Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 21.10</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d3/d82/classez_blackboard.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="../../d4/d0b/classez_blackboard-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ezBlackboard Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>A blackboard is a key/value store that provides OnChange events to be informed when a value changes.  
 <a href="../../d3/d82/classez_blackboard.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../de/dfc/_blackboard_8h_source.htm">Blackboard.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for ezBlackboard:</div>
<div class="dyncontent">
<div class="center"><img src="../../d7/d37/classez_blackboard__inherit__graph.png" border="0" usemap="#ez_blackboard_inherit__map" alt="Inheritance graph"/></div>
<map name="ez_blackboard_inherit__map" id="ez_blackboard_inherit__map">
<area shape="rect" title="A blackboard is a key/value store that provides OnChange events to be informed when a value changes." alt="" coords="23,155,134,181"/>
<area shape="rect" href="../../d2/d70/classez_ref_counted.htm" title="Base class for reference counted objects." alt="" coords="22,80,135,107"/>
<area shape="rect" href="../../d9/d13/classez_ref_counting_impl.htm" title=" " alt="" coords="5,5,152,32"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d1b/structez_blackboard_1_1_entry.htm">Entry</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d20/structez_blackboard_1_1_entry_event.htm">EntryEvent</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a8103cf24f965d01732c4154d5ebf382a"><td class="memItemLeft" align="right" valign="top"><a id="a8103cf24f965d01732c4154d5ebf382a"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetName</b> (const char *szName)</td></tr>
<tr class="separator:a8103cf24f965d01732c4154d5ebf382a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a54d62c65c8faf1d51ea2e430c85470ca"><td class="memItemLeft" align="right" valign="top"><a id="a54d62c65c8faf1d51ea2e430c85470ca"></a>
const char *&#160;</td><td class="memItemRight" valign="bottom"><b>GetName</b> () const</td></tr>
<tr class="separator:a54d62c65c8faf1d51ea2e430c85470ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af5deabd8727c9618af31b7dc71380ea1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d82/classez_blackboard.htm#af5deabd8727c9618af31b7dc71380ea1">RegisterEntry</a> (const <a class="el" href="../../de/dce/classez_hashed_string.htm">ezHashedString</a> &amp;name, const <a class="el" href="../../de/de6/classez_variant.htm">ezVariant</a> &amp;initialValue, <a class="el" href="../../d1/dec/structez_bitflags.htm">ezBitflags</a>&lt; <a class="el" href="../../d4/d73/structez_blackboard_entry_flags.htm">ezBlackboardEntryFlags</a> &gt; flags=ezBlackboardEntryFlags::None)</td></tr>
<tr class="memdesc:af5deabd8727c9618af31b7dc71380ea1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Registers an entry with a name, value and flags.  <a href="../../d3/d82/classez_blackboard.htm#af5deabd8727c9618af31b7dc71380ea1">More...</a><br /></td></tr>
<tr class="separator:af5deabd8727c9618af31b7dc71380ea1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6fc3a41d45bbe1a5d017774191cb993"><td class="memItemLeft" align="right" valign="top"><a id="af6fc3a41d45bbe1a5d017774191cb993"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d82/classez_blackboard.htm#af6fc3a41d45bbe1a5d017774191cb993">UnregisterEntry</a> (const <a class="el" href="../../de/dce/classez_hashed_string.htm">ezHashedString</a> &amp;name)</td></tr>
<tr class="memdesc:af6fc3a41d45bbe1a5d017774191cb993"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes the named entry. Does nothing, if no such entry exists. <br /></td></tr>
<tr class="separator:af6fc3a41d45bbe1a5d017774191cb993"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a100f65faf0754cb81ce816dbcf34df36"><td class="memItemLeft" align="right" valign="top"><a id="a100f65faf0754cb81ce816dbcf34df36"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d82/classez_blackboard.htm#a100f65faf0754cb81ce816dbcf34df36">UnregisterAllEntries</a> ()</td></tr>
<tr class="memdesc:a100f65faf0754cb81ce816dbcf34df36"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes all entries. <br /></td></tr>
<tr class="separator:a100f65faf0754cb81ce816dbcf34df36"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff6c7f5d123480a10c2d8e91608a0667"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d4/da9/structez_result.htm">ezResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d82/classez_blackboard.htm#aff6c7f5d123480a10c2d8e91608a0667">SetEntryValue</a> (const <a class="el" href="../../db/dcf/classez_temp_hashed_string.htm">ezTempHashedString</a> &amp;name, const <a class="el" href="../../de/de6/classez_variant.htm">ezVariant</a> &amp;value, bool force=false)</td></tr>
<tr class="memdesc:aff6c7f5d123480a10c2d8e91608a0667"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the value of the named entry.  <a href="../../d3/d82/classez_blackboard.htm#aff6c7f5d123480a10c2d8e91608a0667">More...</a><br /></td></tr>
<tr class="separator:aff6c7f5d123480a10c2d8e91608a0667"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add4859b71319b650315022ac5326e39d"><td class="memItemLeft" align="right" valign="top"><a id="add4859b71319b650315022ac5326e39d"></a>
const <a class="el" href="../../de/d1b/structez_blackboard_1_1_entry.htm">Entry</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d82/classez_blackboard.htm#add4859b71319b650315022ac5326e39d">GetEntry</a> (const <a class="el" href="../../db/dcf/classez_temp_hashed_string.htm">ezTempHashedString</a> &amp;name) const</td></tr>
<tr class="memdesc:add4859b71319b650315022ac5326e39d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a pointer to the named entry, or nullptr if no such entry was registered. <br /></td></tr>
<tr class="separator:add4859b71319b650315022ac5326e39d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0d5716dd606e33f34ab045ee55c3628e"><td class="memItemLeft" align="right" valign="top"><a id="a0d5716dd606e33f34ab045ee55c3628e"></a>
<a class="el" href="../../d1/dec/structez_bitflags.htm">ezBitflags</a>&lt; <a class="el" href="../../d4/d73/structez_blackboard_entry_flags.htm">ezBlackboardEntryFlags</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d82/classez_blackboard.htm#a0d5716dd606e33f34ab045ee55c3628e">GetEntryFlags</a> (const <a class="el" href="../../db/dcf/classez_temp_hashed_string.htm">ezTempHashedString</a> &amp;name) const</td></tr>
<tr class="memdesc:a0d5716dd606e33f34ab045ee55c3628e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the flags of the named entry, or ezBlackboardEntryFlags::Invalid, if no such entry was registered. <br /></td></tr>
<tr class="separator:a0d5716dd606e33f34ab045ee55c3628e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab2eac8b6329106bab185514e08fbc502"><td class="memItemLeft" align="right" valign="top"><a id="ab2eac8b6329106bab185514e08fbc502"></a>
<a class="el" href="../../de/de6/classez_variant.htm">ezVariant</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d82/classez_blackboard.htm#ab2eac8b6329106bab185514e08fbc502">GetEntryValue</a> (const <a class="el" href="../../db/dcf/classez_temp_hashed_string.htm">ezTempHashedString</a> &amp;name) const</td></tr>
<tr class="memdesc:ab2eac8b6329106bab185514e08fbc502"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the value of the named entry, or an invalid <a class="el" href="../../de/de6/classez_variant.htm" title="ezVariant is a class that can store different types of variables, which is useful in situations where...">ezVariant</a>, if no such entry was registered. <br /></td></tr>
<tr class="separator:ab2eac8b6329106bab185514e08fbc502"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2207aca91c7e641b00a9b85b8c988926"><td class="memItemLeft" align="right" valign="top"><a id="a2207aca91c7e641b00a9b85b8c988926"></a>
const <a class="el" href="../../d8/d86/classez_hash_table.htm">ezHashTable</a>&lt; <a class="el" href="../../de/dce/classez_hashed_string.htm">ezHashedString</a>, <a class="el" href="../../de/d1b/structez_blackboard_1_1_entry.htm">Entry</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d82/classez_blackboard.htm#a2207aca91c7e641b00a9b85b8c988926">GetAllEntries</a> () const</td></tr>
<tr class="memdesc:a2207aca91c7e641b00a9b85b8c988926"><td class="mdescLeft">&#160;</td><td class="mdescRight">Grants read access to the entire map of entries. <br /></td></tr>
<tr class="separator:a2207aca91c7e641b00a9b85b8c988926"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad3de7feac2179bbb41912805343c5f84"><td class="memItemLeft" align="right" valign="top"><a id="ad3de7feac2179bbb41912805343c5f84"></a>
const <a class="el" href="../../d0/daf/classez_event.htm">ezEvent</a>&lt; <a class="el" href="../../d3/d20/structez_blackboard_1_1_entry_event.htm">EntryEvent</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d82/classez_blackboard.htm#ad3de7feac2179bbb41912805343c5f84">OnEntryEvent</a> () const</td></tr>
<tr class="memdesc:ad3de7feac2179bbb41912805343c5f84"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allows you to register to the OnEntryEvent. This is broadcast whenever an entry is modified that has the flag <a class="el" href="../../d4/d73/structez_blackboard_entry_flags.htm#ad14f88d591c5f520c1dbe00d5adc8a1baab50f22a85ebd2a3f6b9dad3c43778db" title="Broadcast the &#39;ValueChanged&#39; event when this entry&#39;s value is modified.">ezBlackboardEntryFlags::OnChangeEvent</a>. <br /></td></tr>
<tr class="separator:ad3de7feac2179bbb41912805343c5f84"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a26bbfa369e248a895deb6a344544c273"><td class="memItemLeft" align="right" valign="top">ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d82/classez_blackboard.htm#a26bbfa369e248a895deb6a344544c273">GetBlackboardChangeCounter</a> () const</td></tr>
<tr class="memdesc:a26bbfa369e248a895deb6a344544c273"><td class="mdescLeft">&#160;</td><td class="mdescRight">This counter is increased every time an entry is added or removed (but not when it is modified).  <a href="../../d3/d82/classez_blackboard.htm#a26bbfa369e248a895deb6a344544c273">More...</a><br /></td></tr>
<tr class="separator:a26bbfa369e248a895deb6a344544c273"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a82efe8e2cbeeb4224c71f93332968279"><td class="memItemLeft" align="right" valign="top">ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d82/classez_blackboard.htm#a82efe8e2cbeeb4224c71f93332968279">GetBlackboardEntryChangeCounter</a> () const</td></tr>
<tr class="memdesc:a82efe8e2cbeeb4224c71f93332968279"><td class="mdescLeft">&#160;</td><td class="mdescRight">This counter is increased every time any entry's value is modified.  <a href="../../d3/d82/classez_blackboard.htm#a82efe8e2cbeeb4224c71f93332968279">More...</a><br /></td></tr>
<tr class="separator:a82efe8e2cbeeb4224c71f93332968279"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae846d9e95f5a2f734259d62ad3212e62"><td class="memItemLeft" align="right" valign="top"><a id="ae846d9e95f5a2f734259d62ad3212e62"></a>
<a class="el" href="../../d4/da9/structez_result.htm">ezResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d82/classez_blackboard.htm#ae846d9e95f5a2f734259d62ad3212e62">Serialize</a> (<a class="el" href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a> &amp;stream) const</td></tr>
<tr class="memdesc:ae846d9e95f5a2f734259d62ad3212e62"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stores all entries that have the 'Save' flag in the stream. <br /></td></tr>
<tr class="separator:ae846d9e95f5a2f734259d62ad3212e62"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a297684e5e3c1b0cd12443a5dba81eb58"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d4/da9/structez_result.htm">ezResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d82/classez_blackboard.htm#a297684e5e3c1b0cd12443a5dba81eb58">Deserialize</a> (<a class="el" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a> &amp;stream)</td></tr>
<tr class="memdesc:a297684e5e3c1b0cd12443a5dba81eb58"><td class="mdescLeft">&#160;</td><td class="mdescRight">Restores entries from the stream.  <a href="../../d3/d82/classez_blackboard.htm#a297684e5e3c1b0cd12443a5dba81eb58">More...</a><br /></td></tr>
<tr class="separator:a297684e5e3c1b0cd12443a5dba81eb58"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classez_ref_counted"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classez_ref_counted')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../d2/d70/classez_ref_counted.htm">ezRefCounted</a></td></tr>
<tr class="memitem:af5fab907e01fc6c506aef28442850ce1 inherit pub_methods_classez_ref_counted"><td class="memItemLeft" align="right" valign="top"><a id="af5fab907e01fc6c506aef28442850ce1"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d70/classez_ref_counted.htm#af5fab907e01fc6c506aef28442850ce1">~ezRefCounted</a> ()=default</td></tr>
<tr class="memdesc:af5fab907e01fc6c506aef28442850ce1 inherit pub_methods_classez_ref_counted"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a virtual destructor. <br /></td></tr>
<tr class="separator:af5fab907e01fc6c506aef28442850ce1 inherit pub_methods_classez_ref_counted"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classez_ref_counting_impl"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classez_ref_counting_impl')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../d9/d13/classez_ref_counting_impl.htm">ezRefCountingImpl</a></td></tr>
<tr class="memitem:add0d6f6a7ce78908e887ba42033412ca inherit pub_methods_classez_ref_counting_impl"><td class="memItemLeft" align="right" valign="top"><a id="add0d6f6a7ce78908e887ba42033412ca"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d13/classez_ref_counting_impl.htm#add0d6f6a7ce78908e887ba42033412ca">ezRefCountingImpl</a> ()=default</td></tr>
<tr class="memdesc:add0d6f6a7ce78908e887ba42033412ca inherit pub_methods_classez_ref_counting_impl"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor. <br /></td></tr>
<tr class="separator:add0d6f6a7ce78908e887ba42033412ca inherit pub_methods_classez_ref_counting_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d688d53dbb48a10728bb9e8e543422c inherit pub_methods_classez_ref_counting_impl"><td class="memItemLeft" align="right" valign="top"><a id="a2d688d53dbb48a10728bb9e8e543422c"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>ezRefCountingImpl</b> (const <a class="el" href="../../d9/d13/classez_ref_counting_impl.htm">ezRefCountingImpl</a> &amp;rhs)</td></tr>
<tr class="separator:a2d688d53dbb48a10728bb9e8e543422c inherit pub_methods_classez_ref_counting_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3becd10c00d9bfc6496db0a8f51e4f45 inherit pub_methods_classez_ref_counting_impl"><td class="memItemLeft" align="right" valign="top"><a id="a3becd10c00d9bfc6496db0a8f51e4f45"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="../../d9/d13/classez_ref_counting_impl.htm">ezRefCountingImpl</a> &amp;rhs)</td></tr>
<tr class="separator:a3becd10c00d9bfc6496db0a8f51e4f45 inherit pub_methods_classez_ref_counting_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5855c194430e07d8e69b2eba812d388f inherit pub_methods_classez_ref_counting_impl"><td class="memItemLeft" align="right" valign="top"><a id="a5855c194430e07d8e69b2eba812d388f"></a>
ezInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d13/classez_ref_counting_impl.htm#a5855c194430e07d8e69b2eba812d388f">AddRef</a> () const</td></tr>
<tr class="memdesc:a5855c194430e07d8e69b2eba812d388f inherit pub_methods_classez_ref_counting_impl"><td class="mdescLeft">&#160;</td><td class="mdescRight">Increments the reference counter. Returns the new reference count. <br /></td></tr>
<tr class="separator:a5855c194430e07d8e69b2eba812d388f inherit pub_methods_classez_ref_counting_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aefc2c3765992821a1790be7c4273a9ec inherit pub_methods_classez_ref_counting_impl"><td class="memItemLeft" align="right" valign="top"><a id="aefc2c3765992821a1790be7c4273a9ec"></a>
ezInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d13/classez_ref_counting_impl.htm#aefc2c3765992821a1790be7c4273a9ec">ReleaseRef</a> () const</td></tr>
<tr class="memdesc:aefc2c3765992821a1790be7c4273a9ec inherit pub_methods_classez_ref_counting_impl"><td class="mdescLeft">&#160;</td><td class="mdescRight">Decrements the reference counter. Returns the new reference count. <br /></td></tr>
<tr class="separator:aefc2c3765992821a1790be7c4273a9ec inherit pub_methods_classez_ref_counting_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6896b0ab69340d47c6b3039eb1dcc59 inherit pub_methods_classez_ref_counting_impl"><td class="memItemLeft" align="right" valign="top"><a id="aa6896b0ab69340d47c6b3039eb1dcc59"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d13/classez_ref_counting_impl.htm#aa6896b0ab69340d47c6b3039eb1dcc59">IsReferenced</a> () const</td></tr>
<tr class="memdesc:aa6896b0ab69340d47c6b3039eb1dcc59 inherit pub_methods_classez_ref_counting_impl"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if the reference count is greater than 0, false otherwise. <br /></td></tr>
<tr class="separator:aa6896b0ab69340d47c6b3039eb1dcc59 inherit pub_methods_classez_ref_counting_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab062bf58d10e8221f31045742f713d17 inherit pub_methods_classez_ref_counting_impl"><td class="memItemLeft" align="right" valign="top"><a id="ab062bf58d10e8221f31045742f713d17"></a>
ezInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d13/classez_ref_counting_impl.htm#ab062bf58d10e8221f31045742f713d17">GetRefCount</a> () const</td></tr>
<tr class="memdesc:ab062bf58d10e8221f31045742f713d17 inherit pub_methods_classez_ref_counting_impl"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the current reference count. <br /></td></tr>
<tr class="separator:ab062bf58d10e8221f31045742f713d17 inherit pub_methods_classez_ref_counting_impl"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>A blackboard is a key/value store that provides OnChange events to be informed when a value changes. </p>
<p>Blackboards are used to gather typically small pieces of data. Some systems write the data, other systems read it. Through the blackboard, arbitrary systems can interact.</p>
<p>For example this is commonly used in game AI, where some system gathers interesting pieces of data about the environment, and then NPCs might use that information to make decisions. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a297684e5e3c1b0cd12443a5dba81eb58"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a297684e5e3c1b0cd12443a5dba81eb58">&#9670;&nbsp;</a></span>Deserialize()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d4/da9/structez_result.htm">ezResult</a> ezBlackboard::Deserialize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a> &amp;&#160;</td>
          <td class="paramname"><em>stream</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Restores entries from the stream. </p>
<p>If the blackboard already contains entries, the deserialized data is ADDED to the blackboard. If deserialized entries overlap with existing ones, the deserialized entries will overwrite the existing ones (both values and flags). </p>

</div>
</div>
<a id="a26bbfa369e248a895deb6a344544c273"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a26bbfa369e248a895deb6a344544c273">&#9670;&nbsp;</a></span>GetBlackboardChangeCounter()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">ezUInt32 ezBlackboard::GetBlackboardChangeCounter </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This counter is increased every time an entry is added or removed (but not when it is modified). </p>
<p>Comparing this value to a previous known value allows to quickly detect whether the set of entries has changed. </p>

</div>
</div>
<a id="a82efe8e2cbeeb4224c71f93332968279"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a82efe8e2cbeeb4224c71f93332968279">&#9670;&nbsp;</a></span>GetBlackboardEntryChangeCounter()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">ezUInt32 ezBlackboard::GetBlackboardEntryChangeCounter </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This counter is increased every time any entry's value is modified. </p>
<p>Comparing this value to a previous known value allows to quickly detect whether any entry has changed recently. </p>

</div>
</div>
<a id="af5deabd8727c9618af31b7dc71380ea1"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af5deabd8727c9618af31b7dc71380ea1">&#9670;&nbsp;</a></span>RegisterEntry()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ezBlackboard::RegisterEntry </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../de/dce/classez_hashed_string.htm">ezHashedString</a> &amp;&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../de/de6/classez_variant.htm">ezVariant</a> &amp;&#160;</td>
          <td class="paramname"><em>initialValue</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d1/dec/structez_bitflags.htm">ezBitflags</a>&lt; <a class="el" href="../../d4/d73/structez_blackboard_entry_flags.htm">ezBlackboardEntryFlags</a> &gt;&#160;</td>
          <td class="paramname"><em>flags</em> = <code>ezBlackboardEntryFlags::None</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Registers an entry with a name, value and flags. </p>
<p>If the same entry already exists, this will act like SetEntryValue, but additionally it will add the entry flags that hadn't been set before. </p>

</div>
</div>
<a id="aff6c7f5d123480a10c2d8e91608a0667"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aff6c7f5d123480a10c2d8e91608a0667">&#9670;&nbsp;</a></span>SetEntryValue()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d4/da9/structez_result.htm">ezResult</a> ezBlackboard::SetEntryValue </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../db/dcf/classez_temp_hashed_string.htm">ezTempHashedString</a> &amp;&#160;</td>
          <td class="paramname"><em>name</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../de/de6/classez_variant.htm">ezVariant</a> &amp;&#160;</td>
          <td class="paramname"><em>value</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>force</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the value of the named entry. </p>
<p>If the entry doesn't exist, EZ_FAILURE is returned.</p>
<p>If the 'OnChangeEvent' flag is set for this entry, <a class="el" href="../../d3/d82/classez_blackboard.htm#ad3de7feac2179bbb41912805343c5f84" title="Allows you to register to the OnEntryEvent. This is broadcast whenever an entry is modified that has ...">OnEntryEvent()</a> will be broadcast. However, if the new value is no different to the old, no event will be broadcast, unless 'force' is set to true.</p>
<p>Logs an error, if the named entry hasn't been registered before. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Core/Utils/<a class="el" href="../../de/dfc/_blackboard_8h_source.htm">Blackboard.h</a></li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Core/Utils/Implementation/Blackboard.cpp</li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d3/d82/classez_blackboard.htm">ezBlackboard</a></li>
    <li class="footer">Generated on Sun Oct 9 2022 14:45:01 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
