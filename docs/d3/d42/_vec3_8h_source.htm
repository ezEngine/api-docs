<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Math/Vec3.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 25.03</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d3/d42/_vec3_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Vec3.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;Foundation/Math/Math.h&gt;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;Foundation/Math/Vec2.h&gt;</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160; </div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="keyword">class </span><a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template</a></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;{</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;  <span class="comment">// Means that vectors can be copied using memcpy instead of copy construction.</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;  EZ_DECLARE_POD_TYPE();</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160; </div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;  <span class="keyword">using</span> ComponentType = Type;</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160; </div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;  <span class="comment">// *** Data ***</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;  Type x, y, z;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160; </div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;  <span class="comment">// *** Constructors ***</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;  <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160; </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;  <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>(Type x, Type y, Type z); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160; </div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;  <span class="keyword">explicit</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>(Type v); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160; </div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  <span class="comment">// no copy-constructor and operator= since the default-generated ones will be faster</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160; </div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  EZ_DECLARE_IF_FLOAT_TYPE</div>
<div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="../../da/df1/classez_vec3_template.htm#ad3ccc9ed23aa52a5d5458776a760b875">   35</a></span>&#160;  [[nodiscard]] <span class="keyword">static</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> <a class="code" href="../../da/df1/classez_vec3_template.htm#ad3ccc9ed23aa52a5d5458776a760b875">MakeNaN</a>() { <span class="keywordflow">return</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>(ezMath::NaN&lt;Type&gt;()); }</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160; </div>
<div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="../../da/df1/classez_vec3_template.htm#ad9bf0c48a691584e39d7aede05a5b904">   38</a></span>&#160;  [[nodiscard]] <span class="keyword">static</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> <a class="code" href="../../da/df1/classez_vec3_template.htm#ad9bf0c48a691584e39d7aede05a5b904">MakeZero</a>() { <span class="keywordflow">return</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>(0); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160; </div>
<div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="../../da/df1/classez_vec3_template.htm#a5d868bcc6379519e4502516883a02131">   41</a></span>&#160;  [[nodiscard]] <span class="keyword">static</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> <a class="code" href="../../da/df1/classez_vec3_template.htm#a5d868bcc6379519e4502516883a02131">MakeAxisX</a>() { <span class="keywordflow">return</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>(1, 0, 0); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160; </div>
<div class="line"><a name="l00044"></a><span class="lineno"><a class="line" href="../../da/df1/classez_vec3_template.htm#a9e2d6259e862cac3001862909e09e665">   44</a></span>&#160;  [[nodiscard]] <span class="keyword">static</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> <a class="code" href="../../da/df1/classez_vec3_template.htm#a9e2d6259e862cac3001862909e09e665">MakeAxisY</a>() { <span class="keywordflow">return</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>(0, 1, 0); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160; </div>
<div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="../../da/df1/classez_vec3_template.htm#aecc216ed63b990b4720a1f6fdf45a8f0">   47</a></span>&#160;  [[nodiscard]] <span class="keyword">static</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> <a class="code" href="../../da/df1/classez_vec3_template.htm#aecc216ed63b990b4720a1f6fdf45a8f0">MakeAxisZ</a>() { <span class="keywordflow">return</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>(0, 0, 1); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160; </div>
<div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="../../da/df1/classez_vec3_template.htm#a74c5216c0e01ecf797ec578e727bff53">   50</a></span>&#160;  [[nodiscard]] <span class="keyword">static</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> <a class="code" href="../../da/df1/classez_vec3_template.htm#a74c5216c0e01ecf797ec578e727bff53">Make</a>(Type x, Type y, Type z) { <span class="keywordflow">return</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>(x, y, z); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160; </div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="preprocessor">#if EZ_ENABLED(EZ_MATH_CHECK_FOR_NAN)</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;  <span class="keywordtype">void</span> AssertNotNaN()<span class="keyword"> const</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    EZ_ASSERT_ALWAYS(!<a class="code" href="../../da/df1/classez_vec3_template.htm#a330f758d541d570f19443bbbc0969e5e">IsNaN</a>(), <span class="stringliteral">&quot;This object contains NaN values. This can happen when you forgot to initialize it before using it. Please &quot;</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;                               <span class="stringliteral">&quot;check that all code-paths properly initialize this object.&quot;</span>);</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;  }</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160; </div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;  <span class="comment">// *** Conversions ***</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a> <a class="code" href="../../da/df1/classez_vec3_template.htm#a005eb534e4471169af6cda436925ad8c">GetAsVec2</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160; </div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template&lt;Type&gt;</a> <a class="code" href="../../da/df1/classez_vec3_template.htm#afa8ece8eae7a8a5be1ff2296a9416787">GetAsVec4</a>(Type w) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160; </div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template&lt;Type&gt;</a> <a class="code" href="../../da/df1/classez_vec3_template.htm#acef8f620ac07de279d490cb6189a70a6">GetAsPositionVec4</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160; </div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template&lt;Type&gt;</a> <a class="code" href="../../da/df1/classez_vec3_template.htm#a731d6d3a758ead159d81b1a206fa2cd1">GetAsDirectionVec4</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160; </div>
<div class="line"><a name="l00075"></a><span class="lineno"><a class="line" href="../../da/df1/classez_vec3_template.htm#aabd2131f43f6d1c6f18738830fcba13f">   75</a></span>&#160;  <span class="keyword">const</span> Type* <a class="code" href="../../da/df1/classez_vec3_template.htm#aabd2131f43f6d1c6f18738830fcba13f">GetData</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> &amp;x; }</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160; </div>
<div class="line"><a name="l00078"></a><span class="lineno"><a class="line" href="../../da/df1/classez_vec3_template.htm#a6d0e7f20d7af9da9092570ec7ee772d3">   78</a></span>&#160;  Type* <a class="code" href="../../da/df1/classez_vec3_template.htm#a6d0e7f20d7af9da9092570ec7ee772d3">GetData</a>() { <span class="keywordflow">return</span> &amp;x; }</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160; </div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;  <span class="comment">// *** Functions to set the vector to specific values ***</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../da/df1/classez_vec3_template.htm#a4693ce7e3ea568fb31504369e69836fb">Set</a>(Type xyz); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160; </div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../da/df1/classez_vec3_template.htm#a4693ce7e3ea568fb31504369e69836fb">Set</a>(Type x, Type y, Type z); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160; </div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../da/df1/classez_vec3_template.htm#af217f183c290134d4db0d382759bdfe3">SetZero</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160; </div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  <span class="comment">// *** Functions dealing with length ***</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;  EZ_DECLARE_IF_FLOAT_TYPE</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;  Type <a class="code" href="../../da/df1/classez_vec3_template.htm#a9aa1d4a80c92eff8889e82f467dc30e8">GetLength</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160; </div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  EZ_DECLARE_IF_FLOAT_TYPE</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;  Type <a class="code" href="../../da/df1/classez_vec3_template.htm#a0b3fc0ee30fe59baf88962c47778938d">GetDistanceTo</a>(<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160; </div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;  EZ_DECLARE_IF_FLOAT_TYPE</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  Type <a class="code" href="../../da/df1/classez_vec3_template.htm#a71b96f032507d4517b97a686f0825538">GetSquaredDistanceTo</a>(<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160; </div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;  EZ_DECLARE_IF_FLOAT_TYPE</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;  <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code" href="../../da/df1/classez_vec3_template.htm#a66b9f165bd9d5673d50a450ceba2bb6d">SetLength</a>(Type fNewLength, Type fEpsilon = ezMath::DefaultEpsilon&lt;Type&gt;()); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160; </div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;  Type <a class="code" href="../../da/df1/classez_vec3_template.htm#aa47fcb03a5aa1272b8afe9ba00e66ee9">GetLengthSquared</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160; </div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;  EZ_DECLARE_IF_FLOAT_TYPE</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;  Type <a class="code" href="../../da/df1/classez_vec3_template.htm#af4e267c0c9a22521a2d6ad40e6e52da7">GetLengthAndNormalize</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160; </div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;  EZ_DECLARE_IF_FLOAT_TYPE</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;  [[nodiscard]] <span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> <a class="code" href="../../da/df1/classez_vec3_template.htm#ab41a1df382689459a9b9ac8115e2be82">GetNormalized</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160; </div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;  EZ_DECLARE_IF_FLOAT_TYPE</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../da/df1/classez_vec3_template.htm#a617fb13b6687bc6c6e398eb982e2c8be">Normalize</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160; </div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;  EZ_DECLARE_IF_FLOAT_TYPE</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;  <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code" href="../../da/df1/classez_vec3_template.htm#a3d5f0da5ec0379f9ad1c08787c8183af">NormalizeIfNotZero</a>(<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vFallback = <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>(1, 0, 0), Type fEpsilon = ezMath::SmallEpsilon&lt;Type&gt;()); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160; </div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../da/df1/classez_vec3_template.htm#a52d86f05731890b4a5ca7762a5d65bb3">IsZero</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160; </div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../da/df1/classez_vec3_template.htm#a52d86f05731890b4a5ca7762a5d65bb3">IsZero</a>(Type fEpsilon) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160; </div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;  EZ_DECLARE_IF_FLOAT_TYPE</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../da/df1/classez_vec3_template.htm#a100b2d039a3ae3ecfb47db05b600f4f8">IsNormalized</a>(Type fEpsilon = ezMath::HugeEpsilon&lt;Type&gt;()) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160; </div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../da/df1/classez_vec3_template.htm#a330f758d541d570f19443bbbc0969e5e">IsNaN</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160; </div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../da/df1/classez_vec3_template.htm#a216fcb73cd48b1bd9062fdf9b8be0b88">IsValid</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160; </div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160; </div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;  <span class="comment">// *** Operators ***</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> <a class="code" href="../../da/df1/classez_vec3_template.htm#ab9f531d0e615080d02ed4a42b6b184e5">operator-</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160; </div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../da/df1/classez_vec3_template.htm#a8a43db9c1ba66e580bf3eea85cc3f559">operator+=</a>(<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; rhs); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160; </div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../da/df1/classez_vec3_template.htm#a5349436a34546a479a64bbe2ffdbb969">operator-=</a>(<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; rhs); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160; </div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../da/df1/classez_vec3_template.htm#a8009bc202b1f20dc95d4296d063f3ff4">operator*=</a>(<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; rhs);</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160; </div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../da/df1/classez_vec3_template.htm#acf4fd0903b014af9fc671b4cc47f7853">operator/=</a>(<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; rhs);</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160; </div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../da/df1/classez_vec3_template.htm#a8009bc202b1f20dc95d4296d063f3ff4">operator*=</a>(Type f); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160; </div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../da/df1/classez_vec3_template.htm#acf4fd0903b014af9fc671b4cc47f7853">operator/=</a>(Type f); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160; </div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../da/df1/classez_vec3_template.htm#a3ca79a707f6473af0e295909fb3f3cb1">IsIdentical</a>(<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160; </div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../da/df1/classez_vec3_template.htm#af7dd54170c3e008dc8f7065573947e4b">IsEqual</a>(<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; rhs, Type fEpsilon) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160; </div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160; </div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;  <span class="comment">// *** Common vector operations ***</span></div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;  <a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a> <a class="code" href="../../da/df1/classez_vec3_template.htm#a726ff5ddd3f38d4dfc4e99f541023674">GetAngleBetween</a>(<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160; </div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;  [[nodiscard]] Type <a class="code" href="../../da/df1/classez_vec3_template.htm#ab7672fa59655c642c16f8caf581e03f3">Dot</a>(<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160; </div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160; </div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160; </div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;  [[nodiscard]] <span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> <a class="code" href="../../da/df1/classez_vec3_template.htm#ac75d15f3524fbc880a4cb7ae1cb45094">CrossRH</a>(<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160; </div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;  [[nodiscard]] <span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> <a class="code" href="../../da/df1/classez_vec3_template.htm#aa72f7d2a6d9b8d30f67c36eef15db7b7">CompMin</a>(<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160; </div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;  [[nodiscard]] <span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> <a class="code" href="../../da/df1/classez_vec3_template.htm#a7fa99794e2995ef0c95114b3e6960ff7">CompMax</a>(<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160; </div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;  [[nodiscard]] <span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> <a class="code" href="../../da/df1/classez_vec3_template.htm#a5487dab455f50510bb285e90d42b73ef">CompClamp</a>(<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vLow, <span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vHigh) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160; </div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;  [[nodiscard]] <span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> <a class="code" href="../../da/df1/classez_vec3_template.htm#a1e0aabc06569839962d16a71def3ae6b">CompMul</a>(<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160; </div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;  [[nodiscard]] <span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> <a class="code" href="../../da/df1/classez_vec3_template.htm#a97da3d92338ae762c2ddf6573cadd832">CompDiv</a>(<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160; </div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;  [[nodiscard]] <span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> <a class="code" href="../../da/df1/classez_vec3_template.htm#ab6e2563b421a4d9e637eb7472fa6b327">Abs</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160; </div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160; </div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;  <span class="comment">// *** Other common operations ***</span></div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;  EZ_DECLARE_IF_FLOAT_TYPE</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;  <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code" href="../../da/df1/classez_vec3_template.htm#a0c424d40aec248f4a770e85634975f4d">CalculateNormal</a>(<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; v1, <span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; v2, <span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; v3); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160; </div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;  EZ_DECLARE_IF_FLOAT_TYPE</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../da/df1/classez_vec3_template.htm#aa67f5a9a263b661357c874c66e6fab3b">MakeOrthogonalTo</a>(<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vNormal); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160; </div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;  EZ_DECLARE_IF_FLOAT_TYPE</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> <a class="code" href="../../da/df1/classez_vec3_template.htm#ae1bf1eaa546063779219f4a35eb83eaa">GetOrthogonalVector</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160; </div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;  EZ_DECLARE_IF_FLOAT_TYPE</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> <a class="code" href="../../da/df1/classez_vec3_template.htm#a043ee8095ef389ae31d1dc47a0df7989">GetReflectedVector</a>(<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vNormal) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160; </div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;  EZ_DECLARE_IF_FLOAT_TYPE</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> <a class="code" href="../../da/df1/classez_vec3_template.htm#a07d28c3ff91ce75a0897171b53b20f51">GetRefractedVector</a>(<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vNormal, Type fRefIndex1, Type fRefIndex2) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160; </div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;  EZ_DECLARE_IF_FLOAT_TYPE</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;  [[nodiscard]] <span class="keyword">static</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a></div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;  <a class="code" href="../../da/df1/classez_vec3_template.htm#aff6e8aac8f1bca190791c1c5204722e7">MakeRandomPointInSphere</a>(<a class="code" href="../../de/d9e/classez_random.htm">ezRandom</a>&amp; inout_rng); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160; </div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;  EZ_DECLARE_IF_FLOAT_TYPE</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;  [[nodiscard]] <span class="keyword">static</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a></div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;  <a class="code" href="../../da/df1/classez_vec3_template.htm#a7a1e930fec53548550f90bff75da6237">MakeRandomDirection</a>(<a class="code" href="../../de/d9e/classez_random.htm">ezRandom</a>&amp; inout_rng); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160; </div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;  EZ_DECLARE_IF_FLOAT_TYPE</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;  [[nodiscard]] <span class="keyword">static</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a></div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;  <a class="code" href="../../da/df1/classez_vec3_template.htm#a9a492efaa38017e5dd1a2a4a54867dba">MakeRandomDeviationX</a>(<a class="code" href="../../de/d9e/classez_random.htm">ezRandom</a>&amp; inout_rng, <span class="keyword">const</span> <a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a>&amp; maxDeviation); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160; </div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;  EZ_DECLARE_IF_FLOAT_TYPE</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;  [[nodiscard]] <span class="keyword">static</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a></div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;  <a class="code" href="../../da/df1/classez_vec3_template.htm#a7f9d1ae1c8c99f5811a24bcc0a8523d7">MakeRandomDeviationY</a>(<a class="code" href="../../de/d9e/classez_random.htm">ezRandom</a>&amp; inout_rng, <span class="keyword">const</span> <a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a>&amp; maxDeviation); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160; </div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;  EZ_DECLARE_IF_FLOAT_TYPE</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;  [[nodiscard]] <span class="keyword">static</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a></div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;  <a class="code" href="../../da/df1/classez_vec3_template.htm#a11fc52c24ee447ac7f8ccbfe2b03c811">MakeRandomDeviationZ</a>(<a class="code" href="../../de/d9e/classez_random.htm">ezRandom</a>&amp; inout_rng, <span class="keyword">const</span> <a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a>&amp; maxDeviation); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160; </div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;  EZ_DECLARE_IF_FLOAT_TYPE</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;  [[nodiscard]] <span class="keyword">static</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a></div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;  <a class="code" href="../../da/df1/classez_vec3_template.htm#a21d0625db65a63ea2e11c35881af29a2">MakeRandomDeviation</a>(<a class="code" href="../../de/d9e/classez_random.htm">ezRandom</a>&amp; inout_rng, <span class="keyword">const</span> <a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a>&amp; maxDeviation, <span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vNormal); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;};</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160; </div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="comment">// *** Operators ***</span></div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160; </div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> operator+(<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; v1, <span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; v2); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160; </div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> operator-(<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; v1, <span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; v2); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160; </div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160; </div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> operator*(Type f, <span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; v); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160; </div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> operator*(<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; v, Type f); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160; </div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160; </div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> operator/(<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; v, Type f); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160; </div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160; </div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;<span class="keywordtype">bool</span> operator==(<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; v1, <span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; v2); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160; </div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;<span class="keywordtype">bool</span> operator!=(<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; v1, <span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; v2); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160; </div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<span class="keywordtype">bool</span> operator&lt;(<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; v1, <span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; v2); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160; </div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;<span class="preprocessor">#include &lt;Foundation/Math/Implementation/Vec3_inl.h&gt;</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassez_vec3_template_htm_ad3ccc9ed23aa52a5d5458776a760b875"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#ad3ccc9ed23aa52a5d5458776a760b875">ezVec3Template::MakeNaN</a></div><div class="ttdeci">static EZ_DECLARE_IF_FLOAT_TYPE ezVec3Template&lt; Type &gt; MakeNaN()</div><div class="ttdoc">Returns a vector with all components set to Not-a-Number (NaN).</div><div class="ttdef"><b>Definition:</b> Vec3.h:35</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_afa8ece8eae7a8a5be1ff2296a9416787"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#afa8ece8eae7a8a5be1ff2296a9416787">ezVec3Template::GetAsVec4</a></div><div class="ttdeci">const ezVec4Template&lt; Type &gt; GetAsVec4(Type w) const</div><div class="ttdoc">Returns an ezVec4Template with x,y,z from this vector and w set to the parameter.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:35</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_ac75d15f3524fbc880a4cb7ae1cb45094"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#ac75d15f3524fbc880a4cb7ae1cb45094">ezVec3Template::CrossRH</a></div><div class="ttdeci">const ezVec3Template&lt; Type &gt; CrossRH(const ezVec3Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the Cross-product of the two vectors (NOT commutative, order DOES matter)</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:311</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a66b9f165bd9d5673d50a450ceba2bb6d"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a66b9f165bd9d5673d50a450ceba2bb6d">ezVec3Template::SetLength</a></div><div class="ttdeci">EZ_DECLARE_IF_FLOAT_TYPE ezResult SetLength(Type fNewLength, Type fEpsilon=ezMath::DefaultEpsilon&lt; Type &gt;())</div><div class="ttdoc">Tries to rescale the vector to the given length. If the vector is too close to zero,...</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:72</div></div>
<div class="ttc" id="astructez_result_htm"><div class="ttname"><a href="../../d4/da9/structez_result.htm">ezResult</a></div><div class="ttdoc">Default enum for returning failure or success, instead of using a bool.</div><div class="ttdef"><b>Definition:</b> Types.h:53</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a7f9d1ae1c8c99f5811a24bcc0a8523d7"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a7f9d1ae1c8c99f5811a24bcc0a8523d7">ezVec3Template::MakeRandomDeviationY</a></div><div class="ttdeci">static EZ_DECLARE_IF_FLOAT_TYPE ezVec3Template&lt; Type &gt; MakeRandomDeviationY(ezRandom &amp;inout_rng, const ezAngle &amp;maxDeviation)</div><div class="ttdoc">Creates a random vector around the y axis with a maximum deviation angle of maxDeviation....</div><div class="ttdef"><b>Definition:</b> AllClassesRandom_inl.h:50</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a7fa99794e2995ef0c95114b3e6960ff7"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a7fa99794e2995ef0c95114b3e6960ff7">ezVec3Template::CompMax</a></div><div class="ttdeci">const ezVec3Template&lt; Type &gt; CompMax(const ezVec3Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the component-wise maximum of *this and rhs.</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:338</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a005eb534e4471169af6cda436925ad8c"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a005eb534e4471169af6cda436925ad8c">ezVec3Template::GetAsVec2</a></div><div class="ttdeci">const ezVec2Template&lt; Type &gt; GetAsVec2() const</div><div class="ttdoc">Returns an ezVec2Template with x and y from this vector.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:26</div></div>
<div class="ttc" id="aclassez_random_htm"><div class="ttname"><a href="../../de/d9e/classez_random.htm">ezRandom</a></div><div class="ttdoc">A random number generator. Currently uses the WELL512 algorithm.</div><div class="ttdef"><b>Definition:</b> Random.h:8</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_acef8f620ac07de279d490cb6189a70a6"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#acef8f620ac07de279d490cb6189a70a6">ezVec3Template::GetAsPositionVec4</a></div><div class="ttdeci">const ezVec4Template&lt; Type &gt; GetAsPositionVec4() const</div><div class="ttdoc">Returns an ezVec4Template with x,y,z from this vector and w set 1.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:43</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a330f758d541d570f19443bbbc0969e5e"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a330f758d541d570f19443bbbc0969e5e">ezVec3Template::IsNaN</a></div><div class="ttdeci">bool IsNaN() const</div><div class="ttdoc">Returns true, if any of x, y or z is NaN.</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:156</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a5d868bcc6379519e4502516883a02131"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a5d868bcc6379519e4502516883a02131">ezVec3Template::MakeAxisX</a></div><div class="ttdeci">static ezVec3Template&lt; Type &gt; MakeAxisX()</div><div class="ttdoc">Returns a vector initialized to the X unit vector (1, 0, 0).</div><div class="ttdef"><b>Definition:</b> Vec3.h:41</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a216fcb73cd48b1bd9062fdf9b8be0b88"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a216fcb73cd48b1bd9062fdf9b8be0b88">ezVec3Template::IsValid</a></div><div class="ttdeci">bool IsValid() const</div><div class="ttdoc">Checks that all components are finite numbers.</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:169</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a71b96f032507d4517b97a686f0825538"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a71b96f032507d4517b97a686f0825538">ezVec3Template::GetSquaredDistanceTo</a></div><div class="ttdeci">EZ_DECLARE_IF_FLOAT_TYPE Type GetSquaredDistanceTo(const ezVec3Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the squared length between this position and rhs.</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:66</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_aa47fcb03a5aa1272b8afe9ba00e66ee9"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#aa47fcb03a5aa1272b8afe9ba00e66ee9">ezVec3Template::GetLengthSquared</a></div><div class="ttdeci">Type GetLengthSquared() const</div><div class="ttdoc">Returns the squared length. Faster, since no square-root is taken. Useful, if one only wants to compa...</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:82</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_aabd2131f43f6d1c6f18738830fcba13f"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#aabd2131f43f6d1c6f18738830fcba13f">ezVec3Template::GetData</a></div><div class="ttdeci">const Type * GetData() const</div><div class="ttdoc">Returns the data as an array.</div><div class="ttdef"><b>Definition:</b> Vec3.h:75</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_ab6e2563b421a4d9e637eb7472fa6b327"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#ab6e2563b421a4d9e637eb7472fa6b327">ezVec3Template::Abs</a></div><div class="ttdeci">const ezVec3Template&lt; Type &gt; Abs() const</div><div class="ttdoc">brief Returns the component-wise absolute of *this.</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:375</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a0c424d40aec248f4a770e85634975f4d"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a0c424d40aec248f4a770e85634975f4d">ezVec3Template::CalculateNormal</a></div><div class="ttdeci">EZ_DECLARE_IF_FLOAT_TYPE ezResult CalculateNormal(const ezVec3Template&lt; Type &gt; &amp;v1, const ezVec3Template&lt; Type &gt; &amp;v2, const ezVec3Template&lt; Type &gt; &amp;v3)</div><div class="ttdoc">Calculates the normal of the triangle defined by the three vertices. Vertices are assumed to be order...</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:265</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a21d0625db65a63ea2e11c35881af29a2"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a21d0625db65a63ea2e11c35881af29a2">ezVec3Template::MakeRandomDeviation</a></div><div class="ttdeci">static EZ_DECLARE_IF_FLOAT_TYPE ezVec3Template&lt; Type &gt; MakeRandomDeviation(ezRandom &amp;inout_rng, const ezAngle &amp;maxDeviation, const ezVec3Template&lt; Type &gt; &amp;vNormal)</div><div class="ttdoc">Creates a random vector around the given normal with a maximum deviation.</div><div class="ttdef"><b>Definition:</b> AllClassesRandom_inl.h:66</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a97da3d92338ae762c2ddf6573cadd832"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a97da3d92338ae762c2ddf6573cadd832">ezVec3Template::CompDiv</a></div><div class="ttdeci">const ezVec3Template&lt; Type &gt; CompDiv(const ezVec3Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the component-wise division of *this and rhs.</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:366</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a8009bc202b1f20dc95d4296d063f3ff4"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a8009bc202b1f20dc95d4296d063f3ff4">ezVec3Template::operator*=</a></div><div class="ttdeci">void operator*=(const ezVec3Template&lt; Type &gt; &amp;rhs)</div><div class="ttdoc">Multiplies rhs component-wise to this vector.</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:210</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a726ff5ddd3f38d4dfc4e99f541023674"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a726ff5ddd3f38d4dfc4e99f541023674">ezVec3Template::GetAngleBetween</a></div><div class="ttdeci">ezAngle GetAngleBetween(const ezVec3Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the positive angle between *this and rhs. Both this and rhs must be normalized.</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:320</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_ae1bf1eaa546063779219f4a35eb83eaa"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#ae1bf1eaa546063779219f4a35eb83eaa">ezVec3Template::GetOrthogonalVector</a></div><div class="ttdeci">const EZ_DECLARE_IF_FLOAT_TYPE ezVec3Template&lt; Type &gt; GetOrthogonalVector() const</div><div class="ttdoc">Returns some arbitrary vector orthogonal to this one. The vector is NOT normalized.</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:282</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a5349436a34546a479a64bbe2ffdbb969"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a5349436a34546a479a64bbe2ffdbb969">ezVec3Template::operator-=</a></div><div class="ttdeci">void operator-=(const ezVec3Template&lt; Type &gt; &amp;rhs)</div><div class="ttdoc">Subtracts rhs component-wise from this vector.</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:200</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_af4e267c0c9a22521a2d6ad40e6e52da7"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#af4e267c0c9a22521a2d6ad40e6e52da7">ezVec3Template::GetLengthAndNormalize</a></div><div class="ttdeci">EZ_DECLARE_IF_FLOAT_TYPE Type GetLengthAndNormalize()</div><div class="ttdoc">Normalizes this vector and returns its previous length in one operation. More efficient than calling ...</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:90</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a07d28c3ff91ce75a0897171b53b20f51"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a07d28c3ff91ce75a0897171b53b20f51">ezVec3Template::GetRefractedVector</a></div><div class="ttdeci">const EZ_DECLARE_IF_FLOAT_TYPE ezVec3Template&lt; Type &gt; GetRefractedVector(const ezVec3Template&lt; Type &gt; &amp;vNormal, Type fRefIndex1, Type fRefIndex2) const</div><div class="ttdoc">Returns this vector, refracted at vNormal, using the refraction index of the current medium and the m...</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:482</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a043ee8095ef389ae31d1dc47a0df7989"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a043ee8095ef389ae31d1dc47a0df7989">ezVec3Template::GetReflectedVector</a></div><div class="ttdeci">const EZ_DECLARE_IF_FLOAT_TYPE ezVec3Template&lt; Type &gt; GetReflectedVector(const ezVec3Template&lt; Type &gt; &amp;vNormal) const</div><div class="ttdoc">Returns this vector reflected at vNormal.</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:294</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a9aa1d4a80c92eff8889e82f467dc30e8"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a9aa1d4a80c92eff8889e82f467dc30e8">ezVec3Template::GetLength</a></div><div class="ttdeci">EZ_DECLARE_IF_FLOAT_TYPE Type GetLength() const</div><div class="ttdoc">Returns the length of the vector.</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:54</div></div>
<div class="ttc" id="aclassez_angle_htm"><div class="ttname"><a href="../../db/d6f/classez_angle.htm">ezAngle</a></div><div class="ttdoc">Float wrapper struct for a safe usage and conversions of angles.</div><div class="ttdef"><b>Definition:</b> Angle.h:9</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a9e2d6259e862cac3001862909e09e665"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a9e2d6259e862cac3001862909e09e665">ezVec3Template::MakeAxisY</a></div><div class="ttdeci">static ezVec3Template&lt; Type &gt; MakeAxisY()</div><div class="ttdoc">Returns a vector initialized to the Y unit vector (0, 1, 0).</div><div class="ttdef"><b>Definition:</b> Vec3.h:44</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_aa72f7d2a6d9b8d30f67c36eef15db7b7"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#aa72f7d2a6d9b8d30f67c36eef15db7b7">ezVec3Template::CompMin</a></div><div class="ttdeci">const ezVec3Template&lt; Type &gt; CompMin(const ezVec3Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the component-wise minimum of *this and rhs.</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:329</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a3d5f0da5ec0379f9ad1c08787c8183af"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a3d5f0da5ec0379f9ad1c08787c8183af">ezVec3Template::NormalizeIfNotZero</a></div><div class="ttdeci">EZ_DECLARE_IF_FLOAT_TYPE ezResult NormalizeIfNotZero(const ezVec3Template&lt; Type &gt; &amp;vFallback=ezVec3Template&lt; Type &gt;(1, 0, 0), Type fEpsilon=ezMath::SmallEpsilon&lt; Type &gt;())</div><div class="ttdoc">Tries to normalize this vector. If the vector is too close to zero, EZ_FAILURE is returned and the ve...</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:113</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_aecc216ed63b990b4720a1f6fdf45a8f0"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#aecc216ed63b990b4720a1f6fdf45a8f0">ezVec3Template::MakeAxisZ</a></div><div class="ttdeci">static ezVec3Template&lt; Type &gt; MakeAxisZ()</div><div class="ttdoc">Returns a vector initialized to the Z unit vector (0, 0, 1).</div><div class="ttdef"><b>Definition:</b> Vec3.h:47</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a731d6d3a758ead159d81b1a206fa2cd1"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a731d6d3a758ead159d81b1a206fa2cd1">ezVec3Template::GetAsDirectionVec4</a></div><div class="ttdeci">const ezVec4Template&lt; Type &gt; GetAsDirectionVec4() const</div><div class="ttdoc">Returns an ezVec4Template with x,y,z from this vector and w set 0.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:52</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_acf4fd0903b014af9fc671b4cc47f7853"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#acf4fd0903b014af9fc671b4cc47f7853">ezVec3Template::operator/=</a></div><div class="ttdeci">void operator/=(const ezVec3Template&lt; Type &gt; &amp;rhs)</div><div class="ttdoc">Divides this vector component-wise by rhs.</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:222</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a74c5216c0e01ecf797ec578e727bff53"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a74c5216c0e01ecf797ec578e727bff53">ezVec3Template::Make</a></div><div class="ttdeci">static ezVec3Template&lt; Type &gt; Make(Type x, Type y, Type z)</div><div class="ttdoc">Returns a vector initialized to x,y,z.</div><div class="ttdef"><b>Definition:</b> Vec3.h:50</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_af217f183c290134d4db0d382759bdfe3"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#af217f183c290134d4db0d382759bdfe3">ezVec3Template::SetZero</a></div><div class="ttdeci">void SetZero()</div><div class="ttdoc">Sets the vector to all zero.</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:48</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a4693ce7e3ea568fb31504369e69836fb"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a4693ce7e3ea568fb31504369e69836fb">ezVec3Template::Set</a></div><div class="ttdeci">void Set(Type xyz)</div><div class="ttdoc">Sets all 3 components to this value.</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:32</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a3ca79a707f6473af0e295909fb3f3cb1"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a3ca79a707f6473af0e295909fb3f3cb1">ezVec3Template::IsIdentical</a></div><div class="ttdeci">bool IsIdentical(const ezVec3Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Equality Check (bitwise)</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:434</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_af7dd54170c3e008dc8f7065573947e4b"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#af7dd54170c3e008dc8f7065573947e4b">ezVec3Template::IsEqual</a></div><div class="ttdeci">bool IsEqual(const ezVec3Template&lt; Type &gt; &amp;rhs, Type fEpsilon) const</div><div class="ttdoc">Equality Check with epsilon.</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:443</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a100b2d039a3ae3ecfb47db05b600f4f8"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a100b2d039a3ae3ecfb47db05b600f4f8">ezVec3Template::IsNormalized</a></div><div class="ttdeci">EZ_DECLARE_IF_FLOAT_TYPE bool IsNormalized(Type fEpsilon=ezMath::HugeEpsilon&lt; Type &gt;()) const</div><div class="ttdoc">Returns, whether the squared length of this vector is between 0.999f and 1.001f.</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:133</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a52d86f05731890b4a5ca7762a5d65bb3"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a52d86f05731890b4a5ca7762a5d65bb3">ezVec3Template::IsZero</a></div><div class="ttdeci">bool IsZero() const</div><div class="ttdoc">Returns, whether this vector is (0, 0, 0).</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:140</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a617fb13b6687bc6c6e398eb982e2c8be"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a617fb13b6687bc6c6e398eb982e2c8be">ezVec3Template::Normalize</a></div><div class="ttdeci">EZ_DECLARE_IF_FLOAT_TYPE void Normalize()</div><div class="ttdoc">Normalizes this vector.</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:107</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_aa67f5a9a263b661357c874c66e6fab3b"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#aa67f5a9a263b661357c874c66e6fab3b">ezVec3Template::MakeOrthogonalTo</a></div><div class="ttdeci">EZ_DECLARE_IF_FLOAT_TYPE void MakeOrthogonalTo(const ezVec3Template&lt; Type &gt; &amp;vNormal)</div><div class="ttdoc">Modifies this direction vector to be orthogonal to the given (normalized) direction vector....</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:272</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_ab7672fa59655c642c16f8caf581e03f3"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#ab7672fa59655c642c16f8caf581e03f3">ezVec3Template::Dot</a></div><div class="ttdeci">Type Dot(const ezVec3Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the Dot-product of the two vectors (commutative, order does not matter)</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:302</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_aff6e8aac8f1bca190791c1c5204722e7"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#aff6e8aac8f1bca190791c1c5204722e7">ezVec3Template::MakeRandomPointInSphere</a></div><div class="ttdeci">static EZ_DECLARE_IF_FLOAT_TYPE ezVec3Template&lt; Type &gt; MakeRandomPointInSphere(ezRandom &amp;inout_rng)</div><div class="ttdoc">Returns a random point inside a unit sphere (radius 1).</div><div class="ttdef"><b>Definition:</b> AllClassesRandom_inl.h:8</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a0b3fc0ee30fe59baf88962c47778938d"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a0b3fc0ee30fe59baf88962c47778938d">ezVec3Template::GetDistanceTo</a></div><div class="ttdeci">EZ_DECLARE_IF_FLOAT_TYPE Type GetDistanceTo(const ezVec3Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the length between this position and rhs.</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:60</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_ab9f531d0e615080d02ed4a42b6b184e5"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#ab9f531d0e615080d02ed4a42b6b184e5">ezVec3Template::operator-</a></div><div class="ttdeci">const ezVec3Template&lt; Type &gt; operator-() const</div><div class="ttdoc">Returns the negation of this vector.</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:182</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a1e0aabc06569839962d16a71def3ae6b"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a1e0aabc06569839962d16a71def3ae6b">ezVec3Template::CompMul</a></div><div class="ttdeci">const ezVec3Template&lt; Type &gt; CompMul(const ezVec3Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the component-wise multiplication of *this and rhs.</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:357</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a7a1e930fec53548550f90bff75da6237"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a7a1e930fec53548550f90bff75da6237">ezVec3Template::MakeRandomDirection</a></div><div class="ttdeci">static EZ_DECLARE_IF_FLOAT_TYPE ezVec3Template&lt; Type &gt; MakeRandomDirection(ezRandom &amp;inout_rng)</div><div class="ttdoc">Creates a random direction vector. The vector is normalized.</div><div class="ttdef"><b>Definition:</b> AllClassesRandom_inl.h:26</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a8a43db9c1ba66e580bf3eea85cc3f559"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a8a43db9c1ba66e580bf3eea85cc3f559">ezVec3Template::operator+=</a></div><div class="ttdeci">void operator+=(const ezVec3Template&lt; Type &gt; &amp;rhs)</div><div class="ttdoc">Adds rhs component-wise to this vector.</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:190</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_ab41a1df382689459a9b9ac8115e2be82"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#ab41a1df382689459a9b9ac8115e2be82">ezVec3Template::GetNormalized</a></div><div class="ttdeci">const EZ_DECLARE_IF_FLOAT_TYPE ezVec3Template&lt; Type &gt; GetNormalized() const</div><div class="ttdoc">Returns a normalized version of this vector, leaves the vector itself unchanged.</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:98</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_ad9bf0c48a691584e39d7aede05a5b904"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#ad9bf0c48a691584e39d7aede05a5b904">ezVec3Template::MakeZero</a></div><div class="ttdeci">static ezVec3Template&lt; Type &gt; MakeZero()</div><div class="ttdoc">Returns a vector with all components set to zero.</div><div class="ttdef"><b>Definition:</b> Vec3.h:38</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a9a492efaa38017e5dd1a2a4a54867dba"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a9a492efaa38017e5dd1a2a4a54867dba">ezVec3Template::MakeRandomDeviationX</a></div><div class="ttdeci">static EZ_DECLARE_IF_FLOAT_TYPE ezVec3Template&lt; Type &gt; MakeRandomDeviationX(ezRandom &amp;inout_rng, const ezAngle &amp;maxDeviation)</div><div class="ttdoc">Creates a random vector around the x axis with a maximum deviation angle of maxDeviation....</div><div class="ttdef"><b>Definition:</b> AllClassesRandom_inl.h:34</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a11fc52c24ee447ac7f8ccbfe2b03c811"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a11fc52c24ee447ac7f8ccbfe2b03c811">ezVec3Template::MakeRandomDeviationZ</a></div><div class="ttdeci">static EZ_DECLARE_IF_FLOAT_TYPE ezVec3Template&lt; Type &gt; MakeRandomDeviationZ(ezRandom &amp;inout_rng, const ezAngle &amp;maxDeviation)</div><div class="ttdoc">Creates a random vector around the z axis with a maximum deviation angle of maxDeviation....</div><div class="ttdef"><b>Definition:</b> AllClassesRandom_inl.h:58</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a5487dab455f50510bb285e90d42b73ef"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a5487dab455f50510bb285e90d42b73ef">ezVec3Template::CompClamp</a></div><div class="ttdeci">const ezVec3Template&lt; Type &gt; CompClamp(const ezVec3Template&lt; Type &gt; &amp;vLow, const ezVec3Template&lt; Type &gt; &amp;vHigh) const</div><div class="ttdoc">Returns the component-wise clamped value of *this between low and high.</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:347</div></div>
<div class="ttc" id="aclassez_vec2_template_htm"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm">ezVec2Template</a></div><div class="ttdoc">A 2-component vector class.</div><div class="ttdef"><b>Definition:</b> Declarations.h:129</div></div>
<div class="ttc" id="aclassez_vec4_template_htm"><div class="ttname"><a href="../../da/dd2/classez_vec4_template.htm">ezVec4Template</a></div><div class="ttdoc">A 4-component vector class.</div><div class="ttdef"><b>Definition:</b> Declarations.h:149</div></div>
<div class="ttc" id="aclassez_vec3_template_htm"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm">ezVec3Template</a></div><div class="ttdoc">A 3-component vector class.</div><div class="ttdef"><b>Definition:</b> Declarations.h:139</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a6d0e7f20d7af9da9092570ec7ee772d3"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a6d0e7f20d7af9da9092570ec7ee772d3">ezVec3Template::GetData</a></div><div class="ttdeci">Type * GetData()</div><div class="ttdoc">Returns the data as an array.</div><div class="ttdef"><b>Definition:</b> Vec3.h:78</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_4ad0f5fbee83b30173e7fecedeea26f0.htm">Math</a></li><li class="navelem"><b>Vec3.h</b></li>
    <li class="footer">Generated on Mon Mar 3 2025 17:23:44 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
