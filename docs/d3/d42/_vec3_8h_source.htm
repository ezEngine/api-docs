<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Math/Vec3.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">ezEngine<span id="projectnumber">&#160;Release 25.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function() { init_codefold(1); });
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('d3/d42/_vec3_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">Vec3.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="preprocessor">#include &lt;Foundation/Math/Math.h&gt;</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="preprocessor">#include &lt;Foundation/Math/Vec2.h&gt;</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span> </div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00008" data-start="{" data-end="};">
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno"><a class="line" href="../../da/df1/classez_vec3_template.htm">    8</a></span><span class="keyword">class </span><a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template</a></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span>{</div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span>  <span class="comment">// Means that vectors can be copied using memcpy instead of copy construction.</span></div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span>  EZ_DECLARE_POD_TYPE();</div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span> </div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span>  <span class="keyword">using </span>ComponentType = Type;</div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span> </div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span>  <span class="comment">// *** Data ***</span></div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span>  Type x, y, z;</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span> </div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span>  <span class="comment">// *** Constructors ***</span></div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span>  <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span> </div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span>  <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>(Type x, Type y, Type z); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span> </div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span>  <span class="keyword">explicit</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>(Type v); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span> </div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span>  <span class="comment">// no copy-constructor and operator= since the default-generated ones will be faster</span></div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span> </div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span>  EZ_DECLARE_IF_FLOAT_TYPE</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno"><a class="line" href="../../da/df1/classez_vec3_template.htm#ad5526f575f870c667c110c367f2ffbfe">   35</a></span>  [[nodiscard]] <span class="keyword">static</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#ad5526f575f870c667c110c367f2ffbfe">MakeNaN</a>() { <span class="keywordflow">return</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>(ezMath::NaN&lt;Type&gt;()); }</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span> </div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno"><a class="line" href="../../da/df1/classez_vec3_template.htm#a42872bfbb26be83b6e0d0066fe772258">   38</a></span>  [[nodiscard]] <span class="keyword">static</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a42872bfbb26be83b6e0d0066fe772258">MakeZero</a>() { <span class="keywordflow">return</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>(0); } <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span> </div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno"><a class="line" href="../../da/df1/classez_vec3_template.htm#a659a020d596ab81b086e613fa7ff1186">   41</a></span>  [[nodiscard]] <span class="keyword">static</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a659a020d596ab81b086e613fa7ff1186">MakeAxisX</a>() { <span class="keywordflow">return</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>(1, 0, 0); } <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span> </div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno"><a class="line" href="../../da/df1/classez_vec3_template.htm#abcddecae6ca55a43928802eec6fac1d4">   44</a></span>  [[nodiscard]] <span class="keyword">static</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#abcddecae6ca55a43928802eec6fac1d4">MakeAxisY</a>() { <span class="keywordflow">return</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>(0, 1, 0); } <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span> </div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno"><a class="line" href="../../da/df1/classez_vec3_template.htm#a7822c4bf02bf48520fe62fca4fe712dd">   47</a></span>  [[nodiscard]] <span class="keyword">static</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a7822c4bf02bf48520fe62fca4fe712dd">MakeAxisZ</a>() { <span class="keywordflow">return</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>(0, 0, 1); } <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span> </div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno"><a class="line" href="../../da/df1/classez_vec3_template.htm#a8a9df8ff2c7ae48159039784f522286b">   50</a></span>  [[nodiscard]] <span class="keyword">static</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a8a9df8ff2c7ae48159039784f522286b">Make</a>(Type x, Type y, Type z) { <span class="keywordflow">return</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>(x, y, z); } <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span> </div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>  EZ_DECLARE_IF_FLOAT_TYPE</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>  [[nodiscard]] <span class="keyword">static</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#acd22887e3f7a999cc61d72da3db8f4bb">MakeOrthogonalVector</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vDirection, <span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vBasis1 = <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a659a020d596ab81b086e613fa7ff1186">MakeAxisX</a>(), <span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vBasis2 = <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#abcddecae6ca55a43928802eec6fac1d4">MakeAxisY</a>()); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span> </div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span><span class="preprocessor">#if EZ_ENABLED(EZ_MATH_CHECK_FOR_NAN)</span></div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>  <span class="keywordtype">void</span> AssertNotNaN()<span class="keyword"> const</span></div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span><span class="keyword">  </span>{</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span>    EZ_ASSERT_ALWAYS(!<a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a330f758d541d570f19443bbbc0969e5e">IsNaN</a>(), <span class="stringliteral">&quot;This object contains NaN values. This can happen when you forgot to initialize it before using it. Please &quot;</span></div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>                               <span class="stringliteral">&quot;check that all code-paths properly initialize this object.&quot;</span>);</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span>  }</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span> </div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>  <span class="comment">// *** Conversions ***</span></div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a> <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a02e907f33ad36aa19998b9bcf7788693">GetAsVec2</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span> </div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template&lt;Type&gt;</a> <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a6c891d9c1b9ef68d922c15ff790c1381">GetAsVec4</a>(Type w) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span> </div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template&lt;Type&gt;</a> <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a7c9bf59182a48c3987caae74e51c2b5f">GetAsPositionVec4</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span> </div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template&lt;Type&gt;</a> <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#ae4e6345581550dd8253e2717f61b49b5">GetAsDirectionVec4</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span> </div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno"><a class="line" href="../../da/df1/classez_vec3_template.htm#a1a819ee5456d73a41e405bc1a9dced77">   84</a></span>  <span class="keyword">const</span> Type* <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a1a819ee5456d73a41e405bc1a9dced77">GetData</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> &amp;x; }</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span> </div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno"><a class="line" href="../../da/df1/classez_vec3_template.htm#a9e14c10f499eea866b90b01ebf0a87b9">   87</a></span>  Type* <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a9e14c10f499eea866b90b01ebf0a87b9">GetData</a>() { <span class="keywordflow">return</span> &amp;x; }</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span> </div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>  <span class="comment">// *** Functions to set the vector to specific values ***</span></div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a4693ce7e3ea568fb31504369e69836fb">Set</a>(Type xyz); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span> </div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a4693ce7e3ea568fb31504369e69836fb">Set</a>(Type x, Type y, Type z); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span> </div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#af217f183c290134d4db0d382759bdfe3">SetZero</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span> </div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>  <span class="comment">// *** Functions dealing with length ***</span></div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>  EZ_DECLARE_IF_FLOAT_TYPE</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>  Type <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a9aa1d4a80c92eff8889e82f467dc30e8">GetLength</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span> </div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>  EZ_DECLARE_IF_FLOAT_TYPE</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>  Type <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a0b3fc0ee30fe59baf88962c47778938d">GetDistanceTo</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span> </div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span>  EZ_DECLARE_IF_FLOAT_TYPE</div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span>  Type <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a71b96f032507d4517b97a686f0825538">GetSquaredDistanceTo</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span> </div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>  EZ_DECLARE_IF_FLOAT_TYPE</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>  <a class="code hl_struct" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a66b9f165bd9d5673d50a450ceba2bb6d">SetLength</a>(Type fNewLength, Type fEpsilon = ezMath::DefaultEpsilon&lt;Type&gt;()); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span> </div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span>  Type <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#aa47fcb03a5aa1272b8afe9ba00e66ee9">GetLengthSquared</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span> </div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span>  EZ_DECLARE_IF_FLOAT_TYPE</div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span>  Type <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#af4e267c0c9a22521a2d6ad40e6e52da7">GetLengthAndNormalize</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span> </div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span>  EZ_DECLARE_IF_FLOAT_TYPE</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span>  [[nodiscard]] <span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a2150310ee4c66bdd26759a9c2ca76a1c">GetNormalized</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span> </div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span>  EZ_DECLARE_IF_FLOAT_TYPE</div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a617fb13b6687bc6c6e398eb982e2c8be">Normalize</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span> </div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span>  EZ_DECLARE_IF_FLOAT_TYPE</div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span>  <a class="code hl_struct" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a3d5f0da5ec0379f9ad1c08787c8183af">NormalizeIfNotZero</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vFallback = <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>(1, 0, 0), Type fEpsilon = ezMath::SmallEpsilon&lt;Type&gt;()); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span> </div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a52d86f05731890b4a5ca7762a5d65bb3">IsZero</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span> </div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a52d86f05731890b4a5ca7762a5d65bb3">IsZero</a>(Type fEpsilon) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span> </div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span>  EZ_DECLARE_IF_FLOAT_TYPE</div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a100b2d039a3ae3ecfb47db05b600f4f8">IsNormalized</a>(Type fEpsilon = ezMath::HugeEpsilon&lt;Type&gt;()) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span> </div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a330f758d541d570f19443bbbc0969e5e">IsNaN</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span> </div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a216fcb73cd48b1bd9062fdf9b8be0b88">IsValid</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span> </div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span> </div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span>  <span class="comment">// *** Operators ***</span></div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a142af5707bc2a9264415b4e892dc4207">operator-</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span> </div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a8a43db9c1ba66e580bf3eea85cc3f559">operator+=</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; rhs); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span> </div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a5349436a34546a479a64bbe2ffdbb969">operator-=</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; rhs); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span> </div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a8009bc202b1f20dc95d4296d063f3ff4">operator*=</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; rhs);</div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span> </div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#acf4fd0903b014af9fc671b4cc47f7853">operator/=</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; rhs);</div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span> </div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a8009bc202b1f20dc95d4296d063f3ff4">operator*=</a>(Type f); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span> </div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#acf4fd0903b014af9fc671b4cc47f7853">operator/=</a>(Type f); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span> </div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a3ca79a707f6473af0e295909fb3f3cb1">IsIdentical</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno">  183</span> </div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#af7dd54170c3e008dc8f7065573947e4b">IsEqual</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; rhs, Type fEpsilon) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span> </div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span> </div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span>  <span class="comment">// *** Common vector operations ***</span></div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span>  <a class="code hl_class" href="../../db/d6f/classez_angle.htm">ezAngle</a> <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a726ff5ddd3f38d4dfc4e99f541023674">GetAngleBetween</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span> </div>
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno">  204</span>  <a class="code hl_class" href="../../db/d6f/classez_angle.htm">ezAngle</a> <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a726ff5ddd3f38d4dfc4e99f541023674">GetAngleBetween</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vForward, <span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vUp) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00205" name="l00205"></a><span class="lineno">  205</span> </div>
<div class="line"><a id="l00206" name="l00206"></a><span class="lineno">  206</span> </div>
<div class="line"><a id="l00208" name="l00208"></a><span class="lineno">  208</span>  [[nodiscard]] Type <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#ab7672fa59655c642c16f8caf581e03f3">Dot</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno">  209</span> </div>
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno">  210</span> </div>
<div class="line"><a id="l00211" name="l00211"></a><span class="lineno">  211</span> </div>
<div class="line"><a id="l00213" name="l00213"></a><span class="lineno">  213</span>  [[nodiscard]] <span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#ac75d15f3524fbc880a4cb7ae1cb45094">CrossRH</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno">  214</span> </div>
<div class="line"><a id="l00216" name="l00216"></a><span class="lineno">  216</span>  [[nodiscard]] <span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a1f96804c091f0d4a34225ce22f3d8128">CompMin</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00217" name="l00217"></a><span class="lineno">  217</span> </div>
<div class="line"><a id="l00219" name="l00219"></a><span class="lineno">  219</span>  [[nodiscard]] <span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#ab6d1eb1df0d8a172507f322249582485">CompMax</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00220" name="l00220"></a><span class="lineno">  220</span> </div>
<div class="line"><a id="l00222" name="l00222"></a><span class="lineno">  222</span>  [[nodiscard]] <span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#ab2e686b996810811d515cea1ea3eb306">CompClamp</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vLow, <span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vHigh) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00223" name="l00223"></a><span class="lineno">  223</span> </div>
<div class="line"><a id="l00225" name="l00225"></a><span class="lineno">  225</span>  [[nodiscard]] <span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a9b0266c9e67ecf838d3507bd67625941">CompMul</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00226" name="l00226"></a><span class="lineno">  226</span> </div>
<div class="line"><a id="l00228" name="l00228"></a><span class="lineno">  228</span>  [[nodiscard]] <span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a601124a09ff3cec911805a8c25b4ba04">CompDiv</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00229" name="l00229"></a><span class="lineno">  229</span> </div>
<div class="line"><a id="l00231" name="l00231"></a><span class="lineno">  231</span>  [[nodiscard]] <span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#ab6e2563b421a4d9e637eb7472fa6b327">Abs</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00232" name="l00232"></a><span class="lineno">  232</span> </div>
<div class="line"><a id="l00233" name="l00233"></a><span class="lineno">  233</span> </div>
<div class="line"><a id="l00234" name="l00234"></a><span class="lineno">  234</span>  <span class="comment">// *** Other common operations ***</span></div>
<div class="line"><a id="l00235" name="l00235"></a><span class="lineno">  235</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00237" name="l00237"></a><span class="lineno">  237</span>  EZ_DECLARE_IF_FLOAT_TYPE</div>
<div class="line"><a id="l00238" name="l00238"></a><span class="lineno">  238</span>  <a class="code hl_struct" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a0c424d40aec248f4a770e85634975f4d">CalculateNormal</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; v1, <span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; v2, <span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; v3); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00239" name="l00239"></a><span class="lineno">  239</span> </div>
<div class="line"><a id="l00244" name="l00244"></a><span class="lineno">  244</span>  EZ_DECLARE_IF_FLOAT_TYPE</div>
<div class="line"><a id="l00245" name="l00245"></a><span class="lineno">  245</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#aa67f5a9a263b661357c874c66e6fab3b">MakeOrthogonalTo</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vNormal); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00246" name="l00246"></a><span class="lineno">  246</span> </div>
<div class="line"><a id="l00248" name="l00248"></a><span class="lineno">  248</span>  EZ_DECLARE_IF_FLOAT_TYPE</div>
<div class="line"><a id="l00249" name="l00249"></a><span class="lineno">  249</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#ae75f433cc72c9da3afe5084dec49b01c">GetOrthogonalVector</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00250" name="l00250"></a><span class="lineno">  250</span> </div>
<div class="line"><a id="l00252" name="l00252"></a><span class="lineno">  252</span>  EZ_DECLARE_IF_FLOAT_TYPE</div>
<div class="line"><a id="l00253" name="l00253"></a><span class="lineno">  253</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#aced6f011b34ce19a96a753f6ace62a3a">GetReflectedVector</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vNormal) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00254" name="l00254"></a><span class="lineno">  254</span> </div>
<div class="line"><a id="l00256" name="l00256"></a><span class="lineno">  256</span>  EZ_DECLARE_IF_FLOAT_TYPE</div>
<div class="line"><a id="l00257" name="l00257"></a><span class="lineno">  257</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a1bcb27c60bcac5aead4815011ff4d225">GetRefractedVector</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vNormal, Type fRefIndex1, Type fRefIndex2) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00258" name="l00258"></a><span class="lineno">  258</span> </div>
<div class="line"><a id="l00260" name="l00260"></a><span class="lineno">  260</span>  EZ_DECLARE_IF_FLOAT_TYPE</div>
<div class="line"><a id="l00261" name="l00261"></a><span class="lineno">  261</span>  [[nodiscard]] <span class="keyword">static</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a></div>
<div class="line"><a id="l00262" name="l00262"></a><span class="lineno">  262</span>  <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#aff6e8aac8f1bca190791c1c5204722e7">MakeRandomPointInSphere</a>(<a class="code hl_class" href="../../de/d9e/classez_random.htm">ezRandom</a>&amp; inout_rng); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00263" name="l00263"></a><span class="lineno">  263</span> </div>
<div class="line"><a id="l00265" name="l00265"></a><span class="lineno">  265</span>  EZ_DECLARE_IF_FLOAT_TYPE</div>
<div class="line"><a id="l00266" name="l00266"></a><span class="lineno">  266</span>  [[nodiscard]] <span class="keyword">static</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a></div>
<div class="line"><a id="l00267" name="l00267"></a><span class="lineno">  267</span>  <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a7a1e930fec53548550f90bff75da6237">MakeRandomDirection</a>(<a class="code hl_class" href="../../de/d9e/classez_random.htm">ezRandom</a>&amp; inout_rng); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00268" name="l00268"></a><span class="lineno">  268</span> </div>
<div class="line"><a id="l00271" name="l00271"></a><span class="lineno">  271</span>  EZ_DECLARE_IF_FLOAT_TYPE</div>
<div class="line"><a id="l00272" name="l00272"></a><span class="lineno">  272</span>  [[nodiscard]] <span class="keyword">static</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a></div>
<div class="line"><a id="l00273" name="l00273"></a><span class="lineno">  273</span>  <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a9a492efaa38017e5dd1a2a4a54867dba">MakeRandomDeviationX</a>(<a class="code hl_class" href="../../de/d9e/classez_random.htm">ezRandom</a>&amp; inout_rng, <span class="keyword">const</span> <a class="code hl_class" href="../../db/d6f/classez_angle.htm">ezAngle</a>&amp; maxDeviation); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00274" name="l00274"></a><span class="lineno">  274</span> </div>
<div class="line"><a id="l00277" name="l00277"></a><span class="lineno">  277</span>  EZ_DECLARE_IF_FLOAT_TYPE</div>
<div class="line"><a id="l00278" name="l00278"></a><span class="lineno">  278</span>  [[nodiscard]] <span class="keyword">static</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a></div>
<div class="line"><a id="l00279" name="l00279"></a><span class="lineno">  279</span>  <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a7f9d1ae1c8c99f5811a24bcc0a8523d7">MakeRandomDeviationY</a>(<a class="code hl_class" href="../../de/d9e/classez_random.htm">ezRandom</a>&amp; inout_rng, <span class="keyword">const</span> <a class="code hl_class" href="../../db/d6f/classez_angle.htm">ezAngle</a>&amp; maxDeviation); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00280" name="l00280"></a><span class="lineno">  280</span> </div>
<div class="line"><a id="l00283" name="l00283"></a><span class="lineno">  283</span>  EZ_DECLARE_IF_FLOAT_TYPE</div>
<div class="line"><a id="l00284" name="l00284"></a><span class="lineno">  284</span>  [[nodiscard]] <span class="keyword">static</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a></div>
<div class="line"><a id="l00285" name="l00285"></a><span class="lineno">  285</span>  <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a11fc52c24ee447ac7f8ccbfe2b03c811">MakeRandomDeviationZ</a>(<a class="code hl_class" href="../../de/d9e/classez_random.htm">ezRandom</a>&amp; inout_rng, <span class="keyword">const</span> <a class="code hl_class" href="../../db/d6f/classez_angle.htm">ezAngle</a>&amp; maxDeviation); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00286" name="l00286"></a><span class="lineno">  286</span> </div>
<div class="line"><a id="l00290" name="l00290"></a><span class="lineno">  290</span>  EZ_DECLARE_IF_FLOAT_TYPE</div>
<div class="line"><a id="l00291" name="l00291"></a><span class="lineno">  291</span>  [[nodiscard]] <span class="keyword">static</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a></div>
<div class="line"><a id="l00292" name="l00292"></a><span class="lineno">  292</span>  <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a21d0625db65a63ea2e11c35881af29a2">MakeRandomDeviation</a>(<a class="code hl_class" href="../../de/d9e/classez_random.htm">ezRandom</a>&amp; inout_rng, <span class="keyword">const</span> <a class="code hl_class" href="../../db/d6f/classez_angle.htm">ezAngle</a>&amp; maxDeviation, <span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vNormal); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00293" name="l00293"></a><span class="lineno">  293</span>};</div>
</div>
<div class="line"><a id="l00294" name="l00294"></a><span class="lineno">  294</span> </div>
<div class="line"><a id="l00295" name="l00295"></a><span class="lineno">  295</span><span class="comment">// *** Operators ***</span></div>
<div class="line"><a id="l00296" name="l00296"></a><span class="lineno">  296</span> </div>
<div class="line"><a id="l00297" name="l00297"></a><span class="lineno">  297</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00298" name="l00298"></a><span class="lineno">  298</span><span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> operator+(<span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; v1, <span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; v2); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00299" name="l00299"></a><span class="lineno">  299</span> </div>
<div class="line"><a id="l00300" name="l00300"></a><span class="lineno">  300</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00301" name="l00301"></a><span class="lineno">  301</span><span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> operator-(<span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; v1, <span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; v2); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00302" name="l00302"></a><span class="lineno">  302</span> </div>
<div class="line"><a id="l00303" name="l00303"></a><span class="lineno">  303</span> </div>
<div class="line"><a id="l00304" name="l00304"></a><span class="lineno">  304</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00305" name="l00305"></a><span class="lineno">  305</span><span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> operator*(Type f, <span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; v); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00306" name="l00306"></a><span class="lineno">  306</span> </div>
<div class="line"><a id="l00307" name="l00307"></a><span class="lineno">  307</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00308" name="l00308"></a><span class="lineno">  308</span><span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> operator*(<span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; v, Type f); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00309" name="l00309"></a><span class="lineno">  309</span> </div>
<div class="line"><a id="l00310" name="l00310"></a><span class="lineno">  310</span> </div>
<div class="line"><a id="l00311" name="l00311"></a><span class="lineno">  311</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00312" name="l00312"></a><span class="lineno">  312</span><span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> operator/(<span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; v, Type f); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00313" name="l00313"></a><span class="lineno">  313</span> </div>
<div class="line"><a id="l00314" name="l00314"></a><span class="lineno">  314</span> </div>
<div class="line"><a id="l00315" name="l00315"></a><span class="lineno">  315</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00316" name="l00316"></a><span class="lineno">  316</span><span class="keywordtype">bool</span> operator==(<span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; v1, <span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; v2); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00317" name="l00317"></a><span class="lineno">  317</span> </div>
<div class="line"><a id="l00318" name="l00318"></a><span class="lineno">  318</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00319" name="l00319"></a><span class="lineno">  319</span><span class="keywordtype">bool</span> operator!=(<span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; v1, <span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; v2); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00320" name="l00320"></a><span class="lineno">  320</span> </div>
<div class="line"><a id="l00322" name="l00322"></a><span class="lineno">  322</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00323" name="l00323"></a><span class="lineno">  323</span><span class="keywordtype">bool</span> operator&lt;(<span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; v1, <span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; v2); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00324" name="l00324"></a><span class="lineno">  324</span> </div>
<div class="line"><a id="l00325" name="l00325"></a><span class="lineno">  325</span><span class="preprocessor">#include &lt;Foundation/Math/Implementation/Vec3_inl.h&gt;</span></div>
<div class="ttc" id="aclassez_angle_htm"><div class="ttname"><a href="../../db/d6f/classez_angle.htm">ezAngle</a></div><div class="ttdoc">Float wrapper struct for a safe usage and conversions of angles.</div><div class="ttdef"><b>Definition</b> Angle.h:10</div></div>
<div class="ttc" id="aclassez_random_htm"><div class="ttname"><a href="../../de/d9e/classez_random.htm">ezRandom</a></div><div class="ttdoc">A random number generator. Currently uses the WELL512 algorithm.</div><div class="ttdef"><b>Definition</b> Random.h:10</div></div>
<div class="ttc" id="aclassez_vec2_template_htm"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm">ezVec2Template</a></div><div class="ttdoc">A 2-component vector class.</div><div class="ttdef"><b>Definition</b> Vec2.h:14</div></div>
<div class="ttc" id="aclassez_vec3_template_htm"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm">ezVec3Template</a></div><div class="ttdoc">A 3-component vector class.</div><div class="ttdef"><b>Definition</b> Vec3.h:9</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a02e907f33ad36aa19998b9bcf7788693"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a02e907f33ad36aa19998b9bcf7788693">ezVec3Template::GetAsVec2</a></div><div class="ttdeci">const ezVec2Template&lt; Type &gt; GetAsVec2() const</div><div class="ttdoc">Returns an ezVec2Template with x and y from this vector.</div><div class="ttdef"><b>Definition</b> Vec4_inl.h:26</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a0b3fc0ee30fe59baf88962c47778938d"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a0b3fc0ee30fe59baf88962c47778938d">ezVec3Template::GetDistanceTo</a></div><div class="ttdeci">EZ_DECLARE_IF_FLOAT_TYPE Type GetDistanceTo(const ezVec3Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the length between this position and rhs.</div><div class="ttdef"><b>Definition</b> Vec3_inl.h:60</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a0c424d40aec248f4a770e85634975f4d"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a0c424d40aec248f4a770e85634975f4d">ezVec3Template::CalculateNormal</a></div><div class="ttdeci">EZ_DECLARE_IF_FLOAT_TYPE ezResult CalculateNormal(const ezVec3Template&lt; Type &gt; &amp;v1, const ezVec3Template&lt; Type &gt; &amp;v2, const ezVec3Template&lt; Type &gt; &amp;v3)</div><div class="ttdoc">Calculates the normal of the triangle defined by the three vertices. Vertices are assumed to be order...</div><div class="ttdef"><b>Definition</b> Vec3_inl.h:265</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a100b2d039a3ae3ecfb47db05b600f4f8"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a100b2d039a3ae3ecfb47db05b600f4f8">ezVec3Template::IsNormalized</a></div><div class="ttdeci">EZ_DECLARE_IF_FLOAT_TYPE bool IsNormalized(Type fEpsilon=ezMath::HugeEpsilon&lt; Type &gt;()) const</div><div class="ttdoc">Returns, whether the squared length of this vector is between 0.999f and 1.001f.</div><div class="ttdef"><b>Definition</b> Vec3_inl.h:133</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a11fc52c24ee447ac7f8ccbfe2b03c811"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a11fc52c24ee447ac7f8ccbfe2b03c811">ezVec3Template::MakeRandomDeviationZ</a></div><div class="ttdeci">static EZ_DECLARE_IF_FLOAT_TYPE ezVec3Template&lt; Type &gt; MakeRandomDeviationZ(ezRandom &amp;inout_rng, const ezAngle &amp;maxDeviation)</div><div class="ttdoc">Creates a random vector around the z axis with a maximum deviation angle of maxDeviation....</div><div class="ttdef"><b>Definition</b> AllClassesRandom_inl.h:58</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a142af5707bc2a9264415b4e892dc4207"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a142af5707bc2a9264415b4e892dc4207">ezVec3Template::operator-</a></div><div class="ttdeci">const ezVec3Template&lt; Type &gt; operator-() const</div><div class="ttdoc">Returns the negation of this vector.</div><div class="ttdef"><b>Definition</b> Vec3_inl.h:182</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a1a819ee5456d73a41e405bc1a9dced77"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a1a819ee5456d73a41e405bc1a9dced77">ezVec3Template::GetData</a></div><div class="ttdeci">const Type * GetData() const</div><div class="ttdoc">Returns the data as an array.</div><div class="ttdef"><b>Definition</b> Vec3.h:84</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a1bcb27c60bcac5aead4815011ff4d225"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a1bcb27c60bcac5aead4815011ff4d225">ezVec3Template::GetRefractedVector</a></div><div class="ttdeci">EZ_DECLARE_IF_FLOAT_TYPE const ezVec3Template&lt; Type &gt; GetRefractedVector(const ezVec3Template&lt; Type &gt; &amp;vNormal, Type fRefIndex1, Type fRefIndex2) const</div><div class="ttdoc">Returns this vector, refracted at vNormal, using the refraction index of the current medium and the m...</div><div class="ttdef"><b>Definition</b> Vec3_inl.h:516</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a1f96804c091f0d4a34225ce22f3d8128"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a1f96804c091f0d4a34225ce22f3d8128">ezVec3Template::CompMin</a></div><div class="ttdeci">const ezVec3Template&lt; Type &gt; CompMin(const ezVec3Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the component-wise minimum of *this and rhs.</div><div class="ttdef"><b>Definition</b> Vec3_inl.h:363</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a2150310ee4c66bdd26759a9c2ca76a1c"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a2150310ee4c66bdd26759a9c2ca76a1c">ezVec3Template::GetNormalized</a></div><div class="ttdeci">EZ_DECLARE_IF_FLOAT_TYPE const ezVec3Template&lt; Type &gt; GetNormalized() const</div><div class="ttdoc">Returns a normalized version of this vector, leaves the vector itself unchanged.</div><div class="ttdef"><b>Definition</b> Vec3_inl.h:98</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a216fcb73cd48b1bd9062fdf9b8be0b88"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a216fcb73cd48b1bd9062fdf9b8be0b88">ezVec3Template::IsValid</a></div><div class="ttdeci">bool IsValid() const</div><div class="ttdoc">Checks that all components are finite numbers.</div><div class="ttdef"><b>Definition</b> Vec3_inl.h:169</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a21d0625db65a63ea2e11c35881af29a2"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a21d0625db65a63ea2e11c35881af29a2">ezVec3Template::MakeRandomDeviation</a></div><div class="ttdeci">static EZ_DECLARE_IF_FLOAT_TYPE ezVec3Template&lt; Type &gt; MakeRandomDeviation(ezRandom &amp;inout_rng, const ezAngle &amp;maxDeviation, const ezVec3Template&lt; Type &gt; &amp;vNormal)</div><div class="ttdoc">Creates a random vector around the given normal with a maximum deviation.</div><div class="ttdef"><b>Definition</b> AllClassesRandom_inl.h:66</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a330f758d541d570f19443bbbc0969e5e"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a330f758d541d570f19443bbbc0969e5e">ezVec3Template::IsNaN</a></div><div class="ttdeci">bool IsNaN() const</div><div class="ttdoc">Returns true, if any of x, y or z is NaN.</div><div class="ttdef"><b>Definition</b> Vec3_inl.h:156</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a3ca79a707f6473af0e295909fb3f3cb1"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a3ca79a707f6473af0e295909fb3f3cb1">ezVec3Template::IsIdentical</a></div><div class="ttdeci">bool IsIdentical(const ezVec3Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Equality Check (bitwise)</div><div class="ttdef"><b>Definition</b> Vec3_inl.h:468</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a3d5f0da5ec0379f9ad1c08787c8183af"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a3d5f0da5ec0379f9ad1c08787c8183af">ezVec3Template::NormalizeIfNotZero</a></div><div class="ttdeci">EZ_DECLARE_IF_FLOAT_TYPE ezResult NormalizeIfNotZero(const ezVec3Template&lt; Type &gt; &amp;vFallback=ezVec3Template&lt; Type &gt;(1, 0, 0), Type fEpsilon=ezMath::SmallEpsilon&lt; Type &gt;())</div><div class="ttdoc">Tries to normalize this vector. If the vector is too close to zero, EZ_FAILURE is returned and the ve...</div><div class="ttdef"><b>Definition</b> Vec3_inl.h:113</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a42872bfbb26be83b6e0d0066fe772258"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a42872bfbb26be83b6e0d0066fe772258">ezVec3Template::MakeZero</a></div><div class="ttdeci">static ezVec3Template&lt; Type &gt; MakeZero()</div><div class="ttdoc">Returns a vector with all components set to zero.</div><div class="ttdef"><b>Definition</b> Vec3.h:38</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a4693ce7e3ea568fb31504369e69836fb"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a4693ce7e3ea568fb31504369e69836fb">ezVec3Template::Set</a></div><div class="ttdeci">void Set(Type xyz)</div><div class="ttdoc">Sets all 3 components to this value.</div><div class="ttdef"><b>Definition</b> Vec3_inl.h:32</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a52d86f05731890b4a5ca7762a5d65bb3"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a52d86f05731890b4a5ca7762a5d65bb3">ezVec3Template::IsZero</a></div><div class="ttdeci">bool IsZero() const</div><div class="ttdoc">Returns, whether this vector is (0, 0, 0).</div><div class="ttdef"><b>Definition</b> Vec3_inl.h:140</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a5349436a34546a479a64bbe2ffdbb969"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a5349436a34546a479a64bbe2ffdbb969">ezVec3Template::operator-=</a></div><div class="ttdeci">void operator-=(const ezVec3Template&lt; Type &gt; &amp;rhs)</div><div class="ttdoc">Subtracts rhs component-wise from this vector.</div><div class="ttdef"><b>Definition</b> Vec3_inl.h:200</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a601124a09ff3cec911805a8c25b4ba04"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a601124a09ff3cec911805a8c25b4ba04">ezVec3Template::CompDiv</a></div><div class="ttdeci">const ezVec3Template&lt; Type &gt; CompDiv(const ezVec3Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the component-wise division of *this and rhs.</div><div class="ttdef"><b>Definition</b> Vec3_inl.h:400</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a617fb13b6687bc6c6e398eb982e2c8be"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a617fb13b6687bc6c6e398eb982e2c8be">ezVec3Template::Normalize</a></div><div class="ttdeci">EZ_DECLARE_IF_FLOAT_TYPE void Normalize()</div><div class="ttdoc">Normalizes this vector.</div><div class="ttdef"><b>Definition</b> Vec3_inl.h:107</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a659a020d596ab81b086e613fa7ff1186"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a659a020d596ab81b086e613fa7ff1186">ezVec3Template::MakeAxisX</a></div><div class="ttdeci">static ezVec3Template&lt; Type &gt; MakeAxisX()</div><div class="ttdoc">Returns a vector initialized to the X unit vector (1, 0, 0).</div><div class="ttdef"><b>Definition</b> Vec3.h:41</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a66b9f165bd9d5673d50a450ceba2bb6d"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a66b9f165bd9d5673d50a450ceba2bb6d">ezVec3Template::SetLength</a></div><div class="ttdeci">EZ_DECLARE_IF_FLOAT_TYPE ezResult SetLength(Type fNewLength, Type fEpsilon=ezMath::DefaultEpsilon&lt; Type &gt;())</div><div class="ttdoc">Tries to rescale the vector to the given length. If the vector is too close to zero,...</div><div class="ttdef"><b>Definition</b> Vec3_inl.h:72</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a6c891d9c1b9ef68d922c15ff790c1381"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a6c891d9c1b9ef68d922c15ff790c1381">ezVec3Template::GetAsVec4</a></div><div class="ttdeci">const ezVec4Template&lt; Type &gt; GetAsVec4(Type w) const</div><div class="ttdoc">Returns an ezVec4Template with x,y,z from this vector and w set to the parameter.</div><div class="ttdef"><b>Definition</b> Vec4_inl.h:35</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a71b96f032507d4517b97a686f0825538"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a71b96f032507d4517b97a686f0825538">ezVec3Template::GetSquaredDistanceTo</a></div><div class="ttdeci">EZ_DECLARE_IF_FLOAT_TYPE Type GetSquaredDistanceTo(const ezVec3Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the squared length between this position and rhs.</div><div class="ttdef"><b>Definition</b> Vec3_inl.h:66</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a726ff5ddd3f38d4dfc4e99f541023674"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a726ff5ddd3f38d4dfc4e99f541023674">ezVec3Template::GetAngleBetween</a></div><div class="ttdeci">ezAngle GetAngleBetween(const ezVec3Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the shortest angle between *this and rhs. Both this and rhs must be normalized.</div><div class="ttdef"><b>Definition</b> Vec3_inl.h:336</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a7822c4bf02bf48520fe62fca4fe712dd"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a7822c4bf02bf48520fe62fca4fe712dd">ezVec3Template::MakeAxisZ</a></div><div class="ttdeci">static ezVec3Template&lt; Type &gt; MakeAxisZ()</div><div class="ttdoc">Returns a vector initialized to the Z unit vector (0, 0, 1).</div><div class="ttdef"><b>Definition</b> Vec3.h:47</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a7a1e930fec53548550f90bff75da6237"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a7a1e930fec53548550f90bff75da6237">ezVec3Template::MakeRandomDirection</a></div><div class="ttdeci">static EZ_DECLARE_IF_FLOAT_TYPE ezVec3Template&lt; Type &gt; MakeRandomDirection(ezRandom &amp;inout_rng)</div><div class="ttdoc">Creates a random direction vector. The vector is normalized.</div><div class="ttdef"><b>Definition</b> AllClassesRandom_inl.h:26</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a7c9bf59182a48c3987caae74e51c2b5f"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a7c9bf59182a48c3987caae74e51c2b5f">ezVec3Template::GetAsPositionVec4</a></div><div class="ttdeci">const ezVec4Template&lt; Type &gt; GetAsPositionVec4() const</div><div class="ttdoc">Returns an ezVec4Template with x,y,z from this vector and w set 1.</div><div class="ttdef"><b>Definition</b> Vec4_inl.h:43</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a7f9d1ae1c8c99f5811a24bcc0a8523d7"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a7f9d1ae1c8c99f5811a24bcc0a8523d7">ezVec3Template::MakeRandomDeviationY</a></div><div class="ttdeci">static EZ_DECLARE_IF_FLOAT_TYPE ezVec3Template&lt; Type &gt; MakeRandomDeviationY(ezRandom &amp;inout_rng, const ezAngle &amp;maxDeviation)</div><div class="ttdoc">Creates a random vector around the y axis with a maximum deviation angle of maxDeviation....</div><div class="ttdef"><b>Definition</b> AllClassesRandom_inl.h:50</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a8009bc202b1f20dc95d4296d063f3ff4"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a8009bc202b1f20dc95d4296d063f3ff4">ezVec3Template::operator*=</a></div><div class="ttdeci">void operator*=(const ezVec3Template&lt; Type &gt; &amp;rhs)</div><div class="ttdoc">Multiplies rhs component-wise to this vector.</div><div class="ttdef"><b>Definition</b> Vec3_inl.h:210</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a8a43db9c1ba66e580bf3eea85cc3f559"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a8a43db9c1ba66e580bf3eea85cc3f559">ezVec3Template::operator+=</a></div><div class="ttdeci">void operator+=(const ezVec3Template&lt; Type &gt; &amp;rhs)</div><div class="ttdoc">Adds rhs component-wise to this vector.</div><div class="ttdef"><b>Definition</b> Vec3_inl.h:190</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a8a9df8ff2c7ae48159039784f522286b"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a8a9df8ff2c7ae48159039784f522286b">ezVec3Template::Make</a></div><div class="ttdeci">static ezVec3Template&lt; Type &gt; Make(Type x, Type y, Type z)</div><div class="ttdoc">Returns a vector initialized to x,y,z.</div><div class="ttdef"><b>Definition</b> Vec3.h:50</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a9a492efaa38017e5dd1a2a4a54867dba"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a9a492efaa38017e5dd1a2a4a54867dba">ezVec3Template::MakeRandomDeviationX</a></div><div class="ttdeci">static EZ_DECLARE_IF_FLOAT_TYPE ezVec3Template&lt; Type &gt; MakeRandomDeviationX(ezRandom &amp;inout_rng, const ezAngle &amp;maxDeviation)</div><div class="ttdoc">Creates a random vector around the x axis with a maximum deviation angle of maxDeviation....</div><div class="ttdef"><b>Definition</b> AllClassesRandom_inl.h:34</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a9aa1d4a80c92eff8889e82f467dc30e8"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a9aa1d4a80c92eff8889e82f467dc30e8">ezVec3Template::GetLength</a></div><div class="ttdeci">EZ_DECLARE_IF_FLOAT_TYPE Type GetLength() const</div><div class="ttdoc">Returns the length of the vector.</div><div class="ttdef"><b>Definition</b> Vec3_inl.h:54</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a9b0266c9e67ecf838d3507bd67625941"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a9b0266c9e67ecf838d3507bd67625941">ezVec3Template::CompMul</a></div><div class="ttdeci">const ezVec3Template&lt; Type &gt; CompMul(const ezVec3Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the component-wise multiplication of *this and rhs.</div><div class="ttdef"><b>Definition</b> Vec3_inl.h:391</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a9e14c10f499eea866b90b01ebf0a87b9"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a9e14c10f499eea866b90b01ebf0a87b9">ezVec3Template::GetData</a></div><div class="ttdeci">Type * GetData()</div><div class="ttdoc">Returns the data as an array.</div><div class="ttdef"><b>Definition</b> Vec3.h:87</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_aa47fcb03a5aa1272b8afe9ba00e66ee9"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#aa47fcb03a5aa1272b8afe9ba00e66ee9">ezVec3Template::GetLengthSquared</a></div><div class="ttdeci">Type GetLengthSquared() const</div><div class="ttdoc">Returns the squared length. Faster, since no square-root is taken. Useful, if one only wants to compa...</div><div class="ttdef"><b>Definition</b> Vec3_inl.h:82</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_aa67f5a9a263b661357c874c66e6fab3b"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#aa67f5a9a263b661357c874c66e6fab3b">ezVec3Template::MakeOrthogonalTo</a></div><div class="ttdeci">EZ_DECLARE_IF_FLOAT_TYPE void MakeOrthogonalTo(const ezVec3Template&lt; Type &gt; &amp;vNormal)</div><div class="ttdoc">Modifies this direction vector to be orthogonal to the given (normalized) direction vector....</div><div class="ttdef"><b>Definition</b> Vec3_inl.h:289</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_ab2e686b996810811d515cea1ea3eb306"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#ab2e686b996810811d515cea1ea3eb306">ezVec3Template::CompClamp</a></div><div class="ttdeci">const ezVec3Template&lt; Type &gt; CompClamp(const ezVec3Template&lt; Type &gt; &amp;vLow, const ezVec3Template&lt; Type &gt; &amp;vHigh) const</div><div class="ttdoc">Returns the component-wise clamped value of *this between low and high.</div><div class="ttdef"><b>Definition</b> Vec3_inl.h:381</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_ab6d1eb1df0d8a172507f322249582485"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#ab6d1eb1df0d8a172507f322249582485">ezVec3Template::CompMax</a></div><div class="ttdeci">const ezVec3Template&lt; Type &gt; CompMax(const ezVec3Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the component-wise maximum of *this and rhs.</div><div class="ttdef"><b>Definition</b> Vec3_inl.h:372</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_ab6e2563b421a4d9e637eb7472fa6b327"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#ab6e2563b421a4d9e637eb7472fa6b327">ezVec3Template::Abs</a></div><div class="ttdeci">const ezVec3Template&lt; Type &gt; Abs() const</div><div class="ttdoc">brief Returns the component-wise absolute of *this.</div><div class="ttdef"><b>Definition</b> Vec3_inl.h:409</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_ab7672fa59655c642c16f8caf581e03f3"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#ab7672fa59655c642c16f8caf581e03f3">ezVec3Template::Dot</a></div><div class="ttdeci">Type Dot(const ezVec3Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the Dot-product of the two vectors (commutative, order does not matter)</div><div class="ttdef"><b>Definition</b> Vec3_inl.h:318</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_abcddecae6ca55a43928802eec6fac1d4"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#abcddecae6ca55a43928802eec6fac1d4">ezVec3Template::MakeAxisY</a></div><div class="ttdeci">static ezVec3Template&lt; Type &gt; MakeAxisY()</div><div class="ttdoc">Returns a vector initialized to the Y unit vector (0, 1, 0).</div><div class="ttdef"><b>Definition</b> Vec3.h:44</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_ac75d15f3524fbc880a4cb7ae1cb45094"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#ac75d15f3524fbc880a4cb7ae1cb45094">ezVec3Template::CrossRH</a></div><div class="ttdeci">const ezVec3Template&lt; Type &gt; CrossRH(const ezVec3Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the Cross-product of the two vectors (NOT commutative, order DOES matter)</div><div class="ttdef"><b>Definition</b> Vec3_inl.h:327</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_acd22887e3f7a999cc61d72da3db8f4bb"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#acd22887e3f7a999cc61d72da3db8f4bb">ezVec3Template::MakeOrthogonalVector</a></div><div class="ttdeci">static EZ_DECLARE_IF_FLOAT_TYPE ezVec3Template&lt; Type &gt; MakeOrthogonalVector(const ezVec3Template&lt; Type &gt; &amp;vDirection, const ezVec3Template&lt; Type &gt; &amp;vBasis1=MakeAxisX(), const ezVec3Template&lt; Type &gt; &amp;vBasis2=MakeAxisY())</div><div class="ttdoc">Returns a vector that is orthogonal to vDirection.</div><div class="ttdef"><b>Definition</b> Vec3_inl.h:273</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_aced6f011b34ce19a96a753f6ace62a3a"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#aced6f011b34ce19a96a753f6ace62a3a">ezVec3Template::GetReflectedVector</a></div><div class="ttdeci">EZ_DECLARE_IF_FLOAT_TYPE const ezVec3Template&lt; Type &gt; GetReflectedVector(const ezVec3Template&lt; Type &gt; &amp;vNormal) const</div><div class="ttdoc">Returns this vector reflected at vNormal.</div><div class="ttdef"><b>Definition</b> Vec3_inl.h:310</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_acf4fd0903b014af9fc671b4cc47f7853"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#acf4fd0903b014af9fc671b4cc47f7853">ezVec3Template::operator/=</a></div><div class="ttdeci">void operator/=(const ezVec3Template&lt; Type &gt; &amp;rhs)</div><div class="ttdoc">Divides this vector component-wise by rhs.</div><div class="ttdef"><b>Definition</b> Vec3_inl.h:222</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_ad5526f575f870c667c110c367f2ffbfe"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#ad5526f575f870c667c110c367f2ffbfe">ezVec3Template::MakeNaN</a></div><div class="ttdeci">static EZ_DECLARE_IF_FLOAT_TYPE ezVec3Template&lt; Type &gt; MakeNaN()</div><div class="ttdoc">Returns a vector with all components set to Not-a-Number (NaN).</div><div class="ttdef"><b>Definition</b> Vec3.h:35</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_ae4e6345581550dd8253e2717f61b49b5"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#ae4e6345581550dd8253e2717f61b49b5">ezVec3Template::GetAsDirectionVec4</a></div><div class="ttdeci">const ezVec4Template&lt; Type &gt; GetAsDirectionVec4() const</div><div class="ttdoc">Returns an ezVec4Template with x,y,z from this vector and w set 0.</div><div class="ttdef"><b>Definition</b> Vec4_inl.h:52</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_ae75f433cc72c9da3afe5084dec49b01c"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#ae75f433cc72c9da3afe5084dec49b01c">ezVec3Template::GetOrthogonalVector</a></div><div class="ttdeci">EZ_DECLARE_IF_FLOAT_TYPE const ezVec3Template&lt; Type &gt; GetOrthogonalVector() const</div><div class="ttdoc">Returns some arbitrary vector orthogonal to this one. The vector is NOT normalized.</div><div class="ttdef"><b>Definition</b> Vec3_inl.h:298</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_af217f183c290134d4db0d382759bdfe3"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#af217f183c290134d4db0d382759bdfe3">ezVec3Template::SetZero</a></div><div class="ttdeci">void SetZero()</div><div class="ttdoc">Sets the vector to all zero.</div><div class="ttdef"><b>Definition</b> Vec3_inl.h:48</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_af4e267c0c9a22521a2d6ad40e6e52da7"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#af4e267c0c9a22521a2d6ad40e6e52da7">ezVec3Template::GetLengthAndNormalize</a></div><div class="ttdeci">EZ_DECLARE_IF_FLOAT_TYPE Type GetLengthAndNormalize()</div><div class="ttdoc">Normalizes this vector and returns its previous length in one operation. More efficient than calling ...</div><div class="ttdef"><b>Definition</b> Vec3_inl.h:90</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_af7dd54170c3e008dc8f7065573947e4b"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#af7dd54170c3e008dc8f7065573947e4b">ezVec3Template::IsEqual</a></div><div class="ttdeci">bool IsEqual(const ezVec3Template&lt; Type &gt; &amp;rhs, Type fEpsilon) const</div><div class="ttdoc">Equality Check with epsilon.</div><div class="ttdef"><b>Definition</b> Vec3_inl.h:477</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_aff6e8aac8f1bca190791c1c5204722e7"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#aff6e8aac8f1bca190791c1c5204722e7">ezVec3Template::MakeRandomPointInSphere</a></div><div class="ttdeci">static EZ_DECLARE_IF_FLOAT_TYPE ezVec3Template&lt; Type &gt; MakeRandomPointInSphere(ezRandom &amp;inout_rng)</div><div class="ttdoc">Returns a random point inside a unit sphere (radius 1).</div><div class="ttdef"><b>Definition</b> AllClassesRandom_inl.h:8</div></div>
<div class="ttc" id="aclassez_vec4_template_htm"><div class="ttname"><a href="../../da/dd2/classez_vec4_template.htm">ezVec4Template</a></div><div class="ttdoc">A 4-component vector class.</div><div class="ttdef"><b>Definition</b> Vec4.h:9</div></div>
<div class="ttc" id="astructez_result_htm"><div class="ttname"><a href="../../d4/da9/structez_result.htm">ezResult</a></div><div class="ttdoc">Default enum for returning failure or success, instead of using a bool.</div><div class="ttdef"><b>Definition</b> Types.h:54</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_4ad0f5fbee83b30173e7fecedeea26f0.htm">Math</a></li><li class="navelem"><b>Vec3.h</b></li>
    <li class="footer">Generated on Fri Jul 11 2025 12:17:52 for ezEngine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
