<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Platform/Win/ApplicationEntryPoint_Platform.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">ezEngine<span id="projectnumber">&#160;Release 25.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function() { init_codefold(1); });
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('d3/d61/_win_2_application_entry_point___platform_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">ApplicationEntryPoint_Platform.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span> </div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="preprocessor">#include &lt;Foundation/Logging/Log.h&gt;</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="preprocessor">#include &lt;Foundation/Memory/MemoryTracker.h&gt;</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="preprocessor">#include &lt;Foundation/Platform/Win/Utils/MinWindows.h&gt;</span></div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="preprocessor">#include &lt;Foundation/Threading/Lock.h&gt;</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="preprocessor">#include &lt;Foundation/Threading/Mutex.h&gt;</span></div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span> </div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="keyword">namespace </span>ezApplicationDetails</div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span>{</div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span>  EZ_FOUNDATION_DLL <span class="keywordtype">void</span> SetConsoleCtrlHandler(ezMinWindows::BOOL(EZ_WINDOWS_WINAPI* consoleHandler)(ezMinWindows::DWORD dwCtrlType));</div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span>  EZ_FOUNDATION_DLL <a class="code hl_class" href="../../dd/dbe/classez_mutex.htm">ezMutex</a>&amp; GetShutdownMutex();</div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span> </div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> AppClass, <span class="keyword">typename</span>... Args&gt;</div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span>  <span class="keywordtype">int</span> ConsoleEntry(<span class="keywordtype">int</span> iArgc, <span class="keyword">const</span> <span class="keywordtype">char</span>** pArgv, Args&amp;&amp;... arguments)</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span>  {</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span><span class="preprocessor">#if EZ_ENABLED(EZ_COMPILER_MSVC)             </span><span class="comment">// Internal compiler error in MSVC. Can not align buffer otherwise the compiler will crash.</span></div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span>    <span class="keyword">static</span> <span class="keywordtype">char</span> appBuffer[<span class="keyword">sizeof</span>(AppClass)]; <span class="comment">// Not on the stack to cope with smaller stacks.</span></div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span><span class="preprocessor">#else</span></div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span>    <span class="keyword">alignas</span>(<span class="keyword">alignof</span>(AppClass)) static <span class="keywordtype">char</span> appBuffer[sizeof(AppClass)]; <span class="comment">// Not on the stack to cope with smaller stacks.</span></div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span> </div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span>    <span class="comment">// This mutex will prevent the console shutdown handler to return</span></div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span>    <span class="comment">// as long as this entry point is not finished executing</span></div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span>    <span class="comment">// (see consoleHandler below).</span></div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span>    EZ_LOCK(GetShutdownMutex());</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span> </div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span>    <span class="keyword">static</span> AppClass* pApp = <span class="keyword">new</span> (appBuffer) AppClass(std::forward&lt;Args&gt;(arguments)...);</div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span>    pApp-&gt;SetCommandLineArguments((ezUInt32)iArgc, pArgv);</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span> </div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>    <span class="comment">// This handler overrides the default handler</span></div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span>    <span class="comment">// (which would call ExitProcess, which leads to disorderly engine shutdowns)</span></div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>    <span class="keyword">const</span> <span class="keyword">auto</span> consoleHandler = [](ezMinWindows::DWORD ctrlType) -&gt; ezMinWindows::BOOL</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span>    {</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span>      <span class="comment">// We have to wait until the application has shut down orderly</span></div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>      <span class="comment">// since Windows will kill everything after this handler returns</span></div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span>      pApp-&gt;SetReturnCode(ctrlType);</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span>      pApp-&gt;RequestApplicationQuit();</div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>      EZ_LOCK(GetShutdownMutex());</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>      <span class="keywordflow">return</span> 1; <span class="comment">// returns TRUE, which deactivates the default console control handler</span></div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span>    };</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>    SetConsoleCtrlHandler(consoleHandler);</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span> </div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span>    ezRun(pApp); <span class="comment">// Life cycle &amp; run method calling</span></div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span> </div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>    <span class="keyword">const</span> <span class="keywordtype">int</span> iReturnCode = pApp-&gt;GetReturnCode();</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span>    <span class="keywordflow">if</span> (iReturnCode != 0)</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span>    {</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>      std::string text = pApp-&gt;TranslateReturnCode();</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>      <span class="keywordflow">if</span> (!text.empty())</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>        <a class="code hl_function" href="../../dc/d9e/classez_log.htm#a151496b9618cf53b4389d8f125ee9e2c">ezLog::Printf</a>(<span class="stringliteral">&quot;Return Code: %i = &#39;%s&#39;\n&quot;</span>, iReturnCode, text.c_str());</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>      <span class="keywordflow">else</span></div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>        <a class="code hl_function" href="../../dc/d9e/classez_log.htm#a151496b9618cf53b4389d8f125ee9e2c">ezLog::Printf</a>(<span class="stringliteral">&quot;Return Code: %i\n&quot;</span>, iReturnCode, text.c_str());</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>    }</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span> </div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>    <span class="keyword">const</span> <span class="keywordtype">bool</span> memLeaks = pApp-&gt;IsMemoryLeakReportingEnabled();</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>    pApp-&gt;~AppClass();</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span>    memset((<span class="keywordtype">void</span>*)pApp, 0, <span class="keyword">sizeof</span>(AppClass));</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>    <span class="keywordflow">if</span> (memLeaks)</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>      <a class="code hl_function" href="../../d2/d90/classez_memory_tracker.htm#a9baa6614d2fac3514b5f6a38c482139e">ezMemoryTracker::DumpMemoryLeaks</a>();</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span> </div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span>    <span class="keywordflow">return</span> iReturnCode;</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>  }</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span> </div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> AppClass, <span class="keyword">typename</span>... Args&gt;</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>  <span class="keywordtype">int</span> ApplicationEntry(Args&amp;&amp;... arguments)</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>  {</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span><span class="preprocessor">#if EZ_ENABLED(EZ_COMPILER_MSVC)             </span><span class="comment">// Internal compiler error in MSVC. Can not align buffer otherwise the compiler will crash.</span></div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>    <span class="keyword">static</span> <span class="keywordtype">char</span> appBuffer[<span class="keyword">sizeof</span>(AppClass)]; <span class="comment">// Not on the stack to cope with smaller stacks.</span></div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span><span class="preprocessor">#else</span></div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>    <span class="keyword">alignas</span>(<span class="keyword">alignof</span>(AppClass)) static <span class="keywordtype">char</span> appBuffer[sizeof(AppClass)]; <span class="comment">// Not on the stack to cope with smaller stacks.</span></div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span> </div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>    AppClass* pApp = <span class="keyword">new</span> (appBuffer) AppClass(std::forward&lt;Args&gt;(arguments)...);</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>    pApp-&gt;SetCommandLineArguments((ezUInt32)__argc, <span class="keyword">const_cast&lt;</span><span class="keyword">const </span><span class="keywordtype">char</span>**<span class="keyword">&gt;</span>(__argv));</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>    ezRun(pApp); <span class="comment">// Life cycle &amp; run method calling</span></div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span> </div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>    <span class="keyword">const</span> <span class="keywordtype">int</span> iReturnCode = pApp-&gt;GetReturnCode();</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>    <span class="keywordflow">if</span> (iReturnCode != 0)</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span>    {</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>      std::string text = pApp-&gt;TranslateReturnCode();</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>      <span class="keywordflow">if</span> (!text.empty())</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>        <a class="code hl_function" href="../../dc/d9e/classez_log.htm#a151496b9618cf53b4389d8f125ee9e2c">ezLog::Printf</a>(<span class="stringliteral">&quot;Return Code: &#39;%s&#39;\n&quot;</span>, text.c_str());</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>    }</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span> </div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>    <span class="keyword">const</span> <span class="keywordtype">bool</span> memLeaks = pApp-&gt;IsMemoryLeakReportingEnabled();</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>    pApp-&gt;~AppClass();</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>    memset((<span class="keywordtype">void</span>*)pApp, 0, <span class="keyword">sizeof</span>(AppClass));</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>    <span class="keywordflow">if</span> (memLeaks)</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>      <a class="code hl_function" href="../../d2/d90/classez_memory_tracker.htm#a9baa6614d2fac3514b5f6a38c482139e">ezMemoryTracker::DumpMemoryLeaks</a>();</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span> </div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span>    <span class="keywordflow">return</span> iReturnCode;</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>  }</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>} <span class="comment">// namespace ezApplicationDetails</span></div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span> </div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span><span class="preprocessor">#define EZ_CONSOLEAPP_ENTRY_POINT(AppClass, ...)                                                \</span></div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span><span class="preprocessor">  </span><span class="comment">/* Enables that on machines with multiple GPUs the NVIDIA / AMD GPU is preferred */</span><span class="preprocessor">           \</span></div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span><span class="preprocessor">  extern &quot;C&quot;                                                                                    \</span></div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span><span class="preprocessor">  {                                                                                             \</span></div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span><span class="preprocessor">    _declspec(dllexport) ezMinWindows::DWORD NvOptimusEnablement = 0x00000001;                  \</span></div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span><span class="preprocessor">    _declspec(dllexport) ezMinWindows::DWORD AmdPowerXpressRequestHighPerformance = 0x00000001; \</span></div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span><span class="preprocessor">  }                                                                                             \</span></div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span><span class="preprocessor">  EZ_APPLICATION_ENTRY_POINT_CODE_INJECTION                                                     \</span></div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span><span class="preprocessor">  int main(int argc, const char** argv)                                                         \</span></div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span><span class="preprocessor">  {                                                                                             \</span></div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span><span class="preprocessor">    return ezApplicationDetails::ConsoleEntry&lt;AppClass&gt;(argc, argv, __VA_ARGS__);               \</span></div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span><span class="preprocessor">  }</span></div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span> </div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span><span class="comment">// If windows.h is already included use the native types, otherwise use types from ezMinWindows</span></div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span><span class="comment">//</span></div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span><span class="comment">// In EZ_WINDOWAPP_ENTRY_POINT we use macro magic to concatenate strings in such a way that depending on whether windows.h has</span></div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span><span class="comment">// been included in the mean time, either the macro is chosen which expands to the proper Windows.h type</span></div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span><span class="comment">// or the macro that expands to our ezMinWindows type.</span></div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span><span class="comment">// Unfortunately we cannot do the decision right here, as Windows.h may not yet be included, but may get included later.</span></div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span><span class="preprocessor">#define _EZ_WINDOWAPP_ENTRY_POINT_HINSTANCE HINSTANCE</span></div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span><span class="preprocessor">#define _EZ_WINDOWAPP_ENTRY_POINT_LPSTR LPSTR</span></div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span><span class="preprocessor">#define _EZ_WINDOWAPP_ENTRY_POINT_HINSTANCE_WINDOWS_ ezMinWindows::HINSTANCE</span></div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span><span class="preprocessor">#define _EZ_WINDOWAPP_ENTRY_POINT_LPSTR_WINDOWS_ ezMinWindows::LPSTR</span></div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span> </div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span><span class="preprocessor">#ifndef _In_</span></div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span><span class="preprocessor">#  define UndefSAL</span></div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span><span class="preprocessor">#  define _In_</span></div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span><span class="preprocessor">#  define _In_opt_</span></div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span> </div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span><span class="preprocessor">#define EZ_WINDOWAPP_ENTRY_POINT(AppClass, ...)                                                                                \</span></div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span><span class="preprocessor">  </span><span class="comment">/* Enables that on machines with multiple GPUs the NVIDIA / AMD GPU is preferred */</span><span class="preprocessor">                                          \</span></div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span><span class="preprocessor">  extern &quot;C&quot;                                                                                                                   \</span></div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span><span class="preprocessor">  {                                                                                                                            \</span></div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span><span class="preprocessor">    _declspec(dllexport) ezMinWindows::DWORD NvOptimusEnablement = 0x00000001;                                                 \</span></div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span><span class="preprocessor">    _declspec(dllexport) ezMinWindows::DWORD AmdPowerXpressRequestHighPerformance = 0x00000001;                                \</span></div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span><span class="preprocessor">  }                                                                                                                            \</span></div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span><span class="preprocessor">  EZ_APPLICATION_ENTRY_POINT_CODE_INJECTION                                                                                    \</span></div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span><span class="preprocessor">  int EZ_WINDOWS_CALLBACK WinMain(_In_ EZ_PP_CONCAT(_EZ_, EZ_PP_CONCAT(WINDOWAPP_ENTRY_POINT_HINSTANCE, _WINDOWS_)) hInstance, \</span></div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span><span class="preprocessor">    _In_opt_ EZ_PP_CONCAT(_EZ_, EZ_PP_CONCAT(WINDOWAPP_ENTRY_POINT_HINSTANCE, _WINDOWS_)) hPrevInstance,                       \</span></div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span><span class="preprocessor">    _In_ EZ_PP_CONCAT(_EZ_, EZ_PP_CONCAT(WINDOWAPP_ENTRY_POINT_LPSTR, _WINDOWS_)) lpCmdLine, _In_ int nCmdShow)                \</span></div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span><span class="preprocessor">  {                                                                                                                            \</span></div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span><span class="preprocessor">    return ezApplicationDetails::ApplicationEntry&lt;AppClass&gt;(__VA_ARGS__);                                                      \</span></div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span><span class="preprocessor">  }</span></div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span> </div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span><span class="preprocessor">#if EZ_WINDOWAPP</span></div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span><span class="preprocessor">#  define EZ_APPLICATION_ENTRY_POINT EZ_WINDOWAPP_ENTRY_POINT</span></div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span><span class="preprocessor">#else</span></div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span><span class="preprocessor">#  define EZ_APPLICATION_ENTRY_POINT EZ_CONSOLEAPP_ENTRY_POINT</span></div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span> </div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span><span class="preprocessor">#ifdef UndefSAL</span></div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span><span class="preprocessor">#  undef _In_</span></div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span><span class="preprocessor">#  undef _In_opt_</span></div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span><span class="preprocessor">#endif</span></div>
<div class="ttc" id="aclassez_log_htm_a151496b9618cf53b4389d8f125ee9e2c"><div class="ttname"><a href="../../dc/d9e/classez_log.htm#a151496b9618cf53b4389d8f125ee9e2c">ezLog::Printf</a></div><div class="ttdeci">static void Printf(const char *szFormat,...)</div><div class="ttdoc">Calls low-level OS functionality to print a string to the typical outputs. Forwards to Print.</div><div class="ttdef"><b>Definition</b> Log.cpp:275</div></div>
<div class="ttc" id="aclassez_memory_tracker_htm_a9baa6614d2fac3514b5f6a38c482139e"><div class="ttname"><a href="../../d2/d90/classez_memory_tracker.htm#a9baa6614d2fac3514b5f6a38c482139e">ezMemoryTracker::DumpMemoryLeaks</a></div><div class="ttdeci">static void DumpMemoryLeaks()</div><div class="ttdoc">Prints the known memory leaks to ezLog and triggers an assert if there are any.</div><div class="ttdef"><b>Definition</b> MemoryTracker.cpp:470</div></div>
<div class="ttc" id="aclassez_mutex_htm"><div class="ttname"><a href="../../dd/dbe/classez_mutex.htm">ezMutex</a></div><div class="ttdoc">Provides a simple mechanism for mutual exclusion to prevent multiple threads from accessing a shared ...</div><div class="ttdef"><b>Definition</b> Mutex.h:13</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_81a97b29d048515ed79592945c8b94b3.htm">Platform</a></li><li class="navelem"><a class="el" href="../../dir_10b14b54964862671cc9917992bf999d.htm">Win</a></li><li class="navelem"><b>ApplicationEntryPoint_Platform.h</b></li>
    <li class="footer">Generated on Fri Jul 11 2025 12:17:52 for ezEngine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
