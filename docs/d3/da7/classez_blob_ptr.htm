<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: ezBlobPtr&lt; T &gt; Class Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 25.03</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d3/da7/classez_blob_ptr.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="../../d5/dd4/classez_blob_ptr-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ezBlobPtr&lt; T &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>This class encapsulates a blob's storage and it's size. It is recommended to use this class instead of directly working on the void* of the blob.  
 <a href="../../d3/da7/classez_blob_ptr.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d3/da9/_blob_8h_source.htm">Blob.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:ab3d315649cb547725dd9af783f08fb5f"><td class="memItemLeft" align="right" valign="top"><a id="ab3d315649cb547725dd9af783f08fb5f"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>ByteType</b> = typename <a class="el" href="../../d6/dbd/structez_array_ptr_detail_1_1_byte_type_helper.htm">ezArrayPtrDetail::ByteTypeHelper</a>&lt; T &gt;::type</td></tr>
<tr class="separator:ab3d315649cb547725dd9af783f08fb5f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a797f0921c022a18db11288cb151138"><td class="memItemLeft" align="right" valign="top"><a id="a3a797f0921c022a18db11288cb151138"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>ValueType</b> = T</td></tr>
<tr class="separator:a3a797f0921c022a18db11288cb151138"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a57f6e8d0787ea15375a9d7d85f4589d1"><td class="memItemLeft" align="right" valign="top"><a id="a57f6e8d0787ea15375a9d7d85f4589d1"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>PointerType</b> = T *</td></tr>
<tr class="separator:a57f6e8d0787ea15375a9d7d85f4589d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1bdd443b31de27d8b687a411d748c809"><td class="memItemLeft" align="right" valign="top"><a id="a1bdd443b31de27d8b687a411d748c809"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>const_iterator</b> = const T *</td></tr>
<tr class="separator:a1bdd443b31de27d8b687a411d748c809"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e50410b470fe101d3b467cdd31a4af5"><td class="memItemLeft" align="right" valign="top"><a id="a2e50410b470fe101d3b467cdd31a4af5"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>const_reverse_iterator</b> = <a class="el" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">const_reverse_pointer_iterator</a>&lt; T &gt;</td></tr>
<tr class="separator:a2e50410b470fe101d3b467cdd31a4af5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc39ac5937038235f397db0e1d2ceeb3"><td class="memItemLeft" align="right" valign="top"><a id="adc39ac5937038235f397db0e1d2ceeb3"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>iterator</b> = T *</td></tr>
<tr class="separator:adc39ac5937038235f397db0e1d2ceeb3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff0d71f09a3f87aa902a0e970aa6f6ac"><td class="memItemLeft" align="right" valign="top"><a id="aff0d71f09a3f87aa902a0e970aa6f6ac"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>reverse_iterator</b> = <a class="el" href="../../d3/df2/structreverse__pointer__iterator.htm">reverse_pointer_iterator</a>&lt; T &gt;</td></tr>
<tr class="separator:aff0d71f09a3f87aa902a0e970aa6f6ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a296e5790c14de51143a0f084d7fd3eb8"><td class="memItemLeft" align="right" valign="top"><a id="a296e5790c14de51143a0f084d7fd3eb8"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>EZ_DECLARE_POD_TYPE</b> ()</td></tr>
<tr class="separator:a296e5790c14de51143a0f084d7fd3eb8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acfed2d03b917bf465f9856ef5b6916a8"><td class="memItemLeft" align="right" valign="top"><a id="acfed2d03b917bf465f9856ef5b6916a8"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/da7/classez_blob_ptr.htm#acfed2d03b917bf465f9856ef5b6916a8">ezBlobPtr</a> ()=default</td></tr>
<tr class="memdesc:acfed2d03b917bf465f9856ef5b6916a8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the <a class="el" href="../../d3/da7/classez_blob_ptr.htm" title="This class encapsulates a blob&#39;s storage and it&#39;s size. It is recommended to use this class instead o...">ezBlobPtr</a> to be empty. <br /></td></tr>
<tr class="separator:acfed2d03b917bf465f9856ef5b6916a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc2cfac9aa37ac11641fb7ee843b28fb"><td class="memTemplParams" colspan="2"><a id="acc2cfac9aa37ac11641fb7ee843b28fb"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:acc2cfac9aa37ac11641fb7ee843b28fb"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../d3/da7/classez_blob_ptr.htm#acc2cfac9aa37ac11641fb7ee843b28fb">ezBlobPtr</a> (U *pPtr, ezUInt64 uiCount)</td></tr>
<tr class="memdesc:acc2cfac9aa37ac11641fb7ee843b28fb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the <a class="el" href="../../d3/da7/classez_blob_ptr.htm" title="This class encapsulates a blob&#39;s storage and it&#39;s size. It is recommended to use this class instead o...">ezBlobPtr</a> with the given pointer and number of elements. No memory is allocated or copied. <br /></td></tr>
<tr class="separator:acc2cfac9aa37ac11641fb7ee843b28fb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a317a1e5de3f974d0e498a75db1956886"><td class="memTemplParams" colspan="2"><a id="a317a1e5de3f974d0e498a75db1956886"></a>
template&lt;size_t N&gt; </td></tr>
<tr class="memitem:a317a1e5de3f974d0e498a75db1956886"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../d3/da7/classez_blob_ptr.htm#a317a1e5de3f974d0e498a75db1956886">ezBlobPtr</a> (ValueType(&amp;staticArray)[N])</td></tr>
<tr class="memdesc:a317a1e5de3f974d0e498a75db1956886"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the <a class="el" href="../../d3/da7/classez_blob_ptr.htm" title="This class encapsulates a blob&#39;s storage and it&#39;s size. It is recommended to use this class instead o...">ezBlobPtr</a> to encapsulate the given array. <br /></td></tr>
<tr class="separator:a317a1e5de3f974d0e498a75db1956886"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d8ea856d504f38be18f1ae7247933f5"><td class="memItemLeft" align="right" valign="top"><a id="a9d8ea856d504f38be18f1ae7247933f5"></a>
EZ_ALWAYS_INLINE&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/da7/classez_blob_ptr.htm#a9d8ea856d504f38be18f1ae7247933f5">ezBlobPtr</a> (const <a class="el" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr</a>&lt; T &gt; &amp;other)</td></tr>
<tr class="memdesc:a9d8ea856d504f38be18f1ae7247933f5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the <a class="el" href="../../d3/da7/classez_blob_ptr.htm" title="This class encapsulates a blob&#39;s storage and it&#39;s size. It is recommended to use this class instead o...">ezBlobPtr</a> to be a copy of <em>other</em>. No memory is allocated or copied. <br /></td></tr>
<tr class="separator:a9d8ea856d504f38be18f1ae7247933f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f09ae419567a8ca84f1f07630a374fc"><td class="memItemLeft" align="right" valign="top"><a id="a1f09ae419567a8ca84f1f07630a374fc"></a>
EZ_ALWAYS_INLINE&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/da7/classez_blob_ptr.htm#a1f09ae419567a8ca84f1f07630a374fc">ezBlobPtr</a> (const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; T &gt; &amp;other)</td></tr>
<tr class="memdesc:a1f09ae419567a8ca84f1f07630a374fc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the <a class="el" href="../../d3/da7/classez_blob_ptr.htm" title="This class encapsulates a blob&#39;s storage and it&#39;s size. It is recommended to use this class instead o...">ezBlobPtr</a> to be a copy of <em>other</em>. No memory is allocated or copied. <br /></td></tr>
<tr class="separator:a1f09ae419567a8ca84f1f07630a374fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a27b6cdf82023c6dd11e5996eb0885c1d"><td class="memItemLeft" align="right" valign="top"><a id="a27b6cdf82023c6dd11e5996eb0885c1d"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/da7/classez_blob_ptr.htm#a27b6cdf82023c6dd11e5996eb0885c1d">operator ezBlobPtr&lt; const T &gt;</a> () const</td></tr>
<tr class="memdesc:a27b6cdf82023c6dd11e5996eb0885c1d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert to const version. <br /></td></tr>
<tr class="separator:a27b6cdf82023c6dd11e5996eb0885c1d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a135088d7eeddb6a98ba64c7907bd6c3c"><td class="memItemLeft" align="right" valign="top"><a id="a135088d7eeddb6a98ba64c7907bd6c3c"></a>
EZ_ALWAYS_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/da7/classez_blob_ptr.htm#a135088d7eeddb6a98ba64c7907bd6c3c">operator=</a> (const <a class="el" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr</a>&lt; T &gt; &amp;other)</td></tr>
<tr class="memdesc:a135088d7eeddb6a98ba64c7907bd6c3c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the pointer and size of /a other. Does not allocate any data. <br /></td></tr>
<tr class="separator:a135088d7eeddb6a98ba64c7907bd6c3c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea8418d45646d6c357df8cf7d67ebaf2"><td class="memItemLeft" align="right" valign="top"><a id="aea8418d45646d6c357df8cf7d67ebaf2"></a>
EZ_ALWAYS_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/da7/classez_blob_ptr.htm#aea8418d45646d6c357df8cf7d67ebaf2">operator=</a> (const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; T &gt; &amp;other)</td></tr>
<tr class="memdesc:aea8418d45646d6c357df8cf7d67ebaf2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the pointer and size of /a other. Does not allocate any data. <br /></td></tr>
<tr class="separator:aea8418d45646d6c357df8cf7d67ebaf2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e1fdec1af16b1507f9d775cc9d4f533"><td class="memItemLeft" align="right" valign="top"><a id="a2e1fdec1af16b1507f9d775cc9d4f533"></a>
EZ_ALWAYS_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/da7/classez_blob_ptr.htm#a2e1fdec1af16b1507f9d775cc9d4f533">Clear</a> ()</td></tr>
<tr class="memdesc:a2e1fdec1af16b1507f9d775cc9d4f533"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears the array. <br /></td></tr>
<tr class="separator:a2e1fdec1af16b1507f9d775cc9d4f533"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a544cd9e1f1d9157b026189fdfea58f64"><td class="memItemLeft" align="right" valign="top"><a id="a544cd9e1f1d9157b026189fdfea58f64"></a>
EZ_ALWAYS_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (std::nullptr_t)</td></tr>
<tr class="separator:a544cd9e1f1d9157b026189fdfea58f64"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a183e45d443a6494e7a3c2ddea826b354"><td class="memItemLeft" align="right" valign="top"><a id="a183e45d443a6494e7a3c2ddea826b354"></a>
EZ_ALWAYS_INLINE PointerType&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">GetPtr</a> () const</td></tr>
<tr class="memdesc:a183e45d443a6494e7a3c2ddea826b354"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the pointer to the array. <br /></td></tr>
<tr class="separator:a183e45d443a6494e7a3c2ddea826b354"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0fa3769cce78cf513df8ef35fb277bc2"><td class="memItemLeft" align="right" valign="top"><a id="a0fa3769cce78cf513df8ef35fb277bc2"></a>
EZ_ALWAYS_INLINE PointerType&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/da7/classez_blob_ptr.htm#a0fa3769cce78cf513df8ef35fb277bc2">GetPtr</a> ()</td></tr>
<tr class="memdesc:a0fa3769cce78cf513df8ef35fb277bc2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the pointer to the array. <br /></td></tr>
<tr class="separator:a0fa3769cce78cf513df8ef35fb277bc2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e3bbf73b652ce242ba30cdc756f288e"><td class="memItemLeft" align="right" valign="top"><a id="a4e3bbf73b652ce242ba30cdc756f288e"></a>
EZ_ALWAYS_INLINE PointerType&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/da7/classez_blob_ptr.htm#a4e3bbf73b652ce242ba30cdc756f288e">GetEndPtr</a> ()</td></tr>
<tr class="memdesc:a4e3bbf73b652ce242ba30cdc756f288e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the pointer behind the last element of the array. <br /></td></tr>
<tr class="separator:a4e3bbf73b652ce242ba30cdc756f288e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75d59f4449a76b89ee170d7eb29374b5"><td class="memItemLeft" align="right" valign="top"><a id="a75d59f4449a76b89ee170d7eb29374b5"></a>
EZ_ALWAYS_INLINE PointerType&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/da7/classez_blob_ptr.htm#a75d59f4449a76b89ee170d7eb29374b5">GetEndPtr</a> () const</td></tr>
<tr class="memdesc:a75d59f4449a76b89ee170d7eb29374b5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the pointer behind the last element of the array. <br /></td></tr>
<tr class="separator:a75d59f4449a76b89ee170d7eb29374b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a530052b53346ced27aeee754cc5f10db"><td class="memItemLeft" align="right" valign="top"><a id="a530052b53346ced27aeee754cc5f10db"></a>
EZ_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/da7/classez_blob_ptr.htm#a530052b53346ced27aeee754cc5f10db">IsEmpty</a> () const</td></tr>
<tr class="memdesc:a530052b53346ced27aeee754cc5f10db"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the array is empty. <br /></td></tr>
<tr class="separator:a530052b53346ced27aeee754cc5f10db"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a36043e87f673094c53d4d0f7e8e8a970"><td class="memItemLeft" align="right" valign="top"><a id="a36043e87f673094c53d4d0f7e8e8a970"></a>
EZ_ALWAYS_INLINE ezUInt64&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a> () const</td></tr>
<tr class="memdesc:a36043e87f673094c53d4d0f7e8e8a970"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of elements in the array. <br /></td></tr>
<tr class="separator:a36043e87f673094c53d4d0f7e8e8a970"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7810f12819fd1cb88f22dcc4c39454e"><td class="memItemLeft" align="right" valign="top"><a id="aa7810f12819fd1cb88f22dcc4c39454e"></a>
EZ_FORCE_INLINE <a class="el" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr</a>&lt; T &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/da7/classez_blob_ptr.htm#aa7810f12819fd1cb88f22dcc4c39454e">GetSubArray</a> (ezUInt64 uiStart, ezUInt64 uiCount) const</td></tr>
<tr class="memdesc:aa7810f12819fd1cb88f22dcc4c39454e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a sub-array from this array. <br /></td></tr>
<tr class="separator:aa7810f12819fd1cb88f22dcc4c39454e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac71ff0c7faf172a3ffb10ea40b4de584"><td class="memItemLeft" align="right" valign="top">EZ_FORCE_INLINE <a class="el" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr</a>&lt; T &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/da7/classez_blob_ptr.htm#ac71ff0c7faf172a3ffb10ea40b4de584">GetSubArray</a> (ezUInt64 uiStart) const</td></tr>
<tr class="memdesc:ac71ff0c7faf172a3ffb10ea40b4de584"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a sub-array from this array.  <a href="../../d3/da7/classez_blob_ptr.htm#ac71ff0c7faf172a3ffb10ea40b4de584">More...</a><br /></td></tr>
<tr class="separator:ac71ff0c7faf172a3ffb10ea40b4de584"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a2c108f31241e01cabc4690ecab1a3f"><td class="memItemLeft" align="right" valign="top"><a id="a7a2c108f31241e01cabc4690ecab1a3f"></a>
EZ_ALWAYS_INLINE <a class="el" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr</a>&lt; const ByteType &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/da7/classez_blob_ptr.htm#a7a2c108f31241e01cabc4690ecab1a3f">ToByteBlob</a> () const</td></tr>
<tr class="memdesc:a7a2c108f31241e01cabc4690ecab1a3f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reinterprets this array as a byte array. <br /></td></tr>
<tr class="separator:a7a2c108f31241e01cabc4690ecab1a3f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad53833898cc80474f8c397e19a322322"><td class="memItemLeft" align="right" valign="top"><a id="ad53833898cc80474f8c397e19a322322"></a>
EZ_ALWAYS_INLINE <a class="el" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr</a>&lt; ByteType &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/da7/classez_blob_ptr.htm#ad53833898cc80474f8c397e19a322322">ToByteBlob</a> ()</td></tr>
<tr class="memdesc:ad53833898cc80474f8c397e19a322322"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reinterprets this array as a byte array. <br /></td></tr>
<tr class="separator:ad53833898cc80474f8c397e19a322322"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a147655c350dac8408141e8049fcb478f"><td class="memTemplParams" colspan="2"><a id="a147655c350dac8408141e8049fcb478f"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:a147655c350dac8408141e8049fcb478f"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE <a class="el" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr</a>&lt; U &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../d3/da7/classez_blob_ptr.htm#a147655c350dac8408141e8049fcb478f">Cast</a> ()</td></tr>
<tr class="memdesc:a147655c350dac8408141e8049fcb478f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Cast an BlobPtr to an BlobPtr to a different, but same size, type. <br /></td></tr>
<tr class="separator:a147655c350dac8408141e8049fcb478f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa8f5d279df93c9e6ba40860415461393"><td class="memTemplParams" colspan="2"><a id="aa8f5d279df93c9e6ba40860415461393"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:aa8f5d279df93c9e6ba40860415461393"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE <a class="el" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr</a>&lt; const U &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../d3/da7/classez_blob_ptr.htm#aa8f5d279df93c9e6ba40860415461393">Cast</a> () const</td></tr>
<tr class="memdesc:aa8f5d279df93c9e6ba40860415461393"><td class="mdescLeft">&#160;</td><td class="mdescRight">Cast an BlobPtr to an BlobPtr to a different, but same size, type. <br /></td></tr>
<tr class="separator:aa8f5d279df93c9e6ba40860415461393"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0d7f5d9272de273ce0a413242fb00431"><td class="memItemLeft" align="right" valign="top"><a id="a0d7f5d9272de273ce0a413242fb00431"></a>
const EZ_FORCE_INLINE ValueType &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/da7/classez_blob_ptr.htm#a0d7f5d9272de273ce0a413242fb00431">operator[]</a> (ezUInt64 uiIndex) const</td></tr>
<tr class="memdesc:a0d7f5d9272de273ce0a413242fb00431"><td class="mdescLeft">&#160;</td><td class="mdescRight">Index access. <br /></td></tr>
<tr class="separator:a0d7f5d9272de273ce0a413242fb00431"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a63f7944d7869c3939ebe199fe11c878c"><td class="memItemLeft" align="right" valign="top"><a id="a63f7944d7869c3939ebe199fe11c878c"></a>
EZ_FORCE_INLINE ValueType &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/da7/classez_blob_ptr.htm#a63f7944d7869c3939ebe199fe11c878c">operator[]</a> (ezUInt64 uiIndex)</td></tr>
<tr class="memdesc:a63f7944d7869c3939ebe199fe11c878c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Index access. <br /></td></tr>
<tr class="separator:a63f7944d7869c3939ebe199fe11c878c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a49883b9a269490144839ffe626951828"><td class="memItemLeft" align="right" valign="top"><a id="a49883b9a269490144839ffe626951828"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/da7/classez_blob_ptr.htm#a49883b9a269490144839ffe626951828">operator==</a> (const <a class="el" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr</a>&lt; const T &gt; &amp;other) const</td></tr>
<tr class="memdesc:a49883b9a269490144839ffe626951828"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares the two arrays for equality. <br /></td></tr>
<tr class="separator:a49883b9a269490144839ffe626951828"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac39a476dd681295012ca4babad44a196"><td class="memItemLeft" align="right" valign="top"><a id="ac39a476dd681295012ca4babad44a196"></a>
EZ_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/da7/classez_blob_ptr.htm#ac39a476dd681295012ca4babad44a196">operator!=</a> (const <a class="el" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr</a>&lt; const T &gt; &amp;other) const</td></tr>
<tr class="memdesc:ac39a476dd681295012ca4babad44a196"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares the two arrays for inequality. <br /></td></tr>
<tr class="separator:ac39a476dd681295012ca4babad44a196"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab51148660196ea156cbd50b2c85d773b"><td class="memItemLeft" align="right" valign="top"><a id="ab51148660196ea156cbd50b2c85d773b"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/da7/classez_blob_ptr.htm#ab51148660196ea156cbd50b2c85d773b">CopyFrom</a> (const <a class="el" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr</a>&lt; const T &gt; &amp;other)</td></tr>
<tr class="memdesc:ab51148660196ea156cbd50b2c85d773b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the data from <em>other</em> into this array. The arrays must have the exact same size. <br /></td></tr>
<tr class="separator:ab51148660196ea156cbd50b2c85d773b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b4bd28cdc83fa3f103bbe8e79dd18a4"><td class="memItemLeft" align="right" valign="top"><a id="a1b4bd28cdc83fa3f103bbe8e79dd18a4"></a>
EZ_ALWAYS_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><b>Swap</b> (<a class="el" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr</a>&lt; T &gt; &amp;other)</td></tr>
<tr class="separator:a1b4bd28cdc83fa3f103bbe8e79dd18a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename T&gt;<br />
class ezBlobPtr&lt; T &gt;</h3>

<p>This class encapsulates a blob's storage and it's size. It is recommended to use this class instead of directly working on the void* of the blob. </p>
<p>No data is deallocated at destruction, the <a class="el" href="../../d3/da7/classez_blob_ptr.htm" title="This class encapsulates a blob&#39;s storage and it&#39;s size. It is recommended to use this class instead o...">ezBlobPtr</a> only allows for easier access. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="ac71ff0c7faf172a3ffb10ea40b4de584"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac71ff0c7faf172a3ffb10ea40b4de584">&#9670;&nbsp;</a></span>GetSubArray()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">EZ_FORCE_INLINE <a class="el" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr</a>&lt;T&gt; <a class="el" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr</a>&lt; T &gt;::GetSubArray </td>
          <td>(</td>
          <td class="paramtype">ezUInt64&#160;</td>
          <td class="paramname"><em>uiStart</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a sub-array from this array. </p>
<dl class="section note"><dt>Note</dt><dd><div class="fragment"><div class="line">ap.GetSubArray(i) </div>
</div><!-- fragment --> is equivalent to<div class="fragment"><div class="line">ap.GetSubArray(i, ap.GetCount() - i) </div>
</div><!-- fragment -->. </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Containers/<a class="el" href="../../d3/da9/_blob_8h_source.htm">Blob.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr</a></li>
    <li class="footer">Generated on Mon Mar 3 2025 17:23:50 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
