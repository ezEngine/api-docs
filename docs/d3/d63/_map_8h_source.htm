<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Containers/Map.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 23.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d3/d63/_map_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Map.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;Foundation/Containers/Deque.h&gt;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160; </div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KeyType, <span class="keyword">typename</span> ValueType, <span class="keyword">typename</span> Comparer&gt;</div>
<div class="line"><a name="l00017"></a><span class="lineno"><a class="line" href="../../d1/d43/classez_map_base.htm">   17</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d1/d43/classez_map_base.htm">ezMapBase</a></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;{</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;  <span class="keyword">struct </span>Node;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160; </div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;  <span class="keyword">struct </span>NilNode</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;  {</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    Node* m_pParent = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    Node* m_pLink[2] = {<span class="keyword">nullptr</span>, <span class="keyword">nullptr</span>};</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    ezUInt8 m_uiLevel = 0;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  };</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160; </div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  <span class="keyword">struct </span>Node : <span class="keyword">public</span> NilNode</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;  {</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    KeyType m_Key;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    ValueType m_Value;</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;  };</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160; </div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm">   39</a></span>&#160;  <span class="keyword">struct </span><a class="code" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm">ConstIterator</a></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  {</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <span class="keyword">using</span> iterator_category = std::forward_iterator_tag;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="keyword">using</span> <a class="code" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm">value_type</a> = <a class="code" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm#a6e0d02490e6728f0a09173acd57cec6f">ConstIterator</a>;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="keyword">using</span> difference_type = ptrdiff_t;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="keyword">using</span> <a class="code" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm">pointer</a> = <a class="code" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm">ConstIterator</a>*;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;    <span class="keyword">using</span> <a class="code" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm">reference</a> = <a class="code" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm">ConstIterator</a>&amp;;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160; </div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    EZ_DECLARE_POD_TYPE();</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160; </div>
<div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm#a6e0d02490e6728f0a09173acd57cec6f">   50</a></span>&#160;    EZ_ALWAYS_INLINE <a class="code" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm#a6e0d02490e6728f0a09173acd57cec6f">ConstIterator</a>()</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;      : m_pElement(nullptr)</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    {</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160; </div>
<div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm#a709b657328eb3e6a924c64bdaadb3eb0">   56</a></span>&#160;    EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm#a709b657328eb3e6a924c64bdaadb3eb0">IsValid</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> (m_pElement != <span class="keyword">nullptr</span>); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160; </div>
<div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm#a666cc10103552788308d26e68ea163d1">   59</a></span>&#160;    EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm#a666cc10103552788308d26e68ea163d1">operator==</a>(<span class="keyword">const</span> <span class="keyword">typename</span> <a class="code" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm">ezMapBase&lt;KeyType, ValueType, Comparer&gt;::ConstIterator</a>&amp; it2)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> (m_pElement == it2.m_pElement); }</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160; </div>
<div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm#af19f1471106e5243cc62f5f7b6cac4a4">   62</a></span>&#160;    EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm#af19f1471106e5243cc62f5f7b6cac4a4">operator!=</a>(<span class="keyword">const</span> <span class="keyword">typename</span> <a class="code" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm">ezMapBase&lt;KeyType, ValueType, Comparer&gt;::ConstIterator</a>&amp; it2)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> (m_pElement != it2.m_pElement); }</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160; </div>
<div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm#a3d8a98ad3acf3a947f49b01342c25417">   65</a></span>&#160;    EZ_FORCE_INLINE <span class="keyword">const</span> KeyType&amp; <a class="code" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm#a3d8a98ad3acf3a947f49b01342c25417">Key</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;      EZ_ASSERT_DEBUG(<a class="code" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm#a709b657328eb3e6a924c64bdaadb3eb0">IsValid</a>(), <span class="stringliteral">&quot;Cannot access the &#39;key&#39; of an invalid iterator.&quot;</span>);</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;      <span class="keywordflow">return</span> m_pElement-&gt;m_Key;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160; </div>
<div class="line"><a name="l00072"></a><span class="lineno"><a class="line" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm#a6ed0e8cc048bc3f42e80c94cac206b9a">   72</a></span>&#160;    EZ_FORCE_INLINE <span class="keyword">const</span> ValueType&amp; <a class="code" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm#a6ed0e8cc048bc3f42e80c94cac206b9a">Value</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="keyword">    </span>{</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;      EZ_ASSERT_DEBUG(<a class="code" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm#a709b657328eb3e6a924c64bdaadb3eb0">IsValid</a>(), <span class="stringliteral">&quot;Cannot access the &#39;value&#39; of an invalid iterator.&quot;</span>);</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;      <span class="keywordflow">return</span> m_pElement-&gt;m_Value;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160; </div>
<div class="line"><a name="l00079"></a><span class="lineno"><a class="line" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm#a605b68ceb07f1322e7abcc0dc97a2248">   79</a></span>&#160;    EZ_ALWAYS_INLINE <a class="code" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm">ConstIterator</a>&amp; <a class="code" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm#a605b68ceb07f1322e7abcc0dc97a2248">operator*</a>() { <span class="keywordflow">return</span> *<span class="keyword">this</span>; } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160; </div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm#a66d3c856b8cffbccf434341227dffd17">Next</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160; </div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="keywordtype">void</span> <a class="code" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm#a9fe0b3b8c08e87dd08dca86a45f31261">Prev</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160; </div>
<div class="line"><a name="l00088"></a><span class="lineno"><a class="line" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm#aa54b40740cfb03891f032fea16ab55d2">   88</a></span>&#160;    EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm#aa54b40740cfb03891f032fea16ab55d2">operator++</a>() { <a class="code" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm#a66d3c856b8cffbccf434341227dffd17">Next</a>(); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160; </div>
<div class="line"><a name="l00091"></a><span class="lineno"><a class="line" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm#aa8fc4f932a306a7e4a555bc16cf76846">   91</a></span>&#160;    EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm#aa8fc4f932a306a7e4a555bc16cf76846">operator--</a>() { <a class="code" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm#a9fe0b3b8c08e87dd08dca86a45f31261">Prev</a>(); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160; </div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  <span class="keyword">protected</span>:</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="../../d1/d43/classez_map_base.htm">ezMapBase</a>&lt;KeyType, ValueType, Comparer&gt;;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160; </div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    EZ_ALWAYS_INLINE <span class="keyword">explicit</span> <a class="code" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm#a6e0d02490e6728f0a09173acd57cec6f">ConstIterator</a>(Node* pInit)</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;      : m_pElement(pInit)</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    {</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;    }</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160; </div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    Node* m_pElement;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;  };</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160; </div>
<div class="line"><a name="l00105"></a><span class="lineno"><a class="line" href="../../da/d8e/structez_map_base_1_1_iterator.htm">  105</a></span>&#160;  <span class="keyword">struct </span><a class="code" href="../../da/d8e/structez_map_base_1_1_iterator.htm">Iterator</a> : <span class="keyword">public</span> <a class="code" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm">ConstIterator</a></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;  {</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="keyword">using</span> iterator_category = std::forward_iterator_tag;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    <span class="keyword">using</span> <a class="code" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm">value_type</a> = <a class="code" href="../../da/d8e/structez_map_base_1_1_iterator.htm#a260a83d97684eaf07ad3b8c31faa155c">Iterator</a>;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="keyword">using</span> difference_type = ptrdiff_t;</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="keyword">using</span> <a class="code" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm">pointer</a> = <a class="code" href="../../da/d8e/structez_map_base_1_1_iterator.htm">Iterator</a>*;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    <span class="keyword">using</span> <a class="code" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm">reference</a> = <a class="code" href="../../da/d8e/structez_map_base_1_1_iterator.htm">Iterator</a>&amp;;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160; </div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="comment">// this is required to pull in the const version of this function</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="keyword">using</span> <a class="code" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm#a6ed0e8cc048bc3f42e80c94cac206b9a">ConstIterator::Value</a>;</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160; </div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    EZ_DECLARE_POD_TYPE();</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160; </div>
<div class="line"><a name="l00119"></a><span class="lineno"><a class="line" href="../../da/d8e/structez_map_base_1_1_iterator.htm#a260a83d97684eaf07ad3b8c31faa155c">  119</a></span>&#160;    EZ_ALWAYS_INLINE <a class="code" href="../../da/d8e/structez_map_base_1_1_iterator.htm#a260a83d97684eaf07ad3b8c31faa155c">Iterator</a>()</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;      : <a class="code" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm">ConstIterator</a>()</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    {</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    }</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160; </div>
<div class="line"><a name="l00125"></a><span class="lineno"><a class="line" href="../../da/d8e/structez_map_base_1_1_iterator.htm#a7ec517bb552d0e9ab514855b93b312ed">  125</a></span>&#160;    EZ_FORCE_INLINE ValueType&amp; <a class="code" href="../../da/d8e/structez_map_base_1_1_iterator.htm#a7ec517bb552d0e9ab514855b93b312ed">Value</a>()</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    {</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;      EZ_ASSERT_DEBUG(this-&gt;<a class="code" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm#a709b657328eb3e6a924c64bdaadb3eb0">IsValid</a>(), <span class="stringliteral">&quot;Cannot access the &#39;value&#39; of an invalid iterator.&quot;</span>);</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;      <span class="keywordflow">return</span> this-&gt;m_pElement-&gt;m_Value;</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    }</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160; </div>
<div class="line"><a name="l00132"></a><span class="lineno"><a class="line" href="../../da/d8e/structez_map_base_1_1_iterator.htm#a08a30ae835e95d146d1270f199b780b4">  132</a></span>&#160;    EZ_ALWAYS_INLINE <a class="code" href="../../da/d8e/structez_map_base_1_1_iterator.htm">Iterator</a>&amp; <a class="code" href="../../da/d8e/structez_map_base_1_1_iterator.htm#a08a30ae835e95d146d1270f199b780b4">operator*</a>() { <span class="keywordflow">return</span> *<span class="keyword">this</span>; } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160; </div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;  <span class="keyword">private</span>:</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="../../d1/d43/classez_map_base.htm">ezMapBase</a>&lt;KeyType, ValueType, Comparer&gt;;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160; </div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    EZ_ALWAYS_INLINE <span class="keyword">explicit</span> <a class="code" href="../../da/d8e/structez_map_base_1_1_iterator.htm#a260a83d97684eaf07ad3b8c31faa155c">Iterator</a>(Node* pInit)</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;      : <a class="code" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm">ConstIterator</a>(pInit)</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    {</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    }</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;  };</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160; </div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;  <a class="code" href="../../d1/d43/classez_map_base.htm#acbebd24c8eabd3451213fb781ed62a4c">ezMapBase</a>(<span class="keyword">const</span> Comparer&amp; comparer, <a class="code" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160; </div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;  <a class="code" href="../../d1/d43/classez_map_base.htm#acbebd24c8eabd3451213fb781ed62a4c">ezMapBase</a>(<span class="keyword">const</span> <a class="code" href="../../d1/d43/classez_map_base.htm">ezMapBase&lt;KeyType, ValueType, Comparer&gt;</a>&amp; cc, <a class="code" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160; </div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;  <a class="code" href="../../d1/d43/classez_map_base.htm#a3bc6ff8af67d601852bdc08bef189f1e">~ezMapBase</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160; </div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d1/d43/classez_map_base.htm#a29cfe65a8cf027f6f3818b1f2f9893b2">operator=</a>(<span class="keyword">const</span> <a class="code" href="../../d1/d43/classez_map_base.htm">ezMapBase&lt;KeyType, ValueType, Comparer&gt;</a>&amp; rhs);</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160; </div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d1/d43/classez_map_base.htm#a7c62813d3d15be2f07144978dbb43271">IsEmpty</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160; </div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;  ezUInt32 <a class="code" href="../../d1/d43/classez_map_base.htm#a400e55a001e58137d0e483a2aba85784">GetCount</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160; </div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d1/d43/classez_map_base.htm#a5946a15134311c8353deeee06670e412">Clear</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160; </div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;  Iterator <a class="code" href="../../d1/d43/classez_map_base.htm#a999fb772f02ce74de03af456db13ef38">GetIterator</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160; </div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;  ConstIterator <a class="code" href="../../d1/d43/classez_map_base.htm#a999fb772f02ce74de03af456db13ef38">GetIterator</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160; </div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;  Iterator <a class="code" href="../../d1/d43/classez_map_base.htm#a05768a8676508c2e5b971386f2cf5a8e">GetLastIterator</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160; </div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;  ConstIterator <a class="code" href="../../d1/d43/classez_map_base.htm#a05768a8676508c2e5b971386f2cf5a8e">GetLastIterator</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160; </div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType, <span class="keyword">typename</span> CompatibleValueType&gt;</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;  Iterator <a class="code" href="../../d1/d43/classez_map_base.htm#a25d049c3f258c4640642ef5c1ea04d17">Insert</a>(CompatibleKeyType&amp;&amp; key, CompatibleValueType&amp;&amp; value); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160; </div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d1/d43/classez_map_base.htm#a39ec812de69d422bdff1acc12d1d516f">Remove</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160; </div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;  Iterator <a class="code" href="../../d1/d43/classez_map_base.htm#a39ec812de69d422bdff1acc12d1d516f">Remove</a>(<span class="keyword">const</span> Iterator&amp; pos); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160; </div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;  Iterator <a class="code" href="../../d1/d43/classez_map_base.htm#ac8a2e13c622f9827d6185dba8977552c">FindOrAdd</a>(CompatibleKeyType&amp;&amp; key, <span class="keywordtype">bool</span>* out_pExisted = <span class="keyword">nullptr</span>); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160; </div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;  ValueType&amp; <a class="code" href="../../d1/d43/classez_map_base.htm#a520e292a9858a7bb9e8348e3d1f4dbc6">operator[]</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160; </div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d1/d43/classez_map_base.htm#a20c08ab5f72dd2fd99c066e9575ae846">TryGetValue</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key, ValueType&amp; out_value) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160; </div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d1/d43/classez_map_base.htm#a20c08ab5f72dd2fd99c066e9575ae846">TryGetValue</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key, <span class="keyword">const</span> ValueType*&amp; out_pValue) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160; </div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d1/d43/classez_map_base.htm#a20c08ab5f72dd2fd99c066e9575ae846">TryGetValue</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key, ValueType*&amp; out_pValue) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160; </div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;  <span class="keyword">const</span> ValueType* <a class="code" href="../../d1/d43/classez_map_base.htm#a093bd0438e613ffff840693d6134cd63">GetValue</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160; </div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;  ValueType* <a class="code" href="../../d1/d43/classez_map_base.htm#a093bd0438e613ffff840693d6134cd63">GetValue</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160; </div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;  <span class="keyword">const</span> ValueType&amp; <a class="code" href="../../d1/d43/classez_map_base.htm#a607565550de36a41762eec35182ad52d">GetValueOrDefault</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key, <span class="keyword">const</span> ValueType&amp; defaultValue) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160; </div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;  Iterator <a class="code" href="../../d1/d43/classez_map_base.htm#a7746594aefe8c1bfc552ab55adb2b88c">Find</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160; </div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;  Iterator <a class="code" href="../../d1/d43/classez_map_base.htm#a727ef2533114ad2f60146a5c5f541891">LowerBound</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160; </div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;  Iterator <a class="code" href="../../d1/d43/classez_map_base.htm#a07307d10c2c64e866f69a11665c8186f">UpperBound</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160; </div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;  ConstIterator <a class="code" href="../../d1/d43/classez_map_base.htm#a7746594aefe8c1bfc552ab55adb2b88c">Find</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160; </div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d1/d43/classez_map_base.htm#a90016605a67ba6152a4aed1253a113d9">Contains</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160; </div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;  ConstIterator <a class="code" href="../../d1/d43/classez_map_base.htm#a727ef2533114ad2f60146a5c5f541891">LowerBound</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160; </div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;  ConstIterator <a class="code" href="../../d1/d43/classez_map_base.htm#a07307d10c2c64e866f69a11665c8186f">UpperBound</a>(<span class="keyword">const</span> CompatibleKeyType&amp; key) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160; </div>
<div class="line"><a name="l00257"></a><span class="lineno"><a class="line" href="../../d1/d43/classez_map_base.htm#a60a8c1e8da9b22e8c3f7bcbb636ebc77">  257</a></span>&#160;  <a class="code" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a>* <a class="code" href="../../d1/d43/classez_map_base.htm#a60a8c1e8da9b22e8c3f7bcbb636ebc77">GetAllocator</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_Elements.<a class="code" href="../../d7/d68/classez_deque_base.htm#a995fef1ffcc8fb253c4fc23710f4d6c2">GetAllocator</a>(); }</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160; </div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d1/d43/classez_map_base.htm#a29ebab2c0b4ca2184e86fcc7354de31e">operator==</a>(<span class="keyword">const</span> <a class="code" href="../../d1/d43/classez_map_base.htm">ezMapBase&lt;KeyType, ValueType, Comparer&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160; </div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d1/d43/classez_map_base.htm#a5979d1ba64cd2de6e724229344b31b83">operator!=</a>(<span class="keyword">const</span> <a class="code" href="../../d1/d43/classez_map_base.htm">ezMapBase&lt;KeyType, ValueType, Comparer&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160; </div>
<div class="line"><a name="l00266"></a><span class="lineno"><a class="line" href="../../d1/d43/classez_map_base.htm#ada00facbaa02afc5a2629ba338a68691">  266</a></span>&#160;  ezUInt64 <a class="code" href="../../d1/d43/classez_map_base.htm#ada00facbaa02afc5a2629ba338a68691">GetHeapMemoryUsage</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_Elements.<a class="code" href="../../d7/d68/classez_deque_base.htm#a4bb01ad03a63c829a87eef8685e4a318">GetHeapMemoryUsage</a>(); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160; </div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d1/d43/classez_map_base.htm#aea57c64492f82788afe5ee6e9161d8bf">Swap</a>(<a class="code" href="../../d1/d43/classez_map_base.htm">ezMapBase&lt;KeyType, ValueType, Comparer&gt;</a>&amp; other); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160; </div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;  Node* Internal_Find(<span class="keyword">const</span> CompatibleKeyType&amp; key) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;  Node* Internal_LowerBound(<span class="keyword">const</span> CompatibleKeyType&amp; key) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;  Node* Internal_UpperBound(<span class="keyword">const</span> CompatibleKeyType&amp; key) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160; </div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;  <span class="keywordtype">void</span> Constructor();</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160; </div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;  Node* AcquireNode(CompatibleKeyType&amp;&amp; key, ValueType&amp;&amp; value, ezUInt8 uiLevel, Node* pParent);</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160; </div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;  <span class="keywordtype">void</span> ReleaseNode(Node* pNode);</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160; </div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;  <span class="comment">// \brief Red-Black Tree stuff(Anderson Tree to be exact).</span></div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;  <span class="comment">// Code taken from here: http://eternallyconfuzzled.com/tuts/datastructures/jsw_tut_andersson.aspx</span></div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;  Node* SkewNode(Node* root);</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;  Node* SplitNode(Node* root);</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d1/d43/classez_map_base.htm#a25d049c3f258c4640642ef5c1ea04d17">Insert</a>(<span class="keyword">const</span> KeyType&amp; key, <span class="keyword">const</span> ValueType&amp; value, Node*&amp; pInsertedNode);</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CompatibleKeyType&gt;</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;  Node* <a class="code" href="../../d1/d43/classez_map_base.htm#a39ec812de69d422bdff1acc12d1d516f">Remove</a>(Node* root, <span class="keyword">const</span> CompatibleKeyType&amp; key, <span class="keywordtype">bool</span>&amp; bRemoved);</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160; </div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;  Node* GetLeftMost() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160; </div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;  Node* GetRightMost() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160; </div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;  <span class="keywordtype">void</span> SwapNilNode(Node*&amp; pCurNode, NilNode* pOld, NilNode* pNew);</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160; </div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;  Node* m_pRoot;</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160; </div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;  Node* m_pFreeElementStack;</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160; </div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;  NilNode m_NilNode;</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160; </div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;  <a class="code" href="../../d9/dfe/classez_deque.htm">ezDeque&lt;Node, ezNullAllocatorWrapper, false&gt;</a> m_Elements;</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160; </div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;  ezUInt32 m_uiCount;</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160; </div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;  Comparer m_Comparer;</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;};</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160; </div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160; </div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KeyType, <span class="keyword">typename</span> ValueType, <span class="keyword">typename</span> Comparer = ezCompareHelper&lt;KeyType&gt;, <span class="keyword">typename</span> AllocatorWrapper = ezDefaultAllocatorWrapper&gt;</div>
<div class="line"><a name="l00328"></a><span class="lineno"><a class="line" href="../../d1/d79/classez_map.htm">  328</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d1/d79/classez_map.htm">ezMap</a> : <span class="keyword">public</span> <a class="code" href="../../d1/d43/classez_map_base.htm">ezMapBase</a>&lt;KeyType, ValueType, Comparer&gt;</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;{</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;  <a class="code" href="../../d1/d79/classez_map.htm">ezMap</a>();</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;  <span class="keyword">explicit</span> <a class="code" href="../../d1/d79/classez_map.htm">ezMap</a>(<a class="code" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a>* pAllocator);</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;  <a class="code" href="../../d1/d79/classez_map.htm">ezMap</a>(<span class="keyword">const</span> Comparer&amp; comparer, <a class="code" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a>* pAllocator);</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160; </div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;  <a class="code" href="../../d1/d79/classez_map.htm">ezMap</a>(<span class="keyword">const</span> <a class="code" href="../../d1/d79/classez_map.htm">ezMap&lt;KeyType, ValueType, Comparer, AllocatorWrapper&gt;</a>&amp; other);</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;  <a class="code" href="../../d1/d79/classez_map.htm">ezMap</a>(<span class="keyword">const</span> <a class="code" href="../../d1/d43/classez_map_base.htm">ezMapBase&lt;KeyType, ValueType, Comparer&gt;</a>&amp; other);</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160; </div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> <a class="code" href="../../d1/d79/classez_map.htm">ezMap&lt;KeyType, ValueType, Comparer, AllocatorWrapper&gt;</a>&amp; rhs);</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> <a class="code" href="../../d1/d43/classez_map_base.htm">ezMapBase&lt;KeyType, ValueType, Comparer&gt;</a>&amp; rhs);</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;};</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160; </div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KeyType, <span class="keyword">typename</span> ValueType, <span class="keyword">typename</span> Comparer&gt;</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;<span class="keyword">typename</span> <a class="code" href="../../da/d8e/structez_map_base_1_1_iterator.htm">ezMapBase&lt;KeyType, ValueType, Comparer&gt;::Iterator</a> begin(<a class="code" href="../../d1/d43/classez_map_base.htm">ezMapBase&lt;KeyType, ValueType, Comparer&gt;</a>&amp; ref_container)</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;{</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;  <span class="keywordflow">return</span> ref_container.<a class="code" href="../../d1/d43/classez_map_base.htm#a999fb772f02ce74de03af456db13ef38">GetIterator</a>();</div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;}</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160; </div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KeyType, <span class="keyword">typename</span> ValueType, <span class="keyword">typename</span> Comparer&gt;</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;<span class="keyword">typename</span> <a class="code" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm">ezMapBase&lt;KeyType, ValueType, Comparer&gt;::ConstIterator</a> begin(<span class="keyword">const</span> <a class="code" href="../../d1/d43/classez_map_base.htm">ezMapBase&lt;KeyType, ValueType, Comparer&gt;</a>&amp; container)</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;{</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;  <span class="keywordflow">return</span> container.<a class="code" href="../../d1/d43/classez_map_base.htm#a999fb772f02ce74de03af456db13ef38">GetIterator</a>();</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;}</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160; </div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KeyType, <span class="keyword">typename</span> ValueType, <span class="keyword">typename</span> Comparer&gt;</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;<span class="keyword">typename</span> <a class="code" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm">ezMapBase&lt;KeyType, ValueType, Comparer&gt;::ConstIterator</a> cbegin(<span class="keyword">const</span> <a class="code" href="../../d1/d43/classez_map_base.htm">ezMapBase&lt;KeyType, ValueType, Comparer&gt;</a>&amp; container)</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;{</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;  <span class="keywordflow">return</span> container.<a class="code" href="../../d1/d43/classez_map_base.htm#a999fb772f02ce74de03af456db13ef38">GetIterator</a>();</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;}</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160; </div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KeyType, <span class="keyword">typename</span> ValueType, <span class="keyword">typename</span> Comparer&gt;</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;<span class="keyword">typename</span> <a class="code" href="../../da/d8e/structez_map_base_1_1_iterator.htm">ezMapBase&lt;KeyType, ValueType, Comparer&gt;::Iterator</a> end(<a class="code" href="../../d1/d43/classez_map_base.htm">ezMapBase&lt;KeyType, ValueType, Comparer&gt;</a>&amp; ref_container)</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;{</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">typename</span> <a class="code" href="../../da/d8e/structez_map_base_1_1_iterator.htm">ezMapBase&lt;KeyType, ValueType, Comparer&gt;::Iterator</a>();</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;}</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160; </div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KeyType, <span class="keyword">typename</span> ValueType, <span class="keyword">typename</span> Comparer&gt;</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;<span class="keyword">typename</span> <a class="code" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm">ezMapBase&lt;KeyType, ValueType, Comparer&gt;::ConstIterator</a> end(<span class="keyword">const</span> <a class="code" href="../../d1/d43/classez_map_base.htm">ezMapBase&lt;KeyType, ValueType, Comparer&gt;</a>&amp; container)</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;{</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">typename</span> <a class="code" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm">ezMapBase&lt;KeyType, ValueType, Comparer&gt;::ConstIterator</a>();</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;}</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160; </div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> KeyType, <span class="keyword">typename</span> ValueType, <span class="keyword">typename</span> Comparer&gt;</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;<span class="keyword">typename</span> <a class="code" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm">ezMapBase&lt;KeyType, ValueType, Comparer&gt;::ConstIterator</a> cend(<span class="keyword">const</span> <a class="code" href="../../d1/d43/classez_map_base.htm">ezMapBase&lt;KeyType, ValueType, Comparer&gt;</a>&amp; container)</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;{</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">typename</span> <a class="code" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm">ezMapBase&lt;KeyType, ValueType, Comparer&gt;::ConstIterator</a>();</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;}</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160; </div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;<span class="preprocessor">#include &lt;Foundation/Containers/Implementation/Map_inl.h&gt;</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="astructez_map_base_1_1_const_iterator_htm_a66d3c856b8cffbccf434341227dffd17"><div class="ttname"><a href="../../dd/d35/structez_map_base_1_1_const_iterator.htm#a66d3c856b8cffbccf434341227dffd17">ezMapBase::ConstIterator::Next</a></div><div class="ttdeci">void Next()</div><div class="ttdoc">Advances the iterator to the next element in the map. The iterator will not be valid anymore,...</div><div class="ttdef"><b>Definition:</b> Map_inl.h:10</div></div>
<div class="ttc" id="aclassez_map_base_htm_a90016605a67ba6152a4aed1253a113d9"><div class="ttname"><a href="../../d1/d43/classez_map_base.htm#a90016605a67ba6152a4aed1253a113d9">ezMapBase::Contains</a></div><div class="ttdeci">bool Contains(const CompatibleKeyType &amp;key) const</div><div class="ttdoc">Checks whether the given key is in the container.</div></div>
<div class="ttc" id="aclassez_map_base_htm_a20c08ab5f72dd2fd99c066e9575ae846"><div class="ttname"><a href="../../d1/d43/classez_map_base.htm#a20c08ab5f72dd2fd99c066e9575ae846">ezMapBase::TryGetValue</a></div><div class="ttdeci">bool TryGetValue(const CompatibleKeyType &amp;key, ValueType &amp;out_value) const</div><div class="ttdoc">Returns whether an entry with the given key was found and if found writes out the corresponding value...</div></div>
<div class="ttc" id="astructez_map_base_1_1_const_iterator_htm_aa54b40740cfb03891f032fea16ab55d2"><div class="ttname"><a href="../../dd/d35/structez_map_base_1_1_const_iterator.htm#aa54b40740cfb03891f032fea16ab55d2">ezMapBase::ConstIterator::operator++</a></div><div class="ttdeci">EZ_ALWAYS_INLINE void operator++()</div><div class="ttdoc">Shorthand for 'Next'.</div><div class="ttdef"><b>Definition:</b> Map.h:88</div></div>
<div class="ttc" id="aclassez_map_base_htm_a5946a15134311c8353deeee06670e412"><div class="ttname"><a href="../../d1/d43/classez_map_base.htm#a5946a15134311c8353deeee06670e412">ezMapBase::Clear</a></div><div class="ttdeci">void Clear()</div><div class="ttdoc">Destroys all elements in the map and resets its size to zero.</div><div class="ttdef"><b>Definition:</b> Map_inl.h:160</div></div>
<div class="ttc" id="aclassez_map_base_htm_a60a8c1e8da9b22e8c3f7bcbb636ebc77"><div class="ttname"><a href="../../d1/d43/classez_map_base.htm#a60a8c1e8da9b22e8c3f7bcbb636ebc77">ezMapBase::GetAllocator</a></div><div class="ttdeci">ezAllocatorBase * GetAllocator() const</div><div class="ttdoc">Returns the allocator that is used by this instance.</div><div class="ttdef"><b>Definition:</b> Map.h:257</div></div>
<div class="ttc" id="aclassez_map_base_htm_a727ef2533114ad2f60146a5c5f541891"><div class="ttname"><a href="../../d1/d43/classez_map_base.htm#a727ef2533114ad2f60146a5c5f541891">ezMapBase::LowerBound</a></div><div class="ttdeci">Iterator LowerBound(const CompatibleKeyType &amp;key)</div><div class="ttdoc">Returns an Iterator to the element with a key equal or larger than the given key. Returns an invalid ...</div></div>
<div class="ttc" id="aclassez_deque_htm"><div class="ttname"><a href="../../d9/dfe/classez_deque.htm">ezDeque&lt; Node, ezNullAllocatorWrapper, false &gt;</a></div></div>
<div class="ttc" id="astructez_map_base_1_1_const_iterator_htm_a666cc10103552788308d26e68ea163d1"><div class="ttname"><a href="../../dd/d35/structez_map_base_1_1_const_iterator.htm#a666cc10103552788308d26e68ea163d1">ezMapBase::ConstIterator::operator==</a></div><div class="ttdeci">EZ_ALWAYS_INLINE bool operator==(const typename ezMapBase&lt; KeyType, ValueType, Comparer &gt;::ConstIterator &amp;it2) const</div><div class="ttdoc">Checks whether the two iterators point to the same element.</div><div class="ttdef"><b>Definition:</b> Map.h:59</div></div>
<div class="ttc" id="astructez_map_base_1_1_const_iterator_htm_aa8fc4f932a306a7e4a555bc16cf76846"><div class="ttname"><a href="../../dd/d35/structez_map_base_1_1_const_iterator.htm#aa8fc4f932a306a7e4a555bc16cf76846">ezMapBase::ConstIterator::operator--</a></div><div class="ttdeci">EZ_ALWAYS_INLINE void operator--()</div><div class="ttdoc">Shorthand for 'Prev'.</div><div class="ttdef"><b>Definition:</b> Map.h:91</div></div>
<div class="ttc" id="astructez_map_base_1_1_iterator_htm_a7ec517bb552d0e9ab514855b93b312ed"><div class="ttname"><a href="../../da/d8e/structez_map_base_1_1_iterator.htm#a7ec517bb552d0e9ab514855b93b312ed">ezMapBase::Iterator::Value</a></div><div class="ttdeci">EZ_FORCE_INLINE ValueType &amp; Value()</div><div class="ttdoc">Returns the 'value' of the element that this iterator points to.</div><div class="ttdef"><b>Definition:</b> Map.h:125</div></div>
<div class="ttc" id="aclassez_map_base_htm_a7c62813d3d15be2f07144978dbb43271"><div class="ttname"><a href="../../d1/d43/classez_map_base.htm#a7c62813d3d15be2f07144978dbb43271">ezMapBase::IsEmpty</a></div><div class="ttdeci">bool IsEmpty() const</div><div class="ttdoc">Returns whether there are no elements in the map. O(1) operation.</div><div class="ttdef"><b>Definition:</b> Map_inl.h:179</div></div>
<div class="ttc" id="aclassez_map_base_htm_a520e292a9858a7bb9e8348e3d1f4dbc6"><div class="ttname"><a href="../../d1/d43/classez_map_base.htm#a520e292a9858a7bb9e8348e3d1f4dbc6">ezMapBase::operator[]</a></div><div class="ttdeci">ValueType &amp; operator[](const CompatibleKeyType &amp;key)</div><div class="ttdoc">Allows read/write access to the value stored under the given key. If there is no such key,...</div><div class="ttdef"><b>Definition:</b> Map_inl.h:435</div></div>
<div class="ttc" id="astructez_map_base_1_1_const_iterator_htm_a6e0d02490e6728f0a09173acd57cec6f"><div class="ttname"><a href="../../dd/d35/structez_map_base_1_1_const_iterator.htm#a6e0d02490e6728f0a09173acd57cec6f">ezMapBase::ConstIterator::ConstIterator</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ConstIterator()</div><div class="ttdoc">Constructs an invalid iterator.</div><div class="ttdef"><b>Definition:</b> Map.h:50</div></div>
<div class="ttc" id="astructez_map_base_1_1_iterator_htm_a260a83d97684eaf07ad3b8c31faa155c"><div class="ttname"><a href="../../da/d8e/structez_map_base_1_1_iterator.htm#a260a83d97684eaf07ad3b8c31faa155c">ezMapBase::Iterator::Iterator</a></div><div class="ttdeci">EZ_ALWAYS_INLINE Iterator()</div><div class="ttdoc">Constructs an invalid iterator.</div><div class="ttdef"><b>Definition:</b> Map.h:119</div></div>
<div class="ttc" id="aclassez_map_base_htm_a3bc6ff8af67d601852bdc08bef189f1e"><div class="ttname"><a href="../../d1/d43/classez_map_base.htm#a3bc6ff8af67d601852bdc08bef189f1e">ezMapBase::~ezMapBase</a></div><div class="ttdeci">~ezMapBase()</div><div class="ttdoc">Destroys all elements from the map.</div><div class="ttdef"><b>Definition:</b> Map_inl.h:145</div></div>
<div class="ttc" id="aclassez_map_base_htm_a7746594aefe8c1bfc552ab55adb2b88c"><div class="ttname"><a href="../../d1/d43/classez_map_base.htm#a7746594aefe8c1bfc552ab55adb2b88c">ezMapBase::Find</a></div><div class="ttdeci">Iterator Find(const CompatibleKeyType &amp;key)</div><div class="ttdoc">Searches for key, returns an Iterator to it or an invalid iterator, if no such key is found....</div></div>
<div class="ttc" id="astructez_map_base_1_1_const_iterator_htm_a709b657328eb3e6a924c64bdaadb3eb0"><div class="ttname"><a href="../../dd/d35/structez_map_base_1_1_const_iterator.htm#a709b657328eb3e6a924c64bdaadb3eb0">ezMapBase::ConstIterator::IsValid</a></div><div class="ttdeci">EZ_ALWAYS_INLINE bool IsValid() const</div><div class="ttdoc">Checks whether this iterator points to a valid element.</div><div class="ttdef"><b>Definition:</b> Map.h:56</div></div>
<div class="ttc" id="aclassez_map_base_htm"><div class="ttname"><a href="../../d1/d43/classez_map_base.htm">ezMapBase</a></div><div class="ttdoc">An associative container. Similar to STL::map.</div><div class="ttdef"><b>Definition:</b> Map.h:17</div></div>
<div class="ttc" id="aclassez_map_base_htm_a999fb772f02ce74de03af456db13ef38"><div class="ttname"><a href="../../d1/d43/classez_map_base.htm#a999fb772f02ce74de03af456db13ef38">ezMapBase::GetIterator</a></div><div class="ttdeci">Iterator GetIterator()</div><div class="ttdoc">Returns an Iterator to the very first element.</div><div class="ttdef"><b>Definition:</b> Map_inl.h:192</div></div>
<div class="ttc" id="aclassez_map_base_htm_acbebd24c8eabd3451213fb781ed62a4c"><div class="ttname"><a href="../../d1/d43/classez_map_base.htm#acbebd24c8eabd3451213fb781ed62a4c">ezMapBase::ezMapBase</a></div><div class="ttdeci">ezMapBase(const Comparer &amp;comparer, ezAllocatorBase *pAllocator)</div><div class="ttdoc">Initializes the map to be empty.</div><div class="ttdef"><b>Definition:</b> Map_inl.h:128</div></div>
<div class="ttc" id="astructez_map_base_1_1_const_iterator_htm_af19f1471106e5243cc62f5f7b6cac4a4"><div class="ttname"><a href="../../dd/d35/structez_map_base_1_1_const_iterator.htm#af19f1471106e5243cc62f5f7b6cac4a4">ezMapBase::ConstIterator::operator!=</a></div><div class="ttdeci">EZ_ALWAYS_INLINE bool operator!=(const typename ezMapBase&lt; KeyType, ValueType, Comparer &gt;::ConstIterator &amp;it2) const</div><div class="ttdoc">Checks whether the two iterators point to the same element.</div><div class="ttdef"><b>Definition:</b> Map.h:62</div></div>
<div class="ttc" id="aclassez_map_base_htm_a400e55a001e58137d0e483a2aba85784"><div class="ttname"><a href="../../d1/d43/classez_map_base.htm#a400e55a001e58137d0e483a2aba85784">ezMapBase::GetCount</a></div><div class="ttdeci">ezUInt32 GetCount() const</div><div class="ttdoc">Returns the number of elements currently stored in the map. O(1) operation.</div><div class="ttdef"><b>Definition:</b> Map_inl.h:185</div></div>
<div class="ttc" id="aclassez_map_base_htm_a29cfe65a8cf027f6f3818b1f2f9893b2"><div class="ttname"><a href="../../d1/d43/classez_map_base.htm#a29cfe65a8cf027f6f3818b1f2f9893b2">ezMapBase::operator=</a></div><div class="ttdeci">void operator=(const ezMapBase&lt; KeyType, ValueType, Comparer &gt; &amp;rhs)</div><div class="ttdoc">Copies all key/value pairs from the given map into this one.</div><div class="ttdef"><b>Definition:</b> Map_inl.h:151</div></div>
<div class="ttc" id="astructez_map_base_1_1_const_iterator_htm_a3d8a98ad3acf3a947f49b01342c25417"><div class="ttname"><a href="../../dd/d35/structez_map_base_1_1_const_iterator.htm#a3d8a98ad3acf3a947f49b01342c25417">ezMapBase::ConstIterator::Key</a></div><div class="ttdeci">const EZ_FORCE_INLINE KeyType &amp; Key() const</div><div class="ttdoc">Returns the 'key' of the element that this iterator points to.</div><div class="ttdef"><b>Definition:</b> Map.h:65</div></div>
<div class="ttc" id="aclassez_map_base_htm_ada00facbaa02afc5a2629ba338a68691"><div class="ttname"><a href="../../d1/d43/classez_map_base.htm#ada00facbaa02afc5a2629ba338a68691">ezMapBase::GetHeapMemoryUsage</a></div><div class="ttdeci">ezUInt64 GetHeapMemoryUsage() const</div><div class="ttdoc">Returns the amount of bytes that are currently allocated on the heap.</div><div class="ttdef"><b>Definition:</b> Map.h:266</div></div>
<div class="ttc" id="astructez_map_base_1_1_iterator_htm_a08a30ae835e95d146d1270f199b780b4"><div class="ttname"><a href="../../da/d8e/structez_map_base_1_1_iterator.htm#a08a30ae835e95d146d1270f199b780b4">ezMapBase::Iterator::operator*</a></div><div class="ttdeci">EZ_ALWAYS_INLINE Iterator &amp; operator*()</div><div class="ttdoc">Returns '*this' to enable foreach.</div><div class="ttdef"><b>Definition:</b> Map.h:132</div></div>
<div class="ttc" id="aclassez_allocator_base_htm"><div class="ttname"><a href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a></div><div class="ttdoc">Base class for all memory allocators.</div><div class="ttdef"><b>Definition:</b> AllocatorBase.h:22</div></div>
<div class="ttc" id="aclassez_map_htm"><div class="ttname"><a href="../../d1/d79/classez_map.htm">ezMap</a></div><div class="ttdef"><b>Definition:</b> Map.h:328</div></div>
<div class="ttc" id="astructez_map_base_1_1_const_iterator_htm_a9fe0b3b8c08e87dd08dca86a45f31261"><div class="ttname"><a href="../../dd/d35/structez_map_base_1_1_const_iterator.htm#a9fe0b3b8c08e87dd08dca86a45f31261">ezMapBase::ConstIterator::Prev</a></div><div class="ttdeci">void Prev()</div><div class="ttdoc">Advances the iterator to the previous element in the map. The iterator will not be valid anymore,...</div><div class="ttdef"><b>Definition:</b> Map_inl.h:61</div></div>
<div class="ttc" id="aclassez_map_base_htm_a25d049c3f258c4640642ef5c1ea04d17"><div class="ttname"><a href="../../d1/d43/classez_map_base.htm#a25d049c3f258c4640642ef5c1ea04d17">ezMapBase::Insert</a></div><div class="ttdeci">Iterator Insert(CompatibleKeyType &amp;&amp;key, CompatibleValueType &amp;&amp;value)</div><div class="ttdoc">Inserts the key/value pair into the tree and returns an Iterator to it. O(log n) operation.</div><div class="ttdef"><b>Definition:</b> Map_inl.h:520</div></div>
<div class="ttc" id="aclassez_map_base_htm_a607565550de36a41762eec35182ad52d"><div class="ttname"><a href="../../d1/d43/classez_map_base.htm#a607565550de36a41762eec35182ad52d">ezMapBase::GetValueOrDefault</a></div><div class="ttdeci">const ValueType &amp; GetValueOrDefault(const CompatibleKeyType &amp;key, const ValueType &amp;defaultValue) const</div><div class="ttdoc">Either returns the value of the entry with the given key, if found, or the provided default value.</div></div>
<div class="ttc" id="aclassez_map_base_htm_a05768a8676508c2e5b971386f2cf5a8e"><div class="ttname"><a href="../../d1/d43/classez_map_base.htm#a05768a8676508c2e5b971386f2cf5a8e">ezMapBase::GetLastIterator</a></div><div class="ttdeci">Iterator GetLastIterator()</div><div class="ttdoc">Returns an Iterator to the very last element. For reverse traversal.</div><div class="ttdef"><b>Definition:</b> Map_inl.h:204</div></div>
<div class="ttc" id="aclassez_deque_base_htm_a995fef1ffcc8fb253c4fc23710f4d6c2"><div class="ttname"><a href="../../d7/d68/classez_deque_base.htm#a995fef1ffcc8fb253c4fc23710f4d6c2">ezDequeBase::GetAllocator</a></div><div class="ttdeci">ezAllocatorBase * GetAllocator() const</div><div class="ttdoc">Returns the allocator that is used by this instance.</div><div class="ttdef"><b>Definition:</b> Deque.h:167</div></div>
<div class="ttc" id="aclassez_map_base_htm_a093bd0438e613ffff840693d6134cd63"><div class="ttname"><a href="../../d1/d43/classez_map_base.htm#a093bd0438e613ffff840693d6134cd63">ezMapBase::GetValue</a></div><div class="ttdeci">const ValueType * GetValue(const CompatibleKeyType &amp;key) const</div><div class="ttdoc">Returns a pointer to the value of the entry with the given key if found, otherwise returns nullptr.</div></div>
<div class="ttc" id="aclassez_map_base_htm_aea57c64492f82788afe5ee6e9161d8bf"><div class="ttname"><a href="../../d1/d43/classez_map_base.htm#aea57c64492f82788afe5ee6e9161d8bf">ezMapBase::Swap</a></div><div class="ttdeci">void Swap(ezMapBase&lt; KeyType, ValueType, Comparer &gt; &amp;other)</div><div class="ttdoc">Swaps this map with the other one.</div><div class="ttdef"><b>Definition:</b> Map_inl.h:864</div></div>
<div class="ttc" id="astructez_map_base_1_1_const_iterator_htm"><div class="ttname"><a href="../../dd/d35/structez_map_base_1_1_const_iterator.htm">ezMapBase::ConstIterator</a></div><div class="ttdoc">Base class for all iterators.</div><div class="ttdef"><b>Definition:</b> Map.h:39</div></div>
<div class="ttc" id="astructez_map_base_1_1_iterator_htm"><div class="ttname"><a href="../../da/d8e/structez_map_base_1_1_iterator.htm">ezMapBase::Iterator</a></div><div class="ttdoc">Forward Iterator to iterate over all elements in sorted order.</div><div class="ttdef"><b>Definition:</b> Map.h:105</div></div>
<div class="ttc" id="aclassez_map_base_htm_a5979d1ba64cd2de6e724229344b31b83"><div class="ttname"><a href="../../d1/d43/classez_map_base.htm#a5979d1ba64cd2de6e724229344b31b83">ezMapBase::operator!=</a></div><div class="ttdeci">bool operator!=(const ezMapBase&lt; KeyType, ValueType, Comparer &gt; &amp;rhs) const</div><div class="ttdoc">Comparison operator.</div><div class="ttdef"><b>Definition:</b> Map_inl.h:813</div></div>
<div class="ttc" id="astructez_map_base_1_1_const_iterator_htm_a6ed0e8cc048bc3f42e80c94cac206b9a"><div class="ttname"><a href="../../dd/d35/structez_map_base_1_1_const_iterator.htm#a6ed0e8cc048bc3f42e80c94cac206b9a">ezMapBase::ConstIterator::Value</a></div><div class="ttdeci">const EZ_FORCE_INLINE ValueType &amp; Value() const</div><div class="ttdoc">Returns the 'value' of the element that this iterator points to.</div><div class="ttdef"><b>Definition:</b> Map.h:72</div></div>
<div class="ttc" id="aclassez_map_base_htm_a07307d10c2c64e866f69a11665c8186f"><div class="ttname"><a href="../../d1/d43/classez_map_base.htm#a07307d10c2c64e866f69a11665c8186f">ezMapBase::UpperBound</a></div><div class="ttdeci">Iterator UpperBound(const CompatibleKeyType &amp;key)</div><div class="ttdoc">Returns an Iterator to the element with a key that is LARGER than the given key. Returns an invalid i...</div></div>
<div class="ttc" id="aclassez_deque_base_htm_a4bb01ad03a63c829a87eef8685e4a318"><div class="ttname"><a href="../../d7/d68/classez_deque_base.htm#a4bb01ad03a63c829a87eef8685e4a318">ezDequeBase::GetHeapMemoryUsage</a></div><div class="ttdeci">ezUInt64 GetHeapMemoryUsage() const</div><div class="ttdoc">Returns the amount of bytes that are currently allocated on the heap.</div><div class="ttdef"><b>Definition:</b> Deque_inl.h:968</div></div>
<div class="ttc" id="aclassez_map_base_htm_a29ebab2c0b4ca2184e86fcc7354de31e"><div class="ttname"><a href="../../d1/d43/classez_map_base.htm#a29ebab2c0b4ca2184e86fcc7354de31e">ezMapBase::operator==</a></div><div class="ttdeci">bool operator==(const ezMapBase&lt; KeyType, ValueType, Comparer &gt; &amp;rhs) const</div><div class="ttdoc">Comparison operator.</div><div class="ttdef"><b>Definition:</b> Map_inl.h:789</div></div>
<div class="ttc" id="aclassez_map_base_htm_a39ec812de69d422bdff1acc12d1d516f"><div class="ttname"><a href="../../d1/d43/classez_map_base.htm#a39ec812de69d422bdff1acc12d1d516f">ezMapBase::Remove</a></div><div class="ttdeci">bool Remove(const CompatibleKeyType &amp;key)</div><div class="ttdoc">Erases the key/value pair with the given key, if it exists. O(log n) operation.</div><div class="ttdef"><b>Definition:</b> Map_inl.h:530</div></div>
<div class="ttc" id="aclassez_map_base_htm_ac8a2e13c622f9827d6185dba8977552c"><div class="ttname"><a href="../../d1/d43/classez_map_base.htm#ac8a2e13c622f9827d6185dba8977552c">ezMapBase::FindOrAdd</a></div><div class="ttdeci">Iterator FindOrAdd(CompatibleKeyType &amp;&amp;key, bool *out_pExisted=nullptr)</div><div class="ttdoc">Searches for the given key and returns an iterator to it. If it did not exist yet,...</div><div class="ttdef"><b>Definition:</b> Map_inl.h:442</div></div>
<div class="ttc" id="astructez_map_base_1_1_const_iterator_htm_a605b68ceb07f1322e7abcc0dc97a2248"><div class="ttname"><a href="../../dd/d35/structez_map_base_1_1_const_iterator.htm#a605b68ceb07f1322e7abcc0dc97a2248">ezMapBase::ConstIterator::operator*</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ConstIterator &amp; operator*()</div><div class="ttdoc">Returns '*this' to enable foreach.</div><div class="ttdef"><b>Definition:</b> Map.h:79</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_6b567e6755824bd0b8ffd754b9d67ac0.htm">Containers</a></li><li class="navelem"><b>Map.h</b></li>
    <li class="footer">Generated on Tue Nov 7 2023 21:39:17 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
