<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/IO/OpenDdlReader.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 23.04</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d3/d4f/_open_ddl_reader_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">OpenDdlReader.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;Foundation/Basics.h&gt;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;Foundation/Containers/Deque.h&gt;</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;Foundation/Containers/Map.h&gt;</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;Foundation/IO/OpenDdlParser.h&gt;</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;Foundation/Logging/Log.h&gt;</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160; </div>
<div class="line"><a name="l00010"></a><span class="lineno"><a class="line" href="../../db/d71/classez_open_ddl_reader_element.htm">   10</a></span>&#160;<span class="keyword">class </span>EZ_FOUNDATION_DLL <a class="code" href="../../db/d71/classez_open_ddl_reader_element.htm">ezOpenDdlReaderElement</a></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;{</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;  EZ_DECLARE_POD_TYPE();</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160; </div>
<div class="line"><a name="l00016"></a><span class="lineno"><a class="line" href="../../db/d71/classez_open_ddl_reader_element.htm#a6b816c7b67c04fa31edb22bd374e484b">   16</a></span>&#160;  EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../db/d71/classez_open_ddl_reader_element.htm#a6b816c7b67c04fa31edb22bd374e484b">IsCustomType</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_PrimitiveType == ezOpenDdlPrimitiveType::Custom; } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160; </div>
<div class="line"><a name="l00019"></a><span class="lineno"><a class="line" href="../../db/d71/classez_open_ddl_reader_element.htm#aeaf3c79427e0d99a76e869ba9b0e9a64">   19</a></span>&#160;  EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../db/d71/classez_open_ddl_reader_element.htm#aeaf3c79427e0d99a76e869ba9b0e9a64">IsCustomType</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szTypeName)<span class="keyword"> const</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    <span class="keywordflow">return</span> m_PrimitiveType == ezOpenDdlPrimitiveType::Custom &amp;&amp; <a class="code" href="../../de/df8/classez_string_utils.htm#aa1b8c125ced33a6a904f741597ecc673">ezStringUtils::IsEqual</a>(m_szCustomType, szTypeName);</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;  }</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160; </div>
<div class="line"><a name="l00025"></a><span class="lineno"><a class="line" href="../../db/d71/classez_open_ddl_reader_element.htm#a20538c87119ef00a58f3b039379563fd">   25</a></span>&#160;  EZ_ALWAYS_INLINE <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="../../db/d71/classez_open_ddl_reader_element.htm#a20538c87119ef00a58f3b039379563fd">GetCustomType</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_szCustomType; } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00028"></a><span class="lineno"><a class="line" href="../../db/d71/classez_open_ddl_reader_element.htm#a1cf22aa3249fc426e73ad09d7a2e3a3e">   28</a></span>&#160;  EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../db/d71/classez_open_ddl_reader_element.htm#a1cf22aa3249fc426e73ad09d7a2e3a3e">HasName</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> !<a class="code" href="../../de/df8/classez_string_utils.htm#a26f868ce8249b864f448837638ffde33">ezStringUtils::IsNullOrEmpty</a>(m_szName); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160; </div>
<div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="../../db/d71/classez_open_ddl_reader_element.htm#a84bf48f2e9c1f329239d9c2bda9cfdb0">   31</a></span>&#160;  EZ_ALWAYS_INLINE <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="../../db/d71/classez_open_ddl_reader_element.htm#a84bf48f2e9c1f329239d9c2bda9cfdb0">GetName</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_szName; } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160; </div>
<div class="line"><a name="l00034"></a><span class="lineno"><a class="line" href="../../db/d71/classez_open_ddl_reader_element.htm#a6fca5cd3571ccdb8fefb189586af08cc">   34</a></span>&#160;  EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../db/d71/classez_open_ddl_reader_element.htm#a6fca5cd3571ccdb8fefb189586af08cc">IsNameGlobal</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> (m_uiNumChildElements &amp; EZ_BIT(31)) != 0; } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160; </div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;  ezUInt32 GetNumChildObjects() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160; </div>
<div class="line"><a name="l00040"></a><span class="lineno"><a class="line" href="../../db/d71/classez_open_ddl_reader_element.htm#a38abb06f534da456ec4e0ae2ea18168d">   40</a></span>&#160;  EZ_ALWAYS_INLINE <span class="keyword">const</span> <a class="code" href="../../db/d71/classez_open_ddl_reader_element.htm">ezOpenDdlReaderElement</a>* <a class="code" href="../../db/d71/classez_open_ddl_reader_element.htm#a38abb06f534da456ec4e0ae2ea18168d">GetFirstChild</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span><a class="code" href="../../db/d71/classez_open_ddl_reader_element.htm">ezOpenDdlReaderElement</a>*<span class="keyword">&gt;</span>(m_pFirstChild);</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160; </div>
<div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="../../db/d71/classez_open_ddl_reader_element.htm#a3df7499476931d61909d9dd883f14a19">   46</a></span>&#160;  EZ_ALWAYS_INLINE <span class="keyword">const</span> <a class="code" href="../../db/d71/classez_open_ddl_reader_element.htm">ezOpenDdlReaderElement</a>* <a class="code" href="../../db/d71/classez_open_ddl_reader_element.htm#a3df7499476931d61909d9dd883f14a19">GetSibling</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_pSiblingElement; } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160; </div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;  ezUInt32 GetNumPrimitives() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160; </div>
<div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="../../db/d71/classez_open_ddl_reader_element.htm#a12109ab66d7ded089d3c0269bd5c9e72">   52</a></span>&#160;  EZ_ALWAYS_INLINE ezOpenDdlPrimitiveType <a class="code" href="../../db/d71/classez_open_ddl_reader_element.htm#a12109ab66d7ded089d3c0269bd5c9e72">GetPrimitivesType</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_PrimitiveType; } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160; </div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;  <span class="keywordtype">bool</span> HasPrimitives(ezOpenDdlPrimitiveType type, ezUInt32 uiMinNumberOfPrimitives = 1) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160; </div>
<div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="../../db/d71/classez_open_ddl_reader_element.htm#a99b4dd2891e42dd4cb50ee6c143dbd31">   59</a></span>&#160;  EZ_ALWAYS_INLINE <span class="keyword">const</span> <span class="keywordtype">bool</span>* <a class="code" href="../../db/d71/classez_open_ddl_reader_element.htm#a99b4dd2891e42dd4cb50ee6c143dbd31">GetPrimitivesBool</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span><span class="keywordtype">bool</span>*<span class="keyword">&gt;</span>(m_pFirstChild); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160; </div>
<div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="../../db/d71/classez_open_ddl_reader_element.htm#a313ad4a946d81985b1e335acce51e14a">   62</a></span>&#160;  EZ_ALWAYS_INLINE <span class="keyword">const</span> ezInt8* <a class="code" href="../../db/d71/classez_open_ddl_reader_element.htm#a313ad4a946d81985b1e335acce51e14a">GetPrimitivesInt8</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>ezInt8*<span class="keyword">&gt;</span>(m_pFirstChild); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160; </div>
<div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="../../db/d71/classez_open_ddl_reader_element.htm#abfec295241a8672278f57858ad014f91">   65</a></span>&#160;  EZ_ALWAYS_INLINE <span class="keyword">const</span> ezInt16* <a class="code" href="../../db/d71/classez_open_ddl_reader_element.htm#abfec295241a8672278f57858ad014f91">GetPrimitivesInt16</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>ezInt16*<span class="keyword">&gt;</span>(m_pFirstChild); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160; </div>
<div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="../../db/d71/classez_open_ddl_reader_element.htm#a56de7dc69754e8859722093ac6d61b68">   68</a></span>&#160;  EZ_ALWAYS_INLINE <span class="keyword">const</span> ezInt32* <a class="code" href="../../db/d71/classez_open_ddl_reader_element.htm#a56de7dc69754e8859722093ac6d61b68">GetPrimitivesInt32</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>ezInt32*<span class="keyword">&gt;</span>(m_pFirstChild); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160; </div>
<div class="line"><a name="l00071"></a><span class="lineno"><a class="line" href="../../db/d71/classez_open_ddl_reader_element.htm#ab656a50e56edb7c0079de118b83aa4b7">   71</a></span>&#160;  EZ_ALWAYS_INLINE <span class="keyword">const</span> ezInt64* <a class="code" href="../../db/d71/classez_open_ddl_reader_element.htm#ab656a50e56edb7c0079de118b83aa4b7">GetPrimitivesInt64</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>ezInt64*<span class="keyword">&gt;</span>(m_pFirstChild); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160; </div>
<div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="../../db/d71/classez_open_ddl_reader_element.htm#ab926befcdfce5894ef38ed23b7939840">   74</a></span>&#160;  EZ_ALWAYS_INLINE <span class="keyword">const</span> ezUInt8* <a class="code" href="../../db/d71/classez_open_ddl_reader_element.htm#ab926befcdfce5894ef38ed23b7939840">GetPrimitivesUInt8</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>ezUInt8*<span class="keyword">&gt;</span>(m_pFirstChild); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160; </div>
<div class="line"><a name="l00077"></a><span class="lineno"><a class="line" href="../../db/d71/classez_open_ddl_reader_element.htm#a3bd7870608d9474845fca996bbc30ee6">   77</a></span>&#160;  EZ_ALWAYS_INLINE <span class="keyword">const</span> ezUInt16* <a class="code" href="../../db/d71/classez_open_ddl_reader_element.htm#a3bd7870608d9474845fca996bbc30ee6">GetPrimitivesUInt16</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>ezUInt16*<span class="keyword">&gt;</span>(m_pFirstChild); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160; </div>
<div class="line"><a name="l00080"></a><span class="lineno"><a class="line" href="../../db/d71/classez_open_ddl_reader_element.htm#a224ea9fe7f42b482640f2ca71332e5ce">   80</a></span>&#160;  EZ_ALWAYS_INLINE <span class="keyword">const</span> ezUInt32* <a class="code" href="../../db/d71/classez_open_ddl_reader_element.htm#a224ea9fe7f42b482640f2ca71332e5ce">GetPrimitivesUInt32</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>ezUInt32*<span class="keyword">&gt;</span>(m_pFirstChild); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160; </div>
<div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="../../db/d71/classez_open_ddl_reader_element.htm#aece3c41a01a13984c2b064165ff44f48">   83</a></span>&#160;  EZ_ALWAYS_INLINE <span class="keyword">const</span> ezUInt64* <a class="code" href="../../db/d71/classez_open_ddl_reader_element.htm#aece3c41a01a13984c2b064165ff44f48">GetPrimitivesUInt64</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>ezUInt64*<span class="keyword">&gt;</span>(m_pFirstChild); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160; </div>
<div class="line"><a name="l00086"></a><span class="lineno"><a class="line" href="../../db/d71/classez_open_ddl_reader_element.htm#a6728bbda12b21856fed3df7e293bfbde">   86</a></span>&#160;  EZ_ALWAYS_INLINE <span class="keyword">const</span> <span class="keywordtype">float</span>* <a class="code" href="../../db/d71/classez_open_ddl_reader_element.htm#a6728bbda12b21856fed3df7e293bfbde">GetPrimitivesFloat</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span><span class="keywordtype">float</span>*<span class="keyword">&gt;</span>(m_pFirstChild); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160; </div>
<div class="line"><a name="l00089"></a><span class="lineno"><a class="line" href="../../db/d71/classez_open_ddl_reader_element.htm#aa366937307876fe3be153b8fc15f342d">   89</a></span>&#160;  EZ_ALWAYS_INLINE <span class="keyword">const</span> <span class="keywordtype">double</span>* <a class="code" href="../../db/d71/classez_open_ddl_reader_element.htm#aa366937307876fe3be153b8fc15f342d">GetPrimitivesDouble</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span><span class="keywordtype">double</span>*<span class="keyword">&gt;</span>(m_pFirstChild); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160; </div>
<div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="../../db/d71/classez_open_ddl_reader_element.htm#a0ace3a4797f0d1836af66515d5d8a4b9">   92</a></span>&#160;  EZ_ALWAYS_INLINE <span class="keyword">const</span> <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a>* <a class="code" href="../../db/d71/classez_open_ddl_reader_element.htm#a0ace3a4797f0d1836af66515d5d8a4b9">GetPrimitivesString</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span><a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a>*<span class="keyword">&gt;</span>(m_pFirstChild); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160; </div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../db/d71/classez_open_ddl_reader_element.htm">ezOpenDdlReaderElement</a>* FindChild(<span class="keyword">const</span> <span class="keywordtype">char</span>* szName) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160; </div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../db/d71/classez_open_ddl_reader_element.htm">ezOpenDdlReaderElement</a>* FindChildOfType(ezOpenDdlPrimitiveType type, <span class="keyword">const</span> <span class="keywordtype">char</span>* szName, ezUInt32 uiMinNumberOfPrimitives = 1) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160; </div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../db/d71/classez_open_ddl_reader_element.htm">ezOpenDdlReaderElement</a>* FindChildOfType(<span class="keyword">const</span> <span class="keywordtype">char</span>* szType, <span class="keyword">const</span> <span class="keywordtype">char</span>* szName = <span class="keyword">nullptr</span>) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160; </div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;  <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="../../d1/da2/classez_open_ddl_reader.htm">ezOpenDdlReader</a>;</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160; </div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;  ezOpenDdlPrimitiveType m_PrimitiveType;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;  ezUInt32 m_uiNumChildElements;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">void</span>* m_pFirstChild;</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../db/d71/classez_open_ddl_reader_element.htm">ezOpenDdlReaderElement</a>* m_pLastChild;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span>* m_szCustomType;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span>* m_szName;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../db/d71/classez_open_ddl_reader_element.htm">ezOpenDdlReaderElement</a>* m_pSiblingElement;</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;};</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160; </div>
<div class="line"><a name="l00117"></a><span class="lineno"><a class="line" href="../../d1/da2/classez_open_ddl_reader.htm">  117</a></span>&#160;<span class="keyword">class </span>EZ_FOUNDATION_DLL <a class="code" href="../../d1/da2/classez_open_ddl_reader.htm">ezOpenDdlReader</a> : <span class="keyword">public</span> <a class="code" href="../../d8/d21/classez_open_ddl_parser.htm">ezOpenDdlParser</a></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;{</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;  <a class="code" href="../../d1/da2/classez_open_ddl_reader.htm">ezOpenDdlReader</a>();</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;  ~<a class="code" href="../../d1/da2/classez_open_ddl_reader.htm">ezOpenDdlReader</a>();</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160; </div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;  <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> ParseDocument(<a class="code" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a>&amp; inout_stream, ezUInt32 uiFirstLineOffset = 0, <a class="code" href="../../d2/d9e/classez_log_interface.htm">ezLogInterface</a>* pLog = <a class="code" href="../../dc/d9e/classez_log.htm#ac43e2f0e2d7a5faef5fc24ccbf84f937">ezLog::GetThreadLocalLogSystem</a>(),</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    ezUInt32 uiCacheSizeInKB = 4); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160; </div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../db/d71/classez_open_ddl_reader_element.htm">ezOpenDdlReaderElement</a>* GetRootElement() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160; </div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../db/d71/classez_open_ddl_reader_element.htm">ezOpenDdlReaderElement</a>* FindElement(<span class="keyword">const</span> <span class="keywordtype">char</span>* szGlobalName) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160; </div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../d8/d21/classez_open_ddl_parser.htm#a173e6deb5618bf99dfe784b111ef4d2f">OnBeginObject</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szType, <span class="keyword">const</span> <span class="keywordtype">char</span>* szName, <span class="keywordtype">bool</span> bGlobalName) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../d8/d21/classez_open_ddl_parser.htm#ab92dd098a691ab15d8b5d8a7ecd988b8">OnEndObject</a>() <span class="keyword">override</span>;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160; </div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../d8/d21/classez_open_ddl_parser.htm#a1a0db3b2a041260cb77ff4541c96f8bd">OnBeginPrimitiveList</a>(ezOpenDdlPrimitiveType type, <span class="keyword">const</span> <span class="keywordtype">char</span>* szName, <span class="keywordtype">bool</span> bGlobalName) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../d8/d21/classez_open_ddl_parser.htm#ab8e3edb1873b57306d8a83ff3f17633b">OnEndPrimitiveList</a>() <span class="keyword">override</span>;</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160; </div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../d8/d21/classez_open_ddl_parser.htm#a1082b07190d2f2e55ca762f07e3b2e99">OnPrimitiveBool</a>(ezUInt32 count, <span class="keyword">const</span> <span class="keywordtype">bool</span>* pData, <span class="keywordtype">bool</span> bThisIsAll) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160; </div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../d8/d21/classez_open_ddl_parser.htm#af6adbd68a2d8faf97c802b55f63fc1db">OnPrimitiveInt8</a>(ezUInt32 count, <span class="keyword">const</span> ezInt8* pData, <span class="keywordtype">bool</span> bThisIsAll) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../d8/d21/classez_open_ddl_parser.htm#a7d1297a465e285d7533f9a74c2bd6ba2">OnPrimitiveInt16</a>(ezUInt32 count, <span class="keyword">const</span> ezInt16* pData, <span class="keywordtype">bool</span> bThisIsAll) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../d8/d21/classez_open_ddl_parser.htm#a605a018f13749ca47fc9651cf7b377d5">OnPrimitiveInt32</a>(ezUInt32 count, <span class="keyword">const</span> ezInt32* pData, <span class="keywordtype">bool</span> bThisIsAll) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../d8/d21/classez_open_ddl_parser.htm#a4beca17198f7dae13696a54d82fbd90b">OnPrimitiveInt64</a>(ezUInt32 count, <span class="keyword">const</span> ezInt64* pData, <span class="keywordtype">bool</span> bThisIsAll) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160; </div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../d8/d21/classez_open_ddl_parser.htm#a102344296a105a4ad7f6240f8f1eaee9">OnPrimitiveUInt8</a>(ezUInt32 count, <span class="keyword">const</span> ezUInt8* pData, <span class="keywordtype">bool</span> bThisIsAll) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../d8/d21/classez_open_ddl_parser.htm#a02731939138c89a51e9e80d3dff2e41b">OnPrimitiveUInt16</a>(ezUInt32 count, <span class="keyword">const</span> ezUInt16* pData, <span class="keywordtype">bool</span> bThisIsAll) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../d8/d21/classez_open_ddl_parser.htm#a28ebd40f70e3a03e5815b2d7ad6ac5c4">OnPrimitiveUInt32</a>(ezUInt32 count, <span class="keyword">const</span> ezUInt32* pData, <span class="keywordtype">bool</span> bThisIsAll) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../d8/d21/classez_open_ddl_parser.htm#a50a57ea749becd046b6ee00761d20925">OnPrimitiveUInt64</a>(ezUInt32 count, <span class="keyword">const</span> ezUInt64* pData, <span class="keywordtype">bool</span> bThisIsAll) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160; </div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../d8/d21/classez_open_ddl_parser.htm#a55f5f1a605c2e040f4e29bb7fa5df339">OnPrimitiveFloat</a>(ezUInt32 count, <span class="keyword">const</span> <span class="keywordtype">float</span>* pData, <span class="keywordtype">bool</span> bThisIsAll) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../d8/d21/classez_open_ddl_parser.htm#a32cc29762c75edfddd59c47b73677758">OnPrimitiveDouble</a>(ezUInt32 count, <span class="keyword">const</span> <span class="keywordtype">double</span>* pData, <span class="keywordtype">bool</span> bThisIsAll) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160; </div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../d8/d21/classez_open_ddl_parser.htm#a32ff96ba76a506ac02565a4aab5a5f77">OnPrimitiveString</a>(ezUInt32 count, <span class="keyword">const</span> <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a>* pData, <span class="keywordtype">bool</span> bThisIsAll) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160; </div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../d8/d21/classez_open_ddl_parser.htm#adf261f5a3b6f7f96c9cac396fd8909b8">OnParsingError</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szMessage, <span class="keywordtype">bool</span> bFatal, ezUInt32 uiLine, ezUInt32 uiColumn) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160; </div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;  <a class="code" href="../../db/d71/classez_open_ddl_reader_element.htm">ezOpenDdlReaderElement</a>* CreateElement(ezOpenDdlPrimitiveType type, <span class="keyword">const</span> <span class="keywordtype">char</span>* szType, <span class="keyword">const</span> <span class="keywordtype">char</span>* szName, <span class="keywordtype">bool</span> bGlobalName);</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span>* CopyString(<span class="keyword">const</span> <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a>&amp; <span class="keywordtype">string</span>);</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;  <span class="keywordtype">void</span> StorePrimitiveData(<span class="keywordtype">bool</span> bThisIsAll, ezUInt32 bytecount, <span class="keyword">const</span> ezUInt8* pData);</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160; </div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;  <span class="keywordtype">void</span> ClearDataChunks();</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;  ezUInt8* AllocateBytes(ezUInt32 uiNumBytes);</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160; </div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;  <span class="keyword">static</span> <span class="keyword">const</span> ezUInt32 s_uiChunkSize = 1000 * 4; <span class="comment">// 4 KiB</span></div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160; </div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;  <a class="code" href="../../d8/deb/classez_hybrid_array.htm">ezHybridArray&lt;ezUInt8*, 16&gt;</a> m_DataChunks;</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;  ezUInt8* m_pCurrentChunk;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;  ezUInt32 m_uiBytesInChunkLeft;</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160; </div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;  <a class="code" href="../../d2/d4f/classez_dynamic_array.htm">ezDynamicArray&lt;ezUInt8&gt;</a> m_TempCache;</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160; </div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;  <a class="code" href="../../d9/dfe/classez_deque.htm">ezDeque&lt;ezOpenDdlReaderElement&gt;</a> m_Elements;</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;  <a class="code" href="../../d8/deb/classez_hybrid_array.htm">ezHybridArray&lt;ezOpenDdlReaderElement*, 16&gt;</a> m_ObjectStack;</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160; </div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;  <a class="code" href="../../d9/dfe/classez_deque.htm">ezDeque&lt;ezString&gt;</a> m_Strings;</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160; </div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;  <a class="code" href="../../d1/d79/classez_map.htm">ezMap&lt;ezString, ezOpenDdlReaderElement*&gt;</a> m_GlobalNames;</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;};</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassez_open_ddl_parser_htm_a32ff96ba76a506ac02565a4aab5a5f77"><div class="ttname"><a href="../../d8/d21/classez_open_ddl_parser.htm#a32ff96ba76a506ac02565a4aab5a5f77">ezOpenDdlParser::OnPrimitiveString</a></div><div class="ttdeci">virtual void OnPrimitiveString(ezUInt32 count, const ezStringView *pData, bool bThisIsAll)=0</div><div class="ttdoc">Called when data for a primitive type is available. More than one value may be reported at a time.</div></div>
<div class="ttc" id="aclassez_open_ddl_parser_htm_af6adbd68a2d8faf97c802b55f63fc1db"><div class="ttname"><a href="../../d8/d21/classez_open_ddl_parser.htm#af6adbd68a2d8faf97c802b55f63fc1db">ezOpenDdlParser::OnPrimitiveInt8</a></div><div class="ttdeci">virtual void OnPrimitiveInt8(ezUInt32 count, const ezInt8 *pData, bool bThisIsAll)=0</div><div class="ttdoc">Called when data for a primitive type is available. More than one value may be reported at a time.</div></div>
<div class="ttc" id="aclassez_open_ddl_reader_element_htm_a84bf48f2e9c1f329239d9c2bda9cfdb0"><div class="ttname"><a href="../../db/d71/classez_open_ddl_reader_element.htm#a84bf48f2e9c1f329239d9c2bda9cfdb0">ezOpenDdlReaderElement::GetName</a></div><div class="ttdeci">const EZ_ALWAYS_INLINE char * GetName() const</div><div class="ttdoc">Returns the name of the object.</div><div class="ttdef"><b>Definition:</b> OpenDdlReader.h:31</div></div>
<div class="ttc" id="astructez_result_htm"><div class="ttname"><a href="../../d4/da9/structez_result.htm">ezResult</a></div><div class="ttdoc">Default enum for returning failure or success, instead of using a bool.</div><div class="ttdef"><b>Definition:</b> Types.h:50</div></div>
<div class="ttc" id="aclassez_open_ddl_parser_htm_ab92dd098a691ab15d8b5d8a7ecd988b8"><div class="ttname"><a href="../../d8/d21/classez_open_ddl_parser.htm#ab92dd098a691ab15d8b5d8a7ecd988b8">ezOpenDdlParser::OnEndObject</a></div><div class="ttdeci">virtual void OnEndObject()=0</div><div class="ttdoc">Called when the end of an object is encountered.</div></div>
<div class="ttc" id="aclassez_open_ddl_reader_element_htm_a6b816c7b67c04fa31edb22bd374e484b"><div class="ttname"><a href="../../db/d71/classez_open_ddl_reader_element.htm#a6b816c7b67c04fa31edb22bd374e484b">ezOpenDdlReaderElement::IsCustomType</a></div><div class="ttdeci">EZ_ALWAYS_INLINE bool IsCustomType() const</div><div class="ttdoc">Whether this is a custom object type that typically contains sub-elements.</div><div class="ttdef"><b>Definition:</b> OpenDdlReader.h:16</div></div>
<div class="ttc" id="aclassez_open_ddl_parser_htm"><div class="ttname"><a href="../../d8/d21/classez_open_ddl_parser.htm">ezOpenDdlParser</a></div><div class="ttdoc">A low level parser for the OpenDDL format. It can incrementally parse the structure,...</div><div class="ttdef"><b>Definition:</b> OpenDdlParser.h:34</div></div>
<div class="ttc" id="aclassez_open_ddl_parser_htm_a32cc29762c75edfddd59c47b73677758"><div class="ttname"><a href="../../d8/d21/classez_open_ddl_parser.htm#a32cc29762c75edfddd59c47b73677758">ezOpenDdlParser::OnPrimitiveDouble</a></div><div class="ttdeci">virtual void OnPrimitiveDouble(ezUInt32 count, const double *pData, bool bThisIsAll)=0</div><div class="ttdoc">Called when data for a primitive type is available. More than one value may be reported at a time.</div></div>
<div class="ttc" id="aclassez_string_utils_htm_aa1b8c125ced33a6a904f741597ecc673"><div class="ttname"><a href="../../de/df8/classez_string_utils.htm#aa1b8c125ced33a6a904f741597ecc673">ezStringUtils::IsEqual</a></div><div class="ttdeci">static bool IsEqual(const char *pString1, const char *pString2, const char *pString1End=ezUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *pString2End=ezUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Returns true, if the two given strings are identical (bitwise).</div><div class="ttdef"><b>Definition:</b> StringUtils_inl.h:124</div></div>
<div class="ttc" id="aclassez_deque_htm"><div class="ttname"><a href="../../d9/dfe/classez_deque.htm">ezDeque&lt; ezOpenDdlReaderElement &gt;</a></div></div>
<div class="ttc" id="aclassez_open_ddl_reader_element_htm_a12109ab66d7ded089d3c0269bd5c9e72"><div class="ttname"><a href="../../db/d71/classez_open_ddl_reader_element.htm#a12109ab66d7ded089d3c0269bd5c9e72">ezOpenDdlReaderElement::GetPrimitivesType</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezOpenDdlPrimitiveType GetPrimitivesType() const</div><div class="ttdoc">For non-custom types this returns the type of primitive that is stored at this element.</div><div class="ttdef"><b>Definition:</b> OpenDdlReader.h:52</div></div>
<div class="ttc" id="aclassez_open_ddl_reader_element_htm_a20538c87119ef00a58f3b039379563fd"><div class="ttname"><a href="../../db/d71/classez_open_ddl_reader_element.htm#a20538c87119ef00a58f3b039379563fd">ezOpenDdlReaderElement::GetCustomType</a></div><div class="ttdeci">const EZ_ALWAYS_INLINE char * GetCustomType() const</div><div class="ttdoc">Returns the string for the custom type name.</div><div class="ttdef"><b>Definition:</b> OpenDdlReader.h:25</div></div>
<div class="ttc" id="aclassez_open_ddl_parser_htm_a4beca17198f7dae13696a54d82fbd90b"><div class="ttname"><a href="../../d8/d21/classez_open_ddl_parser.htm#a4beca17198f7dae13696a54d82fbd90b">ezOpenDdlParser::OnPrimitiveInt64</a></div><div class="ttdeci">virtual void OnPrimitiveInt64(ezUInt32 count, const ezInt64 *pData, bool bThisIsAll)=0</div><div class="ttdoc">Called when data for a primitive type is available. More than one value may be reported at a time.</div></div>
<div class="ttc" id="aclassez_stream_reader_htm"><div class="ttname"><a href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a></div><div class="ttdoc">Interface for binary in (read) streams.</div><div class="ttdef"><b>Definition:</b> Stream.h:21</div></div>
<div class="ttc" id="aclassez_open_ddl_reader_element_htm_a3bd7870608d9474845fca996bbc30ee6"><div class="ttname"><a href="../../db/d71/classez_open_ddl_reader_element.htm#a3bd7870608d9474845fca996bbc30ee6">ezOpenDdlReaderElement::GetPrimitivesUInt16</a></div><div class="ttdeci">const EZ_ALWAYS_INLINE ezUInt16 * GetPrimitivesUInt16() const</div><div class="ttdoc">Returns a pointer to the primitive data cast to a specific type. Only valid if GetPrimitivesType() ac...</div><div class="ttdef"><b>Definition:</b> OpenDdlReader.h:77</div></div>
<div class="ttc" id="aclassez_open_ddl_reader_element_htm_a38abb06f534da456ec4e0ae2ea18168d"><div class="ttname"><a href="../../db/d71/classez_open_ddl_reader_element.htm#a38abb06f534da456ec4e0ae2ea18168d">ezOpenDdlReaderElement::GetFirstChild</a></div><div class="ttdeci">const EZ_ALWAYS_INLINE ezOpenDdlReaderElement * GetFirstChild() const</div><div class="ttdoc">If this is a custom type element, the returned pointer is to the first child element.</div><div class="ttdef"><b>Definition:</b> OpenDdlReader.h:40</div></div>
<div class="ttc" id="aclassez_open_ddl_reader_element_htm_a313ad4a946d81985b1e335acce51e14a"><div class="ttname"><a href="../../db/d71/classez_open_ddl_reader_element.htm#a313ad4a946d81985b1e335acce51e14a">ezOpenDdlReaderElement::GetPrimitivesInt8</a></div><div class="ttdeci">const EZ_ALWAYS_INLINE ezInt8 * GetPrimitivesInt8() const</div><div class="ttdoc">Returns a pointer to the primitive data cast to a specific type. Only valid if GetPrimitivesType() ac...</div><div class="ttdef"><b>Definition:</b> OpenDdlReader.h:62</div></div>
<div class="ttc" id="aclassez_open_ddl_reader_htm"><div class="ttname"><a href="../../d1/da2/classez_open_ddl_reader.htm">ezOpenDdlReader</a></div><div class="ttdoc">An OpenDDL reader parses an entire DDL document and creates an in-memory representation of the docume...</div><div class="ttdef"><b>Definition:</b> OpenDdlReader.h:117</div></div>
<div class="ttc" id="aclassez_open_ddl_parser_htm_a1a0db3b2a041260cb77ff4541c96f8bd"><div class="ttname"><a href="../../d8/d21/classez_open_ddl_parser.htm#a1a0db3b2a041260cb77ff4541c96f8bd">ezOpenDdlParser::OnBeginPrimitiveList</a></div><div class="ttdeci">virtual void OnBeginPrimitiveList(ezOpenDdlPrimitiveType type, const char *szName, bool bGlobalName)=0</div><div class="ttdoc">Called when a new primitive object is encountered.</div></div>
<div class="ttc" id="aclassez_log_interface_htm"><div class="ttname"><a href="../../d2/d9e/classez_log_interface.htm">ezLogInterface</a></div><div class="ttdoc">Base class for all logging classes.</div><div class="ttdef"><b>Definition:</b> Log.h:76</div></div>
<div class="ttc" id="aclassez_open_ddl_parser_htm_a605a018f13749ca47fc9651cf7b377d5"><div class="ttname"><a href="../../d8/d21/classez_open_ddl_parser.htm#a605a018f13749ca47fc9651cf7b377d5">ezOpenDdlParser::OnPrimitiveInt32</a></div><div class="ttdeci">virtual void OnPrimitiveInt32(ezUInt32 count, const ezInt32 *pData, bool bThisIsAll)=0</div><div class="ttdoc">Called when data for a primitive type is available. More than one value may be reported at a time.</div></div>
<div class="ttc" id="aclassez_open_ddl_reader_element_htm_aeaf3c79427e0d99a76e869ba9b0e9a64"><div class="ttname"><a href="../../db/d71/classez_open_ddl_reader_element.htm#aeaf3c79427e0d99a76e869ba9b0e9a64">ezOpenDdlReaderElement::IsCustomType</a></div><div class="ttdeci">EZ_ALWAYS_INLINE bool IsCustomType(const char *szTypeName) const</div><div class="ttdoc">Whether this is a custom object type of the requested type.</div><div class="ttdef"><b>Definition:</b> OpenDdlReader.h:19</div></div>
<div class="ttc" id="aclassez_open_ddl_parser_htm_a173e6deb5618bf99dfe784b111ef4d2f"><div class="ttname"><a href="../../d8/d21/classez_open_ddl_parser.htm#a173e6deb5618bf99dfe784b111ef4d2f">ezOpenDdlParser::OnBeginObject</a></div><div class="ttdeci">virtual void OnBeginObject(const char *szType, const char *szName, bool bGlobalName)=0</div><div class="ttdoc">Called when a new object is encountered.</div></div>
<div class="ttc" id="aclassez_open_ddl_parser_htm_a02731939138c89a51e9e80d3dff2e41b"><div class="ttname"><a href="../../d8/d21/classez_open_ddl_parser.htm#a02731939138c89a51e9e80d3dff2e41b">ezOpenDdlParser::OnPrimitiveUInt16</a></div><div class="ttdeci">virtual void OnPrimitiveUInt16(ezUInt32 count, const ezUInt16 *pData, bool bThisIsAll)=0</div><div class="ttdoc">Called when data for a primitive type is available. More than one value may be reported at a time.</div></div>
<div class="ttc" id="aclassez_open_ddl_parser_htm_a7d1297a465e285d7533f9a74c2bd6ba2"><div class="ttname"><a href="../../d8/d21/classez_open_ddl_parser.htm#a7d1297a465e285d7533f9a74c2bd6ba2">ezOpenDdlParser::OnPrimitiveInt16</a></div><div class="ttdeci">virtual void OnPrimitiveInt16(ezUInt32 count, const ezInt16 *pData, bool bThisIsAll)=0</div><div class="ttdoc">Called when data for a primitive type is available. More than one value may be reported at a time.</div></div>
<div class="ttc" id="aclassez_log_htm_ac43e2f0e2d7a5faef5fc24ccbf84f937"><div class="ttname"><a href="../../dc/d9e/classez_log.htm#ac43e2f0e2d7a5faef5fc24ccbf84f937">ezLog::GetThreadLocalLogSystem</a></div><div class="ttdeci">static ezLogInterface * GetThreadLocalLogSystem()</div><div class="ttdoc">Returns the currently set default logging system, or a thread local instance of ezGlobalLog,...</div><div class="ttdef"><b>Definition:</b> Log.cpp:332</div></div>
<div class="ttc" id="aclassez_open_ddl_reader_element_htm_a3df7499476931d61909d9dd883f14a19"><div class="ttname"><a href="../../db/d71/classez_open_ddl_reader_element.htm#a3df7499476931d61909d9dd883f14a19">ezOpenDdlReaderElement::GetSibling</a></div><div class="ttdeci">const EZ_ALWAYS_INLINE ezOpenDdlReaderElement * GetSibling() const</div><div class="ttdoc">If the parent is a custom type element, the next child after this is returned.</div><div class="ttdef"><b>Definition:</b> OpenDdlReader.h:46</div></div>
<div class="ttc" id="aclassez_dynamic_array_htm"><div class="ttname"><a href="../../d2/d4f/classez_dynamic_array.htm">ezDynamicArray&lt; ezUInt8 &gt;</a></div></div>
<div class="ttc" id="aclassez_open_ddl_reader_element_htm_a6fca5cd3571ccdb8fefb189586af08cc"><div class="ttname"><a href="../../db/d71/classez_open_ddl_reader_element.htm#a6fca5cd3571ccdb8fefb189586af08cc">ezOpenDdlReaderElement::IsNameGlobal</a></div><div class="ttdeci">EZ_ALWAYS_INLINE bool IsNameGlobal() const</div><div class="ttdoc">Returns whether the element name is a global or a local name.</div><div class="ttdef"><b>Definition:</b> OpenDdlReader.h:34</div></div>
<div class="ttc" id="aclassez_open_ddl_reader_element_htm_ab656a50e56edb7c0079de118b83aa4b7"><div class="ttname"><a href="../../db/d71/classez_open_ddl_reader_element.htm#ab656a50e56edb7c0079de118b83aa4b7">ezOpenDdlReaderElement::GetPrimitivesInt64</a></div><div class="ttdeci">const EZ_ALWAYS_INLINE ezInt64 * GetPrimitivesInt64() const</div><div class="ttdoc">Returns a pointer to the primitive data cast to a specific type. Only valid if GetPrimitivesType() ac...</div><div class="ttdef"><b>Definition:</b> OpenDdlReader.h:71</div></div>
<div class="ttc" id="aclassez_open_ddl_parser_htm_a55f5f1a605c2e040f4e29bb7fa5df339"><div class="ttname"><a href="../../d8/d21/classez_open_ddl_parser.htm#a55f5f1a605c2e040f4e29bb7fa5df339">ezOpenDdlParser::OnPrimitiveFloat</a></div><div class="ttdeci">virtual void OnPrimitiveFloat(ezUInt32 count, const float *pData, bool bThisIsAll)=0</div><div class="ttdoc">Called when data for a primitive type is available. More than one value may be reported at a time.</div></div>
<div class="ttc" id="aclassez_open_ddl_parser_htm_a50a57ea749becd046b6ee00761d20925"><div class="ttname"><a href="../../d8/d21/classez_open_ddl_parser.htm#a50a57ea749becd046b6ee00761d20925">ezOpenDdlParser::OnPrimitiveUInt64</a></div><div class="ttdeci">virtual void OnPrimitiveUInt64(ezUInt32 count, const ezUInt64 *pData, bool bThisIsAll)=0</div><div class="ttdoc">Called when data for a primitive type is available. More than one value may be reported at a time.</div></div>
<div class="ttc" id="aclassez_map_htm"><div class="ttname"><a href="../../d1/d79/classez_map.htm">ezMap</a></div><div class="ttdef"><b>Definition:</b> Map.h:328</div></div>
<div class="ttc" id="aclassez_open_ddl_reader_element_htm_a99b4dd2891e42dd4cb50ee6c143dbd31"><div class="ttname"><a href="../../db/d71/classez_open_ddl_reader_element.htm#a99b4dd2891e42dd4cb50ee6c143dbd31">ezOpenDdlReaderElement::GetPrimitivesBool</a></div><div class="ttdeci">const EZ_ALWAYS_INLINE bool * GetPrimitivesBool() const</div><div class="ttdoc">Returns a pointer to the primitive data cast to a specific type. Only valid if GetPrimitivesType() ac...</div><div class="ttdef"><b>Definition:</b> OpenDdlReader.h:59</div></div>
<div class="ttc" id="aclassez_open_ddl_reader_element_htm_a0ace3a4797f0d1836af66515d5d8a4b9"><div class="ttname"><a href="../../db/d71/classez_open_ddl_reader_element.htm#a0ace3a4797f0d1836af66515d5d8a4b9">ezOpenDdlReaderElement::GetPrimitivesString</a></div><div class="ttdeci">const EZ_ALWAYS_INLINE ezStringView * GetPrimitivesString() const</div><div class="ttdoc">Returns a pointer to the primitive data cast to a specific type. Only valid if GetPrimitivesType() ac...</div><div class="ttdef"><b>Definition:</b> OpenDdlReader.h:92</div></div>
<div class="ttc" id="aclassez_open_ddl_reader_element_htm_aa366937307876fe3be153b8fc15f342d"><div class="ttname"><a href="../../db/d71/classez_open_ddl_reader_element.htm#aa366937307876fe3be153b8fc15f342d">ezOpenDdlReaderElement::GetPrimitivesDouble</a></div><div class="ttdeci">const EZ_ALWAYS_INLINE double * GetPrimitivesDouble() const</div><div class="ttdoc">Returns a pointer to the primitive data cast to a specific type. Only valid if GetPrimitivesType() ac...</div><div class="ttdef"><b>Definition:</b> OpenDdlReader.h:89</div></div>
<div class="ttc" id="aclassez_open_ddl_parser_htm_a1082b07190d2f2e55ca762f07e3b2e99"><div class="ttname"><a href="../../d8/d21/classez_open_ddl_parser.htm#a1082b07190d2f2e55ca762f07e3b2e99">ezOpenDdlParser::OnPrimitiveBool</a></div><div class="ttdeci">virtual void OnPrimitiveBool(ezUInt32 count, const bool *pData, bool bThisIsAll)=0</div><div class="ttdoc">Called when data for a primitive type is available. More than one value may be reported at a time.</div></div>
<div class="ttc" id="aclassez_open_ddl_parser_htm_a28ebd40f70e3a03e5815b2d7ad6ac5c4"><div class="ttname"><a href="../../d8/d21/classez_open_ddl_parser.htm#a28ebd40f70e3a03e5815b2d7ad6ac5c4">ezOpenDdlParser::OnPrimitiveUInt32</a></div><div class="ttdeci">virtual void OnPrimitiveUInt32(ezUInt32 count, const ezUInt32 *pData, bool bThisIsAll)=0</div><div class="ttdoc">Called when data for a primitive type is available. More than one value may be reported at a time.</div></div>
<div class="ttc" id="aclassez_open_ddl_reader_element_htm_a224ea9fe7f42b482640f2ca71332e5ce"><div class="ttname"><a href="../../db/d71/classez_open_ddl_reader_element.htm#a224ea9fe7f42b482640f2ca71332e5ce">ezOpenDdlReaderElement::GetPrimitivesUInt32</a></div><div class="ttdeci">const EZ_ALWAYS_INLINE ezUInt32 * GetPrimitivesUInt32() const</div><div class="ttdoc">Returns a pointer to the primitive data cast to a specific type. Only valid if GetPrimitivesType() ac...</div><div class="ttdef"><b>Definition:</b> OpenDdlReader.h:80</div></div>
<div class="ttc" id="astructez_string_view_htm"><div class="ttname"><a href="../../de/db8/structez_string_view.htm">ezStringView</a></div><div class="ttdoc">ezStringView represent a read-only sub-string of a larger string, as it can store a dedicated string ...</div><div class="ttdef"><b>Definition:</b> StringView.h:23</div></div>
<div class="ttc" id="aclassez_open_ddl_reader_element_htm"><div class="ttname"><a href="../../db/d71/classez_open_ddl_reader_element.htm">ezOpenDdlReaderElement</a></div><div class="ttdoc">Represents a single 'object' in a DDL document, e.g. either a custom type or a primitives list.</div><div class="ttdef"><b>Definition:</b> OpenDdlReader.h:10</div></div>
<div class="ttc" id="aclassez_hybrid_array_htm"><div class="ttname"><a href="../../d8/deb/classez_hybrid_array.htm">ezHybridArray&lt; ezUInt8 *, 16 &gt;</a></div></div>
<div class="ttc" id="aclassez_open_ddl_parser_htm_ab8e3edb1873b57306d8a83ff3f17633b"><div class="ttname"><a href="../../d8/d21/classez_open_ddl_parser.htm#ab8e3edb1873b57306d8a83ff3f17633b">ezOpenDdlParser::OnEndPrimitiveList</a></div><div class="ttdeci">virtual void OnEndPrimitiveList()=0</div><div class="ttdoc">Called when the end of a primitive object is encountered.</div></div>
<div class="ttc" id="aclassez_open_ddl_reader_element_htm_aece3c41a01a13984c2b064165ff44f48"><div class="ttname"><a href="../../db/d71/classez_open_ddl_reader_element.htm#aece3c41a01a13984c2b064165ff44f48">ezOpenDdlReaderElement::GetPrimitivesUInt64</a></div><div class="ttdeci">const EZ_ALWAYS_INLINE ezUInt64 * GetPrimitivesUInt64() const</div><div class="ttdoc">Returns a pointer to the primitive data cast to a specific type. Only valid if GetPrimitivesType() ac...</div><div class="ttdef"><b>Definition:</b> OpenDdlReader.h:83</div></div>
<div class="ttc" id="aclassez_open_ddl_reader_element_htm_a6728bbda12b21856fed3df7e293bfbde"><div class="ttname"><a href="../../db/d71/classez_open_ddl_reader_element.htm#a6728bbda12b21856fed3df7e293bfbde">ezOpenDdlReaderElement::GetPrimitivesFloat</a></div><div class="ttdeci">const EZ_ALWAYS_INLINE float * GetPrimitivesFloat() const</div><div class="ttdoc">Returns a pointer to the primitive data cast to a specific type. Only valid if GetPrimitivesType() ac...</div><div class="ttdef"><b>Definition:</b> OpenDdlReader.h:86</div></div>
<div class="ttc" id="aclassez_open_ddl_reader_element_htm_a56de7dc69754e8859722093ac6d61b68"><div class="ttname"><a href="../../db/d71/classez_open_ddl_reader_element.htm#a56de7dc69754e8859722093ac6d61b68">ezOpenDdlReaderElement::GetPrimitivesInt32</a></div><div class="ttdeci">const EZ_ALWAYS_INLINE ezInt32 * GetPrimitivesInt32() const</div><div class="ttdoc">Returns a pointer to the primitive data cast to a specific type. Only valid if GetPrimitivesType() ac...</div><div class="ttdef"><b>Definition:</b> OpenDdlReader.h:68</div></div>
<div class="ttc" id="aclassez_open_ddl_reader_element_htm_ab926befcdfce5894ef38ed23b7939840"><div class="ttname"><a href="../../db/d71/classez_open_ddl_reader_element.htm#ab926befcdfce5894ef38ed23b7939840">ezOpenDdlReaderElement::GetPrimitivesUInt8</a></div><div class="ttdeci">const EZ_ALWAYS_INLINE ezUInt8 * GetPrimitivesUInt8() const</div><div class="ttdoc">Returns a pointer to the primitive data cast to a specific type. Only valid if GetPrimitivesType() ac...</div><div class="ttdef"><b>Definition:</b> OpenDdlReader.h:74</div></div>
<div class="ttc" id="aclassez_open_ddl_parser_htm_adf261f5a3b6f7f96c9cac396fd8909b8"><div class="ttname"><a href="../../d8/d21/classez_open_ddl_parser.htm#adf261f5a3b6f7f96c9cac396fd8909b8">ezOpenDdlParser::OnParsingError</a></div><div class="ttdeci">virtual void OnParsingError(const char *szMessage, bool bFatal, ezUInt32 uiLine, ezUInt32 uiColumn)</div><div class="ttdoc">Called when something unexpected is encountered in the document.</div><div class="ttdef"><b>Definition:</b> OpenDdlParser.h:83</div></div>
<div class="ttc" id="aclassez_open_ddl_reader_element_htm_abfec295241a8672278f57858ad014f91"><div class="ttname"><a href="../../db/d71/classez_open_ddl_reader_element.htm#abfec295241a8672278f57858ad014f91">ezOpenDdlReaderElement::GetPrimitivesInt16</a></div><div class="ttdeci">const EZ_ALWAYS_INLINE ezInt16 * GetPrimitivesInt16() const</div><div class="ttdoc">Returns a pointer to the primitive data cast to a specific type. Only valid if GetPrimitivesType() ac...</div><div class="ttdef"><b>Definition:</b> OpenDdlReader.h:65</div></div>
<div class="ttc" id="aclassez_open_ddl_parser_htm_a102344296a105a4ad7f6240f8f1eaee9"><div class="ttname"><a href="../../d8/d21/classez_open_ddl_parser.htm#a102344296a105a4ad7f6240f8f1eaee9">ezOpenDdlParser::OnPrimitiveUInt8</a></div><div class="ttdeci">virtual void OnPrimitiveUInt8(ezUInt32 count, const ezUInt8 *pData, bool bThisIsAll)=0</div><div class="ttdoc">Called when data for a primitive type is available. More than one value may be reported at a time.</div></div>
<div class="ttc" id="aclassez_open_ddl_reader_element_htm_a1cf22aa3249fc426e73ad09d7a2e3a3e"><div class="ttname"><a href="../../db/d71/classez_open_ddl_reader_element.htm#a1cf22aa3249fc426e73ad09d7a2e3a3e">ezOpenDdlReaderElement::HasName</a></div><div class="ttdeci">EZ_ALWAYS_INLINE bool HasName() const</div><div class="ttdoc">Whether the name of the object is non-empty.</div><div class="ttdef"><b>Definition:</b> OpenDdlReader.h:28</div></div>
<div class="ttc" id="aclassez_string_utils_htm_a26f868ce8249b864f448837638ffde33"><div class="ttname"><a href="../../de/df8/classez_string_utils.htm#a26f868ce8249b864f448837638ffde33">ezStringUtils::IsNullOrEmpty</a></div><div class="ttdeci">static constexpr bool IsNullOrEmpty(const T *pString)</div><div class="ttdoc">Returns true, if the given string is a nullptr pointer or a string that immediately terminates with a...</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_64fdcb4094ee5a27b054d4fa23e28e01.htm">IO</a></li><li class="navelem"><b>OpenDdlReader.h</b></li>
    <li class="footer">Generated on Sat Mar 25 2023 19:21:55 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
