<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: Code/Engine/Foundation/IO/OpenDdlWriter.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 21.6</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search','.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d3/d29/_open_ddl_writer_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">OpenDdlWriter.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;Foundation/Basics.h&gt;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;Foundation/IO/OpenDdlParser.h&gt;</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160; </div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">// TODO</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">// Write primitives in HEX (esp. float)</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160; </div>
<div class="line"><a name="l00012"></a><span class="lineno"><a class="line" href="../../d0/ddb/classez_open_ddl_writer.htm">   12</a></span>&#160;<span class="keyword">class </span>EZ_FOUNDATION_DLL <a class="code" href="../../d0/ddb/classez_open_ddl_writer.htm">ezOpenDdlWriter</a></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;{</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00015"></a><span class="lineno"><a class="line" href="../../d0/ddb/classez_open_ddl_writer.htm#ac979ff3b3595bc87506be39e55b0c5d2">   15</a></span>&#160;  <span class="keyword">enum class</span> <a class="code" href="../../d0/ddb/classez_open_ddl_writer.htm#ac979ff3b3595bc87506be39e55b0c5d2">TypeStringMode</a></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;  {</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;    Compliant,            </div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    ShortenedUnsignedInt, </div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    Shortest              </div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;  };</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160; </div>
<div class="line"><a name="l00023"></a><span class="lineno"><a class="line" href="../../d0/ddb/classez_open_ddl_writer.htm#a84e5b5178414d764add6a840a0bedeaa">   23</a></span>&#160;  <span class="keyword">enum class</span> <a class="code" href="../../d0/ddb/classez_open_ddl_writer.htm#a84e5b5178414d764add6a840a0bedeaa">FloatPrecisionMode</a></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;  {</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    Readable, </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    Exact,    </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;  };</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160; </div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;  <a class="code" href="../../d0/ddb/classez_open_ddl_writer.htm">ezOpenDdlWriter</a>();</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160; </div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;  <span class="keyword">virtual</span> ~<a class="code" href="../../d0/ddb/classez_open_ddl_writer.htm">ezOpenDdlWriter</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160; </div>
<div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="../../d0/ddb/classez_open_ddl_writer.htm#a3e94d3ebe2ded7ee6ee684343fdb787a">   35</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d0/ddb/classez_open_ddl_writer.htm#a3e94d3ebe2ded7ee6ee684343fdb787a">SetOutputStream</a>(<a class="code" href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a>* pOutput) { m_pOutput = pOutput; } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160; </div>
<div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="../../d0/ddb/classez_open_ddl_writer.htm#aabcbc3751bd685c00192557340801853">   38</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d0/ddb/classez_open_ddl_writer.htm#aabcbc3751bd685c00192557340801853">SetCompactMode</a>(<span class="keywordtype">bool</span> compact) { m_bCompactMode = compact; } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160; </div>
<div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="../../d0/ddb/classez_open_ddl_writer.htm#ae057460ea99c7db36bdd803064b89aff">   41</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d0/ddb/classez_open_ddl_writer.htm#ae057460ea99c7db36bdd803064b89aff">SetPrimitiveTypeStringMode</a>(<a class="code" href="../../d0/ddb/classez_open_ddl_writer.htm#ac979ff3b3595bc87506be39e55b0c5d2">TypeStringMode</a> mode) { m_TypeStringMode = mode; }</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160; </div>
<div class="line"><a name="l00044"></a><span class="lineno"><a class="line" href="../../d0/ddb/classez_open_ddl_writer.htm#a5f69f2dfc0192439b1a1839599a3d26c">   44</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d0/ddb/classez_open_ddl_writer.htm#a5f69f2dfc0192439b1a1839599a3d26c">SetFloatPrecisionMode</a>(<a class="code" href="../../d0/ddb/classez_open_ddl_writer.htm#a84e5b5178414d764add6a840a0bedeaa">FloatPrecisionMode</a> mode) { m_FloatPrecisionMode = mode; }</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160; </div>
<div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="../../d0/ddb/classez_open_ddl_writer.htm#a09cf82bc0c2e3035a75180235b597189">   47</a></span>&#160;  <a class="code" href="../../d0/ddb/classez_open_ddl_writer.htm#a84e5b5178414d764add6a840a0bedeaa">FloatPrecisionMode</a> <a class="code" href="../../d0/ddb/classez_open_ddl_writer.htm#a09cf82bc0c2e3035a75180235b597189">GetFloatPrecisionMode</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_FloatPrecisionMode; }</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160; </div>
<div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="../../d0/ddb/classez_open_ddl_writer.htm#ad503564c8d45134785bbf70802938578">   51</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d0/ddb/classez_open_ddl_writer.htm#ad503564c8d45134785bbf70802938578">SetIndentation</a>(ezInt8 iIndentation) { m_iIndentation = iIndentation; }</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160; </div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;  <span class="keywordtype">void</span> BeginObject(<span class="keyword">const</span> <span class="keywordtype">char</span>* szType, <span class="keyword">const</span> <span class="keywordtype">char</span>* szName = <span class="keyword">nullptr</span>, <span class="keywordtype">bool</span> bGlobalName = <span class="keyword">false</span>, <span class="keywordtype">bool</span> bSingleLine = <span class="keyword">false</span>); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160; </div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;  <span class="keywordtype">void</span> EndObject(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160; </div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;  <span class="keywordtype">void</span> BeginPrimitiveList(ezOpenDdlPrimitiveType type, <span class="keyword">const</span> <span class="keywordtype">char</span>* szName = <span class="keyword">nullptr</span>, <span class="keywordtype">bool</span> bGlobalName = <span class="keyword">false</span>); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160; </div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  <span class="keywordtype">void</span> EndPrimitiveList(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160; </div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;  <span class="keywordtype">void</span> WriteBool(<span class="keyword">const</span> <span class="keywordtype">bool</span>* pValues, ezUInt32 count = 1); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160; </div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;  <span class="keywordtype">void</span> WriteInt8(<span class="keyword">const</span> ezInt8* pValues, ezUInt32 count = 1); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160; </div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;  <span class="keywordtype">void</span> WriteInt16(<span class="keyword">const</span> ezInt16* pValues, ezUInt32 count = 1); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160; </div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;  <span class="keywordtype">void</span> WriteInt32(<span class="keyword">const</span> ezInt32* pValues, ezUInt32 count = 1); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160; </div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;  <span class="keywordtype">void</span> WriteInt64(<span class="keyword">const</span> ezInt64* pValues, ezUInt32 count = 1); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160; </div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;  <span class="keywordtype">void</span> WriteUInt8(<span class="keyword">const</span> ezUInt8* pValues, ezUInt32 count = 1); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160; </div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;  <span class="keywordtype">void</span> WriteUInt16(<span class="keyword">const</span> ezUInt16* pValues, ezUInt32 count = 1); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160; </div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;  <span class="keywordtype">void</span> WriteUInt32(<span class="keyword">const</span> ezUInt32* pValues, ezUInt32 count = 1); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160; </div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;  <span class="keywordtype">void</span> WriteUInt64(<span class="keyword">const</span> ezUInt64* pValues, ezUInt32 count = 1); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160; </div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  <span class="keywordtype">void</span> WriteFloat(<span class="keyword">const</span> <span class="keywordtype">float</span>* pValues, ezUInt32 count = 1); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160; </div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;  <span class="keywordtype">void</span> WriteDouble(<span class="keyword">const</span> <span class="keywordtype">double</span>* pValues, ezUInt32 count = 1); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160; </div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;  <span class="keywordtype">void</span> WriteString(<span class="keyword">const</span> <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a>&amp; <span class="keywordtype">string</span>); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160; </div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;  <span class="keywordtype">void</span> WriteBinaryAsString(<span class="keyword">const</span> <span class="keywordtype">void</span>* pData, ezUInt32 uiBytes);</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160; </div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160; </div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;  <span class="keyword">enum</span> State</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;  {</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    Invalid = -5,</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    Empty = -4,</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    ObjectSingleLine = -3,</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    ObjectMultiLine = -2,</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    ObjectStart = -1,</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    PrimitivesBool = 0, <span class="comment">// same values as in ezOpenDdlPrimitiveType to enable casting</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    PrimitivesInt8,</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    PrimitivesInt16,</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    PrimitivesInt32,</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    PrimitivesInt64,</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    PrimitivesUInt8,</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    PrimitivesUInt16,</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    PrimitivesUInt32,</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    PrimitivesUInt64,</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    PrimitivesFloat,</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    PrimitivesDouble,</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    PrimitivesString,</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;  };</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160; </div>
<div class="line"><a name="l00127"></a><span class="lineno"><a class="line" href="../../d3/d22/structez_open_ddl_writer_1_1_ddl_state.htm">  127</a></span>&#160;  <span class="keyword">struct </span><a class="code" href="../../d3/d22/structez_open_ddl_writer_1_1_ddl_state.htm">DdlState</a></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;  {</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <a class="code" href="../../d3/d22/structez_open_ddl_writer_1_1_ddl_state.htm">DdlState</a>()</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;      : m_State(Empty)</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    {</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;      m_bPrimitivesWritten = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    }</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160; </div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    State m_State;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    <span class="keywordtype">bool</span> m_bPrimitivesWritten;</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;  };</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160; </div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;  EZ_ALWAYS_INLINE <span class="keywordtype">void</span> OutputString(<span class="keyword">const</span> <span class="keywordtype">char</span>* sz) { m_pOutput-&gt;WriteBytes(sz, <a class="code" href="../../de/df8/classez_string_utils.htm#ad44fcc9c80d1da803b7248cb88acefd4">ezStringUtils::GetStringElementCount</a>(sz)).IgnoreResult(); }</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;  EZ_ALWAYS_INLINE <span class="keywordtype">void</span> OutputString(<span class="keyword">const</span> <span class="keywordtype">char</span>* sz, ezUInt32 uiElementCount) { m_pOutput-&gt;WriteBytes(sz, uiElementCount).IgnoreResult(); }</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;  <span class="keywordtype">void</span> OutputEscapedString(<span class="keyword">const</span> <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a>&amp; <span class="keywordtype">string</span>);</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;  <span class="keywordtype">void</span> OutputIndentation();</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  <span class="keywordtype">void</span> OutputPrimitiveTypeNameCompliant(ezOpenDdlPrimitiveType type);</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;  <span class="keywordtype">void</span> OutputPrimitiveTypeNameShort(ezOpenDdlPrimitiveType type);</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;  <span class="keywordtype">void</span> OutputPrimitiveTypeNameShortest(ezOpenDdlPrimitiveType type);</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;  <span class="keywordtype">void</span> WritePrimitiveType(ezOpenDdlWriter::State exp);</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;  <span class="keywordtype">void</span> OutputObjectName(<span class="keyword">const</span> <span class="keywordtype">char</span>* szName, <span class="keywordtype">bool</span> bGlobalName);</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;  <span class="keywordtype">void</span> WriteBinaryAsHex(<span class="keyword">const</span> <span class="keywordtype">void</span>* pData, ezUInt32 uiBytes);</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;  <span class="keywordtype">void</span> OutputObjectBeginning();</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160; </div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;  ezInt32 m_iIndentation;</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;  <span class="keywordtype">bool</span> m_bCompactMode;</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;  TypeStringMode m_TypeStringMode;</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;  FloatPrecisionMode m_FloatPrecisionMode;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;  <a class="code" href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a>* m_pOutput;</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;  <a class="code" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a> m_Temp;</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160; </div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;  <a class="code" href="../../d8/deb/classez_hybrid_array.htm">ezHybridArray&lt;DdlState, 16&gt;</a> m_StateStack;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;};</div>
<div class="ttc" id="aclassez_hybrid_array_htm"><div class="ttname"><a href="../../d8/deb/classez_hybrid_array.htm">ezHybridArray</a></div><div class="ttdoc">A hybrid array uses in-place storage to handle the first few elements without any allocation....</div><div class="ttdef"><b>Definition:</b> HybridArray.h:12</div></div>
<div class="ttc" id="aclassez_open_ddl_writer_htm"><div class="ttname"><a href="../../d0/ddb/classez_open_ddl_writer.htm">ezOpenDdlWriter</a></div><div class="ttdoc">The base class for OpenDDL writers.</div><div class="ttdef"><b>Definition:</b> OpenDdlWriter.h:13</div></div>
<div class="ttc" id="aclassez_open_ddl_writer_htm_a09cf82bc0c2e3035a75180235b597189"><div class="ttname"><a href="../../d0/ddb/classez_open_ddl_writer.htm#a09cf82bc0c2e3035a75180235b597189">ezOpenDdlWriter::GetFloatPrecisionMode</a></div><div class="ttdeci">FloatPrecisionMode GetFloatPrecisionMode() const</div><div class="ttdoc">Returns how float values are output.</div><div class="ttdef"><b>Definition:</b> OpenDdlWriter.h:47</div></div>
<div class="ttc" id="aclassez_open_ddl_writer_htm_a3e94d3ebe2ded7ee6ee684343fdb787a"><div class="ttname"><a href="../../d0/ddb/classez_open_ddl_writer.htm#a3e94d3ebe2ded7ee6ee684343fdb787a">ezOpenDdlWriter::SetOutputStream</a></div><div class="ttdeci">void SetOutputStream(ezStreamWriter *pOutput)</div><div class="ttdoc">All output is written to this binary stream.</div><div class="ttdef"><b>Definition:</b> OpenDdlWriter.h:35</div></div>
<div class="ttc" id="aclassez_open_ddl_writer_htm_a5f69f2dfc0192439b1a1839599a3d26c"><div class="ttname"><a href="../../d0/ddb/classez_open_ddl_writer.htm#a5f69f2dfc0192439b1a1839599a3d26c">ezOpenDdlWriter::SetFloatPrecisionMode</a></div><div class="ttdeci">void SetFloatPrecisionMode(FloatPrecisionMode mode)</div><div class="ttdoc">Configures how float values are output.</div><div class="ttdef"><b>Definition:</b> OpenDdlWriter.h:44</div></div>
<div class="ttc" id="aclassez_open_ddl_writer_htm_a84e5b5178414d764add6a840a0bedeaa"><div class="ttname"><a href="../../d0/ddb/classez_open_ddl_writer.htm#a84e5b5178414d764add6a840a0bedeaa">ezOpenDdlWriter::FloatPrecisionMode</a></div><div class="ttdeci">FloatPrecisionMode</div><div class="ttdef"><b>Definition:</b> OpenDdlWriter.h:24</div></div>
<div class="ttc" id="aclassez_open_ddl_writer_htm_aabcbc3751bd685c00192557340801853"><div class="ttname"><a href="../../d0/ddb/classez_open_ddl_writer.htm#aabcbc3751bd685c00192557340801853">ezOpenDdlWriter::SetCompactMode</a></div><div class="ttdeci">void SetCompactMode(bool compact)</div><div class="ttdoc">Configures how much whitespace is output.</div><div class="ttdef"><b>Definition:</b> OpenDdlWriter.h:38</div></div>
<div class="ttc" id="aclassez_open_ddl_writer_htm_ac979ff3b3595bc87506be39e55b0c5d2"><div class="ttname"><a href="../../d0/ddb/classez_open_ddl_writer.htm#ac979ff3b3595bc87506be39e55b0c5d2">ezOpenDdlWriter::TypeStringMode</a></div><div class="ttdeci">TypeStringMode</div><div class="ttdef"><b>Definition:</b> OpenDdlWriter.h:16</div></div>
<div class="ttc" id="aclassez_open_ddl_writer_htm_ad503564c8d45134785bbf70802938578"><div class="ttname"><a href="../../d0/ddb/classez_open_ddl_writer.htm#ad503564c8d45134785bbf70802938578">ezOpenDdlWriter::SetIndentation</a></div><div class="ttdeci">void SetIndentation(ezInt8 iIndentation)</div><div class="ttdoc">Allows to set the indentation. Negative values are possible. This makes it possible to set the indent...</div><div class="ttdef"><b>Definition:</b> OpenDdlWriter.h:51</div></div>
<div class="ttc" id="aclassez_open_ddl_writer_htm_ae057460ea99c7db36bdd803064b89aff"><div class="ttname"><a href="../../d0/ddb/classez_open_ddl_writer.htm#ae057460ea99c7db36bdd803064b89aff">ezOpenDdlWriter::SetPrimitiveTypeStringMode</a></div><div class="ttdeci">void SetPrimitiveTypeStringMode(TypeStringMode mode)</div><div class="ttdoc">Configures how verbose the type strings are going to be written.</div><div class="ttdef"><b>Definition:</b> OpenDdlWriter.h:41</div></div>
<div class="ttc" id="aclassez_stream_writer_htm"><div class="ttname"><a href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a></div><div class="ttdoc">Interface for binary out (write) streams.</div><div class="ttdef"><b>Definition:</b> Stream.h:102</div></div>
<div class="ttc" id="aclassez_string_builder_htm"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></div><div class="ttdoc">ezStringBuilder is a class that is meant for creating and modifying strings.</div><div class="ttdef"><b>Definition:</b> StringBuilder.h:35</div></div>
<div class="ttc" id="aclassez_string_utils_htm_ad44fcc9c80d1da803b7248cb88acefd4"><div class="ttname"><a href="../../de/df8/classez_string_utils.htm#ad44fcc9c80d1da803b7248cb88acefd4">ezStringUtils::GetStringElementCount</a></div><div class="ttdeci">static ezUInt32 GetStringElementCount(const T *pString, const T *pStringEnd=(const T *) -1)</div><div class="ttdoc">Returns the number of elements of type T that the string contains, until it hits an element that is z...</div><div class="ttdef"><b>Definition:</b> StringUtils_inl.h:46</div></div>
<div class="ttc" id="astructez_open_ddl_writer_1_1_ddl_state_htm"><div class="ttname"><a href="../../d3/d22/structez_open_ddl_writer_1_1_ddl_state.htm">ezOpenDdlWriter::DdlState</a></div><div class="ttdef"><b>Definition:</b> OpenDdlWriter.h:128</div></div>
<div class="ttc" id="astructez_string_view_htm"><div class="ttname"><a href="../../de/db8/structez_string_view.htm">ezStringView</a></div><div class="ttdoc">ezStringView represent a read-only sub-string of a larger string, as it can store a dedicated string ...</div><div class="ttdef"><b>Definition:</b> StringView.h:21</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_23fdee2f6995db16c755697cdf620cf4.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_035128dd2074b3ffa643fb93d2ba646f.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_b4afbf48febc82b6d8264e96ce32f252.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_53c6c6fb8a816921716f372d87aabbab.htm">IO</a></li><li class="navelem"><b>OpenDdlWriter.h</b></li>
    <li class="footer">Generated on Tue Jun 8 2021 14:33:52 for ezEngine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1 </li>
  </ul>
</div>
</body>
</html>
