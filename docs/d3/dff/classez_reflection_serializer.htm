<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: ezReflectionSerializer Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 21.10</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d3/dff/classez_reflection_serializer.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="../../db/da9/classez_reflection_serializer-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ezReflectionSerializer Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a412ccd22570bb60c7343d9550e878634"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/dff/classez_reflection_serializer.htm#a412ccd22570bb60c7343d9550e878634">WriteObjectToDDL</a> (<a class="el" href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a> &amp;stream, const <a class="el" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a> *pRtti, const void *pObject, bool bCompactMmode=true, <a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#ac979ff3b3595bc87506be39e55b0c5d2">ezOpenDdlWriter::TypeStringMode</a> typeMode=<a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#ac979ff3b3595bc87506be39e55b0c5d2ace42b65744e60ed9b32e7d4f750a66a5">ezOpenDdlWriter::TypeStringMode::Shortest</a>)</td></tr>
<tr class="memdesc:a412ccd22570bb60c7343d9550e878634"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes all property values of the reflected <em>pObject</em> of type <em>pRtti</em> to <em>stream</em> in DDL format.  <a href="../../d3/dff/classez_reflection_serializer.htm#a412ccd22570bb60c7343d9550e878634">More...</a><br /></td></tr>
<tr class="separator:a412ccd22570bb60c7343d9550e878634"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa1d1985165ba632a50bade451ca87628"><td class="memItemLeft" align="right" valign="top"><a id="aa1d1985165ba632a50bade451ca87628"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/dff/classez_reflection_serializer.htm#aa1d1985165ba632a50bade451ca87628">WriteObjectToDDL</a> (<a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm">ezOpenDdlWriter</a> &amp;ddl, const <a class="el" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a> *pRtti, const void *pObject, <a class="el" href="../../da/d89/classez_uuid.htm">ezUuid</a> guid=<a class="el" href="../../da/d89/classez_uuid.htm">ezUuid</a>())</td></tr>
<tr class="memdesc:aa1d1985165ba632a50bade451ca87628"><td class="mdescLeft">&#160;</td><td class="mdescRight">Overload of WriteObjectToDDL that takes an existing DDL writer to output to. <br /></td></tr>
<tr class="separator:aa1d1985165ba632a50bade451ca87628"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a60063d48288cde2f04991ad12efe3256"><td class="memItemLeft" align="right" valign="top"><a id="a60063d48288cde2f04991ad12efe3256"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/dff/classez_reflection_serializer.htm#a60063d48288cde2f04991ad12efe3256">WriteObjectToBinary</a> (<a class="el" href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a> &amp;stream, const <a class="el" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a> *pRtti, const void *pObject)</td></tr>
<tr class="memdesc:a60063d48288cde2f04991ad12efe3256"><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as WriteObjectToDDL but binary. <br /></td></tr>
<tr class="separator:a60063d48288cde2f04991ad12efe3256"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9c455eb1512189214ba86895896f713"><td class="memItemLeft" align="right" valign="top">static void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/dff/classez_reflection_serializer.htm#ab9c455eb1512189214ba86895896f713">ReadObjectFromDDL</a> (<a class="el" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a> &amp;stream, const <a class="el" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a> *&amp;pRtti)</td></tr>
<tr class="memdesc:ab9c455eb1512189214ba86895896f713"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reads the entire DDL data in the stream and restores a reflected object.  <a href="../../d3/dff/classez_reflection_serializer.htm#ab9c455eb1512189214ba86895896f713">More...</a><br /></td></tr>
<tr class="separator:ab9c455eb1512189214ba86895896f713"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d4e597dca62ca802a6cfbb8641eb5f7"><td class="memItemLeft" align="right" valign="top"><a id="a3d4e597dca62ca802a6cfbb8641eb5f7"></a>
static void *&#160;</td><td class="memItemRight" valign="bottom"><b>ReadObjectFromDDL</b> (const <a class="el" href="../../db/d71/classez_open_ddl_reader_element.htm">ezOpenDdlReaderElement</a> *pRootElement, const <a class="el" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a> *&amp;pRtti)</td></tr>
<tr class="separator:a3d4e597dca62ca802a6cfbb8641eb5f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a608b2066bf5169bef6cbcd15e4742adb"><td class="memItemLeft" align="right" valign="top"><a id="a608b2066bf5169bef6cbcd15e4742adb"></a>
static void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/dff/classez_reflection_serializer.htm#a608b2066bf5169bef6cbcd15e4742adb">ReadObjectFromBinary</a> (<a class="el" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a> &amp;stream, const <a class="el" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a> *&amp;pRtti)</td></tr>
<tr class="memdesc:a608b2066bf5169bef6cbcd15e4742adb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as ReadObjectFromDDL but binary. <br /></td></tr>
<tr class="separator:a608b2066bf5169bef6cbcd15e4742adb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0f84f938df5351fc7259437361addbb"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/dff/classez_reflection_serializer.htm#aa0f84f938df5351fc7259437361addbb">ReadObjectPropertiesFromDDL</a> (<a class="el" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a> &amp;stream, const <a class="el" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a> &amp;rtti, void *pObject)</td></tr>
<tr class="memdesc:aa0f84f938df5351fc7259437361addbb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reads the entire DDL data in the stream and sets all properties of the given object.  <a href="../../d3/dff/classez_reflection_serializer.htm#aa0f84f938df5351fc7259437361addbb">More...</a><br /></td></tr>
<tr class="separator:aa0f84f938df5351fc7259437361addbb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95479f051644a668d1bcff778deeb5c6"><td class="memItemLeft" align="right" valign="top"><a id="a95479f051644a668d1bcff778deeb5c6"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/dff/classez_reflection_serializer.htm#a95479f051644a668d1bcff778deeb5c6">ReadObjectPropertiesFromBinary</a> (<a class="el" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a> &amp;stream, const <a class="el" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a> &amp;rtti, void *pObject)</td></tr>
<tr class="memdesc:a95479f051644a668d1bcff778deeb5c6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as ReadObjectPropertiesFromDDL but binary. <br /></td></tr>
<tr class="separator:a95479f051644a668d1bcff778deeb5c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c22bef6cb508e5e6c8c7546cc2d2520"><td class="memItemLeft" align="right" valign="top">static void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/dff/classez_reflection_serializer.htm#a2c22bef6cb508e5e6c8c7546cc2d2520">Clone</a> (const void *pObject, const <a class="el" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a> *pType)</td></tr>
<tr class="memdesc:a2c22bef6cb508e5e6c8c7546cc2d2520"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clones pObject of type pType and returns it.  <a href="../../d3/dff/classez_reflection_serializer.htm#a2c22bef6cb508e5e6c8c7546cc2d2520">More...</a><br /></td></tr>
<tr class="separator:a2c22bef6cb508e5e6c8c7546cc2d2520"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa429ae97d5d035d6e5e079ce450a862a"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/dff/classez_reflection_serializer.htm#aa429ae97d5d035d6e5e079ce450a862a">Clone</a> (const void *pObject, void *pClone, const <a class="el" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a> *pType)</td></tr>
<tr class="memdesc:aa429ae97d5d035d6e5e079ce450a862a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clones pObject of type pType into the already existing pClone.  <a href="../../d3/dff/classez_reflection_serializer.htm#aa429ae97d5d035d6e5e079ce450a862a">More...</a><br /></td></tr>
<tr class="separator:aa429ae97d5d035d6e5e079ce450a862a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa94f1dd8aa990f6850377462cc46c74"><td class="memTemplParams" colspan="2"><a id="aaa94f1dd8aa990f6850377462cc46c74"></a>
template&lt;typename T &gt; </td></tr>
<tr class="memitem:aaa94f1dd8aa990f6850377462cc46c74"><td class="memTemplItemLeft" align="right" valign="top">static T *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../d3/dff/classez_reflection_serializer.htm#aaa94f1dd8aa990f6850377462cc46c74">Clone</a> (const T *pObject)</td></tr>
<tr class="memdesc:aaa94f1dd8aa990f6850377462cc46c74"><td class="mdescLeft">&#160;</td><td class="mdescRight">Templated convenience function that calls Clone and automatically deduces the type. <br /></td></tr>
<tr class="separator:aaa94f1dd8aa990f6850377462cc46c74"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a2c22bef6cb508e5e6c8c7546cc2d2520"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2c22bef6cb508e5e6c8c7546cc2d2520">&#9670;&nbsp;</a></span>Clone() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void * ezReflectionSerializer::Clone </td>
          <td>(</td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>pObject</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a> *&#160;</td>
          <td class="paramname"><em>pType</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Clones pObject of type pType and returns it. </p>
<p>In case a class derived from <a class="el" href="../../db/d45/classez_reflected_class.htm" title="All classes that should be dynamically reflectable, need to be derived from this base class.">ezReflectedClass</a> is passed in the correct derived type will automatically be determined so it is not necessary to put the exact type into pType, any derived class type will do. </p>

</div>
</div>
<a id="aa429ae97d5d035d6e5e079ce450a862a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa429ae97d5d035d6e5e079ce450a862a">&#9670;&nbsp;</a></span>Clone() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ezReflectionSerializer::Clone </td>
          <td>(</td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>pObject</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>pClone</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a> *&#160;</td>
          <td class="paramname"><em>pType</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Clones pObject of type pType into the already existing pClone. </p>
<p>In case a class derived from <a class="el" href="../../db/d45/classez_reflected_class.htm" title="All classes that should be dynamically reflectable, need to be derived from this base class.">ezReflectedClass</a> is passed in the correct derived type will automatically be determined so it is not necessary to put the exact type into pType, any derived class type will do. However, the function will assert if pObject and pClone actually have a different type. </p>

</div>
</div>
<a id="ab9c455eb1512189214ba86895896f713"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab9c455eb1512189214ba86895896f713">&#9670;&nbsp;</a></span>ReadObjectFromDDL()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void * ezReflectionSerializer::ReadObjectFromDDL </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a> &amp;&#160;</td>
          <td class="paramname"><em>stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a> *&amp;&#160;</td>
          <td class="paramname"><em>pRtti</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reads the entire DDL data in the stream and restores a reflected object. </p>
<p>The object type is read from the DDL information in the stream and the object is either allocated through the given allocator, or, if none is provided, the default allocator for the type is used.</p>
<p>All properties are set to the values as described in the DDL data, as long as the properties can be matched to the runtime type. </p>

</div>
</div>
<a id="aa0f84f938df5351fc7259437361addbb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa0f84f938df5351fc7259437361addbb">&#9670;&nbsp;</a></span>ReadObjectPropertiesFromDDL()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ezReflectionSerializer::ReadObjectPropertiesFromDDL </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a> &amp;&#160;</td>
          <td class="paramname"><em>stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a> &amp;&#160;</td>
          <td class="paramname"><em>rtti</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>pObject</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reads the entire DDL data in the stream and sets all properties of the given object. </p>
<p>All properties are set to the values as described in the DDL data, as long as the properties can be matched to the runtime type. The given object should ideally be of the same type as the object had that was written to the stream. However, if the types do not match or the properties have changed, the data will still be restored as good as possible.</p>
<p>The object itself will not be reset to the default state before the properties are set, so properties that do not appear in the DDL data, or cannot be matched, will not be affected. </p>

</div>
</div>
<a id="a412ccd22570bb60c7343d9550e878634"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a412ccd22570bb60c7343d9550e878634">&#9670;&nbsp;</a></span>WriteObjectToDDL()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ezReflectionSerializer::WriteObjectToDDL </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a> &amp;&#160;</td>
          <td class="paramname"><em>stream</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a> *&#160;</td>
          <td class="paramname"><em>pRtti</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>pObject</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bCompactMmode</em> = <code>true</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#ac979ff3b3595bc87506be39e55b0c5d2">ezOpenDdlWriter::TypeStringMode</a>&#160;</td>
          <td class="paramname"><em>typeMode</em> = <code><a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#ac979ff3b3595bc87506be39e55b0c5d2ace42b65744e60ed9b32e7d4f750a66a5">ezOpenDdlWriter::TypeStringMode::Shortest</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Writes all property values of the reflected <em>pObject</em> of type <em>pRtti</em> to <em>stream</em> in DDL format. </p>
<p>Using <a class="el" href="../../d3/dff/classez_reflection_serializer.htm#aa0f84f938df5351fc7259437361addbb" title="Reads the entire DDL data in the stream and sets all properties of the given object.">ReadObjectPropertiesFromDDL()</a> you can read those properties back into an existing object. Using <a class="el" href="../../d3/dff/classez_reflection_serializer.htm#ab9c455eb1512189214ba86895896f713" title="Reads the entire DDL data in the stream and restores a reflected object.">ReadObjectFromDDL()</a> an object of the same type is allocated and its properties are restored from the DDL data.</p>
<p>Non-existing objects (pObject == nullptr) are stored as objects of type "null". The compact mode and typeMode should be set according to whether the DDL data is used for interchange with other code only, or might also be read by humans.</p>
<p>Read-only properties are not written out, as they cannot be restored anyway. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Serialization/<a class="el" href="../../d1/d9c/_reflection_serializer_8h_source.htm">ReflectionSerializer.h</a></li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Serialization/Implementation/ReflectionSerializer.cpp</li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d3/dff/classez_reflection_serializer.htm">ezReflectionSerializer</a></li>
    <li class="footer">Generated on Sun Oct 9 2022 14:45:08 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
