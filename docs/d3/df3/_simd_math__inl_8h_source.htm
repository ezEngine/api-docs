<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/SimdMath/Implementation/SimdMath_inl.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 23.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d3/df3/_simd_math__inl_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">SimdMath_inl.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160; </div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">// static</span></div>
<div class="line"><a name="l00006"></a><span class="lineno"><a class="line" href="../../dc/d8c/structez_simd_math.htm#adb7b0415a46fb21a49d8aa6816a8d3c8">    6</a></span>&#160;EZ_FORCE_INLINE <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> <a class="code" href="../../dc/d8c/structez_simd_math.htm#adb7b0415a46fb21a49d8aa6816a8d3c8">ezSimdMath::Exp</a>(<span class="keyword">const</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>&amp; f)</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;{</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#if EZ_ENABLED(EZ_COMPILER_MSVC) &amp;&amp; EZ_SIMD_IMPLEMENTATION == EZ_SIMD_IMPLEMENTATION_SSE</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;  <span class="keywordflow">return</span> _mm_exp_ps(f.m_v);</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>(ezMath::Exp(f.x()), ezMath::Exp(f.y()), ezMath::Exp(f.z()), ezMath::Exp(f.w()));</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;}</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160; </div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">// static</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;EZ_FORCE_INLINE <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> ezSimdMath::Ln(<span class="keyword">const</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>&amp; f)</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;{</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor">#if EZ_ENABLED(EZ_COMPILER_MSVC) &amp;&amp; EZ_SIMD_IMPLEMENTATION == EZ_SIMD_IMPLEMENTATION_SSE</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;  <span class="keywordflow">return</span> _mm_log_ps(f.m_v);</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>(ezMath::Ln(f.x()), ezMath::Ln(f.y()), ezMath::Ln(f.z()), ezMath::Ln(f.w()));</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;}</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160; </div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">// static</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;EZ_FORCE_INLINE <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> ezSimdMath::Log2(<span class="keyword">const</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>&amp; f)</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;{</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#if EZ_ENABLED(EZ_COMPILER_MSVC) &amp;&amp; EZ_SIMD_IMPLEMENTATION == EZ_SIMD_IMPLEMENTATION_SSE</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;  <span class="keywordflow">return</span> _mm_log2_ps(f.m_v);</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>(ezMath::Log2(f.x()), ezMath::Log2(f.y()), ezMath::Log2(f.z()), ezMath::Log2(f.w()));</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;}</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160; </div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="comment">// static</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;EZ_FORCE_INLINE <a class="code" href="../../d6/d8e/classez_simd_vec4i.htm">ezSimdVec4i</a> ezSimdMath::Log2i(<span class="keyword">const</span> <a class="code" href="../../d6/d8e/classez_simd_vec4i.htm">ezSimdVec4i</a>&amp; i)</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d6/d8e/classez_simd_vec4i.htm">ezSimdVec4i</a>(<a class="code" href="../../db/d78/namespaceez_math.htm#a83324fcba89f4cb6ed5d1612bfaa0244">ezMath::Log2i</a>(i.x()), <a class="code" href="../../db/d78/namespaceez_math.htm#a83324fcba89f4cb6ed5d1612bfaa0244">ezMath::Log2i</a>(i.y()), <a class="code" href="../../db/d78/namespaceez_math.htm#a83324fcba89f4cb6ed5d1612bfaa0244">ezMath::Log2i</a>(i.z()), <a class="code" href="../../db/d78/namespaceez_math.htm#a83324fcba89f4cb6ed5d1612bfaa0244">ezMath::Log2i</a>(i.w()));</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;}</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160; </div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="comment">// static</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;EZ_FORCE_INLINE <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> ezSimdMath::Log10(<span class="keyword">const</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>&amp; f)</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;{</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="preprocessor">#if EZ_ENABLED(EZ_COMPILER_MSVC) &amp;&amp; EZ_SIMD_IMPLEMENTATION == EZ_SIMD_IMPLEMENTATION_SSE</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  <span class="keywordflow">return</span> _mm_log10_ps(f.m_v);</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>(ezMath::Log10(f.x()), ezMath::Log10(f.y()), ezMath::Log10(f.z()), ezMath::Log10(f.w()));</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;}</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160; </div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="comment">// static</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;EZ_FORCE_INLINE <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> ezSimdMath::Pow2(<span class="keyword">const</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>&amp; f)</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;{</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="preprocessor">#if EZ_ENABLED(EZ_COMPILER_MSVC) &amp;&amp; EZ_SIMD_IMPLEMENTATION == EZ_SIMD_IMPLEMENTATION_SSE</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  <span class="keywordflow">return</span> _mm_exp2_ps(f.m_v);</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>(ezMath::Pow2(f.x()), ezMath::Pow2(f.y()), ezMath::Pow2(f.z()), ezMath::Pow2(f.w()));</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;}</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160; </div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="comment">// static</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;EZ_FORCE_INLINE <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> ezSimdMath::Sin(<span class="keyword">const</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>&amp; f)</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;{</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="preprocessor">#if EZ_ENABLED(EZ_COMPILER_MSVC) &amp;&amp; EZ_SIMD_IMPLEMENTATION == EZ_SIMD_IMPLEMENTATION_SSE</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;  <span class="keywordflow">return</span> _mm_sin_ps(f.m_v);</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>(<a class="code" href="../../db/d78/namespaceez_math.htm#a05995060e61c0946e14619b45cd1adef">ezMath::Sin</a>(<a class="code" href="../../db/d6f/classez_angle.htm#af0d5329191f5e431830ad76f91f7cc0f">ezAngle::MakeFromRadian</a>(f.x())), <a class="code" href="../../db/d78/namespaceez_math.htm#a05995060e61c0946e14619b45cd1adef">ezMath::Sin</a>(<a class="code" href="../../db/d6f/classez_angle.htm#af0d5329191f5e431830ad76f91f7cc0f">ezAngle::MakeFromRadian</a>(f.y())), <a class="code" href="../../db/d78/namespaceez_math.htm#a05995060e61c0946e14619b45cd1adef">ezMath::Sin</a>(<a class="code" href="../../db/d6f/classez_angle.htm#af0d5329191f5e431830ad76f91f7cc0f">ezAngle::MakeFromRadian</a>(f.z())),</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <a class="code" href="../../db/d78/namespaceez_math.htm#a05995060e61c0946e14619b45cd1adef">ezMath::Sin</a>(<a class="code" href="../../db/d6f/classez_angle.htm#af0d5329191f5e431830ad76f91f7cc0f">ezAngle::MakeFromRadian</a>(f.w())));</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;}</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160; </div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="comment">// static</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;EZ_FORCE_INLINE <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> ezSimdMath::Cos(<span class="keyword">const</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>&amp; f)</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;{</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="preprocessor">#if EZ_ENABLED(EZ_COMPILER_MSVC) &amp;&amp; EZ_SIMD_IMPLEMENTATION == EZ_SIMD_IMPLEMENTATION_SSE</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  <span class="keywordflow">return</span> _mm_cos_ps(f.m_v);</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>(<a class="code" href="../../db/d78/namespaceez_math.htm#a40cf3173aac40e0e462c57728e9410ab">ezMath::Cos</a>(<a class="code" href="../../db/d6f/classez_angle.htm#af0d5329191f5e431830ad76f91f7cc0f">ezAngle::MakeFromRadian</a>(f.x())), <a class="code" href="../../db/d78/namespaceez_math.htm#a40cf3173aac40e0e462c57728e9410ab">ezMath::Cos</a>(<a class="code" href="../../db/d6f/classez_angle.htm#af0d5329191f5e431830ad76f91f7cc0f">ezAngle::MakeFromRadian</a>(f.y())), <a class="code" href="../../db/d78/namespaceez_math.htm#a40cf3173aac40e0e462c57728e9410ab">ezMath::Cos</a>(<a class="code" href="../../db/d6f/classez_angle.htm#af0d5329191f5e431830ad76f91f7cc0f">ezAngle::MakeFromRadian</a>(f.z())),</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    <a class="code" href="../../db/d78/namespaceez_math.htm#a40cf3173aac40e0e462c57728e9410ab">ezMath::Cos</a>(<a class="code" href="../../db/d6f/classez_angle.htm#af0d5329191f5e431830ad76f91f7cc0f">ezAngle::MakeFromRadian</a>(f.w())));</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;}</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160; </div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="comment">// static</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;EZ_FORCE_INLINE <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> ezSimdMath::Tan(<span class="keyword">const</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>&amp; f)</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;{</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="preprocessor">#if EZ_ENABLED(EZ_COMPILER_MSVC) &amp;&amp; EZ_SIMD_IMPLEMENTATION == EZ_SIMD_IMPLEMENTATION_SSE</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;  <span class="keywordflow">return</span> _mm_tan_ps(f.m_v);</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>(<a class="code" href="../../db/d78/namespaceez_math.htm#ade2e0a31251abf869a932b0d038a410b">ezMath::Tan</a>(<a class="code" href="../../db/d6f/classez_angle.htm#af0d5329191f5e431830ad76f91f7cc0f">ezAngle::MakeFromRadian</a>(f.x())), <a class="code" href="../../db/d78/namespaceez_math.htm#ade2e0a31251abf869a932b0d038a410b">ezMath::Tan</a>(<a class="code" href="../../db/d6f/classez_angle.htm#af0d5329191f5e431830ad76f91f7cc0f">ezAngle::MakeFromRadian</a>(f.y())), <a class="code" href="../../db/d78/namespaceez_math.htm#ade2e0a31251abf869a932b0d038a410b">ezMath::Tan</a>(<a class="code" href="../../db/d6f/classez_angle.htm#af0d5329191f5e431830ad76f91f7cc0f">ezAngle::MakeFromRadian</a>(f.z())),</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    <a class="code" href="../../db/d78/namespaceez_math.htm#ade2e0a31251abf869a932b0d038a410b">ezMath::Tan</a>(<a class="code" href="../../db/d6f/classez_angle.htm#af0d5329191f5e431830ad76f91f7cc0f">ezAngle::MakeFromRadian</a>(f.w())));</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;}</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160; </div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="comment">// static</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;EZ_ALWAYS_INLINE <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> ezSimdMath::ASin(<span class="keyword">const</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>&amp; f)</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;{</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>(ezMath::Pi&lt;float&gt;() * 0.5f) - ACos(f);</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;}</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160; </div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="comment">// 4th order polynomial approximation</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="comment">// 7 * 10^-5 radians precision</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="comment">// Reference : Handbook of Mathematical Functions (chapter : Elementary Transcendental Functions), M. Abramowitz and I.A. Stegun, Ed.</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="comment">// static</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;EZ_FORCE_INLINE <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> ezSimdMath::ACos(<span class="keyword">const</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>&amp; f)</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;{</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;  <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> x1 = f.Abs();</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;  <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> x2 = x1.CompMul(x1);</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;  <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> x3 = x2.CompMul(x1);</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160; </div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;  <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> s = x1 * -0.2121144f + <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>(1.5707288f);</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;  s += x2 * 0.0742610f;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;  s += x3 * -0.0187293f;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;  s = s.CompMul((<a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>(1.0f) - x1).GetSqrt());</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160; </div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;  <span class="keywordflow">return</span> ezSimdVec4f::Select(f &gt;= <a class="code" href="../../db/d0d/classez_simd_vec4f.htm#a1bbdedd947e594b431539062a2b50b95">ezSimdVec4f::MakeZero</a>(), s, <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>(ezMath::Pi&lt;float&gt;()) - s);</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;}</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160; </div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="comment">// Reference: https://seblagarde.wordpress.com/2014/12/01/inverse-trigonometric-functions-gpu-optimization-for-amd-gcn-architecture/</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="comment">// static</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;EZ_FORCE_INLINE <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> ezSimdMath::ATan(<span class="keyword">const</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>&amp; f)</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;{</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;  <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> x = f.Abs();</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;  <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> t0 = ezSimdVec4f::Select(x &lt; <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>(1.0f), x, x.GetReciprocal());</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;  <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> t1 = t0.CompMul(t0);</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;  <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> poly = <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>(0.0872929f);</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;  poly = <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>(-0.301895f) + poly.CompMul(t1);</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;  poly = <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>(1.0f) + poly.CompMul(t1);</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;  poly = poly.CompMul(t0);</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;  t0 = ezSimdVec4f::Select(x &lt; <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>(1.0f), poly, <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>(ezMath::Pi&lt;float&gt;() * 0.5f) - poly);</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160; </div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;  <span class="keywordflow">return</span> ezSimdVec4f::Select(f &lt; <a class="code" href="../../db/d0d/classez_simd_vec4f.htm#a1bbdedd947e594b431539062a2b50b95">ezSimdVec4f::MakeZero</a>(), -t0, t0);</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;}</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="anamespaceez_math_htm_a05995060e61c0946e14619b45cd1adef"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a05995060e61c0946e14619b45cd1adef">ezMath::Sin</a></div><div class="ttdeci">EZ_ALWAYS_INLINE float Sin(ezAngle a)</div><div class="ttdoc">***** Trigonometric Functions *****</div><div class="ttdef"><b>Definition:</b> MathFloat_inl.h:50</div></div>
<div class="ttc" id="astructez_simd_math_htm_adb7b0415a46fb21a49d8aa6816a8d3c8"><div class="ttname"><a href="../../dc/d8c/structez_simd_math.htm#adb7b0415a46fb21a49d8aa6816a8d3c8">ezSimdMath::Exp</a></div><div class="ttdeci">static ezSimdVec4f Exp(const ezSimdVec4f &amp;f)</div><div class="ttdef"><b>Definition:</b> SimdMath_inl.h:6</div></div>
<div class="ttc" id="anamespaceez_math_htm_a83324fcba89f4cb6ed5d1612bfaa0244"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a83324fcba89f4cb6ed5d1612bfaa0244">ezMath::Log2i</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezUInt32 Log2i(ezUInt32 uiVal)</div><div class="ttdoc">Returns the integral logarithm to the base 2, that comes closest to the given integer.</div><div class="ttdef"><b>Definition:</b> MathInt32_inl.h:41</div></div>
<div class="ttc" id="aclassez_angle_htm_af0d5329191f5e431830ad76f91f7cc0f"><div class="ttname"><a href="../../db/d6f/classez_angle.htm#af0d5329191f5e431830ad76f91f7cc0f">ezAngle::MakeFromRadian</a></div><div class="ttdeci">constexpr static ezAngle MakeFromRadian(float fRadian)</div><div class="ttdoc">Creates an instance of ezAngle that was initialized from radian. (No need for any conversion)</div><div class="ttdef"><b>Definition:</b> Angle_inl.h:38</div></div>
<div class="ttc" id="aclassez_simd_vec4i_htm"><div class="ttname"><a href="../../d6/d8e/classez_simd_vec4i.htm">ezSimdVec4i</a></div><div class="ttdoc">A SIMD 4-component vector class of signed 32b integers.</div><div class="ttdef"><b>Definition:</b> SimdVec4i.h:8</div></div>
<div class="ttc" id="anamespaceez_math_htm_a40cf3173aac40e0e462c57728e9410ab"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a40cf3173aac40e0e462c57728e9410ab">ezMath::Cos</a></div><div class="ttdeci">EZ_ALWAYS_INLINE float Cos(ezAngle a)</div><div class="ttdoc">Takes an angle, returns its cosine.</div><div class="ttdef"><b>Definition:</b> MathFloat_inl.h:52</div></div>
<div class="ttc" id="aclassez_simd_vec4f_htm_a1bbdedd947e594b431539062a2b50b95"><div class="ttname"><a href="../../db/d0d/classez_simd_vec4f.htm#a1bbdedd947e594b431539062a2b50b95">ezSimdVec4f::MakeZero</a></div><div class="ttdeci">static ezSimdVec4f MakeZero()</div><div class="ttdoc">Creates an ezSimdVec4f that is initialized to zero.</div><div class="ttdef"><b>Definition:</b> SimdVec4f_inl.h:8</div></div>
<div class="ttc" id="anamespaceez_math_htm_ade2e0a31251abf869a932b0d038a410b"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#ade2e0a31251abf869a932b0d038a410b">ezMath::Tan</a></div><div class="ttdeci">EZ_ALWAYS_INLINE float Tan(ezAngle a)</div><div class="ttdoc">Takes an angle, returns its tangent.</div><div class="ttdef"><b>Definition:</b> MathFloat_inl.h:54</div></div>
<div class="ttc" id="aclassez_simd_vec4f_htm"><div class="ttname"><a href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a></div><div class="ttdoc">A 4-component SIMD vector class.</div><div class="ttdef"><b>Definition:</b> SimdVec4f.h:7</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_6b9381ed4ec7e78ad4ad9509acce36a5.htm">SimdMath</a></li><li class="navelem"><a class="el" href="../../dir_3d955f3f3e7fff9f34f1ed045c0694e5.htm">Implementation</a></li><li class="navelem"><b>SimdMath_inl.h</b></li>
    <li class="footer">Generated on Sat Nov 11 2023 17:04:20 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
