<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: ezOpenXRInputDevice Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">ezEngine<span id="projectnumber">&#160;Release 25.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('d3/d47/classez_open_x_r_input_device.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="../../d7/da9/classez_open_x_r_input_device-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">ezOpenXRInputDevice Class Reference</div></div>
</div><!--header-->
<div class="contents">
<div class="dynheader">
Inheritance diagram for ezOpenXRInputDevice:</div>
<div class="dyncontent">
<div class="center"><img src="../../d0/d8b/classez_open_x_r_input_device__inherit__graph.png" border="0" usemap="#aez_open_x_r_input_device_inherit__map" alt="Inheritance graph"/></div>
<map name="aez_open_x_r_input_device_inherit__map" id="aez_open_x_r_input_device_inherit__map">
<area shape="rect" title=" " alt="" coords="35,387,202,412"/>
<area shape="rect" href="../../d1/da9/classez_x_r_input_device.htm" title=" " alt="" coords="52,313,185,339"/>
<area shape="poly" title=" " alt="" coords="121,352,121,387,116,387,116,352"/>
<area shape="rect" href="../../df/d18/classez_input_device.htm" title="The base class for all input device types." alt="" coords="61,240,176,265"/>
<area shape="poly" title=" " alt="" coords="121,279,121,313,116,313,116,279"/>
<area shape="rect" href="../../d5/d0b/classez_enumerable.htm" title=" " alt="" coords="5,152,232,192"/>
<area shape="poly" title=" " alt="" coords="121,206,121,240,116,240,116,206"/>
<area shape="rect" href="../../db/d45/classez_reflected_class.htm" title="All classes that should be dynamically reflectable, need to be derived from this base class." alt="" coords="52,79,185,104"/>
<area shape="poly" title=" " alt="" coords="121,118,121,152,116,152,116,118"/>
<area shape="rect" href="../../d4/d02/classez_no_base.htm" title="Dummy type to pass to templates and macros that expect a base type for a class that has no base." alt="" coords="75,5,162,31"/>
<area shape="poly" title=" " alt="" coords="121,44,121,79,116,79,116,44"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ae9a24c4b860f8ccb09ff6ff13d318817" id="r_ae9a24c4b860f8ccb09ff6ff13d318817"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d47/classez_open_x_r_input_device.htm#ae9a24c4b860f8ccb09ff6ff13d318817">GetDeviceList</a> (<a class="el" href="../../d8/deb/classez_hybrid_array.htm">ezHybridArray</a>&lt; ezXRDeviceID, 64 &gt; &amp;out_devices) const override</td></tr>
<tr class="memdesc:ae9a24c4b860f8ccb09ff6ff13d318817"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fills out a list of valid (connected) device IDs.  <br /></td></tr>
<tr class="separator:ae9a24c4b860f8ccb09ff6ff13d318817"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af1715d0cc4097659c6d6fdb2827a3436" id="r_af1715d0cc4097659c6d6fdb2827a3436"><td class="memItemLeft" align="right" valign="top">ezXRDeviceID&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d47/classez_open_x_r_input_device.htm#af1715d0cc4097659c6d6fdb2827a3436">GetDeviceIDByType</a> (ezXRDeviceType::Enum type) const override</td></tr>
<tr class="memdesc:af1715d0cc4097659c6d6fdb2827a3436"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the deviceID for a specific type of device. If the device is not connected, -1 is returned instead.  <br /></td></tr>
<tr class="separator:af1715d0cc4097659c6d6fdb2827a3436"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6e1cc677648803bd34f03211068bb32" id="r_aa6e1cc677648803bd34f03211068bb32"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="../../d6/dff/structez_x_r_device_state.htm">ezXRDeviceState</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d47/classez_open_x_r_input_device.htm#aa6e1cc677648803bd34f03211068bb32">GetDeviceState</a> (ezXRDeviceID deviceID) const override</td></tr>
<tr class="memdesc:aa6e1cc677648803bd34f03211068bb32"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the current device state for a valid device ID.  <br /></td></tr>
<tr class="separator:aa6e1cc677648803bd34f03211068bb32"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a203932e0b48a727f889e80f6e020167e" id="r_a203932e0b48a727f889e80f6e020167e"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d4/d53/structez_hybrid_string.htm">ezString</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d47/classez_open_x_r_input_device.htm#a203932e0b48a727f889e80f6e020167e">GetDeviceName</a> (ezXRDeviceID deviceID) const override</td></tr>
<tr class="memdesc:a203932e0b48a727f889e80f6e020167e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the device name for a valid device ID.  <br /></td></tr>
<tr class="separator:a203932e0b48a727f889e80f6e020167e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac29354972a92fd086dd67e1865db55c3" id="r_ac29354972a92fd086dd67e1865db55c3"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d1/dec/structez_bitflags.htm">ezBitflags</a>&lt; <a class="el" href="../../de/d1a/structez_x_r_device_features.htm">ezXRDeviceFeatures</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d47/classez_open_x_r_input_device.htm#ac29354972a92fd086dd67e1865db55c3">GetDeviceFeatures</a> (ezXRDeviceID deviceID) const override</td></tr>
<tr class="memdesc:ac29354972a92fd086dd67e1865db55c3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the device features for a valid device ID.  <br /></td></tr>
<tr class="separator:ac29354972a92fd086dd67e1865db55c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classez_x_r_input_device"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classez_x_r_input_device')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../d1/da9/classez_x_r_input_device.htm">ezXRInputDevice</a></td></tr>
<tr class="memitem:a35605378066e6b0466729242132a9dc7 inherit pub_methods_classez_x_r_input_device" id="r_a35605378066e6b0466729242132a9dc7"><td class="memItemLeft" align="right" valign="top">
const <a class="el" href="../../d0/daf/classez_event.htm">ezXRDeviceEvent</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetInputEvent</b> ()</td></tr>
<tr class="memdesc:a35605378066e6b0466729242132a9dc7 inherit pub_methods_classez_x_r_input_device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the input event. Allows tracking device addition and removal. <br /></td></tr>
<tr class="separator:a35605378066e6b0466729242132a9dc7 inherit pub_methods_classez_x_r_input_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classez_input_device"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classez_input_device')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../df/d18/classez_input_device.htm">ezInputDevice</a></td></tr>
<tr class="memitem:a7bcaa3d0b3cebf5b099362fc234e2966 inherit pub_methods_classez_input_device" id="r_a7bcaa3d0b3cebf5b099362fc234e2966"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>ezInputDevice</b> ()</td></tr>
<tr class="memdesc:a7bcaa3d0b3cebf5b099362fc234e2966 inherit pub_methods_classez_input_device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default Constructor. <br /></td></tr>
<tr class="separator:a7bcaa3d0b3cebf5b099362fc234e2966 inherit pub_methods_classez_input_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9133c37b8ef1d1a0cd0bd8b595acc0a inherit pub_methods_classez_input_device" id="r_ab9133c37b8ef1d1a0cd0bd8b595acc0a"><td class="memItemLeft" align="right" valign="top">
float&#160;</td><td class="memItemRight" valign="bottom"><b>GetInputSlotState</b> (<a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a> sSlot) const</td></tr>
<tr class="memdesc:ab9133c37b8ef1d1a0cd0bd8b595acc0a inherit pub_methods_classez_input_device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allows to query current input values for the given slot. <br /></td></tr>
<tr class="separator:ab9133c37b8ef1d1a0cd0bd8b595acc0a inherit pub_methods_classez_input_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c62c9e2595a1ff61a1fe6f970ba7592 inherit pub_methods_classez_input_device" id="r_a3c62c9e2595a1ff61a1fe6f970ba7592"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d18/classez_input_device.htm#a3c62c9e2595a1ff61a1fe6f970ba7592">HasDeviceBeenUsedLastFrame</a> () const</td></tr>
<tr class="memdesc:a3c62c9e2595a1ff61a1fe6f970ba7592 inherit pub_methods_classez_input_device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if the device was 'used' during the last frame, ie. when it generated input due to some user interaction.  <br /></td></tr>
<tr class="separator:a3c62c9e2595a1ff61a1fe6f970ba7592 inherit pub_methods_classez_input_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classez_reflected_class"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classez_reflected_class')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../db/d45/classez_reflected_class.htm">ezReflectedClass</a></td></tr>
<tr class="memitem:ae155d1c020cc3d20af2811471a95ca0a inherit pub_methods_classez_reflected_class" id="r_ae155d1c020cc3d20af2811471a95ca0a"><td class="memItemLeft" align="right" valign="top">
virtual const <a class="el" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetDynamicRTTI</b> () const</td></tr>
<tr class="separator:ae155d1c020cc3d20af2811471a95ca0a inherit pub_methods_classez_reflected_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab746c8e33a03b96c25b117ee04cf6f00 inherit pub_methods_classez_reflected_class" id="r_ab746c8e33a03b96c25b117ee04cf6f00"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsInstanceOf</b> (const <a class="el" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a> *pType) const</td></tr>
<tr class="memdesc:ab746c8e33a03b96c25b117ee04cf6f00 inherit pub_methods_classez_reflected_class"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the type of this instance is of the given type or derived from it. <br /></td></tr>
<tr class="separator:ab746c8e33a03b96c25b117ee04cf6f00 inherit pub_methods_classez_reflected_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86c6a804cc97a425928bce744607400a inherit pub_methods_classez_reflected_class" id="r_a86c6a804cc97a425928bce744607400a"><td class="memTemplParams" colspan="2">
template&lt;typename T &gt; </td></tr>
<tr class="memitem:a86c6a804cc97a425928bce744607400a inherit pub_methods_classez_reflected_class"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>IsInstanceOf</b> () const</td></tr>
<tr class="memdesc:a86c6a804cc97a425928bce744607400a inherit pub_methods_classez_reflected_class"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the type of this instance is of the given type or derived from it. <br /></td></tr>
<tr class="separator:a86c6a804cc97a425928bce744607400a inherit pub_methods_classez_reflected_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-methods" name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:a194ffb1c9e687a67ef9e5fc05a08c4fc" id="r_a194ffb1c9e687a67ef9e5fc05a08c4fc"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d47/classez_open_x_r_input_device.htm#a194ffb1c9e687a67ef9e5fc05a08c4fc">InitializeDevice</a> () override</td></tr>
<tr class="memdesc:a194ffb1c9e687a67ef9e5fc05a08c4fc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Override this if you need to do device specific initialization before the first use.  <br /></td></tr>
<tr class="separator:a194ffb1c9e687a67ef9e5fc05a08c4fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f636066b41cc3b39a7c97141f68e8a3" id="r_a3f636066b41cc3b39a7c97141f68e8a3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d47/classez_open_x_r_input_device.htm#a3f636066b41cc3b39a7c97141f68e8a3">RegisterInputSlots</a> () override</td></tr>
<tr class="memdesc:a3f636066b41cc3b39a7c97141f68e8a3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Override this to register all the input slots that this device exposes.  <br /></td></tr>
<tr class="separator:a3f636066b41cc3b39a7c97141f68e8a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f732b512ac03047d35c7533a42418fa" id="r_a0f732b512ac03047d35c7533a42418fa"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d47/classez_open_x_r_input_device.htm#a0f732b512ac03047d35c7533a42418fa">UpdateInputSlotValues</a> () override</td></tr>
<tr class="memdesc:a0f732b512ac03047d35c7533a42418fa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Override this, if you need to query the state of the hardware to update the input slots.  <br /></td></tr>
<tr class="separator:a0f732b512ac03047d35c7533a42418fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="friends" name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:a02940bafe7676a4ad8c94ac20806e98d" id="r_a02940bafe7676a4ad8c94ac20806e98d"><td class="memItemLeft" align="right" valign="top"><a id="a02940bafe7676a4ad8c94ac20806e98d" name="a02940bafe7676a4ad8c94ac20806e98d"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><b>ezOpenXR</b></td></tr>
<tr class="separator:a02940bafe7676a4ad8c94ac20806e98d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="inherited" name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_static_methods_classez_no_base"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_classez_no_base')"><img src="../../closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="../../d4/d02/classez_no_base.htm">ezNoBase</a></td></tr>
<tr class="memitem:a718d4e4145a2c15d0c28aaed086f1ce2 inherit pub_static_methods_classez_no_base" id="r_a718d4e4145a2c15d0c28aaed086f1ce2"><td class="memItemLeft" align="right" valign="top">
static const <a class="el" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetStaticRTTI</b> ()</td></tr>
<tr class="separator:a718d4e4145a2c15d0c28aaed086f1ce2 inherit pub_static_methods_classez_no_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classez_input_device"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classez_input_device')"><img src="../../closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="../../df/d18/classez_input_device.htm">ezInputDevice</a></td></tr>
<tr class="memitem:a9bf9a14beeae09b78c66b77c97ab6d82 inherit pro_methods_classez_input_device" id="r_a9bf9a14beeae09b78c66b77c97ab6d82"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d18/classez_input_device.htm#a9bf9a14beeae09b78c66b77c97ab6d82">ResetInputSlotValues</a> ()</td></tr>
<tr class="memdesc:a9bf9a14beeae09b78c66b77c97ab6d82 inherit pro_methods_classez_input_device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Override this, if you need to reset certain input slot values to zero, after the <a class="el" href="../../d8/d45/classez_input_manager.htm" title="The central class to set up and query the state of all input.">ezInputManager</a> is finished with the current frame update.  <br /></td></tr>
<tr class="separator:a9bf9a14beeae09b78c66b77c97ab6d82 inherit pro_methods_classez_input_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac56c8b35631ad7da84c901a2c64ac9f7 inherit pro_methods_classez_input_device" id="r_ac56c8b35631ad7da84c901a2c64ac9f7"><td class="memItemLeft" align="right" valign="top">
virtual void&#160;</td><td class="memItemRight" valign="bottom"><b>UpdateHardwareState</b> (<a class="el" href="../../d3/d90/structez_time.htm">ezTime</a> tTimeDifference)</td></tr>
<tr class="memdesc:ac56c8b35631ad7da84c901a2c64ac9f7 inherit pro_methods_classez_input_device"><td class="mdescLeft">&#160;</td><td class="mdescRight">This function is called once after <a class="el" href="../../d8/d45/classez_input_manager.htm#a5f9f275d8aa15fd5f313871cf8eab7db" title="Updates the state of the input manager. This should be called exactly once each frame.">ezInputManager::Update</a> with the same time delta value. It allows to update hardware state, such as the vibration of gamepad motors. <br /></td></tr>
<tr class="separator:ac56c8b35631ad7da84c901a2c64ac9f7 inherit pro_methods_classez_input_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_static_methods_classez_input_device"><td colspan="2" onclick="javascript:toggleInherit('pro_static_methods_classez_input_device')"><img src="../../closed.png" alt="-"/>&#160;Static Protected Member Functions inherited from <a class="el" href="../../df/d18/classez_input_device.htm">ezInputDevice</a></td></tr>
<tr class="memitem:a69189cfb4ddbe08152e8e46fe71f842e inherit pro_static_methods_classez_input_device" id="r_a69189cfb4ddbe08152e8e46fe71f842e"><td class="memItemLeft" align="right" valign="top">
static void&#160;</td><td class="memItemRight" valign="bottom"><b>RegisterInputSlot</b> (<a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a> sName, <a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a> sDefaultDisplayName, <a class="el" href="../../d1/dec/structez_bitflags.htm">ezBitflags</a>&lt; <a class="el" href="../../df/d72/structez_input_slot_flags.htm">ezInputSlotFlags</a> &gt; SlotFlags)</td></tr>
<tr class="memdesc:a69189cfb4ddbe08152e8e46fe71f842e inherit pro_static_methods_classez_input_device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calls <a class="el" href="../../df/d18/classez_input_device.htm#a69189cfb4ddbe08152e8e46fe71f842e" title="Calls RegisterInputSlot() on the ezInputManager and passes the parameters through.">RegisterInputSlot()</a> on the <a class="el" href="../../d8/d45/classez_input_manager.htm" title="The central class to set up and query the state of all input.">ezInputManager</a> and passes the parameters through. <br /></td></tr>
<tr class="separator:a69189cfb4ddbe08152e8e46fe71f842e inherit pro_static_methods_classez_input_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classez_x_r_input_device"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classez_x_r_input_device')"><img src="../../closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="../../d1/da9/classez_x_r_input_device.htm">ezXRInputDevice</a></td></tr>
<tr class="memitem:a8a9f1c96be4cdd8346ccef6c1efb4a1d inherit pro_attribs_classez_x_r_input_device" id="r_a8a9f1c96be4cdd8346ccef6c1efb4a1d"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d0/daf/classez_event.htm">ezXRDeviceEvent</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_InputEvents</b></td></tr>
<tr class="separator:a8a9f1c96be4cdd8346ccef6c1efb4a1d inherit pro_attribs_classez_x_r_input_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classez_input_device"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classez_input_device')"><img src="../../closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="../../df/d18/classez_input_device.htm">ezInputDevice</a></td></tr>
<tr class="memitem:aa020904d039e3c7ee81829b22d6919ff inherit pro_attribs_classez_input_device" id="r_aa020904d039e3c7ee81829b22d6919ff"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d1/d79/classez_map.htm">ezMap</a>&lt; <a class="el" href="../../d4/d53/structez_hybrid_string.htm">ezString</a>, float &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d18/classez_input_device.htm#aa020904d039e3c7ee81829b22d6919ff">m_InputSlotValues</a></td></tr>
<tr class="memdesc:aa020904d039e3c7ee81829b22d6919ff inherit pro_attribs_classez_input_device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stores all the values for all input slots that this device handles.  <br /></td></tr>
<tr class="separator:aa020904d039e3c7ee81829b22d6919ff inherit pro_attribs_classez_input_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a053bacaca498574994f6013e1fe72dc4 inherit pro_attribs_classez_input_device" id="r_a053bacaca498574994f6013e1fe72dc4"><td class="memItemLeft" align="right" valign="top">
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>m_uiLastCharacter</b></td></tr>
<tr class="memdesc:a053bacaca498574994f6013e1fe72dc4 inherit pro_attribs_classez_input_device"><td class="mdescLeft">&#160;</td><td class="mdescRight">If this input device type handles character input, it should write the last typed character into this variable. The <a class="el" href="../../d8/d45/classez_input_manager.htm" title="The central class to set up and query the state of all input.">ezInputManager</a> calls RetrieveLastCharacter() to query what the user typed last. <br /></td></tr>
<tr class="separator:a053bacaca498574994f6013e1fe72dc4 inherit pro_attribs_classez_input_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classez_enumerable"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classez_enumerable')"><img src="../../closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="../../d5/d0b/classez_enumerable.htm">ezEnumerable&lt; ezInputDevice, ezReflectedClass &gt;</a></td></tr>
<tr class="memitem:a6a9e0d84d59fb7c18b0600ec9a986098 inherit pro_attribs_classez_enumerable" id="r_a6a9e0d84d59fb7c18b0600ec9a986098"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d5/d0b/classez_enumerable.htm">ezEnumerable</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>m_pNextInstance</b></td></tr>
<tr class="separator:a6a9e0d84d59fb7c18b0600ec9a986098 inherit pro_attribs_classez_enumerable"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ac29354972a92fd086dd67e1865db55c3" name="ac29354972a92fd086dd67e1865db55c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac29354972a92fd086dd67e1865db55c3">&#9670;&#160;</a></span>GetDeviceFeatures()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d1/dec/structez_bitflags.htm">ezBitflags</a>&lt; <a class="el" href="../../de/d1a/structez_x_r_device_features.htm">ezXRDeviceFeatures</a> &gt; ezOpenXRInputDevice::GetDeviceFeatures </td>
          <td>(</td>
          <td class="paramtype">ezXRDeviceID&#160;</td>
          <td class="paramname"><em>deviceID</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the device features for a valid device ID. </p>

<p>Implements <a class="el" href="../../d1/da9/classez_x_r_input_device.htm#a16fe70579d2cd028552acc714d6c48e3">ezXRInputDevice</a>.</p>

</div>
</div>
<a id="af1715d0cc4097659c6d6fdb2827a3436" name="af1715d0cc4097659c6d6fdb2827a3436"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af1715d0cc4097659c6d6fdb2827a3436">&#9670;&#160;</a></span>GetDeviceIDByType()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">ezXRDeviceID ezOpenXRInputDevice::GetDeviceIDByType </td>
          <td>(</td>
          <td class="paramtype">ezXRDeviceType::Enum&#160;</td>
          <td class="paramname"><em>type</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the deviceID for a specific type of device. If the device is not connected, -1 is returned instead. </p>

<p>Implements <a class="el" href="../../d1/da9/classez_x_r_input_device.htm#af0812c82e44a68f154a3a16083ac9479">ezXRInputDevice</a>.</p>

</div>
</div>
<a id="ae9a24c4b860f8ccb09ff6ff13d318817" name="ae9a24c4b860f8ccb09ff6ff13d318817"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae9a24c4b860f8ccb09ff6ff13d318817">&#9670;&#160;</a></span>GetDeviceList()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ezOpenXRInputDevice::GetDeviceList </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d8/deb/classez_hybrid_array.htm">ezHybridArray</a>&lt; ezXRDeviceID, 64 &gt; &amp;&#160;</td>
          <td class="paramname"><em>out_devices</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Fills out a list of valid (connected) device IDs. </p>

<p>Implements <a class="el" href="../../d1/da9/classez_x_r_input_device.htm#a2b3290a8f8ce876ca2f48dcfa955519c">ezXRInputDevice</a>.</p>

</div>
</div>
<a id="a203932e0b48a727f889e80f6e020167e" name="a203932e0b48a727f889e80f6e020167e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a203932e0b48a727f889e80f6e020167e">&#9670;&#160;</a></span>GetDeviceName()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d4/d53/structez_hybrid_string.htm">ezString</a> ezOpenXRInputDevice::GetDeviceName </td>
          <td>(</td>
          <td class="paramtype">ezXRDeviceID&#160;</td>
          <td class="paramname"><em>deviceID</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the device name for a valid device ID. </p>
<p>This returns a human readable name to identify the device. For ezXRDeviceType::HMD the name is always 'HMD'. This can be used for e.g. controllers to create custom game input logic or mappings if a certain type of controller is used. Values could be for example: 'Simple Controller', 'Mixed Reality Motion Controller', 'Hand Interaction' etc. </p>

<p>Implements <a class="el" href="../../d1/da9/classez_x_r_input_device.htm#ab79f8fbd67e7be2f03ea6024cc3b65c1">ezXRInputDevice</a>.</p>

</div>
</div>
<a id="aa6e1cc677648803bd34f03211068bb32" name="aa6e1cc677648803bd34f03211068bb32"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa6e1cc677648803bd34f03211068bb32">&#9670;&#160;</a></span>GetDeviceState()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="../../d6/dff/structez_x_r_device_state.htm">ezXRDeviceState</a> &amp; ezOpenXRInputDevice::GetDeviceState </td>
          <td>(</td>
          <td class="paramtype">ezXRDeviceID&#160;</td>
          <td class="paramname"><em>deviceID</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the current device state for a valid device ID. </p>

<p>Implements <a class="el" href="../../d1/da9/classez_x_r_input_device.htm#ac809ecb59b4f1b7c059aa43a2b727115">ezXRInputDevice</a>.</p>

</div>
</div>
<a id="a194ffb1c9e687a67ef9e5fc05a08c4fc" name="a194ffb1c9e687a67ef9e5fc05a08c4fc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a194ffb1c9e687a67ef9e5fc05a08c4fc">&#9670;&#160;</a></span>InitializeDevice()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ezOpenXRInputDevice::InitializeDevice </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">private</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Override this if you need to do device specific initialization before the first use. </p>

<p>Implements <a class="el" href="../../df/d18/classez_input_device.htm#af81b9d83d1cb91e1b84aa6dd75b94ec8">ezInputDevice</a>.</p>

</div>
</div>
<a id="a3f636066b41cc3b39a7c97141f68e8a3" name="a3f636066b41cc3b39a7c97141f68e8a3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3f636066b41cc3b39a7c97141f68e8a3">&#9670;&#160;</a></span>RegisterInputSlots()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ezOpenXRInputDevice::RegisterInputSlots </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">private</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Override this to register all the input slots that this device exposes. </p>
<p>This is called once during initialization. It needs to call <a class="el" href="../../df/d18/classez_input_device.htm#a69189cfb4ddbe08152e8e46fe71f842e" title="Calls RegisterInputSlot() on the ezInputManager and passes the parameters through.">RegisterInputSlot()</a> once for every input slot that this device exposes to the system. </p>

<p>Implements <a class="el" href="../../df/d18/classez_input_device.htm#ad70250d056a9db8e4de9195bc229ecfc">ezInputDevice</a>.</p>

</div>
</div>
<a id="a0f732b512ac03047d35c7533a42418fa" name="a0f732b512ac03047d35c7533a42418fa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0f732b512ac03047d35c7533a42418fa">&#9670;&#160;</a></span>UpdateInputSlotValues()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ezOpenXRInputDevice::UpdateInputSlotValues </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">private</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Override this, if you need to query the state of the hardware to update the input slots. </p>
<dl class="section note"><dt>Note</dt><dd>This function might be called multiple times before <a class="el" href="../../df/d18/classez_input_device.htm#a9bf9a14beeae09b78c66b77c97ab6d82" title="Override this, if you need to reset certain input slot values to zero, after the ezInputManager is fi...">ResetInputSlotValues()</a> is called. This will be the case when <a class="el" href="../../d8/d45/classez_input_manager.htm#a5da4de03391ce691ec6aa07514f01b99" title="Makes sure that hardware input is processed at this moment, which allows to do this more often than U...">ezInputManager::PollHardware</a> is used to make more frequent hardware updates than input is actually processed. Just make sure to always accumulate delta values (such as mouse move values) and don't expect <a class="el" href="../../df/d18/classez_input_device.htm#a9bf9a14beeae09b78c66b77c97ab6d82" title="Override this, if you need to reset certain input slot values to zero, after the ezInputManager is fi...">ResetInputSlotValues()</a> to be called in tandem with this function and it will be fine. </dd></dl>

<p>Implements <a class="el" href="../../df/d18/classez_input_device.htm#a45c72b370f50d7b314571fccbb0fe6e2">ezInputDevice</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/ezEngine/ezEngine/Code/EnginePlugins/OpenXRPlugin/<a class="el" href="../../df/d34/_open_x_r_input_device_8h_source.htm">OpenXRInputDevice.h</a></li>
<li>/home/runner/work/ezEngine/ezEngine/Code/EnginePlugins/OpenXRPlugin/<b>OpenXRInputDevice.cpp</b></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d3/d47/classez_open_x_r_input_device.htm">ezOpenXRInputDevice</a></li>
    <li class="footer">Generated on Fri Jul 11 2025 12:17:59 for ezEngine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
