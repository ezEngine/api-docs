<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Reflection/ReflectionUtils.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 23.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d3/d43/_reflection_utils_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ReflectionUtils.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;Foundation/Containers/Set.h&gt;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;Foundation/Reflection/Reflection.h&gt;</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160; </div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="keyword">class </span><a class="code" href="../../de/de6/classez_variant.htm">ezVariant</a>;</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="keyword">class </span><a class="code" href="../../d6/d81/classez_abstract_property.htm">ezAbstractProperty</a>;</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160; </div>
<div class="line"><a name="l00010"></a><span class="lineno"><a class="line" href="../../d3/da6/classez_reflection_utils.htm">   10</a></span>&#160;<span class="keyword">class </span>EZ_FOUNDATION_DLL <a class="code" href="../../d3/da6/classez_reflection_utils.htm">ezReflectionUtils</a></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;{</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;  <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* GetCommonBaseType(<span class="keyword">const</span> <a class="code" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* pRtti1, <span class="keyword">const</span> <a class="code" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* pRtti2);</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160; </div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">bool</span> IsBasicType(<span class="keyword">const</span> <a class="code" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* pRtti);</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160; </div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">bool</span> IsValueType(<span class="keyword">const</span> <a class="code" href="../../d6/d81/classez_abstract_property.htm">ezAbstractProperty</a>* pProp);</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160; </div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;  <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* GetTypeFromVariant(<span class="keyword">const</span> <a class="code" href="../../de/de6/classez_variant.htm">ezVariant</a>&amp; value);</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;  <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* GetTypeFromVariant(<a class="code" href="../../da/d6c/structez_variant_type.htm#a91ecf53decb31d57981c71043fa30299">ezVariantType::Enum</a> type);</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160; </div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  <span class="keyword">static</span> ezUInt32 GetComponentCount(<a class="code" href="../../da/d6c/structez_variant_type.htm#a91ecf53decb31d57981c71043fa30299">ezVariantType::Enum</a> type);</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> SetComponent(<a class="code" href="../../de/de6/classez_variant.htm">ezVariant</a>&amp; ref_vector, ezUInt32 uiComponent, <span class="keywordtype">double</span> fValue); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">double</span> GetComponent(<span class="keyword">const</span> <a class="code" href="../../de/de6/classez_variant.htm">ezVariant</a>&amp; vector, ezUInt32 uiComponent);</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160; </div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;  <span class="keyword">static</span> <a class="code" href="../../de/de6/classez_variant.htm">ezVariant</a> GetMemberPropertyValue(<span class="keyword">const</span> <a class="code" href="../../da/d67/classez_abstract_member_property.htm">ezAbstractMemberProperty</a>* pProp, <span class="keyword">const</span> <span class="keywordtype">void</span>* pObject);        <span class="comment">// [tested] via ToolsFoundation</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> SetMemberPropertyValue(<span class="keyword">const</span> <a class="code" href="../../da/d67/classez_abstract_member_property.htm">ezAbstractMemberProperty</a>* pProp, <span class="keywordtype">void</span>* pObject, <span class="keyword">const</span> <a class="code" href="../../de/de6/classez_variant.htm">ezVariant</a>&amp; value); <span class="comment">// [tested] via ToolsFoundation</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160; </div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;  <span class="keyword">static</span> <a class="code" href="../../de/de6/classez_variant.htm">ezVariant</a> GetArrayPropertyValue(<span class="keyword">const</span> <a class="code" href="../../dc/dfb/classez_abstract_array_property.htm">ezAbstractArrayProperty</a>* pProp, <span class="keyword">const</span> <span class="keywordtype">void</span>* pObject, ezUInt32 uiIndex);</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> SetArrayPropertyValue(<span class="keyword">const</span> <a class="code" href="../../dc/dfb/classez_abstract_array_property.htm">ezAbstractArrayProperty</a>* pProp, <span class="keywordtype">void</span>* pObject, ezUInt32 uiIndex, <span class="keyword">const</span> <a class="code" href="../../de/de6/classez_variant.htm">ezVariant</a>&amp; value);</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160; </div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> InsertSetPropertyValue(<span class="keyword">const</span> <a class="code" href="../../d9/dc6/classez_abstract_set_property.htm">ezAbstractSetProperty</a>* pProp, <span class="keywordtype">void</span>* pObject, <span class="keyword">const</span> <a class="code" href="../../de/de6/classez_variant.htm">ezVariant</a>&amp; value);</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> RemoveSetPropertyValue(<span class="keyword">const</span> <a class="code" href="../../d9/dc6/classez_abstract_set_property.htm">ezAbstractSetProperty</a>* pProp, <span class="keywordtype">void</span>* pObject, <span class="keyword">const</span> <a class="code" href="../../de/de6/classez_variant.htm">ezVariant</a>&amp; value);</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160; </div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  <span class="keyword">static</span> <a class="code" href="../../de/de6/classez_variant.htm">ezVariant</a> GetMapPropertyValue(<span class="keyword">const</span> <a class="code" href="../../d3/d48/classez_abstract_map_property.htm">ezAbstractMapProperty</a>* pProp, <span class="keyword">const</span> <span class="keywordtype">void</span>* pObject, <span class="keyword">const</span> <span class="keywordtype">char</span>* szKey);</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> SetMapPropertyValue(<span class="keyword">const</span> <a class="code" href="../../d3/d48/classez_abstract_map_property.htm">ezAbstractMapProperty</a>* pProp, <span class="keywordtype">void</span>* pObject, <span class="keyword">const</span> <span class="keywordtype">char</span>* szKey, <span class="keyword">const</span> <a class="code" href="../../de/de6/classez_variant.htm">ezVariant</a>&amp; value);</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160; </div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> InsertArrayPropertyValue(<span class="keyword">const</span> <a class="code" href="../../dc/dfb/classez_abstract_array_property.htm">ezAbstractArrayProperty</a>* pProp, <span class="keywordtype">void</span>* pObject, <span class="keyword">const</span> <a class="code" href="../../de/de6/classez_variant.htm">ezVariant</a>&amp; value, ezUInt32 uiIndex);</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> RemoveArrayPropertyValue(<span class="keyword">const</span> <a class="code" href="../../dc/dfb/classez_abstract_array_property.htm">ezAbstractArrayProperty</a>* pProp, <span class="keywordtype">void</span>* pObject, ezUInt32 uiIndex);</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160; </div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;  <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="../../da/d67/classez_abstract_member_property.htm">ezAbstractMemberProperty</a>* GetMemberProperty(<span class="keyword">const</span> <a class="code" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* pRtti, ezUInt32 uiPropertyIndex);</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;  <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="../../da/d67/classez_abstract_member_property.htm">ezAbstractMemberProperty</a>* GetMemberProperty(<span class="keyword">const</span> <a class="code" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* pRtti, <span class="keyword">const</span> <span class="keywordtype">char</span>* szPropertyName); <span class="comment">// [tested] via ToolsFoundation</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160; </div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> GatherTypesDerivedFromClass(<span class="keyword">const</span> <a class="code" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* pRtti, <a class="code" href="../../d0/d90/classez_set.htm">ezSet&lt;const ezRTTI*&gt;</a>&amp; out_types);</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160; </div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> GatherDependentTypes(<span class="keyword">const</span> <a class="code" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* pRtti, <a class="code" href="../../d0/d90/classez_set.htm">ezSet&lt;const ezRTTI*&gt;</a>&amp; inout_typesAsSet, <a class="code" href="../../d2/d4f/classez_dynamic_array.htm">ezDynamicArray&lt;const ezRTTI*&gt;</a>* out_pTypesAsStack = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160; </div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  <span class="keyword">static</span> <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> CreateDependencySortedTypeArray(<span class="keyword">const</span> <a class="code" href="../../d0/d90/classez_set.htm">ezSet&lt;const ezRTTI*&gt;</a>&amp; types, <a class="code" href="../../d2/d4f/classez_dynamic_array.htm">ezDynamicArray&lt;const ezRTTI*&gt;</a>&amp; out_sortedTypes);</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160; </div>
<div class="line"><a name="l00072"></a><span class="lineno"><a class="line" href="../../d1/dc8/structez_reflection_utils_1_1_enum_conversion_mode.htm">   72</a></span>&#160;  <span class="keyword">struct </span><a class="code" href="../../d1/dc8/structez_reflection_utils_1_1_enum_conversion_mode.htm">EnumConversionMode</a></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  {</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keyword">enum</span> Enum</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    {</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;      FullyQualifiedName,</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;      ValueNameOnly,</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;      Default = FullyQualifiedName</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    };</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160; </div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keyword">using</span> StorageType = ezUInt8;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;  };</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160; </div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">bool</span> EnumerationToString(<span class="keyword">const</span> <a class="code" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* pEnumerationRtti, ezInt64 iValue, <a class="code" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>&amp; out_sOutput,</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <a class="code" href="../../d6/dd9/structez_enum.htm">ezEnum&lt;EnumConversionMode&gt;</a> conversionMode = EnumConversionMode::Default); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160; </div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="../../d3/da6/classez_reflection_utils.htm#ac176791658ddd0fe4a2cf8d0b317d89d">   92</a></span>&#160;  <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="../../d3/da6/classez_reflection_utils.htm#ac176791658ddd0fe4a2cf8d0b317d89d">EnumerationToString</a>(<a class="code" href="../../d6/dd9/structez_enum.htm">ezEnum&lt;T&gt;</a> value, <a class="code" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>&amp; out_sOutput, <a class="code" href="../../d6/dd9/structez_enum.htm">ezEnum&lt;EnumConversionMode&gt;</a> conversionMode = EnumConversionMode::Default)</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  {</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="keywordflow">return</span> EnumerationToString(ezGetStaticRTTI&lt;T&gt;(), value.<a class="code" href="../../d6/dd9/structez_enum.htm#a7438b2c97eab52e031a6faeb4c5aa093">GetValue</a>(), out_sOutput, conversionMode);</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;  }</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160; </div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00099"></a><span class="lineno"><a class="line" href="../../d3/da6/classez_reflection_utils.htm#a94c85b3d2059503ad29ca3b442e04e4c">   99</a></span>&#160;  <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="../../d3/da6/classez_reflection_utils.htm#a94c85b3d2059503ad29ca3b442e04e4c">BitflagsToString</a>(<a class="code" href="../../d1/dec/structez_bitflags.htm">ezBitflags&lt;T&gt;</a> value, <a class="code" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>&amp; out_sOutput, <a class="code" href="../../d6/dd9/structez_enum.htm">ezEnum&lt;EnumConversionMode&gt;</a> conversionMode = EnumConversionMode::Default)</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;  {</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    <span class="keywordflow">return</span> EnumerationToString(ezGetStaticRTTI&lt;T&gt;(), value.<a class="code" href="../../d1/dec/structez_bitflags.htm#aa93ba8c89c9f1c1cd79c87d02f6a3656">GetValue</a>(), out_sOutput, conversionMode);</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;  }</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160; </div>
<div class="line"><a name="l00104"></a><span class="lineno"><a class="line" href="../../d9/dde/structez_reflection_utils_1_1_enum_key_value_pair.htm">  104</a></span>&#160;  <span class="keyword">struct </span><a class="code" href="../../d9/dde/structez_reflection_utils_1_1_enum_key_value_pair.htm">EnumKeyValuePair</a></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;  {</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    <a class="code" href="../../d4/d53/structez_hybrid_string.htm">ezString</a> m_sKey;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    ezInt32 m_iValue = 0;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;  };</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160; </div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> GetEnumKeysAndValues(<span class="keyword">const</span> <a class="code" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* pEnumerationRtti, <a class="code" href="../../d2/d4f/classez_dynamic_array.htm">ezDynamicArray&lt;EnumKeyValuePair&gt;</a>&amp; ref_entries, <a class="code" href="../../d6/dd9/structez_enum.htm">ezEnum&lt;EnumConversionMode&gt;</a> conversionMode = EnumConversionMode::Default);</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160; </div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">bool</span> StringToEnumeration(<span class="keyword">const</span> <a class="code" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* pEnumerationRtti, <span class="keyword">const</span> <span class="keywordtype">char</span>* szValue, ezInt64&amp; out_iValue); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160; </div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00120"></a><span class="lineno"><a class="line" href="../../d3/da6/classez_reflection_utils.htm#ad95f7a70a6511583c8fd12ae43d184b6">  120</a></span>&#160;  <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="../../d3/da6/classez_reflection_utils.htm#ad95f7a70a6511583c8fd12ae43d184b6">StringToEnumeration</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szValue, <a class="code" href="../../d6/dd9/structez_enum.htm">ezEnum&lt;T&gt;</a>&amp; out_value)</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;  {</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    ezInt64 value;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    <span class="keyword">const</span> <span class="keyword">auto</span> retval = StringToEnumeration(ezGetStaticRTTI&lt;T&gt;(), szValue, value);</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    out_value = <span class="keyword">static_cast&lt;</span>typename T::Enum<span class="keyword">&gt;</span>(value);</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    <span class="keywordflow">return</span> retval;</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;  }</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160; </div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;  <span class="keyword">static</span> ezInt64 DefaultEnumerationValue(<span class="keyword">const</span> <a class="code" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* pEnumerationRtti); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160; </div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;  <span class="keyword">static</span> ezInt64 MakeEnumerationValid(<span class="keyword">const</span> <a class="code" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* pEnumerationRtti, ezInt64 iValue); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160; </div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00138"></a><span class="lineno"><a class="line" href="../../d3/da6/classez_reflection_utils.htm#acab62c04a4b0c4cd38a241a205268f8c">  138</a></span>&#160;  <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code" href="../../d3/da6/classez_reflection_utils.htm#acab62c04a4b0c4cd38a241a205268f8c">IsEqual</a>(<span class="keyword">const</span> T* pObject, <span class="keyword">const</span> T* pObject2)</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;  {</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <span class="keywordflow">return</span> IsEqual(pObject, pObject2, ezGetStaticRTTI&lt;T&gt;());</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;  }</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160; </div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">bool</span> IsEqual(<span class="keyword">const</span> <span class="keywordtype">void</span>* pObject, <span class="keyword">const</span> <span class="keywordtype">void</span>* pObject2, <span class="keyword">const</span> <a class="code" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* pType); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160; </div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">bool</span> IsEqual(<span class="keyword">const</span> <span class="keywordtype">void</span>* pObject, <span class="keyword">const</span> <span class="keywordtype">void</span>* pObject2, <span class="keyword">const</span> <a class="code" href="../../d6/d81/classez_abstract_property.htm">ezAbstractProperty</a>* pProp);</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160; </div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> DeleteObject(<span class="keywordtype">void</span>* pObject, <span class="keyword">const</span> <a class="code" href="../../d6/d81/classez_abstract_property.htm">ezAbstractProperty</a>* pOwnerProperty);</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160; </div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;  <span class="keyword">static</span> <a class="code" href="../../de/de6/classez_variant.htm">ezVariant</a> GetDefaultVariantFromType(<a class="code" href="../../da/d6c/structez_variant_type.htm#a91ecf53decb31d57981c71043fa30299">ezVariant::Type::Enum</a> type); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160; </div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;  <span class="keyword">static</span> <a class="code" href="../../de/de6/classez_variant.htm">ezVariant</a> GetDefaultVariantFromType(<span class="keyword">const</span> <a class="code" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* pRtti);</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160; </div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;  <span class="keyword">static</span> <a class="code" href="../../de/de6/classez_variant.htm">ezVariant</a> GetDefaultValue(<span class="keyword">const</span> <a class="code" href="../../d6/d81/classez_abstract_property.htm">ezAbstractProperty</a>* pProperty, <a class="code" href="../../de/de6/classez_variant.htm">ezVariant</a> index = <a class="code" href="../../de/de6/classez_variant.htm">ezVariant</a>());</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160; </div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160; </div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> SetAllMemberPropertiesToDefault(<span class="keyword">const</span> <a class="code" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* pRtti, <span class="keywordtype">void</span>* pObject);</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160; </div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;  <span class="keyword">static</span> <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> ClampValue(<a class="code" href="../../de/de6/classez_variant.htm">ezVariant</a>&amp; value, <span class="keyword">const</span> <a class="code" href="../../d6/d7b/classez_clamp_value_attribute.htm">ezClampValueAttribute</a>* pAttrib);</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;};</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassez_abstract_set_property_htm"><div class="ttname"><a href="../../d9/dc6/classez_abstract_set_property.htm">ezAbstractSetProperty</a></div><div class="ttdoc">The base class for a property that represents a set of values.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:312</div></div>
<div class="ttc" id="aclassez_reflection_utils_htm_a94c85b3d2059503ad29ca3b442e04e4c"><div class="ttname"><a href="../../d3/da6/classez_reflection_utils.htm#a94c85b3d2059503ad29ca3b442e04e4c">ezReflectionUtils::BitflagsToString</a></div><div class="ttdeci">static bool BitflagsToString(ezBitflags&lt; T &gt; value, ezStringBuilder &amp;out_sOutput, ezEnum&lt; EnumConversionMode &gt; conversionMode=EnumConversionMode::Default)</div><div class="ttdoc">Helper template to shorten the call for ezBitflags.</div><div class="ttdef"><b>Definition:</b> ReflectionUtils.h:99</div></div>
<div class="ttc" id="astructez_bitflags_htm"><div class="ttname"><a href="../../d1/dec/structez_bitflags.htm">ezBitflags</a></div><div class="ttdoc">The ezBitflags class allows you to work with type-safe bitflags.</div><div class="ttdef"><b>Definition:</b> Bitflags.h:80</div></div>
<div class="ttc" id="astructez_result_htm"><div class="ttname"><a href="../../d4/da9/structez_result.htm">ezResult</a></div><div class="ttdoc">Default enum for returning failure or success, instead of using a bool.</div><div class="ttdef"><b>Definition:</b> Types.h:50</div></div>
<div class="ttc" id="aclassez_set_htm"><div class="ttname"><a href="../../d0/d90/classez_set.htm">ezSet&lt; const ezRTTI * &gt;</a></div></div>
<div class="ttc" id="aclassez_abstract_map_property_htm"><div class="ttname"><a href="../../d3/d48/classez_abstract_map_property.htm">ezAbstractMapProperty</a></div><div class="ttdoc">The base class for a property that represents a set of values.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:347</div></div>
<div class="ttc" id="aclassez_r_t_t_i_htm"><div class="ttname"><a href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a></div><div class="ttdoc">This class holds information about reflected types. Each instance represents one type that is known t...</div><div class="ttdef"><b>Definition:</b> RTTI.h:28</div></div>
<div class="ttc" id="aclassez_abstract_array_property_htm"><div class="ttname"><a href="../../dc/dfb/classez_abstract_array_property.htm">ezAbstractArrayProperty</a></div><div class="ttdoc">The base class for a property that represents an array of values.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:272</div></div>
<div class="ttc" id="astructez_variant_type_htm_a91ecf53decb31d57981c71043fa30299"><div class="ttname"><a href="../../da/d6c/structez_variant_type.htm#a91ecf53decb31d57981c71043fa30299">ezVariantType::Enum</a></div><div class="ttdeci">Enum</div><div class="ttdoc">This enum describes the type of data that is currently stored inside the variant. Note that changes t...</div><div class="ttdef"><b>Definition:</b> VariantType.h:25</div></div>
<div class="ttc" id="aclassez_abstract_member_property_htm"><div class="ttname"><a href="../../da/d67/classez_abstract_member_property.htm">ezAbstractMemberProperty</a></div><div class="ttdoc">This is the base class for all properties that are members of a class. It provides more information a...</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:236</div></div>
<div class="ttc" id="astructez_enum_htm_a7438b2c97eab52e031a6faeb4c5aa093"><div class="ttname"><a href="../../d6/dd9/structez_enum.htm#a7438b2c97eab52e031a6faeb4c5aa093">ezEnum::GetValue</a></div><div class="ttdeci">EZ_ALWAYS_INLINE StorageType GetValue() const</div><div class="ttdoc">Returns the enum value as an integer.</div><div class="ttdef"><b>Definition:</b> Enum.h:98</div></div>
<div class="ttc" id="astructez_reflection_utils_1_1_enum_conversion_mode_htm"><div class="ttname"><a href="../../d1/dc8/structez_reflection_utils_1_1_enum_conversion_mode.htm">ezReflectionUtils::EnumConversionMode</a></div><div class="ttdef"><b>Definition:</b> ReflectionUtils.h:72</div></div>
<div class="ttc" id="aclassez_reflection_utils_htm_acab62c04a4b0c4cd38a241a205268f8c"><div class="ttname"><a href="../../d3/da6/classez_reflection_utils.htm#acab62c04a4b0c4cd38a241a205268f8c">ezReflectionUtils::IsEqual</a></div><div class="ttdeci">static bool IsEqual(const T *pObject, const T *pObject2)</div><div class="ttdoc">Templated convenience function that calls IsEqual and automatically deduces the type.</div><div class="ttdef"><b>Definition:</b> ReflectionUtils.h:138</div></div>
<div class="ttc" id="astructez_hybrid_string_htm"><div class="ttname"><a href="../../d4/d53/structez_hybrid_string.htm">ezHybridString&lt; 32, ezDefaultAllocatorWrapper &gt;</a></div></div>
<div class="ttc" id="aclassez_reflection_utils_htm_ad95f7a70a6511583c8fd12ae43d184b6"><div class="ttname"><a href="../../d3/da6/classez_reflection_utils.htm#ad95f7a70a6511583c8fd12ae43d184b6">ezReflectionUtils::StringToEnumeration</a></div><div class="ttdeci">static bool StringToEnumeration(const char *szValue, ezEnum&lt; T &gt; &amp;out_value)</div><div class="ttdoc">Helper template to shorten the call for ezEnums.</div><div class="ttdef"><b>Definition:</b> ReflectionUtils.h:120</div></div>
<div class="ttc" id="aclassez_clamp_value_attribute_htm"><div class="ttname"><a href="../../d6/d7b/classez_clamp_value_attribute.htm">ezClampValueAttribute</a></div><div class="ttdoc">A property attribute that allows to define min and max values for the UI. Min or max may be set to an...</div><div class="ttdef"><b>Definition:</b> PropertyAttributes.h:198</div></div>
<div class="ttc" id="astructez_reflection_utils_1_1_enum_key_value_pair_htm"><div class="ttname"><a href="../../d9/dde/structez_reflection_utils_1_1_enum_key_value_pair.htm">ezReflectionUtils::EnumKeyValuePair</a></div><div class="ttdef"><b>Definition:</b> ReflectionUtils.h:104</div></div>
<div class="ttc" id="aclassez_dynamic_array_htm"><div class="ttname"><a href="../../d2/d4f/classez_dynamic_array.htm">ezDynamicArray</a></div><div class="ttdef"><b>Definition:</b> DynamicArray.h:80</div></div>
<div class="ttc" id="aclassez_reflection_utils_htm"><div class="ttname"><a href="../../d3/da6/classez_reflection_utils.htm">ezReflectionUtils</a></div><div class="ttdoc">Helper functions for handling reflection related operations.</div><div class="ttdef"><b>Definition:</b> ReflectionUtils.h:10</div></div>
<div class="ttc" id="astructez_enum_htm"><div class="ttname"><a href="../../d6/dd9/structez_enum.htm">ezEnum</a></div><div class="ttdoc">A custom enum implementation that allows to define the underlying storage type to control its memory ...</div><div class="ttdef"><b>Definition:</b> Enum.h:36</div></div>
<div class="ttc" id="aclassez_reflection_utils_htm_ac176791658ddd0fe4a2cf8d0b317d89d"><div class="ttname"><a href="../../d3/da6/classez_reflection_utils.htm#ac176791658ddd0fe4a2cf8d0b317d89d">ezReflectionUtils::EnumerationToString</a></div><div class="ttdeci">static bool EnumerationToString(ezEnum&lt; T &gt; value, ezStringBuilder &amp;out_sOutput, ezEnum&lt; EnumConversionMode &gt; conversionMode=EnumConversionMode::Default)</div><div class="ttdoc">Helper template to shorten the call for ezEnums.</div><div class="ttdef"><b>Definition:</b> ReflectionUtils.h:92</div></div>
<div class="ttc" id="aclassez_variant_htm"><div class="ttname"><a href="../../de/de6/classez_variant.htm">ezVariant</a></div><div class="ttdoc">ezVariant is a class that can store different types of variables, which is useful in situations where...</div><div class="ttdef"><b>Definition:</b> Variant.h:46</div></div>
<div class="ttc" id="aclassez_string_builder_htm"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></div><div class="ttdoc">ezStringBuilder is a class that is meant for creating and modifying strings.</div><div class="ttdef"><b>Definition:</b> StringBuilder.h:34</div></div>
<div class="ttc" id="astructez_bitflags_htm_aa93ba8c89c9f1c1cd79c87d02f6a3656"><div class="ttname"><a href="../../d1/dec/structez_bitflags.htm#aa93ba8c89c9f1c1cd79c87d02f6a3656">ezBitflags::GetValue</a></div><div class="ttdeci">EZ_ALWAYS_INLINE StorageType GetValue() const</div><div class="ttdoc">Returns the stored value as the underlying integer type.</div><div class="ttdef"><b>Definition:</b> Bitflags.h:196</div></div>
<div class="ttc" id="aclassez_abstract_property_htm"><div class="ttname"><a href="../../d6/d81/classez_abstract_property.htm">ezAbstractProperty</a></div><div class="ttdoc">This is the base interface for all properties in the reflection system. It provides enough informatio...</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:149</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_217b90e143c3d27cf4319fb9e916f4ad.htm">Reflection</a></li><li class="navelem"><b>ReflectionUtils.h</b></li>
    <li class="footer">Generated on Sat Nov 11 2023 19:40:54 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
