<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Containers/Blob.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">ezEngine<span id="projectnumber">&#160;Release 25.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function() { init_codefold(1); });
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('d3/da9/_blob_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">Blob.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span> </div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span> </div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="preprocessor">#include &lt;Foundation/Basics.h&gt;</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="preprocessor">#include &lt;Foundation/Types/ArrayPtr.h&gt;</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span> </div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="foldopen" id="foldopen00012" data-start="{" data-end="};">
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno"><a class="line" href="../../d3/da7/classez_blob_ptr.htm">   12</a></span><span class="keyword">class </span><a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr</a></div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span>{</div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span>  EZ_DECLARE_POD_TYPE();</div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span> </div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span>  <span class="keyword">static_assert</span>(!std::is_same_v&lt;T, void&gt;, <span class="stringliteral">&quot;ezBlobPtr&lt;void&gt; is not allowed (anymore)&quot;</span>);</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span>  <span class="keyword">static_assert</span>(!std::is_same_v&lt;T, const void&gt;, <span class="stringliteral">&quot;ezBlobPtr&lt;void&gt; is not allowed (anymore)&quot;</span>);</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span> </div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span>  <span class="keyword">using </span>ByteType = <span class="keyword">typename</span> ezArrayPtrDetail::ByteTypeHelper&lt;T&gt;::type;</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span>  <span class="keyword">using </span>ValueType = T;</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span>  <span class="keyword">using </span>PointerType = T*;</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span> </div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno"><a class="line" href="../../d3/da7/classez_blob_ptr.htm#acfed2d03b917bf465f9856ef5b6916a8">   25</a></span>  <a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#acfed2d03b917bf465f9856ef5b6916a8">ezBlobPtr</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span> </div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div>
<div class="foldopen" id="foldopen00029" data-start="{" data-end="}">
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno"><a class="line" href="../../d3/da7/classez_blob_ptr.htm#acc2cfac9aa37ac11641fb7ee843b28fb">   29</a></span>  <span class="keyword">inline</span> <a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#acc2cfac9aa37ac11641fb7ee843b28fb">ezBlobPtr</a>(U* pPtr, ezUInt64 uiCount)</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span>    : m_pPtr(pPtr)</div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span>    , m_uiCount(uiCount)</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span>  {</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>    <span class="comment">// If any of the arguments is invalid, we invalidate ourself.</span></div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span>    <span class="keywordflow">if</span> (m_pPtr == <span class="keyword">nullptr</span> || m_uiCount == 0)</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>    {</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span>      m_pPtr = <span class="keyword">nullptr</span>;</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span>      m_uiCount = 0;</div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>    }</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span>  }</div>
</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span> </div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>  <span class="keyword">template</span> &lt;<span class="keywordtype">size_t</span> N&gt;</div>
<div class="foldopen" id="foldopen00043" data-start="{" data-end="}">
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno"><a class="line" href="../../d3/da7/classez_blob_ptr.htm#a317a1e5de3f974d0e498a75db1956886">   43</a></span>  EZ_ALWAYS_INLINE <a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a317a1e5de3f974d0e498a75db1956886">ezBlobPtr</a>(ValueType (&amp;staticArray)[N])</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>    : m_pPtr(staticArray)</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>    , m_uiCount(static_cast&lt;ezUInt64&gt;(N))</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span>  {</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span>  }</div>
</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span> </div>
<div class="foldopen" id="foldopen00050" data-start="{" data-end="}">
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno"><a class="line" href="../../d3/da7/classez_blob_ptr.htm#a9d8ea856d504f38be18f1ae7247933f5">   50</a></span>  EZ_ALWAYS_INLINE <a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a9d8ea856d504f38be18f1ae7247933f5">ezBlobPtr</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;T&gt;</a>&amp; other)</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>    : m_pPtr(other.m_pPtr)</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>    , m_uiCount(other.m_uiCount)</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>  {</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>  }</div>
</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span> </div>
<div class="foldopen" id="foldopen00057" data-start="{" data-end="}">
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno"><a class="line" href="../../d3/da7/classez_blob_ptr.htm#a1f09ae419567a8ca84f1f07630a374fc">   57</a></span>  EZ_ALWAYS_INLINE <a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a1f09ae419567a8ca84f1f07630a374fc">ezBlobPtr</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;T&gt;</a>&amp; other)</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>    : m_pPtr(other.<a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">GetPtr</a>())</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>    , m_uiCount(other.<a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>())</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span>  {</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>  }</div>
</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span> </div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno"><a class="line" href="../../d3/da7/classez_blob_ptr.htm#a27b6cdf82023c6dd11e5996eb0885c1d">   64</a></span>  <span class="keyword">operator</span> <a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;const T&gt;</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;const T&gt;</a>(<span class="keyword">static_cast&lt;</span><span class="keyword">const </span>T*<span class="keyword">&gt;</span>(<a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">GetPtr</a>()), <a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>()); }</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span> </div>
<div class="foldopen" id="foldopen00067" data-start="{" data-end="}">
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno"><a class="line" href="../../d3/da7/classez_blob_ptr.htm#a135088d7eeddb6a98ba64c7907bd6c3c">   67</a></span>  EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a135088d7eeddb6a98ba64c7907bd6c3c">operator=</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;T&gt;</a>&amp; other)</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>  {</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>    m_pPtr = other.m_pPtr;</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>    m_uiCount = other.m_uiCount;</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>  }</div>
</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span> </div>
<div class="foldopen" id="foldopen00074" data-start="{" data-end="}">
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno"><a class="line" href="../../d3/da7/classez_blob_ptr.htm#aea8418d45646d6c357df8cf7d67ebaf2">   74</a></span>  EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#aea8418d45646d6c357df8cf7d67ebaf2">operator=</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;T&gt;</a>&amp; other)</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>  {</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>    m_pPtr = other.<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#aba4e7585190f337c6428f2fe25828b8a">GetPtr</a>();</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>    m_uiCount = other.<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>();</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>  }</div>
</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span> </div>
<div class="foldopen" id="foldopen00081" data-start="{" data-end="}">
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno"><a class="line" href="../../d3/da7/classez_blob_ptr.htm#a2e1fdec1af16b1507f9d775cc9d4f533">   81</a></span>  EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a2e1fdec1af16b1507f9d775cc9d4f533">Clear</a>()</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span>  {</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>    m_pPtr = <span class="keyword">nullptr</span>;</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>    m_uiCount = 0;</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>  }</div>
</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span> </div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>  EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a135088d7eeddb6a98ba64c7907bd6c3c">operator=</a>(std::nullptr_t)</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>  {</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>    m_pPtr = <span class="keyword">nullptr</span>;</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>    m_uiCount = 0;</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>  }</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span> </div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno"><a class="line" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">   94</a></span>  EZ_ALWAYS_INLINE PointerType <a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">GetPtr</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_pPtr; }</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span> </div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno"><a class="line" href="../../d3/da7/classez_blob_ptr.htm#a0fa3769cce78cf513df8ef35fb277bc2">   97</a></span>  EZ_ALWAYS_INLINE PointerType <a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a0fa3769cce78cf513df8ef35fb277bc2">GetPtr</a>() { <span class="keywordflow">return</span> m_pPtr; }</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span> </div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno"><a class="line" href="../../d3/da7/classez_blob_ptr.htm#a4e3bbf73b652ce242ba30cdc756f288e">  100</a></span>  EZ_ALWAYS_INLINE PointerType <a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a4e3bbf73b652ce242ba30cdc756f288e">GetEndPtr</a>() { <span class="keywordflow">return</span> m_pPtr + m_uiCount; }</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span> </div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno"><a class="line" href="../../d3/da7/classez_blob_ptr.htm#a75d59f4449a76b89ee170d7eb29374b5">  103</a></span>  EZ_ALWAYS_INLINE PointerType <a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a75d59f4449a76b89ee170d7eb29374b5">GetEndPtr</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_pPtr + m_uiCount; }</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span> </div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno"><a class="line" href="../../d3/da7/classez_blob_ptr.htm#a530052b53346ced27aeee754cc5f10db">  106</a></span>  EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a530052b53346ced27aeee754cc5f10db">IsEmpty</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>() == 0; }</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span> </div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno"><a class="line" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">  109</a></span>  EZ_ALWAYS_INLINE ezUInt64 <a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_uiCount; }</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span> </div>
<div class="foldopen" id="foldopen00112" data-start="{" data-end="}">
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno"><a class="line" href="../../d3/da7/classez_blob_ptr.htm#a346ef93525ea88162c4a7588147ad488">  112</a></span>  EZ_FORCE_INLINE <a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;T&gt;</a> <a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a346ef93525ea88162c4a7588147ad488">GetSubArray</a>(ezUInt64 uiStart, ezUInt64 uiCount) <span class="keyword">const</span> <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>  {</div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span>    EZ_ASSERT_DEV(</div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span>      uiStart + uiCount &lt;= <a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>(), <span class="stringliteral">&quot;uiStart+uiCount ({0}) has to be smaller or equal than the count ({1}).&quot;</span>, uiStart + uiCount, <a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>());</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>    <span class="keywordflow">return</span> <a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;T&gt;</a>(<a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">GetPtr</a>() + uiStart, uiCount);</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>  }</div>
</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span> </div>
<div class="foldopen" id="foldopen00121" data-start="{" data-end="}">
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno"><a class="line" href="../../d3/da7/classez_blob_ptr.htm#ac07adf64c851dd3a60caa8e24f6540ff">  121</a></span>  EZ_FORCE_INLINE <a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;T&gt;</a> <a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#ac07adf64c851dd3a60caa8e24f6540ff">GetSubArray</a>(ezUInt64 uiStart) <span class="keyword">const</span> <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>  {</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span>    EZ_ASSERT_DEV(uiStart &lt;= <a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>(), <span class="stringliteral">&quot;uiStart ({0}) has to be smaller or equal than the count ({1}).&quot;</span>, uiStart, <a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>());</div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span>    <span class="keywordflow">return</span> <a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;T&gt;</a>(<a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">GetPtr</a>() + uiStart, <a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>() - uiStart);</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span>  }</div>
</div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span> </div>
<div class="foldopen" id="foldopen00128" data-start="{" data-end="}">
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno"><a class="line" href="../../d3/da7/classez_blob_ptr.htm#a76a1f5d0b6bc468dd2805bef30b82793">  128</a></span>  EZ_ALWAYS_INLINE <a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;const ByteType&gt;</a> <a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a76a1f5d0b6bc468dd2805bef30b82793">ToByteBlob</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span><span class="keyword">  </span>{</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span>    <span class="keywordflow">return</span> <a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;const ByteType&gt;</a>(<span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>ByteType*<span class="keyword">&gt;</span>(<a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">GetPtr</a>()), <a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>() * <span class="keyword">sizeof</span>(T));</div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span>  }</div>
</div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span> </div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno"><a class="line" href="../../d3/da7/classez_blob_ptr.htm#a7fb45cd67fd48b34ca3bb35efe4f29a8">  134</a></span>  EZ_ALWAYS_INLINE <a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;ByteType&gt;</a> <a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a7fb45cd67fd48b34ca3bb35efe4f29a8">ToByteBlob</a>() { <span class="keywordflow">return</span> <a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;ByteType&gt;</a>(<span class="keyword">reinterpret_cast&lt;</span>ByteType*<span class="keyword">&gt;</span>(<a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">GetPtr</a>()), <a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>() * <span class="keyword">sizeof</span>(T)); }</div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span> </div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div>
<div class="foldopen" id="foldopen00138" data-start="{" data-end="}">
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno"><a class="line" href="../../d3/da7/classez_blob_ptr.htm#a40f90fae8495215b27c05c3f0538dabf">  138</a></span>  EZ_ALWAYS_INLINE <a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;U&gt;</a> <a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a40f90fae8495215b27c05c3f0538dabf">Cast</a>()</div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span>  {</div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>    <span class="keyword">static_assert</span>(<span class="keyword">sizeof</span>(T) == <span class="keyword">sizeof</span>(U), <span class="stringliteral">&quot;Can only cast with equivalent element size.&quot;</span>);</div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span>    <span class="keywordflow">return</span> <a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;U&gt;</a>(<span class="keyword">reinterpret_cast&lt;</span>U*<span class="keyword">&gt;</span>(<a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">GetPtr</a>()), <a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>());</div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>  }</div>
</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span> </div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div>
<div class="foldopen" id="foldopen00146" data-start="{" data-end="}">
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno"><a class="line" href="../../d3/da7/classez_blob_ptr.htm#a3af24c2a03ba821f3ec30805d4e695e0">  146</a></span>  EZ_ALWAYS_INLINE <a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;const U&gt;</a> <a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a3af24c2a03ba821f3ec30805d4e695e0">Cast</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span><span class="keyword">  </span>{</div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span>    <span class="keyword">static_assert</span>(<span class="keyword">sizeof</span>(T) == <span class="keyword">sizeof</span>(U), <span class="stringliteral">&quot;Can only cast with equivalent element size.&quot;</span>);</div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span>    <span class="keywordflow">return</span> <a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;const U&gt;</a>(<span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>U*<span class="keyword">&gt;</span>(<a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">GetPtr</a>()), <a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>());</div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span>  }</div>
</div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span> </div>
<div class="foldopen" id="foldopen00153" data-start="{" data-end="}">
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno"><a class="line" href="../../d3/da7/classez_blob_ptr.htm#ac908025a233a10a7cea2b6e7ec76a08c">  153</a></span>  EZ_FORCE_INLINE <span class="keyword">const</span> ValueType&amp; <a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#ac908025a233a10a7cea2b6e7ec76a08c">operator[]</a>(ezUInt64 uiIndex) <span class="keyword">const</span> <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span>  {</div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span>    EZ_ASSERT_DEBUG(uiIndex &lt; <a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>(), <span class="stringliteral">&quot;Cannot access element {0}, the array only holds {1} elements.&quot;</span>, uiIndex, <a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>());</div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span>    <span class="keywordflow">return</span> *<span class="keyword">static_cast&lt;</span><span class="keyword">const </span>ValueType*<span class="keyword">&gt;</span>(<a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">GetPtr</a>() + uiIndex);</div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span>  }</div>
</div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span> </div>
<div class="foldopen" id="foldopen00160" data-start="{" data-end="}">
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno"><a class="line" href="../../d3/da7/classez_blob_ptr.htm#a560218fc7d30c7e0bf139f05ef4eb3ef">  160</a></span>  EZ_FORCE_INLINE ValueType&amp; <a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a560218fc7d30c7e0bf139f05ef4eb3ef">operator[]</a>(ezUInt64 uiIndex) <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span>  {</div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span>    EZ_ASSERT_DEBUG(uiIndex &lt; <a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>(), <span class="stringliteral">&quot;Cannot access element {0}, the array only holds {1} elements.&quot;</span>, uiIndex, <a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>());</div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span>    <span class="keywordflow">return</span> *<span class="keyword">static_cast&lt;</span>ValueType*<span class="keyword">&gt;</span>(<a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">GetPtr</a>() + uiIndex);</div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span>  }</div>
</div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span> </div>
<div class="foldopen" id="foldopen00167" data-start="{" data-end="}">
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno"><a class="line" href="../../d3/da7/classez_blob_ptr.htm#a49883b9a269490144839ffe626951828">  167</a></span>  <span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a49883b9a269490144839ffe626951828">operator==</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;const T&gt;</a>&amp; other) <span class="keyword">const</span> <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span>  {</div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span>    <span class="keywordflow">if</span> (<a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>() != other.GetCount())</div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span>      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span> </div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span>    <span class="keywordflow">if</span> (<a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">GetPtr</a>() == other.GetPtr())</div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span>      <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span> </div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span>    <span class="keywordflow">return</span> <a class="code hl_function" href="../../dc/d4d/classez_memory_utils.htm#a744d60b4b000c61f2dd3819a12410595">ezMemoryUtils::IsEqual</a>(<span class="keyword">static_cast&lt;</span><span class="keyword">const </span>ValueType*<span class="keyword">&gt;</span>(<a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">GetPtr</a>()), <span class="keyword">static_cast&lt;</span><span class="keyword">const </span>ValueType*<span class="keyword">&gt;</span>(other.GetPtr()), <span class="keyword">static_cast&lt;</span><span class="keywordtype">size_t</span><span class="keyword">&gt;</span>(<a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>()));</div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span>  }</div>
</div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span> </div>
<div class="foldopen" id="foldopen00179" data-start="{" data-end="}">
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno"><a class="line" href="../../d3/da7/classez_blob_ptr.htm#ac39a476dd681295012ca4babad44a196">  179</a></span>  EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#ac39a476dd681295012ca4babad44a196">operator!=</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;const T&gt;</a>&amp; other) <span class="keyword">const</span> <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span>  {</div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span>    <span class="keywordflow">return</span> !(*<span class="keyword">this</span> == other);</div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span>  }</div>
</div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno">  183</span> </div>
<div class="foldopen" id="foldopen00185" data-start="{" data-end="}">
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno"><a class="line" href="../../d3/da7/classez_blob_ptr.htm#ab51148660196ea156cbd50b2c85d773b">  185</a></span>  <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#ab51148660196ea156cbd50b2c85d773b">CopyFrom</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;const T&gt;</a>&amp; other) <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span>  {</div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span>    EZ_ASSERT_DEV(<a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>() == other.<a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>(), <span class="stringliteral">&quot;Count for copy does not match. Target has {0} elements, source {1} elements&quot;</span>, <a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>(), other.<a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>());</div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span> </div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span>    <a class="code hl_function" href="../../dc/d4d/classez_memory_utils.htm#a87c41811a95fa63da651f6779931d9cf">ezMemoryUtils::Copy</a>(<span class="keyword">static_cast&lt;</span>ValueType*<span class="keyword">&gt;</span>(<a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">GetPtr</a>()), <span class="keyword">static_cast&lt;</span><span class="keyword">const </span>ValueType*<span class="keyword">&gt;</span>(other.<a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">GetPtr</a>()), <span class="keyword">static_cast&lt;</span><span class="keywordtype">size_t</span><span class="keyword">&gt;</span>(<a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>()));</div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span>  }</div>
</div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span> </div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span>  EZ_ALWAYS_INLINE <span class="keywordtype">void</span> Swap(<a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;T&gt;</a>&amp; other)</div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span>  {</div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span>    <a class="code hl_function" href="../../db/d78/namespaceez_math.htm#a0cd624055a97c96719b925cb11e6a08e">ezMath::Swap</a>(m_pPtr, other.m_pPtr);</div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span>    <a class="code hl_function" href="../../db/d78/namespaceez_math.htm#a0cd624055a97c96719b925cb11e6a08e">ezMath::Swap</a>(m_uiCount, other.m_uiCount);</div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span>  }</div>
<div class="line"><a id="l00197" name="l00197"></a><span class="lineno">  197</span> </div>
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno">  198</span>  <span class="keyword">using </span>const_iterator = <span class="keyword">const</span> T*;</div>
<div class="line"><a id="l00199" name="l00199"></a><span class="lineno">  199</span>  <span class="keyword">using </span>const_reverse_iterator = <a class="code hl_struct" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">const_reverse_pointer_iterator&lt;T&gt;</a>;</div>
<div class="line"><a id="l00200" name="l00200"></a><span class="lineno">  200</span>  <span class="keyword">using </span>iterator = T*;</div>
<div class="line"><a id="l00201" name="l00201"></a><span class="lineno">  201</span>  <span class="keyword">using </span>reverse_iterator = <a class="code hl_struct" href="../../d3/df2/structreverse__pointer__iterator.htm">reverse_pointer_iterator&lt;T&gt;</a>;</div>
<div class="line"><a id="l00202" name="l00202"></a><span class="lineno">  202</span> </div>
<div class="line"><a id="l00203" name="l00203"></a><span class="lineno">  203</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno">  204</span>  PointerType m_pPtr = <span class="keyword">nullptr</span>;</div>
<div class="line"><a id="l00205" name="l00205"></a><span class="lineno">  205</span>  ezUInt64 m_uiCount = 0u;</div>
<div class="line"><a id="l00206" name="l00206"></a><span class="lineno">  206</span>};</div>
</div>
<div class="line"><a id="l00207" name="l00207"></a><span class="lineno">  207</span> </div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno">  209</span> </div>
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno">  210</span><span class="keyword">using </span><a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezByteBlobPtr</a> = <a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;ezUInt8&gt;</a>;</div>
<div class="line"><a id="l00211" name="l00211"></a><span class="lineno">  211</span><span class="keyword">using </span><a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezConstByteBlobPtr</a> = <a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;const ezUInt8&gt;</a>;</div>
<div class="line"><a id="l00212" name="l00212"></a><span class="lineno">  212</span> </div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno">  214</span> </div>
<div class="line"><a id="l00216" name="l00216"></a><span class="lineno">  216</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00217" name="l00217"></a><span class="lineno">  217</span>EZ_ALWAYS_INLINE <a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;T&gt;</a> ezMakeBlobPtr(T* pPtr, ezUInt64 uiCount)</div>
<div class="line"><a id="l00218" name="l00218"></a><span class="lineno">  218</span>{</div>
<div class="line"><a id="l00219" name="l00219"></a><span class="lineno">  219</span>  <span class="keywordflow">return</span> <a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;T&gt;</a>(pPtr, uiCount);</div>
<div class="line"><a id="l00220" name="l00220"></a><span class="lineno">  220</span>}</div>
<div class="line"><a id="l00221" name="l00221"></a><span class="lineno">  221</span> </div>
<div class="line"><a id="l00223" name="l00223"></a><span class="lineno">  223</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, ezUInt64 N&gt;</div>
<div class="line"><a id="l00224" name="l00224"></a><span class="lineno">  224</span>EZ_ALWAYS_INLINE <a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;T&gt;</a> ezMakeBlobPtr(T (&amp;staticArray)[N])</div>
<div class="line"><a id="l00225" name="l00225"></a><span class="lineno">  225</span>{</div>
<div class="line"><a id="l00226" name="l00226"></a><span class="lineno">  226</span>  <span class="keywordflow">return</span> <a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;T&gt;</a>(staticArray);</div>
<div class="line"><a id="l00227" name="l00227"></a><span class="lineno">  227</span>}</div>
<div class="line"><a id="l00228" name="l00228"></a><span class="lineno">  228</span> </div>
<div class="line"><a id="l00230" name="l00230"></a><span class="lineno">  230</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00231" name="l00231"></a><span class="lineno">  231</span>EZ_ALWAYS_INLINE <a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezConstByteBlobPtr</a> ezMakeByteBlobPtr(<span class="keyword">const</span> T* pPtr, ezUInt32 uiCount)</div>
<div class="line"><a id="l00232" name="l00232"></a><span class="lineno">  232</span>{</div>
<div class="line"><a id="l00233" name="l00233"></a><span class="lineno">  233</span>  <span class="keywordflow">return</span> <a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezConstByteBlobPtr</a>(<span class="keyword">static_cast&lt;</span><span class="keyword">const </span>ezUInt8*<span class="keyword">&gt;</span>(pPtr), uiCount * <span class="keyword">sizeof</span>(T));</div>
<div class="line"><a id="l00234" name="l00234"></a><span class="lineno">  234</span>}</div>
<div class="line"><a id="l00235" name="l00235"></a><span class="lineno">  235</span> </div>
<div class="line"><a id="l00237" name="l00237"></a><span class="lineno">  237</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00238" name="l00238"></a><span class="lineno">  238</span>EZ_ALWAYS_INLINE <a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezByteBlobPtr</a> ezMakeByteBlobPtr(T* pPtr, ezUInt32 uiCount)</div>
<div class="line"><a id="l00239" name="l00239"></a><span class="lineno">  239</span>{</div>
<div class="line"><a id="l00240" name="l00240"></a><span class="lineno">  240</span>  <span class="keywordflow">return</span> <a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezByteBlobPtr</a>(<span class="keyword">reinterpret_cast&lt;</span>ezUInt8*<span class="keyword">&gt;</span>(pPtr), uiCount * <span class="keyword">sizeof</span>(T));</div>
<div class="line"><a id="l00241" name="l00241"></a><span class="lineno">  241</span>}</div>
<div class="line"><a id="l00242" name="l00242"></a><span class="lineno">  242</span> </div>
<div class="line"><a id="l00244" name="l00244"></a><span class="lineno">  244</span>EZ_ALWAYS_INLINE <a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezByteBlobPtr</a> ezMakeByteBlobPtr(<span class="keywordtype">void</span>* pPtr, ezUInt32 uiBytes)</div>
<div class="line"><a id="l00245" name="l00245"></a><span class="lineno">  245</span>{</div>
<div class="line"><a id="l00246" name="l00246"></a><span class="lineno">  246</span>  <span class="keywordflow">return</span> <a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezByteBlobPtr</a>(<span class="keyword">reinterpret_cast&lt;</span>ezUInt8*<span class="keyword">&gt;</span>(pPtr), uiBytes);</div>
<div class="line"><a id="l00247" name="l00247"></a><span class="lineno">  247</span>}</div>
<div class="line"><a id="l00248" name="l00248"></a><span class="lineno">  248</span> </div>
<div class="line"><a id="l00250" name="l00250"></a><span class="lineno">  250</span>EZ_ALWAYS_INLINE <a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezConstByteBlobPtr</a> ezMakeByteBlobPtr(<span class="keyword">const</span> <span class="keywordtype">void</span>* pPtr, ezUInt32 uiBytes)</div>
<div class="line"><a id="l00251" name="l00251"></a><span class="lineno">  251</span>{</div>
<div class="line"><a id="l00252" name="l00252"></a><span class="lineno">  252</span>  <span class="keywordflow">return</span> <a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezConstByteBlobPtr</a>(<span class="keyword">static_cast&lt;</span><span class="keyword">const </span>ezUInt8*<span class="keyword">&gt;</span>(pPtr), uiBytes);</div>
<div class="line"><a id="l00253" name="l00253"></a><span class="lineno">  253</span>}</div>
<div class="line"><a id="l00254" name="l00254"></a><span class="lineno">  254</span> </div>
<div class="line"><a id="l00256" name="l00256"></a><span class="lineno">  256</span> </div>
<div class="line"><a id="l00257" name="l00257"></a><span class="lineno">  257</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00258" name="l00258"></a><span class="lineno">  258</span><span class="keyword">typename</span> ezBlobPtr&lt;T&gt;::iterator begin(<a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;T&gt;</a>&amp; in_container)</div>
<div class="line"><a id="l00259" name="l00259"></a><span class="lineno">  259</span>{</div>
<div class="line"><a id="l00260" name="l00260"></a><span class="lineno">  260</span>  <span class="keywordflow">return</span> in_container.<a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">GetPtr</a>();</div>
<div class="line"><a id="l00261" name="l00261"></a><span class="lineno">  261</span>}</div>
<div class="line"><a id="l00262" name="l00262"></a><span class="lineno">  262</span> </div>
<div class="line"><a id="l00263" name="l00263"></a><span class="lineno">  263</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00264" name="l00264"></a><span class="lineno">  264</span><span class="keyword">typename</span> ezBlobPtr&lt;T&gt;::const_iterator begin(<span class="keyword">const</span> <a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;T&gt;</a>&amp; container)</div>
<div class="line"><a id="l00265" name="l00265"></a><span class="lineno">  265</span>{</div>
<div class="line"><a id="l00266" name="l00266"></a><span class="lineno">  266</span>  <span class="keywordflow">return</span> container.<a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">GetPtr</a>();</div>
<div class="line"><a id="l00267" name="l00267"></a><span class="lineno">  267</span>}</div>
<div class="line"><a id="l00268" name="l00268"></a><span class="lineno">  268</span> </div>
<div class="line"><a id="l00269" name="l00269"></a><span class="lineno">  269</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00270" name="l00270"></a><span class="lineno">  270</span><span class="keyword">typename</span> ezBlobPtr&lt;T&gt;::const_iterator cbegin(<span class="keyword">const</span> <a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;T&gt;</a>&amp; container)</div>
<div class="line"><a id="l00271" name="l00271"></a><span class="lineno">  271</span>{</div>
<div class="line"><a id="l00272" name="l00272"></a><span class="lineno">  272</span>  <span class="keywordflow">return</span> container.<a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">GetPtr</a>();</div>
<div class="line"><a id="l00273" name="l00273"></a><span class="lineno">  273</span>}</div>
<div class="line"><a id="l00274" name="l00274"></a><span class="lineno">  274</span> </div>
<div class="line"><a id="l00275" name="l00275"></a><span class="lineno">  275</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00276" name="l00276"></a><span class="lineno">  276</span><span class="keyword">typename</span> <a class="code hl_struct" href="../../d3/df2/structreverse__pointer__iterator.htm">ezBlobPtr&lt;T&gt;::reverse_iterator</a> rbegin(<a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;T&gt;</a>&amp; in_container)</div>
<div class="line"><a id="l00277" name="l00277"></a><span class="lineno">  277</span>{</div>
<div class="line"><a id="l00278" name="l00278"></a><span class="lineno">  278</span>  <span class="keywordflow">return</span> <span class="keyword">typename</span> <a class="code hl_struct" href="../../d3/df2/structreverse__pointer__iterator.htm">ezBlobPtr&lt;T&gt;::reverse_iterator</a>(in_container.<a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">GetPtr</a>() + in_container.<a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>() - 1);</div>
<div class="line"><a id="l00279" name="l00279"></a><span class="lineno">  279</span>}</div>
<div class="line"><a id="l00280" name="l00280"></a><span class="lineno">  280</span> </div>
<div class="line"><a id="l00281" name="l00281"></a><span class="lineno">  281</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00282" name="l00282"></a><span class="lineno">  282</span><span class="keyword">typename</span> <a class="code hl_struct" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">ezBlobPtr&lt;T&gt;::const_reverse_iterator</a> rbegin(<span class="keyword">const</span> <a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;T&gt;</a>&amp; container)</div>
<div class="line"><a id="l00283" name="l00283"></a><span class="lineno">  283</span>{</div>
<div class="line"><a id="l00284" name="l00284"></a><span class="lineno">  284</span>  <span class="keywordflow">return</span> <span class="keyword">typename</span> <a class="code hl_struct" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">ezBlobPtr&lt;T&gt;::const_reverse_iterator</a>(container.<a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">GetPtr</a>() + container.<a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>() - 1);</div>
<div class="line"><a id="l00285" name="l00285"></a><span class="lineno">  285</span>}</div>
<div class="line"><a id="l00286" name="l00286"></a><span class="lineno">  286</span> </div>
<div class="line"><a id="l00287" name="l00287"></a><span class="lineno">  287</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00288" name="l00288"></a><span class="lineno">  288</span><span class="keyword">typename</span> <a class="code hl_struct" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">ezBlobPtr&lt;T&gt;::const_reverse_iterator</a> crbegin(<span class="keyword">const</span> <a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;T&gt;</a>&amp; container)</div>
<div class="line"><a id="l00289" name="l00289"></a><span class="lineno">  289</span>{</div>
<div class="line"><a id="l00290" name="l00290"></a><span class="lineno">  290</span>  <span class="keywordflow">return</span> <span class="keyword">typename</span> <a class="code hl_struct" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">ezBlobPtr&lt;T&gt;::const_reverse_iterator</a>(container.<a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">GetPtr</a>() + container.<a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>() - 1);</div>
<div class="line"><a id="l00291" name="l00291"></a><span class="lineno">  291</span>}</div>
<div class="line"><a id="l00292" name="l00292"></a><span class="lineno">  292</span> </div>
<div class="line"><a id="l00293" name="l00293"></a><span class="lineno">  293</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00294" name="l00294"></a><span class="lineno">  294</span><span class="keyword">typename</span> ezBlobPtr&lt;T&gt;::iterator end(<a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;T&gt;</a>&amp; in_container)</div>
<div class="line"><a id="l00295" name="l00295"></a><span class="lineno">  295</span>{</div>
<div class="line"><a id="l00296" name="l00296"></a><span class="lineno">  296</span>  <span class="keywordflow">return</span> in_container.<a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">GetPtr</a>() + in_container.<a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>();</div>
<div class="line"><a id="l00297" name="l00297"></a><span class="lineno">  297</span>}</div>
<div class="line"><a id="l00298" name="l00298"></a><span class="lineno">  298</span> </div>
<div class="line"><a id="l00299" name="l00299"></a><span class="lineno">  299</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00300" name="l00300"></a><span class="lineno">  300</span><span class="keyword">typename</span> ezBlobPtr&lt;T&gt;::const_iterator end(<span class="keyword">const</span> <a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;T&gt;</a>&amp; container)</div>
<div class="line"><a id="l00301" name="l00301"></a><span class="lineno">  301</span>{</div>
<div class="line"><a id="l00302" name="l00302"></a><span class="lineno">  302</span>  <span class="keywordflow">return</span> container.<a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">GetPtr</a>() + container.<a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>();</div>
<div class="line"><a id="l00303" name="l00303"></a><span class="lineno">  303</span>}</div>
<div class="line"><a id="l00304" name="l00304"></a><span class="lineno">  304</span> </div>
<div class="line"><a id="l00305" name="l00305"></a><span class="lineno">  305</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00306" name="l00306"></a><span class="lineno">  306</span><span class="keyword">typename</span> ezBlobPtr&lt;T&gt;::const_iterator cend(<span class="keyword">const</span> <a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;T&gt;</a>&amp; container)</div>
<div class="line"><a id="l00307" name="l00307"></a><span class="lineno">  307</span>{</div>
<div class="line"><a id="l00308" name="l00308"></a><span class="lineno">  308</span>  <span class="keywordflow">return</span> container.<a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">GetPtr</a>() + container.<a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>();</div>
<div class="line"><a id="l00309" name="l00309"></a><span class="lineno">  309</span>}</div>
<div class="line"><a id="l00310" name="l00310"></a><span class="lineno">  310</span> </div>
<div class="line"><a id="l00311" name="l00311"></a><span class="lineno">  311</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00312" name="l00312"></a><span class="lineno">  312</span><span class="keyword">typename</span> <a class="code hl_struct" href="../../d3/df2/structreverse__pointer__iterator.htm">ezBlobPtr&lt;T&gt;::reverse_iterator</a> rend(<a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;T&gt;</a>&amp; in_container)</div>
<div class="line"><a id="l00313" name="l00313"></a><span class="lineno">  313</span>{</div>
<div class="line"><a id="l00314" name="l00314"></a><span class="lineno">  314</span>  <span class="keywordflow">return</span> <span class="keyword">typename</span> <a class="code hl_struct" href="../../d3/df2/structreverse__pointer__iterator.htm">ezBlobPtr&lt;T&gt;::reverse_iterator</a>(in_container.<a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">GetPtr</a>() - 1);</div>
<div class="line"><a id="l00315" name="l00315"></a><span class="lineno">  315</span>}</div>
<div class="line"><a id="l00316" name="l00316"></a><span class="lineno">  316</span> </div>
<div class="line"><a id="l00317" name="l00317"></a><span class="lineno">  317</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00318" name="l00318"></a><span class="lineno">  318</span><span class="keyword">typename</span> <a class="code hl_struct" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">ezBlobPtr&lt;T&gt;::const_reverse_iterator</a> rend(<span class="keyword">const</span> <a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;T&gt;</a>&amp; container)</div>
<div class="line"><a id="l00319" name="l00319"></a><span class="lineno">  319</span>{</div>
<div class="line"><a id="l00320" name="l00320"></a><span class="lineno">  320</span>  <span class="keywordflow">return</span> <span class="keyword">typename</span> <a class="code hl_struct" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">ezBlobPtr&lt;T&gt;::const_reverse_iterator</a>(container.<a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">GetPtr</a>() - 1);</div>
<div class="line"><a id="l00321" name="l00321"></a><span class="lineno">  321</span>}</div>
<div class="line"><a id="l00322" name="l00322"></a><span class="lineno">  322</span> </div>
<div class="line"><a id="l00323" name="l00323"></a><span class="lineno">  323</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00324" name="l00324"></a><span class="lineno">  324</span><span class="keyword">typename</span> <a class="code hl_struct" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">ezBlobPtr&lt;T&gt;::const_reverse_iterator</a> crend(<span class="keyword">const</span> <a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;T&gt;</a>&amp; container)</div>
<div class="line"><a id="l00325" name="l00325"></a><span class="lineno">  325</span>{</div>
<div class="line"><a id="l00326" name="l00326"></a><span class="lineno">  326</span>  <span class="keywordflow">return</span> <span class="keyword">typename</span> <a class="code hl_struct" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">ezBlobPtr&lt;T&gt;::const_reverse_iterator</a>(container.<a class="code hl_function" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">GetPtr</a>() - 1);</div>
<div class="line"><a id="l00327" name="l00327"></a><span class="lineno">  327</span>}</div>
<div class="line"><a id="l00328" name="l00328"></a><span class="lineno">  328</span> </div>
<div class="foldopen" id="foldopen00332" data-start="{" data-end="};">
<div class="line"><a id="l00332" name="l00332"></a><span class="lineno"><a class="line" href="../../dd/db8/classez_blob.htm">  332</a></span><span class="keyword">class </span>EZ_FOUNDATION_DLL <a class="code hl_class" href="../../dd/db8/classez_blob.htm">ezBlob</a></div>
<div class="line"><a id="l00333" name="l00333"></a><span class="lineno">  333</span>{</div>
<div class="line"><a id="l00334" name="l00334"></a><span class="lineno">  334</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00335" name="l00335"></a><span class="lineno">  335</span>  EZ_DECLARE_MEM_RELOCATABLE_TYPE();</div>
<div class="line"><a id="l00336" name="l00336"></a><span class="lineno">  336</span> </div>
<div class="line"><a id="l00338" name="l00338"></a><span class="lineno"><a class="line" href="../../dd/db8/classez_blob.htm#aefe23db6d5baaf7d410399b2d127a1dc">  338</a></span>  <a class="code hl_function" href="../../dd/db8/classez_blob.htm#aefe23db6d5baaf7d410399b2d127a1dc">ezBlob</a>();</div>
<div class="line"><a id="l00339" name="l00339"></a><span class="lineno">  339</span> </div>
<div class="line"><a id="l00341" name="l00341"></a><span class="lineno">  341</span>  <a class="code hl_class" href="../../dd/db8/classez_blob.htm">ezBlob</a>(<a class="code hl_class" href="../../dd/db8/classez_blob.htm">ezBlob</a>&amp;&amp; other);</div>
<div class="line"><a id="l00342" name="l00342"></a><span class="lineno">  342</span> </div>
<div class="line"><a id="l00344" name="l00344"></a><span class="lineno">  344</span>  <span class="keywordtype">void</span> operator=(<a class="code hl_class" href="../../dd/db8/classez_blob.htm">ezBlob</a>&amp;&amp; rhs);</div>
<div class="line"><a id="l00345" name="l00345"></a><span class="lineno">  345</span> </div>
<div class="line"><a id="l00347" name="l00347"></a><span class="lineno">  347</span>  <a class="code hl_class" href="../../dd/db8/classez_blob.htm">~ezBlob</a>();</div>
<div class="line"><a id="l00348" name="l00348"></a><span class="lineno">  348</span> </div>
<div class="line"><a id="l00351" name="l00351"></a><span class="lineno">  351</span>  <span class="keywordtype">void</span> SetFrom(<span class="keyword">const</span> <span class="keywordtype">void</span>* pSource, ezUInt64 uiSize);</div>
<div class="line"><a id="l00352" name="l00352"></a><span class="lineno">  352</span> </div>
<div class="line"><a id="l00354" name="l00354"></a><span class="lineno">  354</span>  <span class="keywordtype">void</span> Clear();</div>
<div class="line"><a id="l00355" name="l00355"></a><span class="lineno">  355</span> </div>
<div class="line"><a id="l00357" name="l00357"></a><span class="lineno">  357</span>  <span class="keywordtype">bool</span> IsEmpty() <span class="keyword">const</span>;</div>
<div class="line"><a id="l00358" name="l00358"></a><span class="lineno">  358</span> </div>
<div class="line"><a id="l00360" name="l00360"></a><span class="lineno">  360</span>  <span class="keywordtype">void</span> SetCountUninitialized(ezUInt64 uiCount);</div>
<div class="line"><a id="l00361" name="l00361"></a><span class="lineno">  361</span> </div>
<div class="line"><a id="l00363" name="l00363"></a><span class="lineno">  363</span>  <span class="keywordtype">void</span> ZeroFill();</div>
<div class="line"><a id="l00364" name="l00364"></a><span class="lineno">  364</span> </div>
<div class="line"><a id="l00366" name="l00366"></a><span class="lineno">  366</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="foldopen" id="foldopen00367" data-start="{" data-end="}">
<div class="line"><a id="l00367" name="l00367"></a><span class="lineno"><a class="line" href="../../dd/db8/classez_blob.htm#a7879610fae4602ea3cc09e73cd9b5aab">  367</a></span>  <a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;T&gt;</a> <a class="code hl_function" href="../../dd/db8/classez_blob.htm#a7879610fae4602ea3cc09e73cd9b5aab">GetBlobPtr</a>()</div>
<div class="line"><a id="l00368" name="l00368"></a><span class="lineno">  368</span>  {</div>
<div class="line"><a id="l00369" name="l00369"></a><span class="lineno">  369</span>    <span class="keywordflow">return</span> <a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;T&gt;</a>(<span class="keyword">static_cast&lt;</span>T*<span class="keyword">&gt;</span>(m_pStorage), m_uiSize);</div>
<div class="line"><a id="l00370" name="l00370"></a><span class="lineno">  370</span>  }</div>
</div>
<div class="line"><a id="l00371" name="l00371"></a><span class="lineno">  371</span> </div>
<div class="line"><a id="l00373" name="l00373"></a><span class="lineno">  373</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="foldopen" id="foldopen00374" data-start="{" data-end="}">
<div class="line"><a id="l00374" name="l00374"></a><span class="lineno"><a class="line" href="../../dd/db8/classez_blob.htm#a5c15d8bb286351146079705201b3b2ae">  374</a></span>  <a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;const T&gt;</a> <a class="code hl_function" href="../../dd/db8/classez_blob.htm#a5c15d8bb286351146079705201b3b2ae">GetBlobPtr</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00375" name="l00375"></a><span class="lineno">  375</span><span class="keyword">  </span>{</div>
<div class="line"><a id="l00376" name="l00376"></a><span class="lineno">  376</span>    <span class="keywordflow">return</span> <a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;const T&gt;</a>(<span class="keyword">static_cast&lt;</span>T*<span class="keyword">&gt;</span>(m_pStorage), m_uiSize);</div>
<div class="line"><a id="l00377" name="l00377"></a><span class="lineno">  377</span>  }</div>
</div>
<div class="line"><a id="l00378" name="l00378"></a><span class="lineno">  378</span> </div>
<div class="line"><a id="l00380" name="l00380"></a><span class="lineno"><a class="line" href="../../dd/db8/classez_blob.htm#a08f617a147d7f18e284a17fd65b41dcd">  380</a></span>  <a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezByteBlobPtr</a> <a class="code hl_function" href="../../dd/db8/classez_blob.htm#a08f617a147d7f18e284a17fd65b41dcd">GetByteBlobPtr</a>() { <span class="keywordflow">return</span> <a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezByteBlobPtr</a>(<span class="keyword">reinterpret_cast&lt;</span>ezUInt8*<span class="keyword">&gt;</span>(m_pStorage), m_uiSize); }</div>
<div class="line"><a id="l00381" name="l00381"></a><span class="lineno">  381</span> </div>
<div class="line"><a id="l00383" name="l00383"></a><span class="lineno"><a class="line" href="../../dd/db8/classez_blob.htm#add3f9e61a2d9dfc792c161b6bde7bf2f">  383</a></span>  <a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezConstByteBlobPtr</a> <a class="code hl_function" href="../../dd/db8/classez_blob.htm#add3f9e61a2d9dfc792c161b6bde7bf2f">GetByteBlobPtr</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezConstByteBlobPtr</a>(<span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>ezUInt8*<span class="keyword">&gt;</span>(m_pStorage), m_uiSize); }</div>
<div class="line"><a id="l00384" name="l00384"></a><span class="lineno">  384</span> </div>
<div class="line"><a id="l00385" name="l00385"></a><span class="lineno">  385</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00386" name="l00386"></a><span class="lineno">  386</span>  <span class="keywordtype">void</span>* m_pStorage = <span class="keyword">nullptr</span>;</div>
<div class="line"><a id="l00387" name="l00387"></a><span class="lineno">  387</span>  ezUInt64 m_uiSize = 0;</div>
<div class="line"><a id="l00388" name="l00388"></a><span class="lineno">  388</span>};</div>
</div>
<div class="ttc" id="aclassez_array_ptr_htm"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a></div><div class="ttdoc">This class encapsulates an array and it's size. It is recommended to use this class instead of plain ...</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:41</div></div>
<div class="ttc" id="aclassez_array_ptr_htm_a9f222695f57e4cf200e07135dbbd7edd"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">ezArrayPtr::GetCount</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezUInt32 GetCount() const</div><div class="ttdoc">Returns the number of elements in the array.</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:175</div></div>
<div class="ttc" id="aclassez_array_ptr_htm_aba4e7585190f337c6428f2fe25828b8a"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm#aba4e7585190f337c6428f2fe25828b8a">ezArrayPtr::GetPtr</a></div><div class="ttdeci">EZ_ALWAYS_INLINE PointerType GetPtr() const</div><div class="ttdoc">Returns the pointer to the array.</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:151</div></div>
<div class="ttc" id="aclassez_blob_htm"><div class="ttname"><a href="../../dd/db8/classez_blob.htm">ezBlob</a></div><div class="ttdoc">ezBlob allows to store simple binary data larger than 4GB. This storage class is used by ezImage to a...</div><div class="ttdef"><b>Definition</b> Blob.h:333</div></div>
<div class="ttc" id="aclassez_blob_htm_a08f617a147d7f18e284a17fd65b41dcd"><div class="ttname"><a href="../../dd/db8/classez_blob.htm#a08f617a147d7f18e284a17fd65b41dcd">ezBlob::GetByteBlobPtr</a></div><div class="ttdeci">ezByteBlobPtr GetByteBlobPtr()</div><div class="ttdoc">Returns a blob pointer to the blob data, or an empty blob pointer if the blob is empty.</div><div class="ttdef"><b>Definition</b> Blob.h:380</div></div>
<div class="ttc" id="aclassez_blob_htm_a5c15d8bb286351146079705201b3b2ae"><div class="ttname"><a href="../../dd/db8/classez_blob.htm#a5c15d8bb286351146079705201b3b2ae">ezBlob::GetBlobPtr</a></div><div class="ttdeci">ezBlobPtr&lt; const T &gt; GetBlobPtr() const</div><div class="ttdoc">Returns a blob pointer to the blob data, or an empty blob pointer if the blob is empty.</div><div class="ttdef"><b>Definition</b> Blob.h:374</div></div>
<div class="ttc" id="aclassez_blob_htm_a7879610fae4602ea3cc09e73cd9b5aab"><div class="ttname"><a href="../../dd/db8/classez_blob.htm#a7879610fae4602ea3cc09e73cd9b5aab">ezBlob::GetBlobPtr</a></div><div class="ttdeci">ezBlobPtr&lt; T &gt; GetBlobPtr()</div><div class="ttdoc">Returns a blob pointer to the blob data, or an empty blob pointer if the blob is empty.</div><div class="ttdef"><b>Definition</b> Blob.h:367</div></div>
<div class="ttc" id="aclassez_blob_htm_add3f9e61a2d9dfc792c161b6bde7bf2f"><div class="ttname"><a href="../../dd/db8/classez_blob.htm#add3f9e61a2d9dfc792c161b6bde7bf2f">ezBlob::GetByteBlobPtr</a></div><div class="ttdeci">ezConstByteBlobPtr GetByteBlobPtr() const</div><div class="ttdoc">Returns a blob pointer to the blob data, or an empty blob pointer if the blob is empty.</div><div class="ttdef"><b>Definition</b> Blob.h:383</div></div>
<div class="ttc" id="aclassez_blob_htm_aefe23db6d5baaf7d410399b2d127a1dc"><div class="ttname"><a href="../../dd/db8/classez_blob.htm#aefe23db6d5baaf7d410399b2d127a1dc">ezBlob::ezBlob</a></div><div class="ttdeci">ezBlob()</div><div class="ttdoc">Default constructor. Does not allocate any memory.</div></div>
<div class="ttc" id="aclassez_blob_ptr_htm"><div class="ttname"><a href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr</a></div><div class="ttdoc">This class encapsulates a blob's storage and it's size. It is recommended to use this class instead o...</div><div class="ttdef"><b>Definition</b> Blob.h:13</div></div>
<div class="ttc" id="aclassez_blob_ptr_htm_a0fa3769cce78cf513df8ef35fb277bc2"><div class="ttname"><a href="../../d3/da7/classez_blob_ptr.htm#a0fa3769cce78cf513df8ef35fb277bc2">ezBlobPtr::GetPtr</a></div><div class="ttdeci">EZ_ALWAYS_INLINE PointerType GetPtr()</div><div class="ttdoc">Returns the pointer to the array.</div><div class="ttdef"><b>Definition</b> Blob.h:97</div></div>
<div class="ttc" id="aclassez_blob_ptr_htm_a135088d7eeddb6a98ba64c7907bd6c3c"><div class="ttname"><a href="../../d3/da7/classez_blob_ptr.htm#a135088d7eeddb6a98ba64c7907bd6c3c">ezBlobPtr::operator=</a></div><div class="ttdeci">EZ_ALWAYS_INLINE void operator=(const ezBlobPtr&lt; T &gt; &amp;other)</div><div class="ttdoc">Copies the pointer and size of /a other. Does not allocate any data.</div><div class="ttdef"><b>Definition</b> Blob.h:67</div></div>
<div class="ttc" id="aclassez_blob_ptr_htm_a183e45d443a6494e7a3c2ddea826b354"><div class="ttname"><a href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">ezBlobPtr::GetPtr</a></div><div class="ttdeci">EZ_ALWAYS_INLINE PointerType GetPtr() const</div><div class="ttdoc">Returns the pointer to the array.</div><div class="ttdef"><b>Definition</b> Blob.h:94</div></div>
<div class="ttc" id="aclassez_blob_ptr_htm_a1f09ae419567a8ca84f1f07630a374fc"><div class="ttname"><a href="../../d3/da7/classez_blob_ptr.htm#a1f09ae419567a8ca84f1f07630a374fc">ezBlobPtr::ezBlobPtr</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezBlobPtr(const ezArrayPtr&lt; T &gt; &amp;other)</div><div class="ttdoc">Initializes the ezBlobPtr to be a copy of other. No memory is allocated or copied.</div><div class="ttdef"><b>Definition</b> Blob.h:57</div></div>
<div class="ttc" id="aclassez_blob_ptr_htm_a2e1fdec1af16b1507f9d775cc9d4f533"><div class="ttname"><a href="../../d3/da7/classez_blob_ptr.htm#a2e1fdec1af16b1507f9d775cc9d4f533">ezBlobPtr::Clear</a></div><div class="ttdeci">EZ_ALWAYS_INLINE void Clear()</div><div class="ttdoc">Clears the array.</div><div class="ttdef"><b>Definition</b> Blob.h:81</div></div>
<div class="ttc" id="aclassez_blob_ptr_htm_a317a1e5de3f974d0e498a75db1956886"><div class="ttname"><a href="../../d3/da7/classez_blob_ptr.htm#a317a1e5de3f974d0e498a75db1956886">ezBlobPtr::ezBlobPtr</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezBlobPtr(ValueType(&amp;staticArray)[N])</div><div class="ttdoc">Initializes the ezBlobPtr to encapsulate the given array.</div><div class="ttdef"><b>Definition</b> Blob.h:43</div></div>
<div class="ttc" id="aclassez_blob_ptr_htm_a346ef93525ea88162c4a7588147ad488"><div class="ttname"><a href="../../d3/da7/classez_blob_ptr.htm#a346ef93525ea88162c4a7588147ad488">ezBlobPtr::GetSubArray</a></div><div class="ttdeci">EZ_FORCE_INLINE ezBlobPtr&lt; T &gt; GetSubArray(ezUInt64 uiStart, ezUInt64 uiCount) const</div><div class="ttdoc">Creates a sub-array from this array.</div><div class="ttdef"><b>Definition</b> Blob.h:112</div></div>
<div class="ttc" id="aclassez_blob_ptr_htm_a36043e87f673094c53d4d0f7e8e8a970"><div class="ttname"><a href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">ezBlobPtr::GetCount</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezUInt64 GetCount() const</div><div class="ttdoc">Returns the number of elements in the array.</div><div class="ttdef"><b>Definition</b> Blob.h:109</div></div>
<div class="ttc" id="aclassez_blob_ptr_htm_a3af24c2a03ba821f3ec30805d4e695e0"><div class="ttname"><a href="../../d3/da7/classez_blob_ptr.htm#a3af24c2a03ba821f3ec30805d4e695e0">ezBlobPtr::Cast</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezBlobPtr&lt; const U &gt; Cast() const</div><div class="ttdoc">Cast an BlobPtr to an BlobPtr to a different, but same size, type.</div><div class="ttdef"><b>Definition</b> Blob.h:146</div></div>
<div class="ttc" id="aclassez_blob_ptr_htm_a40f90fae8495215b27c05c3f0538dabf"><div class="ttname"><a href="../../d3/da7/classez_blob_ptr.htm#a40f90fae8495215b27c05c3f0538dabf">ezBlobPtr::Cast</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezBlobPtr&lt; U &gt; Cast()</div><div class="ttdoc">Cast an BlobPtr to an BlobPtr to a different, but same size, type.</div><div class="ttdef"><b>Definition</b> Blob.h:138</div></div>
<div class="ttc" id="aclassez_blob_ptr_htm_a49883b9a269490144839ffe626951828"><div class="ttname"><a href="../../d3/da7/classez_blob_ptr.htm#a49883b9a269490144839ffe626951828">ezBlobPtr::operator==</a></div><div class="ttdeci">bool operator==(const ezBlobPtr&lt; const T &gt; &amp;other) const</div><div class="ttdoc">Compares the two arrays for equality.</div><div class="ttdef"><b>Definition</b> Blob.h:167</div></div>
<div class="ttc" id="aclassez_blob_ptr_htm_a4e3bbf73b652ce242ba30cdc756f288e"><div class="ttname"><a href="../../d3/da7/classez_blob_ptr.htm#a4e3bbf73b652ce242ba30cdc756f288e">ezBlobPtr::GetEndPtr</a></div><div class="ttdeci">EZ_ALWAYS_INLINE PointerType GetEndPtr()</div><div class="ttdoc">Returns the pointer behind the last element of the array.</div><div class="ttdef"><b>Definition</b> Blob.h:100</div></div>
<div class="ttc" id="aclassez_blob_ptr_htm_a530052b53346ced27aeee754cc5f10db"><div class="ttname"><a href="../../d3/da7/classez_blob_ptr.htm#a530052b53346ced27aeee754cc5f10db">ezBlobPtr::IsEmpty</a></div><div class="ttdeci">EZ_ALWAYS_INLINE bool IsEmpty() const</div><div class="ttdoc">Returns whether the array is empty.</div><div class="ttdef"><b>Definition</b> Blob.h:106</div></div>
<div class="ttc" id="aclassez_blob_ptr_htm_a560218fc7d30c7e0bf139f05ef4eb3ef"><div class="ttname"><a href="../../d3/da7/classez_blob_ptr.htm#a560218fc7d30c7e0bf139f05ef4eb3ef">ezBlobPtr::operator[]</a></div><div class="ttdeci">EZ_FORCE_INLINE ValueType &amp; operator[](ezUInt64 uiIndex)</div><div class="ttdoc">Index access.</div><div class="ttdef"><b>Definition</b> Blob.h:160</div></div>
<div class="ttc" id="aclassez_blob_ptr_htm_a75d59f4449a76b89ee170d7eb29374b5"><div class="ttname"><a href="../../d3/da7/classez_blob_ptr.htm#a75d59f4449a76b89ee170d7eb29374b5">ezBlobPtr::GetEndPtr</a></div><div class="ttdeci">EZ_ALWAYS_INLINE PointerType GetEndPtr() const</div><div class="ttdoc">Returns the pointer behind the last element of the array.</div><div class="ttdef"><b>Definition</b> Blob.h:103</div></div>
<div class="ttc" id="aclassez_blob_ptr_htm_a76a1f5d0b6bc468dd2805bef30b82793"><div class="ttname"><a href="../../d3/da7/classez_blob_ptr.htm#a76a1f5d0b6bc468dd2805bef30b82793">ezBlobPtr::ToByteBlob</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezBlobPtr&lt; const ByteType &gt; ToByteBlob() const</div><div class="ttdoc">Reinterprets this array as a byte array.</div><div class="ttdef"><b>Definition</b> Blob.h:128</div></div>
<div class="ttc" id="aclassez_blob_ptr_htm_a7fb45cd67fd48b34ca3bb35efe4f29a8"><div class="ttname"><a href="../../d3/da7/classez_blob_ptr.htm#a7fb45cd67fd48b34ca3bb35efe4f29a8">ezBlobPtr::ToByteBlob</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezBlobPtr&lt; ByteType &gt; ToByteBlob()</div><div class="ttdoc">Reinterprets this array as a byte array.</div><div class="ttdef"><b>Definition</b> Blob.h:134</div></div>
<div class="ttc" id="aclassez_blob_ptr_htm_a9d8ea856d504f38be18f1ae7247933f5"><div class="ttname"><a href="../../d3/da7/classez_blob_ptr.htm#a9d8ea856d504f38be18f1ae7247933f5">ezBlobPtr::ezBlobPtr</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezBlobPtr(const ezBlobPtr&lt; T &gt; &amp;other)</div><div class="ttdoc">Initializes the ezBlobPtr to be a copy of other. No memory is allocated or copied.</div><div class="ttdef"><b>Definition</b> Blob.h:50</div></div>
<div class="ttc" id="aclassez_blob_ptr_htm_ab51148660196ea156cbd50b2c85d773b"><div class="ttname"><a href="../../d3/da7/classez_blob_ptr.htm#ab51148660196ea156cbd50b2c85d773b">ezBlobPtr::CopyFrom</a></div><div class="ttdeci">void CopyFrom(const ezBlobPtr&lt; const T &gt; &amp;other)</div><div class="ttdoc">Copies the data from other into this array. The arrays must have the exact same size.</div><div class="ttdef"><b>Definition</b> Blob.h:185</div></div>
<div class="ttc" id="aclassez_blob_ptr_htm_ac07adf64c851dd3a60caa8e24f6540ff"><div class="ttname"><a href="../../d3/da7/classez_blob_ptr.htm#ac07adf64c851dd3a60caa8e24f6540ff">ezBlobPtr::GetSubArray</a></div><div class="ttdeci">EZ_FORCE_INLINE ezBlobPtr&lt; T &gt; GetSubArray(ezUInt64 uiStart) const</div><div class="ttdoc">Creates a sub-array from this array.</div><div class="ttdef"><b>Definition</b> Blob.h:121</div></div>
<div class="ttc" id="aclassez_blob_ptr_htm_ac39a476dd681295012ca4babad44a196"><div class="ttname"><a href="../../d3/da7/classez_blob_ptr.htm#ac39a476dd681295012ca4babad44a196">ezBlobPtr::operator!=</a></div><div class="ttdeci">EZ_ALWAYS_INLINE bool operator!=(const ezBlobPtr&lt; const T &gt; &amp;other) const</div><div class="ttdoc">Compares the two arrays for inequality.</div><div class="ttdef"><b>Definition</b> Blob.h:179</div></div>
<div class="ttc" id="aclassez_blob_ptr_htm_ac908025a233a10a7cea2b6e7ec76a08c"><div class="ttname"><a href="../../d3/da7/classez_blob_ptr.htm#ac908025a233a10a7cea2b6e7ec76a08c">ezBlobPtr::operator[]</a></div><div class="ttdeci">EZ_FORCE_INLINE const ValueType &amp; operator[](ezUInt64 uiIndex) const</div><div class="ttdoc">Index access.</div><div class="ttdef"><b>Definition</b> Blob.h:153</div></div>
<div class="ttc" id="aclassez_blob_ptr_htm_acc2cfac9aa37ac11641fb7ee843b28fb"><div class="ttname"><a href="../../d3/da7/classez_blob_ptr.htm#acc2cfac9aa37ac11641fb7ee843b28fb">ezBlobPtr::ezBlobPtr</a></div><div class="ttdeci">ezBlobPtr(U *pPtr, ezUInt64 uiCount)</div><div class="ttdoc">Initializes the ezBlobPtr with the given pointer and number of elements. No memory is allocated or co...</div><div class="ttdef"><b>Definition</b> Blob.h:29</div></div>
<div class="ttc" id="aclassez_blob_ptr_htm_acfed2d03b917bf465f9856ef5b6916a8"><div class="ttname"><a href="../../d3/da7/classez_blob_ptr.htm#acfed2d03b917bf465f9856ef5b6916a8">ezBlobPtr::ezBlobPtr</a></div><div class="ttdeci">ezBlobPtr()=default</div><div class="ttdoc">Initializes the ezBlobPtr to be empty.</div></div>
<div class="ttc" id="aclassez_blob_ptr_htm_aea8418d45646d6c357df8cf7d67ebaf2"><div class="ttname"><a href="../../d3/da7/classez_blob_ptr.htm#aea8418d45646d6c357df8cf7d67ebaf2">ezBlobPtr::operator=</a></div><div class="ttdeci">EZ_ALWAYS_INLINE void operator=(const ezArrayPtr&lt; T &gt; &amp;other)</div><div class="ttdoc">Copies the pointer and size of /a other. Does not allocate any data.</div><div class="ttdef"><b>Definition</b> Blob.h:74</div></div>
<div class="ttc" id="aclassez_memory_utils_htm_a744d60b4b000c61f2dd3819a12410595"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm#a744d60b4b000c61f2dd3819a12410595">ezMemoryUtils::IsEqual</a></div><div class="ttdeci">static bool IsEqual(const T *a, const T *b, size_t uiCount=1)</div><div class="ttdoc">Tests if objects of type T from pSource and pDestination are equal.</div></div>
<div class="ttc" id="aclassez_memory_utils_htm_a87c41811a95fa63da651f6779931d9cf"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm#a87c41811a95fa63da651f6779931d9cf">ezMemoryUtils::Copy</a></div><div class="ttdeci">static void Copy(T *pDestination, const T *pSource, size_t uiCount=1)</div><div class="ttdoc">Copies objects of type T from pSource to pDestination.</div></div>
<div class="ttc" id="anamespaceez_math_htm_a0cd624055a97c96719b925cb11e6a08e"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a0cd624055a97c96719b925cb11e6a08e">ezMath::Swap</a></div><div class="ttdeci">EZ_ALWAYS_INLINE void Swap(T &amp;ref_f1, T &amp;ref_f2)</div><div class="ttdoc">Swaps the values in the two variables f1 and f2.</div><div class="ttdef"><b>Definition</b> Math_inl.h:224</div></div>
<div class="ttc" id="astructconst__reverse__pointer__iterator_htm"><div class="ttname"><a href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">const_reverse_pointer_iterator</a></div><div class="ttdoc">Base class for Pointer like reverse iterators.</div><div class="ttdef"><b>Definition</b> ArrayIterator.h:152</div></div>
<div class="ttc" id="astructreverse__pointer__iterator_htm"><div class="ttname"><a href="../../d3/df2/structreverse__pointer__iterator.htm">reverse_pointer_iterator</a></div><div class="ttdoc">Non-Const class for Pointer like reverse iterators.</div><div class="ttdef"><b>Definition</b> ArrayIterator.h:216</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_6b567e6755824bd0b8ffd754b9d67ac0.htm">Containers</a></li><li class="navelem"><b>Blob.h</b></li>
    <li class="footer">Generated on Fri Jul 11 2025 12:17:43 for ezEngine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
