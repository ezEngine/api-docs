<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Containers/Blob.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 21.10</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d3/da9/_blob_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Blob.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160; </div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160; </div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;Foundation/Basics.h&gt;</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160; </div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00011"></a><span class="lineno"><a class="line" href="../../d3/da7/classez_blob_ptr.htm">   11</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr</a></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;{</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;  EZ_DECLARE_POD_TYPE();</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160; </div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;  static_assert(!std::is_same_v&lt;T, void&gt;, <span class="stringliteral">&quot;ezBlobPtr&lt;void&gt; is not allowed (anymore)&quot;</span>);</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;  static_assert(!std::is_same_v&lt;T, const void&gt;, <span class="stringliteral">&quot;ezBlobPtr&lt;void&gt; is not allowed (anymore)&quot;</span>);</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160; </div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;  <span class="keyword">using</span> ByteType = <span class="keyword">typename</span> ezArrayPtrDetail::ByteTypeHelper&lt;T&gt;::type;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;  <span class="keyword">using</span> ValueType = T;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;  <span class="keyword">using</span> PointerType = T*;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160; </div>
<div class="line"><a name="l00024"></a><span class="lineno"><a class="line" href="../../d3/da7/classez_blob_ptr.htm#a9668881d3b9f41795447191f4e3cd2fe">   24</a></span>&#160;  EZ_ALWAYS_INLINE <a class="code" href="../../d3/da7/classez_blob_ptr.htm#a9668881d3b9f41795447191f4e3cd2fe">ezBlobPtr</a>()</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    : m_ptr(nullptr)</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    , m_uiCount(0u)</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;  {</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  }</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160; </div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div>
<div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="../../d3/da7/classez_blob_ptr.htm#aa56da8c6e9411ccfd5a4c82c0c74f965">   32</a></span>&#160;  <span class="keyword">inline</span> <a class="code" href="../../d3/da7/classez_blob_ptr.htm#aa56da8c6e9411ccfd5a4c82c0c74f965">ezBlobPtr</a>(U* ptr, ezUInt64 uiCount)</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    : m_ptr(ptr)</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    , m_uiCount(uiCount)</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;  {</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <span class="comment">// If any of the arguments is invalid, we invalidate ourself.</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <span class="keywordflow">if</span> (m_ptr == <span class="keyword">nullptr</span> || m_uiCount == 0)</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    {</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;      m_ptr = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;      m_uiCount = 0;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    }</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;  }</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160; </div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  <span class="keyword">template</span> &lt;<span class="keywordtype">size_t</span> N&gt;</div>
<div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="../../d3/da7/classez_blob_ptr.htm#a317a1e5de3f974d0e498a75db1956886">   46</a></span>&#160;  EZ_ALWAYS_INLINE <a class="code" href="../../d3/da7/classez_blob_ptr.htm#a317a1e5de3f974d0e498a75db1956886">ezBlobPtr</a>(ValueType (&amp;staticArray)[N])</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    : m_ptr(staticArray)</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;    , m_uiCount(static_cast&lt;ezUInt64&gt;(N))</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;  {</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;  }</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160; </div>
<div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="../../d3/da7/classez_blob_ptr.htm#a9d8ea856d504f38be18f1ae7247933f5">   53</a></span>&#160;  EZ_ALWAYS_INLINE <a class="code" href="../../d3/da7/classez_blob_ptr.htm#a9d8ea856d504f38be18f1ae7247933f5">ezBlobPtr</a>(<span class="keyword">const</span> <a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;T&gt;</a>&amp; other)</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    : m_ptr(other.m_ptr)</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;    , m_uiCount(other.m_uiCount)</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;  {</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;  }</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160; </div>
<div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="../../d3/da7/classez_blob_ptr.htm#a27b6cdf82023c6dd11e5996eb0885c1d">   60</a></span>&#160;  <span class="keyword">operator</span> <a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;const T&gt;</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;const T&gt;</a>(<span class="keyword">static_cast&lt;</span><span class="keyword">const </span>T*<span class="keyword">&gt;</span>(<a class="code" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">GetPtr</a>()), <a class="code" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>()); }</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160; </div>
<div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="../../d3/da7/classez_blob_ptr.htm#a135088d7eeddb6a98ba64c7907bd6c3c">   63</a></span>&#160;  EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d3/da7/classez_blob_ptr.htm#a135088d7eeddb6a98ba64c7907bd6c3c">operator=</a>(<span class="keyword">const</span> <a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;T&gt;</a>&amp; other)</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  {</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;    m_ptr = other.m_ptr;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    m_uiCount = other.m_uiCount;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;  }</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160; </div>
<div class="line"><a name="l00070"></a><span class="lineno"><a class="line" href="../../d3/da7/classez_blob_ptr.htm#a2e1fdec1af16b1507f9d775cc9d4f533">   70</a></span>&#160;  EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d3/da7/classez_blob_ptr.htm#a2e1fdec1af16b1507f9d775cc9d4f533">Clear</a>()</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;  {</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    m_ptr = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    m_uiCount = 0;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;  }</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160; </div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d3/da7/classez_blob_ptr.htm#a135088d7eeddb6a98ba64c7907bd6c3c">operator=</a>(std::nullptr_t)</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;  {</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    m_ptr = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    m_uiCount = 0;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;  }</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160; </div>
<div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">   83</a></span>&#160;  EZ_ALWAYS_INLINE PointerType <a class="code" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">GetPtr</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_ptr; }</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160; </div>
<div class="line"><a name="l00086"></a><span class="lineno"><a class="line" href="../../d3/da7/classez_blob_ptr.htm#a0fa3769cce78cf513df8ef35fb277bc2">   86</a></span>&#160;  EZ_ALWAYS_INLINE PointerType <a class="code" href="../../d3/da7/classez_blob_ptr.htm#a0fa3769cce78cf513df8ef35fb277bc2">GetPtr</a>() { <span class="keywordflow">return</span> m_ptr; }</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160; </div>
<div class="line"><a name="l00089"></a><span class="lineno"><a class="line" href="../../d3/da7/classez_blob_ptr.htm#a4e3bbf73b652ce242ba30cdc756f288e">   89</a></span>&#160;  EZ_ALWAYS_INLINE PointerType <a class="code" href="../../d3/da7/classez_blob_ptr.htm#a4e3bbf73b652ce242ba30cdc756f288e">GetEndPtr</a>() { <span class="keywordflow">return</span> m_ptr + m_uiCount; }</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160; </div>
<div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="../../d3/da7/classez_blob_ptr.htm#a75d59f4449a76b89ee170d7eb29374b5">   92</a></span>&#160;  EZ_ALWAYS_INLINE PointerType <a class="code" href="../../d3/da7/classez_blob_ptr.htm#a75d59f4449a76b89ee170d7eb29374b5">GetEndPtr</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_ptr + m_uiCount; }</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160; </div>
<div class="line"><a name="l00095"></a><span class="lineno"><a class="line" href="../../d3/da7/classez_blob_ptr.htm#a530052b53346ced27aeee754cc5f10db">   95</a></span>&#160;  EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../d3/da7/classez_blob_ptr.htm#a530052b53346ced27aeee754cc5f10db">IsEmpty</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>() == 0; }</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160; </div>
<div class="line"><a name="l00098"></a><span class="lineno"><a class="line" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">   98</a></span>&#160;  EZ_ALWAYS_INLINE ezUInt64 <a class="code" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_uiCount; }</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160; </div>
<div class="line"><a name="l00101"></a><span class="lineno"><a class="line" href="../../d3/da7/classez_blob_ptr.htm#aa7810f12819fd1cb88f22dcc4c39454e">  101</a></span>&#160;  EZ_FORCE_INLINE <a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;T&gt;</a> <a class="code" href="../../d3/da7/classez_blob_ptr.htm#aa7810f12819fd1cb88f22dcc4c39454e">GetSubArray</a>(ezUInt64 uiStart, ezUInt64 uiCount) <span class="keyword">const</span> <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;  {</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    EZ_ASSERT_DEV(</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;      uiStart + uiCount &lt;= <a class="code" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>(), <span class="stringliteral">&quot;uiStart+uiCount ({0}) has to be smaller or equal than the count ({1}).&quot;</span>, uiStart + uiCount, <a class="code" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>());</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;T&gt;</a>(<a class="code" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">GetPtr</a>() + uiStart, uiCount);</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;  }</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160; </div>
<div class="line"><a name="l00110"></a><span class="lineno"><a class="line" href="../../d3/da7/classez_blob_ptr.htm#ac71ff0c7faf172a3ffb10ea40b4de584">  110</a></span>&#160;  EZ_FORCE_INLINE <a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;T&gt;</a> <a class="code" href="../../d3/da7/classez_blob_ptr.htm#ac71ff0c7faf172a3ffb10ea40b4de584">GetSubArray</a>(ezUInt64 uiStart) <span class="keyword">const</span> <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;  {</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    EZ_ASSERT_DEV(uiStart &lt;= <a class="code" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>(), <span class="stringliteral">&quot;uiStart ({0}) has to be smaller or equal than the count ({1}).&quot;</span>, uiStart, <a class="code" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>());</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;T&gt;</a>(<a class="code" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">GetPtr</a>() + uiStart, <a class="code" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>() - uiStart);</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;  }</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160; </div>
<div class="line"><a name="l00117"></a><span class="lineno"><a class="line" href="../../d3/da7/classez_blob_ptr.htm#a7a2c108f31241e01cabc4690ecab1a3f">  117</a></span>&#160;  EZ_ALWAYS_INLINE <a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;const ByteType&gt;</a> <a class="code" href="../../d3/da7/classez_blob_ptr.htm#a7a2c108f31241e01cabc4690ecab1a3f">ToByteBlob</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;const ByteType&gt;</a>(<span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>ByteType*<span class="keyword">&gt;</span>(<a class="code" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">GetPtr</a>()), <a class="code" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>() * <span class="keyword">sizeof</span>(T));</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;  }</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160; </div>
<div class="line"><a name="l00123"></a><span class="lineno"><a class="line" href="../../d3/da7/classez_blob_ptr.htm#ad53833898cc80474f8c397e19a322322">  123</a></span>&#160;  EZ_ALWAYS_INLINE <a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;ByteType&gt;</a> <a class="code" href="../../d3/da7/classez_blob_ptr.htm#ad53833898cc80474f8c397e19a322322">ToByteBlob</a>() { <span class="keywordflow">return</span> <a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;ByteType&gt;</a>(<span class="keyword">reinterpret_cast&lt;</span>ByteType*<span class="keyword">&gt;</span>(<a class="code" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">GetPtr</a>()), <a class="code" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>() * <span class="keyword">sizeof</span>(T)); }</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160; </div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div>
<div class="line"><a name="l00127"></a><span class="lineno"><a class="line" href="../../d3/da7/classez_blob_ptr.htm#a147655c350dac8408141e8049fcb478f">  127</a></span>&#160;  EZ_ALWAYS_INLINE <a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;U&gt;</a> <a class="code" href="../../d3/da7/classez_blob_ptr.htm#a147655c350dac8408141e8049fcb478f">Cast</a>()</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;  {</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    static_assert(<span class="keyword">sizeof</span>(T) == <span class="keyword">sizeof</span>(U), <span class="stringliteral">&quot;Can only cast with equivalent element size.&quot;</span>);</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;U&gt;</a>(<span class="keyword">reinterpret_cast&lt;</span>U*<span class="keyword">&gt;</span>(<a class="code" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">GetPtr</a>()), <a class="code" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>());</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;  }</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160; </div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div>
<div class="line"><a name="l00135"></a><span class="lineno"><a class="line" href="../../d3/da7/classez_blob_ptr.htm#aa8f5d279df93c9e6ba40860415461393">  135</a></span>&#160;  EZ_ALWAYS_INLINE <a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;const U&gt;</a> <a class="code" href="../../d3/da7/classez_blob_ptr.htm#aa8f5d279df93c9e6ba40860415461393">Cast</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    static_assert(<span class="keyword">sizeof</span>(T) == <span class="keyword">sizeof</span>(U), <span class="stringliteral">&quot;Can only cast with equivalent element size.&quot;</span>);</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;const U&gt;</a>(<span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>U*<span class="keyword">&gt;</span>(<a class="code" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">GetPtr</a>()), <a class="code" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>());</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;  }</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160; </div>
<div class="line"><a name="l00142"></a><span class="lineno"><a class="line" href="../../d3/da7/classez_blob_ptr.htm#a0d7f5d9272de273ce0a413242fb00431">  142</a></span>&#160;  EZ_FORCE_INLINE <span class="keyword">const</span> ValueType&amp; <a class="code" href="../../d3/da7/classez_blob_ptr.htm#a0d7f5d9272de273ce0a413242fb00431">operator[]</a>(ezUInt64 uiIndex) <span class="keyword">const</span> <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  {</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;    EZ_ASSERT_DEV(uiIndex &lt; <a class="code" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>(), <span class="stringliteral">&quot;Cannot access element {0}, the array only holds {1} elements.&quot;</span>, uiIndex, <a class="code" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>());</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    <span class="keywordflow">return</span> *<span class="keyword">static_cast&lt;</span><span class="keyword">const </span>ValueType*<span class="keyword">&gt;</span>(<a class="code" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">GetPtr</a>() + uiIndex);</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;  }</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160; </div>
<div class="line"><a name="l00149"></a><span class="lineno"><a class="line" href="../../d3/da7/classez_blob_ptr.htm#a63f7944d7869c3939ebe199fe11c878c">  149</a></span>&#160;  EZ_FORCE_INLINE ValueType&amp; <a class="code" href="../../d3/da7/classez_blob_ptr.htm#a63f7944d7869c3939ebe199fe11c878c">operator[]</a>(ezUInt64 uiIndex) <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;  {</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    EZ_ASSERT_DEV(uiIndex &lt; <a class="code" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>(), <span class="stringliteral">&quot;Cannot access element {0}, the array only holds {1} elements.&quot;</span>, uiIndex, <a class="code" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>());</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    <span class="keywordflow">return</span> *<span class="keyword">static_cast&lt;</span>ValueType*<span class="keyword">&gt;</span>(<a class="code" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">GetPtr</a>() + uiIndex);</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;  }</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160; </div>
<div class="line"><a name="l00156"></a><span class="lineno"><a class="line" href="../../d3/da7/classez_blob_ptr.htm#a49883b9a269490144839ffe626951828">  156</a></span>&#160;  <span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="../../d3/da7/classez_blob_ptr.htm#a49883b9a269490144839ffe626951828">operator==</a>(<span class="keyword">const</span> <a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;const T&gt;</a>&amp; other) <span class="keyword">const</span> <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;  {</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>() != other.GetCount())</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160; </div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    <span class="keywordflow">if</span> (<a class="code" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">GetPtr</a>() == other.GetPtr())</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160; </div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a744d60b4b000c61f2dd3819a12410595">ezMemoryUtils::IsEqual</a>(<span class="keyword">static_cast&lt;</span><span class="keyword">const </span>ValueType*<span class="keyword">&gt;</span>(<a class="code" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">GetPtr</a>()), <span class="keyword">static_cast&lt;</span><span class="keyword">const </span>ValueType*<span class="keyword">&gt;</span>(other.GetPtr()), <span class="keyword">static_cast&lt;</span><span class="keywordtype">size_t</span><span class="keyword">&gt;</span>(<a class="code" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>()));</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;  }</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160; </div>
<div class="line"><a name="l00168"></a><span class="lineno"><a class="line" href="../../d3/da7/classez_blob_ptr.htm#ac39a476dd681295012ca4babad44a196">  168</a></span>&#160;  EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../d3/da7/classez_blob_ptr.htm#ac39a476dd681295012ca4babad44a196">operator!=</a>(<span class="keyword">const</span> <a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;const T&gt;</a>&amp; other) <span class="keyword">const</span> <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;  {</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    <span class="keywordflow">return</span> !(*<span class="keyword">this</span> == other);</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;  }</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160; </div>
<div class="line"><a name="l00174"></a><span class="lineno"><a class="line" href="../../d3/da7/classez_blob_ptr.htm#ab51148660196ea156cbd50b2c85d773b">  174</a></span>&#160;  <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="../../d3/da7/classez_blob_ptr.htm#ab51148660196ea156cbd50b2c85d773b">CopyFrom</a>(<span class="keyword">const</span> <a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;const T&gt;</a>&amp; other) <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;  {</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    EZ_ASSERT_DEV(<a class="code" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>() == other.<a class="code" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>(), <span class="stringliteral">&quot;Count for copy does not match. Target has {0} elements, source {1} elements&quot;</span>, <a class="code" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>(), other.<a class="code" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>());</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160; </div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a15ff9286bc6efd02271c6d61578b5c02">ezMemoryUtils::Copy</a>(<span class="keyword">static_cast&lt;</span>ValueType*<span class="keyword">&gt;</span>(<a class="code" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">GetPtr</a>()), <span class="keyword">static_cast&lt;</span><span class="keyword">const </span>ValueType*<span class="keyword">&gt;</span>(other.<a class="code" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">GetPtr</a>()), <span class="keyword">static_cast&lt;</span><span class="keywordtype">size_t</span><span class="keyword">&gt;</span>(<a class="code" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>()));</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;  }</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160; </div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;  EZ_ALWAYS_INLINE <span class="keywordtype">void</span> Swap(<a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;T&gt;</a>&amp; other)</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;  {</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <a class="code" href="../../db/d78/namespaceez_math.htm#ac2cacaea5875d86a0459205bfd82ed13">ezMath::Swap</a>(m_ptr, other.m_ptr);</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <a class="code" href="../../db/d78/namespaceez_math.htm#ac2cacaea5875d86a0459205bfd82ed13">ezMath::Swap</a>(m_uiCount, other.m_uiCount);</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;  }</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160; </div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;  <span class="keyword">typedef</span> <span class="keyword">const</span> T* const_iterator;</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;  <span class="keyword">typedef</span> <a class="code" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">const_reverse_pointer_iterator&lt;T&gt;</a> const_reverse_iterator;</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;  <span class="keyword">typedef</span> T* iterator;</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;  <span class="keyword">typedef</span> <a class="code" href="../../d3/df2/structreverse__pointer__iterator.htm">reverse_pointer_iterator&lt;T&gt;</a> reverse_iterator;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160; </div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;  PointerType m_ptr;</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;  ezUInt64 m_uiCount;</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;};</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160; </div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160; </div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="keyword">using</span> <a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezByteBlobPtr</a> = <a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;ezUInt8&gt;</a>;</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="keyword">using</span> <a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezConstByteBlobPtr</a> = <a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;const ezUInt8&gt;</a>;</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160; </div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160; </div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;EZ_ALWAYS_INLINE <a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;T&gt;</a> ezMakeBlobPtr(T* ptr, ezUInt64 uiCount)</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;{</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;T&gt;</a>(ptr, uiCount);</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;}</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160; </div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, ezUInt64 N&gt;</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;EZ_ALWAYS_INLINE <a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;T&gt;</a> ezMakeBlobPtr(T (&amp;staticArray)[N])</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;{</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;T&gt;</a>(staticArray);</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;}</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160; </div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;EZ_ALWAYS_INLINE <a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezConstByteBlobPtr</a> ezMakeByteBlobPtr(<span class="keyword">const</span> T* ptr, ezUInt32 uiCount)</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;{</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezConstByteBlobPtr</a>(<span class="keyword">static_cast&lt;</span><span class="keyword">const </span>ezUInt8*<span class="keyword">&gt;</span>(ptr), uiCount * <span class="keyword">sizeof</span>(T));</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;}</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160; </div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;EZ_ALWAYS_INLINE <a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezByteBlobPtr</a> ezMakeByteBlobPtr(T* ptr, ezUInt32 uiCount)</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;{</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezByteBlobPtr</a>(<span class="keyword">reinterpret_cast&lt;</span>ezUInt8*<span class="keyword">&gt;</span>(ptr), uiCount * <span class="keyword">sizeof</span>(T));</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;}</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160; </div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;EZ_ALWAYS_INLINE <a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezByteBlobPtr</a> ezMakeByteBlobPtr(<span class="keywordtype">void</span>* ptr, ezUInt32 uiBytes)</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;{</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezByteBlobPtr</a>(<span class="keyword">reinterpret_cast&lt;</span>ezUInt8*<span class="keyword">&gt;</span>(ptr), uiBytes);</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;}</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160; </div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;EZ_ALWAYS_INLINE <a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezConstByteBlobPtr</a> ezMakeByteBlobPtr(<span class="keyword">const</span> <span class="keywordtype">void</span>* ptr, ezUInt32 uiBytes)</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;{</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezConstByteBlobPtr</a>(<span class="keyword">static_cast&lt;</span><span class="keyword">const </span>ezUInt8*<span class="keyword">&gt;</span>(ptr), uiBytes);</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;}</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160; </div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160; </div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="keyword">typename</span> ezBlobPtr&lt;T&gt;::iterator begin(<a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;T&gt;</a>&amp; container)</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;{</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;  <span class="keywordflow">return</span> container.<a class="code" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">GetPtr</a>();</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;}</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160; </div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="keyword">typename</span> <a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;T&gt;::const_iterator</a> begin(<span class="keyword">const</span> <a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;T&gt;</a>&amp; container)</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;{</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;  <span class="keywordflow">return</span> container.<a class="code" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">GetPtr</a>();</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;}</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160; </div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="keyword">typename</span> <a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;T&gt;::const_iterator</a> cbegin(<span class="keyword">const</span> <a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;T&gt;</a>&amp; container)</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;{</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;  <span class="keywordflow">return</span> container.<a class="code" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">GetPtr</a>();</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;}</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160; </div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;<span class="keyword">typename</span> <a class="code" href="../../d3/df2/structreverse__pointer__iterator.htm">ezBlobPtr&lt;T&gt;::reverse_iterator</a> rbegin(<a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;T&gt;</a>&amp; container)</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;{</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">typename</span> <a class="code" href="../../d3/df2/structreverse__pointer__iterator.htm">ezBlobPtr&lt;T&gt;::reverse_iterator</a>(container.<a class="code" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">GetPtr</a>() + container.<a class="code" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>() - 1);</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;}</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160; </div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="keyword">typename</span> <a class="code" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">ezBlobPtr&lt;T&gt;::const_reverse_iterator</a> rbegin(<span class="keyword">const</span> <a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;T&gt;</a>&amp; container)</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;{</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">typename</span> <a class="code" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">ezBlobPtr&lt;T&gt;::const_reverse_iterator</a>(container.<a class="code" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">GetPtr</a>() + container.<a class="code" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>() - 1);</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;}</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160; </div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="keyword">typename</span> <a class="code" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">ezBlobPtr&lt;T&gt;::const_reverse_iterator</a> crbegin(<span class="keyword">const</span> <a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;T&gt;</a>&amp; container)</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;{</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">typename</span> <a class="code" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">ezBlobPtr&lt;T&gt;::const_reverse_iterator</a>(container.<a class="code" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">GetPtr</a>() + container.<a class="code" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>() - 1);</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;}</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160; </div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;<span class="keyword">typename</span> ezBlobPtr&lt;T&gt;::iterator end(<a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;T&gt;</a>&amp; container)</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;{</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;  <span class="keywordflow">return</span> container.<a class="code" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">GetPtr</a>() + container.<a class="code" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>();</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;}</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160; </div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="keyword">typename</span> <a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;T&gt;::const_iterator</a> end(<span class="keyword">const</span> <a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;T&gt;</a>&amp; container)</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;{</div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;  <span class="keywordflow">return</span> container.<a class="code" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">GetPtr</a>() + container.<a class="code" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>();</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;}</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160; </div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;<span class="keyword">typename</span> <a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;T&gt;::const_iterator</a> cend(<span class="keyword">const</span> <a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;T&gt;</a>&amp; container)</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;{</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;  <span class="keywordflow">return</span> container.<a class="code" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">GetPtr</a>() + container.<a class="code" href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">GetCount</a>();</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;}</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160; </div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<span class="keyword">typename</span> <a class="code" href="../../d3/df2/structreverse__pointer__iterator.htm">ezBlobPtr&lt;T&gt;::reverse_iterator</a> rend(<a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;T&gt;</a>&amp; container)</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;{</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">typename</span> <a class="code" href="../../d3/df2/structreverse__pointer__iterator.htm">ezBlobPtr&lt;T&gt;::reverse_iterator</a>(container.<a class="code" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">GetPtr</a>() - 1);</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;}</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160; </div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;<span class="keyword">typename</span> <a class="code" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">ezBlobPtr&lt;T&gt;::const_reverse_iterator</a> rend(<span class="keyword">const</span> <a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;T&gt;</a>&amp; container)</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;{</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">typename</span> <a class="code" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">ezBlobPtr&lt;T&gt;::const_reverse_iterator</a>(container.<a class="code" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">GetPtr</a>() - 1);</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;}</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160; </div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;<span class="keyword">typename</span> <a class="code" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">ezBlobPtr&lt;T&gt;::const_reverse_iterator</a> crend(<span class="keyword">const</span> <a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;T&gt;</a>&amp; container)</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;{</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">typename</span> <a class="code" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">ezBlobPtr&lt;T&gt;::const_reverse_iterator</a>(container.<a class="code" href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">GetPtr</a>() - 1);</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;}</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160; </div>
<div class="line"><a name="l00321"></a><span class="lineno"><a class="line" href="../../dd/db8/classez_blob.htm">  321</a></span>&#160;<span class="keyword">class </span>EZ_FOUNDATION_DLL <a class="code" href="../../dd/db8/classez_blob.htm">ezBlob</a></div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;{</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;  EZ_DECLARE_MEM_RELOCATABLE_TYPE();</div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160; </div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;  <a class="code" href="../../dd/db8/classez_blob.htm">ezBlob</a>();</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160; </div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;  <a class="code" href="../../dd/db8/classez_blob.htm">ezBlob</a>(<a class="code" href="../../dd/db8/classez_blob.htm">ezBlob</a>&amp;&amp; other);</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160; </div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;  <span class="keywordtype">void</span> operator=(<a class="code" href="../../dd/db8/classez_blob.htm">ezBlob</a>&amp;&amp; rhs);</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160; </div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;  ~<a class="code" href="../../dd/db8/classez_blob.htm">ezBlob</a>();</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160; </div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;  <span class="keywordtype">void</span> SetFrom(<span class="keywordtype">void</span>* pSource, ezUInt64 uiSize);</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160; </div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;  <span class="keywordtype">void</span> Clear();</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160; </div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;  <span class="keywordtype">void</span> SetCountUninitialized(ezUInt64 uiCount);</div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160; </div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;  <span class="keywordtype">void</span> ZeroFill();</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160; </div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00353"></a><span class="lineno"><a class="line" href="../../dd/db8/classez_blob.htm#a6d0a761fd17e8dac065a200e6996c8d2">  353</a></span>&#160;  <a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;T&gt;</a> <a class="code" href="../../dd/db8/classez_blob.htm#a6d0a761fd17e8dac065a200e6996c8d2">GetBlobPtr</a>()</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;  {</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;T&gt;</a>(<span class="keyword">static_cast&lt;</span>T*<span class="keyword">&gt;</span>(m_pStorage), m_uiSize);</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;  }</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160; </div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00360"></a><span class="lineno"><a class="line" href="../../dd/db8/classez_blob.htm#a6a200f596c2da51f32b34c5457adfb7e">  360</a></span>&#160;  <a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;const T&gt;</a> <a class="code" href="../../dd/db8/classez_blob.htm#a6a200f596c2da51f32b34c5457adfb7e">GetBlobPtr</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt;const T&gt;</a>(<span class="keyword">static_cast&lt;</span>T*<span class="keyword">&gt;</span>(m_pStorage), m_uiSize);</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;  }</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160; </div>
<div class="line"><a name="l00366"></a><span class="lineno"><a class="line" href="../../dd/db8/classez_blob.htm#a08f617a147d7f18e284a17fd65b41dcd">  366</a></span>&#160;  <a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezByteBlobPtr</a> <a class="code" href="../../dd/db8/classez_blob.htm#a08f617a147d7f18e284a17fd65b41dcd">GetByteBlobPtr</a>() { <span class="keywordflow">return</span> <a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezByteBlobPtr</a>(<span class="keyword">reinterpret_cast&lt;</span>ezUInt8*<span class="keyword">&gt;</span>(m_pStorage), m_uiSize); }</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160; </div>
<div class="line"><a name="l00369"></a><span class="lineno"><a class="line" href="../../dd/db8/classez_blob.htm#add3f9e61a2d9dfc792c161b6bde7bf2f">  369</a></span>&#160;  <a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezConstByteBlobPtr</a> <a class="code" href="../../dd/db8/classez_blob.htm#add3f9e61a2d9dfc792c161b6bde7bf2f">GetByteBlobPtr</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="../../d3/da7/classez_blob_ptr.htm">ezConstByteBlobPtr</a>(<span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>ezUInt8*<span class="keyword">&gt;</span>(m_pStorage), m_uiSize); }</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160; </div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;  <span class="keywordtype">void</span>* m_pStorage = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;  ezUInt64 m_uiSize = 0;</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;};</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassez_blob_ptr_htm_a9d8ea856d504f38be18f1ae7247933f5"><div class="ttname"><a href="../../d3/da7/classez_blob_ptr.htm#a9d8ea856d504f38be18f1ae7247933f5">ezBlobPtr::ezBlobPtr</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezBlobPtr(const ezBlobPtr&lt; T &gt; &amp;other)</div><div class="ttdoc">Initializes the ezBlobPtr to be a copy of other. No memory is allocated or copied.</div><div class="ttdef"><b>Definition:</b> Blob.h:53</div></div>
<div class="ttc" id="aclassez_blob_ptr_htm_aa56da8c6e9411ccfd5a4c82c0c74f965"><div class="ttname"><a href="../../d3/da7/classez_blob_ptr.htm#aa56da8c6e9411ccfd5a4c82c0c74f965">ezBlobPtr::ezBlobPtr</a></div><div class="ttdeci">ezBlobPtr(U *ptr, ezUInt64 uiCount)</div><div class="ttdoc">Initializes the ezBlobPtr with the given pointer and number of elements. No memory is allocated or co...</div><div class="ttdef"><b>Definition:</b> Blob.h:32</div></div>
<div class="ttc" id="aclassez_blob_ptr_htm_a2e1fdec1af16b1507f9d775cc9d4f533"><div class="ttname"><a href="../../d3/da7/classez_blob_ptr.htm#a2e1fdec1af16b1507f9d775cc9d4f533">ezBlobPtr::Clear</a></div><div class="ttdeci">EZ_ALWAYS_INLINE void Clear()</div><div class="ttdoc">Clears the array.</div><div class="ttdef"><b>Definition:</b> Blob.h:70</div></div>
<div class="ttc" id="aclassez_blob_ptr_htm_a183e45d443a6494e7a3c2ddea826b354"><div class="ttname"><a href="../../d3/da7/classez_blob_ptr.htm#a183e45d443a6494e7a3c2ddea826b354">ezBlobPtr::GetPtr</a></div><div class="ttdeci">EZ_ALWAYS_INLINE PointerType GetPtr() const</div><div class="ttdoc">Returns the pointer to the array.</div><div class="ttdef"><b>Definition:</b> Blob.h:83</div></div>
<div class="ttc" id="aclassez_blob_ptr_htm_ab51148660196ea156cbd50b2c85d773b"><div class="ttname"><a href="../../d3/da7/classez_blob_ptr.htm#ab51148660196ea156cbd50b2c85d773b">ezBlobPtr::CopyFrom</a></div><div class="ttdeci">void CopyFrom(const ezBlobPtr&lt; const T &gt; &amp;other)</div><div class="ttdoc">Copies the data from other into this array. The arrays must have the exact same size.</div><div class="ttdef"><b>Definition:</b> Blob.h:174</div></div>
<div class="ttc" id="aclassez_blob_ptr_htm_a147655c350dac8408141e8049fcb478f"><div class="ttname"><a href="../../d3/da7/classez_blob_ptr.htm#a147655c350dac8408141e8049fcb478f">ezBlobPtr::Cast</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezBlobPtr&lt; U &gt; Cast()</div><div class="ttdoc">Cast an BlobPtr to an BlobPtr to a different, but same size, type.</div><div class="ttdef"><b>Definition:</b> Blob.h:127</div></div>
<div class="ttc" id="aclassez_blob_ptr_htm_ac39a476dd681295012ca4babad44a196"><div class="ttname"><a href="../../d3/da7/classez_blob_ptr.htm#ac39a476dd681295012ca4babad44a196">ezBlobPtr::operator!=</a></div><div class="ttdeci">EZ_ALWAYS_INLINE bool operator!=(const ezBlobPtr&lt; const T &gt; &amp;other) const</div><div class="ttdoc">Compares the two arrays for inequality.</div><div class="ttdef"><b>Definition:</b> Blob.h:168</div></div>
<div class="ttc" id="aclassez_blob_htm_a6a200f596c2da51f32b34c5457adfb7e"><div class="ttname"><a href="../../dd/db8/classez_blob.htm#a6a200f596c2da51f32b34c5457adfb7e">ezBlob::GetBlobPtr</a></div><div class="ttdeci">ezBlobPtr&lt; const T &gt; GetBlobPtr() const</div><div class="ttdoc">Returns a blob pointer to the blob data, or an empty blob pointer if the blob is empty.</div><div class="ttdef"><b>Definition:</b> Blob.h:360</div></div>
<div class="ttc" id="aclassez_blob_ptr_htm_a63f7944d7869c3939ebe199fe11c878c"><div class="ttname"><a href="../../d3/da7/classez_blob_ptr.htm#a63f7944d7869c3939ebe199fe11c878c">ezBlobPtr::operator[]</a></div><div class="ttdeci">EZ_FORCE_INLINE ValueType &amp; operator[](ezUInt64 uiIndex)</div><div class="ttdoc">Index access.</div><div class="ttdef"><b>Definition:</b> Blob.h:149</div></div>
<div class="ttc" id="aclassez_blob_ptr_htm_ac71ff0c7faf172a3ffb10ea40b4de584"><div class="ttname"><a href="../../d3/da7/classez_blob_ptr.htm#ac71ff0c7faf172a3ffb10ea40b4de584">ezBlobPtr::GetSubArray</a></div><div class="ttdeci">EZ_FORCE_INLINE ezBlobPtr&lt; T &gt; GetSubArray(ezUInt64 uiStart) const</div><div class="ttdoc">Creates a sub-array from this array.</div><div class="ttdef"><b>Definition:</b> Blob.h:110</div></div>
<div class="ttc" id="aclassez_blob_ptr_htm"><div class="ttname"><a href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr</a></div><div class="ttdoc">This class encapsulates a blob's storage and it's size. It is recommended to use this class instead o...</div><div class="ttdef"><b>Definition:</b> Blob.h:11</div></div>
<div class="ttc" id="aclassez_blob_htm_a6d0a761fd17e8dac065a200e6996c8d2"><div class="ttname"><a href="../../dd/db8/classez_blob.htm#a6d0a761fd17e8dac065a200e6996c8d2">ezBlob::GetBlobPtr</a></div><div class="ttdeci">ezBlobPtr&lt; T &gt; GetBlobPtr()</div><div class="ttdoc">Returns a blob pointer to the blob data, or an empty blob pointer if the blob is empty.</div><div class="ttdef"><b>Definition:</b> Blob.h:353</div></div>
<div class="ttc" id="aclassez_blob_htm"><div class="ttname"><a href="../../dd/db8/classez_blob.htm">ezBlob</a></div><div class="ttdoc">ezBlob allows to store simple binary data larger than 4GB. This storage class is used by ezImage to a...</div><div class="ttdef"><b>Definition:</b> Blob.h:321</div></div>
<div class="ttc" id="aclassez_blob_ptr_htm_ad53833898cc80474f8c397e19a322322"><div class="ttname"><a href="../../d3/da7/classez_blob_ptr.htm#ad53833898cc80474f8c397e19a322322">ezBlobPtr::ToByteBlob</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezBlobPtr&lt; ByteType &gt; ToByteBlob()</div><div class="ttdoc">Reinterprets this array as a byte array.</div><div class="ttdef"><b>Definition:</b> Blob.h:123</div></div>
<div class="ttc" id="aclassez_blob_ptr_htm_a4e3bbf73b652ce242ba30cdc756f288e"><div class="ttname"><a href="../../d3/da7/classez_blob_ptr.htm#a4e3bbf73b652ce242ba30cdc756f288e">ezBlobPtr::GetEndPtr</a></div><div class="ttdeci">EZ_ALWAYS_INLINE PointerType GetEndPtr()</div><div class="ttdoc">Returns the pointer behind the last element of the array.</div><div class="ttdef"><b>Definition:</b> Blob.h:89</div></div>
<div class="ttc" id="astructconst__reverse__pointer__iterator_htm"><div class="ttname"><a href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">const_reverse_pointer_iterator</a></div><div class="ttdoc">Base class for Pointer like reverse iterators.</div><div class="ttdef"><b>Definition:</b> ArrayIterator.h:151</div></div>
<div class="ttc" id="aclassez_blob_ptr_htm_a0d7f5d9272de273ce0a413242fb00431"><div class="ttname"><a href="../../d3/da7/classez_blob_ptr.htm#a0d7f5d9272de273ce0a413242fb00431">ezBlobPtr::operator[]</a></div><div class="ttdeci">const EZ_FORCE_INLINE ValueType &amp; operator[](ezUInt64 uiIndex) const</div><div class="ttdoc">Index access.</div><div class="ttdef"><b>Definition:</b> Blob.h:142</div></div>
<div class="ttc" id="aclassez_memory_utils_htm_a15ff9286bc6efd02271c6d61578b5c02"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm#a15ff9286bc6efd02271c6d61578b5c02">ezMemoryUtils::Copy</a></div><div class="ttdeci">static void Copy(T *pDestination, const T *pSource, size_t uiCount)</div><div class="ttdoc">Copies objects of type T from pSource to pDestination.</div></div>
<div class="ttc" id="aclassez_blob_ptr_htm_a36043e87f673094c53d4d0f7e8e8a970"><div class="ttname"><a href="../../d3/da7/classez_blob_ptr.htm#a36043e87f673094c53d4d0f7e8e8a970">ezBlobPtr::GetCount</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezUInt64 GetCount() const</div><div class="ttdoc">Returns the number of elements in the array.</div><div class="ttdef"><b>Definition:</b> Blob.h:98</div></div>
<div class="ttc" id="aclassez_blob_ptr_htm_a49883b9a269490144839ffe626951828"><div class="ttname"><a href="../../d3/da7/classez_blob_ptr.htm#a49883b9a269490144839ffe626951828">ezBlobPtr::operator==</a></div><div class="ttdeci">bool operator==(const ezBlobPtr&lt; const T &gt; &amp;other) const</div><div class="ttdoc">Compares the two arrays for equality.</div><div class="ttdef"><b>Definition:</b> Blob.h:156</div></div>
<div class="ttc" id="aclassez_blob_ptr_htm_a317a1e5de3f974d0e498a75db1956886"><div class="ttname"><a href="../../d3/da7/classez_blob_ptr.htm#a317a1e5de3f974d0e498a75db1956886">ezBlobPtr::ezBlobPtr</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezBlobPtr(ValueType(&amp;staticArray)[N])</div><div class="ttdoc">Initializes the ezBlobPtr to encapsulate the given array.</div><div class="ttdef"><b>Definition:</b> Blob.h:46</div></div>
<div class="ttc" id="aclassez_blob_ptr_htm_a135088d7eeddb6a98ba64c7907bd6c3c"><div class="ttname"><a href="../../d3/da7/classez_blob_ptr.htm#a135088d7eeddb6a98ba64c7907bd6c3c">ezBlobPtr::operator=</a></div><div class="ttdeci">EZ_ALWAYS_INLINE void operator=(const ezBlobPtr&lt; T &gt; &amp;other)</div><div class="ttdoc">Copies the pointer and size of /a other. Does not allocate any data.</div><div class="ttdef"><b>Definition:</b> Blob.h:63</div></div>
<div class="ttc" id="aclassez_blob_ptr_htm_a0fa3769cce78cf513df8ef35fb277bc2"><div class="ttname"><a href="../../d3/da7/classez_blob_ptr.htm#a0fa3769cce78cf513df8ef35fb277bc2">ezBlobPtr::GetPtr</a></div><div class="ttdeci">EZ_ALWAYS_INLINE PointerType GetPtr()</div><div class="ttdoc">Returns the pointer to the array.</div><div class="ttdef"><b>Definition:</b> Blob.h:86</div></div>
<div class="ttc" id="aclassez_blob_ptr_htm_a9668881d3b9f41795447191f4e3cd2fe"><div class="ttname"><a href="../../d3/da7/classez_blob_ptr.htm#a9668881d3b9f41795447191f4e3cd2fe">ezBlobPtr::ezBlobPtr</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezBlobPtr()</div><div class="ttdoc">Initializes the ezBlobPtr to be empty.</div><div class="ttdef"><b>Definition:</b> Blob.h:24</div></div>
<div class="ttc" id="aclassez_blob_ptr_htm_a7a2c108f31241e01cabc4690ecab1a3f"><div class="ttname"><a href="../../d3/da7/classez_blob_ptr.htm#a7a2c108f31241e01cabc4690ecab1a3f">ezBlobPtr::ToByteBlob</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezBlobPtr&lt; const ByteType &gt; ToByteBlob() const</div><div class="ttdoc">Reinterprets this array as a byte array.</div><div class="ttdef"><b>Definition:</b> Blob.h:117</div></div>
<div class="ttc" id="astructreverse__pointer__iterator_htm"><div class="ttname"><a href="../../d3/df2/structreverse__pointer__iterator.htm">reverse_pointer_iterator</a></div><div class="ttdoc">Non-Const class for Pointer like reverse iterators.</div><div class="ttdef"><b>Definition:</b> ArrayIterator.h:215</div></div>
<div class="ttc" id="aclassez_blob_htm_add3f9e61a2d9dfc792c161b6bde7bf2f"><div class="ttname"><a href="../../dd/db8/classez_blob.htm#add3f9e61a2d9dfc792c161b6bde7bf2f">ezBlob::GetByteBlobPtr</a></div><div class="ttdeci">ezConstByteBlobPtr GetByteBlobPtr() const</div><div class="ttdoc">Returns a blob pointer to the blob data, or an empty blob pointer if the blob is empty.</div><div class="ttdef"><b>Definition:</b> Blob.h:369</div></div>
<div class="ttc" id="aclassez_blob_htm_a08f617a147d7f18e284a17fd65b41dcd"><div class="ttname"><a href="../../dd/db8/classez_blob.htm#a08f617a147d7f18e284a17fd65b41dcd">ezBlob::GetByteBlobPtr</a></div><div class="ttdeci">ezByteBlobPtr GetByteBlobPtr()</div><div class="ttdoc">Returns a blob pointer to the blob data, or an empty blob pointer if the blob is empty.</div><div class="ttdef"><b>Definition:</b> Blob.h:366</div></div>
<div class="ttc" id="aclassez_blob_ptr_htm_a530052b53346ced27aeee754cc5f10db"><div class="ttname"><a href="../../d3/da7/classez_blob_ptr.htm#a530052b53346ced27aeee754cc5f10db">ezBlobPtr::IsEmpty</a></div><div class="ttdeci">EZ_ALWAYS_INLINE bool IsEmpty() const</div><div class="ttdoc">Returns whether the array is empty.</div><div class="ttdef"><b>Definition:</b> Blob.h:95</div></div>
<div class="ttc" id="aclassez_blob_ptr_htm_a75d59f4449a76b89ee170d7eb29374b5"><div class="ttname"><a href="../../d3/da7/classez_blob_ptr.htm#a75d59f4449a76b89ee170d7eb29374b5">ezBlobPtr::GetEndPtr</a></div><div class="ttdeci">EZ_ALWAYS_INLINE PointerType GetEndPtr() const</div><div class="ttdoc">Returns the pointer behind the last element of the array.</div><div class="ttdef"><b>Definition:</b> Blob.h:92</div></div>
<div class="ttc" id="aclassez_memory_utils_htm_a744d60b4b000c61f2dd3819a12410595"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm#a744d60b4b000c61f2dd3819a12410595">ezMemoryUtils::IsEqual</a></div><div class="ttdeci">static bool IsEqual(const T *a, const T *b, size_t uiCount=1)</div><div class="ttdoc">Tests if objects of type T from pSource and pDestination are equal.</div></div>
<div class="ttc" id="aclassez_blob_ptr_htm_aa7810f12819fd1cb88f22dcc4c39454e"><div class="ttname"><a href="../../d3/da7/classez_blob_ptr.htm#aa7810f12819fd1cb88f22dcc4c39454e">ezBlobPtr::GetSubArray</a></div><div class="ttdeci">EZ_FORCE_INLINE ezBlobPtr&lt; T &gt; GetSubArray(ezUInt64 uiStart, ezUInt64 uiCount) const</div><div class="ttdoc">Creates a sub-array from this array.</div><div class="ttdef"><b>Definition:</b> Blob.h:101</div></div>
<div class="ttc" id="aclassez_blob_ptr_htm_aa8f5d279df93c9e6ba40860415461393"><div class="ttname"><a href="../../d3/da7/classez_blob_ptr.htm#aa8f5d279df93c9e6ba40860415461393">ezBlobPtr::Cast</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezBlobPtr&lt; const U &gt; Cast() const</div><div class="ttdoc">Cast an BlobPtr to an BlobPtr to a different, but same size, type.</div><div class="ttdef"><b>Definition:</b> Blob.h:135</div></div>
<div class="ttc" id="anamespaceez_math_htm_ac2cacaea5875d86a0459205bfd82ed13"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#ac2cacaea5875d86a0459205bfd82ed13">ezMath::Swap</a></div><div class="ttdeci">EZ_ALWAYS_INLINE void Swap(T &amp;f1, T &amp;f2)</div><div class="ttdoc">Swaps the values in the two variables f1 and f2.</div><div class="ttdef"><b>Definition:</b> Math_inl.h:170</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_6b567e6755824bd0b8ffd754b9d67ac0.htm">Containers</a></li><li class="navelem"><b>Blob.h</b></li>
    <li class="footer">Generated on Mon Oct 18 2021 15:33:25 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
