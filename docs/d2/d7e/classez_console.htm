<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: ezConsole Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 21.6</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d2/d7e/classez_console.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-types">Public Types</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-static-methods">Static Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="../../d4/de4/classez_console-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ezConsole Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>A Quake-style console for in-game configuration of <a class="el" href="../../d2/d58/classez_c_var.htm" title="CVars are global variables that are used for configuring the engine.">ezCVar</a> and <a class="el" href="../../d4/dc2/classez_console_function.htm" title="Implements the functionality of ezConsoleFunctionBase for functions with different parameter types....">ezConsoleFunction</a>.  
 <a href="../../d2/d7e/classez_console.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d3/d6e/_console_8h_source.htm">Console.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d53/structez_console_1_1_console_event.htm">ConsoleEvent</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">The event data that is broadcast by the console.  <a href="../../dd/d53/structez_console_1_1_console_event.htm#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/df3/structez_console_1_1_console_string.htm">ConsoleString</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">The data for one text entry in the console window.  <a href="../../d7/df3/structez_console_1_1_console_string.htm#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a80105e8f1e00bb71ac057c83d9633cce"><td class="memItemLeft" align="right" valign="top"><a id="a80105e8f1e00bb71ac057c83d9633cce"></a>
typedef <a class="el" href="../../d5/d68/structez_delegate.htm">ezDelegate</a>&lt; <a class="el" href="../../d4/da9/structez_result.htm">ezResult</a>(const char *, <a class="el" href="../../d2/d7e/classez_console.htm">ezConsole</a> *)&gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d7e/classez_console.htm#a80105e8f1e00bb71ac057c83d9633cce">ezCommandProcessor</a></td></tr>
<tr class="memdesc:a80105e8f1e00bb71ac057c83d9633cce"><td class="mdescLeft">&#160;</td><td class="mdescRight">The delegate type for an interpreter of all the commands that are typed into the console. <br /></td></tr>
<tr class="separator:a80105e8f1e00bb71ac057c83d9633cce"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr><td colspan="2"><div class="groupHeader">Configuration</div></td></tr>
<tr class="memitem:ab2be0b030f337f97d33ac3ec07757a7d"><td class="memItemLeft" align="right" valign="top"><a id="ab2be0b030f337f97d33ac3ec07757a7d"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d7e/classez_console.htm#ab2be0b030f337f97d33ac3ec07757a7d">SetMaxConsoleStrings</a> (ezUInt32 uiMax)</td></tr>
<tr class="memdesc:ab2be0b030f337f97d33ac3ec07757a7d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adjusts how many strings the console will keep in memory at maximum. <br /></td></tr>
<tr class="separator:ab2be0b030f337f97d33ac3ec07757a7d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af31c6c2b61896b8da539e72ae54a31da"><td class="memItemLeft" align="right" valign="top"><a id="af31c6c2b61896b8da539e72ae54a31da"></a>
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d7e/classez_console.htm#af31c6c2b61896b8da539e72ae54a31da">GetMaxConsoleStrings</a> () const</td></tr>
<tr class="memdesc:af31c6c2b61896b8da539e72ae54a31da"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns how many strings the console will keep in memory at maximum. <br /></td></tr>
<tr class="separator:af31c6c2b61896b8da539e72ae54a31da"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab659baca75b2494a2200d3cec3f2e037"><td class="memItemLeft" align="right" valign="top"><a id="ab659baca75b2494a2200d3cec3f2e037"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d7e/classez_console.htm#ab659baca75b2494a2200d3cec3f2e037">EnableLogOutput</a> (bool bEnable)</td></tr>
<tr class="memdesc:ab659baca75b2494a2200d3cec3f2e037"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enables or disables that the output from <a class="el" href="../../d1/de1/classez_global_log.htm" title="This is the standard log system that ezLog sends all messages to.">ezGlobalLog</a> is displayed in the console. Enabled by default. <br /></td></tr>
<tr class="separator:ab659baca75b2494a2200d3cec3f2e037"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a64a3974d6abda756ced57248d6725039"><td class="memItemLeft" align="right" valign="top"><a id="a64a3974d6abda756ced57248d6725039"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d7e/classez_console.htm#a64a3974d6abda756ced57248d6725039">SaveState</a> (<a class="el" href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a> &amp;Stream) const</td></tr>
<tr class="memdesc:a64a3974d6abda756ced57248d6725039"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes the state of the console (history, bound keys) to the stream. <br /></td></tr>
<tr class="separator:a64a3974d6abda756ced57248d6725039"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc2559d29ee61436e39d334f2ab31514"><td class="memItemLeft" align="right" valign="top"><a id="afc2559d29ee61436e39d334f2ab31514"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d7e/classez_console.htm#afc2559d29ee61436e39d334f2ab31514">LoadState</a> (<a class="el" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a> &amp;Stream)</td></tr>
<tr class="memdesc:afc2559d29ee61436e39d334f2ab31514"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reads the state of the console (history, bound keys) from the stream. <br /></td></tr>
<tr class="separator:afc2559d29ee61436e39d334f2ab31514"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Command Processing</div></td></tr>
<tr class="memitem:aecf40099347938adaee1983e7ad9b1df"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d7e/classez_console.htm#aecf40099347938adaee1983e7ad9b1df">SetCommandInterpreter</a> (<a class="el" href="../../d2/d7e/classez_console.htm#a80105e8f1e00bb71ac057c83d9633cce">ezCommandProcessor</a> processor)</td></tr>
<tr class="memdesc:aecf40099347938adaee1983e7ad9b1df"><td class="mdescLeft">&#160;</td><td class="mdescRight">Replaces the current command interpreter. This allows to attach a custom interpreter to the console.  <a href="../../d2/d7e/classez_console.htm#aecf40099347938adaee1983e7ad9b1df">More...</a><br /></td></tr>
<tr class="separator:aecf40099347938adaee1983e7ad9b1df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e28834779d403805f7ab3a56691a2cd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d7e/classez_console.htm#a1e28834779d403805f7ab3a56691a2cd">ProcessCommand</a> (const char *szCmd)</td></tr>
<tr class="memdesc:a1e28834779d403805f7ab3a56691a2cd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Executes the given command using the current command interpreter.  <a href="../../d2/d7e/classez_console.htm#a1e28834779d403805f7ab3a56691a2cd">More...</a><br /></td></tr>
<tr class="separator:a1e28834779d403805f7ab3a56691a2cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6be95bb0fd3ffc4e39e22eacb2ad97ee"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d7e/classez_console.htm#a6be95bb0fd3ffc4e39e22eacb2ad97ee">BindKey</a> (const char *szKey, const char *szCommand)</td></tr>
<tr class="memdesc:a6be95bb0fd3ffc4e39e22eacb2ad97ee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Binds <em>szCommand</em> to <em>szKey</em>. Calling <a class="el" href="../../d2/d7e/classez_console.htm#ac2e236c115da8a228494c647ad4b1a92" title="Executes the command that was bound to this key.">ExecuteBoundKey()</a> with this key will then run that command.  <a href="../../d2/d7e/classez_console.htm#a6be95bb0fd3ffc4e39e22eacb2ad97ee">More...</a><br /></td></tr>
<tr class="separator:a6be95bb0fd3ffc4e39e22eacb2ad97ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a06847707a7ba805e8b349dea80973e6d"><td class="memItemLeft" align="right" valign="top"><a id="a06847707a7ba805e8b349dea80973e6d"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d7e/classez_console.htm#a06847707a7ba805e8b349dea80973e6d">UnbindKey</a> (const char *szKey)</td></tr>
<tr class="memdesc:a06847707a7ba805e8b349dea80973e6d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes the key binding. <br /></td></tr>
<tr class="separator:a06847707a7ba805e8b349dea80973e6d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2e236c115da8a228494c647ad4b1a92"><td class="memItemLeft" align="right" valign="top"><a id="ac2e236c115da8a228494c647ad4b1a92"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d7e/classez_console.htm#ac2e236c115da8a228494c647ad4b1a92">ExecuteBoundKey</a> (const char *szKey)</td></tr>
<tr class="memdesc:ac2e236c115da8a228494c647ad4b1a92"><td class="mdescLeft">&#160;</td><td class="mdescRight">Executes the command that was bound to this key. <br /></td></tr>
<tr class="separator:ac2e236c115da8a228494c647ad4b1a92"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Input Handling</div></td></tr>
<tr class="memitem:ae28f298d42e73eb80e1c0eefcc5836e4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d7e/classez_console.htm#ae28f298d42e73eb80e1c0eefcc5836e4">AddInputCharacter</a> (ezUInt32 uiChar)</td></tr>
<tr class="memdesc:ae28f298d42e73eb80e1c0eefcc5836e4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inserts one character at the caret position into the console input line.  <a href="../../d2/d7e/classez_console.htm#ae28f298d42e73eb80e1c0eefcc5836e4">More...</a><br /></td></tr>
<tr class="separator:ae28f298d42e73eb80e1c0eefcc5836e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae59e458711fb0631a9f4e3f5d5830a08"><td class="memItemLeft" align="right" valign="top"><a id="ae59e458711fb0631a9f4e3f5d5830a08"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d7e/classez_console.htm#ae59e458711fb0631a9f4e3f5d5830a08">ClearInputLine</a> ()</td></tr>
<tr class="memdesc:ae59e458711fb0631a9f4e3f5d5830a08"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears the input line of the console. <br /></td></tr>
<tr class="separator:ae59e458711fb0631a9f4e3f5d5830a08"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f0a537c207c4a9600dc79561fe17ac5"><td class="memItemLeft" align="right" valign="top"><a id="a1f0a537c207c4a9600dc79561fe17ac5"></a>
const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d7e/classez_console.htm#a1f0a537c207c4a9600dc79561fe17ac5">GetInputLine</a> () const</td></tr>
<tr class="memdesc:a1f0a537c207c4a9600dc79561fe17ac5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the current content of the input line. <br /></td></tr>
<tr class="separator:a1f0a537c207c4a9600dc79561fe17ac5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a290476b18f2be943d51181e70f8b9784"><td class="memItemLeft" align="right" valign="top"><a id="a290476b18f2be943d51181e70f8b9784"></a>
ezInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d7e/classez_console.htm#a290476b18f2be943d51181e70f8b9784">GetCaretPosition</a> () const</td></tr>
<tr class="memdesc:a290476b18f2be943d51181e70f8b9784"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the position (in characters) of the caret. <br /></td></tr>
<tr class="separator:a290476b18f2be943d51181e70f8b9784"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adbf8eeb96d7c9ec2f3ce841040f549f6"><td class="memItemLeft" align="right" valign="top"><a id="adbf8eeb96d7c9ec2f3ce841040f549f6"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d7e/classez_console.htm#adbf8eeb96d7c9ec2f3ce841040f549f6">MoveCaret</a> (ezInt32 iMoveOffset)</td></tr>
<tr class="memdesc:adbf8eeb96d7c9ec2f3ce841040f549f6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Moves the caret in the text. Its position will be clamped to the length of the current input line text. <br /></td></tr>
<tr class="separator:adbf8eeb96d7c9ec2f3ce841040f549f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a99b00ef2211f5c9b43005d1f7c7dac21"><td class="memItemLeft" align="right" valign="top"><a id="a99b00ef2211f5c9b43005d1f7c7dac21"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d7e/classez_console.htm#a99b00ef2211f5c9b43005d1f7c7dac21">DeleteNextCharacter</a> ()</td></tr>
<tr class="memdesc:a99b00ef2211f5c9b43005d1f7c7dac21"><td class="mdescLeft">&#160;</td><td class="mdescRight">Deletes the character following the caret position. <br /></td></tr>
<tr class="separator:a99b00ef2211f5c9b43005d1f7c7dac21"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af488e4348d9e2be5286db96d06748c9f"><td class="memItemLeft" align="right" valign="top"><a id="af488e4348d9e2be5286db96d06748c9f"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d7e/classez_console.htm#af488e4348d9e2be5286db96d06748c9f">Scroll</a> (ezInt32 iLines)</td></tr>
<tr class="memdesc:af488e4348d9e2be5286db96d06748c9f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Scrolls the contents of the console up or down. Will be clamped to the available range. <br /></td></tr>
<tr class="separator:af488e4348d9e2be5286db96d06748c9f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaac5b43e2e8bfc7f6ee2335c8731f2c6"><td class="memItemLeft" align="right" valign="top"><a id="aaac5b43e2e8bfc7f6ee2335c8731f2c6"></a>
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d7e/classez_console.htm#aaac5b43e2e8bfc7f6ee2335c8731f2c6">GetScrollPosition</a> () const</td></tr>
<tr class="memdesc:aaac5b43e2e8bfc7f6ee2335c8731f2c6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the current scroll position. This must be used during rendering to start with the proper line. <br /></td></tr>
<tr class="separator:aaac5b43e2e8bfc7f6ee2335c8731f2c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4a211d78dbd89d99b165fe4ed0d1e4dc"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d7e/classez_console.htm#a4a211d78dbd89d99b165fe4ed0d1e4dc">AutoCompleteInputLine</a> ()</td></tr>
<tr class="memdesc:a4a211d78dbd89d99b165fe4ed0d1e4dc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tries to auto-complete the current input line.  <a href="../../d2/d7e/classez_console.htm#a4a211d78dbd89d99b165fe4ed0d1e4dc">More...</a><br /></td></tr>
<tr class="separator:a4a211d78dbd89d99b165fe4ed0d1e4dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95977828ad5cadc50a138ba40e479d66"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d7e/classez_console.htm#a95977828ad5cadc50a138ba40e479d66">DoDefaultInputHandling</a> (bool bConsoleOpen)</td></tr>
<tr class="memdesc:a95977828ad5cadc50a138ba40e479d66"><td class="mdescLeft">&#160;</td><td class="mdescRight">This function implements input handling (via <a class="el" href="../../d8/d45/classez_input_manager.htm" title="The central class to set up and query the state of all input.">ezInputManager</a>) for the console.  <a href="../../d2/d7e/classez_console.htm#a95977828ad5cadc50a138ba40e479d66">More...</a><br /></td></tr>
<tr class="separator:a95977828ad5cadc50a138ba40e479d66"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr><td colspan="2"><div class="groupHeader">Console Content</div></td></tr>
<tr class="memitem:a2835092371da6d5c7f25da4a85f30091"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d7e/classez_console.htm#a2835092371da6d5c7f25da4a85f30091">AddConsoleString</a> (const char *szText, const <a class="el" href="../../dd/d01/classez_color.htm">ezColor</a> &amp;color=<a class="el" href="../../dd/d01/classez_color.htm">ezColor</a>(1, 1, 1), bool bShowOnScreen=false)</td></tr>
<tr class="memdesc:a2835092371da6d5c7f25da4a85f30091"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a string to the console.  <a href="../../d2/d7e/classez_console.htm#a2835092371da6d5c7f25da4a85f30091">More...</a><br /></td></tr>
<tr class="separator:a2835092371da6d5c7f25da4a85f30091"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7485f4b2e1280f484e60af237c800917"><td class="memItemLeft" align="right" valign="top"><a id="a7485f4b2e1280f484e60af237c800917"></a>
const <a class="el" href="../../d9/dfe/classez_deque.htm">ezDeque</a>&lt; <a class="el" href="../../d7/df3/structez_console_1_1_console_string.htm">ConsoleString</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d7e/classez_console.htm#a7485f4b2e1280f484e60af237c800917">GetConsoleStrings</a> () const</td></tr>
<tr class="memdesc:a7485f4b2e1280f484e60af237c800917"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns all current console strings. Use <a class="el" href="../../d2/d7e/classez_console.htm#aaac5b43e2e8bfc7f6ee2335c8731f2c6" title="Returns the current scroll position. This must be used during rendering to start with the proper line...">GetScrollPosition()</a> to know which one should be displayed as the first one. <br /></td></tr>
<tr class="separator:a7485f4b2e1280f484e60af237c800917"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8861b46b49430c27539d04a2a11b706d"><td class="memItemLeft" align="right" valign="top"><a id="a8861b46b49430c27539d04a2a11b706d"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d7e/classez_console.htm#a8861b46b49430c27539d04a2a11b706d">ClearConsoleStrings</a> ()</td></tr>
<tr class="memdesc:a8861b46b49430c27539d04a2a11b706d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Deletes all console strings, making the console empty. <br /></td></tr>
<tr class="separator:a8861b46b49430c27539d04a2a11b706d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad2bfca4cf291b6d8639434c9aad6d56d"><td class="memItemLeft" align="right" valign="top"><a id="ad2bfca4cf291b6d8639434c9aad6d56d"></a>
const <a class="el" href="../../df/d5c/classez_static_array.htm">ezStaticArray</a>&lt; <a class="el" href="../../d4/d53/structez_hybrid_string.htm">ezString</a>, 16 &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d7e/classez_console.htm#ad2bfca4cf291b6d8639434c9aad6d56d">GetInputHistory</a> () const</td></tr>
<tr class="memdesc:ad2bfca4cf291b6d8639434c9aad6d56d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the current input history. <br /></td></tr>
<tr class="separator:ad2bfca4cf291b6d8639434c9aad6d56d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad779289e3364401f4c0d54d0885e3b37"><td class="memItemLeft" align="right" valign="top"><a id="ad779289e3364401f4c0d54d0885e3b37"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d7e/classez_console.htm#ad779289e3364401f4c0d54d0885e3b37">SearchInputHistory</a> (ezInt32 iHistoryUp)</td></tr>
<tr class="memdesc:ad779289e3364401f4c0d54d0885e3b37"><td class="mdescLeft">&#160;</td><td class="mdescRight">Replaces the input line by the next (or previous) history item. <br /></td></tr>
<tr class="separator:ad779289e3364401f4c0d54d0885e3b37"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr><td colspan="2"><div class="groupHeader">Events</div></td></tr>
<tr class="memitem:a181e0f76ca663f06eefde9b859390e1b"><td class="memItemLeft" align="right" valign="top"><a id="a181e0f76ca663f06eefde9b859390e1b"></a>
<a class="el" href="../../d0/daf/classez_event.htm">ezEvent</a>&lt; <a class="el" href="../../dd/d53/structez_console_1_1_console_event.htm">ConsoleEvent</a> &amp; &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d7e/classez_console.htm#a181e0f76ca663f06eefde9b859390e1b">m_Events</a></td></tr>
<tr class="memdesc:a181e0f76ca663f06eefde9b859390e1b"><td class="mdescLeft">&#160;</td><td class="mdescRight">The console event variable, to attach to. <br /></td></tr>
<tr class="separator:a181e0f76ca663f06eefde9b859390e1b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a464e624a044a3676dee20d4a1b12ee1c"><td class="memItemLeft" align="right" valign="top"><a id="a464e624a044a3676dee20d4a1b12ee1c"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d7e/classez_console.htm#a464e624a044a3676dee20d4a1b12ee1c">RemoveCharacter</a> (ezUInt32 uiInputLinePosition)</td></tr>
<tr class="memdesc:a464e624a044a3676dee20d4a1b12ee1c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Deletes the character at the given position in the input line. <br /></td></tr>
<tr class="separator:a464e624a044a3676dee20d4a1b12ee1c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a143ca05cae96f860b62655dd1649ffa3"><td class="memItemLeft" align="right" valign="top"><a id="a143ca05cae96f860b62655dd1649ffa3"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d7e/classez_console.htm#a143ca05cae96f860b62655dd1649ffa3">ClampCaretPosition</a> ()</td></tr>
<tr class="memdesc:a143ca05cae96f860b62655dd1649ffa3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Makes sure the caret position is clamped to the input line length. <br /></td></tr>
<tr class="separator:a143ca05cae96f860b62655dd1649ffa3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acea8b6e862c8a299021f063a5ee08139"><td class="memItemLeft" align="right" valign="top"><a id="acea8b6e862c8a299021f063a5ee08139"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d7e/classez_console.htm#acea8b6e862c8a299021f063a5ee08139">AddToInputHistory</a> (const char *szString)</td></tr>
<tr class="memdesc:acea8b6e862c8a299021f063a5ee08139"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds an item to the input history. <br /></td></tr>
<tr class="separator:acea8b6e862c8a299021f063a5ee08139"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2df300a6d87d25ba853f6446bd54301c"><td class="memItemLeft" align="right" valign="top"><a id="a2df300a6d87d25ba853f6446bd54301c"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d7e/classez_console.htm#a2df300a6d87d25ba853f6446bd54301c">LogHandler</a> (const <a class="el" href="../../de/d62/structez_logging_event_data.htm">ezLoggingEventData</a> &amp;data)</td></tr>
<tr class="memdesc:a2df300a6d87d25ba853f6446bd54301c"><td class="mdescLeft">&#160;</td><td class="mdescRight">The function that is used to read <a class="el" href="../../d1/de1/classez_global_log.htm" title="This is the standard log system that ezLog sends all messages to.">ezGlobalLog</a> messages. <br /></td></tr>
<tr class="separator:a2df300a6d87d25ba853f6446bd54301c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7580777b18f3d533a400766fdb75c845"><td class="memItemLeft" align="right" valign="top"><a id="a7580777b18f3d533a400766fdb75c845"></a>
virtual bool&#160;</td><td class="memItemRight" valign="bottom"><b>ProcessInputCharacter</b> (ezUInt32 uiChar)</td></tr>
<tr class="separator:a7580777b18f3d533a400766fdb75c845"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac40331825062335f2b2b6f0d99d3df5f"><td class="memItemLeft" align="right" valign="top"><a id="ac40331825062335f2b2b6f0d99d3df5f"></a>
virtual bool&#160;</td><td class="memItemRight" valign="bottom"><b>FilterInputCharacter</b> (ezUInt32 uiChar)</td></tr>
<tr class="separator:ac40331825062335f2b2b6f0d99d3df5f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ba276f0de1b8fa42e1b9d313215c5be"><td class="memItemLeft" align="right" valign="top"><a id="a8ba276f0de1b8fa42e1b9d313215c5be"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><b>InputStringChanged</b> ()</td></tr>
<tr class="separator:a8ba276f0de1b8fa42e1b9d313215c5be"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-static-methods"></a>
Static Protected Member Functions</h2></td></tr>
<tr class="memitem:a0a9eaf0c9bb5fb09a6076dc76ceb5424"><td class="memItemLeft" align="right" valign="top"><a id="a0a9eaf0c9bb5fb09a6076dc76ceb5424"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d7e/classez_console.htm#a0a9eaf0c9bb5fb09a6076dc76ceb5424">FindPossibleCVars</a> (const char *szVariable, <a class="el" href="../../d9/dfe/classez_deque.htm">ezDeque</a>&lt; <a class="el" href="../../d4/d53/structez_hybrid_string.htm">ezString</a> &gt; &amp;CommonStrings, <a class="el" href="../../d9/dfe/classez_deque.htm">ezDeque</a>&lt; <a class="el" href="../../d7/df3/structez_console_1_1_console_string.htm">ConsoleString</a> &gt; &amp;ConsoleStrings)</td></tr>
<tr class="memdesc:a0a9eaf0c9bb5fb09a6076dc76ceb5424"><td class="mdescLeft">&#160;</td><td class="mdescRight">Iterates over all cvars and finds all that start with the string <em>szVariable</em>. <br /></td></tr>
<tr class="separator:a0a9eaf0c9bb5fb09a6076dc76ceb5424"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a98c4de1f120072a263caec9438bfbb63"><td class="memItemLeft" align="right" valign="top"><a id="a98c4de1f120072a263caec9438bfbb63"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d7e/classez_console.htm#a98c4de1f120072a263caec9438bfbb63">FindPossibleFunctions</a> (const char *szVariable, <a class="el" href="../../d9/dfe/classez_deque.htm">ezDeque</a>&lt; <a class="el" href="../../d4/d53/structez_hybrid_string.htm">ezString</a> &gt; &amp;CommonStrings, <a class="el" href="../../d9/dfe/classez_deque.htm">ezDeque</a>&lt; <a class="el" href="../../d7/df3/structez_console_1_1_console_string.htm">ConsoleString</a> &gt; &amp;ConsoleStrings)</td></tr>
<tr class="memdesc:a98c4de1f120072a263caec9438bfbb63"><td class="mdescLeft">&#160;</td><td class="mdescRight">Iterates over all console functions and finds all that start with the string <em>szVariable</em>. <br /></td></tr>
<tr class="separator:a98c4de1f120072a263caec9438bfbb63"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a575fd63631135cabe91349097293e650"><td class="memItemLeft" align="right" valign="top"><a id="a575fd63631135cabe91349097293e650"></a>
static const <a class="el" href="../../d4/d53/structez_hybrid_string.htm">ezString</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d7e/classez_console.htm#a575fd63631135cabe91349097293e650">FindCommonString</a> (const <a class="el" href="../../d9/dfe/classez_deque.htm">ezDeque</a>&lt; <a class="el" href="../../d4/d53/structez_hybrid_string.htm">ezString</a> &gt; &amp;vStrings)</td></tr>
<tr class="memdesc:a575fd63631135cabe91349097293e650"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the prefix string that is common to all strings in the <em>vStrings</em> array. <br /></td></tr>
<tr class="separator:a575fd63631135cabe91349097293e650"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a2b8fd5db489bcc350256e2182ed52a08"><td class="memItemLeft" align="right" valign="top"><a id="a2b8fd5db489bcc350256e2182ed52a08"></a>
ezInt32&#160;</td><td class="memItemRight" valign="bottom"><b>m_iCaretPosition</b></td></tr>
<tr class="separator:a2b8fd5db489bcc350256e2182ed52a08"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4a64c5118c47271b7eba1ac470e96be4"><td class="memItemLeft" align="right" valign="top"><a id="a4a64c5118c47271b7eba1ac470e96be4"></a>
<a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_sInputLine</b></td></tr>
<tr class="separator:a4a64c5118c47271b7eba1ac470e96be4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c358142e9b90e4eb8f924379bd169f6"><td class="memItemLeft" align="right" valign="top"><a id="a7c358142e9b90e4eb8f924379bd169f6"></a>
<a class="el" href="../../dd/dbe/classez_mutex.htm">ezMutex</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_Mutex</b></td></tr>
<tr class="separator:a7c358142e9b90e4eb8f924379bd169f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b9e0268ea3eb0dbcd595224cb1db67e"><td class="memItemLeft" align="right" valign="top"><a id="a1b9e0268ea3eb0dbcd595224cb1db67e"></a>
<a class="el" href="../../d2/d7e/classez_console.htm#a80105e8f1e00bb71ac057c83d9633cce">ezCommandProcessor</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_CommandProcessor</b></td></tr>
<tr class="separator:a1b9e0268ea3eb0dbcd595224cb1db67e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b497f21558f496388f6e9834e318c65"><td class="memItemLeft" align="right" valign="top"><a id="a7b497f21558f496388f6e9834e318c65"></a>
<a class="el" href="../../d9/dfe/classez_deque.htm">ezDeque</a>&lt; <a class="el" href="../../d7/df3/structez_console_1_1_console_string.htm">ConsoleString</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_ConsoleStrings</b></td></tr>
<tr class="separator:a7b497f21558f496388f6e9834e318c65"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ae553c229daf37d7fea24cdba9f9991"><td class="memItemLeft" align="right" valign="top"><a id="a9ae553c229daf37d7fea24cdba9f9991"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>m_bUseFilteredStrings</b> = false</td></tr>
<tr class="separator:a9ae553c229daf37d7fea24cdba9f9991"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa02c60f3bb19df7c8c10bf498e1f1f2e"><td class="memItemLeft" align="right" valign="top"><a id="aa02c60f3bb19df7c8c10bf498e1f1f2e"></a>
<a class="el" href="../../d9/dfe/classez_deque.htm">ezDeque</a>&lt; <a class="el" href="../../d7/df3/structez_console_1_1_console_string.htm">ConsoleString</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_FilteredConsoleStrings</b></td></tr>
<tr class="separator:aa02c60f3bb19df7c8c10bf498e1f1f2e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad118b1ef6e762686fc299dd1a3fb3cd3"><td class="memItemLeft" align="right" valign="top"><a id="ad118b1ef6e762686fc299dd1a3fb3cd3"></a>
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>m_uiMaxConsoleStrings</b></td></tr>
<tr class="separator:ad118b1ef6e762686fc299dd1a3fb3cd3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a592ca469bf895ed2da94a9b3131aa3c7"><td class="memItemLeft" align="right" valign="top"><a id="a592ca469bf895ed2da94a9b3131aa3c7"></a>
ezInt32&#160;</td><td class="memItemRight" valign="bottom"><b>m_iScrollPosition</b></td></tr>
<tr class="separator:a592ca469bf895ed2da94a9b3131aa3c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ffb0de17aa3c86a4da80364a26dc71b"><td class="memItemLeft" align="right" valign="top"><a id="a8ffb0de17aa3c86a4da80364a26dc71b"></a>
ezInt32&#160;</td><td class="memItemRight" valign="bottom"><b>m_iCurrentInputHistoryElement</b></td></tr>
<tr class="separator:a8ffb0de17aa3c86a4da80364a26dc71b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a090071bdf6377b2fac003289f2af6a97"><td class="memItemLeft" align="right" valign="top"><a id="a090071bdf6377b2fac003289f2af6a97"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>m_bLogOutputEnabled</b></td></tr>
<tr class="separator:a090071bdf6377b2fac003289f2af6a97"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a23c33b87a865c8659e8838cf0dbe9a5d"><td class="memItemLeft" align="right" valign="top"><a id="a23c33b87a865c8659e8838cf0dbe9a5d"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>m_bDefaultInputHandlingInitialized</b></td></tr>
<tr class="separator:a23c33b87a865c8659e8838cf0dbe9a5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad53fff41ce845422c9a9fe3b463751e9"><td class="memItemLeft" align="right" valign="top"><a id="ad53fff41ce845422c9a9fe3b463751e9"></a>
<a class="el" href="../../df/d5c/classez_static_array.htm">ezStaticArray</a>&lt; <a class="el" href="../../d4/d53/structez_hybrid_string.htm">ezString</a>, 16 &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_InputHistory</b></td></tr>
<tr class="separator:ad53fff41ce845422c9a9fe3b463751e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4382794431ca80aaaac3373ab1d12601"><td class="memItemLeft" align="right" valign="top"><a id="a4382794431ca80aaaac3373ab1d12601"></a>
<a class="el" href="../../d1/d79/classez_map.htm">ezMap</a>&lt; <a class="el" href="../../d4/d53/structez_hybrid_string.htm">ezString</a>, <a class="el" href="../../d4/d53/structez_hybrid_string.htm">ezString</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_BoundKeys</b></td></tr>
<tr class="separator:a4382794431ca80aaaac3373ab1d12601"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"></a>
Helpers</h2></td></tr>
<tr class="memitem:a1d62a3d8163ec54d3ba8b96f946c192e"><td class="memItemLeft" align="right" valign="top"><a id="a1d62a3d8163ec54d3ba8b96f946c192e"></a>
<a class="el" href="../../dd/dbe/classez_mutex.htm">ezMutex</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d7e/classez_console.htm#a1d62a3d8163ec54d3ba8b96f946c192e">GetMutex</a> () const</td></tr>
<tr class="memdesc:a1d62a3d8163ec54d3ba8b96f946c192e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the internal mutex to prevent multi-threaded access. <br /></td></tr>
<tr class="separator:a1d62a3d8163ec54d3ba8b96f946c192e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0910f957be3c0dfc1ff86099eb2a8dd6"><td class="memItemLeft" align="right" valign="top"><a id="a0910f957be3c0dfc1ff86099eb2a8dd6"></a>
static <a class="el" href="../../d4/d53/structez_hybrid_string.htm">ezString</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d7e/classez_console.htm#a0910f957be3c0dfc1ff86099eb2a8dd6">GetFullInfoAsString</a> (<a class="el" href="../../d2/d58/classez_c_var.htm">ezCVar</a> *pCVar)</td></tr>
<tr class="memdesc:a0910f957be3c0dfc1ff86099eb2a8dd6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a nice string containing all the important information about the cvar. <br /></td></tr>
<tr class="separator:a0910f957be3c0dfc1ff86099eb2a8dd6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ef51b3d6749225a1501c43e69185f40"><td class="memItemLeft" align="right" valign="top"><a id="a0ef51b3d6749225a1501c43e69185f40"></a>
static const <a class="el" href="../../d4/d53/structez_hybrid_string.htm">ezString</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d7e/classez_console.htm#a0ef51b3d6749225a1501c43e69185f40">GetValueAsString</a> (<a class="el" href="../../d2/d58/classez_c_var.htm">ezCVar</a> *pCVar)</td></tr>
<tr class="memdesc:a0ef51b3d6749225a1501c43e69185f40"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the value of the cvar as a string. <br /></td></tr>
<tr class="separator:a0ef51b3d6749225a1501c43e69185f40"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>A Quake-style console for in-game configuration of <a class="el" href="../../d2/d58/classez_c_var.htm" title="CVars are global variables that are used for configuring the engine.">ezCVar</a> and <a class="el" href="../../d4/dc2/classez_console_function.htm" title="Implements the functionality of ezConsoleFunctionBase for functions with different parameter types....">ezConsoleFunction</a>. </p>
<p>The console displays the recent log activity and allows to modify cvars and call console functions. It supports auto-completion of known keywords. Additionally, 'keys' can be bound to arbitrary commands, such that useful commands can be executed easily. The default implementation uses ezConsoleInterpreter::Lua as the interpreter for commands typed into it. The interpreter can be replaced with custom implementations. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a2835092371da6d5c7f25da4a85f30091"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2835092371da6d5c7f25da4a85f30091">&#9670;&nbsp;</a></span>AddConsoleString()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ezConsole::AddConsoleString </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>szText</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../dd/d01/classez_color.htm">ezColor</a> &amp;&#160;</td>
          <td class="paramname"><em>color</em> = <code><a class="el" href="../../dd/d01/classez_color.htm">ezColor</a>(1,&#160;1,&#160;1)</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bShowOnScreen</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds a string to the console. </p>
<p>bShowOnScreen is a hint for the renderer to also display this string on screen, even if the console is not visible. </p>

</div>
</div>
<a id="ae28f298d42e73eb80e1c0eefcc5836e4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae28f298d42e73eb80e1c0eefcc5836e4">&#9670;&nbsp;</a></span>AddInputCharacter()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ezConsole::AddInputCharacter </td>
          <td>(</td>
          <td class="paramtype">ezUInt32&#160;</td>
          <td class="paramname"><em>uiChar</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Inserts one character at the caret position into the console input line. </p>
<p>This function also calls ProcessInputCharacter and FilterInputCharacter. By default this already reacts on Tab, Enter and ESC and filters out all non ASCII characters. </p>

</div>
</div>
<a id="a4a211d78dbd89d99b165fe4ed0d1e4dc"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4a211d78dbd89d99b165fe4ed0d1e4dc">&#9670;&nbsp;</a></span>AutoCompleteInputLine()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ezConsole::AutoCompleteInputLine </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Tries to auto-complete the current input line. </p>
<p>This will trigger <a class="el" href="../../dd/d53/structez_console_1_1_console_event.htm#afa3859630a0df33003d693abcedb3370ab9ba09892690758d49ccd3d8cbc6fb3d" title="The user tries to auto-complete the input.">ConsoleEvent::AutoCompleteRequest</a>, which allows external code to suggest auto-complete options for the current word. The console will always use all CVars for auto-completion already. </p>

</div>
</div>
<a id="a6be95bb0fd3ffc4e39e22eacb2ad97ee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6be95bb0fd3ffc4e39e22eacb2ad97ee">&#9670;&nbsp;</a></span>BindKey()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ezConsole::BindKey </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>szKey</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>szCommand</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Binds <em>szCommand</em> to <em>szKey</em>. Calling <a class="el" href="../../d2/d7e/classez_console.htm#ac2e236c115da8a228494c647ad4b1a92" title="Executes the command that was bound to this key.">ExecuteBoundKey()</a> with this key will then run that command. </p>
<p>A key can be any arbitrary string. However, it might make sense to either use the standard ASCII characters A-Z and a-z, which allows to trigger actions by the press of any of those buttons. You can, however, also use names for input buttons, such as 'Key_Left', but then you also need to call <a class="el" href="../../d2/d7e/classez_console.htm#ac2e236c115da8a228494c647ad4b1a92" title="Executes the command that was bound to this key.">ExecuteBoundKey()</a> with those names. If you use such virtual key names, it makes also sense to listen to the auto-complete event and suggest those key names there. </p>

</div>
</div>
<a id="a95977828ad5cadc50a138ba40e479d66"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a95977828ad5cadc50a138ba40e479d66">&#9670;&nbsp;</a></span>DoDefaultInputHandling()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ezConsole::DoDefaultInputHandling </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bConsoleOpen</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>This function implements input handling (via <a class="el" href="../../d8/d45/classez_input_manager.htm" title="The central class to set up and query the state of all input.">ezInputManager</a>) for the console. </p>
<p>If the console is 'open' (ie. has full focus), it will handle more input for caret movement etc. However, in the 'closed' state, it will still execute bound keys and commands from the history. It is not required to call this function, you can implement input handling entirely outside the console.</p>
<p>If this function is used, it should be called once per frame and if the console is considered 'open', no further keyboard input should be processed, as that might lead to confusing behavior when the user types text into the console.</p>
<p>The state whether the console is considered open has to be managed by the application. </p>

</div>
</div>
<a id="a1e28834779d403805f7ab3a56691a2cd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1e28834779d403805f7ab3a56691a2cd">&#9670;&nbsp;</a></span>ProcessCommand()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ezConsole::ProcessCommand </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>szCmd</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Executes the given command using the current command interpreter. </p>
<p>This will also broadcast <a class="el" href="../../dd/d53/structez_console_1_1_console_event.htm#afa3859630a0df33003d693abcedb3370aebeab05a3aa0d9f117330e1a552b26af" title="The console is about to process a command.">ConsoleEvent::BeforeProcessCommand</a> and <a class="el" href="../../dd/d53/structez_console_1_1_console_event.htm#afa3859630a0df33003d693abcedb3370a6269a2d4538961ba47e9acc84ed46e95" title="A command was successfully processed.">ConsoleEvent::ProcessCommandSuccess</a> or <a class="el" href="../../dd/d53/structez_console_1_1_console_event.htm#afa3859630a0df33003d693abcedb3370a5af44882636506bb6f11613f8e4d8fe9" title="A command failed to be processed.">ConsoleEvent::ProcessCommandFailure</a>, depending on what the interpreter returned. </p>

</div>
</div>
<a id="aecf40099347938adaee1983e7ad9b1df"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aecf40099347938adaee1983e7ad9b1df">&#9670;&nbsp;</a></span>SetCommandInterpreter()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ezConsole::SetCommandInterpreter </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d2/d7e/classez_console.htm#a80105e8f1e00bb71ac057c83d9633cce">ezCommandProcessor</a>&#160;</td>
          <td class="paramname"><em>processor</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Replaces the current command interpreter. This allows to attach a custom interpreter to the console. </p>
<p>by default the Lua interpreter is used. Using a custom interpreter you can extend its functionality or allow for different syntax. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Core/Console/<a class="el" href="../../d3/d6e/_console_8h_source.htm">Console.h</a></li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Core/Console/Implementation/Autocomplete.cpp</li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Core/Console/Implementation/Commands.cpp</li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Core/Console/Implementation/Console.cpp</li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Core/Console/Implementation/Input.cpp</li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d2/d7e/classez_console.htm">ezConsole</a></li>
    <li class="footer">Generated on Tue Jun 8 2021 21:43:17 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
