<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: ezBitfield&lt; Container &gt; Class Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">ezEngine<span id="projectnumber">&#160;Release 25.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('d2/d62/classez_bitfield.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="../../d7/dcd/classez_bitfield-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">ezBitfield&lt; Container &gt; Class Template Reference</div></div>
</div><!--header-->
<div class="contents">

<p>A template interface, that turns any array class into a bitfield.  
 <a href="../../d2/d62/classez_bitfield.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../df/d21/_bitfield_8h_source.htm">Bitfield.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="nested-classes" name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d3a/structez_bitfield_1_1_const_iterator.htm">ConstIterator</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:acf370dced312910f0aca4ea0449c54d5" id="r_acf370dced312910f0aca4ea0449c54d5"><td class="memItemLeft" align="right" valign="top"><a id="acf370dced312910f0aca4ea0449c54d5" name="acf370dced312910f0aca4ea0449c54d5"></a>
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetCount</b> () const</td></tr>
<tr class="memdesc:acf370dced312910f0aca4ea0449c54d5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of bits that this bitfield stores. <br /></td></tr>
<tr class="separator:acf370dced312910f0aca4ea0449c54d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7541e5112a522c7429f2f18e95fef35c" id="r_a7541e5112a522c7429f2f18e95fef35c"><td class="memTemplParams" colspan="2"><a id="a7541e5112a522c7429f2f18e95fef35c" name="a7541e5112a522c7429f2f18e95fef35c"></a>
template&lt;typename  = void&gt; </td></tr>
<tr class="memitem:a7541e5112a522c7429f2f18e95fef35c"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><b>SetCountUninitialized</b> (ezUInt32 uiBitCount)</td></tr>
<tr class="memdesc:a7541e5112a522c7429f2f18e95fef35c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resizes the Bitfield to hold the given number of bits. This version does NOT initialize new bits! <br /></td></tr>
<tr class="separator:a7541e5112a522c7429f2f18e95fef35c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d2e77f2c19d452c5a81fc2da9fb05f2" id="r_a5d2e77f2c19d452c5a81fc2da9fb05f2"><td class="memItemLeft" align="right" valign="top"><a id="a5d2e77f2c19d452c5a81fc2da9fb05f2" name="a5d2e77f2c19d452c5a81fc2da9fb05f2"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetCount</b> (ezUInt32 uiBitCount, bool bSetNew=false)</td></tr>
<tr class="memdesc:a5d2e77f2c19d452c5a81fc2da9fb05f2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resizes the Bitfield to hold the given number of bits. If <em>bSetNew</em> is true, new bits are set to 1, otherwise they are cleared to 0. <br /></td></tr>
<tr class="separator:a5d2e77f2c19d452c5a81fc2da9fb05f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad418a90f02802f36dce70a2ad1c02e06" id="r_ad418a90f02802f36dce70a2ad1c02e06"><td class="memItemLeft" align="right" valign="top"><a id="ad418a90f02802f36dce70a2ad1c02e06" name="ad418a90f02802f36dce70a2ad1c02e06"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsEmpty</b> () const</td></tr>
<tr class="memdesc:ad418a90f02802f36dce70a2ad1c02e06"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if the bitfield does not store any bits. <br /></td></tr>
<tr class="separator:ad418a90f02802f36dce70a2ad1c02e06"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d72c9d5cdef37f42a845d7d191453fd" id="r_a7d72c9d5cdef37f42a845d7d191453fd"><td class="memItemLeft" align="right" valign="top"><a id="a7d72c9d5cdef37f42a845d7d191453fd" name="a7d72c9d5cdef37f42a845d7d191453fd"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsAnyBitSet</b> (ezUInt32 uiFirstBit=0, ezUInt32 uiNumBits=0xFFFFFFFF) const</td></tr>
<tr class="memdesc:a7d72c9d5cdef37f42a845d7d191453fd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if the bitfield is not empty and any bit is 1. <br /></td></tr>
<tr class="separator:a7d72c9d5cdef37f42a845d7d191453fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acefb6bbf5ba62038a91adfdfd527344c" id="r_acefb6bbf5ba62038a91adfdfd527344c"><td class="memItemLeft" align="right" valign="top"><a id="acefb6bbf5ba62038a91adfdfd527344c" name="acefb6bbf5ba62038a91adfdfd527344c"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsNoBitSet</b> (ezUInt32 uiFirstBit=0, ezUInt32 uiNumBits=0xFFFFFFFF) const</td></tr>
<tr class="memdesc:acefb6bbf5ba62038a91adfdfd527344c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if the bitfield is empty or all bits are set to zero. <br /></td></tr>
<tr class="separator:acefb6bbf5ba62038a91adfdfd527344c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2df952dade46abd60d44d954c4b5c821" id="r_a2df952dade46abd60d44d954c4b5c821"><td class="memItemLeft" align="right" valign="top"><a id="a2df952dade46abd60d44d954c4b5c821" name="a2df952dade46abd60d44d954c4b5c821"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>AreAllBitsSet</b> (ezUInt32 uiFirstBit=0, ezUInt32 uiNumBits=0xFFFFFFFF) const</td></tr>
<tr class="memdesc:a2df952dade46abd60d44d954c4b5c821"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if the bitfield is not empty and all bits are set to one. <br /></td></tr>
<tr class="separator:a2df952dade46abd60d44d954c4b5c821"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aec1f88c81c67279e730d88fcd6e48723" id="r_aec1f88c81c67279e730d88fcd6e48723"><td class="memItemLeft" align="right" valign="top"><a id="aec1f88c81c67279e730d88fcd6e48723" name="aec1f88c81c67279e730d88fcd6e48723"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Clear</b> ()</td></tr>
<tr class="memdesc:aec1f88c81c67279e730d88fcd6e48723"><td class="mdescLeft">&#160;</td><td class="mdescRight">Discards all bits and sets count to zero. <br /></td></tr>
<tr class="separator:aec1f88c81c67279e730d88fcd6e48723"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e2f730a80533668732441f695ad13fc" id="r_a9e2f730a80533668732441f695ad13fc"><td class="memItemLeft" align="right" valign="top"><a id="a9e2f730a80533668732441f695ad13fc" name="a9e2f730a80533668732441f695ad13fc"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetBit</b> (ezUInt32 uiBit)</td></tr>
<tr class="memdesc:a9e2f730a80533668732441f695ad13fc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the given bit to 1. <br /></td></tr>
<tr class="separator:a9e2f730a80533668732441f695ad13fc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa6d897045d639889ca47c86452abeaa3" id="r_aa6d897045d639889ca47c86452abeaa3"><td class="memItemLeft" align="right" valign="top"><a id="aa6d897045d639889ca47c86452abeaa3" name="aa6d897045d639889ca47c86452abeaa3"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>ClearBit</b> (ezUInt32 uiBit)</td></tr>
<tr class="memdesc:aa6d897045d639889ca47c86452abeaa3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears the given bit to 0. <br /></td></tr>
<tr class="separator:aa6d897045d639889ca47c86452abeaa3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d36e4a2ce7de807150f3c06f87c8e39" id="r_a9d36e4a2ce7de807150f3c06f87c8e39"><td class="memItemLeft" align="right" valign="top"><a id="a9d36e4a2ce7de807150f3c06f87c8e39" name="a9d36e4a2ce7de807150f3c06f87c8e39"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>FlipBit</b> (ezUInt32 uiBit)</td></tr>
<tr class="memdesc:a9d36e4a2ce7de807150f3c06f87c8e39"><td class="mdescLeft">&#160;</td><td class="mdescRight">Flips the given bit to the opposite value. <br /></td></tr>
<tr class="separator:a9d36e4a2ce7de807150f3c06f87c8e39"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea4835778bbdab097300e08eb69a744b" id="r_aea4835778bbdab097300e08eb69a744b"><td class="memItemLeft" align="right" valign="top"><a id="aea4835778bbdab097300e08eb69a744b" name="aea4835778bbdab097300e08eb69a744b"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetBitValue</b> (ezUInt32 uiBit, bool bValue)</td></tr>
<tr class="memdesc:aea4835778bbdab097300e08eb69a744b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the given bit to 1 or 0 depending on the given value. <br /></td></tr>
<tr class="separator:aea4835778bbdab097300e08eb69a744b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab30c12ebc439eef63010e8c3d5a56471" id="r_ab30c12ebc439eef63010e8c3d5a56471"><td class="memItemLeft" align="right" valign="top"><a id="ab30c12ebc439eef63010e8c3d5a56471" name="ab30c12ebc439eef63010e8c3d5a56471"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsBitSet</b> (ezUInt32 uiBit) const</td></tr>
<tr class="memdesc:ab30c12ebc439eef63010e8c3d5a56471"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if the given bit is set to 1. <br /></td></tr>
<tr class="separator:ab30c12ebc439eef63010e8c3d5a56471"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a33f3b1f5dcb047a2ec667470281e7187" id="r_a33f3b1f5dcb047a2ec667470281e7187"><td class="memItemLeft" align="right" valign="top"><a id="a33f3b1f5dcb047a2ec667470281e7187" name="a33f3b1f5dcb047a2ec667470281e7187"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>ClearAllBits</b> ()</td></tr>
<tr class="memdesc:a33f3b1f5dcb047a2ec667470281e7187"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears all bits to 0. <br /></td></tr>
<tr class="separator:a33f3b1f5dcb047a2ec667470281e7187"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac93aa3da4c16de9c15887e99b788e90f" id="r_ac93aa3da4c16de9c15887e99b788e90f"><td class="memItemLeft" align="right" valign="top"><a id="ac93aa3da4c16de9c15887e99b788e90f" name="ac93aa3da4c16de9c15887e99b788e90f"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetAllBits</b> ()</td></tr>
<tr class="memdesc:ac93aa3da4c16de9c15887e99b788e90f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets all bits to 1. <br /></td></tr>
<tr class="separator:ac93aa3da4c16de9c15887e99b788e90f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adcad809b5a1ef9295d853af3684c7e1a" id="r_adcad809b5a1ef9295d853af3684c7e1a"><td class="memItemLeft" align="right" valign="top"><a id="adcad809b5a1ef9295d853af3684c7e1a" name="adcad809b5a1ef9295d853af3684c7e1a"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetBitRange</b> (ezUInt32 uiFirstBit, ezUInt32 uiNumBits)</td></tr>
<tr class="memdesc:adcad809b5a1ef9295d853af3684c7e1a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the range starting at uiFirstBit up to (and including) uiLastBit to 1. <br /></td></tr>
<tr class="separator:adcad809b5a1ef9295d853af3684c7e1a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a97bcb21f9c0e2472111fe7d97948392b" id="r_a97bcb21f9c0e2472111fe7d97948392b"><td class="memItemLeft" align="right" valign="top"><a id="a97bcb21f9c0e2472111fe7d97948392b" name="a97bcb21f9c0e2472111fe7d97948392b"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>ClearBitRange</b> (ezUInt32 uiFirstBit, ezUInt32 uiNumBits)</td></tr>
<tr class="memdesc:a97bcb21f9c0e2472111fe7d97948392b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears the range starting at uiFirstBit up to (and including) uiLastBit to 0. <br /></td></tr>
<tr class="separator:a97bcb21f9c0e2472111fe7d97948392b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad763e7abf19b47325c0c510a15bb208f" id="r_ad763e7abf19b47325c0c510a15bb208f"><td class="memItemLeft" align="right" valign="top"><a id="ad763e7abf19b47325c0c510a15bb208f" name="ad763e7abf19b47325c0c510a15bb208f"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>FlipBitRange</b> (ezUInt32 uiFirstBit, ezUInt32 uiNumBits)</td></tr>
<tr class="memdesc:ad763e7abf19b47325c0c510a15bb208f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Flips the range starting at uiFirstBit up to (and including) uiLastBit. <br /></td></tr>
<tr class="separator:ad763e7abf19b47325c0c510a15bb208f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3159aa4e2ec2324c0f091d03a2e2ec58" id="r_a3159aa4e2ec2324c0f091d03a2e2ec58"><td class="memItemLeft" align="right" valign="top"><a id="a3159aa4e2ec2324c0f091d03a2e2ec58" name="a3159aa4e2ec2324c0f091d03a2e2ec58"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Swap</b> (<a class="el" href="../../d2/d62/classez_bitfield.htm">ezBitfield</a>&lt; Container &gt; &amp;other)</td></tr>
<tr class="memdesc:a3159aa4e2ec2324c0f091d03a2e2ec58"><td class="mdescLeft">&#160;</td><td class="mdescRight">Swaps two bitfields. <br /></td></tr>
<tr class="separator:a3159aa4e2ec2324c0f091d03a2e2ec58"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a70227b5d55aa22501e99824d4f490e8c" id="r_a70227b5d55aa22501e99824d4f490e8c"><td class="memItemLeft" align="right" valign="top"><a id="a70227b5d55aa22501e99824d4f490e8c" name="a70227b5d55aa22501e99824d4f490e8c"></a>
<a class="el" href="../../d4/d3a/structez_bitfield_1_1_const_iterator.htm">ConstIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetIterator</b> () const</td></tr>
<tr class="memdesc:a70227b5d55aa22501e99824d4f490e8c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a constant iterator to the very first set bit. Note that due to the way iterating through bits is accelerated, changes to the bitfield while iterating through the bits has undefined behaviour. <br /></td></tr>
<tr class="separator:a70227b5d55aa22501e99824d4f490e8c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adfd442d45f029ab1f3b3ee04e5c02c55" id="r_adfd442d45f029ab1f3b3ee04e5c02c55"><td class="memItemLeft" align="right" valign="top"><a id="adfd442d45f029ab1f3b3ee04e5c02c55" name="adfd442d45f029ab1f3b3ee04e5c02c55"></a>
<a class="el" href="../../d4/d3a/structez_bitfield_1_1_const_iterator.htm">ConstIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetEndIterator</b> () const</td></tr>
<tr class="memdesc:adfd442d45f029ab1f3b3ee04e5c02c55"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an invalid iterator. Needed to support range based for loops. <br /></td></tr>
<tr class="separator:adfd442d45f029ab1f3b3ee04e5c02c55"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="friends" name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:aff4ff712b78d159dd32552cea3d923c8" id="r_aff4ff712b78d159dd32552cea3d923c8"><td class="memItemLeft" align="right" valign="top"><a id="aff4ff712b78d159dd32552cea3d923c8" name="aff4ff712b78d159dd32552cea3d923c8"></a>
struct&#160;</td><td class="memItemRight" valign="bottom"><b>ConstIterator</b></td></tr>
<tr class="separator:aff4ff712b78d159dd32552cea3d923c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><div class="compoundTemplParams">template&lt;class Container&gt;<br />
class ezBitfield&lt; Container &gt;</div><p>A template interface, that turns any array class into a bitfield. </p>
<p>This class provides an interface to work with single bits, to store true/false values. The underlying container is configurable, though it must support random access and a 'SetCount' function and it must use elements of type ezUInt32. In most cases a dynamic array should be used. For this case the ezDynamicBitfield typedef is already available. There is also an ezHybridBitfield typedef. </p>
</div><hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Containers/<a class="el" href="../../df/d21/_bitfield_8h_source.htm">Bitfield.h</a></li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Containers/Implementation/<a class="el" href="../../de/d58/_bitfield__inl_8h_source.htm">Bitfield_inl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d2/d62/classez_bitfield.htm">ezBitfield</a></li>
    <li class="footer">Generated on Fri Jul 11 2025 12:17:57 for ezEngine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
