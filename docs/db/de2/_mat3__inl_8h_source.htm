<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Math/Implementation/Mat3_inl.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 23.12</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('db/de2/_mat3__inl_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Mat3_inl.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00004"></a><span class="lineno"><a class="line" href="../../db/daf/classez_mat3_template.htm#aeb988bc8f802d52dace6dcfda44f2044">    4</a></span>&#160;<a class="code" href="../../db/daf/classez_mat3_template.htm#aeb988bc8f802d52dace6dcfda44f2044">ezMat3Template&lt;Type&gt;::ezMat3Template</a>()</div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;{</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#if EZ_ENABLED(EZ_COMPILE_FOR_DEBUG)</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;  <span class="comment">// Initialize all data to NaN in debug mode to find problems with uninitialized data easier.</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;  <span class="keyword">const</span> Type TypeNaN = ezMath::NaN&lt;Type&gt;();</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;  <span class="keywordflow">for</span> (ezUInt32 i = 0; i &lt; 9; ++i)</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;    m_fElementsCM[i] = TypeNaN;</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;}</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160; </div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00015"></a><span class="lineno"><a class="line" href="../../db/daf/classez_mat3_template.htm#ad04b3c962a2f95e24a2beaef3bcb1177">   15</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../db/daf/classez_mat3_template.htm#ad04b3c962a2f95e24a2beaef3bcb1177">ezMat3Template&lt;Type&gt;::GetAsArray</a>(Type* out_pData, <a class="code" href="../../d6/d64/structez_matrix_layout.htm#a576e22d7754979e5f58617a5095fdc3c">ezMatrixLayout::Enum</a> layout)<span class="keyword"> const</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;  EZ_NAN_ASSERT(<span class="keyword">this</span>);</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160; </div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;  <span class="keywordflow">if</span> (layout == <a class="code" href="../../d6/d64/structez_matrix_layout.htm#a576e22d7754979e5f58617a5095fdc3cab3e4ee57b2a163acb3a4c1bc7530c371">ezMatrixLayout::ColumnMajor</a>)</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;  {</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a87c41811a95fa63da651f6779931d9cf">ezMemoryUtils::Copy</a>(out_pData, m_fElementsCM, 9);</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;  }</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;  {</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; 3; ++i)</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    {</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;      out_pData[i * 3 + 0] = Element(0, i);</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;      out_pData[i * 3 + 1] = Element(1, i);</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;      out_pData[i * 3 + 2] = Element(2, i);</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    }</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  }</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;}</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160; </div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="../../db/daf/classez_mat3_template.htm#a86ae7d3cf6448654c882bd94f5dafce4">   35</a></span>&#160;<a class="code" href="../../db/daf/classez_mat3_template.htm">ezMat3Template&lt;Type&gt;</a> <a class="code" href="../../db/daf/classez_mat3_template.htm#a86ae7d3cf6448654c882bd94f5dafce4">ezMat3Template&lt;Type&gt;::MakeZero</a>()</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;{</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;  <a class="code" href="../../db/daf/classez_mat3_template.htm">ezMat3Template&lt;Type&gt;</a> res;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160; </div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;  <span class="keywordflow">for</span> (ezUInt32 i = 0; i &lt; EZ_ARRAY_SIZE(res.<a class="code" href="../../db/daf/classez_mat3_template.htm#a7e7202c21a5938cb87b6777136c19a51">m_fElementsCM</a>); ++i)</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    res.<a class="code" href="../../db/daf/classez_mat3_template.htm#a7e7202c21a5938cb87b6777136c19a51">m_fElementsCM</a>[i] = 0.0f;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160; </div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;  <span class="keywordflow">return</span> res;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;}</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160; </div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="../../db/daf/classez_mat3_template.htm#ac11ba7b261057c8731b0f49eba600842">   46</a></span>&#160;<a class="code" href="../../db/daf/classez_mat3_template.htm">ezMat3Template&lt;Type&gt;</a> <a class="code" href="../../db/daf/classez_mat3_template.htm#ac11ba7b261057c8731b0f49eba600842">ezMat3Template&lt;Type&gt;::MakeIdentity</a>()</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;{</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;  <a class="code" href="../../db/daf/classez_mat3_template.htm">ezMat3Template&lt;Type&gt;</a> res;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;  res.<a class="code" href="../../db/daf/classez_mat3_template.htm#a7e7202c21a5938cb87b6777136c19a51">m_fElementsCM</a>[0] = 1.0f;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;  res.<a class="code" href="../../db/daf/classez_mat3_template.htm#a7e7202c21a5938cb87b6777136c19a51">m_fElementsCM</a>[1] = 0.0f;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;  res.<a class="code" href="../../db/daf/classez_mat3_template.htm#a7e7202c21a5938cb87b6777136c19a51">m_fElementsCM</a>[2] = 0.0f;</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  res.<a class="code" href="../../db/daf/classez_mat3_template.htm#a7e7202c21a5938cb87b6777136c19a51">m_fElementsCM</a>[3] = 0.0f;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;  res.<a class="code" href="../../db/daf/classez_mat3_template.htm#a7e7202c21a5938cb87b6777136c19a51">m_fElementsCM</a>[4] = 1.0f;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;  res.<a class="code" href="../../db/daf/classez_mat3_template.htm#a7e7202c21a5938cb87b6777136c19a51">m_fElementsCM</a>[5] = 0.0f;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  res.<a class="code" href="../../db/daf/classez_mat3_template.htm#a7e7202c21a5938cb87b6777136c19a51">m_fElementsCM</a>[6] = 0.0f;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;  res.<a class="code" href="../../db/daf/classez_mat3_template.htm#a7e7202c21a5938cb87b6777136c19a51">m_fElementsCM</a>[7] = 0.0f;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;  res.<a class="code" href="../../db/daf/classez_mat3_template.htm#a7e7202c21a5938cb87b6777136c19a51">m_fElementsCM</a>[8] = 1.0f;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  <span class="keywordflow">return</span> res;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;}</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160; </div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="../../db/daf/classez_mat3_template.htm#a8a7f39fc0d8d0eea106a68b4c24997fa">   62</a></span>&#160;<a class="code" href="../../db/daf/classez_mat3_template.htm">ezMat3Template&lt;Type&gt;</a> <a class="code" href="../../db/daf/classez_mat3_template.htm#a8a7f39fc0d8d0eea106a68b4c24997fa">ezMat3Template&lt;Type&gt;::MakeFromRowMajorArray</a>(<span class="keyword">const</span> Type* <span class="keyword">const</span> pData)</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;{</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  <a class="code" href="../../db/daf/classez_mat3_template.htm">ezMat3Template&lt;Type&gt;</a> res;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;  <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; 3; ++i)</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;  {</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    res.Element(0, i) = pData[i * 3 + 0];</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    res.Element(1, i) = pData[i * 3 + 1];</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    res.Element(2, i) = pData[i * 3 + 2];</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  }</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;  <span class="keywordflow">return</span> res;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;}</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160; </div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00075"></a><span class="lineno"><a class="line" href="../../db/daf/classez_mat3_template.htm#a574f11f0bfcd52866ca1a4bca21a7a5f">   75</a></span>&#160;<a class="code" href="../../db/daf/classez_mat3_template.htm">ezMat3Template&lt;Type&gt;</a> <a class="code" href="../../db/daf/classez_mat3_template.htm#a574f11f0bfcd52866ca1a4bca21a7a5f">ezMat3Template&lt;Type&gt;::MakeFromColumnMajorArray</a>(<span class="keyword">const</span> Type* <span class="keyword">const</span> pData)</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;{</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;  <a class="code" href="../../db/daf/classez_mat3_template.htm">ezMat3Template&lt;Type&gt;</a> res;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;  <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a87c41811a95fa63da651f6779931d9cf">ezMemoryUtils::Copy</a>(res.<a class="code" href="../../db/daf/classez_mat3_template.htm#a7e7202c21a5938cb87b6777136c19a51">m_fElementsCM</a>, pData, 9);</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  <span class="keywordflow">return</span> res;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;}</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160; </div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="../../db/daf/classez_mat3_template.htm#a912998cfa291f92060e6a4daf7a62a94">   83</a></span>&#160;<a class="code" href="../../db/daf/classez_mat3_template.htm">ezMat3Template&lt;Type&gt;</a> <a class="code" href="../../db/daf/classez_mat3_template.htm#a912998cfa291f92060e6a4daf7a62a94">ezMat3Template&lt;Type&gt;::MakeFromValues</a>(Type c1r1, Type c2r1, Type c3r1, Type c1r2, Type c2r2, Type c3r2, Type c1r3, Type c2r3, Type c3r3)</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;{</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  <a class="code" href="../../db/daf/classez_mat3_template.htm">ezMat3Template&lt;Type&gt;</a> res;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;  res.Element(0, 0) = c1r1;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;  res.Element(1, 0) = c2r1;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;  res.Element(2, 0) = c3r1;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;  res.Element(0, 1) = c1r2;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;  res.Element(1, 1) = c2r2;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  res.Element(2, 1) = c3r2;</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;  res.Element(0, 2) = c1r3;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  res.Element(1, 2) = c2r3;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;  res.Element(2, 2) = c3r3;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;  <span class="keywordflow">return</span> res;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;}</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160; </div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00099"></a><span class="lineno"><a class="line" href="../../db/daf/classez_mat3_template.htm#accec4e49940264b917d858f7d82f58bf">   99</a></span>&#160;<a class="code" href="../../db/daf/classez_mat3_template.htm">ezMat3Template&lt;Type&gt;</a> <a class="code" href="../../db/daf/classez_mat3_template.htm#accec4e49940264b917d858f7d82f58bf">ezMat3Template&lt;Type&gt;::MakeScaling</a>(<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vScale)</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;{</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;  <a class="code" href="../../db/daf/classez_mat3_template.htm">ezMat3Template&lt;Type&gt;</a> res;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;  res.Element(0, 0) = vScale.x;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  res.Element(1, 0) = 0;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;  res.Element(2, 0) = 0;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;  res.Element(0, 1) = 0;</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;  res.Element(1, 1) = vScale.y;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;  res.Element(2, 1) = 0;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;  res.Element(0, 2) = 0;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;  res.Element(1, 2) = 0;</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;  res.Element(2, 2) = vScale.z;</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;  <span class="keywordflow">return</span> res;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;}</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160; </div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00115"></a><span class="lineno"><a class="line" href="../../db/daf/classez_mat3_template.htm#a68b02756ebf468868973d8211fae54a6">  115</a></span>&#160;<a class="code" href="../../db/daf/classez_mat3_template.htm">ezMat3Template&lt;Type&gt;</a> <a class="code" href="../../db/daf/classez_mat3_template.htm#a68b02756ebf468868973d8211fae54a6">ezMat3Template&lt;Type&gt;::MakeRotationX</a>(<a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a> angle)</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;{</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;  <span class="keyword">const</span> Type fSin = <a class="code" href="../../db/d78/namespaceez_math.htm#a05995060e61c0946e14619b45cd1adef">ezMath::Sin</a>(angle);</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;  <span class="keyword">const</span> Type fCos = <a class="code" href="../../db/d78/namespaceez_math.htm#a40cf3173aac40e0e462c57728e9410ab">ezMath::Cos</a>(angle);</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160; </div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../db/daf/classez_mat3_template.htm#a912998cfa291f92060e6a4daf7a62a94">ezMat3Template&lt;Type&gt;::MakeFromValues</a>(1.0f, 0.0f, 0.0f, 0.0f, fCos, -fSin, 0.0f, fSin, fCos);</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;}</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160; </div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00124"></a><span class="lineno"><a class="line" href="../../db/daf/classez_mat3_template.htm#a93fc4466a030cf0d3ec8bfe9e07ade3e">  124</a></span>&#160;<a class="code" href="../../db/daf/classez_mat3_template.htm">ezMat3Template&lt;Type&gt;</a> <a class="code" href="../../db/daf/classez_mat3_template.htm#a93fc4466a030cf0d3ec8bfe9e07ade3e">ezMat3Template&lt;Type&gt;::MakeRotationY</a>(<a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a> angle)</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;{</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;  <span class="keyword">const</span> Type fSin = <a class="code" href="../../db/d78/namespaceez_math.htm#a05995060e61c0946e14619b45cd1adef">ezMath::Sin</a>(angle);</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;  <span class="keyword">const</span> Type fCos = <a class="code" href="../../db/d78/namespaceez_math.htm#a40cf3173aac40e0e462c57728e9410ab">ezMath::Cos</a>(angle);</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160; </div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../db/daf/classez_mat3_template.htm#a912998cfa291f92060e6a4daf7a62a94">ezMat3Template&lt;Type&gt;::MakeFromValues</a>(fCos, 0.0f, fSin, 0.0f, 1.0f, 0.0f, -fSin, 0.0f, fCos);</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;}</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160; </div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00133"></a><span class="lineno"><a class="line" href="../../db/daf/classez_mat3_template.htm#a3a333d5deb94638e3d43583ba9e47b39">  133</a></span>&#160;<a class="code" href="../../db/daf/classez_mat3_template.htm">ezMat3Template&lt;Type&gt;</a> <a class="code" href="../../db/daf/classez_mat3_template.htm#a3a333d5deb94638e3d43583ba9e47b39">ezMat3Template&lt;Type&gt;::MakeRotationZ</a>(<a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a> angle)</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;{</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;  <span class="keyword">const</span> Type fSin = <a class="code" href="../../db/d78/namespaceez_math.htm#a05995060e61c0946e14619b45cd1adef">ezMath::Sin</a>(angle);</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;  <span class="keyword">const</span> Type fCos = <a class="code" href="../../db/d78/namespaceez_math.htm#a40cf3173aac40e0e462c57728e9410ab">ezMath::Cos</a>(angle);</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160; </div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../db/daf/classez_mat3_template.htm#a912998cfa291f92060e6a4daf7a62a94">ezMat3Template&lt;Type&gt;::MakeFromValues</a>(fCos, -fSin, 0.0f, fSin, fCos, 0.0f, 0.0f, 0.0f, 1.0f);</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;}</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160; </div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00142"></a><span class="lineno"><a class="line" href="../../db/daf/classez_mat3_template.htm#ab0da5f6a998049e0e3190841888acb00">  142</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../db/daf/classez_mat3_template.htm#ab0da5f6a998049e0e3190841888acb00">ezMat3Template&lt;Type&gt;::SetZero</a>()</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;{</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;  *<span class="keyword">this</span> = MakeZero();</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;}</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160; </div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00148"></a><span class="lineno"><a class="line" href="../../db/daf/classez_mat3_template.htm#aa9e7b1843b64b5c62c58468cf27bb831">  148</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../db/daf/classez_mat3_template.htm#aa9e7b1843b64b5c62c58468cf27bb831">ezMat3Template&lt;Type&gt;::SetIdentity</a>()</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;{</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;  *<span class="keyword">this</span> = MakeIdentity();</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;}</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160; </div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00154"></a><span class="lineno"><a class="line" href="../../db/daf/classez_mat3_template.htm#a809929fe288c252dc6eee01e4dc9dfaf">  154</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../db/daf/classez_mat3_template.htm#a809929fe288c252dc6eee01e4dc9dfaf">ezMat3Template&lt;Type&gt;::Transpose</a>()</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;{</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;  <a class="code" href="../../db/d78/namespaceez_math.htm#a0cd624055a97c96719b925cb11e6a08e">ezMath::Swap</a>(Element(0, 1), Element(1, 0));</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;  <a class="code" href="../../db/d78/namespaceez_math.htm#a0cd624055a97c96719b925cb11e6a08e">ezMath::Swap</a>(Element(0, 2), Element(2, 0));</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;  <a class="code" href="../../db/d78/namespaceez_math.htm#a0cd624055a97c96719b925cb11e6a08e">ezMath::Swap</a>(Element(1, 2), Element(2, 1));</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;}</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160; </div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00162"></a><span class="lineno"><a class="line" href="../../db/daf/classez_mat3_template.htm#a6f114817499c781283678493f97bc4fb">  162</a></span>&#160;<span class="keyword">const</span> <a class="code" href="../../db/daf/classez_mat3_template.htm">ezMat3Template&lt;Type&gt;</a> <a class="code" href="../../db/daf/classez_mat3_template.htm#a6f114817499c781283678493f97bc4fb">ezMat3Template&lt;Type&gt;::GetTranspose</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../db/daf/classez_mat3_template.htm#a8a7f39fc0d8d0eea106a68b4c24997fa">ezMat3Template::MakeFromRowMajorArray</a>(m_fElementsCM);</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;}</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160; </div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00168"></a><span class="lineno"><a class="line" href="../../db/daf/classez_mat3_template.htm#a6ceb62a1ded51226a6f23918e9d9a192">  168</a></span>&#160;<span class="keyword">const</span> <a class="code" href="../../db/daf/classez_mat3_template.htm">ezMat3Template&lt;Type&gt;</a> <a class="code" href="../../db/daf/classez_mat3_template.htm#a6ceb62a1ded51226a6f23918e9d9a192">ezMat3Template&lt;Type&gt;::GetInverse</a>(Type fEpsilon)<span class="keyword"> const</span></div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;  <a class="code" href="../../db/daf/classez_mat3_template.htm">ezMat3Template&lt;Type&gt;</a> Inverse = *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;  <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> res = Inverse.<a class="code" href="../../db/daf/classez_mat3_template.htm#a47e9ab79d91473ce68a6bfdd35cbd61d">Invert</a>(fEpsilon);</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;  EZ_ASSERT_DEBUG(res.Succeeded(), <span class="stringliteral">&quot;Could not invert the given Mat3.&quot;</span>);</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;  EZ_IGNORE_UNUSED(res);</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;  <span class="keywordflow">return</span> Inverse;</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;}</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160; </div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00178"></a><span class="lineno"><a class="line" href="../../db/daf/classez_mat3_template.htm#a8d0d4399bf5f42587dc5121274000498">  178</a></span>&#160;<a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> <a class="code" href="../../db/daf/classez_mat3_template.htm#a8d0d4399bf5f42587dc5121274000498">ezMat3Template&lt;Type&gt;::GetRow</a>(ezUInt32 uiRow)<span class="keyword"> const</span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;  EZ_ASSERT_DEBUG(uiRow &lt;= 2, <span class="stringliteral">&quot;Invalid Row Index {0}&quot;</span>, uiRow);</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160; </div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;  <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> r;</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;  r.x = Element(0, uiRow);</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;  r.y = Element(1, uiRow);</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;  r.z = Element(2, uiRow);</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160; </div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;  EZ_NAN_ASSERT(&amp;r);</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;  <span class="keywordflow">return</span> r;</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;}</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160; </div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00192"></a><span class="lineno"><a class="line" href="../../db/daf/classez_mat3_template.htm#a51525c9e4047dc03cbb678066d15cc6e">  192</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../db/daf/classez_mat3_template.htm#a51525c9e4047dc03cbb678066d15cc6e">ezMat3Template&lt;Type&gt;::SetRow</a>(ezUInt32 uiRow, <span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vRow)</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;{</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;  EZ_ASSERT_DEBUG(uiRow &lt;= 2, <span class="stringliteral">&quot;Invalid Row Index {0}&quot;</span>, uiRow);</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160; </div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;  Element(0, uiRow) = vRow.x;</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;  Element(1, uiRow) = vRow.y;</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;  Element(2, uiRow) = vRow.z;</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;}</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160; </div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00202"></a><span class="lineno"><a class="line" href="../../db/daf/classez_mat3_template.htm#a78e9afbd3736cd855572e557a6f208c0">  202</a></span>&#160;<a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> <a class="code" href="../../db/daf/classez_mat3_template.htm#a78e9afbd3736cd855572e557a6f208c0">ezMat3Template&lt;Type&gt;::GetColumn</a>(ezUInt32 uiColumn)<span class="keyword"> const</span></div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;  EZ_ASSERT_DEBUG(uiColumn &lt;= 2, <span class="stringliteral">&quot;Invalid Column Index {0}&quot;</span>, uiColumn);</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160; </div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;  <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> r;</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;  r.x = Element(uiColumn, 0);</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;  r.y = Element(uiColumn, 1);</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;  r.z = Element(uiColumn, 2);</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160; </div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;  EZ_NAN_ASSERT(&amp;r);</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;  <span class="keywordflow">return</span> r;</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;}</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160; </div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00216"></a><span class="lineno"><a class="line" href="../../db/daf/classez_mat3_template.htm#a46da51b87276b5db8fac2d10c74d18e8">  216</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../db/daf/classez_mat3_template.htm#a46da51b87276b5db8fac2d10c74d18e8">ezMat3Template&lt;Type&gt;::SetColumn</a>(ezUInt32 uiColumn, <span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vColumn)</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;{</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;  EZ_ASSERT_DEBUG(uiColumn &lt;= 2, <span class="stringliteral">&quot;Invalid Column Index {0}&quot;</span>, uiColumn);</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160; </div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;  Element(uiColumn, 0) = vColumn.x;</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;  Element(uiColumn, 1) = vColumn.y;</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;  Element(uiColumn, 2) = vColumn.z;</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;}</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160; </div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00226"></a><span class="lineno"><a class="line" href="../../db/daf/classez_mat3_template.htm#a1fbab9e3bb7be59423951c7a2f549869">  226</a></span>&#160;<a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> <a class="code" href="../../db/daf/classez_mat3_template.htm#a1fbab9e3bb7be59423951c7a2f549869">ezMat3Template&lt;Type&gt;::GetDiagonal</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;  EZ_NAN_ASSERT(<span class="keyword">this</span>);</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160; </div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>(Element(0, 0), Element(1, 1), Element(2, 2));</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;}</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160; </div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00234"></a><span class="lineno"><a class="line" href="../../db/daf/classez_mat3_template.htm#a20aa118cfbec0f7397d63a3744eb2671">  234</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../db/daf/classez_mat3_template.htm#a20aa118cfbec0f7397d63a3744eb2671">ezMat3Template&lt;Type&gt;::SetDiagonal</a>(<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vDiag)</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;{</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;  Element(0, 0) = vDiag.x;</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;  Element(1, 1) = vDiag.y;</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;  Element(2, 2) = vDiag.z;</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;}</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160; </div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00242"></a><span class="lineno"><a class="line" href="../../db/daf/classez_mat3_template.htm#ace20ee7b0ac3540cae559b8cd80e2883">  242</a></span>&#160;EZ_FORCE_INLINE <span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> <a class="code" href="../../db/daf/classez_mat3_template.htm#ace20ee7b0ac3540cae559b8cd80e2883">ezMat3Template&lt;Type&gt;::TransformDirection</a>(<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; v)<span class="keyword"> const</span></div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;  <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> r;</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;  r.x = Element(0, 0) * v.x + Element(1, 0) * v.y + Element(2, 0) * v.z;</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;  r.y = Element(0, 1) * v.x + Element(1, 1) * v.y + Element(2, 1) * v.z;</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;  r.z = Element(0, 2) * v.x + Element(1, 2) * v.y + Element(2, 2) * v.z;</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160; </div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;  EZ_NAN_ASSERT(&amp;r);</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;  <span class="keywordflow">return</span> r;</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;}</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160; </div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00254"></a><span class="lineno"><a class="line" href="../../db/daf/classez_mat3_template.htm#aaeb31aa66158e4fc085c2a960a6281ad">  254</a></span>&#160;EZ_FORCE_INLINE <span class="keywordtype">void</span> <a class="code" href="../../db/daf/classez_mat3_template.htm#aaeb31aa66158e4fc085c2a960a6281ad">ezMat3Template&lt;Type&gt;::operator*=</a>(Type f)</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;{</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;  <span class="keywordflow">for</span> (ezInt32 i = 0; i &lt; 9; ++i)</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    m_fElementsCM[i] *= f;</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160; </div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;  EZ_NAN_ASSERT(<span class="keyword">this</span>);</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;}</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160; </div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00263"></a><span class="lineno"><a class="line" href="../../db/daf/classez_mat3_template.htm#a1293ef40ac9338520951050ab336d427">  263</a></span>&#160;EZ_FORCE_INLINE <span class="keywordtype">void</span> <a class="code" href="../../db/daf/classez_mat3_template.htm#a1293ef40ac9338520951050ab336d427">ezMat3Template&lt;Type&gt;::operator/=</a>(Type f)</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;{</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;  <span class="keyword">const</span> Type fInv = <a class="code" href="../../db/d78/namespaceez_math.htm#ac0dc1e649849596eedbfa9f54894d779">ezMath::Invert</a>(f);</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160; </div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;  operator*=(fInv);</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;}</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160; </div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="keyword">const</span> <a class="code" href="../../db/daf/classez_mat3_template.htm">ezMat3Template&lt;Type&gt;</a> operator*(<span class="keyword">const</span> <a class="code" href="../../db/daf/classez_mat3_template.htm">ezMat3Template&lt;Type&gt;</a>&amp; m1, <span class="keyword">const</span> <a class="code" href="../../db/daf/classez_mat3_template.htm">ezMat3Template&lt;Type&gt;</a>&amp; m2)</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;{</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;  <a class="code" href="../../db/daf/classez_mat3_template.htm">ezMat3Template&lt;Type&gt;</a> r;</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;  <span class="keywordflow">for</span> (ezInt32 i = 0; i &lt; 3; ++i)</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;  {</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;    r.Element(0, i) = m1.Element(0, i) * m2.Element(0, 0) + m1.Element(1, i) * m2.Element(0, 1) + m1.Element(2, i) * m2.Element(0, 2);</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;    r.Element(1, i) = m1.Element(0, i) * m2.Element(1, 0) + m1.Element(1, i) * m2.Element(1, 1) + m1.Element(2, i) * m2.Element(1, 2);</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;    r.Element(2, i) = m1.Element(0, i) * m2.Element(2, 0) + m1.Element(1, i) * m2.Element(2, 1) + m1.Element(2, i) * m2.Element(2, 2);</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;  }</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160; </div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;  EZ_NAN_ASSERT(&amp;r);</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;  <span class="keywordflow">return</span> r;</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;}</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160; </div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;EZ_ALWAYS_INLINE <span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> operator*(<span class="keyword">const</span> <a class="code" href="../../db/daf/classez_mat3_template.htm">ezMat3Template&lt;Type&gt;</a>&amp; m, <span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; v)</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;{</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;  <span class="keywordflow">return</span> m.<a class="code" href="../../db/daf/classez_mat3_template.htm#ace20ee7b0ac3540cae559b8cd80e2883">TransformDirection</a>(v);</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;}</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160; </div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160; </div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160; </div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;<span class="comment">// *** free functions ***</span></div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160; </div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;EZ_ALWAYS_INLINE <span class="keyword">const</span> <a class="code" href="../../db/daf/classez_mat3_template.htm">ezMat3Template&lt;Type&gt;</a> operator*(Type f, <span class="keyword">const</span> <a class="code" href="../../db/daf/classez_mat3_template.htm">ezMat3Template&lt;Type&gt;</a>&amp; m1)</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;{</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;  <span class="keywordflow">return</span> operator*(m1, f);</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;}</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160; </div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;<span class="keyword">const</span> <a class="code" href="../../db/daf/classez_mat3_template.htm">ezMat3Template&lt;Type&gt;</a> operator*(<span class="keyword">const</span> <a class="code" href="../../db/daf/classez_mat3_template.htm">ezMat3Template&lt;Type&gt;</a>&amp; m1, Type f)</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;{</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;  <a class="code" href="../../db/daf/classez_mat3_template.htm">ezMat3Template&lt;Type&gt;</a> r;</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160; </div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;  <span class="keywordflow">for</span> (ezUInt32 i = 0; i &lt; 9; ++i)</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;    r.<a class="code" href="../../db/daf/classez_mat3_template.htm#a7e7202c21a5938cb87b6777136c19a51">m_fElementsCM</a>[i] = m1.<a class="code" href="../../db/daf/classez_mat3_template.htm#a7e7202c21a5938cb87b6777136c19a51">m_fElementsCM</a>[i] * f;</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160; </div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;  EZ_NAN_ASSERT(&amp;r);</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160; </div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;  <span class="keywordflow">return</span> r;</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;}</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160; </div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;EZ_ALWAYS_INLINE <span class="keyword">const</span> <a class="code" href="../../db/daf/classez_mat3_template.htm">ezMat3Template&lt;Type&gt;</a> operator/(<span class="keyword">const</span> <a class="code" href="../../db/daf/classez_mat3_template.htm">ezMat3Template&lt;Type&gt;</a>&amp; m1, Type f)</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;{</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;  <span class="keywordflow">return</span> operator*(m1, <a class="code" href="../../db/d78/namespaceez_math.htm#ac0dc1e649849596eedbfa9f54894d779">ezMath::Invert</a>(f));</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;}</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160; </div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;<span class="keyword">const</span> <a class="code" href="../../db/daf/classez_mat3_template.htm">ezMat3Template&lt;Type&gt;</a> operator+(<span class="keyword">const</span> <a class="code" href="../../db/daf/classez_mat3_template.htm">ezMat3Template&lt;Type&gt;</a>&amp; m1, <span class="keyword">const</span> <a class="code" href="../../db/daf/classez_mat3_template.htm">ezMat3Template&lt;Type&gt;</a>&amp; m2)</div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;{</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;  <a class="code" href="../../db/daf/classez_mat3_template.htm">ezMat3Template&lt;Type&gt;</a> r;</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160; </div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;  <span class="keywordflow">for</span> (ezUInt32 i = 0; i &lt; 9; ++i)</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;    r.<a class="code" href="../../db/daf/classez_mat3_template.htm#a7e7202c21a5938cb87b6777136c19a51">m_fElementsCM</a>[i] = m1.<a class="code" href="../../db/daf/classez_mat3_template.htm#a7e7202c21a5938cb87b6777136c19a51">m_fElementsCM</a>[i] + m2.<a class="code" href="../../db/daf/classez_mat3_template.htm#a7e7202c21a5938cb87b6777136c19a51">m_fElementsCM</a>[i];</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160; </div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;  EZ_NAN_ASSERT(&amp;r);</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160; </div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;  <span class="keywordflow">return</span> r;</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;}</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160; </div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;<span class="keyword">const</span> <a class="code" href="../../db/daf/classez_mat3_template.htm">ezMat3Template&lt;Type&gt;</a> operator-(<span class="keyword">const</span> <a class="code" href="../../db/daf/classez_mat3_template.htm">ezMat3Template&lt;Type&gt;</a>&amp; m1, <span class="keyword">const</span> <a class="code" href="../../db/daf/classez_mat3_template.htm">ezMat3Template&lt;Type&gt;</a>&amp; m2)</div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;{</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;  <a class="code" href="../../db/daf/classez_mat3_template.htm">ezMat3Template&lt;Type&gt;</a> r;</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160; </div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;  <span class="keywordflow">for</span> (ezUInt32 i = 0; i &lt; 9; ++i)</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;    r.<a class="code" href="../../db/daf/classez_mat3_template.htm#a7e7202c21a5938cb87b6777136c19a51">m_fElementsCM</a>[i] = m1.<a class="code" href="../../db/daf/classez_mat3_template.htm#a7e7202c21a5938cb87b6777136c19a51">m_fElementsCM</a>[i] - m2.<a class="code" href="../../db/daf/classez_mat3_template.htm#a7e7202c21a5938cb87b6777136c19a51">m_fElementsCM</a>[i];</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160; </div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;  EZ_NAN_ASSERT(&amp;r);</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160; </div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;  <span class="keywordflow">return</span> r;</div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;}</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160; </div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00347"></a><span class="lineno"><a class="line" href="../../db/daf/classez_mat3_template.htm#a4324c894e1713456c25d8f68cbf2ff8c">  347</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../db/daf/classez_mat3_template.htm#a4324c894e1713456c25d8f68cbf2ff8c">ezMat3Template&lt;Type&gt;::IsIdentical</a>(<span class="keyword">const</span> <a class="code" href="../../db/daf/classez_mat3_template.htm">ezMat3Template&lt;Type&gt;</a>&amp; rhs)<span class="keyword"> const</span></div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;  EZ_NAN_ASSERT(<span class="keyword">this</span>);</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;  EZ_NAN_ASSERT(&amp;rhs);</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160; </div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;  <span class="keywordflow">for</span> (ezUInt32 i = 0; i &lt; 9; ++i)</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;  {</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;    <span class="keywordflow">if</span> (m_fElementsCM[i] != rhs.<a class="code" href="../../db/daf/classez_mat3_template.htm#a7e7202c21a5938cb87b6777136c19a51">m_fElementsCM</a>[i])</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;  }</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160; </div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;}</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160; </div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00362"></a><span class="lineno"><a class="line" href="../../db/daf/classez_mat3_template.htm#a9a6324c92b044f4e22e37d0c3f62ce14">  362</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../db/daf/classez_mat3_template.htm#a9a6324c92b044f4e22e37d0c3f62ce14">ezMat3Template&lt;Type&gt;::IsEqual</a>(<span class="keyword">const</span> <a class="code" href="../../db/daf/classez_mat3_template.htm">ezMat3Template&lt;Type&gt;</a>&amp; rhs, Type fEpsilon)<span class="keyword"> const</span></div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;  EZ_NAN_ASSERT(<span class="keyword">this</span>);</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;  EZ_NAN_ASSERT(&amp;rhs);</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160; </div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;  EZ_ASSERT_DEBUG(fEpsilon &gt;= 0.0f, <span class="stringliteral">&quot;Epsilon may not be negative.&quot;</span>);</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160; </div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;  <span class="keywordflow">for</span> (ezUInt32 i = 0; i &lt; 9; ++i)</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;  {</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;    <span class="keywordflow">if</span> (!<a class="code" href="../../db/d78/namespaceez_math.htm#aa15fef5dd09bffb82b0d3ce5d7de3255">ezMath::IsEqual</a>(m_fElementsCM[i], rhs.<a class="code" href="../../db/daf/classez_mat3_template.htm#a7e7202c21a5938cb87b6777136c19a51">m_fElementsCM</a>[i], fEpsilon))</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;  }</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160; </div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;}</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160; </div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> operator==(<span class="keyword">const</span> <a class="code" href="../../db/daf/classez_mat3_template.htm">ezMat3Template&lt;Type&gt;</a>&amp; lhs, <span class="keyword">const</span> <a class="code" href="../../db/daf/classez_mat3_template.htm">ezMat3Template&lt;Type&gt;</a>&amp; rhs)</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;{</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;  <span class="keywordflow">return</span> lhs.<a class="code" href="../../db/daf/classez_mat3_template.htm#a4324c894e1713456c25d8f68cbf2ff8c">IsIdentical</a>(rhs);</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;}</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160; </div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> operator!=(<span class="keyword">const</span> <a class="code" href="../../db/daf/classez_mat3_template.htm">ezMat3Template&lt;Type&gt;</a>&amp; lhs, <span class="keyword">const</span> <a class="code" href="../../db/daf/classez_mat3_template.htm">ezMat3Template&lt;Type&gt;</a>&amp; rhs)</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;{</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;  <span class="keywordflow">return</span> !lhs.<a class="code" href="../../db/daf/classez_mat3_template.htm#a4324c894e1713456c25d8f68cbf2ff8c">IsIdentical</a>(rhs);</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;}</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160; </div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00391"></a><span class="lineno"><a class="line" href="../../db/daf/classez_mat3_template.htm#a0c918e5f9011b08268aa420ee4afb4bc">  391</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../db/daf/classez_mat3_template.htm#a0c918e5f9011b08268aa420ee4afb4bc">ezMat3Template&lt;Type&gt;::IsZero</a>(Type fEpsilon)<span class="keyword"> const</span></div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;  EZ_NAN_ASSERT(<span class="keyword">this</span>);</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160; </div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;  <span class="keywordflow">for</span> (ezUInt32 i = 0; i &lt; 9; ++i)</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;  {</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;    <span class="keywordflow">if</span> (!<a class="code" href="../../db/d78/namespaceez_math.htm#ad0c686588a98fa8c07722fc48f1ffd7f">ezMath::IsZero</a>(m_fElementsCM[i], fEpsilon))</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;  }</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160; </div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;}</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160; </div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00405"></a><span class="lineno"><a class="line" href="../../db/daf/classez_mat3_template.htm#a40ce031a3bd02f3432f7a62eb993a56c">  405</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../db/daf/classez_mat3_template.htm#a40ce031a3bd02f3432f7a62eb993a56c">ezMat3Template&lt;Type&gt;::IsIdentity</a>(Type fEpsilon)<span class="keyword"> const</span></div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;  EZ_NAN_ASSERT(<span class="keyword">this</span>);</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160; </div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;  <span class="keywordflow">if</span> (!<a class="code" href="../../db/d78/namespaceez_math.htm#aa15fef5dd09bffb82b0d3ce5d7de3255">ezMath::IsEqual</a>(Element(0, 0), (Type)1, fEpsilon))</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;  <span class="keywordflow">if</span> (!<a class="code" href="../../db/d78/namespaceez_math.htm#aa15fef5dd09bffb82b0d3ce5d7de3255">ezMath::IsEqual</a>(Element(0, 1), (Type)0, fEpsilon))</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;  <span class="keywordflow">if</span> (!<a class="code" href="../../db/d78/namespaceez_math.htm#aa15fef5dd09bffb82b0d3ce5d7de3255">ezMath::IsEqual</a>(Element(0, 2), (Type)0, fEpsilon))</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160; </div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;  <span class="keywordflow">if</span> (!<a class="code" href="../../db/d78/namespaceez_math.htm#aa15fef5dd09bffb82b0d3ce5d7de3255">ezMath::IsEqual</a>(Element(1, 0), (Type)0, fEpsilon))</div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;  <span class="keywordflow">if</span> (!<a class="code" href="../../db/d78/namespaceez_math.htm#aa15fef5dd09bffb82b0d3ce5d7de3255">ezMath::IsEqual</a>(Element(1, 1), (Type)1, fEpsilon))</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;  <span class="keywordflow">if</span> (!<a class="code" href="../../db/d78/namespaceez_math.htm#aa15fef5dd09bffb82b0d3ce5d7de3255">ezMath::IsEqual</a>(Element(1, 2), (Type)0, fEpsilon))</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160; </div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;  <span class="keywordflow">if</span> (!<a class="code" href="../../db/d78/namespaceez_math.htm#aa15fef5dd09bffb82b0d3ce5d7de3255">ezMath::IsEqual</a>(Element(2, 0), (Type)0, fEpsilon))</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;  <span class="keywordflow">if</span> (!<a class="code" href="../../db/d78/namespaceez_math.htm#aa15fef5dd09bffb82b0d3ce5d7de3255">ezMath::IsEqual</a>(Element(2, 1), (Type)0, fEpsilon))</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;  <span class="keywordflow">if</span> (!<a class="code" href="../../db/d78/namespaceez_math.htm#aa15fef5dd09bffb82b0d3ce5d7de3255">ezMath::IsEqual</a>(Element(2, 2), (Type)1, fEpsilon))</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160; </div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;}</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160; </div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00434"></a><span class="lineno"><a class="line" href="../../db/daf/classez_mat3_template.htm#a327ab32548bd2bd57b1f478647f0e9f2">  434</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../db/daf/classez_mat3_template.htm#a327ab32548bd2bd57b1f478647f0e9f2">ezMat3Template&lt;Type&gt;::IsValid</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;  <span class="keywordflow">for</span> (ezUInt32 i = 0; i &lt; 9; ++i)</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;  {</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;    <span class="keywordflow">if</span> (!ezMath::IsFinite(m_fElementsCM[i]))</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;  }</div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160; </div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;}</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160; </div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00446"></a><span class="lineno"><a class="line" href="../../db/daf/classez_mat3_template.htm#aa52b6c9b866f593e44c17322fc4e1d5e">  446</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../db/daf/classez_mat3_template.htm#aa52b6c9b866f593e44c17322fc4e1d5e">ezMat3Template&lt;Type&gt;::IsNaN</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;  <span class="keywordflow">for</span> (ezUInt32 i = 0; i &lt; 9; ++i)</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;  {</div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;    <span class="keywordflow">if</span> (ezMath::IsNaN(m_fElementsCM[i]))</div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;  }</div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160; </div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;}</div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160; </div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00458"></a><span class="lineno"><a class="line" href="../../db/daf/classez_mat3_template.htm#ac01109b73d971796c113315e85e7a27b">  458</a></span>&#160;<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> <a class="code" href="../../db/daf/classez_mat3_template.htm#ac01109b73d971796c113315e85e7a27b">ezMat3Template&lt;Type&gt;::GetScalingFactors</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;  <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> v;</div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160; </div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;  v.x = <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>(Element(0, 0), Element(0, 1), Element(0, 2)).<a class="code" href="../../da/df1/classez_vec3_template.htm#aceb7b6c4aa4040fb03d85f0adb27a433">GetLength</a>();</div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;  v.y = <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>(Element(1, 0), Element(1, 1), Element(1, 2)).<a class="code" href="../../da/df1/classez_vec3_template.htm#aceb7b6c4aa4040fb03d85f0adb27a433">GetLength</a>();</div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;  v.z = <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>(Element(2, 0), Element(2, 1), Element(2, 2)).<a class="code" href="../../da/df1/classez_vec3_template.htm#aceb7b6c4aa4040fb03d85f0adb27a433">GetLength</a>();</div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160; </div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;  EZ_NAN_ASSERT(&amp;v);</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;  <span class="keywordflow">return</span> v;</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;}</div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160; </div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00471"></a><span class="lineno"><a class="line" href="../../db/daf/classez_mat3_template.htm#a5f388fbd9bb096f6a0acea9ff66b4c21">  471</a></span>&#160;<a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code" href="../../db/daf/classez_mat3_template.htm#a5f388fbd9bb096f6a0acea9ff66b4c21">ezMat3Template&lt;Type&gt;::SetScalingFactors</a>(<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vXYZ, Type fEpsilon <span class="comment">/* = ezMath::DefaultEpsilon&lt;Type&gt;() */</span>)</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;{</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;  <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> tx(Element(0, 0), Element(0, 1), Element(0, 2));</div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;  <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> ty(Element(1, 0), Element(1, 1), Element(1, 2));</div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;  <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> tz(Element(2, 0), Element(2, 1), Element(2, 2));</div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160; </div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;  <span class="keywordflow">if</span> (tx.<a class="code" href="../../da/df1/classez_vec3_template.htm#ab0ba74a3f20ca18355119f33c328f0c6">SetLength</a>(vXYZ.x, fEpsilon) == EZ_FAILURE)</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;    <span class="keywordflow">return</span> EZ_FAILURE;</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;  <span class="keywordflow">if</span> (ty.<a class="code" href="../../da/df1/classez_vec3_template.htm#ab0ba74a3f20ca18355119f33c328f0c6">SetLength</a>(vXYZ.y, fEpsilon) == EZ_FAILURE)</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;    <span class="keywordflow">return</span> EZ_FAILURE;</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;  <span class="keywordflow">if</span> (tz.<a class="code" href="../../da/df1/classez_vec3_template.htm#ab0ba74a3f20ca18355119f33c328f0c6">SetLength</a>(vXYZ.z, fEpsilon) == EZ_FAILURE)</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;    <span class="keywordflow">return</span> EZ_FAILURE;</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160; </div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160; </div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;  Element(0, 0) = tx.x;</div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;  Element(0, 1) = tx.y;</div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;  Element(0, 2) = tx.z;</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;  Element(1, 0) = ty.x;</div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;  Element(1, 1) = ty.y;</div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;  Element(1, 2) = ty.z;</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;  Element(2, 0) = tz.x;</div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;  Element(2, 1) = tz.y;</div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;  Element(2, 2) = tz.z;</div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160; </div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;  <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a name="l00496"></a><span class="lineno">  496</span>&#160;}</div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160; </div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00499"></a><span class="lineno"><a class="line" href="../../db/daf/classez_mat3_template.htm#aabad8bc28e30c2cebc468959119710ab">  499</a></span>&#160;Type <a class="code" href="../../db/daf/classez_mat3_template.htm#aabad8bc28e30c2cebc468959119710ab">ezMat3Template&lt;Type&gt;::GetDeterminant</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;  <span class="comment">// Using rule of Sarrus</span></div>
<div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;  Type fDeterminant = 0;</div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;  <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i = 0; i &lt; 3; i++)</div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;  {</div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;    fDeterminant += Element(i, 0) * Element((i + 1) % 3, 1) * Element((i + 2) % 3, 2);</div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;    fDeterminant -= Element(i, 2) * Element((i + 1) % 3, 1) * Element((i + 2) % 3, 0);</div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;  }</div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;  <span class="keywordflow">return</span> fDeterminant;</div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;}</div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160; </div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;<span class="preprocessor">#include &lt;Foundation/Math/Implementation/AllClasses_inl.h&gt;</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassez_mat3_template_htm_aa9e7b1843b64b5c62c58468cf27bb831"><div class="ttname"><a href="../../db/daf/classez_mat3_template.htm#aa9e7b1843b64b5c62c58468cf27bb831">ezMat3Template::SetIdentity</a></div><div class="ttdeci">void SetIdentity()</div><div class="ttdoc">Sets all elements to zero, except the diagonal, which is set to one.</div><div class="ttdef"><b>Definition:</b> Mat3_inl.h:148</div></div>
<div class="ttc" id="aclassez_memory_utils_htm_a87c41811a95fa63da651f6779931d9cf"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm#a87c41811a95fa63da651f6779931d9cf">ezMemoryUtils::Copy</a></div><div class="ttdeci">static void Copy(T *pDestination, const T *pSource, size_t uiCount=1)</div><div class="ttdoc">Copies objects of type T from pSource to pDestination.</div></div>
<div class="ttc" id="aclassez_mat3_template_htm_ab0da5f6a998049e0e3190841888acb00"><div class="ttname"><a href="../../db/daf/classez_mat3_template.htm#ab0da5f6a998049e0e3190841888acb00">ezMat3Template::SetZero</a></div><div class="ttdeci">void SetZero()</div><div class="ttdoc">Sets all elements to zero.</div><div class="ttdef"><b>Definition:</b> Mat3_inl.h:142</div></div>
<div class="ttc" id="astructez_result_htm"><div class="ttname"><a href="../../d4/da9/structez_result.htm">ezResult</a></div><div class="ttdoc">Default enum for returning failure or success, instead of using a bool.</div><div class="ttdef"><b>Definition:</b> Types.h:50</div></div>
<div class="ttc" id="aclassez_mat3_template_htm_a7e7202c21a5938cb87b6777136c19a51"><div class="ttname"><a href="../../db/daf/classez_mat3_template.htm#a7e7202c21a5938cb87b6777136c19a51">ezMat3Template::m_fElementsCM</a></div><div class="ttdeci">Type m_fElementsCM[9]</div><div class="ttdoc">The matrix as a 9-element Type array (column-major)</div><div class="ttdef"><b>Definition:</b> Mat3.h:22</div></div>
<div class="ttc" id="aclassez_mat3_template_htm_ac01109b73d971796c113315e85e7a27b"><div class="ttname"><a href="../../db/daf/classez_mat3_template.htm#ac01109b73d971796c113315e85e7a27b">ezMat3Template::GetScalingFactors</a></div><div class="ttdeci">const ezVec3Template&lt; Type &gt; GetScalingFactors() const</div><div class="ttdoc">Returns the 3 scaling factors that are encoded in the matrix.</div><div class="ttdef"><b>Definition:</b> Mat3_inl.h:458</div></div>
<div class="ttc" id="aclassez_mat3_template_htm_a51525c9e4047dc03cbb678066d15cc6e"><div class="ttname"><a href="../../db/daf/classez_mat3_template.htm#a51525c9e4047dc03cbb678066d15cc6e">ezMat3Template::SetRow</a></div><div class="ttdeci">void SetRow(ezUInt32 uiRow, const ezVec3Template&lt; Type &gt; &amp;vRow)</div><div class="ttdoc">Sets all 3 components of the i-th row.</div><div class="ttdef"><b>Definition:</b> Mat3_inl.h:192</div></div>
<div class="ttc" id="aclassez_mat3_template_htm_a20aa118cfbec0f7397d63a3744eb2671"><div class="ttname"><a href="../../db/daf/classez_mat3_template.htm#a20aa118cfbec0f7397d63a3744eb2671">ezMat3Template::SetDiagonal</a></div><div class="ttdeci">void SetDiagonal(const ezVec3Template&lt; Type &gt; &amp;vDiag)</div><div class="ttdoc">Sets all 3 components on the diagonal of the matrix.</div><div class="ttdef"><b>Definition:</b> Mat3_inl.h:234</div></div>
<div class="ttc" id="aclassez_mat3_template_htm_accec4e49940264b917d858f7d82f58bf"><div class="ttname"><a href="../../db/daf/classez_mat3_template.htm#accec4e49940264b917d858f7d82f58bf">ezMat3Template::MakeScaling</a></div><div class="ttdeci">static ezMat3Template&lt; Type &gt; MakeScaling(const ezVec3Template&lt; Type &gt; &amp;vScale)</div><div class="ttdoc">Creates a matrix with all zero values, except along the diagonal, which is set to x,...</div><div class="ttdef"><b>Definition:</b> Mat3_inl.h:99</div></div>
<div class="ttc" id="anamespaceez_math_htm_ac0dc1e649849596eedbfa9f54894d779"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#ac0dc1e649849596eedbfa9f54894d779">ezMath::Invert</a></div><div class="ttdeci">constexpr Type Invert(Type f)</div><div class="ttdoc">Returns 1 / f.</div><div class="ttdef"><b>Definition:</b> Math_inl.h:62</div></div>
<div class="ttc" id="aclassez_mat3_template_htm_ac11ba7b261057c8731b0f49eba600842"><div class="ttname"><a href="../../db/daf/classez_mat3_template.htm#ac11ba7b261057c8731b0f49eba600842">ezMat3Template::MakeIdentity</a></div><div class="ttdeci">static ezMat3Template&lt; Type &gt; MakeIdentity()</div><div class="ttdoc">Returns an identity matrix.</div><div class="ttdef"><b>Definition:</b> Mat3_inl.h:46</div></div>
<div class="ttc" id="aclassez_mat3_template_htm_aaeb31aa66158e4fc085c2a960a6281ad"><div class="ttname"><a href="../../db/daf/classez_mat3_template.htm#aaeb31aa66158e4fc085c2a960a6281ad">ezMat3Template::operator*=</a></div><div class="ttdeci">void operator*=(Type f)</div><div class="ttdoc">Component-wise multiplication (commutative)</div><div class="ttdef"><b>Definition:</b> Mat3_inl.h:254</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_ab0ba74a3f20ca18355119f33c328f0c6"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#ab0ba74a3f20ca18355119f33c328f0c6">ezVec3Template::SetLength</a></div><div class="ttdeci">ezResult SetLength(Type fNewLength, Type fEpsilon=ezMath::DefaultEpsilon&lt; Type &gt;())</div><div class="ttdoc">Tries to rescale the vector to the given length. If the vector is too close to zero,...</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:60</div></div>
<div class="ttc" id="aclassez_mat3_template_htm_a3a333d5deb94638e3d43583ba9e47b39"><div class="ttname"><a href="../../db/daf/classez_mat3_template.htm#a3a333d5deb94638e3d43583ba9e47b39">ezMat3Template::MakeRotationZ</a></div><div class="ttdeci">static ezMat3Template&lt; Type &gt; MakeRotationZ(ezAngle angle)</div><div class="ttdoc">Creates a matrix that is a rotation matrix around the Z-axis.</div><div class="ttdef"><b>Definition:</b> Mat3_inl.h:133</div></div>
<div class="ttc" id="aclassez_mat3_template_htm_a4324c894e1713456c25d8f68cbf2ff8c"><div class="ttname"><a href="../../db/daf/classez_mat3_template.htm#a4324c894e1713456c25d8f68cbf2ff8c">ezMat3Template::IsIdentical</a></div><div class="ttdeci">bool IsIdentical(const ezMat3Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Equality Check.</div><div class="ttdef"><b>Definition:</b> Mat3_inl.h:347</div></div>
<div class="ttc" id="anamespaceez_math_htm_a05995060e61c0946e14619b45cd1adef"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a05995060e61c0946e14619b45cd1adef">ezMath::Sin</a></div><div class="ttdeci">EZ_ALWAYS_INLINE float Sin(ezAngle a)</div><div class="ttdoc">***** Trigonometric Functions *****</div><div class="ttdef"><b>Definition:</b> MathFloat_inl.h:50</div></div>
<div class="ttc" id="aclassez_mat3_template_htm_a0c918e5f9011b08268aa420ee4afb4bc"><div class="ttname"><a href="../../db/daf/classez_mat3_template.htm#a0c918e5f9011b08268aa420ee4afb4bc">ezMat3Template::IsZero</a></div><div class="ttdeci">bool IsZero(Type fEpsilon=ezMath::DefaultEpsilon&lt; Type &gt;()) const</div><div class="ttdoc">Checks whether all elements are zero.</div><div class="ttdef"><b>Definition:</b> Mat3_inl.h:391</div></div>
<div class="ttc" id="aclassez_mat3_template_htm_a93fc4466a030cf0d3ec8bfe9e07ade3e"><div class="ttname"><a href="../../db/daf/classez_mat3_template.htm#a93fc4466a030cf0d3ec8bfe9e07ade3e">ezMat3Template::MakeRotationY</a></div><div class="ttdeci">static ezMat3Template&lt; Type &gt; MakeRotationY(ezAngle angle)</div><div class="ttdoc">Creates a matrix that is a rotation matrix around the Y-axis.</div><div class="ttdef"><b>Definition:</b> Mat3_inl.h:124</div></div>
<div class="ttc" id="aclassez_mat3_template_htm_a1fbab9e3bb7be59423951c7a2f549869"><div class="ttname"><a href="../../db/daf/classez_mat3_template.htm#a1fbab9e3bb7be59423951c7a2f549869">ezMat3Template::GetDiagonal</a></div><div class="ttdeci">ezVec3Template&lt; Type &gt; GetDiagonal() const</div><div class="ttdoc">Returns all 3 components on the diagonal of the matrix.</div><div class="ttdef"><b>Definition:</b> Mat3_inl.h:226</div></div>
<div class="ttc" id="aclassez_mat3_template_htm_a68b02756ebf468868973d8211fae54a6"><div class="ttname"><a href="../../db/daf/classez_mat3_template.htm#a68b02756ebf468868973d8211fae54a6">ezMat3Template::MakeRotationX</a></div><div class="ttdeci">static ezMat3Template&lt; Type &gt; MakeRotationX(ezAngle angle)</div><div class="ttdoc">Creates a matrix that is a rotation matrix around the X-axis.</div><div class="ttdef"><b>Definition:</b> Mat3_inl.h:115</div></div>
<div class="ttc" id="aclassez_mat3_template_htm_a1293ef40ac9338520951050ab336d427"><div class="ttname"><a href="../../db/daf/classez_mat3_template.htm#a1293ef40ac9338520951050ab336d427">ezMat3Template::operator/=</a></div><div class="ttdeci">void operator/=(Type f)</div><div class="ttdoc">Component-wise division.</div><div class="ttdef"><b>Definition:</b> Mat3_inl.h:263</div></div>
<div class="ttc" id="astructez_matrix_layout_htm_a576e22d7754979e5f58617a5095fdc3cab3e4ee57b2a163acb3a4c1bc7530c371"><div class="ttname"><a href="../../d6/d64/structez_matrix_layout.htm#a576e22d7754979e5f58617a5095fdc3cab3e4ee57b2a163acb3a4c1bc7530c371">ezMatrixLayout::ColumnMajor</a></div><div class="ttdeci">@ ColumnMajor</div><div class="ttdoc">The matrix is stored in column-major format.</div><div class="ttdef"><b>Definition:</b> Declarations.h:64</div></div>
<div class="ttc" id="aclassez_mat3_template_htm_a574f11f0bfcd52866ca1a4bca21a7a5f"><div class="ttname"><a href="../../db/daf/classez_mat3_template.htm#a574f11f0bfcd52866ca1a4bca21a7a5f">ezMat3Template::MakeFromColumnMajorArray</a></div><div class="ttdeci">static ezMat3Template&lt; Type &gt; MakeFromColumnMajorArray(const Type *const pData)</div><div class="ttdoc">Creates a matrix from 9 values that are in column-major layout.</div><div class="ttdef"><b>Definition:</b> Mat3_inl.h:75</div></div>
<div class="ttc" id="aclassez_mat3_template_htm_a912998cfa291f92060e6a4daf7a62a94"><div class="ttname"><a href="../../db/daf/classez_mat3_template.htm#a912998cfa291f92060e6a4daf7a62a94">ezMat3Template::MakeFromValues</a></div><div class="ttdeci">static ezMat3Template&lt; Type &gt; MakeFromValues(Type c1r1, Type c2r1, Type c3r1, Type c1r2, Type c2r2, Type c3r2, Type c1r3, Type c2r3, Type c3r3)</div><div class="ttdoc">Creates a matrix from 9 values. Naming is &quot;column-n row-m&quot;.</div><div class="ttdef"><b>Definition:</b> Mat3_inl.h:83</div></div>
<div class="ttc" id="astructez_matrix_layout_htm_a576e22d7754979e5f58617a5095fdc3c"><div class="ttname"><a href="../../d6/d64/structez_matrix_layout.htm#a576e22d7754979e5f58617a5095fdc3c">ezMatrixLayout::Enum</a></div><div class="ttdeci">Enum</div><div class="ttdef"><b>Definition:</b> Declarations.h:61</div></div>
<div class="ttc" id="aclassez_mat3_template_htm"><div class="ttname"><a href="../../db/daf/classez_mat3_template.htm">ezMat3Template</a></div><div class="ttdoc">A 3x3 component matrix class.</div><div class="ttdef"><b>Definition:</b> Declarations.h:154</div></div>
<div class="ttc" id="anamespaceez_math_htm_ad0c686588a98fa8c07722fc48f1ffd7f"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#ad0c686588a98fa8c07722fc48f1ffd7f">ezMath::IsZero</a></div><div class="ttdeci">bool IsZero(Type f, Type fEpsilon)</div><div class="ttdoc">Checks whether the given number is close to zero.</div><div class="ttdef"><b>Definition:</b> Math_inl.h:279</div></div>
<div class="ttc" id="aclassez_mat3_template_htm_a6ceb62a1ded51226a6f23918e9d9a192"><div class="ttname"><a href="../../db/daf/classez_mat3_template.htm#a6ceb62a1ded51226a6f23918e9d9a192">ezMat3Template::GetInverse</a></div><div class="ttdeci">const ezMat3Template&lt; Type &gt; GetInverse(Type fEpsilon=ezMath::SmallEpsilon&lt; Type &gt;()) const</div><div class="ttdoc">Returns the inverse of this matrix.</div><div class="ttdef"><b>Definition:</b> Mat3_inl.h:168</div></div>
<div class="ttc" id="aclassez_angle_htm"><div class="ttname"><a href="../../db/d6f/classez_angle.htm">ezAngle</a></div><div class="ttdoc">Float wrapper struct for a safe usage and conversions of angles.</div><div class="ttdef"><b>Definition:</b> Angle.h:9</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_aceb7b6c4aa4040fb03d85f0adb27a433"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#aceb7b6c4aa4040fb03d85f0adb27a433">ezVec3Template::GetLength</a></div><div class="ttdeci">Type GetLength() const</div><div class="ttdoc">Returns the length of the vector.</div><div class="ttdef"><b>Definition:</b> Vec3_inl.h:54</div></div>
<div class="ttc" id="anamespaceez_math_htm_a40cf3173aac40e0e462c57728e9410ab"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a40cf3173aac40e0e462c57728e9410ab">ezMath::Cos</a></div><div class="ttdeci">EZ_ALWAYS_INLINE float Cos(ezAngle a)</div><div class="ttdoc">Takes an angle, returns its cosine.</div><div class="ttdef"><b>Definition:</b> MathFloat_inl.h:52</div></div>
<div class="ttc" id="aclassez_mat3_template_htm_ad04b3c962a2f95e24a2beaef3bcb1177"><div class="ttname"><a href="../../db/daf/classez_mat3_template.htm#ad04b3c962a2f95e24a2beaef3bcb1177">ezMat3Template::GetAsArray</a></div><div class="ttdeci">void GetAsArray(Type *out_pData, ezMatrixLayout::Enum layout) const</div><div class="ttdoc">Copies the 9 values of this matrix into the given array. 'layout' defines whether the data should end...</div><div class="ttdef"><b>Definition:</b> Mat3_inl.h:15</div></div>
<div class="ttc" id="aclassez_mat3_template_htm_a6f114817499c781283678493f97bc4fb"><div class="ttname"><a href="../../db/daf/classez_mat3_template.htm#a6f114817499c781283678493f97bc4fb">ezMat3Template::GetTranspose</a></div><div class="ttdeci">const ezMat3Template&lt; Type &gt; GetTranspose() const</div><div class="ttdoc">Returns the transpose of this matrix.</div><div class="ttdef"><b>Definition:</b> Mat3_inl.h:162</div></div>
<div class="ttc" id="aclassez_mat3_template_htm_a86ae7d3cf6448654c882bd94f5dafce4"><div class="ttname"><a href="../../db/daf/classez_mat3_template.htm#a86ae7d3cf6448654c882bd94f5dafce4">ezMat3Template::MakeZero</a></div><div class="ttdeci">static ezMat3Template&lt; Type &gt; MakeZero()</div><div class="ttdoc">Returns a zero matrix.</div><div class="ttdef"><b>Definition:</b> Mat3_inl.h:35</div></div>
<div class="ttc" id="aclassez_mat3_template_htm_ace20ee7b0ac3540cae559b8cd80e2883"><div class="ttname"><a href="../../db/daf/classez_mat3_template.htm#ace20ee7b0ac3540cae559b8cd80e2883">ezMat3Template::TransformDirection</a></div><div class="ttdeci">const ezVec3Template&lt; Type &gt; TransformDirection(const ezVec3Template&lt; Type &gt; &amp;v) const</div><div class="ttdoc">Matrix-vector multiplication, assuming the 4th component of the vector is zero. So,...</div><div class="ttdef"><b>Definition:</b> Mat3_inl.h:242</div></div>
<div class="ttc" id="aclassez_mat3_template_htm_a809929fe288c252dc6eee01e4dc9dfaf"><div class="ttname"><a href="../../db/daf/classez_mat3_template.htm#a809929fe288c252dc6eee01e4dc9dfaf">ezMat3Template::Transpose</a></div><div class="ttdeci">void Transpose()</div><div class="ttdoc">Transposes this matrix.</div><div class="ttdef"><b>Definition:</b> Mat3_inl.h:154</div></div>
<div class="ttc" id="aclassez_mat3_template_htm_a8a7f39fc0d8d0eea106a68b4c24997fa"><div class="ttname"><a href="../../db/daf/classez_mat3_template.htm#a8a7f39fc0d8d0eea106a68b4c24997fa">ezMat3Template::MakeFromRowMajorArray</a></div><div class="ttdeci">static ezMat3Template&lt; Type &gt; MakeFromRowMajorArray(const Type *const pData)</div><div class="ttdoc">Creates a matrix from 9 values that are in row-major layout.</div><div class="ttdef"><b>Definition:</b> Mat3_inl.h:62</div></div>
<div class="ttc" id="aclassez_mat3_template_htm_a46da51b87276b5db8fac2d10c74d18e8"><div class="ttname"><a href="../../db/daf/classez_mat3_template.htm#a46da51b87276b5db8fac2d10c74d18e8">ezMat3Template::SetColumn</a></div><div class="ttdeci">void SetColumn(ezUInt32 uiColumn, const ezVec3Template&lt; Type &gt; &amp;vColumn)</div><div class="ttdoc">Sets all 3 components of the i-th column.</div><div class="ttdef"><b>Definition:</b> Mat3_inl.h:216</div></div>
<div class="ttc" id="aclassez_mat3_template_htm_a78e9afbd3736cd855572e557a6f208c0"><div class="ttname"><a href="../../db/daf/classez_mat3_template.htm#a78e9afbd3736cd855572e557a6f208c0">ezMat3Template::GetColumn</a></div><div class="ttdeci">ezVec3Template&lt; Type &gt; GetColumn(ezUInt32 uiColumn) const</div><div class="ttdoc">Returns all 3 components of the i-th column.</div><div class="ttdef"><b>Definition:</b> Mat3_inl.h:202</div></div>
<div class="ttc" id="aclassez_mat3_template_htm_a8d0d4399bf5f42587dc5121274000498"><div class="ttname"><a href="../../db/daf/classez_mat3_template.htm#a8d0d4399bf5f42587dc5121274000498">ezMat3Template::GetRow</a></div><div class="ttdeci">ezVec3Template&lt; Type &gt; GetRow(ezUInt32 uiRow) const</div><div class="ttdoc">Returns all 3 components of the i-th row.</div><div class="ttdef"><b>Definition:</b> Mat3_inl.h:178</div></div>
<div class="ttc" id="anamespaceez_math_htm_a0cd624055a97c96719b925cb11e6a08e"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a0cd624055a97c96719b925cb11e6a08e">ezMath::Swap</a></div><div class="ttdeci">EZ_ALWAYS_INLINE void Swap(T &amp;ref_f1, T &amp;ref_f2)</div><div class="ttdoc">Swaps the values in the two variables f1 and f2.</div><div class="ttdef"><b>Definition:</b> Math_inl.h:221</div></div>
<div class="ttc" id="aclassez_mat3_template_htm_aabad8bc28e30c2cebc468959119710ab"><div class="ttname"><a href="../../db/daf/classez_mat3_template.htm#aabad8bc28e30c2cebc468959119710ab">ezMat3Template::GetDeterminant</a></div><div class="ttdeci">Type GetDeterminant() const</div><div class="ttdoc">Computes the determinant of the matrix.</div><div class="ttdef"><b>Definition:</b> Mat3_inl.h:499</div></div>
<div class="ttc" id="aclassez_mat3_template_htm_a327ab32548bd2bd57b1f478647f0e9f2"><div class="ttname"><a href="../../db/daf/classez_mat3_template.htm#a327ab32548bd2bd57b1f478647f0e9f2">ezMat3Template::IsValid</a></div><div class="ttdeci">bool IsValid() const</div><div class="ttdoc">Checks whether all components are finite numbers.</div><div class="ttdef"><b>Definition:</b> Mat3_inl.h:434</div></div>
<div class="ttc" id="aclassez_mat3_template_htm_a40ce031a3bd02f3432f7a62eb993a56c"><div class="ttname"><a href="../../db/daf/classez_mat3_template.htm#a40ce031a3bd02f3432f7a62eb993a56c">ezMat3Template::IsIdentity</a></div><div class="ttdeci">bool IsIdentity(Type fEpsilon=ezMath::DefaultEpsilon&lt; Type &gt;()) const</div><div class="ttdoc">Checks whether this is an identity matrix.</div><div class="ttdef"><b>Definition:</b> Mat3_inl.h:405</div></div>
<div class="ttc" id="aclassez_mat3_template_htm_a5f388fbd9bb096f6a0acea9ff66b4c21"><div class="ttname"><a href="../../db/daf/classez_mat3_template.htm#a5f388fbd9bb096f6a0acea9ff66b4c21">ezMat3Template::SetScalingFactors</a></div><div class="ttdeci">ezResult SetScalingFactors(const ezVec3Template&lt; Type &gt; &amp;vXYZ, Type fEpsilon=ezMath::DefaultEpsilon&lt; Type &gt;())</div><div class="ttdoc">Tries to set the three scaling factors in the matrix. Returns EZ_FAILURE if the matrix columns cannot...</div><div class="ttdef"><b>Definition:</b> Mat3_inl.h:471</div></div>
<div class="ttc" id="anamespaceez_math_htm_aa15fef5dd09bffb82b0d3ce5d7de3255"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#aa15fef5dd09bffb82b0d3ce5d7de3255">ezMath::IsEqual</a></div><div class="ttdeci">constexpr bool IsEqual(Type lhs, Type rhs, Type fEpsilon)</div><div class="ttdoc">Checks, whether fValue is in the range [fDesired - fMaxImprecision; fDesired + fMaxImprecision].</div><div class="ttdef"><b>Definition:</b> Math_inl.h:267</div></div>
<div class="ttc" id="aclassez_mat3_template_htm_aeb988bc8f802d52dace6dcfda44f2044"><div class="ttname"><a href="../../db/daf/classez_mat3_template.htm#aeb988bc8f802d52dace6dcfda44f2044">ezMat3Template::ezMat3Template</a></div><div class="ttdeci">ezMat3Template()</div><div class="ttdoc">Default Constructor DOES NOT INITIALIZE the matrix, at all.</div><div class="ttdef"><b>Definition:</b> Mat3_inl.h:4</div></div>
<div class="ttc" id="aclassez_mat3_template_htm_a47e9ab79d91473ce68a6bfdd35cbd61d"><div class="ttname"><a href="../../db/daf/classez_mat3_template.htm#a47e9ab79d91473ce68a6bfdd35cbd61d">ezMat3Template::Invert</a></div><div class="ttdeci">ezResult Invert(Type fEpsilon=ezMath::SmallEpsilon&lt; Type &gt;())</div><div class="ttdoc">Inverts this matrix. Return value indicates whether the matrix could be Inverted.</div><div class="ttdef"><b>Definition:</b> AllClasses_inl.h:230</div></div>
<div class="ttc" id="aclassez_mat3_template_htm_a9a6324c92b044f4e22e37d0c3f62ce14"><div class="ttname"><a href="../../db/daf/classez_mat3_template.htm#a9a6324c92b044f4e22e37d0c3f62ce14">ezMat3Template::IsEqual</a></div><div class="ttdeci">bool IsEqual(const ezMat3Template&lt; Type &gt; &amp;rhs, Type fEpsilon) const</div><div class="ttdoc">Equality Check with epsilon.</div><div class="ttdef"><b>Definition:</b> Mat3_inl.h:362</div></div>
<div class="ttc" id="aclassez_vec3_template_htm"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm">ezVec3Template</a></div><div class="ttdoc">A 3-component vector class.</div><div class="ttdef"><b>Definition:</b> Declarations.h:134</div></div>
<div class="ttc" id="aclassez_mat3_template_htm_aa52b6c9b866f593e44c17322fc4e1d5e"><div class="ttname"><a href="../../db/daf/classez_mat3_template.htm#aa52b6c9b866f593e44c17322fc4e1d5e">ezMat3Template::IsNaN</a></div><div class="ttdeci">bool IsNaN() const</div><div class="ttdoc">Checks whether any component is NaN.</div><div class="ttdef"><b>Definition:</b> Mat3_inl.h:446</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_4ad0f5fbee83b30173e7fecedeea26f0.htm">Math</a></li><li class="navelem"><a class="el" href="../../dir_89ec743f7412cd7cb287fad7b6649245.htm">Implementation</a></li><li class="navelem"><b>Mat3_inl.h</b></li>
    <li class="footer">Generated on Fri Dec 22 2023 20:43:06 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
