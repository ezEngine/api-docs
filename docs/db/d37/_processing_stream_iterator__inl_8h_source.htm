<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/DataProcessing/Stream/Implementation/ProcessingStreamIterator_inl.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">ezEngine<span id="projectnumber">&#160;Release 25.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function() { init_codefold(1); });
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('db/d37/_processing_stream_iterator__inl_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">ProcessingStreamIterator_inl.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span> </div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00003" data-start="{" data-end="}">
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno"><a class="line" href="../../d5/dd2/classez_processing_stream_iterator.htm#a9727385234b2aa4168e9777a4dc830a3">    3</a></span><a class="code hl_function" href="../../d5/dd2/classez_processing_stream_iterator.htm#a9727385234b2aa4168e9777a4dc830a3">ezProcessingStreamIterator&lt;Type&gt;::ezProcessingStreamIterator</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d6/d22/classez_processing_stream.htm">ezProcessingStream</a>* pStream, ezUInt64 uiNumElements, ezUInt64 uiStartIndex)</div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span> </div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span>{</div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span>  EZ_ASSERT_DEV(pStream != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;Stream pointer may not be null!&quot;</span>);</div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span>  EZ_ASSERT_DEV(pStream-&gt;<a class="code hl_function" href="../../d6/d22/classez_processing_stream.htm#adba05ae46312d2bd263da54d131e8f65">GetElementSize</a>() == <span class="keyword">sizeof</span>(Type), <span class="stringliteral">&quot;Data size missmatch&quot;</span>);</div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span> </div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span>  m_uiElementStride = pStream-&gt;<a class="code hl_function" href="../../d6/d22/classez_processing_stream.htm#aa1737f84960e150a3a0dae732d106700">GetElementStride</a>();</div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span> </div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span>  m_pCurrentPtr = <a class="code hl_function" href="../../dc/d4d/classez_memory_utils.htm#aaa8814eb70ee62638d61609635346446">ezMemoryUtils::AddByteOffset</a>(pStream-&gt;<a class="code hl_function" href="../../d6/d22/classez_processing_stream.htm#a244c962485e3f92147833a476e23e455">GetWritableData</a>(), <span class="keyword">static_cast&lt;</span>std::ptrdiff_t<span class="keyword">&gt;</span>(uiStartIndex * m_uiElementStride));</div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span>  m_pEndPtr = <a class="code hl_function" href="../../dc/d4d/classez_memory_utils.htm#aaa8814eb70ee62638d61609635346446">ezMemoryUtils::AddByteOffset</a>(pStream-&gt;<a class="code hl_function" href="../../d6/d22/classez_processing_stream.htm#a244c962485e3f92147833a476e23e455">GetWritableData</a>(), <span class="keyword">static_cast&lt;</span>std::ptrdiff_t<span class="keyword">&gt;</span>((uiStartIndex + uiNumElements) * m_uiElementStride));</div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span>}</div>
</div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span> </div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00016" data-start="{" data-end="}">
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno"><a class="line" href="../../d5/dd2/classez_processing_stream_iterator.htm#a2475c65990ef1e795fa5366f5a366bea">   16</a></span>EZ_ALWAYS_INLINE Type&amp; <a class="code hl_function" href="../../d5/dd2/classez_processing_stream_iterator.htm#a2475c65990ef1e795fa5366f5a366bea">ezProcessingStreamIterator&lt;Type&gt;::Current</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span>  <span class="keywordflow">return</span> *<span class="keyword">static_cast&lt;</span>Type*<span class="keyword">&gt;</span>(m_pCurrentPtr);</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span>}</div>
</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span> </div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00022" data-start="{" data-end="}">
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno"><a class="line" href="../../d5/dd2/classez_processing_stream_iterator.htm#a3890f1bcad2d11c856f0455a5ac17634">   22</a></span>EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d5/dd2/classez_processing_stream_iterator.htm#a3890f1bcad2d11c856f0455a5ac17634">ezProcessingStreamIterator&lt;Type&gt;::HasReachedEnd</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span>  <span class="keywordflow">return</span> m_pCurrentPtr &gt;= m_pEndPtr;</div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span>}</div>
</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span> </div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00028" data-start="{" data-end="}">
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno"><a class="line" href="../../d5/dd2/classez_processing_stream_iterator.htm#a63b01fccf06139dd59e849a33bcf7d7a">   28</a></span>EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../d5/dd2/classez_processing_stream_iterator.htm#a63b01fccf06139dd59e849a33bcf7d7a">ezProcessingStreamIterator&lt;Type&gt;::Advance</a>()</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span>{</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span>  m_pCurrentPtr = <a class="code hl_function" href="../../dc/d4d/classez_memory_utils.htm#aaa8814eb70ee62638d61609635346446">ezMemoryUtils::AddByteOffset</a>(m_pCurrentPtr, <span class="keyword">static_cast&lt;</span>std::ptrdiff_t<span class="keyword">&gt;</span>(m_uiElementStride));</div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span>}</div>
</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span> </div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00034" data-start="{" data-end="}">
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno"><a class="line" href="../../d5/dd2/classez_processing_stream_iterator.htm#a2bdfa87bf6a5f7bb6bf660e14346cc3a">   34</a></span>EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../d5/dd2/classez_processing_stream_iterator.htm#a63b01fccf06139dd59e849a33bcf7d7a">ezProcessingStreamIterator&lt;Type&gt;::Advance</a>(ezUInt32 uiNumElements)</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>{</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span>  m_pCurrentPtr = <a class="code hl_function" href="../../dc/d4d/classez_memory_utils.htm#aaa8814eb70ee62638d61609635346446">ezMemoryUtils::AddByteOffset</a>(m_pCurrentPtr, <span class="keyword">static_cast&lt;</span>std::ptrdiff_t<span class="keyword">&gt;</span>(m_uiElementStride * uiNumElements));</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span>}</div>
</div>
<div class="ttc" id="aclassez_memory_utils_htm_aaa8814eb70ee62638d61609635346446"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm#aaa8814eb70ee62638d61609635346446">ezMemoryUtils::AddByteOffset</a></div><div class="ttdeci">static T * AddByteOffset(T *pPtr, std::ptrdiff_t offset)</div><div class="ttdoc">Returns the address stored in ptr plus the given byte offset iOffset, cast to type T.</div></div>
<div class="ttc" id="aclassez_processing_stream_htm"><div class="ttname"><a href="../../d6/d22/classez_processing_stream.htm">ezProcessingStream</a></div><div class="ttdoc">A single stream in a stream group holding contiguous data of a given type.</div><div class="ttdef"><b>Definition</b> ProcessingStream.h:8</div></div>
<div class="ttc" id="aclassez_processing_stream_htm_a244c962485e3f92147833a476e23e455"><div class="ttname"><a href="../../d6/d22/classez_processing_stream.htm#a244c962485e3f92147833a476e23e455">ezProcessingStream::GetWritableData</a></div><div class="ttdeci">T * GetWritableData() const</div><div class="ttdoc">Returns a non-const pointer to the data casted to the type T, note that no type check is done!</div><div class="ttdef"><b>Definition</b> ProcessingStream.h:60</div></div>
<div class="ttc" id="aclassez_processing_stream_htm_aa1737f84960e150a3a0dae732d106700"><div class="ttname"><a href="../../d6/d22/classez_processing_stream.htm#aa1737f84960e150a3a0dae732d106700">ezProcessingStream::GetElementStride</a></div><div class="ttdeci">ezUInt16 GetElementStride() const</div><div class="ttdoc">Returns the stride between two elements of the stream in bytes.</div><div class="ttdef"><b>Definition</b> ProcessingStream.h:83</div></div>
<div class="ttc" id="aclassez_processing_stream_htm_adba05ae46312d2bd263da54d131e8f65"><div class="ttname"><a href="../../d6/d22/classez_processing_stream.htm#adba05ae46312d2bd263da54d131e8f65">ezProcessingStream::GetElementSize</a></div><div class="ttdeci">ezUInt16 GetElementSize() const</div><div class="ttdoc">Returns the size of one stream element in bytes.</div><div class="ttdef"><b>Definition</b> ProcessingStream.h:80</div></div>
<div class="ttc" id="aclassez_processing_stream_iterator_htm_a2475c65990ef1e795fa5366f5a366bea"><div class="ttname"><a href="../../d5/dd2/classez_processing_stream_iterator.htm#a2475c65990ef1e795fa5366f5a366bea">ezProcessingStreamIterator::Current</a></div><div class="ttdeci">Type &amp; Current() const</div><div class="ttdoc">Returns a reference to the current element. Note that the behavior is undefined if HasReachedEnd() is...</div><div class="ttdef"><b>Definition</b> ProcessingStreamIterator_inl.h:16</div></div>
<div class="ttc" id="aclassez_processing_stream_iterator_htm_a3890f1bcad2d11c856f0455a5ac17634"><div class="ttname"><a href="../../d5/dd2/classez_processing_stream_iterator.htm#a3890f1bcad2d11c856f0455a5ac17634">ezProcessingStreamIterator::HasReachedEnd</a></div><div class="ttdeci">bool HasReachedEnd() const</div><div class="ttdoc">Returns true of the iterator has reached the end of the stream or the number of elements it should it...</div><div class="ttdef"><b>Definition</b> ProcessingStreamIterator_inl.h:22</div></div>
<div class="ttc" id="aclassez_processing_stream_iterator_htm_a63b01fccf06139dd59e849a33bcf7d7a"><div class="ttname"><a href="../../d5/dd2/classez_processing_stream_iterator.htm#a63b01fccf06139dd59e849a33bcf7d7a">ezProcessingStreamIterator::Advance</a></div><div class="ttdeci">void Advance()</div><div class="ttdoc">Advances the current pointer to the next element in the stream.</div><div class="ttdef"><b>Definition</b> ProcessingStreamIterator_inl.h:28</div></div>
<div class="ttc" id="aclassez_processing_stream_iterator_htm_a9727385234b2aa4168e9777a4dc830a3"><div class="ttname"><a href="../../d5/dd2/classez_processing_stream_iterator.htm#a9727385234b2aa4168e9777a4dc830a3">ezProcessingStreamIterator::ezProcessingStreamIterator</a></div><div class="ttdeci">ezProcessingStreamIterator(const ezProcessingStream *pStream, ezUInt64 uiNumElements, ezUInt64 uiStartIndex)</div><div class="ttdoc">Constructor.</div><div class="ttdef"><b>Definition</b> ProcessingStreamIterator_inl.h:3</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_9bdea80e4752fb23937b79374e1bf3cd.htm">DataProcessing</a></li><li class="navelem"><a class="el" href="../../dir_08719d88e39427bc1d2f6831716cc460.htm">Stream</a></li><li class="navelem"><a class="el" href="../../dir_3b1bcad90f367fab48862d1c95ae0430.htm">Implementation</a></li><li class="navelem"><b>ProcessingStreamIterator_inl.h</b></li>
    <li class="footer">Generated on Fri Jul 11 2025 12:17:51 for ezEngine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
