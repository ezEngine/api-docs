<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/IO/MemoryStream.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 21.10</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('db/de0/_memory_stream_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">MemoryStream.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160; </div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160; </div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;Foundation/Basics.h&gt;</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;Foundation/Containers/HybridArray.h&gt;</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;Foundation/IO/Stream.h&gt;</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;Foundation/Strings/String.h&gt;</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;Foundation/Types/RefCounted.h&gt;</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160; </div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="keyword">class </span><a class="code" href="../../da/d1f/classez_memory_stream_reader.htm">ezMemoryStreamReader</a>;</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">class </span><a class="code" href="../../dc/db9/classez_memory_stream_writer.htm">ezMemoryStreamWriter</a>;</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160; </div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160; </div>
<div class="line"><a name="l00018"></a><span class="lineno"><a class="line" href="../../d1/d42/classez_memory_stream_storage_interface.htm">   18</a></span>&#160;<span class="keyword">class </span>EZ_FOUNDATION_DLL <a class="code" href="../../d1/d42/classez_memory_stream_storage_interface.htm">ezMemoryStreamStorageInterface</a> : <span class="keyword">public</span> <a class="code" href="../../d2/d70/classez_ref_counted.htm">ezRefCounted</a></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;{</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;  <a class="code" href="../../d1/d42/classez_memory_stream_storage_interface.htm">ezMemoryStreamStorageInterface</a>();</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;  <span class="keyword">virtual</span> ~<a class="code" href="../../d1/d42/classez_memory_stream_storage_interface.htm">ezMemoryStreamStorageInterface</a>();</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160; </div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;  <span class="keyword">virtual</span> ezUInt32 GetStorageSize() <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> Clear() = 0;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160; </div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> Compact() = 0;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160; </div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  <span class="keyword">virtual</span> ezUInt64 GetHeapMemoryUsage() <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160; </div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;  <span class="keyword">virtual</span> <span class="keyword">const</span> ezUInt8* GetData() <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160; </div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  <span class="keywordtype">void</span> ReadAll(<a class="code" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a>&amp; Stream, ezUInt64 uiMaxBytes = 0xFFFFFFFFFFFFFFFFllu);</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160; </div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> Reserve(ezUInt64 uiBytes) = 0;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160; </div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;  <span class="keyword">virtual</span> <span class="keyword">const</span> ezUInt8* GetInternalData() <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;  <span class="keyword">virtual</span> ezUInt8* GetInternalData() = 0;</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> SetInternalSize(ezUInt32 uiSize) = 0;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160; </div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;  <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="../../da/d1f/classez_memory_stream_reader.htm">ezMemoryStreamReader</a>;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;  <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="../../dc/db9/classez_memory_stream_writer.htm">ezMemoryStreamWriter</a>;</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;};</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160; </div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160; </div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160; </div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> CONTAINER&gt;</div>
<div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="../../db/d52/classez_memory_stream_container_storage.htm">   63</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../db/d52/classez_memory_stream_container_storage.htm">ezMemoryStreamContainerStorage</a> : <span class="keyword">public</span> <a class="code" href="../../d1/d42/classez_memory_stream_storage_interface.htm">ezMemoryStreamStorageInterface</a></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;{</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="../../db/d52/classez_memory_stream_container_storage.htm#a9bc7a47998938ab8347f51c5a2d2a808">   68</a></span>&#160;  <a class="code" href="../../db/d52/classez_memory_stream_container_storage.htm#a9bc7a47998938ab8347f51c5a2d2a808">ezMemoryStreamContainerStorage</a>(ezUInt32 uiInitialCapacity = 0, <a class="code" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a>* pAllocator = <a class="code" href="../../d0/d49/classez_foundation.htm#a54836d4a247f8ea89b716701f1f1a4a7">ezFoundation::GetDefaultAllocator</a>())</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    : m_Storage(pAllocator)</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  {</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    m_Storage.Reserve(uiInitialCapacity);</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;  }</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160; </div>
<div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="../../db/d52/classez_memory_stream_container_storage.htm#ade56f82820aa48c98ba81ee6f7288cf5">   74</a></span>&#160;  <span class="keyword">virtual</span> ezUInt32 <a class="code" href="../../db/d52/classez_memory_stream_container_storage.htm#ade56f82820aa48c98ba81ee6f7288cf5">GetStorageSize</a>()<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> m_Storage.GetCount(); }</div>
<div class="line"><a name="l00075"></a><span class="lineno"><a class="line" href="../../db/d52/classez_memory_stream_container_storage.htm#a7f02ab86cbc281b163dce8da4b24ef47">   75</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../db/d52/classez_memory_stream_container_storage.htm#a7f02ab86cbc281b163dce8da4b24ef47">Clear</a>()<span class="keyword"> override </span>{ m_Storage.Clear(); }</div>
<div class="line"><a name="l00076"></a><span class="lineno"><a class="line" href="../../db/d52/classez_memory_stream_container_storage.htm#a31361c5cccfafb0f7f770167fa199999">   76</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../db/d52/classez_memory_stream_container_storage.htm#a31361c5cccfafb0f7f770167fa199999">Compact</a>()<span class="keyword"> override </span>{ m_Storage.Compact(); }</div>
<div class="line"><a name="l00077"></a><span class="lineno"><a class="line" href="../../db/d52/classez_memory_stream_container_storage.htm#a01a251d692a002b158b952f75f4c60c9">   77</a></span>&#160;  <span class="keyword">virtual</span> ezUInt64 <a class="code" href="../../db/d52/classez_memory_stream_container_storage.htm#a01a251d692a002b158b952f75f4c60c9">GetHeapMemoryUsage</a>()<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> m_Storage.GetHeapMemoryUsage(); }</div>
<div class="line"><a name="l00078"></a><span class="lineno"><a class="line" href="../../db/d52/classez_memory_stream_container_storage.htm#a4e06a6e912304429b2400774c0d98df0">   78</a></span>&#160;  <span class="keyword">virtual</span> <span class="keyword">const</span> ezUInt8* <a class="code" href="../../db/d52/classez_memory_stream_container_storage.htm#a4e06a6e912304429b2400774c0d98df0">GetData</a>()<span class="keyword"> const override</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    <span class="keywordflow">if</span> (m_Storage.IsEmpty())</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    <span class="keywordflow">return</span> &amp;m_Storage[0];</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;  }</div>
<div class="line"><a name="l00084"></a><span class="lineno"><a class="line" href="../../db/d52/classez_memory_stream_container_storage.htm#ae2b167d5955630f55fbc213ff562c288">   84</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../db/d52/classez_memory_stream_container_storage.htm#ae2b167d5955630f55fbc213ff562c288">Reserve</a>(ezUInt64 uiBytes)<span class="keyword"> override</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    EZ_ASSERT_DEV(uiBytes &lt;= ezMath::MaxValue&lt;ezUInt32&gt;(), <span class="stringliteral">&quot;ezMemoryStreamContainerStorage only supports 32 bit addressable sizes.&quot;</span>);</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    m_Storage.Reserve(<span class="keyword">static_cast&lt;</span>ezUInt32<span class="keyword">&gt;</span>(uiBytes));</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;  }</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160; </div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  <span class="keyword">virtual</span> <span class="keyword">const</span> ezUInt8* GetInternalData()<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> &amp;m_Storage[0]; }</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;  <span class="keyword">virtual</span> ezUInt8* GetInternalData()<span class="keyword"> override </span>{ <span class="keywordflow">return</span> &amp;m_Storage[0]; }</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> SetInternalSize(ezUInt32 uiSize)<span class="keyword"> override </span>{ m_Storage.SetCountUninitialized(uiSize); }</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160; </div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;  CONTAINER m_Storage;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;};</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160; </div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160; </div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160; </div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160; </div>
<div class="line"><a name="l00106"></a><span class="lineno"><a class="line" href="../../d6/db1/classez_memory_stream_storage.htm">  106</a></span>&#160;<span class="keyword">class </span>EZ_FOUNDATION_DLL <a class="code" href="../../d6/db1/classez_memory_stream_storage.htm">ezMemoryStreamStorage</a> : <span class="keyword">public</span> <a class="code" href="../../db/d52/classez_memory_stream_container_storage.htm">ezMemoryStreamContainerStorage</a>&lt;ezHybridArray&lt;ezUInt8, 256&gt;&gt;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;{</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;  <a class="code" href="../../d6/db1/classez_memory_stream_storage.htm">ezMemoryStreamStorage</a>(ezUInt32 uiInitialCapacity = 0, <a class="code" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a>* pAllocator = <a class="code" href="../../d0/d49/classez_foundation.htm#a54836d4a247f8ea89b716701f1f1a4a7">ezFoundation::GetDefaultAllocator</a>())</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    : <a class="code" href="../../db/d52/classez_memory_stream_container_storage.htm">ezMemoryStreamContainerStorage&lt;ezHybridArray&lt;ezUInt8, 256&gt;</a>&gt;(uiInitialCapacity, pAllocator)</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;  {</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;  }</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;};</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160; </div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160; </div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160; </div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> CONTAINER&gt;</div>
<div class="line"><a name="l00122"></a><span class="lineno"><a class="line" href="../../d1/d19/classez_memory_stream_container_wrapper_storage.htm">  122</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d1/d19/classez_memory_stream_container_wrapper_storage.htm">ezMemoryStreamContainerWrapperStorage</a> : <span class="keyword">public</span> <a class="code" href="../../d1/d42/classez_memory_stream_storage_interface.htm">ezMemoryStreamStorageInterface</a></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;{</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;  <a class="code" href="../../d1/d19/classez_memory_stream_container_wrapper_storage.htm">ezMemoryStreamContainerWrapperStorage</a>(CONTAINER* pContainer) { m_pStorage = pContainer; }</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160; </div>
<div class="line"><a name="l00127"></a><span class="lineno"><a class="line" href="../../d1/d19/classez_memory_stream_container_wrapper_storage.htm#aed1c6b3a0944221b770e52f8fe56c102">  127</a></span>&#160;  <span class="keyword">virtual</span> ezUInt32 <a class="code" href="../../d1/d19/classez_memory_stream_container_wrapper_storage.htm#aed1c6b3a0944221b770e52f8fe56c102">GetStorageSize</a>()<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> m_pStorage-&gt;GetCount(); }</div>
<div class="line"><a name="l00128"></a><span class="lineno"><a class="line" href="../../d1/d19/classez_memory_stream_container_wrapper_storage.htm#ad43c76d2b35eaf0889209eeb3fa12610">  128</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../d1/d19/classez_memory_stream_container_wrapper_storage.htm#ad43c76d2b35eaf0889209eeb3fa12610">Clear</a>()<span class="keyword"> override </span>{ m_pStorage-&gt;Clear(); }</div>
<div class="line"><a name="l00129"></a><span class="lineno"><a class="line" href="../../d1/d19/classez_memory_stream_container_wrapper_storage.htm#a490dc839c022f14519ad5eecd040ec83">  129</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../d1/d19/classez_memory_stream_container_wrapper_storage.htm#a490dc839c022f14519ad5eecd040ec83">Compact</a>()<span class="keyword"> override </span>{ m_pStorage-&gt;Compact(); }</div>
<div class="line"><a name="l00130"></a><span class="lineno"><a class="line" href="../../d1/d19/classez_memory_stream_container_wrapper_storage.htm#a5cbc0e0e4b88199833e28709d15d6c08">  130</a></span>&#160;  <span class="keyword">virtual</span> ezUInt64 <a class="code" href="../../d1/d19/classez_memory_stream_container_wrapper_storage.htm#a5cbc0e0e4b88199833e28709d15d6c08">GetHeapMemoryUsage</a>()<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> m_pStorage-&gt;GetHeapMemoryUsage(); }</div>
<div class="line"><a name="l00131"></a><span class="lineno"><a class="line" href="../../d1/d19/classez_memory_stream_container_wrapper_storage.htm#a95760e4b2999df1fefe6d939ac22891a">  131</a></span>&#160;  <span class="keyword">virtual</span> <span class="keyword">const</span> ezUInt8* <a class="code" href="../../d1/d19/classez_memory_stream_container_wrapper_storage.htm#a95760e4b2999df1fefe6d939ac22891a">GetData</a>()<span class="keyword"> const override</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="keywordflow">if</span> (m_pStorage-&gt;IsEmpty())</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <span class="keywordflow">return</span> &amp;(*m_pStorage)[0];</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;  }</div>
<div class="line"><a name="l00137"></a><span class="lineno"><a class="line" href="../../d1/d19/classez_memory_stream_container_wrapper_storage.htm#afc7564817f5dfbd7e76f069d43989374">  137</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../d1/d19/classez_memory_stream_container_wrapper_storage.htm#afc7564817f5dfbd7e76f069d43989374">Reserve</a>(ezUInt64 uiBytes)<span class="keyword"> override</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    EZ_ASSERT_DEV(uiBytes &lt; ezMath::MaxValue&lt;ezUInt32&gt;(), <span class="stringliteral">&quot;Container can currently only hold 32 bit addressable bytes.&quot;</span>);</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    m_pStorage-&gt;Reserve(<span class="keyword">static_cast&lt;</span>ezUInt32<span class="keyword">&gt;</span>(uiBytes));</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;  }</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160; </div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;  <span class="keyword">virtual</span> <span class="keyword">const</span> ezUInt8* GetInternalData()<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> &amp;(*m_pStorage)[0]; }</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;  <span class="keyword">virtual</span> ezUInt8* GetInternalData()<span class="keyword"> override </span>{ <span class="keywordflow">return</span> &amp;(*m_pStorage)[0]; }</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> SetInternalSize(ezUInt32 uiSize)<span class="keyword"> override </span>{ m_pStorage-&gt;SetCountUninitialized(uiSize); }</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160; </div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;  CONTAINER* m_pStorage;</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;};</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160; </div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160; </div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160; </div>
<div class="line"><a name="l00160"></a><span class="lineno"><a class="line" href="../../da/d1f/classez_memory_stream_reader.htm">  160</a></span>&#160;<span class="keyword">class </span>EZ_FOUNDATION_DLL <a class="code" href="../../da/d1f/classez_memory_stream_reader.htm">ezMemoryStreamReader</a> : <span class="keyword">public</span> <a class="code" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a></div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;{</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;  <a class="code" href="../../da/d1f/classez_memory_stream_reader.htm">ezMemoryStreamReader</a>(<span class="keyword">const</span> <a class="code" href="../../d1/d42/classez_memory_stream_storage_interface.htm">ezMemoryStreamStorageInterface</a>* pStreamStorage = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160; </div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;  ~<a class="code" href="../../da/d1f/classez_memory_stream_reader.htm">ezMemoryStreamReader</a>();</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160; </div>
<div class="line"><a name="l00171"></a><span class="lineno"><a class="line" href="../../da/d1f/classez_memory_stream_reader.htm#a51755bb7f7f8a28453e15eda916a2181">  171</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../da/d1f/classez_memory_stream_reader.htm#a51755bb7f7f8a28453e15eda916a2181">SetStorage</a>(<span class="keyword">const</span> <a class="code" href="../../d1/d42/classez_memory_stream_storage_interface.htm">ezMemoryStreamStorageInterface</a>* pStreamStorage)</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;  {</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    m_pStreamStorage = pStreamStorage;</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    m_uiReadPosition = 0;</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;  }</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160; </div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;  <span class="keyword">virtual</span> ezUInt64 <a class="code" href="../../d2/d19/classez_stream_reader.htm#a9b8ce20de04610d28b4118ff23b42020">ReadBytes</a>(<span class="keywordtype">void</span>* pReadBuffer, ezUInt64 uiBytesToRead) <span class="keyword">override</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160; </div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;  <span class="keyword">virtual</span> ezUInt64 <a class="code" href="../../d2/d19/classez_stream_reader.htm#a09fe261037e80688b72337b15ee0a616">SkipBytes</a>(ezUInt64 uiBytesToSkip) <span class="keyword">override</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160; </div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;  <span class="keywordtype">void</span> SetReadPosition(ezUInt32 uiReadPosition); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160; </div>
<div class="line"><a name="l00189"></a><span class="lineno"><a class="line" href="../../da/d1f/classez_memory_stream_reader.htm#a4e17c1d816bc87b4ee4d82cf3f22d662">  189</a></span>&#160;  ezUInt32 <a class="code" href="../../da/d1f/classez_memory_stream_reader.htm#a4e17c1d816bc87b4ee4d82cf3f22d662">GetReadPosition</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_uiReadPosition; }</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160; </div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;  ezUInt32 GetByteCount() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160; </div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;  <span class="keywordtype">void</span> SetDebugSourceInformation(<span class="keyword">const</span> <span class="keywordtype">char</span>* szDebugSourceInformation);</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160; </div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;  <a class="code" href="../../db/d20/classez_scoped_ref_pointer.htm">ezScopedRefPointer&lt;const ezMemoryStreamStorageInterface&gt;</a> m_pStreamStorage;</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160; </div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;  <a class="code" href="../../d4/d53/structez_hybrid_string.htm">ezString</a> m_DebugSourceInformation;</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160; </div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;  ezUInt32 m_uiReadPosition;</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;};</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160; </div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160; </div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160; </div>
<div class="line"><a name="l00213"></a><span class="lineno"><a class="line" href="../../dc/db9/classez_memory_stream_writer.htm">  213</a></span>&#160;<span class="keyword">class </span>EZ_FOUNDATION_DLL <a class="code" href="../../dc/db9/classez_memory_stream_writer.htm">ezMemoryStreamWriter</a> : <span class="keyword">public</span> <a class="code" href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a></div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;{</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;  <a class="code" href="../../dc/db9/classez_memory_stream_writer.htm">ezMemoryStreamWriter</a>(<a class="code" href="../../d1/d42/classez_memory_stream_storage_interface.htm">ezMemoryStreamStorageInterface</a>* pStreamStorage = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160; </div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;  ~<a class="code" href="../../dc/db9/classez_memory_stream_writer.htm">ezMemoryStreamWriter</a>();</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160; </div>
<div class="line"><a name="l00223"></a><span class="lineno"><a class="line" href="../../dc/db9/classez_memory_stream_writer.htm#af08645c253acbc17ac23c06bfa21fc20">  223</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../dc/db9/classez_memory_stream_writer.htm#af08645c253acbc17ac23c06bfa21fc20">SetStorage</a>(<a class="code" href="../../d1/d42/classez_memory_stream_storage_interface.htm">ezMemoryStreamStorageInterface</a>* pStreamStorage)</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;  {</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    m_pStreamStorage = pStreamStorage;</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;    m_uiWritePosition = 0;</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    <span class="keywordflow">if</span> (m_pStreamStorage)</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;      m_uiWritePosition = m_pStreamStorage-&gt;<a class="code" href="../../d1/d42/classez_memory_stream_storage_interface.htm#a25b20f861feda8f9e521b498c2d08b38">GetStorageSize</a>();</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;  }</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160; </div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;  <span class="keyword">virtual</span> <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code" href="../../d6/dcc/classez_stream_writer.htm#a21fd5331a85b467ac9d5c11eecc3f0b0">WriteBytes</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* pWriteBuffer, ezUInt64 uiBytesToWrite) <span class="keyword">override</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160; </div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;  <span class="keywordtype">void</span> SetWritePosition(ezUInt32 uiReadPosition); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160; </div>
<div class="line"><a name="l00240"></a><span class="lineno"><a class="line" href="../../dc/db9/classez_memory_stream_writer.htm#a5b8e9715cf4766e10133bab522f44265">  240</a></span>&#160;  ezUInt32 <a class="code" href="../../dc/db9/classez_memory_stream_writer.htm#a5b8e9715cf4766e10133bab522f44265">GetWritePosition</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_uiWritePosition; }</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160; </div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;  ezUInt32 GetByteCount() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160; </div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;  <a class="code" href="../../db/d20/classez_scoped_ref_pointer.htm">ezScopedRefPointer&lt;ezMemoryStreamStorageInterface&gt;</a> m_pStreamStorage;</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160; </div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;  ezUInt32 m_uiWritePosition;</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;};</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160; </div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160; </div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160; </div>
<div class="line"><a name="l00257"></a><span class="lineno"><a class="line" href="../../da/d34/classez_raw_memory_stream_reader.htm">  257</a></span>&#160;<span class="keyword">class </span>EZ_FOUNDATION_DLL <a class="code" href="../../da/d34/classez_raw_memory_stream_reader.htm">ezRawMemoryStreamReader</a> : <span class="keyword">public</span> <a class="code" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a></div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;{</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;  <a class="code" href="../../da/d34/classez_raw_memory_stream_reader.htm">ezRawMemoryStreamReader</a>();</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160; </div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;  <a class="code" href="../../da/d34/classez_raw_memory_stream_reader.htm">ezRawMemoryStreamReader</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* pData, ezUInt64 uiDataSize); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160; </div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CONTAINER&gt;</div>
<div class="line"><a name="l00268"></a><span class="lineno"><a class="line" href="../../da/d34/classez_raw_memory_stream_reader.htm#a263273996c985451f74f700c04a222d5">  268</a></span>&#160;  <a class="code" href="../../da/d34/classez_raw_memory_stream_reader.htm#a263273996c985451f74f700c04a222d5">ezRawMemoryStreamReader</a>(<span class="keyword">const</span> CONTAINER&amp; container) <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;  {</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;    Reset(container);</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;  }</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160; </div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;  ~<a class="code" href="../../da/d34/classez_raw_memory_stream_reader.htm">ezRawMemoryStreamReader</a>();</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160; </div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;  <span class="keywordtype">void</span> Reset(<span class="keyword">const</span> <span class="keywordtype">void</span>* pData, ezUInt64 uiDataSize); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160; </div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CONTAINER&gt;</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;  <span class="keywordtype">void</span> Reset(<span class="keyword">const</span> CONTAINER&amp; container) <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;  {</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    Reset(<span class="keyword">static_cast&lt;</span><span class="keyword">const </span>ezUInt8*<span class="keyword">&gt;</span>(container.GetData()), container.GetCount());</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;  }</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160; </div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;  <span class="keyword">virtual</span> ezUInt64 <a class="code" href="../../d2/d19/classez_stream_reader.htm#a9b8ce20de04610d28b4118ff23b42020">ReadBytes</a>(<span class="keywordtype">void</span>* pReadBuffer, ezUInt64 uiBytesToRead) <span class="keyword">override</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160; </div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;  <span class="keyword">virtual</span> ezUInt64 <a class="code" href="../../d2/d19/classez_stream_reader.htm#a09fe261037e80688b72337b15ee0a616">SkipBytes</a>(ezUInt64 uiBytesToSkip) <span class="keyword">override</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160; </div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;  <span class="keywordtype">void</span> SetReadPosition(ezUInt64 uiReadPosition); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160; </div>
<div class="line"><a name="l00295"></a><span class="lineno"><a class="line" href="../../da/d34/classez_raw_memory_stream_reader.htm#a0c5550ee691411b2c4c8d21849f1acff">  295</a></span>&#160;  ezUInt64 <a class="code" href="../../da/d34/classez_raw_memory_stream_reader.htm#a0c5550ee691411b2c4c8d21849f1acff">GetReadPosition</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_uiReadPosition; }</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160; </div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;  ezUInt64 GetByteCount() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160; </div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;  <span class="keywordtype">void</span> SetDebugSourceInformation(<span class="keyword">const</span> <span class="keywordtype">char</span>* szDebugSourceInformation);</div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160; </div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;  <span class="keyword">const</span> ezUInt8* m_pRawMemory = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160; </div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;  ezUInt64 m_uiChunkSize = 0;</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;  ezUInt64 m_uiReadPosition = 0;</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160; </div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;  <a class="code" href="../../d4/d53/structez_hybrid_string.htm">ezString</a> m_DebugSourceInformation;</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;};</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160; </div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160; </div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160; </div>
<div class="line"><a name="l00318"></a><span class="lineno"><a class="line" href="../../db/d19/classez_raw_memory_stream_writer.htm">  318</a></span>&#160;<span class="keyword">class </span>EZ_FOUNDATION_DLL <a class="code" href="../../db/d19/classez_raw_memory_stream_writer.htm">ezRawMemoryStreamWriter</a> : <span class="keyword">public</span> <a class="code" href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a></div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;{</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;  <a class="code" href="../../db/d19/classez_raw_memory_stream_writer.htm">ezRawMemoryStreamWriter</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160; </div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160;  <a class="code" href="../../db/d19/classez_raw_memory_stream_writer.htm">ezRawMemoryStreamWriter</a>(<span class="keywordtype">void</span>* pData, ezUInt64 uiDataSize); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160; </div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CONTAINER&gt;</div>
<div class="line"><a name="l00329"></a><span class="lineno"><a class="line" href="../../db/d19/classez_raw_memory_stream_writer.htm#a3e9a3d1e86c356a02709fc985867098c">  329</a></span>&#160;  <a class="code" href="../../db/d19/classez_raw_memory_stream_writer.htm#a3e9a3d1e86c356a02709fc985867098c">ezRawMemoryStreamWriter</a>(CONTAINER&amp; container) <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;  {</div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160;    Reset(container);</div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;  }</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160; </div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160;  ~<a class="code" href="../../db/d19/classez_raw_memory_stream_writer.htm">ezRawMemoryStreamWriter</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160; </div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;  <span class="keywordtype">void</span> Reset(<span class="keywordtype">void</span>* pData, ezUInt64 uiDataSize); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160; </div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CONTAINER&gt;</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;  <span class="keywordtype">void</span> Reset(CONTAINER&amp; container) <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;  {</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;    Reset(<span class="keyword">static_cast&lt;</span>ezUInt8*<span class="keyword">&gt;</span>(container.GetData()), container.GetCount());</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;  }</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160; </div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;  ezUInt64 GetStorageSize() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160; </div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;  ezUInt64 GetNumWrittenBytes() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160; </div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;  <span class="keywordtype">void</span> SetDebugSourceInformation(<span class="keyword">const</span> <span class="keywordtype">char</span>* szDebugSourceInformation);</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160; </div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;  <span class="keyword">virtual</span> <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code" href="../../d6/dcc/classez_stream_writer.htm#a21fd5331a85b467ac9d5c11eecc3f0b0">WriteBytes</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* pWriteBuffer, ezUInt64 uiBytesToWrite) <span class="keyword">override</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160; </div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;  ezUInt8* m_pRawMemory = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160; </div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;  ezUInt64 m_uiChunkSize = 0;</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;  ezUInt64 m_uiWritePosition = 0;</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160; </div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;  <a class="code" href="../../d4/d53/structez_hybrid_string.htm">ezString</a> m_DebugSourceInformation;</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;};</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassez_memory_stream_container_storage_htm"><div class="ttname"><a href="../../db/d52/classez_memory_stream_container_storage.htm">ezMemoryStreamContainerStorage</a></div><div class="ttdoc">Templated implementation of ezMemoryStreamStorageInterface that adapts all standard ez containers to ...</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:63</div></div>
<div class="ttc" id="aclassez_raw_memory_stream_writer_htm_a3e9a3d1e86c356a02709fc985867098c"><div class="ttname"><a href="../../db/d19/classez_raw_memory_stream_writer.htm#a3e9a3d1e86c356a02709fc985867098c">ezRawMemoryStreamWriter::ezRawMemoryStreamWriter</a></div><div class="ttdeci">ezRawMemoryStreamWriter(CONTAINER &amp;container)</div><div class="ttdoc">Initialize the raw memory reader with the chunk of memory from a standard ez container.</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:329</div></div>
<div class="ttc" id="aclassez_scoped_ref_pointer_htm"><div class="ttname"><a href="../../db/d20/classez_scoped_ref_pointer.htm">ezScopedRefPointer&lt; const ezMemoryStreamStorageInterface &gt;</a></div></div>
<div class="ttc" id="aclassez_memory_stream_container_wrapper_storage_htm_ad43c76d2b35eaf0889209eeb3fa12610"><div class="ttname"><a href="../../d1/d19/classez_memory_stream_container_wrapper_storage.htm#ad43c76d2b35eaf0889209eeb3fa12610">ezMemoryStreamContainerWrapperStorage::Clear</a></div><div class="ttdeci">virtual void Clear() override</div><div class="ttdoc">Clears the entire storage. All readers and writers must be reset to start from the beginning again.</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:128</div></div>
<div class="ttc" id="astructez_result_htm"><div class="ttname"><a href="../../d4/da9/structez_result.htm">ezResult</a></div><div class="ttdoc">Default enum for returning failure or success, instead of using a bool.</div><div class="ttdef"><b>Definition:</b> Types.h:50</div></div>
<div class="ttc" id="aclassez_stream_writer_htm"><div class="ttname"><a href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a></div><div class="ttdoc">Interface for binary out (write) streams.</div><div class="ttdef"><b>Definition:</b> Stream.h:101</div></div>
<div class="ttc" id="aclassez_foundation_htm_a54836d4a247f8ea89b716701f1f1a4a7"><div class="ttname"><a href="../../d0/d49/classez_foundation.htm#a54836d4a247f8ea89b716701f1f1a4a7">ezFoundation::GetDefaultAllocator</a></div><div class="ttdeci">static EZ_ALWAYS_INLINE ezAllocatorBase * GetDefaultAllocator()</div><div class="ttdoc">The default allocator can be used for any kind of allocation if no alignment is required.</div><div class="ttdef"><b>Definition:</b> Basics.h:77</div></div>
<div class="ttc" id="aclassez_memory_stream_container_wrapper_storage_htm"><div class="ttname"><a href="../../d1/d19/classez_memory_stream_container_wrapper_storage.htm">ezMemoryStreamContainerWrapperStorage</a></div><div class="ttdoc">Wrapper around an existing container to implement ezMemoryStreamStorageInterface.</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:122</div></div>
<div class="ttc" id="aclassez_memory_stream_container_storage_htm_a01a251d692a002b158b952f75f4c60c9"><div class="ttname"><a href="../../db/d52/classez_memory_stream_container_storage.htm#a01a251d692a002b158b952f75f4c60c9">ezMemoryStreamContainerStorage::GetHeapMemoryUsage</a></div><div class="ttdeci">virtual ezUInt64 GetHeapMemoryUsage() const override</div><div class="ttdoc">Returns the amount of bytes that are currently allocated on the heap.</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:77</div></div>
<div class="ttc" id="aclassez_memory_stream_container_wrapper_storage_htm_a490dc839c022f14519ad5eecd040ec83"><div class="ttname"><a href="../../d1/d19/classez_memory_stream_container_wrapper_storage.htm#a490dc839c022f14519ad5eecd040ec83">ezMemoryStreamContainerWrapperStorage::Compact</a></div><div class="ttdeci">virtual void Compact() override</div><div class="ttdoc">Calls Compact() on the internal array.</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:129</div></div>
<div class="ttc" id="aclassez_stream_reader_htm"><div class="ttname"><a href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a></div><div class="ttdoc">Interface for binary in (read) streams.</div><div class="ttdef"><b>Definition:</b> Stream.h:20</div></div>
<div class="ttc" id="aclassez_memory_stream_writer_htm_af08645c253acbc17ac23c06bfa21fc20"><div class="ttname"><a href="../../dc/db9/classez_memory_stream_writer.htm#af08645c253acbc17ac23c06bfa21fc20">ezMemoryStreamWriter::SetStorage</a></div><div class="ttdeci">void SetStorage(ezMemoryStreamStorageInterface *pStreamStorage)</div><div class="ttdoc">Sets the storage object upon which to operate. Resets the write position to the end of the storage st...</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:223</div></div>
<div class="ttc" id="aclassez_memory_stream_container_storage_htm_ade56f82820aa48c98ba81ee6f7288cf5"><div class="ttname"><a href="../../db/d52/classez_memory_stream_container_storage.htm#ade56f82820aa48c98ba81ee6f7288cf5">ezMemoryStreamContainerStorage::GetStorageSize</a></div><div class="ttdeci">virtual ezUInt32 GetStorageSize() const override</div><div class="ttdoc">Returns the number of bytes that is currently stored.</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:74</div></div>
<div class="ttc" id="aclassez_memory_stream_container_wrapper_storage_htm_a95760e4b2999df1fefe6d939ac22891a"><div class="ttname"><a href="../../d1/d19/classez_memory_stream_container_wrapper_storage.htm#a95760e4b2999df1fefe6d939ac22891a">ezMemoryStreamContainerWrapperStorage::GetData</a></div><div class="ttdeci">virtual const ezUInt8 * GetData() const override</div><div class="ttdoc">Returns a pointer to the internal data.</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:131</div></div>
<div class="ttc" id="aclassez_memory_stream_reader_htm_a51755bb7f7f8a28453e15eda916a2181"><div class="ttname"><a href="../../da/d1f/classez_memory_stream_reader.htm#a51755bb7f7f8a28453e15eda916a2181">ezMemoryStreamReader::SetStorage</a></div><div class="ttdeci">void SetStorage(const ezMemoryStreamStorageInterface *pStreamStorage)</div><div class="ttdoc">Sets the storage object upon which to operate. Resets the read position to zero. Pass nullptr if you ...</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:171</div></div>
<div class="ttc" id="aclassez_memory_stream_reader_htm_a4e17c1d816bc87b4ee4d82cf3f22d662"><div class="ttname"><a href="../../da/d1f/classez_memory_stream_reader.htm#a4e17c1d816bc87b4ee4d82cf3f22d662">ezMemoryStreamReader::GetReadPosition</a></div><div class="ttdeci">ezUInt32 GetReadPosition() const</div><div class="ttdoc">Returns the current read position.</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:189</div></div>
<div class="ttc" id="aclassez_memory_stream_container_storage_htm_ae2b167d5955630f55fbc213ff562c288"><div class="ttname"><a href="../../db/d52/classez_memory_stream_container_storage.htm#ae2b167d5955630f55fbc213ff562c288">ezMemoryStreamContainerStorage::Reserve</a></div><div class="ttdeci">virtual void Reserve(ezUInt64 uiBytes) override</div><div class="ttdoc">Reserves N bytes of storage.</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:84</div></div>
<div class="ttc" id="astructez_hybrid_string_htm"><div class="ttname"><a href="../../d4/d53/structez_hybrid_string.htm">ezHybridString</a></div><div class="ttdef"><b>Definition:</b> Stream.h:15</div></div>
<div class="ttc" id="aclassez_memory_stream_storage_interface_htm_a25b20f861feda8f9e521b498c2d08b38"><div class="ttname"><a href="../../d1/d42/classez_memory_stream_storage_interface.htm#a25b20f861feda8f9e521b498c2d08b38">ezMemoryStreamStorageInterface::GetStorageSize</a></div><div class="ttdeci">virtual ezUInt32 GetStorageSize() const =0</div><div class="ttdoc">Returns the number of bytes that is currently stored.</div></div>
<div class="ttc" id="aclassez_stream_reader_htm_a9b8ce20de04610d28b4118ff23b42020"><div class="ttname"><a href="../../d2/d19/classez_stream_reader.htm#a9b8ce20de04610d28b4118ff23b42020">ezStreamReader::ReadBytes</a></div><div class="ttdeci">virtual ezUInt64 ReadBytes(void *pReadBuffer, ezUInt64 uiBytesToRead)=0</div><div class="ttdoc">Reads a raw number of bytes into the read buffer, this is the only method which has to be implemented...</div></div>
<div class="ttc" id="aclassez_memory_stream_container_storage_htm_a9bc7a47998938ab8347f51c5a2d2a808"><div class="ttname"><a href="../../db/d52/classez_memory_stream_container_storage.htm#a9bc7a47998938ab8347f51c5a2d2a808">ezMemoryStreamContainerStorage::ezMemoryStreamContainerStorage</a></div><div class="ttdeci">ezMemoryStreamContainerStorage(ezUInt32 uiInitialCapacity=0, ezAllocatorBase *pAllocator=ezFoundation::GetDefaultAllocator())</div><div class="ttdoc">Creates the storage object for a memory stream. Use uiInitialCapacity to reserve a some memory up fro...</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:68</div></div>
<div class="ttc" id="aclassez_memory_stream_container_wrapper_storage_htm_afc7564817f5dfbd7e76f069d43989374"><div class="ttname"><a href="../../d1/d19/classez_memory_stream_container_wrapper_storage.htm#afc7564817f5dfbd7e76f069d43989374">ezMemoryStreamContainerWrapperStorage::Reserve</a></div><div class="ttdeci">virtual void Reserve(ezUInt64 uiBytes) override</div><div class="ttdoc">Reserves N bytes of storage.</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:137</div></div>
<div class="ttc" id="aclassez_allocator_base_htm"><div class="ttname"><a href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a></div><div class="ttdoc">Base class for all memory allocators.</div><div class="ttdef"><b>Definition:</b> AllocatorBase.h:22</div></div>
<div class="ttc" id="aclassez_memory_stream_storage_interface_htm"><div class="ttname"><a href="../../d1/d42/classez_memory_stream_storage_interface.htm">ezMemoryStreamStorageInterface</a></div><div class="ttdoc">Instances of this class act as storage for memory streams.</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:18</div></div>
<div class="ttc" id="aclassez_raw_memory_stream_reader_htm_a0c5550ee691411b2c4c8d21849f1acff"><div class="ttname"><a href="../../da/d34/classez_raw_memory_stream_reader.htm#a0c5550ee691411b2c4c8d21849f1acff">ezRawMemoryStreamReader::GetReadPosition</a></div><div class="ttdeci">ezUInt64 GetReadPosition() const</div><div class="ttdoc">Returns the current read position in the raw memory block.</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:295</div></div>
<div class="ttc" id="aclassez_stream_writer_htm_a21fd5331a85b467ac9d5c11eecc3f0b0"><div class="ttname"><a href="../../d6/dcc/classez_stream_writer.htm#a21fd5331a85b467ac9d5c11eecc3f0b0">ezStreamWriter::WriteBytes</a></div><div class="ttdeci">virtual ezResult WriteBytes(const void *pWriteBuffer, ezUInt64 uiBytesToWrite)=0</div><div class="ttdoc">Writes a raw number of bytes from the buffer, this is the only method which has to be implemented to ...</div></div>
<div class="ttc" id="aclassez_memory_stream_container_wrapper_storage_htm_aed1c6b3a0944221b770e52f8fe56c102"><div class="ttname"><a href="../../d1/d19/classez_memory_stream_container_wrapper_storage.htm#aed1c6b3a0944221b770e52f8fe56c102">ezMemoryStreamContainerWrapperStorage::GetStorageSize</a></div><div class="ttdeci">virtual ezUInt32 GetStorageSize() const override</div><div class="ttdoc">Returns the number of bytes that is currently stored.</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:127</div></div>
<div class="ttc" id="aclassez_memory_stream_container_storage_htm_a7f02ab86cbc281b163dce8da4b24ef47"><div class="ttname"><a href="../../db/d52/classez_memory_stream_container_storage.htm#a7f02ab86cbc281b163dce8da4b24ef47">ezMemoryStreamContainerStorage::Clear</a></div><div class="ttdeci">virtual void Clear() override</div><div class="ttdoc">Clears the entire storage. All readers and writers must be reset to start from the beginning again.</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:75</div></div>
<div class="ttc" id="aclassez_raw_memory_stream_reader_htm_a263273996c985451f74f700c04a222d5"><div class="ttname"><a href="../../da/d34/classez_raw_memory_stream_reader.htm#a263273996c985451f74f700c04a222d5">ezRawMemoryStreamReader::ezRawMemoryStreamReader</a></div><div class="ttdeci">ezRawMemoryStreamReader(const CONTAINER &amp;container)</div><div class="ttdoc">Initialize the raw memory reader with the chunk of memory from a standard ez container.</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:268</div></div>
<div class="ttc" id="aclassez_memory_stream_container_storage_htm_a31361c5cccfafb0f7f770167fa199999"><div class="ttname"><a href="../../db/d52/classez_memory_stream_container_storage.htm#a31361c5cccfafb0f7f770167fa199999">ezMemoryStreamContainerStorage::Compact</a></div><div class="ttdeci">virtual void Compact() override</div><div class="ttdoc">Calls Compact() on the internal array.</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:76</div></div>
<div class="ttc" id="aclassez_memory_stream_writer_htm"><div class="ttname"><a href="../../dc/db9/classez_memory_stream_writer.htm">ezMemoryStreamWriter</a></div><div class="ttdoc">A writer which can access a memory stream.</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:213</div></div>
<div class="ttc" id="aclassez_ref_counted_htm"><div class="ttname"><a href="../../d2/d70/classez_ref_counted.htm">ezRefCounted</a></div><div class="ttdoc">Base class for reference counted objects.</div><div class="ttdef"><b>Definition:</b> RefCounted.h:51</div></div>
<div class="ttc" id="aclassez_memory_stream_reader_htm"><div class="ttname"><a href="../../da/d1f/classez_memory_stream_reader.htm">ezMemoryStreamReader</a></div><div class="ttdoc">A reader which can access a memory stream.</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:160</div></div>
<div class="ttc" id="aclassez_raw_memory_stream_writer_htm"><div class="ttname"><a href="../../db/d19/classez_raw_memory_stream_writer.htm">ezRawMemoryStreamWriter</a></div><div class="ttdoc">Maps a raw chunk of memory to the ezStreamReader interface.</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:318</div></div>
<div class="ttc" id="aclassez_stream_reader_htm_a09fe261037e80688b72337b15ee0a616"><div class="ttname"><a href="../../d2/d19/classez_stream_reader.htm#a09fe261037e80688b72337b15ee0a616">ezStreamReader::SkipBytes</a></div><div class="ttdeci">virtual ezUInt64 SkipBytes(ezUInt64 uiBytesToSkip)</div><div class="ttdoc">Helper method to skip a number of bytes (implementations of the stream reader may implement this more...</div><div class="ttdef"><b>Definition:</b> Stream.h:75</div></div>
<div class="ttc" id="aclassez_memory_stream_container_wrapper_storage_htm_a5cbc0e0e4b88199833e28709d15d6c08"><div class="ttname"><a href="../../d1/d19/classez_memory_stream_container_wrapper_storage.htm#a5cbc0e0e4b88199833e28709d15d6c08">ezMemoryStreamContainerWrapperStorage::GetHeapMemoryUsage</a></div><div class="ttdeci">virtual ezUInt64 GetHeapMemoryUsage() const override</div><div class="ttdoc">Returns the amount of bytes that are currently allocated on the heap.</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:130</div></div>
<div class="ttc" id="aclassez_memory_stream_container_storage_htm_a4e06a6e912304429b2400774c0d98df0"><div class="ttname"><a href="../../db/d52/classez_memory_stream_container_storage.htm#a4e06a6e912304429b2400774c0d98df0">ezMemoryStreamContainerStorage::GetData</a></div><div class="ttdeci">virtual const ezUInt8 * GetData() const override</div><div class="ttdoc">Returns a pointer to the internal data.</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:78</div></div>
<div class="ttc" id="aclassez_memory_stream_storage_htm"><div class="ttname"><a href="../../d6/db1/classez_memory_stream_storage.htm">ezMemoryStreamStorage</a></div><div class="ttdef"><b>Definition:</b> MemoryStream.h:106</div></div>
<div class="ttc" id="aclassez_raw_memory_stream_reader_htm"><div class="ttname"><a href="../../da/d34/classez_raw_memory_stream_reader.htm">ezRawMemoryStreamReader</a></div><div class="ttdoc">Maps a raw chunk of memory to the ezStreamReader interface.</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:257</div></div>
<div class="ttc" id="aclassez_memory_stream_writer_htm_a5b8e9715cf4766e10133bab522f44265"><div class="ttname"><a href="../../dc/db9/classez_memory_stream_writer.htm#a5b8e9715cf4766e10133bab522f44265">ezMemoryStreamWriter::GetWritePosition</a></div><div class="ttdeci">ezUInt32 GetWritePosition() const</div><div class="ttdoc">Returns the current write position.</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:240</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_64fdcb4094ee5a27b054d4fa23e28e01.htm">IO</a></li><li class="navelem"><b>MemoryStream.h</b></li>
    <li class="footer">Generated on Mon Oct 18 2021 15:33:28 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
