<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/IO/MemoryStream.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 25.03</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('db/de0/_memory_stream_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">MemoryStream.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;Foundation/Basics.h&gt;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;Foundation/Containers/HybridArray.h&gt;</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;Foundation/IO/Stream.h&gt;</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;Foundation/Strings/String.h&gt;</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;Foundation/Types/RefCounted.h&gt;</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160; </div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="keyword">class </span><a class="code" href="../../da/d1f/classez_memory_stream_reader.htm">ezMemoryStreamReader</a>;</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="keyword">class </span><a class="code" href="../../dc/db9/classez_memory_stream_writer.htm">ezMemoryStreamWriter</a>;</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160; </div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160; </div>
<div class="line"><a name="l00017"></a><span class="lineno"><a class="line" href="../../d1/d42/classez_memory_stream_storage_interface.htm">   17</a></span>&#160;<span class="keyword">class </span>EZ_FOUNDATION_DLL <a class="code" href="../../d1/d42/classez_memory_stream_storage_interface.htm">ezMemoryStreamStorageInterface</a></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;{</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;  <a class="code" href="../../d1/d42/classez_memory_stream_storage_interface.htm">ezMemoryStreamStorageInterface</a>();</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;  <span class="keyword">virtual</span> ~<a class="code" href="../../d1/d42/classez_memory_stream_storage_interface.htm">ezMemoryStreamStorageInterface</a>();</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160; </div>
<div class="line"><a name="l00024"></a><span class="lineno"><a class="line" href="../../d1/d42/classez_memory_stream_storage_interface.htm#a8748556e40c116ec991772954753d787">   24</a></span>&#160;  ezUInt32 <a class="code" href="../../d1/d42/classez_memory_stream_storage_interface.htm#a8748556e40c116ec991772954753d787">GetStorageSize32</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    EZ_ASSERT_ALWAYS(GetStorageSize64() &lt;= ezMath::MaxValue&lt;ezUInt32&gt;(), <span class="stringliteral">&quot;The memory stream storage object has grown beyond 4GB. The code using it has to be adapted to support this.&quot;</span>);</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    <span class="keywordflow">return</span> (ezUInt32)GetStorageSize64();</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  }</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160; </div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  <span class="keyword">virtual</span> ezUInt64 GetStorageSize64() <span class="keyword">const</span> = 0; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160; </div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> Clear() = 0;</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160; </div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> Compact() = 0;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160; </div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  <span class="keyword">virtual</span> ezUInt64 GetHeapMemoryUsage() <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160; </div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  <span class="keywordtype">void</span> ReadAll(<a class="code" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a>&amp; inout_stream, ezUInt64 uiMaxBytes = ezMath::MaxValue&lt;ezUInt64&gt;());</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160; </div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> Reserve(ezUInt64 uiBytes) = 0;</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160; </div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;  <span class="keyword">virtual</span> <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> CopyToStream(<a class="code" href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a>&amp; inout_stream) <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160; </div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  <span class="keyword">virtual</span> <a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const ezUInt8&gt;</a> GetContiguousMemoryRange(ezUInt64 uiStartByte) <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160; </div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  <span class="keyword">virtual</span> <a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;ezUInt8&gt;</a> GetContiguousMemoryRange(ezUInt64 uiStartByte) = 0;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160; </div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> SetInternalSize(ezUInt64 uiSize) = 0;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160; </div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;  <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="../../da/d1f/classez_memory_stream_reader.htm">ezMemoryStreamReader</a>;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;  <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="../../dc/db9/classez_memory_stream_writer.htm">ezMemoryStreamWriter</a>;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;};</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160; </div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160; </div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160; </div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> CONTAINER&gt;</div>
<div class="line"><a name="l00079"></a><span class="lineno"><a class="line" href="../../db/d52/classez_memory_stream_container_storage.htm">   79</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../db/d52/classez_memory_stream_container_storage.htm">ezMemoryStreamContainerStorage</a> : <span class="keyword">public</span> <a class="code" href="../../d1/d42/classez_memory_stream_storage_interface.htm">ezMemoryStreamStorageInterface</a></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;{</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="../../db/d52/classez_memory_stream_container_storage.htm#aabcff01890f7ae164d3308b0be7c15cb">   83</a></span>&#160;  <a class="code" href="../../db/d52/classez_memory_stream_container_storage.htm#aabcff01890f7ae164d3308b0be7c15cb">ezMemoryStreamContainerStorage</a>(ezUInt32 uiInitialCapacity = 0, <a class="code" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a>* pAllocator = <a class="code" href="../../d0/d49/classez_foundation.htm#a9fec1f3614e3ba19daf06f8c22c91f78">ezFoundation::GetDefaultAllocator</a>())</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    : m_Storage(pAllocator)</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  {</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    m_Storage.Reserve(uiInitialCapacity);</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;  }</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160; </div>
<div class="line"><a name="l00089"></a><span class="lineno"><a class="line" href="../../db/d52/classez_memory_stream_container_storage.htm#ab10cdb2a82feda75bad745fad254cc54">   89</a></span>&#160;  <span class="keyword">virtual</span> ezUInt64 <a class="code" href="../../db/d52/classez_memory_stream_container_storage.htm#ab10cdb2a82feda75bad745fad254cc54">GetStorageSize64</a>()<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> m_Storage.GetCount(); }</div>
<div class="line"><a name="l00090"></a><span class="lineno"><a class="line" href="../../db/d52/classez_memory_stream_container_storage.htm#a7f02ab86cbc281b163dce8da4b24ef47">   90</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../db/d52/classez_memory_stream_container_storage.htm#a7f02ab86cbc281b163dce8da4b24ef47">Clear</a>()<span class="keyword"> override </span>{ m_Storage.Clear(); }</div>
<div class="line"><a name="l00091"></a><span class="lineno"><a class="line" href="../../db/d52/classez_memory_stream_container_storage.htm#a31361c5cccfafb0f7f770167fa199999">   91</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../db/d52/classez_memory_stream_container_storage.htm#a31361c5cccfafb0f7f770167fa199999">Compact</a>()<span class="keyword"> override </span>{ m_Storage.Compact(); }</div>
<div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="../../db/d52/classez_memory_stream_container_storage.htm#a01a251d692a002b158b952f75f4c60c9">   92</a></span>&#160;  <span class="keyword">virtual</span> ezUInt64 <a class="code" href="../../db/d52/classez_memory_stream_container_storage.htm#a01a251d692a002b158b952f75f4c60c9">GetHeapMemoryUsage</a>()<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> m_Storage.GetHeapMemoryUsage(); }</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160; </div>
<div class="line"><a name="l00094"></a><span class="lineno"><a class="line" href="../../db/d52/classez_memory_stream_container_storage.htm#ae2b167d5955630f55fbc213ff562c288">   94</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../db/d52/classez_memory_stream_container_storage.htm#ae2b167d5955630f55fbc213ff562c288">Reserve</a>(ezUInt64 uiBytes)<span class="keyword"> override</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    EZ_ASSERT_DEV(uiBytes &lt;= ezMath::MaxValue&lt;ezUInt32&gt;(), <span class="stringliteral">&quot;ezMemoryStreamContainerStorage only supports 32 bit addressable sizes.&quot;</span>);</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    m_Storage.Reserve(<span class="keyword">static_cast&lt;</span>ezUInt32<span class="keyword">&gt;</span>(uiBytes));</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  }</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160; </div>
<div class="line"><a name="l00100"></a><span class="lineno"><a class="line" href="../../db/d52/classez_memory_stream_container_storage.htm#ae73607ecca4791c83b989598a71dc1c9">  100</a></span>&#160;  <span class="keyword">virtual</span> <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code" href="../../db/d52/classez_memory_stream_container_storage.htm#ae73607ecca4791c83b989598a71dc1c9">CopyToStream</a>(<a class="code" href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a>&amp; inout_stream)<span class="keyword"> const override</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="keywordflow">return</span> inout_stream.<a class="code" href="../../d6/dcc/classez_stream_writer.htm#a21fd5331a85b467ac9d5c11eecc3f0b0">WriteBytes</a>(m_Storage.GetData(), m_Storage.GetCount());</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  }</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160; </div>
<div class="line"><a name="l00105"></a><span class="lineno"><a class="line" href="../../db/d52/classez_memory_stream_container_storage.htm#ad30f60d058282a78d10a2d649f58d678">  105</a></span>&#160;  <span class="keyword">virtual</span> <a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const ezUInt8&gt;</a> <a class="code" href="../../db/d52/classez_memory_stream_container_storage.htm#ad30f60d058282a78d10a2d649f58d678">GetContiguousMemoryRange</a>(ezUInt64 uiStartByte)<span class="keyword"> const override</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="keywordflow">if</span> (uiStartByte &gt;= m_Storage.GetCount())</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;      <span class="keywordflow">return</span> {};</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160; </div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const ezUInt8&gt;</a>(m_Storage.GetData() + uiStartByte, m_Storage.GetCount() - <span class="keyword">static_cast&lt;</span>ezUInt32<span class="keyword">&gt;</span>(uiStartByte));</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;  }</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160; </div>
<div class="line"><a name="l00113"></a><span class="lineno"><a class="line" href="../../db/d52/classez_memory_stream_container_storage.htm#ad79a357baa3e21e0b8db238d50124392">  113</a></span>&#160;  <span class="keyword">virtual</span> <a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;ezUInt8&gt;</a> <a class="code" href="../../db/d52/classez_memory_stream_container_storage.htm#ad79a357baa3e21e0b8db238d50124392">GetContiguousMemoryRange</a>(ezUInt64 uiStartByte)<span class="keyword"> override</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keywordflow">if</span> (uiStartByte &gt;= m_Storage.GetCount())</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;      <span class="keywordflow">return</span> {};</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160; </div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;ezUInt8&gt;</a>(m_Storage.GetData() + uiStartByte, m_Storage.GetCount() - <span class="keyword">static_cast&lt;</span>ezUInt32<span class="keyword">&gt;</span>(uiStartByte));</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;  }</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160; </div>
<div class="line"><a name="l00122"></a><span class="lineno"><a class="line" href="../../db/d52/classez_memory_stream_container_storage.htm#a4872ba60c3a5a81b1310ff6337335182">  122</a></span>&#160;  <span class="keyword">const</span> ezUInt8* <a class="code" href="../../db/d52/classez_memory_stream_container_storage.htm#a4872ba60c3a5a81b1310ff6337335182">GetData</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_Storage.GetData(); }</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160; </div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> SetInternalSize(ezUInt64 uiSize)<span class="keyword"> override</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    EZ_ASSERT_DEV(uiSize &lt;= ezMath::MaxValue&lt;ezUInt32&gt;(), <span class="stringliteral">&quot;Storage that large is not supported.&quot;</span>);</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    m_Storage.SetCountUninitialized(<span class="keyword">static_cast&lt;</span>ezUInt32<span class="keyword">&gt;</span>(uiSize));</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;  }</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160; </div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;  CONTAINER m_Storage;</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;};</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160; </div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160; </div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160; </div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160; </div>
<div class="line"><a name="l00144"></a><span class="lineno"><a class="line" href="../../db/da5/classez_contiguous_memory_stream_storage.htm">  144</a></span>&#160;<span class="keyword">class </span>EZ_FOUNDATION_DLL <a class="code" href="../../db/da5/classez_contiguous_memory_stream_storage.htm">ezContiguousMemoryStreamStorage</a> : <span class="keyword">public</span> <a class="code" href="../../db/d52/classez_memory_stream_container_storage.htm">ezMemoryStreamContainerStorage</a>&lt;ezHybridArray&lt;ezUInt8, 256&gt;&gt;</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;{</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;  <a class="code" href="../../db/da5/classez_contiguous_memory_stream_storage.htm">ezContiguousMemoryStreamStorage</a>(ezUInt32 uiInitialCapacity = 0, <a class="code" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a>* pAllocator = <a class="code" href="../../d0/d49/classez_foundation.htm#a9fec1f3614e3ba19daf06f8c22c91f78">ezFoundation::GetDefaultAllocator</a>())</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    : <a class="code" href="../../db/d52/classez_memory_stream_container_storage.htm">ezMemoryStreamContainerStorage&lt;ezHybridArray&lt;ezUInt8, 256&gt;</a>&gt;(uiInitialCapacity, pAllocator)</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;  {</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;  }</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;};</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160; </div>
<div class="line"><a name="l00160"></a><span class="lineno"><a class="line" href="../../d3/de8/classez_default_memory_stream_storage.htm">  160</a></span>&#160;<span class="keyword">class </span>EZ_FOUNDATION_DLL <a class="code" href="../../d3/de8/classez_default_memory_stream_storage.htm">ezDefaultMemoryStreamStorage</a> final : <span class="keyword">public</span> <a class="code" href="../../d1/d42/classez_memory_stream_storage_interface.htm">ezMemoryStreamStorageInterface</a></div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;{</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;  <a class="code" href="../../d3/de8/classez_default_memory_stream_storage.htm">ezDefaultMemoryStreamStorage</a>(ezUInt32 uiInitialCapacity = 0, <a class="code" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a>* pAllocator = <a class="code" href="../../d0/d49/classez_foundation.htm#a9fec1f3614e3ba19daf06f8c22c91f78">ezFoundation::GetDefaultAllocator</a>());</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;  ~<a class="code" href="../../d3/de8/classez_default_memory_stream_storage.htm">ezDefaultMemoryStreamStorage</a>();</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160; </div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../d1/d42/classez_memory_stream_storage_interface.htm#a4746c5119682e8fe17e4f0df2a0ffab0">Reserve</a>(ezUInt64 uiBytes) <span class="keyword">override</span>;    <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160; </div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;  <span class="keyword">virtual</span> ezUInt64 <a class="code" href="../../d1/d42/classez_memory_stream_storage_interface.htm#a77d3974d1aae81dac24874afec8e6586">GetStorageSize64</a>() <span class="keyword">const override</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../d1/d42/classez_memory_stream_storage_interface.htm#a3a91872a87615b776795ef6b85979c63">Clear</a>() <span class="keyword">override</span>;</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../d1/d42/classez_memory_stream_storage_interface.htm#a53531fcd6b67bfef811466a5d59c99a0">Compact</a>() <span class="keyword">override</span>;</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;  <span class="keyword">virtual</span> ezUInt64 <a class="code" href="../../d1/d42/classez_memory_stream_storage_interface.htm#a9a5cb59e5e77134eb778360213ddb0c7">GetHeapMemoryUsage</a>() <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;  <span class="keyword">virtual</span> <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code" href="../../d1/d42/classez_memory_stream_storage_interface.htm#ac4f85ba0ce65e4481e41315f1c49036f">CopyToStream</a>(<a class="code" href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a>&amp; inout_stream) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;  <span class="keyword">virtual</span> <a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const ezUInt8&gt;</a> <a class="code" href="../../d1/d42/classez_memory_stream_storage_interface.htm#a11955ad5ce35a54e0d8a06c2993f628f">GetContiguousMemoryRange</a>(ezUInt64 uiStartByte) <span class="keyword">const override</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;  <span class="keyword">virtual</span> <a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;ezUInt8&gt;</a> <a class="code" href="../../d1/d42/classez_memory_stream_storage_interface.htm#a11955ad5ce35a54e0d8a06c2993f628f">GetContiguousMemoryRange</a>(ezUInt64 uiStartByte) <span class="keyword">override</span>;             <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160; </div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> SetInternalSize(ezUInt64 uiSize) <span class="keyword">override</span>;</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160; </div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;  <span class="keywordtype">void</span> AddChunk(ezUInt32 uiMinimumSize);</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160; </div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;  <span class="keyword">struct </span>Chunk</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;  {</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    ezUInt64 m_uiStartOffset = 0;</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;ezUInt8&gt;</a> m_Bytes;</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;  };</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160; </div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;  <a class="code" href="../../d8/deb/classez_hybrid_array.htm">ezHybridArray&lt;Chunk, 16&gt;</a> m_Chunks;</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160; </div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;  ezUInt64 m_uiCapacity = 0;</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;  ezUInt64 m_uiInternalSize = 0;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;  ezUInt8 m_InplaceMemory[512]; <span class="comment">// used for the very first bytes, might cover small memory streams without an allocation</span></div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;  <span class="keyword">mutable</span> ezUInt32 m_uiLastChunkAccessed = 0;</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;  <span class="keyword">mutable</span> ezUInt64 m_uiLastByteAccessed = 0;</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;};</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160; </div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160; </div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> CONTAINER&gt;</div>
<div class="line"><a name="l00202"></a><span class="lineno"><a class="line" href="../../d1/d19/classez_memory_stream_container_wrapper_storage.htm">  202</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d1/d19/classez_memory_stream_container_wrapper_storage.htm">ezMemoryStreamContainerWrapperStorage</a> : <span class="keyword">public</span> <a class="code" href="../../d1/d42/classez_memory_stream_storage_interface.htm">ezMemoryStreamStorageInterface</a></div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;{</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;  <a class="code" href="../../d1/d19/classez_memory_stream_container_wrapper_storage.htm">ezMemoryStreamContainerWrapperStorage</a>(CONTAINER* pContainer) { m_pStorage = pContainer; }</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160; </div>
<div class="line"><a name="l00207"></a><span class="lineno"><a class="line" href="../../d1/d19/classez_memory_stream_container_wrapper_storage.htm#abf18b22547f561e29b3a2d1bbe34e97f">  207</a></span>&#160;  <span class="keyword">virtual</span> ezUInt64 <a class="code" href="../../d1/d19/classez_memory_stream_container_wrapper_storage.htm#abf18b22547f561e29b3a2d1bbe34e97f">GetStorageSize64</a>()<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> m_pStorage-&gt;GetCount(); }</div>
<div class="line"><a name="l00208"></a><span class="lineno"><a class="line" href="../../d1/d19/classez_memory_stream_container_wrapper_storage.htm#ad43c76d2b35eaf0889209eeb3fa12610">  208</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../d1/d19/classez_memory_stream_container_wrapper_storage.htm#ad43c76d2b35eaf0889209eeb3fa12610">Clear</a>()<span class="keyword"> override</span></div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    <span class="keywordflow">if</span> constexpr (!std::is_const&lt;CONTAINER&gt;::value)</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    {</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;      m_pStorage-&gt;Clear();</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    }</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;  }</div>
<div class="line"><a name="l00215"></a><span class="lineno"><a class="line" href="../../d1/d19/classez_memory_stream_container_wrapper_storage.htm#a490dc839c022f14519ad5eecd040ec83">  215</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../d1/d19/classez_memory_stream_container_wrapper_storage.htm#a490dc839c022f14519ad5eecd040ec83">Compact</a>()<span class="keyword"> override</span></div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    <span class="keywordflow">if</span> constexpr (!std::is_const&lt;CONTAINER&gt;::value)</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;    {</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;      m_pStorage-&gt;Compact();</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    }</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;  }</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160; </div>
<div class="line"><a name="l00223"></a><span class="lineno"><a class="line" href="../../d1/d19/classez_memory_stream_container_wrapper_storage.htm#a5cbc0e0e4b88199833e28709d15d6c08">  223</a></span>&#160;  <span class="keyword">virtual</span> ezUInt64 <a class="code" href="../../d1/d19/classez_memory_stream_container_wrapper_storage.htm#a5cbc0e0e4b88199833e28709d15d6c08">GetHeapMemoryUsage</a>()<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> m_pStorage-&gt;GetHeapMemoryUsage(); }</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160; </div>
<div class="line"><a name="l00225"></a><span class="lineno"><a class="line" href="../../d1/d19/classez_memory_stream_container_wrapper_storage.htm#afc7564817f5dfbd7e76f069d43989374">  225</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../d1/d19/classez_memory_stream_container_wrapper_storage.htm#afc7564817f5dfbd7e76f069d43989374">Reserve</a>(ezUInt64 uiBytes)<span class="keyword"> override</span></div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    <span class="keywordflow">if</span> constexpr (!std::is_const&lt;CONTAINER&gt;::value)</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;    {</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;      EZ_ASSERT_DEV(uiBytes &lt;= ezMath::MaxValue&lt;ezUInt32&gt;(), <span class="stringliteral">&quot;ezMemoryStreamContainerWrapperStorage only supports 32 bit addressable sizes.&quot;</span>);</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;      m_pStorage-&gt;Reserve(<span class="keyword">static_cast&lt;</span>ezUInt32<span class="keyword">&gt;</span>(uiBytes));</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;    }</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;  }</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160; </div>
<div class="line"><a name="l00234"></a><span class="lineno"><a class="line" href="../../d1/d19/classez_memory_stream_container_wrapper_storage.htm#a41fb698d869f45ede3446ad38f4faf93">  234</a></span>&#160;  <span class="keyword">virtual</span> <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code" href="../../d1/d19/classez_memory_stream_container_wrapper_storage.htm#a41fb698d869f45ede3446ad38f4faf93">CopyToStream</a>(<a class="code" href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a>&amp; inout_stream)<span class="keyword"> const override</span></div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    <span class="keywordflow">return</span> inout_stream.<a class="code" href="../../d6/dcc/classez_stream_writer.htm#a21fd5331a85b467ac9d5c11eecc3f0b0">WriteBytes</a>(m_pStorage-&gt;GetData(), m_pStorage-&gt;GetCount());</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;  }</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160; </div>
<div class="line"><a name="l00239"></a><span class="lineno"><a class="line" href="../../d1/d19/classez_memory_stream_container_wrapper_storage.htm#ac5b8c970c93d6d5ac4b474df1608ad38">  239</a></span>&#160;  <span class="keyword">virtual</span> <a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const ezUInt8&gt;</a> <a class="code" href="../../d1/d19/classez_memory_stream_container_wrapper_storage.htm#ac5b8c970c93d6d5ac4b474df1608ad38">GetContiguousMemoryRange</a>(ezUInt64 uiStartByte)<span class="keyword"> const override</span></div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;    <span class="keywordflow">if</span> (uiStartByte &gt;= m_pStorage-&gt;GetCount())</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;      <span class="keywordflow">return</span> {};</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160; </div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const ezUInt8&gt;</a>(m_pStorage-&gt;GetData() + uiStartByte, m_pStorage-&gt;GetCount() - <span class="keyword">static_cast&lt;</span>ezUInt32<span class="keyword">&gt;</span>(uiStartByte));</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;  }</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160; </div>
<div class="line"><a name="l00247"></a><span class="lineno"><a class="line" href="../../d1/d19/classez_memory_stream_container_wrapper_storage.htm#afcc74bd06ff899879315101627fded0e">  247</a></span>&#160;  <span class="keyword">virtual</span> <a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;ezUInt8&gt;</a> <a class="code" href="../../d1/d19/classez_memory_stream_container_wrapper_storage.htm#afcc74bd06ff899879315101627fded0e">GetContiguousMemoryRange</a>(ezUInt64 uiStartByte)<span class="keyword"> override</span></div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;    <span class="keywordflow">if</span> constexpr (!std::is_const&lt;CONTAINER&gt;::value)</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;    {</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;      <span class="keywordflow">if</span> (uiStartByte &gt;= m_pStorage-&gt;GetCount())</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;        <span class="keywordflow">return</span> {};</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160; </div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;      <span class="keywordflow">return</span> <a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;ezUInt8&gt;</a>(m_pStorage-&gt;GetData() + uiStartByte, m_pStorage-&gt;GetCount() - <span class="keyword">static_cast&lt;</span>ezUInt32<span class="keyword">&gt;</span>(uiStartByte));</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    }</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;    {</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;      <span class="keywordflow">return</span> {};</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;    }</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;  }</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160; </div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> SetInternalSize(ezUInt64 uiSize)<span class="keyword"> override</span></div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;    <span class="keywordflow">if</span> constexpr (!std::is_const&lt;CONTAINER&gt;::value)</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    {</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;      EZ_ASSERT_DEV(uiSize &lt;= ezMath::MaxValue&lt;ezUInt32&gt;(), <span class="stringliteral">&quot;ezMemoryStreamContainerWrapperStorage only supports up to 4GB sizes.&quot;</span>);</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;      m_pStorage-&gt;SetCountUninitialized(<span class="keyword">static_cast&lt;</span>ezUInt32<span class="keyword">&gt;</span>(uiSize));</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;    }</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;  }</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160; </div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;  CONTAINER* m_pStorage;</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;};</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160; </div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160; </div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160; </div>
<div class="line"><a name="l00284"></a><span class="lineno"><a class="line" href="../../da/d1f/classez_memory_stream_reader.htm">  284</a></span>&#160;<span class="keyword">class </span>EZ_FOUNDATION_DLL <a class="code" href="../../da/d1f/classez_memory_stream_reader.htm">ezMemoryStreamReader</a> : <span class="keyword">public</span> <a class="code" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a></div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;{</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;  <a class="code" href="../../da/d1f/classez_memory_stream_reader.htm">ezMemoryStreamReader</a>(<span class="keyword">const</span> <a class="code" href="../../d1/d42/classez_memory_stream_storage_interface.htm">ezMemoryStreamStorageInterface</a>* pStreamStorage = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160; </div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;  ~<a class="code" href="../../da/d1f/classez_memory_stream_reader.htm">ezMemoryStreamReader</a>();</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160; </div>
<div class="line"><a name="l00295"></a><span class="lineno"><a class="line" href="../../da/d1f/classez_memory_stream_reader.htm#a51755bb7f7f8a28453e15eda916a2181">  295</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../da/d1f/classez_memory_stream_reader.htm#a51755bb7f7f8a28453e15eda916a2181">SetStorage</a>(<span class="keyword">const</span> <a class="code" href="../../d1/d42/classez_memory_stream_storage_interface.htm">ezMemoryStreamStorageInterface</a>* pStreamStorage)</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;  {</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;    m_pStreamStorage = pStreamStorage;</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;    m_uiReadPosition = 0;</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;  }</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160; </div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;  <span class="keyword">virtual</span> ezUInt64 <a class="code" href="../../d2/d19/classez_stream_reader.htm#a9b8ce20de04610d28b4118ff23b42020">ReadBytes</a>(<span class="keywordtype">void</span>* pReadBuffer, ezUInt64 uiBytesToRead) <span class="keyword">override</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160; </div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;  <span class="keyword">virtual</span> ezUInt64 <a class="code" href="../../d2/d19/classez_stream_reader.htm#a09fe261037e80688b72337b15ee0a616">SkipBytes</a>(ezUInt64 uiBytesToSkip) <span class="keyword">override</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160; </div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;  <span class="keywordtype">void</span> SetReadPosition(ezUInt64 uiReadPosition); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160; </div>
<div class="line"><a name="l00313"></a><span class="lineno"><a class="line" href="../../da/d1f/classez_memory_stream_reader.htm#aaa4f77d06fba62cecb67a0290f559d2a">  313</a></span>&#160;  ezUInt64 <a class="code" href="../../da/d1f/classez_memory_stream_reader.htm#aaa4f77d06fba62cecb67a0290f559d2a">GetReadPosition</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_uiReadPosition; }</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160; </div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;  ezUInt32 GetByteCount32() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;  ezUInt64 GetByteCount64() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160; </div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;  <span class="keywordtype">void</span> SetDebugSourceInformation(<a class="code" href="../../d9/d18/classez_string_view.htm">ezStringView</a> sDebugSourceInformation);</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160; </div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d1/d42/classez_memory_stream_storage_interface.htm">ezMemoryStreamStorageInterface</a>* m_pStreamStorage = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160; </div>
<div class="line"><a name="l00325"></a><span class="lineno">  325</span>&#160;  <a class="code" href="../../d4/d53/structez_hybrid_string.htm">ezString</a> m_sDebugSourceInformation;</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160; </div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;  ezUInt64 m_uiReadPosition = 0;</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;};</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160; </div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160; </div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160; </div>
<div class="line"><a name="l00338"></a><span class="lineno"><a class="line" href="../../dc/db9/classez_memory_stream_writer.htm">  338</a></span>&#160;<span class="keyword">class </span>EZ_FOUNDATION_DLL <a class="code" href="../../dc/db9/classez_memory_stream_writer.htm">ezMemoryStreamWriter</a> : <span class="keyword">public</span> <a class="code" href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a></div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160;{</div>
<div class="line"><a name="l00340"></a><span class="lineno">  340</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;  <a class="code" href="../../dc/db9/classez_memory_stream_writer.htm">ezMemoryStreamWriter</a>(<a class="code" href="../../d1/d42/classez_memory_stream_storage_interface.htm">ezMemoryStreamStorageInterface</a>* pStreamStorage = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160; </div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160;  ~<a class="code" href="../../dc/db9/classez_memory_stream_writer.htm">ezMemoryStreamWriter</a>();</div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160; </div>
<div class="line"><a name="l00348"></a><span class="lineno"><a class="line" href="../../dc/db9/classez_memory_stream_writer.htm#af08645c253acbc17ac23c06bfa21fc20">  348</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../dc/db9/classez_memory_stream_writer.htm#af08645c253acbc17ac23c06bfa21fc20">SetStorage</a>(<a class="code" href="../../d1/d42/classez_memory_stream_storage_interface.htm">ezMemoryStreamStorageInterface</a>* pStreamStorage)</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;  {</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;    m_pStreamStorage = pStreamStorage;</div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160;    m_uiWritePosition = 0;</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160;    <span class="keywordflow">if</span> (m_pStreamStorage)</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;      m_uiWritePosition = m_pStreamStorage-&gt;<a class="code" href="../../d1/d42/classez_memory_stream_storage_interface.htm#a77d3974d1aae81dac24874afec8e6586">GetStorageSize64</a>();</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;  }</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160; </div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160;  <span class="keyword">virtual</span> <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code" href="../../d6/dcc/classez_stream_writer.htm#a21fd5331a85b467ac9d5c11eecc3f0b0">WriteBytes</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* pWriteBuffer, ezUInt64 uiBytesToWrite) <span class="keyword">override</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160; </div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;  <span class="keywordtype">void</span> SetWritePosition(ezUInt64 uiWritePosition); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160; </div>
<div class="line"><a name="l00365"></a><span class="lineno"><a class="line" href="../../dc/db9/classez_memory_stream_writer.htm#a7928be76923172a2d9674ba6b7a0b9d3">  365</a></span>&#160;  ezUInt64 <a class="code" href="../../dc/db9/classez_memory_stream_writer.htm#a7928be76923172a2d9674ba6b7a0b9d3">GetWritePosition</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_uiWritePosition; }</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160; </div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;  ezUInt32 GetByteCount32() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;  ezUInt64 GetByteCount64() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160; </div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;  <a class="code" href="../../d1/d42/classez_memory_stream_storage_interface.htm">ezMemoryStreamStorageInterface</a>* m_pStreamStorage = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160; </div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;  ezUInt64 m_uiWritePosition = 0;</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;};</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160; </div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160; </div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160; </div>
<div class="line"><a name="l00383"></a><span class="lineno"><a class="line" href="../../da/d34/classez_raw_memory_stream_reader.htm">  383</a></span>&#160;<span class="keyword">class </span>EZ_FOUNDATION_DLL <a class="code" href="../../da/d34/classez_raw_memory_stream_reader.htm">ezRawMemoryStreamReader</a> : <span class="keyword">public</span> <a class="code" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a></div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;{</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;  <a class="code" href="../../da/d34/classez_raw_memory_stream_reader.htm">ezRawMemoryStreamReader</a>();</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160; </div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;  <a class="code" href="../../da/d34/classez_raw_memory_stream_reader.htm">ezRawMemoryStreamReader</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* pData, ezUInt64 uiDataSize); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160; </div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CONTAINER&gt;</div>
<div class="line"><a name="l00394"></a><span class="lineno"><a class="line" href="../../da/d34/classez_raw_memory_stream_reader.htm#a263273996c985451f74f700c04a222d5">  394</a></span>&#160;  <a class="code" href="../../da/d34/classez_raw_memory_stream_reader.htm#a263273996c985451f74f700c04a222d5">ezRawMemoryStreamReader</a>(<span class="keyword">const</span> CONTAINER&amp; container) <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;  {</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;    Reset(container);</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160;  }</div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160; </div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;  ~<a class="code" href="../../da/d34/classez_raw_memory_stream_reader.htm">ezRawMemoryStreamReader</a>();</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160; </div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;  <span class="keywordtype">void</span> Reset(<span class="keyword">const</span> <span class="keywordtype">void</span>* pData, ezUInt64 uiDataSize); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160; </div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CONTAINER&gt;</div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;  <span class="keywordtype">void</span> Reset(<span class="keyword">const</span> CONTAINER&amp; container)              <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;  {</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;    Reset(<span class="keyword">static_cast&lt;</span><span class="keyword">const </span>ezUInt8*<span class="keyword">&gt;</span>(container.GetData()), container.GetCount());</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;  }</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160; </div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;  <span class="keyword">virtual</span> ezUInt64 <a class="code" href="../../d2/d19/classez_stream_reader.htm#a9b8ce20de04610d28b4118ff23b42020">ReadBytes</a>(<span class="keywordtype">void</span>* pReadBuffer, ezUInt64 uiBytesToRead) <span class="keyword">override</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160; </div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;  <span class="keyword">virtual</span> ezUInt64 <a class="code" href="../../d2/d19/classez_stream_reader.htm#a09fe261037e80688b72337b15ee0a616">SkipBytes</a>(ezUInt64 uiBytesToSkip) <span class="keyword">override</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160; </div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;  <span class="keywordtype">void</span> SetReadPosition(ezUInt64 uiReadPosition); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160; </div>
<div class="line"><a name="l00421"></a><span class="lineno"><a class="line" href="../../da/d34/classez_raw_memory_stream_reader.htm#a0c5550ee691411b2c4c8d21849f1acff">  421</a></span>&#160;  ezUInt64 <a class="code" href="../../da/d34/classez_raw_memory_stream_reader.htm#a0c5550ee691411b2c4c8d21849f1acff">GetReadPosition</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_uiReadPosition; }</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160; </div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;  ezUInt64 GetByteCount() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160; </div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;  <span class="keywordtype">void</span> SetDebugSourceInformation(<a class="code" href="../../d9/d18/classez_string_view.htm">ezStringView</a> sDebugSourceInformation);</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160; </div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;  <span class="keyword">const</span> ezUInt8* m_pRawMemory = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160; </div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;  ezUInt64 m_uiChunkSize = 0;</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;  ezUInt64 m_uiReadPosition = 0;</div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160; </div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;  <a class="code" href="../../d4/d53/structez_hybrid_string.htm">ezString</a> m_sDebugSourceInformation;</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;};</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160; </div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160; </div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160; </div>
<div class="line"><a name="l00444"></a><span class="lineno"><a class="line" href="../../db/d19/classez_raw_memory_stream_writer.htm">  444</a></span>&#160;<span class="keyword">class </span>EZ_FOUNDATION_DLL <a class="code" href="../../db/d19/classez_raw_memory_stream_writer.htm">ezRawMemoryStreamWriter</a> : <span class="keyword">public</span> <a class="code" href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a></div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160;{</div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00447"></a><span class="lineno">  447</span>&#160;  <a class="code" href="../../db/d19/classez_raw_memory_stream_writer.htm">ezRawMemoryStreamWriter</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160; </div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;  <a class="code" href="../../db/d19/classez_raw_memory_stream_writer.htm">ezRawMemoryStreamWriter</a>(<span class="keywordtype">void</span>* pData, ezUInt64 uiDataSize); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160; </div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CONTAINER&gt;</div>
<div class="line"><a name="l00455"></a><span class="lineno"><a class="line" href="../../db/d19/classez_raw_memory_stream_writer.htm#ab074babf413596b17abcad9ba4fe4416">  455</a></span>&#160;  <a class="code" href="../../db/d19/classez_raw_memory_stream_writer.htm#ab074babf413596b17abcad9ba4fe4416">ezRawMemoryStreamWriter</a>(CONTAINER&amp; ref_container) <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;  {</div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;    Reset(ref_container);</div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160;  }</div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160; </div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;  ~<a class="code" href="../../db/d19/classez_raw_memory_stream_writer.htm">ezRawMemoryStreamWriter</a>();                   <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160; </div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;  <span class="keywordtype">void</span> Reset(<span class="keywordtype">void</span>* pData, ezUInt64 uiDataSize); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160; </div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> CONTAINER&gt;</div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;  <span class="keywordtype">void</span> Reset(CONTAINER&amp; ref_container)          <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;  {</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;    Reset(<span class="keyword">static_cast&lt;</span>ezUInt8*<span class="keyword">&gt;</span>(ref_container.GetData()), ref_container.GetCount());</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;  }</div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160; </div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;  ezUInt64 GetStorageSize() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160; </div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;  ezUInt64 GetNumWrittenBytes() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160; </div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;  <span class="keywordtype">void</span> SetDebugSourceInformation(<a class="code" href="../../d9/d18/classez_string_view.htm">ezStringView</a> sDebugSourceInformation);</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160; </div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;  <span class="keyword">virtual</span> <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code" href="../../d6/dcc/classez_stream_writer.htm#a21fd5331a85b467ac9d5c11eecc3f0b0">WriteBytes</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* pWriteBuffer, ezUInt64 uiBytesToWrite) <span class="keyword">override</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160; </div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;  ezUInt8* m_pRawMemory = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160; </div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;  ezUInt64 m_uiChunkSize = 0;</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160;  ezUInt64 m_uiWritePosition = 0;</div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160; </div>
<div class="line"><a name="l00490"></a><span class="lineno">  490</span>&#160;  <a class="code" href="../../d4/d53/structez_hybrid_string.htm">ezString</a> m_sDebugSourceInformation;</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;};</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassez_memory_stream_container_storage_htm"><div class="ttname"><a href="../../db/d52/classez_memory_stream_container_storage.htm">ezMemoryStreamContainerStorage</a></div><div class="ttdoc">Templated implementation of ezMemoryStreamStorageInterface that adapts most standard ez containers to...</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:79</div></div>
<div class="ttc" id="aclassez_memory_stream_container_wrapper_storage_htm_ad43c76d2b35eaf0889209eeb3fa12610"><div class="ttname"><a href="../../d1/d19/classez_memory_stream_container_wrapper_storage.htm#ad43c76d2b35eaf0889209eeb3fa12610">ezMemoryStreamContainerWrapperStorage::Clear</a></div><div class="ttdeci">virtual void Clear() override</div><div class="ttdoc">Clears the entire storage. All readers and writers must be reset to start from the beginning again.</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:208</div></div>
<div class="ttc" id="astructez_result_htm"><div class="ttname"><a href="../../d4/da9/structez_result.htm">ezResult</a></div><div class="ttdoc">Default enum for returning failure or success, instead of using a bool.</div><div class="ttdef"><b>Definition:</b> Types.h:53</div></div>
<div class="ttc" id="aclassez_stream_writer_htm"><div class="ttname"><a href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a></div><div class="ttdoc">Interface for binary out (write) streams.</div><div class="ttdef"><b>Definition:</b> Stream.h:106</div></div>
<div class="ttc" id="aclassez_contiguous_memory_stream_storage_htm"><div class="ttname"><a href="../../db/da5/classez_contiguous_memory_stream_storage.htm">ezContiguousMemoryStreamStorage</a></div><div class="ttdef"><b>Definition:</b> MemoryStream.h:144</div></div>
<div class="ttc" id="aclassez_memory_stream_container_wrapper_storage_htm"><div class="ttname"><a href="../../d1/d19/classez_memory_stream_container_wrapper_storage.htm">ezMemoryStreamContainerWrapperStorage</a></div><div class="ttdoc">Wrapper around an existing container to implement ezMemoryStreamStorageInterface.</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:202</div></div>
<div class="ttc" id="aclassez_memory_stream_container_storage_htm_a01a251d692a002b158b952f75f4c60c9"><div class="ttname"><a href="../../db/d52/classez_memory_stream_container_storage.htm#a01a251d692a002b158b952f75f4c60c9">ezMemoryStreamContainerStorage::GetHeapMemoryUsage</a></div><div class="ttdeci">virtual ezUInt64 GetHeapMemoryUsage() const override</div><div class="ttdoc">Returns the amount of bytes that are currently allocated on the heap.</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:92</div></div>
<div class="ttc" id="aclassez_memory_stream_container_wrapper_storage_htm_ac5b8c970c93d6d5ac4b474df1608ad38"><div class="ttname"><a href="../../d1/d19/classez_memory_stream_container_wrapper_storage.htm#ac5b8c970c93d6d5ac4b474df1608ad38">ezMemoryStreamContainerWrapperStorage::GetContiguousMemoryRange</a></div><div class="ttdeci">virtual ezArrayPtr&lt; const ezUInt8 &gt; GetContiguousMemoryRange(ezUInt64 uiStartByte) const override</div><div class="ttdoc">Returns a read-only ezArrayPtr that represents a contiguous area in memory which starts at the given ...</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:239</div></div>
<div class="ttc" id="aclassez_memory_stream_container_wrapper_storage_htm_a490dc839c022f14519ad5eecd040ec83"><div class="ttname"><a href="../../d1/d19/classez_memory_stream_container_wrapper_storage.htm#a490dc839c022f14519ad5eecd040ec83">ezMemoryStreamContainerWrapperStorage::Compact</a></div><div class="ttdeci">virtual void Compact() override</div><div class="ttdoc">Deallocates any allocated memory that's not needed to hold the currently stored data.</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:215</div></div>
<div class="ttc" id="aclassez_stream_reader_htm"><div class="ttname"><a href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a></div><div class="ttdoc">Interface for binary in (read) streams.</div><div class="ttdef"><b>Definition:</b> Stream.h:21</div></div>
<div class="ttc" id="aclassez_memory_stream_writer_htm_af08645c253acbc17ac23c06bfa21fc20"><div class="ttname"><a href="../../dc/db9/classez_memory_stream_writer.htm#af08645c253acbc17ac23c06bfa21fc20">ezMemoryStreamWriter::SetStorage</a></div><div class="ttdeci">void SetStorage(ezMemoryStreamStorageInterface *pStreamStorage)</div><div class="ttdoc">Sets the storage object upon which to operate. Resets the write position to the end of the storage st...</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:348</div></div>
<div class="ttc" id="aclassez_memory_stream_storage_interface_htm_a8748556e40c116ec991772954753d787"><div class="ttname"><a href="../../d1/d42/classez_memory_stream_storage_interface.htm#a8748556e40c116ec991772954753d787">ezMemoryStreamStorageInterface::GetStorageSize32</a></div><div class="ttdeci">ezUInt32 GetStorageSize32() const</div><div class="ttdoc">Returns the number of bytes that are currently stored. Asserts that the stored amount is less than 4G...</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:24</div></div>
<div class="ttc" id="aclassez_memory_stream_container_storage_htm_ad79a357baa3e21e0b8db238d50124392"><div class="ttname"><a href="../../db/d52/classez_memory_stream_container_storage.htm#ad79a357baa3e21e0b8db238d50124392">ezMemoryStreamContainerStorage::GetContiguousMemoryRange</a></div><div class="ttdeci">virtual ezArrayPtr&lt; ezUInt8 &gt; GetContiguousMemoryRange(ezUInt64 uiStartByte) override</div><div class="ttdoc">Non-const overload of GetContiguousMemoryRange().</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:113</div></div>
<div class="ttc" id="aclassez_array_ptr_htm"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt; const ezUInt8 &gt;</a></div></div>
<div class="ttc" id="aclassez_memory_stream_container_wrapper_storage_htm_a41fb698d869f45ede3446ad38f4faf93"><div class="ttname"><a href="../../d1/d19/classez_memory_stream_container_wrapper_storage.htm#a41fb698d869f45ede3446ad38f4faf93">ezMemoryStreamContainerWrapperStorage::CopyToStream</a></div><div class="ttdeci">virtual ezResult CopyToStream(ezStreamWriter &amp;inout_stream) const override</div><div class="ttdoc">Writes the entire content of the storage to the provided stream.</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:234</div></div>
<div class="ttc" id="aclassez_memory_stream_reader_htm_a51755bb7f7f8a28453e15eda916a2181"><div class="ttname"><a href="../../da/d1f/classez_memory_stream_reader.htm#a51755bb7f7f8a28453e15eda916a2181">ezMemoryStreamReader::SetStorage</a></div><div class="ttdeci">void SetStorage(const ezMemoryStreamStorageInterface *pStreamStorage)</div><div class="ttdoc">Sets the storage object upon which to operate. Resets the read position to zero. Pass nullptr if you ...</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:295</div></div>
<div class="ttc" id="aclassez_memory_stream_storage_interface_htm_a4746c5119682e8fe17e4f0df2a0ffab0"><div class="ttname"><a href="../../d1/d42/classez_memory_stream_storage_interface.htm#a4746c5119682e8fe17e4f0df2a0ffab0">ezMemoryStreamStorageInterface::Reserve</a></div><div class="ttdeci">virtual void Reserve(ezUInt64 uiBytes)=0</div><div class="ttdoc">Reserves N bytes of storage.</div></div>
<div class="ttc" id="aclassez_memory_stream_container_storage_htm_ae2b167d5955630f55fbc213ff562c288"><div class="ttname"><a href="../../db/d52/classez_memory_stream_container_storage.htm#ae2b167d5955630f55fbc213ff562c288">ezMemoryStreamContainerStorage::Reserve</a></div><div class="ttdeci">virtual void Reserve(ezUInt64 uiBytes) override</div><div class="ttdoc">Reserves N bytes of storage.</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:94</div></div>
<div class="ttc" id="aclassez_memory_stream_storage_interface_htm_a11955ad5ce35a54e0d8a06c2993f628f"><div class="ttname"><a href="../../d1/d42/classez_memory_stream_storage_interface.htm#a11955ad5ce35a54e0d8a06c2993f628f">ezMemoryStreamStorageInterface::GetContiguousMemoryRange</a></div><div class="ttdeci">virtual ezArrayPtr&lt; const ezUInt8 &gt; GetContiguousMemoryRange(ezUInt64 uiStartByte) const =0</div><div class="ttdoc">Returns a read-only ezArrayPtr that represents a contiguous area in memory which starts at the given ...</div></div>
<div class="ttc" id="astructez_hybrid_string_htm"><div class="ttname"><a href="../../d4/d53/structez_hybrid_string.htm">ezHybridString</a></div><div class="ttdef"><b>Definition:</b> Stream.h:16</div></div>
<div class="ttc" id="aclassez_raw_memory_stream_writer_htm_ab074babf413596b17abcad9ba4fe4416"><div class="ttname"><a href="../../db/d19/classez_raw_memory_stream_writer.htm#ab074babf413596b17abcad9ba4fe4416">ezRawMemoryStreamWriter::ezRawMemoryStreamWriter</a></div><div class="ttdeci">ezRawMemoryStreamWriter(CONTAINER &amp;ref_container)</div><div class="ttdoc">Initialize the raw memory reader with the chunk of memory from a standard ez container.</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:455</div></div>
<div class="ttc" id="aclassez_memory_stream_storage_interface_htm_ac4f85ba0ce65e4481e41315f1c49036f"><div class="ttname"><a href="../../d1/d42/classez_memory_stream_storage_interface.htm#ac4f85ba0ce65e4481e41315f1c49036f">ezMemoryStreamStorageInterface::CopyToStream</a></div><div class="ttdeci">virtual ezResult CopyToStream(ezStreamWriter &amp;inout_stream) const =0</div><div class="ttdoc">Writes the entire content of the storage to the provided stream.</div></div>
<div class="ttc" id="aclassez_memory_stream_storage_interface_htm_a9a5cb59e5e77134eb778360213ddb0c7"><div class="ttname"><a href="../../d1/d42/classez_memory_stream_storage_interface.htm#a9a5cb59e5e77134eb778360213ddb0c7">ezMemoryStreamStorageInterface::GetHeapMemoryUsage</a></div><div class="ttdeci">virtual ezUInt64 GetHeapMemoryUsage() const =0</div><div class="ttdoc">Returns the amount of bytes that are currently allocated on the heap.</div></div>
<div class="ttc" id="aclassez_memory_stream_writer_htm_a7928be76923172a2d9674ba6b7a0b9d3"><div class="ttname"><a href="../../dc/db9/classez_memory_stream_writer.htm#a7928be76923172a2d9674ba6b7a0b9d3">ezMemoryStreamWriter::GetWritePosition</a></div><div class="ttdeci">ezUInt64 GetWritePosition() const</div><div class="ttdoc">Returns the current write position.</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:365</div></div>
<div class="ttc" id="aclassez_stream_reader_htm_a9b8ce20de04610d28b4118ff23b42020"><div class="ttname"><a href="../../d2/d19/classez_stream_reader.htm#a9b8ce20de04610d28b4118ff23b42020">ezStreamReader::ReadBytes</a></div><div class="ttdeci">virtual ezUInt64 ReadBytes(void *pReadBuffer, ezUInt64 uiBytesToRead)=0</div><div class="ttdoc">Reads a raw number of bytes into the read buffer, this is the only method which has to be implemented...</div></div>
<div class="ttc" id="aclassez_memory_stream_container_wrapper_storage_htm_afc7564817f5dfbd7e76f069d43989374"><div class="ttname"><a href="../../d1/d19/classez_memory_stream_container_wrapper_storage.htm#afc7564817f5dfbd7e76f069d43989374">ezMemoryStreamContainerWrapperStorage::Reserve</a></div><div class="ttdeci">virtual void Reserve(ezUInt64 uiBytes) override</div><div class="ttdoc">Reserves N bytes of storage.</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:225</div></div>
<div class="ttc" id="aclassez_default_memory_stream_storage_htm"><div class="ttname"><a href="../../d3/de8/classez_default_memory_stream_storage.htm">ezDefaultMemoryStreamStorage</a></div><div class="ttdoc">The default implementation for memory stream storage.</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:160</div></div>
<div class="ttc" id="aclassez_memory_stream_storage_interface_htm"><div class="ttname"><a href="../../d1/d42/classez_memory_stream_storage_interface.htm">ezMemoryStreamStorageInterface</a></div><div class="ttdoc">Instances of this class act as storage for memory streams.</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:17</div></div>
<div class="ttc" id="aclassez_raw_memory_stream_reader_htm_a0c5550ee691411b2c4c8d21849f1acff"><div class="ttname"><a href="../../da/d34/classez_raw_memory_stream_reader.htm#a0c5550ee691411b2c4c8d21849f1acff">ezRawMemoryStreamReader::GetReadPosition</a></div><div class="ttdeci">ezUInt64 GetReadPosition() const</div><div class="ttdoc">Returns the current read position in the raw memory block.</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:421</div></div>
<div class="ttc" id="aclassez_stream_writer_htm_a21fd5331a85b467ac9d5c11eecc3f0b0"><div class="ttname"><a href="../../d6/dcc/classez_stream_writer.htm#a21fd5331a85b467ac9d5c11eecc3f0b0">ezStreamWriter::WriteBytes</a></div><div class="ttdeci">virtual ezResult WriteBytes(const void *pWriteBuffer, ezUInt64 uiBytesToWrite)=0</div><div class="ttdoc">Writes a raw number of bytes from the buffer, this is the only method which has to be implemented to ...</div></div>
<div class="ttc" id="aclassez_memory_stream_container_storage_htm_a7f02ab86cbc281b163dce8da4b24ef47"><div class="ttname"><a href="../../db/d52/classez_memory_stream_container_storage.htm#a7f02ab86cbc281b163dce8da4b24ef47">ezMemoryStreamContainerStorage::Clear</a></div><div class="ttdeci">virtual void Clear() override</div><div class="ttdoc">Clears the entire storage. All readers and writers must be reset to start from the beginning again.</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:90</div></div>
<div class="ttc" id="aclassez_raw_memory_stream_reader_htm_a263273996c985451f74f700c04a222d5"><div class="ttname"><a href="../../da/d34/classez_raw_memory_stream_reader.htm#a263273996c985451f74f700c04a222d5">ezRawMemoryStreamReader::ezRawMemoryStreamReader</a></div><div class="ttdeci">ezRawMemoryStreamReader(const CONTAINER &amp;container)</div><div class="ttdoc">Initialize the raw memory reader with the chunk of memory from a standard ez container.</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:394</div></div>
<div class="ttc" id="aclassez_memory_stream_container_storage_htm_a31361c5cccfafb0f7f770167fa199999"><div class="ttname"><a href="../../db/d52/classez_memory_stream_container_storage.htm#a31361c5cccfafb0f7f770167fa199999">ezMemoryStreamContainerStorage::Compact</a></div><div class="ttdeci">virtual void Compact() override</div><div class="ttdoc">Deallocates any allocated memory that's not needed to hold the currently stored data.</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:91</div></div>
<div class="ttc" id="aclassez_memory_stream_writer_htm"><div class="ttname"><a href="../../dc/db9/classez_memory_stream_writer.htm">ezMemoryStreamWriter</a></div><div class="ttdoc">A writer which can access a memory stream.</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:338</div></div>
<div class="ttc" id="aclassez_memory_stream_container_wrapper_storage_htm_afcc74bd06ff899879315101627fded0e"><div class="ttname"><a href="../../d1/d19/classez_memory_stream_container_wrapper_storage.htm#afcc74bd06ff899879315101627fded0e">ezMemoryStreamContainerWrapperStorage::GetContiguousMemoryRange</a></div><div class="ttdeci">virtual ezArrayPtr&lt; ezUInt8 &gt; GetContiguousMemoryRange(ezUInt64 uiStartByte) override</div><div class="ttdoc">Non-const overload of GetContiguousMemoryRange().</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:247</div></div>
<div class="ttc" id="aclassez_memory_stream_container_wrapper_storage_htm_abf18b22547f561e29b3a2d1bbe34e97f"><div class="ttname"><a href="../../d1/d19/classez_memory_stream_container_wrapper_storage.htm#abf18b22547f561e29b3a2d1bbe34e97f">ezMemoryStreamContainerWrapperStorage::GetStorageSize64</a></div><div class="ttdeci">virtual ezUInt64 GetStorageSize64() const override</div><div class="ttdoc">Returns the number of bytes that are currently stored.</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:207</div></div>
<div class="ttc" id="aclassez_memory_stream_container_storage_htm_a4872ba60c3a5a81b1310ff6337335182"><div class="ttname"><a href="../../db/d52/classez_memory_stream_container_storage.htm#a4872ba60c3a5a81b1310ff6337335182">ezMemoryStreamContainerStorage::GetData</a></div><div class="ttdeci">const ezUInt8 * GetData() const</div><div class="ttdoc">The data is guaranteed to be contiguous.</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:122</div></div>
<div class="ttc" id="aclassez_memory_stream_storage_interface_htm_a3a91872a87615b776795ef6b85979c63"><div class="ttname"><a href="../../d1/d42/classez_memory_stream_storage_interface.htm#a3a91872a87615b776795ef6b85979c63">ezMemoryStreamStorageInterface::Clear</a></div><div class="ttdeci">virtual void Clear()=0</div><div class="ttdoc">Clears the entire storage. All readers and writers must be reset to start from the beginning again.</div></div>
<div class="ttc" id="aclassez_memory_stream_reader_htm_aaa4f77d06fba62cecb67a0290f559d2a"><div class="ttname"><a href="../../da/d1f/classez_memory_stream_reader.htm#aaa4f77d06fba62cecb67a0290f559d2a">ezMemoryStreamReader::GetReadPosition</a></div><div class="ttdeci">ezUInt64 GetReadPosition() const</div><div class="ttdoc">Returns the current read position.</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:313</div></div>
<div class="ttc" id="aclassez_allocator_htm"><div class="ttname"><a href="../../d0/dbb/classez_allocator.htm">ezAllocator</a></div><div class="ttdoc">Base class for all memory allocators.</div><div class="ttdef"><b>Definition:</b> Allocator.h:22</div></div>
<div class="ttc" id="aclassez_memory_stream_container_storage_htm_aabcff01890f7ae164d3308b0be7c15cb"><div class="ttname"><a href="../../db/d52/classez_memory_stream_container_storage.htm#aabcff01890f7ae164d3308b0be7c15cb">ezMemoryStreamContainerStorage::ezMemoryStreamContainerStorage</a></div><div class="ttdeci">ezMemoryStreamContainerStorage(ezUInt32 uiInitialCapacity=0, ezAllocator *pAllocator=ezFoundation::GetDefaultAllocator())</div><div class="ttdoc">Creates the storage object for a memory stream. Use uiInitialCapacity to reserve some memory up front...</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:83</div></div>
<div class="ttc" id="aclassez_memory_stream_reader_htm"><div class="ttname"><a href="../../da/d1f/classez_memory_stream_reader.htm">ezMemoryStreamReader</a></div><div class="ttdoc">A reader which can access a memory stream.</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:284</div></div>
<div class="ttc" id="aclassez_hybrid_array_htm"><div class="ttname"><a href="../../d8/deb/classez_hybrid_array.htm">ezHybridArray&lt; Chunk, 16 &gt;</a></div></div>
<div class="ttc" id="aclassez_raw_memory_stream_writer_htm"><div class="ttname"><a href="../../db/d19/classez_raw_memory_stream_writer.htm">ezRawMemoryStreamWriter</a></div><div class="ttdoc">Maps a raw chunk of memory to the ezStreamReader interface.</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:444</div></div>
<div class="ttc" id="aclassez_foundation_htm_a9fec1f3614e3ba19daf06f8c22c91f78"><div class="ttname"><a href="../../d0/d49/classez_foundation.htm#a9fec1f3614e3ba19daf06f8c22c91f78">ezFoundation::GetDefaultAllocator</a></div><div class="ttdeci">static EZ_ALWAYS_INLINE ezAllocator * GetDefaultAllocator()</div><div class="ttdoc">The default allocator can be used for any kind of allocation if no alignment is required.</div><div class="ttdef"><b>Definition:</b> Basics.h:67</div></div>
<div class="ttc" id="aclassez_stream_reader_htm_a09fe261037e80688b72337b15ee0a616"><div class="ttname"><a href="../../d2/d19/classez_stream_reader.htm#a09fe261037e80688b72337b15ee0a616">ezStreamReader::SkipBytes</a></div><div class="ttdeci">virtual ezUInt64 SkipBytes(ezUInt64 uiBytesToSkip)</div><div class="ttdoc">Helper method to skip a number of bytes (implementations of the stream reader may implement this more...</div><div class="ttdef"><b>Definition:</b> Stream.h:80</div></div>
<div class="ttc" id="aclassez_memory_stream_storage_interface_htm_a77d3974d1aae81dac24874afec8e6586"><div class="ttname"><a href="../../d1/d42/classez_memory_stream_storage_interface.htm#a77d3974d1aae81dac24874afec8e6586">ezMemoryStreamStorageInterface::GetStorageSize64</a></div><div class="ttdeci">virtual ezUInt64 GetStorageSize64() const =0</div><div class="ttdoc">Returns the number of bytes that are currently stored.</div></div>
<div class="ttc" id="aclassez_string_view_htm"><div class="ttname"><a href="../../d9/d18/classez_string_view.htm">ezStringView</a></div><div class="ttdoc">ezStringView represent a read-only sub-string of a larger string, as it can store a dedicated string ...</div><div class="ttdef"><b>Definition:</b> StringView.h:33</div></div>
<div class="ttc" id="aclassez_memory_stream_container_wrapper_storage_htm_a5cbc0e0e4b88199833e28709d15d6c08"><div class="ttname"><a href="../../d1/d19/classez_memory_stream_container_wrapper_storage.htm#a5cbc0e0e4b88199833e28709d15d6c08">ezMemoryStreamContainerWrapperStorage::GetHeapMemoryUsage</a></div><div class="ttdeci">virtual ezUInt64 GetHeapMemoryUsage() const override</div><div class="ttdoc">Returns the amount of bytes that are currently allocated on the heap.</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:223</div></div>
<div class="ttc" id="aclassez_memory_stream_container_storage_htm_ab10cdb2a82feda75bad745fad254cc54"><div class="ttname"><a href="../../db/d52/classez_memory_stream_container_storage.htm#ab10cdb2a82feda75bad745fad254cc54">ezMemoryStreamContainerStorage::GetStorageSize64</a></div><div class="ttdeci">virtual ezUInt64 GetStorageSize64() const override</div><div class="ttdoc">Returns the number of bytes that are currently stored.</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:89</div></div>
<div class="ttc" id="aclassez_raw_memory_stream_reader_htm"><div class="ttname"><a href="../../da/d34/classez_raw_memory_stream_reader.htm">ezRawMemoryStreamReader</a></div><div class="ttdoc">Maps a raw chunk of memory to the ezStreamReader interface.</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:383</div></div>
<div class="ttc" id="aclassez_memory_stream_container_storage_htm_ad30f60d058282a78d10a2d649f58d678"><div class="ttname"><a href="../../db/d52/classez_memory_stream_container_storage.htm#ad30f60d058282a78d10a2d649f58d678">ezMemoryStreamContainerStorage::GetContiguousMemoryRange</a></div><div class="ttdeci">virtual ezArrayPtr&lt; const ezUInt8 &gt; GetContiguousMemoryRange(ezUInt64 uiStartByte) const override</div><div class="ttdoc">Returns a read-only ezArrayPtr that represents a contiguous area in memory which starts at the given ...</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:105</div></div>
<div class="ttc" id="aclassez_memory_stream_container_storage_htm_ae73607ecca4791c83b989598a71dc1c9"><div class="ttname"><a href="../../db/d52/classez_memory_stream_container_storage.htm#ae73607ecca4791c83b989598a71dc1c9">ezMemoryStreamContainerStorage::CopyToStream</a></div><div class="ttdeci">virtual ezResult CopyToStream(ezStreamWriter &amp;inout_stream) const override</div><div class="ttdoc">Writes the entire content of the storage to the provided stream.</div><div class="ttdef"><b>Definition:</b> MemoryStream.h:100</div></div>
<div class="ttc" id="aclassez_memory_stream_storage_interface_htm_a53531fcd6b67bfef811466a5d59c99a0"><div class="ttname"><a href="../../d1/d42/classez_memory_stream_storage_interface.htm#a53531fcd6b67bfef811466a5d59c99a0">ezMemoryStreamStorageInterface::Compact</a></div><div class="ttdeci">virtual void Compact()=0</div><div class="ttdoc">Deallocates any allocated memory that's not needed to hold the currently stored data.</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_64fdcb4094ee5a27b054d4fa23e28e01.htm">IO</a></li><li class="navelem"><b>MemoryStream.h</b></li>
    <li class="footer">Generated on Mon Mar 3 2025 17:23:43 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
