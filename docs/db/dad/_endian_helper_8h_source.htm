<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Memory/EndianHelper.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 21.6</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('db/dad/_endian_helper_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">EndianHelper.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;Foundation/Basics.h&gt;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160; </div>
<div class="line"><a name="l00006"></a><span class="lineno"><a class="line" href="../../d5/d34/structez_endian_helper.htm">    6</a></span>&#160;<span class="keyword">struct </span>EZ_FOUNDATION_DLL <a class="code" href="../../d5/d34/structez_endian_helper.htm">ezEndianHelper</a></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;{</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160; </div>
<div class="line"><a name="l00012"></a><span class="lineno"><a class="line" href="../../d5/d34/structez_endian_helper.htm#ae4fe1e735c289aa524cd273d11870e3c">   12</a></span>&#160;  <span class="keyword">static</span> <span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="../../d5/d34/structez_endian_helper.htm#ae4fe1e735c289aa524cd273d11870e3c">IsBigEndian</a>()</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;  {</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> i = 1;</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;    <span class="keywordflow">return</span> (*(<span class="keywordtype">char</span>*)&amp;i) == 0;</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;  }</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160; </div>
<div class="line"><a name="l00021"></a><span class="lineno"><a class="line" href="../../d5/d34/structez_endian_helper.htm#a2c6fa336df95c35132d4782a76c1a42d">   21</a></span>&#160;  <span class="keyword">static</span> <span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="../../d5/d34/structez_endian_helper.htm#a2c6fa336df95c35132d4782a76c1a42d">IsLittleEndian</a>() { <span class="keywordflow">return</span> !IsBigEndian(); }</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160; </div>
<div class="line"><a name="l00024"></a><span class="lineno"><a class="line" href="../../d5/d34/structez_endian_helper.htm#a92bfb447431f736920e817568905bc1e">   24</a></span>&#160;  <span class="keyword">static</span> <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="../../d5/d34/structez_endian_helper.htm#a92bfb447431f736920e817568905bc1e">SwitchWords</a>(ezUInt16* pWords, ezUInt32 uiCount) <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;  {</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    <span class="keywordflow">for</span> (ezUInt32 i = 0; i &lt; uiCount; i++)</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;      pWords[i] = Switch(pWords[i]);</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  }</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160; </div>
<div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="../../d5/d34/structez_endian_helper.htm#abe39b0e4a393172956af36fbd0db0acc">   31</a></span>&#160;  <span class="keyword">static</span> <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="../../d5/d34/structez_endian_helper.htm#abe39b0e4a393172956af36fbd0db0acc">SwitchDWords</a>(ezUInt32* pDWords, ezUInt32 uiCount) <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;  {</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    <span class="keywordflow">for</span> (ezUInt32 i = 0; i &lt; uiCount; i++)</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;      pDWords[i] = Switch(pDWords[i]);</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;  }</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160; </div>
<div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="../../d5/d34/structez_endian_helper.htm#a6866ec2db218dfa47c14978c1ba7c7be">   38</a></span>&#160;  <span class="keyword">static</span> <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="../../d5/d34/structez_endian_helper.htm#a6866ec2db218dfa47c14978c1ba7c7be">SwitchQWords</a>(ezUInt64* pQWords, ezUInt32 uiCount) <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;  {</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <span class="keywordflow">for</span> (ezUInt32 i = 0; i &lt; uiCount; i++)</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;      pQWords[i] = Switch(pQWords[i]);</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;  }</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160; </div>
<div class="line"><a name="l00045"></a><span class="lineno"><a class="line" href="../../d5/d34/structez_endian_helper.htm#a957270835a356c54a8c80be82c8b30eb">   45</a></span>&#160;  <span class="keyword">static</span> EZ_ALWAYS_INLINE ezUInt16 <a class="code" href="../../d5/d34/structez_endian_helper.htm#a957270835a356c54a8c80be82c8b30eb">Switch</a>(ezUInt16 uiWord) <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;  {</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <span class="keywordflow">return</span> (((uiWord &amp; 0xFF) &lt;&lt; 8) | ((uiWord &gt;&gt; 8) &amp; 0xFF));</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;  }</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160; </div>
<div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="../../d5/d34/structez_endian_helper.htm#a2cf8433c83262ec43334f266af2f5fcb">   51</a></span>&#160;  <span class="keyword">static</span> EZ_ALWAYS_INLINE ezUInt32 <a class="code" href="../../d5/d34/structez_endian_helper.htm#a2cf8433c83262ec43334f266af2f5fcb">Switch</a>(ezUInt32 uiDWord) <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  {</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keywordflow">return</span> (((uiDWord &amp; 0xFF) &lt;&lt; 24) | (((uiDWord &gt;&gt; 8) &amp; 0xFF) &lt;&lt; 16) | (((uiDWord &gt;&gt; 16) &amp; 0xFF) &lt;&lt; 8) | ((uiDWord &gt;&gt; 24) &amp; 0xFF));</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;  }</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160; </div>
<div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="../../d5/d34/structez_endian_helper.htm#aaa3192f205b9f7c7ab9e358886660315">   57</a></span>&#160;  <span class="keyword">static</span> EZ_ALWAYS_INLINE ezUInt64 <a class="code" href="../../d5/d34/structez_endian_helper.htm#aaa3192f205b9f7c7ab9e358886660315">Switch</a>(ezUInt64 uiQWord) <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  {</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    <span class="keywordflow">return</span> (((uiQWord &amp; 0xFF) &lt;&lt; 56) | ((uiQWord &amp; 0xFF00) &lt;&lt; 40) | ((uiQWord &amp; 0xFF0000) &lt;&lt; 24) | ((uiQWord &amp; 0xFF000000) &lt;&lt; 8) |</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;            ((uiQWord &amp; 0xFF00000000) &gt;&gt; 8) | ((uiQWord &amp; 0xFF0000000000) &gt;&gt; 24) | ((uiQWord &amp; 0xFF000000000000) &gt;&gt; 40) |</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;            ((uiQWord &amp; 0xFF00000000000000) &gt;&gt; 56));</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;  }</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160; </div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00066"></a><span class="lineno"><a class="line" href="../../d5/d34/structez_endian_helper.htm#af227a8e3230fa35d538b9288a1e164b0">   66</a></span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../d5/d34/structez_endian_helper.htm#af227a8e3230fa35d538b9288a1e164b0">SwitchInPlace</a>(T* pValue) <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;  {</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    EZ_CHECK_AT_COMPILETIME_MSG(</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;      (<span class="keyword">sizeof</span>(T) == 2 || <span class="keyword">sizeof</span>(T) == 4 || <span class="keyword">sizeof</span>(T) == 8), <span class="stringliteral">&quot;Switch in place only works for type equivalents of ezUInt16, ezUInt32, ezUInt64!&quot;</span>);</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160; </div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keywordflow">if</span> (<span class="keyword">sizeof</span>(T) == 2)</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    {</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;      <span class="keyword">struct </span>TAnd16BitUnion</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;      {</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <span class="keyword">union</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        {</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;          ezUInt16 BitValue;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;          T TValue;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        };</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;      };</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160; </div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;      TAnd16BitUnion Temp;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;      Temp.TValue = *pValue;</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;      Temp.BitValue = Switch(Temp.BitValue);</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160; </div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;      *pValue = Temp.TValue;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    }</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<span class="keyword">sizeof</span>(T) == 4)</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    {</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;      <span class="keyword">struct </span>TAnd32BitUnion</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;      {</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        <span class="keyword">union</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;        {</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;          ezUInt32 BitValue;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;          T TValue;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        };</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;      };</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160; </div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;      TAnd32BitUnion Temp;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;      Temp.TValue = *pValue;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;      Temp.BitValue = Switch(Temp.BitValue);</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160; </div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;      *pValue = Temp.TValue;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    }</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<span class="keyword">sizeof</span>(T) == 8)</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    {</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;      <span class="keyword">struct </span>TAnd64BitUnion</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;      {</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;        <span class="keyword">union</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        {</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;          ezUInt64 BitValue;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;          T TValue;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;        };</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;      };</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160; </div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;      TAnd64BitUnion Temp;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;      Temp.TValue = *pValue;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;      Temp.BitValue = Switch(Temp.BitValue);</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160; </div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;      *pValue = Temp.TValue;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    }</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;  }</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160; </div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="preprocessor">#if EZ_ENABLED(EZ_PLATFORM_LITTLE_ENDIAN)</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160; </div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;  <span class="keyword">static</span> EZ_ALWAYS_INLINE <span class="keywordtype">void</span> LittleEndianToNative(ezUInt16* <span class="comment">/*pWords*/</span>, ezUInt32 <span class="comment">/*uiCount*/</span>)</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;  {</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;  }</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160; </div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;  <span class="keyword">static</span> EZ_ALWAYS_INLINE <span class="keywordtype">void</span> NativeToLittleEndian(ezUInt16* <span class="comment">/*pWords*/</span>, ezUInt32 <span class="comment">/*uiCount*/</span>) {}</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160; </div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;  <span class="keyword">static</span> EZ_ALWAYS_INLINE <span class="keywordtype">void</span> LittleEndianToNative(ezUInt32* <span class="comment">/*pDWords*/</span>, ezUInt32 <span class="comment">/*uiCount*/</span>) {}</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160; </div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;  <span class="keyword">static</span> EZ_ALWAYS_INLINE <span class="keywordtype">void</span> NativeToLittleEndian(ezUInt32* <span class="comment">/*pDWords*/</span>, ezUInt32 <span class="comment">/*uiCount*/</span>) {}</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160; </div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;  <span class="keyword">static</span> EZ_ALWAYS_INLINE <span class="keywordtype">void</span> LittleEndianToNative(ezUInt64* <span class="comment">/*pQWords*/</span>, ezUInt32 <span class="comment">/*uiCount*/</span>) {}</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160; </div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;  <span class="keyword">static</span> EZ_ALWAYS_INLINE <span class="keywordtype">void</span> NativeToLittleEndian(ezUInt64* <span class="comment">/*pQWords*/</span>, ezUInt32 <span class="comment">/*uiCount*/</span>) {}</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160; </div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;  <span class="keyword">static</span> EZ_ALWAYS_INLINE <span class="keywordtype">void</span> BigEndianToNative(ezUInt16* pWords, ezUInt32 uiCount) { SwitchWords(pWords, uiCount); }</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160; </div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;  <span class="keyword">static</span> EZ_ALWAYS_INLINE <span class="keywordtype">void</span> NativeToBigEndian(ezUInt16* pWords, ezUInt32 uiCount) { SwitchWords(pWords, uiCount); }</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160; </div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;  <span class="keyword">static</span> EZ_ALWAYS_INLINE <span class="keywordtype">void</span> BigEndianToNative(ezUInt32* pDWords, ezUInt32 uiCount) { SwitchDWords(pDWords, uiCount); }</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160; </div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;  <span class="keyword">static</span> EZ_ALWAYS_INLINE <span class="keywordtype">void</span> NativeToBigEndian(ezUInt32* pDWords, ezUInt32 uiCount) { SwitchDWords(pDWords, uiCount); }</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160; </div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;  <span class="keyword">static</span> EZ_ALWAYS_INLINE <span class="keywordtype">void</span> BigEndianToNative(ezUInt64* pQWords, ezUInt32 uiCount) { SwitchQWords(pQWords, uiCount); }</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160; </div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;  <span class="keyword">static</span> EZ_ALWAYS_INLINE <span class="keywordtype">void</span> NativeToBigEndian(ezUInt64* pQWords, ezUInt32 uiCount) { SwitchQWords(pQWords, uiCount); }</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160; </div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="preprocessor">#elif EZ_ENABLED(EZ_PLATFORM_BIG_ENDIAN)</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160; </div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;  <span class="keyword">static</span> EZ_ALWAYS_INLINE <span class="keywordtype">void</span> LittleEndianToNative(ezUInt16* pWords, ezUInt32 uiCount)</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;  {</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    SwitchWords(pWords, uiCount);</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;  }</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160; </div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;  <span class="keyword">static</span> EZ_ALWAYS_INLINE <span class="keywordtype">void</span> NativeToLittleEndian(ezUInt16* pWords, ezUInt32 uiCount) { SwitchWords(pWords, uiCount); }</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160; </div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;  <span class="keyword">static</span> EZ_ALWAYS_INLINE <span class="keywordtype">void</span> LittleEndianToNative(ezUInt32* pDWords, ezUInt32 uiCount) { SwitchDWords(pDWords, uiCount); }</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160; </div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;  <span class="keyword">static</span> EZ_ALWAYS_INLINE <span class="keywordtype">void</span> NativeToLittleEndian(ezUInt32* pDWords, ezUInt32 uiCount) { SwitchDWords(pDWords, uiCount); }</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160; </div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;  <span class="keyword">static</span> EZ_ALWAYS_INLINE <span class="keywordtype">void</span> LittleEndianToNative(ezUInt64* pQWords, ezUInt32 uiCount) { SwitchQWords(pQWords, uiCount); }</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160; </div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;  <span class="keyword">static</span> EZ_ALWAYS_INLINE <span class="keywordtype">void</span> NativeToLittleEndian(ezUInt64* pQWords, ezUInt32 uiCount) { SwitchQWords(pQWords, uiCount); }</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160; </div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;  <span class="keyword">static</span> EZ_ALWAYS_INLINE <span class="keywordtype">void</span> BigEndianToNative(ezUInt16* <span class="comment">/*pWords*/</span>, ezUInt32 <span class="comment">/*uiCount*/</span>) {}</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160; </div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;  <span class="keyword">static</span> EZ_ALWAYS_INLINE <span class="keywordtype">void</span> NativeToBigEndian(ezUInt16* <span class="comment">/*pWords*/</span>, ezUInt32 <span class="comment">/*uiCount*/</span>) {}</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160; </div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;  <span class="keyword">static</span> EZ_ALWAYS_INLINE <span class="keywordtype">void</span> BigEndianToNative(ezUInt32* <span class="comment">/*pWords*/</span>, ezUInt32 <span class="comment">/*uiCount*/</span>) {}</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160; </div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;  <span class="keyword">static</span> EZ_ALWAYS_INLINE <span class="keywordtype">void</span> NativeToBigEndian(ezUInt32* <span class="comment">/*pWords*/</span>, ezUInt32 <span class="comment">/*uiCount*/</span>) {}</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160; </div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;  <span class="keyword">static</span> EZ_ALWAYS_INLINE <span class="keywordtype">void</span> BigEndianToNative(ezUInt64* <span class="comment">/*pWords*/</span>, ezUInt32 <span class="comment">/*uiCount*/</span>) {}</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160; </div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;  <span class="keyword">static</span> EZ_ALWAYS_INLINE <span class="keywordtype">void</span> NativeToBigEndian(ezUInt64* <span class="comment">/*pWords*/</span>, ezUInt32 <span class="comment">/*uiCount*/</span>) {}</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160; </div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160; </div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160; </div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> SwitchStruct(<span class="keywordtype">void</span>* pDataPointer, <span class="keyword">const</span> <span class="keywordtype">char</span>* szFormat);</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160; </div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00195"></a><span class="lineno"><a class="line" href="../../d5/d34/structez_endian_helper.htm#ad9a208ef533fde25494ca48651f4cd7b">  195</a></span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../d5/d34/structez_endian_helper.htm#ad9a208ef533fde25494ca48651f4cd7b">SwitchStruct</a>(T* pDataPointer, <span class="keyword">const</span> <span class="keywordtype">char</span>* szFormat) <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;  {</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    SwitchStruct(<span class="keyword">static_cast&lt;</span><span class="keywordtype">void</span>*<span class="keyword">&gt;</span>(pDataPointer), szFormat);</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;  }</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160; </div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> SwitchStructs(<span class="keywordtype">void</span>* pDataPointer, <span class="keyword">const</span> <span class="keywordtype">char</span>* szFormat, ezUInt32 uiStride, ezUInt32 uiCount); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160; </div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00211"></a><span class="lineno"><a class="line" href="../../d5/d34/structez_endian_helper.htm#a8a49255d2b15cc34191726f6be43184d">  211</a></span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../d5/d34/structez_endian_helper.htm#a8a49255d2b15cc34191726f6be43184d">SwitchStructs</a>(T* pDataPointer, <span class="keyword">const</span> <span class="keywordtype">char</span>* szFormat, ezUInt32 uiCount) <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;  {</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    SwitchStructs(<span class="keyword">static_cast&lt;</span><span class="keywordtype">void</span>*<span class="keyword">&gt;</span>(pDataPointer), szFormat, <span class="keyword">sizeof</span>(T), uiCount);</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;  }</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;};</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="astructez_endian_helper_htm_aaa3192f205b9f7c7ab9e358886660315"><div class="ttname"><a href="../../d5/d34/structez_endian_helper.htm#aaa3192f205b9f7c7ab9e358886660315">ezEndianHelper::Switch</a></div><div class="ttdeci">static EZ_ALWAYS_INLINE ezUInt64 Switch(ezUInt64 uiQWord)</div><div class="ttdoc">Returns a single switched quad word (64 bit value).</div><div class="ttdef"><b>Definition:</b> EndianHelper.h:57</div></div>
<div class="ttc" id="astructez_endian_helper_htm_a2c6fa336df95c35132d4782a76c1a42d"><div class="ttname"><a href="../../d5/d34/structez_endian_helper.htm#a2c6fa336df95c35132d4782a76c1a42d">ezEndianHelper::IsLittleEndian</a></div><div class="ttdeci">static bool IsLittleEndian()</div><div class="ttdoc">Returns true if called on a little endian system, false otherwise.</div><div class="ttdef"><b>Definition:</b> EndianHelper.h:21</div></div>
<div class="ttc" id="astructez_endian_helper_htm"><div class="ttname"><a href="../../d5/d34/structez_endian_helper.htm">ezEndianHelper</a></div><div class="ttdoc">Collection of helper methods when working with endianess &quot;problems&quot;.</div><div class="ttdef"><b>Definition:</b> EndianHelper.h:6</div></div>
<div class="ttc" id="astructez_endian_helper_htm_ad9a208ef533fde25494ca48651f4cd7b"><div class="ttname"><a href="../../d5/d34/structez_endian_helper.htm#ad9a208ef533fde25494ca48651f4cd7b">ezEndianHelper::SwitchStruct</a></div><div class="ttdeci">static void SwitchStruct(T *pDataPointer, const char *szFormat)</div><div class="ttdoc">Templated helper method for SwitchStruct.</div><div class="ttdef"><b>Definition:</b> EndianHelper.h:195</div></div>
<div class="ttc" id="astructez_endian_helper_htm_abe39b0e4a393172956af36fbd0db0acc"><div class="ttname"><a href="../../d5/d34/structez_endian_helper.htm#abe39b0e4a393172956af36fbd0db0acc">ezEndianHelper::SwitchDWords</a></div><div class="ttdeci">static void SwitchDWords(ezUInt32 *pDWords, ezUInt32 uiCount)</div><div class="ttdoc">Switches endianess of the given array of double words (32 bit values).</div><div class="ttdef"><b>Definition:</b> EndianHelper.h:31</div></div>
<div class="ttc" id="astructez_endian_helper_htm_ae4fe1e735c289aa524cd273d11870e3c"><div class="ttname"><a href="../../d5/d34/structez_endian_helper.htm#ae4fe1e735c289aa524cd273d11870e3c">ezEndianHelper::IsBigEndian</a></div><div class="ttdeci">static bool IsBigEndian()</div><div class="ttdoc">Returns true if called on a big endian system, false otherwise.</div><div class="ttdef"><b>Definition:</b> EndianHelper.h:12</div></div>
<div class="ttc" id="astructez_endian_helper_htm_a6866ec2db218dfa47c14978c1ba7c7be"><div class="ttname"><a href="../../d5/d34/structez_endian_helper.htm#a6866ec2db218dfa47c14978c1ba7c7be">ezEndianHelper::SwitchQWords</a></div><div class="ttdeci">static void SwitchQWords(ezUInt64 *pQWords, ezUInt32 uiCount)</div><div class="ttdoc">Switches endianess of the given array of quad words (64 bit values).</div><div class="ttdef"><b>Definition:</b> EndianHelper.h:38</div></div>
<div class="ttc" id="astructez_endian_helper_htm_a92bfb447431f736920e817568905bc1e"><div class="ttname"><a href="../../d5/d34/structez_endian_helper.htm#a92bfb447431f736920e817568905bc1e">ezEndianHelper::SwitchWords</a></div><div class="ttdeci">static void SwitchWords(ezUInt16 *pWords, ezUInt32 uiCount)</div><div class="ttdoc">Switches endianess of the given array of words (16 bit values).</div><div class="ttdef"><b>Definition:</b> EndianHelper.h:24</div></div>
<div class="ttc" id="astructez_endian_helper_htm_af227a8e3230fa35d538b9288a1e164b0"><div class="ttname"><a href="../../d5/d34/structez_endian_helper.htm#af227a8e3230fa35d538b9288a1e164b0">ezEndianHelper::SwitchInPlace</a></div><div class="ttdeci">static void SwitchInPlace(T *pValue)</div><div class="ttdoc">Switches a value in place (template accepts pointers for 2, 4 &amp; 8 byte data types)</div><div class="ttdef"><b>Definition:</b> EndianHelper.h:66</div></div>
<div class="ttc" id="astructez_endian_helper_htm_a8a49255d2b15cc34191726f6be43184d"><div class="ttname"><a href="../../d5/d34/structez_endian_helper.htm#a8a49255d2b15cc34191726f6be43184d">ezEndianHelper::SwitchStructs</a></div><div class="ttdeci">static void SwitchStructs(T *pDataPointer, const char *szFormat, ezUInt32 uiCount)</div><div class="ttdoc">Templated helper method for SwitchStructs.</div><div class="ttdef"><b>Definition:</b> EndianHelper.h:211</div></div>
<div class="ttc" id="astructez_endian_helper_htm_a957270835a356c54a8c80be82c8b30eb"><div class="ttname"><a href="../../d5/d34/structez_endian_helper.htm#a957270835a356c54a8c80be82c8b30eb">ezEndianHelper::Switch</a></div><div class="ttdeci">static EZ_ALWAYS_INLINE ezUInt16 Switch(ezUInt16 uiWord)</div><div class="ttdoc">Returns a single switched word (16 bit value).</div><div class="ttdef"><b>Definition:</b> EndianHelper.h:45</div></div>
<div class="ttc" id="astructez_endian_helper_htm_a2cf8433c83262ec43334f266af2f5fcb"><div class="ttname"><a href="../../d5/d34/structez_endian_helper.htm#a2cf8433c83262ec43334f266af2f5fcb">ezEndianHelper::Switch</a></div><div class="ttdeci">static EZ_ALWAYS_INLINE ezUInt32 Switch(ezUInt32 uiDWord)</div><div class="ttdoc">Returns a single switched double word (32 bit value).</div><div class="ttdef"><b>Definition:</b> EndianHelper.h:51</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_adb0ac2a169525f5fa05f0527c58e205.htm">Memory</a></li><li class="navelem"><b>EndianHelper.h</b></li>
    <li class="footer">Generated on Tue Jun 8 2021 21:43:11 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
