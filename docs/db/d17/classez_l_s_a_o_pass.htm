<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: ezLSAOPass Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">ezEngine<span id="projectnumber">&#160;Release 25.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('db/d17/classez_l_s_a_o_pass.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="../../d0/d0e/classez_l_s_a_o_pass-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">ezLSAOPass Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="../../d0/dd9/_l_s_a_o_pass_8h_source.htm">LSAOPass.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for ezLSAOPass:</div>
<div class="dyncontent">
<div class="center"><img src="../../de/d9d/classez_l_s_a_o_pass__inherit__graph.png" border="0" usemap="#aez_l_s_a_o_pass_inherit__map" alt="Inheritance graph"/></div>
<map name="aez_l_s_a_o_pass_inherit__map" id="aez_l_s_a_o_pass_inherit__map">
<area shape="rect" title=" " alt="" coords="39,299,141,324"/>
<area shape="rect" href="../../d1/d0d/classez_render_pipeline_pass.htm" title=" " alt="" coords="8,225,172,251"/>
<area shape="poly" title=" " alt="" coords="93,264,93,299,87,299,87,264"/>
<area shape="rect" href="../../de/dd2/classez_render_pipeline_node.htm" title=" " alt="" coords="5,152,175,177"/>
<area shape="poly" title=" " alt="" coords="93,191,93,225,87,225,87,191"/>
<area shape="rect" href="../../db/d45/classez_reflected_class.htm" title="All classes that should be dynamically reflectable, need to be derived from this base class." alt="" coords="23,79,157,104"/>
<area shape="poly" title=" " alt="" coords="93,118,93,152,87,152,87,118"/>
<area shape="rect" href="../../d4/d02/classez_no_base.htm" title="Dummy type to pass to templates and macros that expect a base type for a class that has no base." alt="" coords="47,5,133,31"/>
<area shape="poly" title=" " alt="" coords="93,44,93,79,87,79,87,44"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ad37d7d28c31ed217d3a4b80425c6e743" id="r_ad37d7d28c31ed217d3a4b80425c6e743"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d17/classez_l_s_a_o_pass.htm#ad37d7d28c31ed217d3a4b80425c6e743">GetRenderTargetDescriptions</a> (const <a class="el" href="../../d2/d23/classez_view.htm">ezView</a> &amp;view, const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; <a class="el" href="../../da/dad/structez_g_a_l_texture_creation_description.htm">ezGALTextureCreationDescription</a> *const &gt; inputs, <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; <a class="el" href="../../da/dad/structez_g_a_l_texture_creation_description.htm">ezGALTextureCreationDescription</a> &gt; outputs) override</td></tr>
<tr class="memdesc:ad37d7d28c31ed217d3a4b80425c6e743"><td class="mdescLeft">&#160;</td><td class="mdescRight">For a given input pin configuration, provide the output configuration of this node. Outputs is already resized to the number of output pins.  <br /></td></tr>
<tr class="separator:ad37d7d28c31ed217d3a4b80425c6e743"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a829881fbdcc2df78de4e90ebc423cf32" id="r_a829881fbdcc2df78de4e90ebc423cf32"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d17/classez_l_s_a_o_pass.htm#a829881fbdcc2df78de4e90ebc423cf32">InitRenderPipelinePass</a> (const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; <a class="el" href="../../d5/d3f/structez_render_pipeline_pass_connection.htm">ezRenderPipelinePassConnection</a> *const &gt; inputs, const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; <a class="el" href="../../d5/d3f/structez_render_pipeline_pass_connection.htm">ezRenderPipelinePassConnection</a> *const &gt; outputs) override</td></tr>
<tr class="memdesc:a829881fbdcc2df78de4e90ebc423cf32"><td class="mdescLeft">&#160;</td><td class="mdescRight">After GetRenderTargetDescriptions was called successfully for each pass, this function is called with the inputs and outputs for review. Disconnected pins have a nullptr value in the passed in arrays. This is the time to create additional resources that are not covered by the pins automatically, e.g. a picking texture or eye adaptation buffer.  <br /></td></tr>
<tr class="separator:a829881fbdcc2df78de4e90ebc423cf32"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aebd2155cf85131aa1758980a2086e357" id="r_aebd2155cf85131aa1758980a2086e357"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d17/classez_l_s_a_o_pass.htm#aebd2155cf85131aa1758980a2086e357">Execute</a> (const <a class="el" href="../../d7/d76/structez_render_view_context.htm">ezRenderViewContext</a> &amp;renderViewContext, const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; <a class="el" href="../../d5/d3f/structez_render_pipeline_pass_connection.htm">ezRenderPipelinePassConnection</a> *const &gt; inputs, const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; <a class="el" href="../../d5/d3f/structez_render_pipeline_pass_connection.htm">ezRenderPipelinePassConnection</a> *const &gt; outputs) override</td></tr>
<tr class="memdesc:aebd2155cf85131aa1758980a2086e357"><td class="mdescLeft">&#160;</td><td class="mdescRight">Render into outputs. Both inputs and outputs are passed in with actual texture handles. Disconnected pins have a nullptr value in the passed in arrays. You can now create views and render target setups on the fly and fill the output targets with data.  <br /></td></tr>
<tr class="separator:aebd2155cf85131aa1758980a2086e357"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac86945e263c8dd6afff5113348a99d71" id="r_ac86945e263c8dd6afff5113348a99d71"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d17/classez_l_s_a_o_pass.htm#ac86945e263c8dd6afff5113348a99d71">ExecuteInactive</a> (const <a class="el" href="../../d7/d76/structez_render_view_context.htm">ezRenderViewContext</a> &amp;renderViewContext, const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; <a class="el" href="../../d5/d3f/structez_render_pipeline_pass_connection.htm">ezRenderPipelinePassConnection</a> *const &gt; inputs, const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; <a class="el" href="../../d5/d3f/structez_render_pipeline_pass_connection.htm">ezRenderPipelinePassConnection</a> *const &gt; outputs) override</td></tr>
<tr class="separator:ac86945e263c8dd6afff5113348a99d71"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adda393db8796d5c94024eec3b5638da5" id="r_adda393db8796d5c94024eec3b5638da5"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../d4/da9/structez_result.htm">ezResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d17/classez_l_s_a_o_pass.htm#adda393db8796d5c94024eec3b5638da5">Serialize</a> (<a class="el" href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a> &amp;inout_stream) const override</td></tr>
<tr class="separator:adda393db8796d5c94024eec3b5638da5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0181733cb4f37bf19893393d5bb8c90c" id="r_a0181733cb4f37bf19893393d5bb8c90c"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../d4/da9/structez_result.htm">ezResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d17/classez_l_s_a_o_pass.htm#a0181733cb4f37bf19893393d5bb8c90c">Deserialize</a> (<a class="el" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a> &amp;inout_stream) override</td></tr>
<tr class="separator:a0181733cb4f37bf19893393d5bb8c90c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d582dbfcb60f2526c7c0d3eb5ed0618" id="r_a4d582dbfcb60f2526c7c0d3eb5ed0618"><td class="memItemLeft" align="right" valign="top"><a id="a4d582dbfcb60f2526c7c0d3eb5ed0618" name="a4d582dbfcb60f2526c7c0d3eb5ed0618"></a>
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetLineToLinePixelOffset</b> () const</td></tr>
<tr class="separator:a4d582dbfcb60f2526c7c0d3eb5ed0618"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3586954b5a52199983bf6500b2c2e371" id="r_a3586954b5a52199983bf6500b2c2e371"><td class="memItemLeft" align="right" valign="top"><a id="a3586954b5a52199983bf6500b2c2e371" name="a3586954b5a52199983bf6500b2c2e371"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetLineToLinePixelOffset</b> (ezUInt32 uiPixelOffset)</td></tr>
<tr class="separator:a3586954b5a52199983bf6500b2c2e371"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac927f691b453c50d980ad93d3ed41e82" id="r_ac927f691b453c50d980ad93d3ed41e82"><td class="memItemLeft" align="right" valign="top"><a id="ac927f691b453c50d980ad93d3ed41e82" name="ac927f691b453c50d980ad93d3ed41e82"></a>
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetLineSamplePixelOffset</b> () const</td></tr>
<tr class="separator:ac927f691b453c50d980ad93d3ed41e82"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a5471e2d295ddaff34bd4d86b378ed2" id="r_a9a5471e2d295ddaff34bd4d86b378ed2"><td class="memItemLeft" align="right" valign="top"><a id="a9a5471e2d295ddaff34bd4d86b378ed2" name="a9a5471e2d295ddaff34bd4d86b378ed2"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetLineSamplePixelOffset</b> (ezUInt32 uiPixelOffset)</td></tr>
<tr class="separator:a9a5471e2d295ddaff34bd4d86b378ed2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8fb8e765bc274745035e15cde5ccc988" id="r_a8fb8e765bc274745035e15cde5ccc988"><td class="memItemLeft" align="right" valign="top"><a id="a8fb8e765bc274745035e15cde5ccc988" name="a8fb8e765bc274745035e15cde5ccc988"></a>
float&#160;</td><td class="memItemRight" valign="bottom"><b>GetDepthCutoffDistance</b> () const</td></tr>
<tr class="separator:a8fb8e765bc274745035e15cde5ccc988"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acab3cdf7678f9bd43e3d7cd3b574148b" id="r_acab3cdf7678f9bd43e3d7cd3b574148b"><td class="memItemLeft" align="right" valign="top"><a id="acab3cdf7678f9bd43e3d7cd3b574148b" name="acab3cdf7678f9bd43e3d7cd3b574148b"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetDepthCutoffDistance</b> (float fDepthCutoffDistance)</td></tr>
<tr class="separator:acab3cdf7678f9bd43e3d7cd3b574148b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab08d841ea1b462eec75017ab05c8f75b" id="r_ab08d841ea1b462eec75017ab05c8f75b"><td class="memItemLeft" align="right" valign="top"><a id="ab08d841ea1b462eec75017ab05c8f75b" name="ab08d841ea1b462eec75017ab05c8f75b"></a>
float&#160;</td><td class="memItemRight" valign="bottom"><b>GetOcclusionFalloff</b> () const</td></tr>
<tr class="separator:ab08d841ea1b462eec75017ab05c8f75b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8ad4615b4bd222960311e4fb0b710fce" id="r_a8ad4615b4bd222960311e4fb0b710fce"><td class="memItemLeft" align="right" valign="top"><a id="a8ad4615b4bd222960311e4fb0b710fce" name="a8ad4615b4bd222960311e4fb0b710fce"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetOcclusionFalloff</b> (float fFalloff)</td></tr>
<tr class="separator:a8ad4615b4bd222960311e4fb0b710fce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classez_render_pipeline_pass"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classez_render_pipeline_pass')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../d1/d0d/classez_render_pipeline_pass.htm">ezRenderPipelinePass</a></td></tr>
<tr class="memitem:a3ca39ec398488b94ebc1a12e256632e2 inherit pub_methods_classez_render_pipeline_pass" id="r_a3ca39ec398488b94ebc1a12e256632e2"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>ezRenderPipelinePass</b> (const char *szName, bool bIsStereoAware=false)</td></tr>
<tr class="separator:a3ca39ec398488b94ebc1a12e256632e2 inherit pub_methods_classez_render_pipeline_pass"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad76fefc9d0a60ae7e18366d14f71ec6c inherit pub_methods_classez_render_pipeline_pass" id="r_ad76fefc9d0a60ae7e18366d14f71ec6c"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetName</b> (const char *szName)</td></tr>
<tr class="memdesc:ad76fefc9d0a60ae7e18366d14f71ec6c inherit pub_methods_classez_render_pipeline_pass"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the name of the pass. <br /></td></tr>
<tr class="separator:ad76fefc9d0a60ae7e18366d14f71ec6c inherit pub_methods_classez_render_pipeline_pass"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f11834c0e221063911fb6f380cd560f inherit pub_methods_classez_render_pipeline_pass" id="r_a0f11834c0e221063911fb6f380cd560f"><td class="memItemLeft" align="right" valign="top">
const char *&#160;</td><td class="memItemRight" valign="bottom"><b>GetName</b> () const</td></tr>
<tr class="memdesc:a0f11834c0e221063911fb6f380cd560f inherit pub_methods_classez_render_pipeline_pass"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns the name of the pass. <br /></td></tr>
<tr class="separator:a0f11834c0e221063911fb6f380cd560f inherit pub_methods_classez_render_pipeline_pass"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa45954c7cf15f480180f23110134069b inherit pub_methods_classez_render_pipeline_pass" id="r_aa45954c7cf15f480180f23110134069b"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsStereoAware</b> () const</td></tr>
<tr class="memdesc:aa45954c7cf15f480180f23110134069b inherit pub_methods_classez_render_pipeline_pass"><td class="mdescLeft">&#160;</td><td class="mdescRight">True if the render pipeline pass can handle stereo cameras correctly. <br /></td></tr>
<tr class="separator:aa45954c7cf15f480180f23110134069b inherit pub_methods_classez_render_pipeline_pass"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ce843074aa4a8346c426ce9a718153c inherit pub_methods_classez_render_pipeline_pass" id="r_a0ce843074aa4a8346c426ce9a718153c"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../de/d27/classez_g_a_l_texture_handle.htm">ezGALTextureHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d0d/classez_render_pipeline_pass.htm#a0ce843074aa4a8346c426ce9a718153c">QueryTextureProvider</a> (const <a class="el" href="../../d9/d96/structez_render_pipeline_node_pin.htm">ezRenderPipelineNodePin</a> *pPin, const <a class="el" href="../../da/dad/structez_g_a_l_texture_creation_description.htm">ezGALTextureCreationDescription</a> &amp;desc)</td></tr>
<tr class="separator:a0ce843074aa4a8346c426ce9a718153c inherit pub_methods_classez_render_pipeline_pass"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c4f71e9c47684c7a59cbb80e6bf4574 inherit pub_methods_classez_render_pipeline_pass" id="r_a9c4f71e9c47684c7a59cbb80e6bf4574"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d0d/classez_render_pipeline_pass.htm#a9c4f71e9c47684c7a59cbb80e6bf4574">ReadBackProperties</a> (<a class="el" href="../../d2/d23/classez_view.htm">ezView</a> *pView)</td></tr>
<tr class="memdesc:a9c4f71e9c47684c7a59cbb80e6bf4574 inherit pub_methods_classez_render_pipeline_pass"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allows for the pass to write data back using ezView::SetRenderPassReadBackProperty. E.g. picking results etc.  <br /></td></tr>
<tr class="separator:a9c4f71e9c47684c7a59cbb80e6bf4574 inherit pub_methods_classez_render_pipeline_pass"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab5dea6d85581e9b011dee26f81f9414e inherit pub_methods_classez_render_pipeline_pass" id="r_ab5dea6d85581e9b011dee26f81f9414e"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>RenderDataWithCategory</b> (const <a class="el" href="../../d7/d76/structez_render_view_context.htm">ezRenderViewContext</a> &amp;renderViewContext, <a class="el" href="../../de/dc4/structez_render_data_1_1_category.htm">ezRenderData::Category</a> category)</td></tr>
<tr class="separator:ab5dea6d85581e9b011dee26f81f9414e inherit pub_methods_classez_render_pipeline_pass"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a31b649597eaa2091e0c39983ee6b2888 inherit pub_methods_classez_render_pipeline_pass" id="r_a31b649597eaa2091e0c39983ee6b2888"><td class="memItemLeft" align="right" valign="top">
EZ_ALWAYS_INLINE <a class="el" href="../../d8/dfa/classez_render_pipeline.htm">ezRenderPipeline</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetPipeline</b> ()</td></tr>
<tr class="separator:a31b649597eaa2091e0c39983ee6b2888 inherit pub_methods_classez_render_pipeline_pass"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46cc65c246595c8a7fc34952caed325e inherit pub_methods_classez_render_pipeline_pass" id="r_a46cc65c246595c8a7fc34952caed325e"><td class="memItemLeft" align="right" valign="top">
EZ_ALWAYS_INLINE const <a class="el" href="../../d8/dfa/classez_render_pipeline.htm">ezRenderPipeline</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetPipeline</b> () const</td></tr>
<tr class="separator:a46cc65c246595c8a7fc34952caed325e inherit pub_methods_classez_render_pipeline_pass"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classez_render_pipeline_node"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classez_render_pipeline_node')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../de/dd2/classez_render_pipeline_node.htm">ezRenderPipelineNode</a></td></tr>
<tr class="memitem:a8aabb3f7a9b7996994ff7add1c989f1a inherit pub_methods_classez_render_pipeline_node" id="r_a8aabb3f7a9b7996994ff7add1c989f1a"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>InitializePins</b> ()</td></tr>
<tr class="separator:a8aabb3f7a9b7996994ff7add1c989f1a inherit pub_methods_classez_render_pipeline_node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae08eab06edc74e1d4ee0bab1eb044307 inherit pub_methods_classez_render_pipeline_node" id="r_ae08eab06edc74e1d4ee0bab1eb044307"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../de/dce/classez_hashed_string.htm">ezHashedString</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetPinName</b> (const <a class="el" href="../../d9/d96/structez_render_pipeline_node_pin.htm">ezRenderPipelineNodePin</a> *pPin) const</td></tr>
<tr class="separator:ae08eab06edc74e1d4ee0bab1eb044307 inherit pub_methods_classez_render_pipeline_node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2000e365002b33fc40693be37012a514 inherit pub_methods_classez_render_pipeline_node" id="r_a2000e365002b33fc40693be37012a514"><td class="memItemLeft" align="right" valign="top">
const <a class="el" href="../../d9/d96/structez_render_pipeline_node_pin.htm">ezRenderPipelineNodePin</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetPinByName</b> (const char *szName) const</td></tr>
<tr class="separator:a2000e365002b33fc40693be37012a514 inherit pub_methods_classez_render_pipeline_node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d4061807b66370ff217a07a4e715ad2 inherit pub_methods_classez_render_pipeline_node" id="r_a5d4061807b66370ff217a07a4e715ad2"><td class="memItemLeft" align="right" valign="top">
const <a class="el" href="../../d9/d96/structez_render_pipeline_node_pin.htm">ezRenderPipelineNodePin</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetPinByName</b> (<a class="el" href="../../de/dce/classez_hashed_string.htm">ezHashedString</a> sName) const</td></tr>
<tr class="separator:a5d4061807b66370ff217a07a4e715ad2 inherit pub_methods_classez_render_pipeline_node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9d25aae1d7974497eff07f8a75f3552 inherit pub_methods_classez_render_pipeline_node" id="r_ad9d25aae1d7974497eff07f8a75f3552"><td class="memItemLeft" align="right" valign="top">
const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; const <a class="el" href="../../d9/d96/structez_render_pipeline_node_pin.htm">ezRenderPipelineNodePin</a> *const &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetInputPins</b> () const</td></tr>
<tr class="separator:ad9d25aae1d7974497eff07f8a75f3552 inherit pub_methods_classez_render_pipeline_node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a035d8bb5d0d18f48733543243fb24c04 inherit pub_methods_classez_render_pipeline_node" id="r_a035d8bb5d0d18f48733543243fb24c04"><td class="memItemLeft" align="right" valign="top">
const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; const <a class="el" href="../../d9/d96/structez_render_pipeline_node_pin.htm">ezRenderPipelineNodePin</a> *const &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetOutputPins</b> () const</td></tr>
<tr class="separator:a035d8bb5d0d18f48733543243fb24c04 inherit pub_methods_classez_render_pipeline_node"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classez_reflected_class"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classez_reflected_class')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../db/d45/classez_reflected_class.htm">ezReflectedClass</a></td></tr>
<tr class="memitem:ae155d1c020cc3d20af2811471a95ca0a inherit pub_methods_classez_reflected_class" id="r_ae155d1c020cc3d20af2811471a95ca0a"><td class="memItemLeft" align="right" valign="top">
virtual const <a class="el" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetDynamicRTTI</b> () const</td></tr>
<tr class="separator:ae155d1c020cc3d20af2811471a95ca0a inherit pub_methods_classez_reflected_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab746c8e33a03b96c25b117ee04cf6f00 inherit pub_methods_classez_reflected_class" id="r_ab746c8e33a03b96c25b117ee04cf6f00"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsInstanceOf</b> (const <a class="el" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a> *pType) const</td></tr>
<tr class="memdesc:ab746c8e33a03b96c25b117ee04cf6f00 inherit pub_methods_classez_reflected_class"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the type of this instance is of the given type or derived from it. <br /></td></tr>
<tr class="separator:ab746c8e33a03b96c25b117ee04cf6f00 inherit pub_methods_classez_reflected_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86c6a804cc97a425928bce744607400a inherit pub_methods_classez_reflected_class" id="r_a86c6a804cc97a425928bce744607400a"><td class="memTemplParams" colspan="2">
template&lt;typename T &gt; </td></tr>
<tr class="memitem:a86c6a804cc97a425928bce744607400a inherit pub_methods_classez_reflected_class"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>IsInstanceOf</b> () const</td></tr>
<tr class="memdesc:a86c6a804cc97a425928bce744607400a inherit pub_methods_classez_reflected_class"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the type of this instance is of the given type or derived from it. <br /></td></tr>
<tr class="separator:a86c6a804cc97a425928bce744607400a inherit pub_methods_classez_reflected_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-methods" name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a510091252a6083f244ba3e00dd11e4ed" id="r_a510091252a6083f244ba3e00dd11e4ed"><td class="memItemLeft" align="right" valign="top"><a id="a510091252a6083f244ba3e00dd11e4ed" name="a510091252a6083f244ba3e00dd11e4ed"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>DestroyLineSweepData</b> ()</td></tr>
<tr class="memdesc:a510091252a6083f244ba3e00dd11e4ed"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys all GPU data that might have been created in in SetupLineSweepData. <br /></td></tr>
<tr class="separator:a510091252a6083f244ba3e00dd11e4ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95e43b6f819ee66c422cc0bbb96a6ac9" id="r_a95e43b6f819ee66c422cc0bbb96a6ac9"><td class="memItemLeft" align="right" valign="top"><a id="a95e43b6f819ee66c422cc0bbb96a6ac9" name="a95e43b6f819ee66c422cc0bbb96a6ac9"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetupLineSweepData</b> (const <a class="el" href="../../da/df1/classez_vec3_template.htm">ezVec3I32</a> &amp;imageResolution)</td></tr>
<tr class="separator:a95e43b6f819ee66c422cc0bbb96a6ac9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1dac238db46c2d9189afcd7d57b81b71" id="r_a1dac238db46c2d9189afcd7d57b81b71"><td class="memItemLeft" align="right" valign="top"><a id="a1dac238db46c2d9189afcd7d57b81b71" name="a1dac238db46c2d9189afcd7d57b81b71"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>AddLinesForDirection</b> (const <a class="el" href="../../da/df1/classez_vec3_template.htm">ezVec3I32</a> &amp;imageResolution, const <a class="el" href="../../d1/df8/classez_vec2_template.htm">ezVec2I32</a> &amp;sampleDir, ezUInt32 lineIndex, <a class="el" href="../../d2/d4f/classez_dynamic_array.htm">ezDynamicArray</a>&lt; LineInstruction &gt; &amp;outinLineInstructions, ezUInt32 &amp;outinTotalNumberOfSamples)</td></tr>
<tr class="separator:a1dac238db46c2d9189afcd7d57b81b71"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-attribs" name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a09a1d06b91f5165ffa5a68df2fc2d72b" id="r_a09a1d06b91f5165ffa5a68df2fc2d72b"><td class="memItemLeft" align="right" valign="top"><a id="a09a1d06b91f5165ffa5a68df2fc2d72b" name="a09a1d06b91f5165ffa5a68df2fc2d72b"></a>
<a class="el" href="../../d6/d2a/structez_render_pipeline_node_input_pin.htm">ezRenderPipelineNodeInputPin</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_PinDepthInput</b></td></tr>
<tr class="separator:a09a1d06b91f5165ffa5a68df2fc2d72b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f5863b30b66ba05cd5070fa4dabed1b" id="r_a4f5863b30b66ba05cd5070fa4dabed1b"><td class="memItemLeft" align="right" valign="top"><a id="a4f5863b30b66ba05cd5070fa4dabed1b" name="a4f5863b30b66ba05cd5070fa4dabed1b"></a>
<a class="el" href="../../d1/db0/structez_render_pipeline_node_output_pin.htm">ezRenderPipelineNodeOutputPin</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_PinOutput</b></td></tr>
<tr class="separator:a4f5863b30b66ba05cd5070fa4dabed1b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:addb10915e3f9ec6e447443f802cf52ae" id="r_addb10915e3f9ec6e447443f802cf52ae"><td class="memItemLeft" align="right" valign="top"><a id="addb10915e3f9ec6e447443f802cf52ae" name="addb10915e3f9ec6e447443f802cf52ae"></a>
<a class="el" href="../../d3/dfa/classez_constant_buffer_storage_handle.htm">ezConstantBufferStorageHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_hLineSweepCB</b></td></tr>
<tr class="separator:addb10915e3f9ec6e447443f802cf52ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a32e48c8f24fce9623f0fa14f60eec9f7" id="r_a32e48c8f24fce9623f0fa14f60eec9f7"><td class="memItemLeft" align="right" valign="top"><a id="a32e48c8f24fce9623f0fa14f60eec9f7" name="a32e48c8f24fce9623f0fa14f60eec9f7"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>m_bSweepDataDirty</b> = true</td></tr>
<tr class="separator:a32e48c8f24fce9623f0fa14f60eec9f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c21fb0902a7f2a534156eefbf3b9ef4" id="r_a4c21fb0902a7f2a534156eefbf3b9ef4"><td class="memItemLeft" align="right" valign="top"><a id="a4c21fb0902a7f2a534156eefbf3b9ef4" name="a4c21fb0902a7f2a534156eefbf3b9ef4"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>m_bConstantsDirty</b> = true</td></tr>
<tr class="separator:a4c21fb0902a7f2a534156eefbf3b9ef4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8bf9dd063ce231ad7c81231b6cfdbf2b" id="r_a8bf9dd063ce231ad7c81231b6cfdbf2b"><td class="memItemLeft" align="right" valign="top"><a id="a8bf9dd063ce231ad7c81231b6cfdbf2b" name="a8bf9dd063ce231ad7c81231b6cfdbf2b"></a>
<a class="el" href="../../d3/d59/classez_g_a_l_buffer_handle.htm">ezGALBufferHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_hLineSweepOutputBuffer</b></td></tr>
<tr class="memdesc:a8bf9dd063ce231ad7c81231b6cfdbf2b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Output of the line sweep pass. <br /></td></tr>
<tr class="separator:a8bf9dd063ce231ad7c81231b6cfdbf2b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a737206867dfc25f0f8cfc6dffc7949c5" id="r_a737206867dfc25f0f8cfc6dffc7949c5"><td class="memItemLeft" align="right" valign="top"><a id="a737206867dfc25f0f8cfc6dffc7949c5" name="a737206867dfc25f0f8cfc6dffc7949c5"></a>
<a class="el" href="../../d5/d7a/structez_g_a_l_buffer_range.htm">ezGALBufferRange</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_LineSweepOutputBufferRange</b></td></tr>
<tr class="separator:a737206867dfc25f0f8cfc6dffc7949c5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ae4b530fd63e54de8d36fc4deffa821" id="r_a4ae4b530fd63e54de8d36fc4deffa821"><td class="memItemLeft" align="right" valign="top"><a id="a4ae4b530fd63e54de8d36fc4deffa821" name="a4ae4b530fd63e54de8d36fc4deffa821"></a>
<a class="el" href="../../d3/d59/classez_g_a_l_buffer_handle.htm">ezGALBufferHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_hLineInfoBuffer</b></td></tr>
<tr class="memdesc:a4ae4b530fd63e54de8d36fc4deffa821"><td class="mdescLeft">&#160;</td><td class="mdescRight">Structured buffer containing instructions for every single line to trace. <br /></td></tr>
<tr class="separator:a4ae4b530fd63e54de8d36fc4deffa821"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ade406d1f85781564accce4408106db9a" id="r_ade406d1f85781564accce4408106db9a"><td class="memItemLeft" align="right" valign="top"><a id="ade406d1f85781564accce4408106db9a" name="ade406d1f85781564accce4408106db9a"></a>
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>m_uiNumSweepLines</b> = 0</td></tr>
<tr class="memdesc:ade406d1f85781564accce4408106db9a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Total number of lines to be traced. <br /></td></tr>
<tr class="separator:ade406d1f85781564accce4408106db9a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39d377e893a815188d36a16d1e9d076e" id="r_a39d377e893a815188d36a16d1e9d076e"><td class="memItemLeft" align="right" valign="top"><a id="a39d377e893a815188d36a16d1e9d076e" name="a39d377e893a815188d36a16d1e9d076e"></a>
ezInt32&#160;</td><td class="memItemRight" valign="bottom"><b>m_iLineToLinePixelOffset</b> = 2</td></tr>
<tr class="separator:a39d377e893a815188d36a16d1e9d076e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe8e96421d26ca40f6819e5bcdb4f7b1" id="r_afe8e96421d26ca40f6819e5bcdb4f7b1"><td class="memItemLeft" align="right" valign="top"><a id="afe8e96421d26ca40f6819e5bcdb4f7b1" name="afe8e96421d26ca40f6819e5bcdb4f7b1"></a>
ezInt32&#160;</td><td class="memItemRight" valign="bottom"><b>m_iLineSamplePixelOffsetFactor</b> = 1</td></tr>
<tr class="separator:afe8e96421d26ca40f6819e5bcdb4f7b1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb09037e5bdb1863899dea79ffc12aa2" id="r_adb09037e5bdb1863899dea79ffc12aa2"><td class="memItemLeft" align="right" valign="top"><a id="adb09037e5bdb1863899dea79ffc12aa2" name="adb09037e5bdb1863899dea79ffc12aa2"></a>
float&#160;</td><td class="memItemRight" valign="bottom"><b>m_fOcclusionFalloff</b> = 0.2f</td></tr>
<tr class="separator:adb09037e5bdb1863899dea79ffc12aa2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a1340598d0130662b962a250f4a2097" id="r_a2a1340598d0130662b962a250f4a2097"><td class="memItemLeft" align="right" valign="top"><a id="a2a1340598d0130662b962a250f4a2097" name="a2a1340598d0130662b962a250f4a2097"></a>
float&#160;</td><td class="memItemRight" valign="bottom"><b>m_fDepthCutoffDistance</b> = 4.0f</td></tr>
<tr class="separator:a2a1340598d0130662b962a250f4a2097"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f5ba8db07caabd6193b22a977526e05" id="r_a5f5ba8db07caabd6193b22a977526e05"><td class="memItemLeft" align="right" valign="top"><a id="a5f5ba8db07caabd6193b22a977526e05" name="a5f5ba8db07caabd6193b22a977526e05"></a>
<a class="el" href="../../d6/dd9/structez_enum.htm">ezEnum</a>&lt; <a class="el" href="../../d7/d9e/structez_l_s_a_o_depth_compare_function.htm">ezLSAODepthCompareFunction</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_DepthCompareFunction</b></td></tr>
<tr class="separator:a5f5ba8db07caabd6193b22a977526e05"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6347a71314d936f15e42a607970ac924" id="r_a6347a71314d936f15e42a607970ac924"><td class="memItemLeft" align="right" valign="top"><a id="a6347a71314d936f15e42a607970ac924" name="a6347a71314d936f15e42a607970ac924"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>m_bDistributedGathering</b> = true</td></tr>
<tr class="separator:a6347a71314d936f15e42a607970ac924"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00d8cbd2dbdcf3feb63f661c3ed4631e" id="r_a00d8cbd2dbdcf3feb63f661c3ed4631e"><td class="memItemLeft" align="right" valign="top"><a id="a00d8cbd2dbdcf3feb63f661c3ed4631e" name="a00d8cbd2dbdcf3feb63f661c3ed4631e"></a>
<a class="el" href="../../d3/dd7/classez_typed_resource_handle.htm">ezShaderResourceHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_hShaderLineSweep</b></td></tr>
<tr class="separator:a00d8cbd2dbdcf3feb63f661c3ed4631e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a94fcd706c5cbcc555e97f40fcb0b98e2" id="r_a94fcd706c5cbcc555e97f40fcb0b98e2"><td class="memItemLeft" align="right" valign="top"><a id="a94fcd706c5cbcc555e97f40fcb0b98e2" name="a94fcd706c5cbcc555e97f40fcb0b98e2"></a>
<a class="el" href="../../d3/dd7/classez_typed_resource_handle.htm">ezShaderResourceHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_hShaderGather</b></td></tr>
<tr class="separator:a94fcd706c5cbcc555e97f40fcb0b98e2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3703889367d3ff357ac49ecd0a8191b7" id="r_a3703889367d3ff357ac49ecd0a8191b7"><td class="memItemLeft" align="right" valign="top"><a id="a3703889367d3ff357ac49ecd0a8191b7" name="a3703889367d3ff357ac49ecd0a8191b7"></a>
<a class="el" href="../../d3/dd7/classez_typed_resource_handle.htm">ezShaderResourceHandle</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_hShaderAverage</b></td></tr>
<tr class="separator:a3703889367d3ff357ac49ecd0a8191b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="inherited" name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_static_methods_classez_no_base"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_classez_no_base')"><img src="../../closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="../../d4/d02/classez_no_base.htm">ezNoBase</a></td></tr>
<tr class="memitem:a718d4e4145a2c15d0c28aaed086f1ce2 inherit pub_static_methods_classez_no_base" id="r_a718d4e4145a2c15d0c28aaed086f1ce2"><td class="memItemLeft" align="right" valign="top">
static const <a class="el" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetStaticRTTI</b> ()</td></tr>
<tr class="separator:a718d4e4145a2c15d0c28aaed086f1ce2 inherit pub_static_methods_classez_no_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Screen space ambient occlusion using "line sweep ambient occlusion" by Ville Timonen</p>
<p>Resources: Use in Quantum Break: <a href="http://wili.cc/research/quantum_break/SIGGRAPH_2015_Remedy_Notes.pdf">http://wili.cc/research/quantum_break/SIGGRAPH_2015_Remedy_Notes.pdf</a> Presentation slides EGSR: <a href="http://wili.cc/research/lsao/EGSR13_LSAO.pdf">http://wili.cc/research/lsao/EGSR13_LSAO.pdf</a> Paper: <a href="http://wili.cc/research/lsao/lsao.pdf">http://wili.cc/research/lsao/lsao.pdf</a></p>
<p>There are a few adjustments and own ideas worked into this implementation. The biggest change probably is that pixels in the gather pass compute their target linesample arithmetically instead of relying on lookups. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a0181733cb4f37bf19893393d5bb8c90c" name="a0181733cb4f37bf19893393d5bb8c90c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0181733cb4f37bf19893393d5bb8c90c">&#9670;&#160;</a></span>Deserialize()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d4/da9/structez_result.htm">ezResult</a> ezLSAOPass::Deserialize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a> &amp;&#160;</td>
          <td class="paramname"><em>inout_stream</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="../../d1/d0d/classez_render_pipeline_pass.htm">ezRenderPipelinePass</a>.</p>

</div>
</div>
<a id="aebd2155cf85131aa1758980a2086e357" name="aebd2155cf85131aa1758980a2086e357"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aebd2155cf85131aa1758980a2086e357">&#9670;&#160;</a></span>Execute()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ezLSAOPass::Execute </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d7/d76/structez_render_view_context.htm">ezRenderViewContext</a> &amp;&#160;</td>
          <td class="paramname"><em>renderViewContext</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; <a class="el" href="../../d5/d3f/structez_render_pipeline_pass_connection.htm">ezRenderPipelinePassConnection</a> *const &gt;&#160;</td>
          <td class="paramname"><em>inputs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; <a class="el" href="../../d5/d3f/structez_render_pipeline_pass_connection.htm">ezRenderPipelinePassConnection</a> *const &gt;&#160;</td>
          <td class="paramname"><em>outputs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Render into outputs. Both inputs and outputs are passed in with actual texture handles. Disconnected pins have a nullptr value in the passed in arrays. You can now create views and render target setups on the fly and fill the output targets with data. </p>

<p>Implements <a class="el" href="../../d1/d0d/classez_render_pipeline_pass.htm#ab10707a16ed36a2cbe7b574973c9c448">ezRenderPipelinePass</a>.</p>

</div>
</div>
<a id="ac86945e263c8dd6afff5113348a99d71" name="ac86945e263c8dd6afff5113348a99d71"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac86945e263c8dd6afff5113348a99d71">&#9670;&#160;</a></span>ExecuteInactive()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ezLSAOPass::ExecuteInactive </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d7/d76/structez_render_view_context.htm">ezRenderViewContext</a> &amp;&#160;</td>
          <td class="paramname"><em>renderViewContext</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; <a class="el" href="../../d5/d3f/structez_render_pipeline_pass_connection.htm">ezRenderPipelinePassConnection</a> *const &gt;&#160;</td>
          <td class="paramname"><em>inputs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; <a class="el" href="../../d5/d3f/structez_render_pipeline_pass_connection.htm">ezRenderPipelinePassConnection</a> *const &gt;&#160;</td>
          <td class="paramname"><em>outputs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="../../d1/d0d/classez_render_pipeline_pass.htm">ezRenderPipelinePass</a>.</p>

</div>
</div>
<a id="ad37d7d28c31ed217d3a4b80425c6e743" name="ad37d7d28c31ed217d3a4b80425c6e743"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad37d7d28c31ed217d3a4b80425c6e743">&#9670;&#160;</a></span>GetRenderTargetDescriptions()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool ezLSAOPass::GetRenderTargetDescriptions </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d2/d23/classez_view.htm">ezView</a> &amp;&#160;</td>
          <td class="paramname"><em>view</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; <a class="el" href="../../da/dad/structez_g_a_l_texture_creation_description.htm">ezGALTextureCreationDescription</a> *const &gt;&#160;</td>
          <td class="paramname"><em>inputs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; <a class="el" href="../../da/dad/structez_g_a_l_texture_creation_description.htm">ezGALTextureCreationDescription</a> &gt;&#160;</td>
          <td class="paramname"><em>outputs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>For a given input pin configuration, provide the output configuration of this node. Outputs is already resized to the number of output pins. </p>

<p>Implements <a class="el" href="../../d1/d0d/classez_render_pipeline_pass.htm#a2ab75318ceefe2234d89b24376f60af2">ezRenderPipelinePass</a>.</p>

</div>
</div>
<a id="a829881fbdcc2df78de4e90ebc423cf32" name="a829881fbdcc2df78de4e90ebc423cf32"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a829881fbdcc2df78de4e90ebc423cf32">&#9670;&#160;</a></span>InitRenderPipelinePass()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ezLSAOPass::InitRenderPipelinePass </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; <a class="el" href="../../d5/d3f/structez_render_pipeline_pass_connection.htm">ezRenderPipelinePassConnection</a> *const &gt;&#160;</td>
          <td class="paramname"><em>inputs</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; <a class="el" href="../../d5/d3f/structez_render_pipeline_pass_connection.htm">ezRenderPipelinePassConnection</a> *const &gt;&#160;</td>
          <td class="paramname"><em>outputs</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>After GetRenderTargetDescriptions was called successfully for each pass, this function is called with the inputs and outputs for review. Disconnected pins have a nullptr value in the passed in arrays. This is the time to create additional resources that are not covered by the pins automatically, e.g. a picking texture or eye adaptation buffer. </p>

<p>Reimplemented from <a class="el" href="../../d1/d0d/classez_render_pipeline_pass.htm#a618d3f94d1eb4180faa1cfa4438cb0e2">ezRenderPipelinePass</a>.</p>

</div>
</div>
<a id="adda393db8796d5c94024eec3b5638da5" name="adda393db8796d5c94024eec3b5638da5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adda393db8796d5c94024eec3b5638da5">&#9670;&#160;</a></span>Serialize()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d4/da9/structez_result.htm">ezResult</a> ezLSAOPass::Serialize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a> &amp;&#160;</td>
          <td class="paramname"><em>inout_stream</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented from <a class="el" href="../../d1/d0d/classez_render_pipeline_pass.htm">ezRenderPipelinePass</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/RendererCore/Pipeline/Passes/<a class="el" href="../../d0/dd9/_l_s_a_o_pass_8h_source.htm">LSAOPass.h</a></li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/RendererCore/Pipeline/Implementation/Passes/<b>LSAOPass.cpp</b></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../db/d17/classez_l_s_a_o_pass.htm">ezLSAOPass</a></li>
    <li class="footer">Generated on Fri Jul 11 2025 12:17:59 for ezEngine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
