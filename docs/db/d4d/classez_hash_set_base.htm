<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: ezHashSetBase&lt; KeyType, Hasher &gt; Class Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 21.6</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('db/d4d/classez_hash_set_base.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="../../de/d7d/classez_hash_set_base-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ezHashSetBase&lt; KeyType, Hasher &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Implementation of a hashset.  
 <a href="../../db/d4d/classez_hash_set_base.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d2/dfc/_hash_set_8h_source.htm">HashSet.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d30/classez_hash_set_base_1_1_const_iterator.htm">ConstIterator</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Const iterator.  <a href="../../d3/d30/classez_hash_set_base_1_1_const_iterator.htm#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a77c25255052528b6331cc0f62ca54538"><td class="memItemLeft" align="right" valign="top"><a id="a77c25255052528b6331cc0f62ca54538"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d4d/classez_hash_set_base.htm#a77c25255052528b6331cc0f62ca54538">operator==</a> (const <a class="el" href="../../db/d4d/classez_hash_set_base.htm">ezHashSetBase</a>&lt; KeyType, Hasher &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:a77c25255052528b6331cc0f62ca54538"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares this table to another table. <br /></td></tr>
<tr class="separator:a77c25255052528b6331cc0f62ca54538"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab875222f80125ba715c0bc8ffc477473"><td class="memItemLeft" align="right" valign="top"><a id="ab875222f80125ba715c0bc8ffc477473"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d4d/classez_hash_set_base.htm#ab875222f80125ba715c0bc8ffc477473">operator!=</a> (const <a class="el" href="../../db/d4d/classez_hash_set_base.htm">ezHashSetBase</a>&lt; KeyType, Hasher &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:ab875222f80125ba715c0bc8ffc477473"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares this table to another table. <br /></td></tr>
<tr class="separator:ab875222f80125ba715c0bc8ffc477473"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a340c7b7031c413e70d3fbb93908096c8"><td class="memItemLeft" align="right" valign="top"><a id="a340c7b7031c413e70d3fbb93908096c8"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d4d/classez_hash_set_base.htm#a340c7b7031c413e70d3fbb93908096c8">Reserve</a> (ezUInt32 uiCapacity)</td></tr>
<tr class="memdesc:a340c7b7031c413e70d3fbb93908096c8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Expands the hashset by over-allocating the internal storage so that the load factor is lower or equal to 60% when inserting the given number of entries. <br /></td></tr>
<tr class="separator:a340c7b7031c413e70d3fbb93908096c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a34a383086921b0d1943784eda09956"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d4d/classez_hash_set_base.htm#a8a34a383086921b0d1943784eda09956">Compact</a> ()</td></tr>
<tr class="memdesc:a8a34a383086921b0d1943784eda09956"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tries to compact the hashset to avoid wasting memory.  <a href="../../db/d4d/classez_hash_set_base.htm#a8a34a383086921b0d1943784eda09956">More...</a><br /></td></tr>
<tr class="separator:a8a34a383086921b0d1943784eda09956"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6dbe7cbbad5b7de7d0afb5eda7a57242"><td class="memItemLeft" align="right" valign="top"><a id="a6dbe7cbbad5b7de7d0afb5eda7a57242"></a>
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d4d/classez_hash_set_base.htm#a6dbe7cbbad5b7de7d0afb5eda7a57242">GetCount</a> () const</td></tr>
<tr class="memdesc:a6dbe7cbbad5b7de7d0afb5eda7a57242"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of active entries in the table. <br /></td></tr>
<tr class="separator:a6dbe7cbbad5b7de7d0afb5eda7a57242"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad71f0b4b69e2798f67c3c2695e902b1c"><td class="memItemLeft" align="right" valign="top"><a id="ad71f0b4b69e2798f67c3c2695e902b1c"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d4d/classez_hash_set_base.htm#ad71f0b4b69e2798f67c3c2695e902b1c">IsEmpty</a> () const</td></tr>
<tr class="memdesc:ad71f0b4b69e2798f67c3c2695e902b1c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if the hashset does not contain any elements. <br /></td></tr>
<tr class="separator:ad71f0b4b69e2798f67c3c2695e902b1c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ed341b0a33caa9ca34dcd69950533d6"><td class="memItemLeft" align="right" valign="top"><a id="a1ed341b0a33caa9ca34dcd69950533d6"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d4d/classez_hash_set_base.htm#a1ed341b0a33caa9ca34dcd69950533d6">Clear</a> ()</td></tr>
<tr class="memdesc:a1ed341b0a33caa9ca34dcd69950533d6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears the table. <br /></td></tr>
<tr class="separator:a1ed341b0a33caa9ca34dcd69950533d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3295dadaf321849dfa2e386fbd4e7827"><td class="memTemplParams" colspan="2"><a id="a3295dadaf321849dfa2e386fbd4e7827"></a>
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a3295dadaf321849dfa2e386fbd4e7827"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../db/d4d/classez_hash_set_base.htm#a3295dadaf321849dfa2e386fbd4e7827">Insert</a> (CompatibleKeyType &amp;&amp;key)</td></tr>
<tr class="memdesc:a3295dadaf321849dfa2e386fbd4e7827"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inserts the key. Returns whether the key was already existing. <br /></td></tr>
<tr class="separator:a3295dadaf321849dfa2e386fbd4e7827"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aababf227b4185078551c6cc30674bf03"><td class="memItemLeft" align="right" valign="top"><a id="aababf227b4185078551c6cc30674bf03"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d4d/classez_hash_set_base.htm#aababf227b4185078551c6cc30674bf03">Remove</a> (const KeyType &amp;key)</td></tr>
<tr class="memdesc:aababf227b4185078551c6cc30674bf03"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes the entry with the given key. Returns if an entry was removed. <br /></td></tr>
<tr class="separator:aababf227b4185078551c6cc30674bf03"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc9a70792527c8bd096a47ad5c1f0cd2"><td class="memItemLeft" align="right" valign="top"><a id="acc9a70792527c8bd096a47ad5c1f0cd2"></a>
<a class="el" href="../../d3/d30/classez_hash_set_base_1_1_const_iterator.htm">ConstIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d4d/classez_hash_set_base.htm#acc9a70792527c8bd096a47ad5c1f0cd2">Remove</a> (const <a class="el" href="../../d3/d30/classez_hash_set_base_1_1_const_iterator.htm">ConstIterator</a> &amp;pos)</td></tr>
<tr class="memdesc:acc9a70792527c8bd096a47ad5c1f0cd2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Erases the key at the given Iterator. Returns an iterator to the element after the given iterator. <br /></td></tr>
<tr class="separator:acc9a70792527c8bd096a47ad5c1f0cd2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7676f8879a08905b2f29577b2af9f4b8"><td class="memItemLeft" align="right" valign="top"><a id="a7676f8879a08905b2f29577b2af9f4b8"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d4d/classez_hash_set_base.htm#a7676f8879a08905b2f29577b2af9f4b8">Contains</a> (const KeyType &amp;key) const</td></tr>
<tr class="memdesc:a7676f8879a08905b2f29577b2af9f4b8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns if an entry with given key exists in the table. <br /></td></tr>
<tr class="separator:a7676f8879a08905b2f29577b2af9f4b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9729b6087de5a1482a6b1384d2914ad4"><td class="memItemLeft" align="right" valign="top"><a id="a9729b6087de5a1482a6b1384d2914ad4"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d4d/classez_hash_set_base.htm#a9729b6087de5a1482a6b1384d2914ad4">ContainsSet</a> (const <a class="el" href="../../db/d4d/classez_hash_set_base.htm">ezHashSetBase</a>&lt; KeyType, Hasher &gt; &amp;operand) const</td></tr>
<tr class="memdesc:a9729b6087de5a1482a6b1384d2914ad4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether all keys of the given set are in the container. <br /></td></tr>
<tr class="separator:a9729b6087de5a1482a6b1384d2914ad4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf1e41471fa53be69ffb50c89781b582"><td class="memItemLeft" align="right" valign="top"><a id="adf1e41471fa53be69ffb50c89781b582"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d4d/classez_hash_set_base.htm#adf1e41471fa53be69ffb50c89781b582">Union</a> (const <a class="el" href="../../db/d4d/classez_hash_set_base.htm">ezHashSetBase</a>&lt; KeyType, Hasher &gt; &amp;operand)</td></tr>
<tr class="memdesc:adf1e41471fa53be69ffb50c89781b582"><td class="mdescLeft">&#160;</td><td class="mdescRight">Makes this set the union of itself and the operand. <br /></td></tr>
<tr class="separator:adf1e41471fa53be69ffb50c89781b582"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c6982ff51e74b909678806f4b4f94cd"><td class="memItemLeft" align="right" valign="top"><a id="a4c6982ff51e74b909678806f4b4f94cd"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d4d/classez_hash_set_base.htm#a4c6982ff51e74b909678806f4b4f94cd">Difference</a> (const <a class="el" href="../../db/d4d/classez_hash_set_base.htm">ezHashSetBase</a>&lt; KeyType, Hasher &gt; &amp;operand)</td></tr>
<tr class="memdesc:a4c6982ff51e74b909678806f4b4f94cd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Makes this set the difference of itself and the operand, i.e. subtracts operand. <br /></td></tr>
<tr class="separator:a4c6982ff51e74b909678806f4b4f94cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a477d750d71a07b95d7779e984e19c13b"><td class="memItemLeft" align="right" valign="top"><a id="a477d750d71a07b95d7779e984e19c13b"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d4d/classez_hash_set_base.htm#a477d750d71a07b95d7779e984e19c13b">Intersection</a> (const <a class="el" href="../../db/d4d/classez_hash_set_base.htm">ezHashSetBase</a>&lt; KeyType, Hasher &gt; &amp;operand)</td></tr>
<tr class="memdesc:a477d750d71a07b95d7779e984e19c13b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Makes this set the intersection of itself and the operand. <br /></td></tr>
<tr class="separator:a477d750d71a07b95d7779e984e19c13b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f9c82fb55db9c5741f7b2d1a3395e5a"><td class="memItemLeft" align="right" valign="top"><a id="a0f9c82fb55db9c5741f7b2d1a3395e5a"></a>
<a class="el" href="../../d3/d30/classez_hash_set_base_1_1_const_iterator.htm">ConstIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d4d/classez_hash_set_base.htm#a0f9c82fb55db9c5741f7b2d1a3395e5a">GetIterator</a> () const</td></tr>
<tr class="memdesc:a0f9c82fb55db9c5741f7b2d1a3395e5a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a constant Iterator to the very first element. <br /></td></tr>
<tr class="separator:a0f9c82fb55db9c5741f7b2d1a3395e5a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab236c5367e9ec92536bfdc5dd436857c"><td class="memItemLeft" align="right" valign="top"><a id="ab236c5367e9ec92536bfdc5dd436857c"></a>
<a class="el" href="../../d3/d30/classez_hash_set_base_1_1_const_iterator.htm">ConstIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d4d/classez_hash_set_base.htm#ab236c5367e9ec92536bfdc5dd436857c">GetEndIterator</a> () const</td></tr>
<tr class="memdesc:ab236c5367e9ec92536bfdc5dd436857c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a constant Iterator to the first element that is not part of the hashset. Needed to implement range based for loop support. <br /></td></tr>
<tr class="separator:ab236c5367e9ec92536bfdc5dd436857c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a756f6d031d4b4ee9c398630a8d40adfc"><td class="memItemLeft" align="right" valign="top"><a id="a756f6d031d4b4ee9c398630a8d40adfc"></a>
<a class="el" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d4d/classez_hash_set_base.htm#a756f6d031d4b4ee9c398630a8d40adfc">GetAllocator</a> () const</td></tr>
<tr class="memdesc:a756f6d031d4b4ee9c398630a8d40adfc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the allocator that is used by this instance. <br /></td></tr>
<tr class="separator:a756f6d031d4b4ee9c398630a8d40adfc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c35a6435fa7193700038b2584d7866c"><td class="memItemLeft" align="right" valign="top"><a id="a2c35a6435fa7193700038b2584d7866c"></a>
ezUInt64&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d4d/classez_hash_set_base.htm#a2c35a6435fa7193700038b2584d7866c">GetHeapMemoryUsage</a> () const</td></tr>
<tr class="memdesc:a2c35a6435fa7193700038b2584d7866c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the amount of bytes that are currently allocated on the heap. <br /></td></tr>
<tr class="separator:a2c35a6435fa7193700038b2584d7866c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a756612f6089f2e8dc8c346d923145b3b"><td class="memItemLeft" align="right" valign="top"><a id="a756612f6089f2e8dc8c346d923145b3b"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d4d/classez_hash_set_base.htm#a756612f6089f2e8dc8c346d923145b3b">Swap</a> (<a class="el" href="../../db/d4d/classez_hash_set_base.htm">ezHashSetBase</a>&lt; KeyType, Hasher &gt; &amp;other)</td></tr>
<tr class="memdesc:a756612f6089f2e8dc8c346d923145b3b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Swaps this map with the other one. <br /></td></tr>
<tr class="separator:a756612f6089f2e8dc8c346d923145b3b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a9c4028a64a9e8adcf87f6b1bbb9161aa"><td class="memItemLeft" align="right" valign="top"><a id="a9c4028a64a9e8adcf87f6b1bbb9161aa"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d4d/classez_hash_set_base.htm#a9c4028a64a9e8adcf87f6b1bbb9161aa">ezHashSetBase</a> (<a class="el" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a> *pAllocator)</td></tr>
<tr class="memdesc:a9c4028a64a9e8adcf87f6b1bbb9161aa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an empty hashset. Does not allocate any data yet. <br /></td></tr>
<tr class="separator:a9c4028a64a9e8adcf87f6b1bbb9161aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad325139031150e38cfba324e06353f89"><td class="memItemLeft" align="right" valign="top"><a id="ad325139031150e38cfba324e06353f89"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d4d/classez_hash_set_base.htm#ad325139031150e38cfba324e06353f89">ezHashSetBase</a> (const <a class="el" href="../../db/d4d/classez_hash_set_base.htm">ezHashSetBase</a>&lt; KeyType, Hasher &gt; &amp;rhs, <a class="el" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a> *pAllocator)</td></tr>
<tr class="memdesc:ad325139031150e38cfba324e06353f89"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a copy of the given hashset. <br /></td></tr>
<tr class="separator:ad325139031150e38cfba324e06353f89"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75735b3630fc52aa1994922bbd32e1ce"><td class="memItemLeft" align="right" valign="top"><a id="a75735b3630fc52aa1994922bbd32e1ce"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d4d/classez_hash_set_base.htm#a75735b3630fc52aa1994922bbd32e1ce">ezHashSetBase</a> (<a class="el" href="../../db/d4d/classez_hash_set_base.htm">ezHashSetBase</a>&lt; KeyType, Hasher &gt; &amp;&amp;rhs, <a class="el" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a> *pAllocator)</td></tr>
<tr class="memdesc:a75735b3630fc52aa1994922bbd32e1ce"><td class="mdescLeft">&#160;</td><td class="mdescRight">Moves data from an existing hashtable into this one. <br /></td></tr>
<tr class="separator:a75735b3630fc52aa1994922bbd32e1ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a99534fcb1cfd5da54d98d190164d67cb"><td class="memItemLeft" align="right" valign="top"><a id="a99534fcb1cfd5da54d98d190164d67cb"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d4d/classez_hash_set_base.htm#a99534fcb1cfd5da54d98d190164d67cb">~ezHashSetBase</a> ()</td></tr>
<tr class="memdesc:a99534fcb1cfd5da54d98d190164d67cb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor. <br /></td></tr>
<tr class="separator:a99534fcb1cfd5da54d98d190164d67cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c7a1227962e9198e0f005fe893ba543"><td class="memItemLeft" align="right" valign="top"><a id="a2c7a1227962e9198e0f005fe893ba543"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d4d/classez_hash_set_base.htm#a2c7a1227962e9198e0f005fe893ba543">operator=</a> (const <a class="el" href="../../db/d4d/classez_hash_set_base.htm">ezHashSetBase</a>&lt; KeyType, Hasher &gt; &amp;rhs)</td></tr>
<tr class="memdesc:a2c7a1227962e9198e0f005fe893ba543"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the data from another hashset into this one. <br /></td></tr>
<tr class="separator:a2c7a1227962e9198e0f005fe893ba543"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac36819adb309f6f5a55735c6e6ef2918"><td class="memItemLeft" align="right" valign="top"><a id="ac36819adb309f6f5a55735c6e6ef2918"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d4d/classez_hash_set_base.htm#ac36819adb309f6f5a55735c6e6ef2918">operator=</a> (<a class="el" href="../../db/d4d/classez_hash_set_base.htm">ezHashSetBase</a>&lt; KeyType, Hasher &gt; &amp;&amp;rhs)</td></tr>
<tr class="memdesc:ac36819adb309f6f5a55735c6e6ef2918"><td class="mdescLeft">&#160;</td><td class="mdescRight">Moves data from an existing hashset into this one. <br /></td></tr>
<tr class="separator:ac36819adb309f6f5a55735c6e6ef2918"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename KeyType, typename Hasher&gt;<br />
class ezHashSetBase&lt; KeyType, Hasher &gt;</h3>

<p>Implementation of a hashset. </p>
<p>The hashset stores values by using the hash as an index into the table. This implementation uses linear-probing to resolve hash collisions which means all values are stored in a linear array. All insertion/erasure/lookup functions take O(1) time if the table does not need to be expanded, which happens when the load gets greater than 60%. The hash function can be customized by providing a Hasher helper class like <a class="el" href="../../dc/d65/structez_hash_helper.htm" title="Helper struct to calculate the Hash of different types.">ezHashHelper</a>. </p><dl class="section see"><dt>See also</dt><dd><a class="el" href="../../dc/d65/structez_hash_helper.htm" title="Helper struct to calculate the Hash of different types.">ezHashHelper</a> </dd></dl>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a8a34a383086921b0d1943784eda09956"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8a34a383086921b0d1943784eda09956">&#9670;&nbsp;</a></span>Compact()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename K , typename H &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="../../db/d4d/classez_hash_set_base.htm">ezHashSetBase</a>&lt; K, H &gt;::Compact</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Tries to compact the hashset to avoid wasting memory. </p>
<p>The resulting capacity is at least 'GetCount' (no elements get removed). Will deallocate all data, if the hashset is empty. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Containers/<a class="el" href="../../d2/dfc/_hash_set_8h_source.htm">HashSet.h</a></li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Containers/Implementation/<a class="el" href="../../df/dbb/_hash_set__inl_8h_source.htm">HashSet_inl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../db/d4d/classez_hash_set_base.htm">ezHashSetBase</a></li>
    <li class="footer">Generated on Tue Jun 8 2021 21:43:18 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
