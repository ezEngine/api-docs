<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: ezRTTIAllocator Struct Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">ezEngine<span id="projectnumber">&#160;Release 25.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('db/df8/structez_r_t_t_i_allocator.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="../../de/d74/structez_r_t_t_i_allocator-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">ezRTTIAllocator Struct Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div></div>
</div><!--header-->
<div class="contents">

<p>The interface for an allocator that creates instances of reflected types.  
 <a href="../../db/df8/structez_r_t_t_i_allocator.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../de/dd7/_r_t_t_i_8h_source.htm">RTTI.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for ezRTTIAllocator:</div>
<div class="dyncontent">
<div class="center"><img src="../../d3/de8/structez_r_t_t_i_allocator__inherit__graph.png" border="0" usemap="#aez_r_t_t_i_allocator_inherit__map" alt="Inheritance graph"/></div>
<map name="aez_r_t_t_i_allocator_inherit__map" id="aez_r_t_t_i_allocator_inherit__map">
<area shape="rect" title="The interface for an allocator that creates instances of reflected types." alt="" coords="5,70,128,95"/>
<area shape="rect" href="../../dc/ddb/structez_r_t_t_i_default_allocator.htm" title="Default implementation of ezRTTIAllocator that allocates instances via the given allocator." alt="" coords="186,5,401,45"/>
<area shape="poly" title=" " alt="" coords="130,64,213,43,214,48,131,69"/>
<area shape="rect" href="../../dd/d04/structez_r_t_t_i_no_allocator.htm" title="Dummy Allocator for types that should not be allocatable through the reflection system." alt="" coords="223,70,364,95"/>
<area shape="poly" title=" " alt="" coords="142,80,222,80,222,85,142,85"/>
<area shape="rect" href="../../d2/d20/classez_visual_script_coroutine_allocator.htm" title=" " alt="" coords="176,119,411,145"/>
<area shape="poly" title=" " alt="" coords="139,96,177,104,234,117,233,122,175,109,138,101"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a996b32cc9b2e56c695ed8774a4b147bb" id="r_a996b32cc9b2e56c695ed8774a4b147bb"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/df8/structez_r_t_t_i_allocator.htm#a996b32cc9b2e56c695ed8774a4b147bb">CanAllocate</a> () const</td></tr>
<tr class="memdesc:a996b32cc9b2e56c695ed8774a4b147bb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the type that is represented by this allocator, can be dynamically allocated at runtime.  <br /></td></tr>
<tr class="separator:a996b32cc9b2e56c695ed8774a4b147bb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ba60ad36e1db0ba1a3bb7dfb90958e7" id="r_a2ba60ad36e1db0ba1a3bb7dfb90958e7"><td class="memTemplParams" colspan="2"><a id="a2ba60ad36e1db0ba1a3bb7dfb90958e7" name="a2ba60ad36e1db0ba1a3bb7dfb90958e7"></a>
template&lt;typename T &gt; </td></tr>
<tr class="memitem:a2ba60ad36e1db0ba1a3bb7dfb90958e7"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="../../da/d7c/structez_internal_1_1_new_instance.htm">ezInternal::NewInstance</a>&lt; T &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Allocate</b> (<a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator=nullptr)</td></tr>
<tr class="memdesc:a2ba60ad36e1db0ba1a3bb7dfb90958e7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allocates one instance. <br /></td></tr>
<tr class="separator:a2ba60ad36e1db0ba1a3bb7dfb90958e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a58e89288e2fe0b95ccb42dca4869c97c" id="r_a58e89288e2fe0b95ccb42dca4869c97c"><td class="memTemplParams" colspan="2"><a id="a58e89288e2fe0b95ccb42dca4869c97c" name="a58e89288e2fe0b95ccb42dca4869c97c"></a>
template&lt;typename T &gt; </td></tr>
<tr class="memitem:a58e89288e2fe0b95ccb42dca4869c97c"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="../../da/d7c/structez_internal_1_1_new_instance.htm">ezInternal::NewInstance</a>&lt; T &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Clone</b> (const void *pObject, <a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator=nullptr)</td></tr>
<tr class="memdesc:a58e89288e2fe0b95ccb42dca4869c97c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clones the given instance. <br /></td></tr>
<tr class="separator:a58e89288e2fe0b95ccb42dca4869c97c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3433eb74288cfaf4f48765f132786544" id="r_a3433eb74288cfaf4f48765f132786544"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/df8/structez_r_t_t_i_allocator.htm#a3433eb74288cfaf4f48765f132786544">Deallocate</a> (void *pObject, <a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator=nullptr)=0</td></tr>
<tr class="memdesc:a3433eb74288cfaf4f48765f132786544"><td class="mdescLeft">&#160;</td><td class="mdescRight">Deallocates the given instance.  <br /></td></tr>
<tr class="separator:a3433eb74288cfaf4f48765f132786544"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>The interface for an allocator that creates instances of reflected types. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="ad37b47fce76695c9be6be7aea85b606b" name="ad37b47fce76695c9be6be7aea85b606b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad37b47fce76695c9be6be7aea85b606b">&#9670;&#160;</a></span>AllocateInternal()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../da/d7c/structez_internal_1_1_new_instance.htm">ezInternal::NewInstance</a>&lt; void &gt; ezRTTIAllocator::AllocateInternal </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *&#160;</td>
          <td class="paramname"><em>pAllocator</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">private</span><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Implemented in <a class="el" href="../../dd/d04/structez_r_t_t_i_no_allocator.htm#a42d68d42de148d683995c944adcc85e2">ezRTTINoAllocator</a>, and <a class="el" href="../../dc/ddb/structez_r_t_t_i_default_allocator.htm#a6251286561d4b004eaafb08e83ce3733">ezRTTIDefaultAllocator&lt; CLASS, AllocatorWrapper &gt;</a>.</p>

</div>
</div>
<a id="a996b32cc9b2e56c695ed8774a4b147bb" name="a996b32cc9b2e56c695ed8774a4b147bb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a996b32cc9b2e56c695ed8774a4b147bb">&#9670;&#160;</a></span>CanAllocate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool ezRTTIAllocator::CanAllocate </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns whether the type that is represented by this allocator, can be dynamically allocated at runtime. </p>

<p>Reimplemented in <a class="el" href="../../dd/d04/structez_r_t_t_i_no_allocator.htm#a4e5da32a61dc482097f78a14b773aab5">ezRTTINoAllocator</a>.</p>

</div>
</div>
<a id="a5f90f0b370a537baee472016cfb3c4f4" name="a5f90f0b370a537baee472016cfb3c4f4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5f90f0b370a537baee472016cfb3c4f4">&#9670;&#160;</a></span>CloneInternal()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual <a class="el" href="../../da/d7c/structez_internal_1_1_new_instance.htm">ezInternal::NewInstance</a>&lt; void &gt; ezRTTIAllocator::CloneInternal </td>
          <td>(</td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>pObject</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *&#160;</td>
          <td class="paramname"><em>pAllocator</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">private</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Reimplemented in <a class="el" href="../../dc/ddb/structez_r_t_t_i_default_allocator.htm#a63cb042988118f56d87c3217e4db7ee5">ezRTTIDefaultAllocator&lt; CLASS, AllocatorWrapper &gt;</a>.</p>

</div>
</div>
<a id="a3433eb74288cfaf4f48765f132786544" name="a3433eb74288cfaf4f48765f132786544"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3433eb74288cfaf4f48765f132786544">&#9670;&#160;</a></span>Deallocate()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void ezRTTIAllocator::Deallocate </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>pObject</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *&#160;</td>
          <td class="paramname"><em>pAllocator</em> = <code>nullptr</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Deallocates the given instance. </p>

<p>Implemented in <a class="el" href="../../dd/d04/structez_r_t_t_i_no_allocator.htm#a0d961bc1f87d5c78d65eec704cda4224">ezRTTINoAllocator</a>, <a class="el" href="../../dc/ddb/structez_r_t_t_i_default_allocator.htm#a7cc3a516ab3643593288afc6ba1ce86e">ezRTTIDefaultAllocator&lt; CLASS, AllocatorWrapper &gt;</a>, and <a class="el" href="../../d2/d20/classez_visual_script_coroutine_allocator.htm#a423fded907a11de054d807291b3c4273">ezVisualScriptCoroutineAllocator</a>.</p>

</div>
</div>
<hr/>The documentation for this struct was generated from the following files:<ul>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Reflection/Implementation/<a class="el" href="../../de/dd7/_r_t_t_i_8h_source.htm">RTTI.h</a></li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Reflection/Implementation/<b>RTTI.cpp</b></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../db/df8/structez_r_t_t_i_allocator.htm">ezRTTIAllocator</a></li>
    <li class="footer">Generated on Fri Jul 11 2025 12:18:00 for ezEngine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
