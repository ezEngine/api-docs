<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: ezOpenDdlReaderElement Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 23.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('db/d71/classez_open_ddl_reader_element.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="../../d1/d05/classez_open_ddl_reader_element-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ezOpenDdlReaderElement Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Represents a single 'object' in a DDL document, e.g. either a custom type or a primitives list.  
 <a href="../../db/d71/classez_open_ddl_reader_element.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d3/d4f/_open_ddl_reader_8h_source.htm">OpenDdlReader.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:afa52f5a10da99fb4d030773fefe3ac28"><td class="memItemLeft" align="right" valign="top"><a id="afa52f5a10da99fb4d030773fefe3ac28"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>EZ_DECLARE_POD_TYPE</b> ()</td></tr>
<tr class="separator:afa52f5a10da99fb4d030773fefe3ac28"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b816c7b67c04fa31edb22bd374e484b"><td class="memItemLeft" align="right" valign="top"><a id="a6b816c7b67c04fa31edb22bd374e484b"></a>
EZ_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d71/classez_open_ddl_reader_element.htm#a6b816c7b67c04fa31edb22bd374e484b">IsCustomType</a> () const</td></tr>
<tr class="memdesc:a6b816c7b67c04fa31edb22bd374e484b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Whether this is a custom object type that typically contains sub-elements. <br /></td></tr>
<tr class="separator:a6b816c7b67c04fa31edb22bd374e484b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e78e3b7682622e2bf9270b5f72a3206"><td class="memItemLeft" align="right" valign="top"><a id="a3e78e3b7682622e2bf9270b5f72a3206"></a>
EZ_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d71/classez_open_ddl_reader_element.htm#a3e78e3b7682622e2bf9270b5f72a3206">IsCustomType</a> (<a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a> sTypeName) const</td></tr>
<tr class="memdesc:a3e78e3b7682622e2bf9270b5f72a3206"><td class="mdescLeft">&#160;</td><td class="mdescRight">Whether this is a custom object type of the requested type. <br /></td></tr>
<tr class="separator:a3e78e3b7682622e2bf9270b5f72a3206"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0dc94c18f19cf4c722eee12d3dee0d42"><td class="memItemLeft" align="right" valign="top"><a id="a0dc94c18f19cf4c722eee12d3dee0d42"></a>
EZ_ALWAYS_INLINE <a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d71/classez_open_ddl_reader_element.htm#a0dc94c18f19cf4c722eee12d3dee0d42">GetCustomType</a> () const</td></tr>
<tr class="memdesc:a0dc94c18f19cf4c722eee12d3dee0d42"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the string for the custom type name. <br /></td></tr>
<tr class="separator:a0dc94c18f19cf4c722eee12d3dee0d42"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1cf22aa3249fc426e73ad09d7a2e3a3e"><td class="memItemLeft" align="right" valign="top"><a id="a1cf22aa3249fc426e73ad09d7a2e3a3e"></a>
EZ_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d71/classez_open_ddl_reader_element.htm#a1cf22aa3249fc426e73ad09d7a2e3a3e">HasName</a> () const</td></tr>
<tr class="memdesc:a1cf22aa3249fc426e73ad09d7a2e3a3e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Whether the name of the object is non-empty. <br /></td></tr>
<tr class="separator:a1cf22aa3249fc426e73ad09d7a2e3a3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a70f7fb7d4c292482fe2d7220be2a52f0"><td class="memItemLeft" align="right" valign="top"><a id="a70f7fb7d4c292482fe2d7220be2a52f0"></a>
EZ_ALWAYS_INLINE <a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d71/classez_open_ddl_reader_element.htm#a70f7fb7d4c292482fe2d7220be2a52f0">GetName</a> () const</td></tr>
<tr class="memdesc:a70f7fb7d4c292482fe2d7220be2a52f0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the name of the object. <br /></td></tr>
<tr class="separator:a70f7fb7d4c292482fe2d7220be2a52f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6fca5cd3571ccdb8fefb189586af08cc"><td class="memItemLeft" align="right" valign="top"><a id="a6fca5cd3571ccdb8fefb189586af08cc"></a>
EZ_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d71/classez_open_ddl_reader_element.htm#a6fca5cd3571ccdb8fefb189586af08cc">IsNameGlobal</a> () const</td></tr>
<tr class="memdesc:a6fca5cd3571ccdb8fefb189586af08cc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the element name is a global or a local name. <br /></td></tr>
<tr class="separator:a6fca5cd3571ccdb8fefb189586af08cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a11805deee98259f9816d1a36e80471de"><td class="memItemLeft" align="right" valign="top"><a id="a11805deee98259f9816d1a36e80471de"></a>
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d71/classez_open_ddl_reader_element.htm#a11805deee98259f9816d1a36e80471de">GetNumChildObjects</a> () const</td></tr>
<tr class="memdesc:a11805deee98259f9816d1a36e80471de"><td class="mdescLeft">&#160;</td><td class="mdescRight">How many sub-elements the object has. <br /></td></tr>
<tr class="separator:a11805deee98259f9816d1a36e80471de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a38abb06f534da456ec4e0ae2ea18168d"><td class="memItemLeft" align="right" valign="top"><a id="a38abb06f534da456ec4e0ae2ea18168d"></a>
const EZ_ALWAYS_INLINE <a class="el" href="../../db/d71/classez_open_ddl_reader_element.htm">ezOpenDdlReaderElement</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d71/classez_open_ddl_reader_element.htm#a38abb06f534da456ec4e0ae2ea18168d">GetFirstChild</a> () const</td></tr>
<tr class="memdesc:a38abb06f534da456ec4e0ae2ea18168d"><td class="mdescLeft">&#160;</td><td class="mdescRight">If this is a custom type element, the returned pointer is to the first child element. <br /></td></tr>
<tr class="separator:a38abb06f534da456ec4e0ae2ea18168d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3df7499476931d61909d9dd883f14a19"><td class="memItemLeft" align="right" valign="top"><a id="a3df7499476931d61909d9dd883f14a19"></a>
const EZ_ALWAYS_INLINE <a class="el" href="../../db/d71/classez_open_ddl_reader_element.htm">ezOpenDdlReaderElement</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d71/classez_open_ddl_reader_element.htm#a3df7499476931d61909d9dd883f14a19">GetSibling</a> () const</td></tr>
<tr class="memdesc:a3df7499476931d61909d9dd883f14a19"><td class="mdescLeft">&#160;</td><td class="mdescRight">If the parent is a custom type element, the next child after this is returned. <br /></td></tr>
<tr class="separator:a3df7499476931d61909d9dd883f14a19"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2cadd2b5cbda198c73088cdd15351b05"><td class="memItemLeft" align="right" valign="top"><a id="a2cadd2b5cbda198c73088cdd15351b05"></a>
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d71/classez_open_ddl_reader_element.htm#a2cadd2b5cbda198c73088cdd15351b05">GetNumPrimitives</a> () const</td></tr>
<tr class="memdesc:a2cadd2b5cbda198c73088cdd15351b05"><td class="mdescLeft">&#160;</td><td class="mdescRight">For non-custom types this returns how many primitives are stored at this element. <br /></td></tr>
<tr class="separator:a2cadd2b5cbda198c73088cdd15351b05"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12109ab66d7ded089d3c0269bd5c9e72"><td class="memItemLeft" align="right" valign="top"><a id="a12109ab66d7ded089d3c0269bd5c9e72"></a>
EZ_ALWAYS_INLINE ezOpenDdlPrimitiveType&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d71/classez_open_ddl_reader_element.htm#a12109ab66d7ded089d3c0269bd5c9e72">GetPrimitivesType</a> () const</td></tr>
<tr class="memdesc:a12109ab66d7ded089d3c0269bd5c9e72"><td class="mdescLeft">&#160;</td><td class="mdescRight">For non-custom types this returns the type of primitive that is stored at this element. <br /></td></tr>
<tr class="separator:a12109ab66d7ded089d3c0269bd5c9e72"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aacc5908328a8244d3786d2a8f4220c1f"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d71/classez_open_ddl_reader_element.htm#aacc5908328a8244d3786d2a8f4220c1f">HasPrimitives</a> (ezOpenDdlPrimitiveType type, ezUInt32 uiMinNumberOfPrimitives=1) const</td></tr>
<tr class="memdesc:aacc5908328a8244d3786d2a8f4220c1f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if the element stores the requested type of primitives AND has at least the desired amount of them, so that accessing the data array at certain indices is safe.  <a href="../../db/d71/classez_open_ddl_reader_element.htm#aacc5908328a8244d3786d2a8f4220c1f">More...</a><br /></td></tr>
<tr class="separator:aacc5908328a8244d3786d2a8f4220c1f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a99b4dd2891e42dd4cb50ee6c143dbd31"><td class="memItemLeft" align="right" valign="top"><a id="a99b4dd2891e42dd4cb50ee6c143dbd31"></a>
const EZ_ALWAYS_INLINE bool *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d71/classez_open_ddl_reader_element.htm#a99b4dd2891e42dd4cb50ee6c143dbd31">GetPrimitivesBool</a> () const</td></tr>
<tr class="memdesc:a99b4dd2891e42dd4cb50ee6c143dbd31"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a pointer to the primitive data cast to a specific type. Only valid if <a class="el" href="../../db/d71/classez_open_ddl_reader_element.htm#a12109ab66d7ded089d3c0269bd5c9e72" title="For non-custom types this returns the type of primitive that is stored at this element.">GetPrimitivesType()</a> actually returns this type. <br /></td></tr>
<tr class="separator:a99b4dd2891e42dd4cb50ee6c143dbd31"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a313ad4a946d81985b1e335acce51e14a"><td class="memItemLeft" align="right" valign="top"><a id="a313ad4a946d81985b1e335acce51e14a"></a>
const EZ_ALWAYS_INLINE ezInt8 *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d71/classez_open_ddl_reader_element.htm#a313ad4a946d81985b1e335acce51e14a">GetPrimitivesInt8</a> () const</td></tr>
<tr class="memdesc:a313ad4a946d81985b1e335acce51e14a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a pointer to the primitive data cast to a specific type. Only valid if <a class="el" href="../../db/d71/classez_open_ddl_reader_element.htm#a12109ab66d7ded089d3c0269bd5c9e72" title="For non-custom types this returns the type of primitive that is stored at this element.">GetPrimitivesType()</a> actually returns this type. <br /></td></tr>
<tr class="separator:a313ad4a946d81985b1e335acce51e14a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abfec295241a8672278f57858ad014f91"><td class="memItemLeft" align="right" valign="top"><a id="abfec295241a8672278f57858ad014f91"></a>
const EZ_ALWAYS_INLINE ezInt16 *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d71/classez_open_ddl_reader_element.htm#abfec295241a8672278f57858ad014f91">GetPrimitivesInt16</a> () const</td></tr>
<tr class="memdesc:abfec295241a8672278f57858ad014f91"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a pointer to the primitive data cast to a specific type. Only valid if <a class="el" href="../../db/d71/classez_open_ddl_reader_element.htm#a12109ab66d7ded089d3c0269bd5c9e72" title="For non-custom types this returns the type of primitive that is stored at this element.">GetPrimitivesType()</a> actually returns this type. <br /></td></tr>
<tr class="separator:abfec295241a8672278f57858ad014f91"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a56de7dc69754e8859722093ac6d61b68"><td class="memItemLeft" align="right" valign="top"><a id="a56de7dc69754e8859722093ac6d61b68"></a>
const EZ_ALWAYS_INLINE ezInt32 *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d71/classez_open_ddl_reader_element.htm#a56de7dc69754e8859722093ac6d61b68">GetPrimitivesInt32</a> () const</td></tr>
<tr class="memdesc:a56de7dc69754e8859722093ac6d61b68"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a pointer to the primitive data cast to a specific type. Only valid if <a class="el" href="../../db/d71/classez_open_ddl_reader_element.htm#a12109ab66d7ded089d3c0269bd5c9e72" title="For non-custom types this returns the type of primitive that is stored at this element.">GetPrimitivesType()</a> actually returns this type. <br /></td></tr>
<tr class="separator:a56de7dc69754e8859722093ac6d61b68"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab656a50e56edb7c0079de118b83aa4b7"><td class="memItemLeft" align="right" valign="top"><a id="ab656a50e56edb7c0079de118b83aa4b7"></a>
const EZ_ALWAYS_INLINE ezInt64 *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d71/classez_open_ddl_reader_element.htm#ab656a50e56edb7c0079de118b83aa4b7">GetPrimitivesInt64</a> () const</td></tr>
<tr class="memdesc:ab656a50e56edb7c0079de118b83aa4b7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a pointer to the primitive data cast to a specific type. Only valid if <a class="el" href="../../db/d71/classez_open_ddl_reader_element.htm#a12109ab66d7ded089d3c0269bd5c9e72" title="For non-custom types this returns the type of primitive that is stored at this element.">GetPrimitivesType()</a> actually returns this type. <br /></td></tr>
<tr class="separator:ab656a50e56edb7c0079de118b83aa4b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab926befcdfce5894ef38ed23b7939840"><td class="memItemLeft" align="right" valign="top"><a id="ab926befcdfce5894ef38ed23b7939840"></a>
const EZ_ALWAYS_INLINE ezUInt8 *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d71/classez_open_ddl_reader_element.htm#ab926befcdfce5894ef38ed23b7939840">GetPrimitivesUInt8</a> () const</td></tr>
<tr class="memdesc:ab926befcdfce5894ef38ed23b7939840"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a pointer to the primitive data cast to a specific type. Only valid if <a class="el" href="../../db/d71/classez_open_ddl_reader_element.htm#a12109ab66d7ded089d3c0269bd5c9e72" title="For non-custom types this returns the type of primitive that is stored at this element.">GetPrimitivesType()</a> actually returns this type. <br /></td></tr>
<tr class="separator:ab926befcdfce5894ef38ed23b7939840"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3bd7870608d9474845fca996bbc30ee6"><td class="memItemLeft" align="right" valign="top"><a id="a3bd7870608d9474845fca996bbc30ee6"></a>
const EZ_ALWAYS_INLINE ezUInt16 *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d71/classez_open_ddl_reader_element.htm#a3bd7870608d9474845fca996bbc30ee6">GetPrimitivesUInt16</a> () const</td></tr>
<tr class="memdesc:a3bd7870608d9474845fca996bbc30ee6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a pointer to the primitive data cast to a specific type. Only valid if <a class="el" href="../../db/d71/classez_open_ddl_reader_element.htm#a12109ab66d7ded089d3c0269bd5c9e72" title="For non-custom types this returns the type of primitive that is stored at this element.">GetPrimitivesType()</a> actually returns this type. <br /></td></tr>
<tr class="separator:a3bd7870608d9474845fca996bbc30ee6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a224ea9fe7f42b482640f2ca71332e5ce"><td class="memItemLeft" align="right" valign="top"><a id="a224ea9fe7f42b482640f2ca71332e5ce"></a>
const EZ_ALWAYS_INLINE ezUInt32 *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d71/classez_open_ddl_reader_element.htm#a224ea9fe7f42b482640f2ca71332e5ce">GetPrimitivesUInt32</a> () const</td></tr>
<tr class="memdesc:a224ea9fe7f42b482640f2ca71332e5ce"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a pointer to the primitive data cast to a specific type. Only valid if <a class="el" href="../../db/d71/classez_open_ddl_reader_element.htm#a12109ab66d7ded089d3c0269bd5c9e72" title="For non-custom types this returns the type of primitive that is stored at this element.">GetPrimitivesType()</a> actually returns this type. <br /></td></tr>
<tr class="separator:a224ea9fe7f42b482640f2ca71332e5ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aece3c41a01a13984c2b064165ff44f48"><td class="memItemLeft" align="right" valign="top"><a id="aece3c41a01a13984c2b064165ff44f48"></a>
const EZ_ALWAYS_INLINE ezUInt64 *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d71/classez_open_ddl_reader_element.htm#aece3c41a01a13984c2b064165ff44f48">GetPrimitivesUInt64</a> () const</td></tr>
<tr class="memdesc:aece3c41a01a13984c2b064165ff44f48"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a pointer to the primitive data cast to a specific type. Only valid if <a class="el" href="../../db/d71/classez_open_ddl_reader_element.htm#a12109ab66d7ded089d3c0269bd5c9e72" title="For non-custom types this returns the type of primitive that is stored at this element.">GetPrimitivesType()</a> actually returns this type. <br /></td></tr>
<tr class="separator:aece3c41a01a13984c2b064165ff44f48"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6728bbda12b21856fed3df7e293bfbde"><td class="memItemLeft" align="right" valign="top"><a id="a6728bbda12b21856fed3df7e293bfbde"></a>
const EZ_ALWAYS_INLINE float *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d71/classez_open_ddl_reader_element.htm#a6728bbda12b21856fed3df7e293bfbde">GetPrimitivesFloat</a> () const</td></tr>
<tr class="memdesc:a6728bbda12b21856fed3df7e293bfbde"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a pointer to the primitive data cast to a specific type. Only valid if <a class="el" href="../../db/d71/classez_open_ddl_reader_element.htm#a12109ab66d7ded089d3c0269bd5c9e72" title="For non-custom types this returns the type of primitive that is stored at this element.">GetPrimitivesType()</a> actually returns this type. <br /></td></tr>
<tr class="separator:a6728bbda12b21856fed3df7e293bfbde"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa366937307876fe3be153b8fc15f342d"><td class="memItemLeft" align="right" valign="top"><a id="aa366937307876fe3be153b8fc15f342d"></a>
const EZ_ALWAYS_INLINE double *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d71/classez_open_ddl_reader_element.htm#aa366937307876fe3be153b8fc15f342d">GetPrimitivesDouble</a> () const</td></tr>
<tr class="memdesc:aa366937307876fe3be153b8fc15f342d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a pointer to the primitive data cast to a specific type. Only valid if <a class="el" href="../../db/d71/classez_open_ddl_reader_element.htm#a12109ab66d7ded089d3c0269bd5c9e72" title="For non-custom types this returns the type of primitive that is stored at this element.">GetPrimitivesType()</a> actually returns this type. <br /></td></tr>
<tr class="separator:aa366937307876fe3be153b8fc15f342d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ace3a4797f0d1836af66515d5d8a4b9"><td class="memItemLeft" align="right" valign="top"><a id="a0ace3a4797f0d1836af66515d5d8a4b9"></a>
const EZ_ALWAYS_INLINE <a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d71/classez_open_ddl_reader_element.htm#a0ace3a4797f0d1836af66515d5d8a4b9">GetPrimitivesString</a> () const</td></tr>
<tr class="memdesc:a0ace3a4797f0d1836af66515d5d8a4b9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a pointer to the primitive data cast to a specific type. Only valid if <a class="el" href="../../db/d71/classez_open_ddl_reader_element.htm#a12109ab66d7ded089d3c0269bd5c9e72" title="For non-custom types this returns the type of primitive that is stored at this element.">GetPrimitivesType()</a> actually returns this type. <br /></td></tr>
<tr class="separator:a0ace3a4797f0d1836af66515d5d8a4b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95aeda263ae37ffe771c6f1ca94910e6"><td class="memItemLeft" align="right" valign="top"><a id="a95aeda263ae37ffe771c6f1ca94910e6"></a>
const <a class="el" href="../../db/d71/classez_open_ddl_reader_element.htm">ezOpenDdlReaderElement</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d71/classez_open_ddl_reader_element.htm#a95aeda263ae37ffe771c6f1ca94910e6">FindChild</a> (<a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a> sName) const</td></tr>
<tr class="memdesc:a95aeda263ae37ffe771c6f1ca94910e6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Searches for a child with the given name. It does not matter whether the object's name is 'local' or 'global'. <em>szName</em> is case-sensitive. <br /></td></tr>
<tr class="separator:a95aeda263ae37ffe771c6f1ca94910e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa490e9d4efdab2f0380f74af6ed190f"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="../../db/d71/classez_open_ddl_reader_element.htm">ezOpenDdlReaderElement</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d71/classez_open_ddl_reader_element.htm#afa490e9d4efdab2f0380f74af6ed190f">FindChildOfType</a> (ezOpenDdlPrimitiveType type, <a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a> sName, ezUInt32 uiMinNumberOfPrimitives=1) const</td></tr>
<tr class="memdesc:afa490e9d4efdab2f0380f74af6ed190f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Searches for a child element that has the given type, name and if it is a primitives list, at least the desired number of primitives.  <a href="../../db/d71/classez_open_ddl_reader_element.htm#afa490e9d4efdab2f0380f74af6ed190f">More...</a><br /></td></tr>
<tr class="separator:afa490e9d4efdab2f0380f74af6ed190f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad99d9778a2ac57851089d61372715f32"><td class="memItemLeft" align="right" valign="top"><a id="ad99d9778a2ac57851089d61372715f32"></a>
const <a class="el" href="../../db/d71/classez_open_ddl_reader_element.htm">ezOpenDdlReaderElement</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d71/classez_open_ddl_reader_element.htm#ad99d9778a2ac57851089d61372715f32">FindChildOfType</a> (<a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a> sType, <a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a> sName=nullptr) const</td></tr>
<tr class="memdesc:ad99d9778a2ac57851089d61372715f32"><td class="mdescLeft">&#160;</td><td class="mdescRight">Searches for a child element with the given type and optionally also a certain name. <br /></td></tr>
<tr class="separator:ad99d9778a2ac57851089d61372715f32"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:aec7e8b32b7796cb5a8126dd9cdb0d677"><td class="memItemLeft" align="right" valign="top"><a id="aec7e8b32b7796cb5a8126dd9cdb0d677"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><b>ezOpenDdlReader</b></td></tr>
<tr class="separator:aec7e8b32b7796cb5a8126dd9cdb0d677"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Represents a single 'object' in a DDL document, e.g. either a custom type or a primitives list. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="afa490e9d4efdab2f0380f74af6ed190f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afa490e9d4efdab2f0380f74af6ed190f">&#9670;&nbsp;</a></span>FindChildOfType()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="../../db/d71/classez_open_ddl_reader_element.htm">ezOpenDdlReaderElement</a> * ezOpenDdlReaderElement::FindChildOfType </td>
          <td>(</td>
          <td class="paramtype">ezOpenDdlPrimitiveType&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a>&#160;</td>
          <td class="paramname"><em>sName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ezUInt32&#160;</td>
          <td class="paramname"><em>uiMinNumberOfPrimitives</em> = <code>1</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Searches for a child element that has the given type, name and if it is a primitives list, at least the desired number of primitives. </p>
<dl class="test"><dt><b><a class="el" href="../../d4/df6/test.htm#_test000008">Test:</a></b></dt><dd>This is new </dd></dl>

</div>
</div>
<a id="aacc5908328a8244d3786d2a8f4220c1f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aacc5908328a8244d3786d2a8f4220c1f">&#9670;&nbsp;</a></span>HasPrimitives()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool ezOpenDdlReaderElement::HasPrimitives </td>
          <td>(</td>
          <td class="paramtype">ezOpenDdlPrimitiveType&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ezUInt32&#160;</td>
          <td class="paramname"><em>uiMinNumberOfPrimitives</em> = <code>1</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns true if the element stores the requested type of primitives AND has at least the desired amount of them, so that accessing the data array at certain indices is safe. </p>
<dl class="test"><dt><b><a class="el" href="../../d4/df6/test.htm#_test000007">Test:</a></b></dt><dd>This is new </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/IO/<a class="el" href="../../d3/d4f/_open_ddl_reader_8h_source.htm">OpenDdlReader.h</a></li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/IO/Implementation/OpenDdlReader.cpp</li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../db/d71/classez_open_ddl_reader_element.htm">ezOpenDdlReaderElement</a></li>
    <li class="footer">Generated on Sat Nov 11 2023 17:04:28 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
