<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: ezAngle Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 21.10</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('db/d6f/classez_angle.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="../../d8/da9/classez_angle-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ezAngle Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Float wrapper struct for a safe usage and conversions of angles.  
 <a href="../../db/d6f/classez_angle.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../da/d18/_angle_8h_source.htm">Angle.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ab0661e29487026a99814d73c3bddb947"><td class="memItemLeft" align="right" valign="top"><a id="ab0661e29487026a99814d73c3bddb947"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>EZ_DECLARE_POD_TYPE</b> ()</td></tr>
<tr class="separator:ab0661e29487026a99814d73c3bddb947"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4313120f7698856e3215669339486c83"><td class="memItemLeft" align="right" valign="top"><a id="a4313120f7698856e3215669339486c83"></a>
constexpr&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d6f/classez_angle.htm#a4313120f7698856e3215669339486c83">ezAngle</a> ()</td></tr>
<tr class="memdesc:a4313120f7698856e3215669339486c83"><td class="mdescLeft">&#160;</td><td class="mdescRight">Standard constructor, initializing with 0. <br /></td></tr>
<tr class="separator:a4313120f7698856e3215669339486c83"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72444c5d0dbae7c823110344e59b4a69"><td class="memItemLeft" align="right" valign="top"><a id="a72444c5d0dbae7c823110344e59b4a69"></a>
constexpr float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d6f/classez_angle.htm#a72444c5d0dbae7c823110344e59b4a69">GetDegree</a> () const</td></tr>
<tr class="memdesc:a72444c5d0dbae7c823110344e59b4a69"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the degree value. (Performs a conversion) <br /></td></tr>
<tr class="separator:a72444c5d0dbae7c823110344e59b4a69"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad0abad83b3f0b0ff5427034dc99111d0"><td class="memItemLeft" align="right" valign="top"><a id="ad0abad83b3f0b0ff5427034dc99111d0"></a>
constexpr float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d6f/classez_angle.htm#ad0abad83b3f0b0ff5427034dc99111d0">GetRadian</a> () const</td></tr>
<tr class="memdesc:ad0abad83b3f0b0ff5427034dc99111d0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the radian value. (No need for any conversion) <br /></td></tr>
<tr class="separator:ad0abad83b3f0b0ff5427034dc99111d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa5715443d0ab1a9a2eb9ed6740341f93"><td class="memItemLeft" align="right" valign="top"><a id="aa5715443d0ab1a9a2eb9ed6740341f93"></a>
EZ_ALWAYS_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d6f/classez_angle.htm#aa5715443d0ab1a9a2eb9ed6740341f93">SetRadian</a> (float rad)</td></tr>
<tr class="memdesc:aa5715443d0ab1a9a2eb9ed6740341f93"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the radian value. (No need for any conversion) <br /></td></tr>
<tr class="separator:aa5715443d0ab1a9a2eb9ed6740341f93"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7d2199f073fc8e747e1c5865b90b0e7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d6f/classez_angle.htm#ab7d2199f073fc8e747e1c5865b90b0e7">NormalizeRange</a> ()</td></tr>
<tr class="memdesc:ab7d2199f073fc8e747e1c5865b90b0e7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Brings the angle into the range of 0 degree - 360 degree.  <a href="../../db/d6f/classez_angle.htm#ab7d2199f073fc8e747e1c5865b90b0e7">More...</a><br /></td></tr>
<tr class="separator:ab7d2199f073fc8e747e1c5865b90b0e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a204963eccf35f5c1c7b16f5cff4fcf0d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../db/d6f/classez_angle.htm">ezAngle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d6f/classez_angle.htm#a204963eccf35f5c1c7b16f5cff4fcf0d">GetNormalizedRange</a> () const</td></tr>
<tr class="memdesc:a204963eccf35f5c1c7b16f5cff4fcf0d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an equivalent angle with range between 0 degree - 360 degree.  <a href="../../db/d6f/classez_angle.htm#a204963eccf35f5c1c7b16f5cff4fcf0d">More...</a><br /></td></tr>
<tr class="separator:a204963eccf35f5c1c7b16f5cff4fcf0d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf43f3a575a7f84e269c5a8d9be03c33"><td class="memItemLeft" align="right" valign="top"><a id="aaf43f3a575a7f84e269c5a8d9be03c33"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d6f/classez_angle.htm#aaf43f3a575a7f84e269c5a8d9be03c33">IsEqualSimple</a> (<a class="el" href="../../db/d6f/classez_angle.htm">ezAngle</a> rhs, <a class="el" href="../../db/d6f/classez_angle.htm">ezAngle</a> epsilon) const</td></tr>
<tr class="memdesc:aaf43f3a575a7f84e269c5a8d9be03c33"><td class="mdescLeft">&#160;</td><td class="mdescRight">Equality check with epsilon. Simple check without normalization. 360 degree will equal 0 degree, but 720 will not. <br /></td></tr>
<tr class="separator:aaf43f3a575a7f84e269c5a8d9be03c33"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca668207b56de72f89bbd6aa4585544a"><td class="memItemLeft" align="right" valign="top"><a id="aca668207b56de72f89bbd6aa4585544a"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d6f/classez_angle.htm#aca668207b56de72f89bbd6aa4585544a">IsEqualNormalized</a> (<a class="el" href="../../db/d6f/classez_angle.htm">ezAngle</a> rhs, <a class="el" href="../../db/d6f/classez_angle.htm">ezAngle</a> epsilon) const</td></tr>
<tr class="memdesc:aca668207b56de72f89bbd6aa4585544a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Equality check with epsilon that uses normalized angles. Will recognize 720 degree == 0 degree. <br /></td></tr>
<tr class="separator:aca668207b56de72f89bbd6aa4585544a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8bf8795c04c9dee8d24202744e12e374"><td class="memItemLeft" align="right" valign="top"><a id="a8bf8795c04c9dee8d24202744e12e374"></a>
constexpr <a class="el" href="../../db/d6f/classez_angle.htm">ezAngle</a>&#160;</td><td class="memItemRight" valign="bottom"><b>operator-</b> () const</td></tr>
<tr class="separator:a8bf8795c04c9dee8d24202744e12e374"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0b6f7aabdc24b281f3b4e3f86455b4c"><td class="memItemLeft" align="right" valign="top"><a id="aa0b6f7aabdc24b281f3b4e3f86455b4c"></a>
constexpr <a class="el" href="../../db/d6f/classez_angle.htm">ezAngle</a>&#160;</td><td class="memItemRight" valign="bottom"><b>operator+</b> (<a class="el" href="../../db/d6f/classez_angle.htm">ezAngle</a> r) const</td></tr>
<tr class="separator:aa0b6f7aabdc24b281f3b4e3f86455b4c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae03e793fcbc9dd625d84bb0016430349"><td class="memItemLeft" align="right" valign="top"><a id="ae03e793fcbc9dd625d84bb0016430349"></a>
constexpr <a class="el" href="../../db/d6f/classez_angle.htm">ezAngle</a>&#160;</td><td class="memItemRight" valign="bottom"><b>operator-</b> (<a class="el" href="../../db/d6f/classez_angle.htm">ezAngle</a> r) const</td></tr>
<tr class="separator:ae03e793fcbc9dd625d84bb0016430349"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac4d1ce486cfe10f1b1ee85d95e161f6f"><td class="memItemLeft" align="right" valign="top"><a id="ac4d1ce486cfe10f1b1ee85d95e161f6f"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator+=</b> (<a class="el" href="../../db/d6f/classez_angle.htm">ezAngle</a> r)</td></tr>
<tr class="separator:ac4d1ce486cfe10f1b1ee85d95e161f6f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aebcacf3f5cb0e201f324af11f6ca5cba"><td class="memItemLeft" align="right" valign="top"><a id="aebcacf3f5cb0e201f324af11f6ca5cba"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator-=</b> (<a class="el" href="../../db/d6f/classez_angle.htm">ezAngle</a> r)</td></tr>
<tr class="separator:aebcacf3f5cb0e201f324af11f6ca5cba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d203ea1230f16c6fbf7e25822dff122"><td class="memItemLeft" align="right" valign="top"><a id="a5d203ea1230f16c6fbf7e25822dff122"></a>
constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator==</b> (const <a class="el" href="../../db/d6f/classez_angle.htm">ezAngle</a> &amp;r) const</td></tr>
<tr class="separator:a5d203ea1230f16c6fbf7e25822dff122"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf05dae5b83f660ae47b4c64f743f9d4"><td class="memItemLeft" align="right" valign="top"><a id="adf05dae5b83f660ae47b4c64f743f9d4"></a>
constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator!=</b> (const <a class="el" href="../../db/d6f/classez_angle.htm">ezAngle</a> &amp;r) const</td></tr>
<tr class="separator:adf05dae5b83f660ae47b4c64f743f9d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a3e0d32741459909984fcf6e2edd169"><td class="memItemLeft" align="right" valign="top"><a id="a8a3e0d32741459909984fcf6e2edd169"></a>
constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&lt;</b> (const <a class="el" href="../../db/d6f/classez_angle.htm">ezAngle</a> &amp;r) const</td></tr>
<tr class="separator:a8a3e0d32741459909984fcf6e2edd169"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a661b6f213d6a24c7f8f51dcc6c76fbaa"><td class="memItemLeft" align="right" valign="top"><a id="a661b6f213d6a24c7f8f51dcc6c76fbaa"></a>
constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&gt;</b> (const <a class="el" href="../../db/d6f/classez_angle.htm">ezAngle</a> &amp;r) const</td></tr>
<tr class="separator:a661b6f213d6a24c7f8f51dcc6c76fbaa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a71d9e244cbc6a1ba860eaeebe5cf95"><td class="memItemLeft" align="right" valign="top"><a id="a0a71d9e244cbc6a1ba860eaeebe5cf95"></a>
constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&lt;=</b> (const <a class="el" href="../../db/d6f/classez_angle.htm">ezAngle</a> &amp;r) const</td></tr>
<tr class="separator:a0a71d9e244cbc6a1ba860eaeebe5cf95"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a50fd5b734f58f2d1a107cd45613754b4"><td class="memItemLeft" align="right" valign="top"><a id="a50fd5b734f58f2d1a107cd45613754b4"></a>
constexpr bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&gt;=</b> (const <a class="el" href="../../db/d6f/classez_angle.htm">ezAngle</a> &amp;r) const</td></tr>
<tr class="separator:a50fd5b734f58f2d1a107cd45613754b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed96a8db0c05572139ac49ef3bc142a3"><td class="memTemplParams" colspan="2"><a id="aed96a8db0c05572139ac49ef3bc142a3"></a>
template&lt;typename Type &gt; </td></tr>
<tr class="memitem:aed96a8db0c05572139ac49ef3bc142a3"><td class="memTemplItemLeft" align="right" valign="top">constexpr EZ_ALWAYS_INLINE Type&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Pi</b> ()</td></tr>
<tr class="separator:aed96a8db0c05572139ac49ef3bc142a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5636ede3702fd71793ffd320f743072"><td class="memTemplParams" colspan="2"><a id="ae5636ede3702fd71793ffd320f743072"></a>
template&lt;typename Type &gt; </td></tr>
<tr class="memitem:ae5636ede3702fd71793ffd320f743072"><td class="memTemplItemLeft" align="right" valign="top">constexpr EZ_ALWAYS_INLINE Type&#160;</td><td class="memTemplItemRight" valign="bottom"><b>DegToRadMultiplier</b> ()</td></tr>
<tr class="separator:ae5636ede3702fd71793ffd320f743072"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ff6a28b9e56d0f9cf6ef0015f81db90"><td class="memTemplParams" colspan="2"><a id="a7ff6a28b9e56d0f9cf6ef0015f81db90"></a>
template&lt;typename Type &gt; </td></tr>
<tr class="memitem:a7ff6a28b9e56d0f9cf6ef0015f81db90"><td class="memTemplItemLeft" align="right" valign="top">constexpr EZ_ALWAYS_INLINE Type&#160;</td><td class="memTemplItemRight" valign="bottom"><b>RadToDegMultiplier</b> ()</td></tr>
<tr class="separator:a7ff6a28b9e56d0f9cf6ef0015f81db90"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa83b377270c528dbb7b07288f723250c"><td class="memTemplParams" colspan="2"><a id="aa83b377270c528dbb7b07288f723250c"></a>
template&lt;typename Type &gt; </td></tr>
<tr class="memitem:aa83b377270c528dbb7b07288f723250c"><td class="memTemplItemLeft" align="right" valign="top">constexpr Type&#160;</td><td class="memTemplItemRight" valign="bottom"><b>DegToRad</b> (Type f)</td></tr>
<tr class="separator:aa83b377270c528dbb7b07288f723250c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67295c83428f2e5850188dd37cead6ab"><td class="memTemplParams" colspan="2"><a id="a67295c83428f2e5850188dd37cead6ab"></a>
template&lt;typename Type &gt; </td></tr>
<tr class="memitem:a67295c83428f2e5850188dd37cead6ab"><td class="memTemplItemLeft" align="right" valign="top">constexpr Type&#160;</td><td class="memTemplItemRight" valign="bottom"><b>RadToDeg</b> (Type f)</td></tr>
<tr class="separator:a67295c83428f2e5850188dd37cead6ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:aee264ae3d78889dc28af8f249bfd1896"><td class="memTemplParams" colspan="2"><a id="aee264ae3d78889dc28af8f249bfd1896"></a>
template&lt;typename Type &gt; </td></tr>
<tr class="memitem:aee264ae3d78889dc28af8f249bfd1896"><td class="memTemplItemLeft" align="right" valign="top">constexpr static EZ_ALWAYS_INLINE Type&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../db/d6f/classez_angle.htm#aee264ae3d78889dc28af8f249bfd1896">DegToRadMultiplier</a> ()</td></tr>
<tr class="memdesc:aee264ae3d78889dc28af8f249bfd1896"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the constant to multiply with an angle in degree to convert it to radians. <br /></td></tr>
<tr class="separator:aee264ae3d78889dc28af8f249bfd1896"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a824421cba6dd5ee07e2cb6ae76e6b2f6"><td class="memTemplParams" colspan="2"><a id="a824421cba6dd5ee07e2cb6ae76e6b2f6"></a>
template&lt;typename Type &gt; </td></tr>
<tr class="memitem:a824421cba6dd5ee07e2cb6ae76e6b2f6"><td class="memTemplItemLeft" align="right" valign="top">constexpr static EZ_ALWAYS_INLINE Type&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../db/d6f/classez_angle.htm#a824421cba6dd5ee07e2cb6ae76e6b2f6">RadToDegMultiplier</a> ()</td></tr>
<tr class="memdesc:a824421cba6dd5ee07e2cb6ae76e6b2f6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the constant to multiply with an angle in degree to convert it to radians. <br /></td></tr>
<tr class="separator:a824421cba6dd5ee07e2cb6ae76e6b2f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adab2ede26eb53b905568e319e4ac1453"><td class="memTemplParams" colspan="2"><a id="adab2ede26eb53b905568e319e4ac1453"></a>
template&lt;typename Type &gt; </td></tr>
<tr class="memitem:adab2ede26eb53b905568e319e4ac1453"><td class="memTemplItemLeft" align="right" valign="top">constexpr static Type&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../db/d6f/classez_angle.htm#adab2ede26eb53b905568e319e4ac1453">DegToRad</a> (Type f)</td></tr>
<tr class="memdesc:adab2ede26eb53b905568e319e4ac1453"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts an angle in degree to radians. <br /></td></tr>
<tr class="separator:adab2ede26eb53b905568e319e4ac1453"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a49cef592fd82ca0bb2ec82119460d5f2"><td class="memTemplParams" colspan="2"><a id="a49cef592fd82ca0bb2ec82119460d5f2"></a>
template&lt;typename Type &gt; </td></tr>
<tr class="memitem:a49cef592fd82ca0bb2ec82119460d5f2"><td class="memTemplItemLeft" align="right" valign="top">constexpr static Type&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../db/d6f/classez_angle.htm#a49cef592fd82ca0bb2ec82119460d5f2">RadToDeg</a> (Type f)</td></tr>
<tr class="memdesc:a49cef592fd82ca0bb2ec82119460d5f2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Converts an angle in radians to degree. <br /></td></tr>
<tr class="separator:a49cef592fd82ca0bb2ec82119460d5f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5983b2ad96c3d417644bb320cab4ae74"><td class="memItemLeft" align="right" valign="top"><a id="a5983b2ad96c3d417644bb320cab4ae74"></a>
constexpr static <a class="el" href="../../db/d6f/classez_angle.htm">ezAngle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d6f/classez_angle.htm#a5983b2ad96c3d417644bb320cab4ae74">Degree</a> (float fDegree)</td></tr>
<tr class="memdesc:a5983b2ad96c3d417644bb320cab4ae74"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an instance of <a class="el" href="../../db/d6f/classez_angle.htm" title="Float wrapper struct for a safe usage and conversions of angles.">ezAngle</a> that was initialized from degree. (Performs a conversion) <br /></td></tr>
<tr class="separator:a5983b2ad96c3d417644bb320cab4ae74"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48eaf560f24c0386e80728dfd9e03508"><td class="memItemLeft" align="right" valign="top"><a id="a48eaf560f24c0386e80728dfd9e03508"></a>
constexpr static <a class="el" href="../../db/d6f/classez_angle.htm">ezAngle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d6f/classez_angle.htm#a48eaf560f24c0386e80728dfd9e03508">Radian</a> (float fRadian)</td></tr>
<tr class="memdesc:a48eaf560f24c0386e80728dfd9e03508"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an instance of <a class="el" href="../../db/d6f/classez_angle.htm" title="Float wrapper struct for a safe usage and conversions of angles.">ezAngle</a> that was initialized from radian. (No need for any conversion) <br /></td></tr>
<tr class="separator:a48eaf560f24c0386e80728dfd9e03508"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a40c9e62d8a12f9bfd59115f3f3050ab4"><td class="memItemLeft" align="right" valign="top">constexpr static <a class="el" href="../../db/d6f/classez_angle.htm">ezAngle</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d6f/classez_angle.htm#a40c9e62d8a12f9bfd59115f3f3050ab4">AngleBetween</a> (<a class="el" href="../../db/d6f/classez_angle.htm">ezAngle</a> a, <a class="el" href="../../db/d6f/classez_angle.htm">ezAngle</a> b)</td></tr>
<tr class="memdesc:a40c9e62d8a12f9bfd59115f3f3050ab4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Computes the smallest angle between the two given angles. The angle will always be a positive value.  <a href="../../db/d6f/classez_angle.htm#a40c9e62d8a12f9bfd59115f3f3050ab4">More...</a><br /></td></tr>
<tr class="separator:a40c9e62d8a12f9bfd59115f3f3050ab4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Float wrapper struct for a safe usage and conversions of angles. </p>
<p>Uses radian internally. Will <b>not</b> automatically keep its range between 0 degree - 360 degree (0 - 2PI) but you can call NormalizeRange to do so. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a40c9e62d8a12f9bfd59115f3f3050ab4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a40c9e62d8a12f9bfd59115f3f3050ab4">&#9670;&nbsp;</a></span>AngleBetween()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr EZ_FORCE_INLINE <a class="el" href="../../db/d6f/classez_angle.htm">ezAngle</a> ezAngle::AngleBetween </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../db/d6f/classez_angle.htm">ezAngle</a>&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../db/d6f/classez_angle.htm">ezAngle</a>&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Computes the smallest angle between the two given angles. The angle will always be a positive value. </p>
<dl class="section note"><dt>Note</dt><dd>The two angles must be in the same range. E.g. they should be either normalized or at least the absolute angle between them should not be more than 180 degree. </dd></dl>

</div>
</div>
<a id="a204963eccf35f5c1c7b16f5cff4fcf0d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a204963eccf35f5c1c7b16f5cff4fcf0d">&#9670;&nbsp;</a></span>GetNormalizedRange()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../db/d6f/classez_angle.htm">ezAngle</a> ezAngle::GetNormalizedRange </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns an equivalent angle with range between 0 degree - 360 degree. </p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="../../db/d6f/classez_angle.htm#ab7d2199f073fc8e747e1c5865b90b0e7" title="Brings the angle into the range of 0 degree - 360 degree.">NormalizeRange()</a> </dd></dl>

</div>
</div>
<a id="ab7d2199f073fc8e747e1c5865b90b0e7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab7d2199f073fc8e747e1c5865b90b0e7">&#9670;&nbsp;</a></span>NormalizeRange()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ezAngle::NormalizeRange </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Brings the angle into the range of 0 degree - 360 degree. </p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="../../db/d6f/classez_angle.htm#a204963eccf35f5c1c7b16f5cff4fcf0d" title="Returns an equivalent angle with range between 0 degree - 360 degree.">GetNormalizedRange()</a> </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Math/<a class="el" href="../../da/d18/_angle_8h_source.htm">Angle.h</a></li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Math/Implementation/<a class="el" href="../../dd/d0f/_angle__inl_8h_source.htm">Angle_inl.h</a></li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Math/Implementation/Math.cpp</li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Math/Implementation/<a class="el" href="../../d6/dd4/_math__inl_8h_source.htm">Math_inl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../db/d6f/classez_angle.htm">ezAngle</a></li>
    <li class="footer">Generated on Mon Oct 18 2021 15:33:34 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
