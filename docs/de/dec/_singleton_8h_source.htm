<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Configuration/Singleton.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 23.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('de/dec/_singleton_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Singleton.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;Foundation/Basics.h&gt;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;Foundation/Containers/Map.h&gt;</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;Foundation/Strings/String.h&gt;</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160; </div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;typeinfo&gt;</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160; </div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160; </div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160; </div>
<div class="line"><a name="l00019"></a><span class="lineno"><a class="line" href="../../dd/d65/classez_singleton_registry.htm">   19</a></span>&#160;<span class="keyword">class </span>EZ_FOUNDATION_DLL <a class="code" href="../../dd/d65/classez_singleton_registry.htm">ezSingletonRegistry</a></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;{</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00022"></a><span class="lineno"><a class="line" href="../../db/d3a/structez_singleton_registry_1_1_singleton_entry.htm">   22</a></span>&#160;  <span class="keyword">struct </span><a class="code" href="../../db/d3a/structez_singleton_registry_1_1_singleton_entry.htm">SingletonEntry</a></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;  {</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    <a class="code" href="../../d4/d53/structez_hybrid_string.htm">ezString</a> m_sName;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    <span class="keywordtype">void</span>* m_pInstance = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;  };</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160; </div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160; </div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Interface&gt;</div>
<div class="line"><a name="l00032"></a><span class="lineno"><a class="line" href="../../dd/d65/classez_singleton_registry.htm#a6517fd647e5bda0b746412a39cc19bf5">   32</a></span>&#160;  <span class="keyword">inline</span> <span class="keyword">static</span> Interface* <a class="code" href="../../dd/d65/classez_singleton_registry.htm#a6517fd647e5bda0b746412a39cc19bf5">GetSingletonInstance</a>() <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;  {</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span>Interface*<span class="keyword">&gt;</span>(s_Singletons.GetValueOrDefault(GetHash&lt;Interface&gt;(), {<span class="stringliteral">&quot;&quot;</span>, <span class="keyword">nullptr</span>}).m_pInstance);</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;  }</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160; </div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Interface&gt;</div>
<div class="line"><a name="l00039"></a><span class="lineno"><a class="line" href="../../dd/d65/classez_singleton_registry.htm#a1cc29ad60f6bc8d34ed13fc21c3d8092">   39</a></span>&#160;  <span class="keyword">inline</span> <span class="keyword">static</span> Interface* <a class="code" href="../../dd/d65/classez_singleton_registry.htm#a1cc29ad60f6bc8d34ed13fc21c3d8092">GetRequiredSingletonInstance</a>() <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  {</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <span class="keyword">auto</span> value = GetSingletonInstance&lt;Interface&gt;();</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    EZ_ASSERT_ALWAYS(value, <span class="stringliteral">&quot;No instance of singleton type \&quot;{0}\&quot; has been registered!&quot;</span>, <span class="keyword">typeid</span>(Interface).name());</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;    <span class="keywordflow">return</span> value;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  }</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160; </div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;  <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="../../d1/d79/classez_map.htm">ezMap&lt;size_t, SingletonEntry&gt;</a>&amp; GetAllRegisteredSingletons();</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160; </div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Interface&gt;</div>
<div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="../../dd/d65/classez_singleton_registry.htm#a91aab2716e0457f402309b572711a9ff">   51</a></span>&#160;  <span class="keyword">inline</span> <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dd/d65/classez_singleton_registry.htm#a91aab2716e0457f402309b572711a9ff">Register</a>(Interface* pSingletonInstance) <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  {</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    EZ_ASSERT_DEV(pSingletonInstance != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;Invalid singleton instance pointer&quot;</span>);</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    EZ_ASSERT_DEV(</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;      s_Singletons[GetHash&lt;Interface&gt;()].m_pInstance == <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;Singleton for type &#39;{0}&#39; has already been registered&quot;</span>, <span class="keyword">typeid</span>(Interface).name());</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160; </div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    s_Singletons[GetHash&lt;Interface&gt;()] = {<span class="keyword">typeid</span>(Interface).name(), pSingletonInstance};</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  }</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160; </div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Interface&gt;</div>
<div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="../../dd/d65/classez_singleton_registry.htm#abebe501cbdd8c265bd04e91b629d07e8">   62</a></span>&#160;  <span class="keyword">inline</span> <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code" href="../../dd/d65/classez_singleton_registry.htm#abebe501cbdd8c265bd04e91b629d07e8">Unregister</a>() <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  {</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    EZ_ASSERT_DEV(</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;      s_Singletons[GetHash&lt;Interface&gt;()].m_pInstance != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;Singleton for type &#39;{0}&#39; is currently not registered&quot;</span>, <span class="keyword">typeid</span>(Interface).name());</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160; </div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    s_Singletons.Remove(GetHash&lt;Interface&gt;());</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;  }</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160; </div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;  <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="../../d1/d37/classez_singleton_registrar.htm">ezSingletonRegistrar</a>;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160; </div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Interface&gt;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;  <span class="keyword">inline</span> <span class="keyword">static</span> <span class="keywordtype">size_t</span> GetHash()</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  {</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">size_t</span> hash = <span class="keyword">typeid</span>(Interface).hash_code();</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    <span class="keywordflow">return</span> hash;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  }</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160; </div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;  <span class="keyword">static</span> <a class="code" href="../../d1/d79/classez_map.htm">ezMap&lt;size_t, SingletonEntry&gt;</a> s_Singletons;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;};</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160; </div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160; </div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="preprocessor">#define EZ_DECLARE_SINGLETON(self)                                      \</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="preprocessor">public:                                                                 \</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="preprocessor">  EZ_ALWAYS_INLINE static self* GetSingleton() { return s_pSingleton; } \</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="preprocessor">                                                                        \</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="preprocessor">private:                                                                \</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="preprocessor">  EZ_DISALLOW_COPY_AND_ASSIGN(self);                                    \</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="preprocessor">  void RegisterSingleton()                                              \</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="preprocessor">  {                                                                     \</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="preprocessor">    s_pSingleton = this;                                                \</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="preprocessor">    ezSingletonRegistry::Register&lt;self&gt;(this);                          \</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="preprocessor">  }                                                                     \</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="preprocessor">  static void UnregisterSingleton()                                     \</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="preprocessor">  {                                                                     \</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="preprocessor">    if (s_pSingleton)                                                   \</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="preprocessor">    {                                                                   \</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<span class="preprocessor">      ezSingletonRegistry::Unregister&lt;self&gt;();                          \</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="preprocessor">      s_pSingleton = nullptr;                                           \</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="preprocessor">    }                                                                   \</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="preprocessor">  }                                                                     \</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="preprocessor">  friend class ezSingletonRegistrar&lt;self&gt;;                              \</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="preprocessor">  ezSingletonRegistrar&lt;self&gt; m_SingletonRegistrar;                      \</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="preprocessor">  static self* s_pSingleton</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160; </div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;<span class="preprocessor">#define EZ_DECLARE_SINGLETON_OF_INTERFACE(self, interface)              \</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="preprocessor">public:                                                                 \</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="preprocessor">  EZ_ALWAYS_INLINE static self* GetSingleton() { return s_pSingleton; } \</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;<span class="preprocessor">                                                                        \</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="preprocessor">private:                                                                \</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="preprocessor">  EZ_DISALLOW_COPY_AND_ASSIGN(self);                                    \</span></div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;<span class="preprocessor">  void RegisterSingleton()                                              \</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="preprocessor">  {                                                                     \</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;<span class="preprocessor">    s_pSingleton = this;                                                \</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="preprocessor">    ezSingletonRegistry::Register&lt;self&gt;(this);                          \</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="preprocessor">    ezSingletonRegistry::Register&lt;interface&gt;(this);                     \</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="preprocessor">  }                                                                     \</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="preprocessor">  static void UnregisterSingleton()                                     \</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;<span class="preprocessor">  {                                                                     \</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="preprocessor">    if (s_pSingleton)                                                   \</span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="preprocessor">    {                                                                   \</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="preprocessor">      ezSingletonRegistry::Unregister&lt;interface&gt;();                     \</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="preprocessor">      ezSingletonRegistry::Unregister&lt;self&gt;();                          \</span></div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="preprocessor">      s_pSingleton = nullptr;                                           \</span></div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="preprocessor">    }                                                                   \</span></div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="preprocessor">  }                                                                     \</span></div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="preprocessor">  friend class ezSingletonRegistrar&lt;self&gt;;                              \</span></div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="preprocessor">  ezSingletonRegistrar&lt;self&gt; m_SingletonRegistrar;                      \</span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;<span class="preprocessor">  static self* s_pSingleton</span></div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160; </div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160; </div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="preprocessor">#define EZ_IMPLEMENT_SINGLETON(self) self* self::s_pSingleton = nullptr</span></div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160; </div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160; </div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160; </div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> TYPE&gt;</div>
<div class="line"><a name="l00172"></a><span class="lineno"><a class="line" href="../../d1/d37/classez_singleton_registrar.htm">  172</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d1/d37/classez_singleton_registrar.htm">ezSingletonRegistrar</a></div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;{</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;  EZ_ALWAYS_INLINE <a class="code" href="../../d1/d37/classez_singleton_registrar.htm">ezSingletonRegistrar</a>(TYPE* pType) <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;  {</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    pType-&gt;RegisterSingleton();</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;  }</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160; </div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;  EZ_ALWAYS_INLINE ~<a class="code" href="../../d1/d37/classez_singleton_registrar.htm">ezSingletonRegistrar</a>() <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;  {</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    TYPE::UnregisterSingleton();</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;  }</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;};</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassez_singleton_registry_htm"><div class="ttname"><a href="../../dd/d65/classez_singleton_registry.htm">ezSingletonRegistry</a></div><div class="ttdoc">ezSingletonRegistry knows about all singleton instances of classes that use EZ_DECLARE_SINGLETON.</div><div class="ttdef"><b>Definition:</b> Singleton.h:19</div></div>
<div class="ttc" id="aclassez_singleton_registry_htm_a1cc29ad60f6bc8d34ed13fc21c3d8092"><div class="ttname"><a href="../../dd/d65/classez_singleton_registry.htm#a1cc29ad60f6bc8d34ed13fc21c3d8092">ezSingletonRegistry::GetRequiredSingletonInstance</a></div><div class="ttdeci">static Interface * GetRequiredSingletonInstance()</div><div class="ttdoc">Retrieves a singleton instance by type name. Asserts if no singleton instance is available.</div><div class="ttdef"><b>Definition:</b> Singleton.h:39</div></div>
<div class="ttc" id="aclassez_singleton_registry_htm_abebe501cbdd8c265bd04e91b629d07e8"><div class="ttname"><a href="../../dd/d65/classez_singleton_registry.htm#abebe501cbdd8c265bd04e91b629d07e8">ezSingletonRegistry::Unregister</a></div><div class="ttdeci">static void Unregister()</div><div class="ttdoc">Unregisters a singleton instance. This is automatically called by ezSingletonRegistrar.</div><div class="ttdef"><b>Definition:</b> Singleton.h:62</div></div>
<div class="ttc" id="astructez_hybrid_string_htm"><div class="ttname"><a href="../../d4/d53/structez_hybrid_string.htm">ezHybridString&lt; 32, ezDefaultAllocatorWrapper &gt;</a></div></div>
<div class="ttc" id="astructez_singleton_registry_1_1_singleton_entry_htm"><div class="ttname"><a href="../../db/d3a/structez_singleton_registry_1_1_singleton_entry.htm">ezSingletonRegistry::SingletonEntry</a></div><div class="ttdef"><b>Definition:</b> Singleton.h:22</div></div>
<div class="ttc" id="aclassez_singleton_registry_htm_a91aab2716e0457f402309b572711a9ff"><div class="ttname"><a href="../../dd/d65/classez_singleton_registry.htm#a91aab2716e0457f402309b572711a9ff">ezSingletonRegistry::Register</a></div><div class="ttdeci">static void Register(Interface *pSingletonInstance)</div><div class="ttdoc">Registers a singleton instance under a given type name. This is automatically called by ezSingletonRe...</div><div class="ttdef"><b>Definition:</b> Singleton.h:51</div></div>
<div class="ttc" id="aclassez_map_htm"><div class="ttname"><a href="../../d1/d79/classez_map.htm">ezMap</a></div><div class="ttdef"><b>Definition:</b> Map.h:328</div></div>
<div class="ttc" id="aclassez_singleton_registry_htm_a6517fd647e5bda0b746412a39cc19bf5"><div class="ttname"><a href="../../dd/d65/classez_singleton_registry.htm#a6517fd647e5bda0b746412a39cc19bf5">ezSingletonRegistry::GetSingletonInstance</a></div><div class="ttdeci">static Interface * GetSingletonInstance()</div><div class="ttdoc">Retrieves a singleton instance by type name. Returns nullptr if no singleton instance is available.</div><div class="ttdef"><b>Definition:</b> Singleton.h:32</div></div>
<div class="ttc" id="aclassez_singleton_registrar_htm"><div class="ttname"><a href="../../d1/d37/classez_singleton_registrar.htm">ezSingletonRegistrar</a></div><div class="ttdoc">[internal] Helper class to implement ezSingletonRegistry and EZ_DECLARE_SINGLETON</div><div class="ttdef"><b>Definition:</b> Singleton.h:172</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_d3a457baa6374475358035c7c7fd0218.htm">Configuration</a></li><li class="navelem"><b>Singleton.h</b></li>
    <li class="footer">Generated on Sat Nov 11 2023 19:40:48 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
