<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: Code/Engine/Core/ResourceManager/Implementation/ResourceManager_inl.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 21.6</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search','.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('de/d5e/_resource_manager__inl_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ResourceManager_inl.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;Foundation/Logging/Log.h&gt;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160; </div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> ResourceType&gt;</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;ResourceType* ezResourceManager::GetResource(<span class="keyword">const</span> <span class="keywordtype">char</span>* szResourceID, <span class="keywordtype">bool</span> bIsReloadable)</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;{</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span>ResourceType*<span class="keyword">&gt;</span>(GetResource(ezGetStaticRTTI&lt;ResourceType&gt;(), szResourceID, bIsReloadable));</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;}</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160; </div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> ResourceType&gt;</div>
<div class="line"><a name="l00012"></a><span class="lineno"><a class="line" href="../../dc/d99/classez_resource_manager.htm#a7fd497ffb6a0041ab9fcaa5a851e0588">   12</a></span>&#160;<a class="code" href="../../d3/dd7/classez_typed_resource_handle.htm">ezTypedResourceHandle&lt;ResourceType&gt;</a> <a class="code" href="../../dc/d99/classez_resource_manager.htm#a7fd497ffb6a0041ab9fcaa5a851e0588">ezResourceManager::LoadResource</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szResourceID)</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;{</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;  <span class="comment">// the mutex here is necessary to prevent a race between resource unloading and storing the pointer in the handle</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;  EZ_LOCK(s_ResourceMutex);</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d3/dd7/classez_typed_resource_handle.htm">ezTypedResourceHandle&lt;ResourceType&gt;</a>(GetResource&lt;ResourceType&gt;(szResourceID, <span class="keyword">true</span>));</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;}</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160; </div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> ResourceType&gt;</div>
<div class="line"><a name="l00020"></a><span class="lineno"><a class="line" href="../../dc/d99/classez_resource_manager.htm#a644be9714743771eeccc228ca9da97b1">   20</a></span>&#160;<a class="code" href="../../d3/dd7/classez_typed_resource_handle.htm">ezTypedResourceHandle&lt;ResourceType&gt;</a> <a class="code" href="../../dc/d99/classez_resource_manager.htm#a7fd497ffb6a0041ab9fcaa5a851e0588">ezResourceManager::LoadResource</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szResourceID, <a class="code" href="../../d3/dd7/classez_typed_resource_handle.htm">ezTypedResourceHandle&lt;ResourceType&gt;</a> hLoadingFallback)</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;{</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;  <a class="code" href="../../d3/dd7/classez_typed_resource_handle.htm">ezTypedResourceHandle&lt;ResourceType&gt;</a> hResource;</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;  {</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    <span class="comment">// the mutex here is necessary to prevent a race between resource unloading and storing the pointer in the handle</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    EZ_LOCK(s_ResourceMutex);</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    hResource = <a class="code" href="../../d3/dd7/classez_typed_resource_handle.htm">ezTypedResourceHandle&lt;ResourceType&gt;</a>(GetResource&lt;ResourceType&gt;(szResourceID, <span class="keyword">true</span>));</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;  }</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160; </div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;  <span class="keywordflow">if</span> (hLoadingFallback.<a class="code" href="../../d3/dd7/classez_typed_resource_handle.htm#ae477c3d836b941ece5ca0a77abd7e8cc">IsValid</a>())</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;  {</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    hResource.m_pResource-&gt;SetLoadingFallbackResource(hLoadingFallback);</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;  }</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160; </div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  <span class="keywordflow">return</span> hResource;</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;}</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160; </div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> ResourceType&gt;</div>
<div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="../../dc/d99/classez_resource_manager.htm#aacf08458079cd5993e5fcc3b76ed600a">   38</a></span>&#160;<a class="code" href="../../d3/dd7/classez_typed_resource_handle.htm">ezTypedResourceHandle&lt;ResourceType&gt;</a> <a class="code" href="../../dc/d99/classez_resource_manager.htm#aacf08458079cd5993e5fcc3b76ed600a">ezResourceManager::GetExistingResource</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szResourceID)</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  <a class="code" href="../../d3/d0a/classez_resource.htm">ezResource</a>* pResource = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160; </div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../db/dcf/classez_temp_hashed_string.htm">ezTempHashedString</a> sResourceHash(szResourceID);</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160; </div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  EZ_LOCK(s_ResourceMutex);</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160; </div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* pRtti = FindResourceTypeOverride(ezGetStaticRTTI&lt;ResourceType&gt;(), szResourceID);</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160; </div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;  <span class="keywordflow">if</span> (GetLoadedResources()[pRtti].m_Resources.TryGetValue(sResourceHash, pResource))</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d3/dd7/classez_typed_resource_handle.htm">ezTypedResourceHandle&lt;ResourceType&gt;</a>((ResourceType*)pResource);</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160; </div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d3/dd7/classez_typed_resource_handle.htm">ezTypedResourceHandle&lt;ResourceType&gt;</a>();</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;}</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160; </div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> ResourceType, <span class="keyword">typename</span> DescriptorType&gt;</div>
<div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="../../dc/d99/classez_resource_manager.htm#a904ce6b7c0a5424246426e2711a2ca73">   55</a></span>&#160;<a class="code" href="../../d3/dd7/classez_typed_resource_handle.htm">ezTypedResourceHandle&lt;ResourceType&gt;</a> <a class="code" href="../../dc/d99/classez_resource_manager.htm#a904ce6b7c0a5424246426e2711a2ca73">ezResourceManager::CreateResource</a>(</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span>* szResourceID, DescriptorType&amp;&amp; descriptor, <span class="keyword">const</span> <span class="keywordtype">char</span>* szResourceDescription)</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;{</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  static_assert(std::is_rvalue_reference&lt;DescriptorType&amp;&amp;&gt;::value, <span class="stringliteral">&quot;Please std::move the descriptor into this function&quot;</span>);</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160; </div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;  EZ_LOG_BLOCK(<span class="stringliteral">&quot;ezResourceManager::CreateResource&quot;</span>, szResourceID);</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160; </div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;  EZ_LOCK(s_ResourceMutex);</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160; </div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  <a class="code" href="../../d3/dd7/classez_typed_resource_handle.htm">ezTypedResourceHandle&lt;ResourceType&gt;</a> hResource(GetResource&lt;ResourceType&gt;(szResourceID, <span class="keyword">false</span>));</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160; </div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;  ResourceType* pResource = <a class="code" href="../../dc/d99/classez_resource_manager.htm#aa406a4c669d328c9f00858689c27f9c0">BeginAcquireResource</a>(hResource, ezResourceAcquireMode::PointerOnly);</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;  pResource-&gt;SetResourceDescription(szResourceDescription);</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;  pResource-&gt;m_Flags.Add(<a class="code" href="../../df/da1/structez_resource_flags.htm#a59e97090ee88970ad83f348cdf72784cae4e9480588fe40b44e75f95b87dd3a5e">ezResourceFlags::IsCreatedResource</a>);</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160; </div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  EZ_ASSERT_DEV(pResource-&gt;GetLoadingState() == ezResourceState::Unloaded, <span class="stringliteral">&quot;CreateResource was called on a resource that is already created&quot;</span>);</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160; </div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;  <span class="comment">// If this does not compile, you either passed in the wrong descriptor type for the given resource type</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  <span class="comment">// or you forgot to std::move the descriptor when calling CreateResource</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;  {</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    <span class="keyword">auto</span> localDescriptor = std::move(descriptor);</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    <a class="code" href="../../de/d9b/structez_resource_load_desc.htm">ezResourceLoadDesc</a> ld = pResource-&gt;CreateResource(std::move(localDescriptor));</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    pResource-&gt;VerifyAfterCreateResource(ld);</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;  }</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160; </div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;  EZ_ASSERT_DEV(pResource-&gt;GetLoadingState() != ezResourceState::Unloaded, <span class="stringliteral">&quot;CreateResource did not set the loading state properly.&quot;</span>);</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160; </div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;  <a class="code" href="../../dc/d99/classez_resource_manager.htm#a0ab319e51348e0a5f6c5f9f6147f88c0">EndAcquireResource</a>(pResource);</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160; </div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;  <span class="keywordflow">return</span> hResource;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;}</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160; </div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> ResourceType&gt;</div>
<div class="line"><a name="l00088"></a><span class="lineno"><a class="line" href="../../dc/d99/classez_resource_manager.htm#aa406a4c669d328c9f00858689c27f9c0">   88</a></span>&#160;ResourceType* <a class="code" href="../../dc/d99/classez_resource_manager.htm#aa406a4c669d328c9f00858689c27f9c0">ezResourceManager::BeginAcquireResource</a>(<span class="keyword">const</span> <a class="code" href="../../d3/dd7/classez_typed_resource_handle.htm">ezTypedResourceHandle&lt;ResourceType&gt;</a>&amp; hResource, ezResourceAcquireMode mode,</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d3/dd7/classez_typed_resource_handle.htm">ezTypedResourceHandle&lt;ResourceType&gt;</a>&amp; hFallbackResource, ezResourceAcquireResult* out_AcquireResult <span class="comment">/*= nullptr*/</span>)</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;{</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  EZ_ASSERT_DEV(hResource.<a class="code" href="../../d3/dd7/classez_typed_resource_handle.htm#ae477c3d836b941ece5ca0a77abd7e8cc">IsValid</a>(), <span class="stringliteral">&quot;Cannot acquire a resource through an invalid handle!&quot;</span>);</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160; </div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="preprocessor">#if EZ_ENABLED(EZ_COMPILE_FOR_DEVELOPMENT)</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d3/d0a/classez_resource.htm">ezResource</a>* pCurrentlyUpdatingContent = ezResource::GetCurrentlyUpdatingContent();</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;  <span class="keywordflow">if</span> (pCurrentlyUpdatingContent != <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;  {</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    EZ_LOCK(s_ResourceMutex);</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    EZ_ASSERT_DEV(IsResourceTypeAcquireDuringUpdateContentAllowed(pCurrentlyUpdatingContent-&gt;GetDynamicRTTI(), ezGetStaticRTTI&lt;ResourceType&gt;()),</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;      <span class="stringliteral">&quot;Trying to acquire a resource of type &#39;{0}&#39; during &#39;{1}::UpdateContent()&#39;. This is has to be enabled by calling &quot;</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;      <span class="stringliteral">&quot;ezResourceManager::AllowResourceTypeAcquireDuringUpdateContent&lt;{1}, {0}&gt;(); at engine startup, for example in &quot;</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;      <span class="stringliteral">&quot;ezGameApplication::Init_SetupDefaultResources().&quot;</span>,</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;      ezGetStaticRTTI&lt;ResourceType&gt;()-&gt;GetTypeName(), pCurrentlyUpdatingContent-&gt;GetDynamicRTTI()-&gt;<a class="code" href="../../dd/d19/classez_r_t_t_i.htm#aae5e3e3fa9a7128299c26ad09f43f766">GetTypeName</a>());</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  }</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160; </div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;  ResourceType* pResource = (ResourceType*)hResource.m_Typeless.m_pResource;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160; </div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;  <span class="comment">// EZ_ASSERT_DEV(pResource-&gt;m_iLockCount &lt; 20, &quot;You probably forgot somewhere to call &#39;EndAcquireResource&#39; in sync with &#39;BeginAcquireResource&#39;.&quot;);</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;  EZ_ASSERT_DEBUG(pResource-&gt;GetDynamicRTTI()-&gt;IsDerivedFrom&lt;ResourceType&gt;(),</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    <span class="stringliteral">&quot;The requested resource does not have the same type (&#39;{0}&#39;) as the resource handle (&#39;{1}&#39;).&quot;</span>, pResource-&gt;GetDynamicRTTI()-&gt;GetTypeName(),</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    ezGetStaticRTTI&lt;ResourceType&gt;()-&gt;GetTypeName());</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160; </div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;  <span class="keywordflow">if</span> (mode == ezResourceAcquireMode::AllowLoadingFallback &amp;&amp; <a class="code" href="../../dc/d99/classez_resource_manager.htm#a86d892e3457a189959894ba8a4cc8980">GetForceNoFallbackAcquisition</a>() &gt; 0)</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;  {</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    mode = ezResourceAcquireMode::BlockTillLoaded;</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;  }</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160; </div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;  <span class="keywordflow">if</span> (mode == ezResourceAcquireMode::PointerOnly)</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;  {</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keywordflow">if</span> (out_AcquireResult)</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;      *out_AcquireResult = ezResourceAcquireResult::Final;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160; </div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;    pResource-&gt;m_iLockCount.Increment();</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    <span class="keywordflow">return</span> pResource;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;  }</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160; </div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;  <span class="comment">// only set the last accessed time stamp, if it is actually needed, pointer-only access might not mean that the resource is used</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;  <span class="comment">// productively</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;  pResource-&gt;m_LastAcquire = GetLastFrameUpdate();</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160; </div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;  <span class="keywordflow">if</span> (pResource-&gt;GetLoadingState() != ezResourceState::LoadedResourceMissing)</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;  {</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    <span class="keywordflow">if</span> (pResource-&gt;GetLoadingState() != ezResourceState::Loaded)</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    {</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;      <span class="comment">// if BlockTillLoaded is specified, it will prepended to the preload array, thus will be loaded immediately</span></div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;      InternalPreloadResource(pResource, mode &gt;= ezResourceAcquireMode::BlockTillLoaded);</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160; </div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;      <span class="keywordflow">if</span> (mode == ezResourceAcquireMode::AllowLoadingFallback &amp;&amp;</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;          (pResource-&gt;m_hLoadingFallback.IsValid() || hFallbackResource.<a class="code" href="../../d3/dd7/classez_typed_resource_handle.htm#ae477c3d836b941ece5ca0a77abd7e8cc">IsValid</a>() || GetResourceTypeLoadingFallback&lt;ResourceType&gt;().IsValid()))</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;      {</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        <span class="comment">// return the fallback resource for now, if there is one</span></div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;        <span class="keywordflow">if</span> (out_AcquireResult)</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;          *out_AcquireResult = ezResourceAcquireResult::LoadingFallback;</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160; </div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        <span class="comment">// Fallback order is as follows:</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        <span class="comment">//  1) Prefer any resource specific fallback resource</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        <span class="comment">//  2) If not available, use the fallback that is given to BeginAcquireResource, as that is at least specific to the situation</span></div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        <span class="comment">//  3) If nothing else is available, take the fallback for the whole resource type</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160; </div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        <span class="keywordflow">if</span> (pResource-&gt;m_hLoadingFallback.IsValid())</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;          <span class="keywordflow">return</span> (ResourceType*)<a class="code" href="../../dc/d99/classez_resource_manager.htm#aa406a4c669d328c9f00858689c27f9c0">BeginAcquireResource</a>(pResource-&gt;m_hLoadingFallback, ezResourceAcquireMode::BlockTillLoaded);</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;        <span class="keywordflow">else</span> <span class="keywordflow">if</span> (hFallbackResource.<a class="code" href="../../d3/dd7/classez_typed_resource_handle.htm#ae477c3d836b941ece5ca0a77abd7e8cc">IsValid</a>())</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;          <span class="keywordflow">return</span> (ResourceType*)<a class="code" href="../../dc/d99/classez_resource_manager.htm#aa406a4c669d328c9f00858689c27f9c0">BeginAcquireResource</a>(hFallbackResource, ezResourceAcquireMode::BlockTillLoaded);</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;        <span class="keywordflow">else</span></div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;          <span class="keywordflow">return</span> (ResourceType*)<a class="code" href="../../dc/d99/classez_resource_manager.htm#aa406a4c669d328c9f00858689c27f9c0">BeginAcquireResource</a>(GetResourceTypeLoadingFallback&lt;ResourceType&gt;(), ezResourceAcquireMode::BlockTillLoaded);</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;      }</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160; </div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;      EnsureResourceLoadingState(pResource, ezResourceState::Loaded);</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    }</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    {</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;      <span class="comment">// as long as there are more quality levels available, schedule the resource for more loading</span></div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;      <span class="comment">// accessing IsQueuedForLoading without a lock here is save because InternalPreloadResource() will lock and early out if necessary</span></div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;      <span class="comment">// and accidentally skipping InternalPreloadResource() is no problem</span></div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;      <span class="keywordflow">if</span> (IsQueuedForLoading(pResource) == <span class="keyword">false</span> &amp;&amp; pResource-&gt;GetNumQualityLevelsLoadable() &gt; 0)</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        InternalPreloadResource(pResource, <span class="keyword">false</span>);</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    }</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;  }</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160; </div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;  <span class="keywordflow">if</span> (pResource-&gt;GetLoadingState() == ezResourceState::LoadedResourceMissing)</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;  {</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;    <span class="comment">// When you get a crash with a stack overflow in this code path, then the resource to be used as the</span></div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <span class="comment">// &#39;missing resource&#39; replacement might be missing itself.</span></div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160; </div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    <span class="keywordflow">if</span> (ezResourceManager::GetResourceTypeMissingFallback&lt;ResourceType&gt;().IsValid())</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    {</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;      <span class="keywordflow">if</span> (out_AcquireResult)</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        *out_AcquireResult = ezResourceAcquireResult::MissingFallback;</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160; </div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;      <span class="keywordflow">return</span> (ResourceType*)<a class="code" href="../../dc/d99/classez_resource_manager.htm#aa406a4c669d328c9f00858689c27f9c0">BeginAcquireResource</a>(</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;        ezResourceManager::GetResourceTypeMissingFallback&lt;ResourceType&gt;(), ezResourceAcquireMode::BlockTillLoaded);</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    }</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160; </div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    <span class="keywordflow">if</span> (mode != ezResourceAcquireMode::AllowLoadingFallback_NeverFail &amp;&amp; mode != ezResourceAcquireMode::BlockTillLoaded_NeverFail)</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    {</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;      EZ_REPORT_FAILURE(<span class="stringliteral">&quot;The resource &#39;{0}&#39; of type &#39;{1}&#39; is missing and no fallback is available&quot;</span>, pResource-&gt;GetResourceID(),</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        ezGetStaticRTTI&lt;ResourceType&gt;()-&gt;GetTypeName());</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    }</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160; </div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    <span class="keywordflow">if</span> (out_AcquireResult)</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;      *out_AcquireResult = ezResourceAcquireResult::None;</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160; </div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;  }</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160; </div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;  <span class="keywordflow">if</span> (out_AcquireResult)</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    *out_AcquireResult = ezResourceAcquireResult::Final;</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160; </div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;  pResource-&gt;m_iLockCount.Increment();</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;  <span class="keywordflow">return</span> pResource;</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;}</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160; </div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> ResourceType&gt;</div>
<div class="line"><a name="l00204"></a><span class="lineno"><a class="line" href="../../dc/d99/classez_resource_manager.htm#a0ab319e51348e0a5f6c5f9f6147f88c0">  204</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../dc/d99/classez_resource_manager.htm#a0ab319e51348e0a5f6c5f9f6147f88c0">ezResourceManager::EndAcquireResource</a>(ResourceType* pResource)</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;{</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;  EZ_ASSERT_DEV(pResource != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;Resource Pointer cannot be nullptr.&quot;</span>);</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;  EZ_ASSERT_DEV(pResource-&gt;m_iLockCount &gt; 0, <span class="stringliteral">&quot;The resource lock counter is incorrect: {0}&quot;</span>, (ezInt32)pResource-&gt;m_iLockCount);</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160; </div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;  pResource-&gt;m_iLockCount.Decrement();</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;}</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160; </div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> ResourceType&gt;</div>
<div class="line"><a name="l00213"></a><span class="lineno"><a class="line" href="../../dc/d99/classez_resource_manager.htm#a798fd47407d19bafac3e61bdb509ec52">  213</a></span>&#160;<a class="code" href="../../d7/da5/classez_locked_object.htm">ezLockedObject&lt;ezMutex, ezDynamicArray&lt;ezResource*&gt;</a>&gt; <a class="code" href="../../dc/d99/classez_resource_manager.htm#a798fd47407d19bafac3e61bdb509ec52">ezResourceManager::GetAllResourcesOfType</a>()</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;{</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* pBaseType = ezGetStaticRTTI&lt;ResourceType&gt;();</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160; </div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;  <span class="keyword">auto</span>&amp; container = GetLoadedResourceOfTypeTempContainer();</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160; </div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;  <span class="comment">// We use a static container here to ensure its life-time is extended beyond</span></div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;  <span class="comment">// calls to this function as the locked object does not own the passed-in object</span></div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;  <span class="comment">// and thus does not extend the data life-time. It is safe to do this, as the</span></div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;  <span class="comment">// locked object holding the container ensures the container will not be</span></div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;  <span class="comment">// accessed concurrently.</span></div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;  <a class="code" href="../../d7/da5/classez_locked_object.htm">ezLockedObject&lt;ezMutex, ezDynamicArray&lt;ezResource*&gt;</a>&gt; loadedResourcesLock(s_ResourceMutex, &amp;container);</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160; </div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;  container.Clear();</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160; </div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;  <span class="keywordflow">for</span> (<span class="keyword">auto</span> itType = GetLoadedResources().GetIterator(); itType.IsValid(); itType.Next())</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;  {</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;    <span class="keyword">const</span> <a class="code" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* pDerivedType = itType.Key();</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160; </div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    <span class="keywordflow">if</span> (pDerivedType-&gt;<a class="code" href="../../dd/d19/classez_r_t_t_i.htm#a57907c632a09bc92048f734529fd7440">IsDerivedFrom</a>(pBaseType))</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;    {</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;      <span class="keyword">const</span> LoadedResources&amp; lr = GetLoadedResources()[pDerivedType];</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160; </div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;      container.Reserve(container.GetCount() + lr.m_Resources.GetCount());</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160; </div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;      <span class="keywordflow">for</span> (<span class="keyword">auto</span> itResource : lr.m_Resources)</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;      {</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;        container.PushBack(itResource.Value());</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;      }</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    }</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;  }</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160; </div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;  <span class="keywordflow">return</span> loadedResourcesLock;</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;}</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160; </div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> ResourceType&gt;</div>
<div class="line"><a name="l00249"></a><span class="lineno"><a class="line" href="../../dc/d99/classez_resource_manager.htm#ac88d827e0f64b2cd0c432939034ed3db">  249</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../dc/d99/classez_resource_manager.htm#ac88d827e0f64b2cd0c432939034ed3db">ezResourceManager::ReloadResource</a>(<span class="keyword">const</span> <a class="code" href="../../d3/dd7/classez_typed_resource_handle.htm">ezTypedResourceHandle&lt;ResourceType&gt;</a>&amp; hResource, <span class="keywordtype">bool</span> bForce)</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;{</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;  ResourceType* pResource = <a class="code" href="../../dc/d99/classez_resource_manager.htm#aa406a4c669d328c9f00858689c27f9c0">BeginAcquireResource</a>(hResource, ezResourceAcquireMode::PointerOnly);</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160; </div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;  <span class="keywordtype">bool</span> res = <a class="code" href="../../dc/d99/classez_resource_manager.htm#ac88d827e0f64b2cd0c432939034ed3db">ReloadResource</a>(pResource, bForce);</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160; </div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;  <a class="code" href="../../dc/d99/classez_resource_manager.htm#a0ab319e51348e0a5f6c5f9f6147f88c0">EndAcquireResource</a>(pResource);</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160; </div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;  <span class="keywordflow">return</span> res;</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;}</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160; </div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> ResourceType&gt;</div>
<div class="line"><a name="l00261"></a><span class="lineno"><a class="line" href="../../dc/d99/classez_resource_manager.htm#ad1a0fc5c9799c68130cf2265d8919f00">  261</a></span>&#160;ezUInt32 <a class="code" href="../../dc/d99/classez_resource_manager.htm#ad1a0fc5c9799c68130cf2265d8919f00">ezResourceManager::ReloadResourcesOfType</a>(<span class="keywordtype">bool</span> bForce)</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;{</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../dc/d99/classez_resource_manager.htm#ad1a0fc5c9799c68130cf2265d8919f00">ReloadResourcesOfType</a>(ezGetStaticRTTI&lt;ResourceType&gt;(), bForce);</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;}</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160; </div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> ResourceType&gt;</div>
<div class="line"><a name="l00267"></a><span class="lineno"><a class="line" href="../../dc/d99/classez_resource_manager.htm#aaa2566a1c32f5567f9a7c83102e59c8e">  267</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../dc/d99/classez_resource_manager.htm#aaa2566a1c32f5567f9a7c83102e59c8e">ezResourceManager::SetResourceTypeLoader</a>(<a class="code" href="../../d1/d17/classez_resource_type_loader.htm">ezResourceTypeLoader</a>* creator)</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;{</div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;  EZ_LOCK(s_ResourceMutex);</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160; </div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;  GetResourceTypeLoaders()[ezGetStaticRTTI&lt;ResourceType&gt;()] = creator;</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;}</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160; </div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> ResourceType&gt;</div>
<div class="line"><a name="l00275"></a><span class="lineno"><a class="line" href="../../dc/d99/classez_resource_manager.htm#a40abdc0a77905ad439106febc8f9c6e1">  275</a></span>&#160;<a class="code" href="../../d3/dd7/classez_typed_resource_handle.htm">ezTypedResourceHandle&lt;ResourceType&gt;</a> <a class="code" href="../../dc/d99/classez_resource_manager.htm#a40abdc0a77905ad439106febc8f9c6e1">ezResourceManager::GetResourceHandleForExport</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szResourceID)</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;{</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;  EZ_ASSERT_DEV(<a class="code" href="../../dc/d99/classez_resource_manager.htm#a9f44eb87aa6a4896d21d5b2b136fe962">IsExportModeEnabled</a>(), <span class="stringliteral">&quot;Export mode needs to be enabled&quot;</span>);</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160; </div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;  <span class="keywordflow">return</span> LoadResource&lt;ResourceType&gt;(szResourceID);</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;}</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160; </div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> ResourceType&gt;</div>
<div class="line"><a name="l00283"></a><span class="lineno"><a class="line" href="../../dc/d99/classez_resource_manager.htm#a91550f7bd0105c5cc7f2521821138e6e">  283</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../dc/d99/classez_resource_manager.htm#a91550f7bd0105c5cc7f2521821138e6e">ezResourceManager::SetIncrementalUnloadForResourceType</a>(<span class="keywordtype">bool</span> bActive)</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;{</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160;  GetResourceTypeInfo(ezGetStaticRTTI&lt;ResourceType&gt;()).m_bIncrementalUnload = bActive;</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;}</div>
<div class="ttc" id="aclassez_locked_object_htm"><div class="ttname"><a href="../../d7/da5/classez_locked_object.htm">ezLockedObject</a></div><div class="ttdoc">Provides access to an object while managing a lock (e.g. a mutex) that ensures that during its lifeti...</div><div class="ttdef"><b>Definition:</b> LockedObject.h:7</div></div>
<div class="ttc" id="aclassez_r_t_t_i_htm"><div class="ttname"><a href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a></div><div class="ttdoc">This enumerable class holds information about reflected types. Each instance represents one type that...</div><div class="ttdef"><b>Definition:</b> RTTI.h:31</div></div>
<div class="ttc" id="aclassez_r_t_t_i_htm_a57907c632a09bc92048f734529fd7440"><div class="ttname"><a href="../../dd/d19/classez_r_t_t_i.htm#a57907c632a09bc92048f734529fd7440">ezRTTI::IsDerivedFrom</a></div><div class="ttdeci">bool IsDerivedFrom(const ezRTTI *pBaseType) const</div><div class="ttdoc">Returns true if this type is derived from the given type.</div><div class="ttdef"><b>Definition:</b> RTTI.cpp:220</div></div>
<div class="ttc" id="aclassez_r_t_t_i_htm_aae5e3e3fa9a7128299c26ad09f43f766"><div class="ttname"><a href="../../dd/d19/classez_r_t_t_i.htm#aae5e3e3fa9a7128299c26ad09f43f766">ezRTTI::GetTypeName</a></div><div class="ttdeci">EZ_ALWAYS_INLINE const char * GetTypeName() const</div><div class="ttdoc">Returns the name of this type.</div><div class="ttdef"><b>Definition:</b> RTTI.h:51</div></div>
<div class="ttc" id="aclassez_resource_htm"><div class="ttname"><a href="../../d3/d0a/classez_resource.htm">ezResource</a></div><div class="ttdoc">The base class for all resources.</div><div class="ttdef"><b>Definition:</b> Resource.h:10</div></div>
<div class="ttc" id="aclassez_resource_manager_htm_a0ab319e51348e0a5f6c5f9f6147f88c0"><div class="ttname"><a href="../../dc/d99/classez_resource_manager.htm#a0ab319e51348e0a5f6c5f9f6147f88c0">ezResourceManager::EndAcquireResource</a></div><div class="ttdeci">static void EndAcquireResource(ResourceType *pResource)</div><div class="ttdoc">Needs to be called in concert with BeginAcquireResource() after accessing a resource has been finishe...</div><div class="ttdef"><b>Definition:</b> ResourceManager_inl.h:204</div></div>
<div class="ttc" id="aclassez_resource_manager_htm_a40abdc0a77905ad439106febc8f9c6e1"><div class="ttname"><a href="../../dc/d99/classez_resource_manager.htm#a40abdc0a77905ad439106febc8f9c6e1">ezResourceManager::GetResourceHandleForExport</a></div><div class="ttdeci">static ezTypedResourceHandle&lt; ResourceType &gt; GetResourceHandleForExport(const char *szResourceID)</div><div class="ttdoc">Creates a resource handle for the given resource ID. This method can only be used if export mode is e...</div><div class="ttdef"><b>Definition:</b> ResourceManager_inl.h:275</div></div>
<div class="ttc" id="aclassez_resource_manager_htm_a798fd47407d19bafac3e61bdb509ec52"><div class="ttname"><a href="../../dc/d99/classez_resource_manager.htm#a798fd47407d19bafac3e61bdb509ec52">ezResourceManager::GetAllResourcesOfType</a></div><div class="ttdeci">static ezLockedObject&lt; ezMutex, ezDynamicArray&lt; ezResource * &gt; &gt; GetAllResourcesOfType()</div><div class="ttdoc">Retrieves an array of pointers to resources of the indicated type which are loaded at the moment....</div><div class="ttdef"><b>Definition:</b> ResourceManager_inl.h:213</div></div>
<div class="ttc" id="aclassez_resource_manager_htm_a7fd497ffb6a0041ab9fcaa5a851e0588"><div class="ttname"><a href="../../dc/d99/classez_resource_manager.htm#a7fd497ffb6a0041ab9fcaa5a851e0588">ezResourceManager::LoadResource</a></div><div class="ttdeci">static ezTypedResourceHandle&lt; ResourceType &gt; LoadResource(const char *szResourceID)</div><div class="ttdoc">Returns a handle to the requested resource. szResourceID must uniquely identify the resource,...</div><div class="ttdef"><b>Definition:</b> ResourceManager_inl.h:12</div></div>
<div class="ttc" id="aclassez_resource_manager_htm_a86d892e3457a189959894ba8a4cc8980"><div class="ttname"><a href="../../dc/d99/classez_resource_manager.htm#a86d892e3457a189959894ba8a4cc8980">ezResourceManager::GetForceNoFallbackAcquisition</a></div><div class="ttdeci">static ezUInt32 GetForceNoFallbackAcquisition()</div><div class="ttdoc">If the returned number is greater 0 the resource manager treats ezResourceAcquireMode::AllowLoadingFa...</div><div class="ttdef"><b>Definition:</b> ResourceManager.cpp:930</div></div>
<div class="ttc" id="aclassez_resource_manager_htm_a904ce6b7c0a5424246426e2711a2ca73"><div class="ttname"><a href="../../dc/d99/classez_resource_manager.htm#a904ce6b7c0a5424246426e2711a2ca73">ezResourceManager::CreateResource</a></div><div class="ttdeci">static ezTypedResourceHandle&lt; ResourceType &gt; CreateResource(const char *szResourceID, DescriptorType &amp;&amp;descriptor, const char *szResourceDescription=nullptr)</div><div class="ttdoc">Creates a resource from a descriptor.</div><div class="ttdef"><b>Definition:</b> ResourceManager_inl.h:55</div></div>
<div class="ttc" id="aclassez_resource_manager_htm_a91550f7bd0105c5cc7f2521821138e6e"><div class="ttname"><a href="../../dc/d99/classez_resource_manager.htm#a91550f7bd0105c5cc7f2521821138e6e">ezResourceManager::SetIncrementalUnloadForResourceType</a></div><div class="ttdeci">static void SetIncrementalUnloadForResourceType(bool bActive)</div><div class="ttdoc">If set to 'false' resources of the given type will not be incrementally unloaded in the background,...</div><div class="ttdef"><b>Definition:</b> ResourceManager_inl.h:283</div></div>
<div class="ttc" id="aclassez_resource_manager_htm_a9f44eb87aa6a4896d21d5b2b136fe962"><div class="ttname"><a href="../../dc/d99/classez_resource_manager.htm#a9f44eb87aa6a4896d21d5b2b136fe962">ezResourceManager::IsExportModeEnabled</a></div><div class="ttdeci">static bool IsExportModeEnabled()</div><div class="ttdoc">Returns whether export mode is active.</div><div class="ttdef"><b>Definition:</b> ResourceManager.cpp:913</div></div>
<div class="ttc" id="aclassez_resource_manager_htm_aa406a4c669d328c9f00858689c27f9c0"><div class="ttname"><a href="../../dc/d99/classez_resource_manager.htm#aa406a4c669d328c9f00858689c27f9c0">ezResourceManager::BeginAcquireResource</a></div><div class="ttdeci">static ResourceType * BeginAcquireResource(const ezTypedResourceHandle&lt; ResourceType &gt; &amp;hResource, ezResourceAcquireMode mode, const ezTypedResourceHandle&lt; ResourceType &gt; &amp;hLoadingFallback=ezTypedResourceHandle&lt; ResourceType &gt;(), ezResourceAcquireResult *out_AcquireResult=nullptr)</div><div class="ttdoc">Acquires a resource pointer from a handle. Prefer to use ezResourceLock, which wraps BeginAcquireReso...</div><div class="ttdef"><b>Definition:</b> ResourceManager_inl.h:88</div></div>
<div class="ttc" id="aclassez_resource_manager_htm_aaa2566a1c32f5567f9a7c83102e59c8e"><div class="ttname"><a href="../../dc/d99/classez_resource_manager.htm#aaa2566a1c32f5567f9a7c83102e59c8e">ezResourceManager::SetResourceTypeLoader</a></div><div class="ttdeci">static void SetResourceTypeLoader(ezResourceTypeLoader *pCreator)</div><div class="ttdoc">Sets the resource loader to use for the given resource type.</div><div class="ttdef"><b>Definition:</b> ResourceManager_inl.h:267</div></div>
<div class="ttc" id="aclassez_resource_manager_htm_aacf08458079cd5993e5fcc3b76ed600a"><div class="ttname"><a href="../../dc/d99/classez_resource_manager.htm#aacf08458079cd5993e5fcc3b76ed600a">ezResourceManager::GetExistingResource</a></div><div class="ttdeci">static ezTypedResourceHandle&lt; ResourceType &gt; GetExistingResource(const char *szResourceID)</div><div class="ttdoc">Returns a handle to the resource with the given ID. If the resource does not exist,...</div><div class="ttdef"><b>Definition:</b> ResourceManager_inl.h:38</div></div>
<div class="ttc" id="aclassez_resource_manager_htm_ac88d827e0f64b2cd0c432939034ed3db"><div class="ttname"><a href="../../dc/d99/classez_resource_manager.htm#ac88d827e0f64b2cd0c432939034ed3db">ezResourceManager::ReloadResource</a></div><div class="ttdeci">static bool ReloadResource(const ezTypedResourceHandle&lt; ResourceType &gt; &amp;hResource, bool bForce)</div><div class="ttdoc">Reloads only the one specific resource. If bForce is true, it is updated, even if there is no indicat...</div><div class="ttdef"><b>Definition:</b> ResourceManager_inl.h:249</div></div>
<div class="ttc" id="aclassez_resource_manager_htm_ad1a0fc5c9799c68130cf2265d8919f00"><div class="ttname"><a href="../../dc/d99/classez_resource_manager.htm#ad1a0fc5c9799c68130cf2265d8919f00">ezResourceManager::ReloadResourcesOfType</a></div><div class="ttdeci">static ezUInt32 ReloadResourcesOfType(bool bForce)</div><div class="ttdoc">Goes through all resources of the given type and makes sure they are reloaded, if they have changed....</div><div class="ttdef"><b>Definition:</b> ResourceManager_inl.h:261</div></div>
<div class="ttc" id="aclassez_resource_type_loader_htm"><div class="ttname"><a href="../../d1/d17/classez_resource_type_loader.htm">ezResourceTypeLoader</a></div><div class="ttdoc">Base class for all resource loaders.</div><div class="ttdef"><b>Definition:</b> ResourceTypeLoader.h:29</div></div>
<div class="ttc" id="aclassez_temp_hashed_string_htm"><div class="ttname"><a href="../../db/dcf/classez_temp_hashed_string.htm">ezTempHashedString</a></div><div class="ttdoc">A class to use together with ezHashedString for quick comparisons with temporary strings that need no...</div><div class="ttdef"><b>Definition:</b> HashedString.h:153</div></div>
<div class="ttc" id="aclassez_typed_resource_handle_htm"><div class="ttname"><a href="../../d3/dd7/classez_typed_resource_handle.htm">ezTypedResourceHandle</a></div><div class="ttdoc">The ezTypedResourceHandle controls access to an ezResource.</div><div class="ttdef"><b>Definition:</b> ResourceHandle.h:125</div></div>
<div class="ttc" id="aclassez_typed_resource_handle_htm_ae477c3d836b941ece5ca0a77abd7e8cc"><div class="ttname"><a href="../../d3/dd7/classez_typed_resource_handle.htm#ae477c3d836b941ece5ca0a77abd7e8cc">ezTypedResourceHandle::IsValid</a></div><div class="ttdeci">EZ_ALWAYS_INLINE bool IsValid() const</div><div class="ttdoc">Returns whether the handle stores a valid pointer to a resource.</div><div class="ttdef"><b>Definition:</b> ResourceHandle.h:195</div></div>
<div class="ttc" id="astructez_resource_flags_htm_a59e97090ee88970ad83f348cdf72784cae4e9480588fe40b44e75f95b87dd3a5e"><div class="ttname"><a href="../../df/da1/structez_resource_flags.htm#a59e97090ee88970ad83f348cdf72784cae4e9480588fe40b44e75f95b87dd3a5e">ezResourceFlags::IsCreatedResource</a></div><div class="ttdeci">@ IsCreatedResource</div><div class="ttdoc">When this is set, the resource was created and not loaded from file.</div><div class="ttdef"><b>Definition:</b> Declarations.h:70</div></div>
<div class="ttc" id="astructez_resource_load_desc_htm"><div class="ttname"><a href="../../de/d9b/structez_resource_load_desc.htm">ezResourceLoadDesc</a></div><div class="ttdoc">Describes in which loading state a resource currently is, and how many different quality levels there...</div><div class="ttdef"><b>Definition:</b> Declarations.h:102</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_23fdee2f6995db16c755697cdf620cf4.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_035128dd2074b3ffa643fb93d2ba646f.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_e62ae2b329024d6cec02491cff116055.htm">Core</a></li><li class="navelem"><a class="el" href="../../dir_654337d58af9e022826c42081782191c.htm">ResourceManager</a></li><li class="navelem"><a class="el" href="../../dir_473d05503ffe3b01c5660418aaa4769a.htm">Implementation</a></li><li class="navelem"><b>ResourceManager_inl.h</b></li>
    <li class="footer">Generated on Tue Jun 8 2021 14:33:50 for ezEngine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1 </li>
  </ul>
</div>
</body>
</html>
