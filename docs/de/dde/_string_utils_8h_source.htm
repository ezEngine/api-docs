<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Strings/StringUtils.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">ezEngine<span id="projectnumber">&#160;Release 25.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function() { init_codefold(1); });
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('de/dde/_string_utils_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">StringUtils.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="preprocessor">#ifndef EZ_INCLUDING_BASICS_H</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="preprocessor">#  error &quot;Please don&#39;t include StringUtils.h directly, but instead include Foundation/Basics.h&quot;</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span> </div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="preprocessor">#include &lt;Foundation/Strings/UnicodeUtils.h&gt;</span></div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span> </div>
<div class="foldopen" id="foldopen00010" data-start="{" data-end="};">
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno"><a class="line" href="../../de/df8/classez_string_utils.htm">   10</a></span><span class="keyword">class </span>EZ_FOUNDATION_DLL <a class="code hl_class" href="../../de/df8/classez_string_utils.htm">ezStringUtils</a></div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span>{</div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno"><a class="line" href="../../de/df8/classez_string_utils.htm#a26f868ce8249b864f448837638ffde33">   15</a></span>  <span class="keyword">static</span> <span class="keyword">constexpr</span> <span class="keywordtype">bool</span> <a class="code hl_function" href="../../de/df8/classez_string_utils.htm#a26f868ce8249b864f448837638ffde33">IsNullOrEmpty</a>(<span class="keyword">const</span> T* pString); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span> </div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno"><a class="line" href="../../de/df8/classez_string_utils.htm#abb1ea5471748e08328b7d68f07ea70f0">   20</a></span>  <span class="keyword">static</span> <span class="keywordtype">bool</span> <a class="code hl_function" href="../../de/df8/classez_string_utils.htm#abb1ea5471748e08328b7d68f07ea70f0">IsNullOrEmpty</a>(<span class="keyword">const</span> T* pString, <span class="keyword">const</span> T* pStringEnd);</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span> </div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno"><a class="line" href="../../de/df8/classez_string_utils.htm#aa58602d032c788ec086f022b971a982f">   24</a></span>  <span class="keyword">static</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../de/df8/classez_string_utils.htm#aa58602d032c788ec086f022b971a982f">UpdateStringEnd</a>(<span class="keyword">const</span> T* pStringStart, <span class="keyword">const</span> T*&amp; ref_pStringEnd);</div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span> </div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>  <span class="keyword">static</span> <span class="keyword">constexpr</span> ezUInt32 GetStringElementCount(<span class="keyword">const</span> T* pString); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span> </div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>  <span class="keyword">static</span> ezUInt32 GetStringElementCount(<span class="keyword">const</span> T* pString, <span class="keyword">const</span> T* pStringEnd); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span> </div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span> </div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span>  <span class="keyword">static</span> ezUInt32 GetCharacterCount(<span class="keyword">const</span> <span class="keywordtype">char</span>* szUtf8, <span class="keyword">const</span> <span class="keywordtype">char</span>* pStringEnd = ezUnicodeUtils::GetMaxStringEnd&lt;char&gt;()); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span> </div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span>  <span class="keyword">static</span> <span class="keywordtype">void</span> GetCharacterAndElementCount(<span class="keyword">const</span> <span class="keywordtype">char</span>* szUtf8, ezUInt32&amp; ref_uiCharacterCount, ezUInt32&amp; ref_uiElementCount, <span class="keyword">const</span> <span class="keywordtype">char</span>* pStringEnd = ezUnicodeUtils::GetMaxStringEnd&lt;char&gt;()); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span> </div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>  <span class="keyword">static</span> ezUInt32 Copy(<span class="keywordtype">char</span>* szDest, ezUInt32 uiDstSize, <span class="keyword">const</span> <span class="keywordtype">char</span>* szSource, <span class="keyword">const</span> <span class="keywordtype">char</span>* pSourceEnd = ezUnicodeUtils::GetMaxStringEnd&lt;char&gt;()); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span> </div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span>  <span class="keyword">static</span> ezUInt32 CopyN(<span class="keywordtype">char</span>* szDest, ezUInt32 uiDstSize, <span class="keyword">const</span> <span class="keywordtype">char</span>* szSource, ezUInt32 uiCharsToCopy, <span class="keyword">const</span> <span class="keywordtype">char</span>* pSourceEnd = ezUnicodeUtils::GetMaxStringEnd&lt;char&gt;()); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span> </div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>  <span class="keyword">static</span> ezUInt32 ToUpperChar(ezUInt32 uiChar); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span> </div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>  <span class="keyword">static</span> ezUInt32 ToLowerChar(ezUInt32 uiChar); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span> </div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>  <span class="keyword">static</span> ezUInt32 ToUpperString(<span class="keywordtype">char</span>* szString, <span class="keyword">const</span> <span class="keywordtype">char</span>* pStringEnd = ezUnicodeUtils::GetMaxStringEnd&lt;char&gt;()); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span> </div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span>  <span class="keyword">static</span> ezUInt32 ToLowerString(<span class="keywordtype">char</span>* szString, <span class="keyword">const</span> <span class="keywordtype">char</span>* pStringEnd = ezUnicodeUtils::GetMaxStringEnd&lt;char&gt;()); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span> </div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>  <span class="keyword">static</span> ezInt32 CompareChars(ezUInt32 uiCharacter1, ezUInt32 uiCharacter2); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span> </div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>  <span class="keyword">static</span> ezInt32 CompareChars(<span class="keyword">const</span> <span class="keywordtype">char</span>* szUtf8Char1, <span class="keyword">const</span> <span class="keywordtype">char</span>* szUtf8Char2); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span> </div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>  <span class="keyword">static</span> ezInt32 CompareChars_NoCase(ezUInt32 uiCharacter1, ezUInt32 uiCharacter2); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span> </div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span>  <span class="keyword">static</span> ezInt32 CompareChars_NoCase(<span class="keyword">const</span> <span class="keywordtype">char</span>* szUtf8Char1, <span class="keyword">const</span> <span class="keywordtype">char</span>* szUtf8Char2); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span> </div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>  <span class="keyword">static</span> <span class="keywordtype">bool</span> IsEqual(<span class="keyword">const</span> <span class="keywordtype">char</span>* pString1, <span class="keyword">const</span> <span class="keywordtype">char</span>* pString2, <span class="keyword">const</span> <span class="keywordtype">char</span>* pString1End = ezUnicodeUtils::GetMaxStringEnd&lt;char&gt;(), <span class="keyword">const</span> <span class="keywordtype">char</span>* pString2End = ezUnicodeUtils::GetMaxStringEnd&lt;char&gt;()); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span> </div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span>  <span class="keyword">static</span> <span class="keywordtype">bool</span> IsEqualN(<span class="keyword">const</span> <span class="keywordtype">char</span>* pString1, <span class="keyword">const</span> <span class="keywordtype">char</span>* pString2, ezUInt32 uiCharsToCompare, <span class="keyword">const</span> <span class="keywordtype">char</span>* pString1End = ezUnicodeUtils::GetMaxStringEnd&lt;char&gt;(), <span class="keyword">const</span> <span class="keywordtype">char</span>* pString2End = ezUnicodeUtils::GetMaxStringEnd&lt;char&gt;()); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span> </div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span>  <span class="keyword">static</span> <span class="keywordtype">bool</span> IsEqual_NoCase(<span class="keyword">const</span> <span class="keywordtype">char</span>* pString1, <span class="keyword">const</span> <span class="keywordtype">char</span>* pString2, <span class="keyword">const</span> <span class="keywordtype">char</span>* pString1End = ezUnicodeUtils::GetMaxStringEnd&lt;char&gt;(), <span class="keyword">const</span> <span class="keywordtype">char</span>* pString2End = ezUnicodeUtils::GetMaxStringEnd&lt;char&gt;()); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span> </div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span>  <span class="keyword">static</span> <span class="keywordtype">bool</span> IsEqualN_NoCase(<span class="keyword">const</span> <span class="keywordtype">char</span>* pString1, <span class="keyword">const</span> <span class="keywordtype">char</span>* pString2, ezUInt32 uiCharsToCompare, <span class="keyword">const</span> <span class="keywordtype">char</span>* pString1End = ezUnicodeUtils::GetMaxStringEnd&lt;char&gt;(), <span class="keyword">const</span> <span class="keywordtype">char</span>* pString2End = ezUnicodeUtils::GetMaxStringEnd&lt;char&gt;()); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span> </div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>  <span class="keyword">static</span> ezInt32 Compare(<span class="keyword">const</span> <span class="keywordtype">char</span>* pString1, <span class="keyword">const</span> <span class="keywordtype">char</span>* pString2, <span class="keyword">const</span> <span class="keywordtype">char</span>* pString1End = ezUnicodeUtils::GetMaxStringEnd&lt;char&gt;(), <span class="keyword">const</span> <span class="keywordtype">char</span>* pString2End = ezUnicodeUtils::GetMaxStringEnd&lt;char&gt;()); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span> </div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>  <span class="keyword">static</span> ezInt32 CompareN(<span class="keyword">const</span> <span class="keywordtype">char</span>* pString1, <span class="keyword">const</span> <span class="keywordtype">char</span>* pString2, ezUInt32 uiCharsToCompare, <span class="keyword">const</span> <span class="keywordtype">char</span>* pString1End = ezUnicodeUtils::GetMaxStringEnd&lt;char&gt;(), <span class="keyword">const</span> <span class="keywordtype">char</span>* pString2End = ezUnicodeUtils::GetMaxStringEnd&lt;char&gt;()); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span> </div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span>  <span class="keyword">static</span> ezInt32 Compare_NoCase(<span class="keyword">const</span> <span class="keywordtype">char</span>* pString1, <span class="keyword">const</span> <span class="keywordtype">char</span>* pString2, <span class="keyword">const</span> <span class="keywordtype">char</span>* pString1End = ezUnicodeUtils::GetMaxStringEnd&lt;char&gt;(), <span class="keyword">const</span> <span class="keywordtype">char</span>* pString2End = ezUnicodeUtils::GetMaxStringEnd&lt;char&gt;()); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span> </div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span>  <span class="keyword">static</span> ezInt32 CompareN_NoCase(<span class="keyword">const</span> <span class="keywordtype">char</span>* pString1, <span class="keyword">const</span> <span class="keywordtype">char</span>* pString2, ezUInt32 uiCharsToCompare, <span class="keyword">const</span> <span class="keywordtype">char</span>* pString1End = ezUnicodeUtils::GetMaxStringEnd&lt;char&gt;(), <span class="keyword">const</span> <span class="keywordtype">char</span>* pString2End = ezUnicodeUtils::GetMaxStringEnd&lt;char&gt;()); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span> </div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span> </div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span>  <span class="keyword">static</span> ezInt32 snprintf(<span class="keywordtype">char</span>* szDst, ezUInt32 uiDstSize, <span class="keyword">const</span> <span class="keywordtype">char</span>* szFormat, ...); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span> </div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span>  <span class="keyword">static</span> ezInt32 vsnprintf(<span class="keywordtype">char</span>* szDst, ezUInt32 uiDstSize, <span class="keyword">const</span> <span class="keywordtype">char</span>* szFormat, va_list szAp); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span> </div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span>  <span class="keyword">static</span> <span class="keywordtype">bool</span> StartsWith(<span class="keyword">const</span> <span class="keywordtype">char</span>* szString, <span class="keyword">const</span> <span class="keywordtype">char</span>* szStartsWith, <span class="keyword">const</span> <span class="keywordtype">char</span>* pStringEnd = ezUnicodeUtils::GetMaxStringEnd&lt;char&gt;(), <span class="keyword">const</span> <span class="keywordtype">char</span>* szStartsWithEnd = ezUnicodeUtils::GetMaxStringEnd&lt;char&gt;()); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span> </div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span>  <span class="keyword">static</span> <span class="keywordtype">bool</span> StartsWith_NoCase(<span class="keyword">const</span> <span class="keywordtype">char</span>* szString, <span class="keyword">const</span> <span class="keywordtype">char</span>* szStartsWith, <span class="keyword">const</span> <span class="keywordtype">char</span>* pStringEnd = ezUnicodeUtils::GetMaxStringEnd&lt;char&gt;(), <span class="keyword">const</span> <span class="keywordtype">char</span>* szStartsWithEnd = ezUnicodeUtils::GetMaxStringEnd&lt;char&gt;()); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span> </div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span>  <span class="keyword">static</span> <span class="keywordtype">bool</span> EndsWith(<span class="keyword">const</span> <span class="keywordtype">char</span>* szString, <span class="keyword">const</span> <span class="keywordtype">char</span>* szEndsWith, <span class="keyword">const</span> <span class="keywordtype">char</span>* pStringEnd = ezUnicodeUtils::GetMaxStringEnd&lt;char&gt;(), <span class="keyword">const</span> <span class="keywordtype">char</span>* szEndsWithEnd = ezUnicodeUtils::GetMaxStringEnd&lt;char&gt;()); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span> </div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span>  <span class="keyword">static</span> <span class="keywordtype">bool</span> EndsWith_NoCase(<span class="keyword">const</span> <span class="keywordtype">char</span>* szString, <span class="keyword">const</span> <span class="keywordtype">char</span>* szEndsWith, <span class="keyword">const</span> <span class="keywordtype">char</span>* pStringEnd = ezUnicodeUtils::GetMaxStringEnd&lt;char&gt;(), <span class="keyword">const</span> <span class="keywordtype">char</span>* szEndsWithEnd = ezUnicodeUtils::GetMaxStringEnd&lt;char&gt;()); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span> </div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span> </div>
<div class="line"><a id="l00197" name="l00197"></a><span class="lineno">  197</span>  <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* FindSubString(<span class="keyword">const</span> <span class="keywordtype">char</span>* szSource, <span class="keyword">const</span> <span class="keywordtype">char</span>* szStringToFind, <span class="keyword">const</span> <span class="keywordtype">char</span>* pSourceEnd = ezUnicodeUtils::GetMaxStringEnd&lt;char&gt;(), <span class="keyword">const</span> <span class="keywordtype">char</span>* szStringToFindEnd = ezUnicodeUtils::GetMaxStringEnd&lt;char&gt;()); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno">  198</span> </div>
<div class="line"><a id="l00200" name="l00200"></a><span class="lineno">  200</span>  <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* FindSubString_NoCase(<span class="keyword">const</span> <span class="keywordtype">char</span>* szSource, <span class="keyword">const</span> <span class="keywordtype">char</span>* szStringToFind, <span class="keyword">const</span> <span class="keywordtype">char</span>* pSourceEnd = ezUnicodeUtils::GetMaxStringEnd&lt;char&gt;(), <span class="keyword">const</span> <span class="keywordtype">char</span>* szStringToFindEnd = ezUnicodeUtils::GetMaxStringEnd&lt;char&gt;()); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00201" name="l00201"></a><span class="lineno">  201</span> </div>
<div class="line"><a id="l00203" name="l00203"></a><span class="lineno">  203</span>  <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* FindLastSubString(<span class="keyword">const</span> <span class="keywordtype">char</span>* szSource, <span class="keyword">const</span> <span class="keywordtype">char</span>* szStringToFind, <span class="keyword">const</span> <span class="keywordtype">char</span>* szStartSearchAt = <span class="keyword">nullptr</span>, <span class="keyword">const</span> <span class="keywordtype">char</span>* pSourceEnd = ezUnicodeUtils::GetMaxStringEnd&lt;char&gt;(), <span class="keyword">const</span> <span class="keywordtype">char</span>* szStringToFindEnd = ezUnicodeUtils::GetMaxStringEnd&lt;char&gt;()); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno">  204</span> </div>
<div class="line"><a id="l00206" name="l00206"></a><span class="lineno">  206</span>  <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* FindLastSubString_NoCase(<span class="keyword">const</span> <span class="keywordtype">char</span>* szSource, <span class="keyword">const</span> <span class="keywordtype">char</span>* szStringToFind, <span class="keyword">const</span> <span class="keywordtype">char</span>* szStartSearchAt = <span class="keyword">nullptr</span>, <span class="keyword">const</span> <span class="keywordtype">char</span>* pSourceEnd = ezUnicodeUtils::GetMaxStringEnd&lt;char&gt;(), <span class="keyword">const</span> <span class="keywordtype">char</span>* szStringToFindEnd = ezUnicodeUtils::GetMaxStringEnd&lt;char&gt;()); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00207" name="l00207"></a><span class="lineno">  207</span> </div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno"><a class="line" href="../../de/df8/classez_string_utils.htm#a30a256e58c74618a988775c15bdd3d8e">  209</a></span>  <span class="keyword">using </span><a class="code hl_typedef" href="../../de/df8/classez_string_utils.htm#a30a256e58c74618a988775c15bdd3d8e">EZ_CHARACTER_FILTER</a> = bool (*)(ezUInt32 uiChar);</div>
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno">  210</span> </div>
<div class="line"><a id="l00217" name="l00217"></a><span class="lineno">  217</span>  <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* SkipCharacters(<span class="keyword">const</span> <span class="keywordtype">char</span>* szString, <a class="code hl_typedef" href="../../de/df8/classez_string_utils.htm#a30a256e58c74618a988775c15bdd3d8e">EZ_CHARACTER_FILTER</a> skipCharacterCB, <span class="keywordtype">bool</span> bAlwaysSkipFirst = <span class="keyword">false</span>); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00218" name="l00218"></a><span class="lineno">  218</span> </div>
<div class="line"><a id="l00223" name="l00223"></a><span class="lineno">  223</span>  <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* FindWordEnd(<span class="keyword">const</span> <span class="keywordtype">char</span>* szString, <a class="code hl_typedef" href="../../de/df8/classez_string_utils.htm#a30a256e58c74618a988775c15bdd3d8e">EZ_CHARACTER_FILTER</a> isDelimiterCB, <span class="keywordtype">bool</span> bAlwaysSkipFirst = <span class="keyword">true</span>); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00224" name="l00224"></a><span class="lineno">  224</span> </div>
<div class="line"><a id="l00232" name="l00232"></a><span class="lineno">  232</span>  <span class="keyword">static</span> <span class="keywordtype">void</span> Trim(<span class="keyword">const</span> <span class="keywordtype">char</span>*&amp; ref_pString, <span class="keyword">const</span> <span class="keywordtype">char</span>*&amp; ref_pStringEnd, <span class="keyword">const</span> <span class="keywordtype">char</span>* szTrimCharsStart, <span class="keyword">const</span> <span class="keywordtype">char</span>* szTrimCharsEnd); <span class="comment">// [tested] via ezStringView and ezStringBuilder</span></div>
<div class="line"><a id="l00233" name="l00233"></a><span class="lineno">  233</span> </div>
<div class="line"><a id="l00236" name="l00236"></a><span class="lineno">  236</span>  <span class="keyword">static</span> <span class="keywordtype">bool</span> IsWhiteSpace(ezUInt32 uiChar); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00237" name="l00237"></a><span class="lineno">  237</span> </div>
<div class="line"><a id="l00239" name="l00239"></a><span class="lineno">  239</span>  <span class="keyword">static</span> <span class="keywordtype">bool</span> IsDecimalDigit(ezUInt32 uiChar); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00240" name="l00240"></a><span class="lineno">  240</span> </div>
<div class="line"><a id="l00242" name="l00242"></a><span class="lineno">  242</span>  <span class="keyword">static</span> <span class="keywordtype">bool</span> IsHexDigit(ezUInt32 uiChar); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00243" name="l00243"></a><span class="lineno">  243</span> </div>
<div class="line"><a id="l00245" name="l00245"></a><span class="lineno">  245</span>  <span class="keyword">static</span> <span class="keywordtype">bool</span> IsWordDelimiter_English(ezUInt32 uiChar); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00246" name="l00246"></a><span class="lineno">  246</span> </div>
<div class="line"><a id="l00248" name="l00248"></a><span class="lineno">  248</span>  <span class="keyword">static</span> <span class="keywordtype">bool</span> IsIdentifierDelimiter_C_Code(ezUInt32 uiChar); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00249" name="l00249"></a><span class="lineno">  249</span> </div>
<div class="line"><a id="l00251" name="l00251"></a><span class="lineno">  251</span>  <span class="keyword">static</span> <span class="keywordtype">bool</span> IsValidIdentifierName(<span class="keyword">const</span> <span class="keywordtype">char</span>* pString, <span class="keyword">const</span> <span class="keywordtype">char</span>* pStringEnd = ezUnicodeUtils::GetMaxStringEnd&lt;char&gt;()); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00252" name="l00252"></a><span class="lineno">  252</span> </div>
<div class="line"><a id="l00255" name="l00255"></a><span class="lineno">  255</span>  <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* FindWholeWord(<span class="keyword">const</span> <span class="keywordtype">char</span>* szString, <span class="keyword">const</span> <span class="keywordtype">char</span>* szSearchFor, <a class="code hl_typedef" href="../../de/df8/classez_string_utils.htm#a30a256e58c74618a988775c15bdd3d8e">EZ_CHARACTER_FILTER</a> isDelimiterCB, <span class="keyword">const</span> <span class="keywordtype">char</span>* pStringEnd = ezUnicodeUtils::GetMaxStringEnd&lt;char&gt;()); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00256" name="l00256"></a><span class="lineno">  256</span> </div>
<div class="line"><a id="l00259" name="l00259"></a><span class="lineno">  259</span>  <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* FindWholeWord_NoCase(<span class="keyword">const</span> <span class="keywordtype">char</span>* szString, <span class="keyword">const</span> <span class="keywordtype">char</span>* szSearchFor, <a class="code hl_typedef" href="../../de/df8/classez_string_utils.htm#a30a256e58c74618a988775c15bdd3d8e">EZ_CHARACTER_FILTER</a> isDelimiterCB, <span class="keyword">const</span> <span class="keywordtype">char</span>* pStringEnd = ezUnicodeUtils::GetMaxStringEnd&lt;char&gt;()); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00260" name="l00260"></a><span class="lineno">  260</span> </div>
<div class="line"><a id="l00264" name="l00264"></a><span class="lineno">  264</span>  <span class="keyword">static</span> <a class="code hl_struct" href="../../d4/da9/structez_result.htm">ezResult</a> FindUIntAtTheEnd(<span class="keyword">const</span> <span class="keywordtype">char</span>* szString, ezUInt32&amp; out_uiValue, ezUInt32* pStringLengthBeforeUInt = <span class="keyword">nullptr</span>); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00265" name="l00265"></a><span class="lineno">  265</span> </div>
<div class="line"><a id="l00267" name="l00267"></a><span class="lineno">  267</span>  <span class="keyword">static</span> <span class="keywordtype">void</span> OutputFormattedInt(<span class="keywordtype">char</span>* szOutputBuffer, ezUInt32 uiBufferSize, ezUInt32&amp; ref_uiWritePos, ezInt64 value, ezUInt8 uiWidth, <span class="keywordtype">bool</span> bPadZeros, ezUInt8 uiBase);</div>
<div class="line"><a id="l00269" name="l00269"></a><span class="lineno">  269</span>  <span class="keyword">static</span> <span class="keywordtype">void</span> OutputFormattedUInt(<span class="keywordtype">char</span>* szOutputBuffer, ezUInt32 uiBufferSize, ezUInt32&amp; ref_uiWritePos, ezUInt64 value, ezUInt8 uiWidth, <span class="keywordtype">bool</span> bPadZeros, ezUInt8 uiBase, <span class="keywordtype">bool</span> bUpperCase);</div>
<div class="line"><a id="l00271" name="l00271"></a><span class="lineno">  271</span>  <span class="keyword">static</span> <span class="keywordtype">void</span> OutputFormattedFloat(<span class="keywordtype">char</span>* szOutputBuffer, ezUInt32 uiBufferSize, ezUInt32&amp; ref_uiWritePos, <span class="keywordtype">double</span> value, ezUInt8 uiWidth, <span class="keywordtype">bool</span> bPadZeros, ezInt8 iPrecision, <span class="keywordtype">bool</span> bScientific, <span class="keywordtype">bool</span> bRemoveTrailingZeroes = <span class="keyword">false</span>);</div>
<div class="line"><a id="l00272" name="l00272"></a><span class="lineno">  272</span> </div>
<div class="line"><a id="l00277" name="l00277"></a><span class="lineno">  277</span>  <span class="keyword">static</span> ezUInt32 CalculateLineNumber(<span class="keyword">const</span> <span class="keywordtype">char</span>* szString, <span class="keyword">const</span> <span class="keywordtype">char</span>* szOffset, <span class="keyword">const</span> <span class="keywordtype">char</span>* pStringEnd = ezUnicodeUtils::GetMaxStringEnd&lt;char&gt;());</div>
<div class="line"><a id="l00278" name="l00278"></a><span class="lineno">  278</span>};</div>
</div>
<div class="line"><a id="l00279" name="l00279"></a><span class="lineno">  279</span> </div>
<div class="line"><a id="l00280" name="l00280"></a><span class="lineno">  280</span> </div>
<div class="line"><a id="l00281" name="l00281"></a><span class="lineno">  281</span><span class="preprocessor">#include &lt;Foundation/Strings/Implementation/StringUtils_inl.h&gt;</span></div>
<div class="ttc" id="aclassez_string_utils_htm"><div class="ttname"><a href="../../de/df8/classez_string_utils.htm">ezStringUtils</a></div><div class="ttdoc">Helper functions to work with UTF-8 strings (which include pure ASCII strings)</div><div class="ttdef"><b>Definition</b> StringUtils.h:11</div></div>
<div class="ttc" id="aclassez_string_utils_htm_a26f868ce8249b864f448837638ffde33"><div class="ttname"><a href="../../de/df8/classez_string_utils.htm#a26f868ce8249b864f448837638ffde33">ezStringUtils::IsNullOrEmpty</a></div><div class="ttdeci">static constexpr bool IsNullOrEmpty(const T *pString)</div><div class="ttdoc">Returns true, if the given string is a nullptr pointer or a string that immediately terminates with a...</div></div>
<div class="ttc" id="aclassez_string_utils_htm_a30a256e58c74618a988775c15bdd3d8e"><div class="ttname"><a href="../../de/df8/classez_string_utils.htm#a30a256e58c74618a988775c15bdd3d8e">ezStringUtils::EZ_CHARACTER_FILTER</a></div><div class="ttdeci">bool(*)(ezUInt32 uiChar) EZ_CHARACTER_FILTER</div><div class="ttdoc">Function Definition for a function that determines whether a (Utf32) character belongs to a certain c...</div><div class="ttdef"><b>Definition</b> StringUtils.h:209</div></div>
<div class="ttc" id="aclassez_string_utils_htm_aa58602d032c788ec086f022b971a982f"><div class="ttname"><a href="../../de/df8/classez_string_utils.htm#aa58602d032c788ec086f022b971a982f">ezStringUtils::UpdateStringEnd</a></div><div class="ttdeci">static void UpdateStringEnd(const T *pStringStart, const T *&amp;ref_pStringEnd)</div><div class="ttdoc">Recomputes the end pointer of a string (szStringEnd), if that is currently set to ezMaxStringEnd....</div></div>
<div class="ttc" id="aclassez_string_utils_htm_abb1ea5471748e08328b7d68f07ea70f0"><div class="ttname"><a href="../../de/df8/classez_string_utils.htm#abb1ea5471748e08328b7d68f07ea70f0">ezStringUtils::IsNullOrEmpty</a></div><div class="ttdeci">static bool IsNullOrEmpty(const T *pString, const T *pStringEnd)</div><div class="ttdoc">Returns true, if the given string is a nullptr pointer, is equal to its end or a string that immediat...</div></div>
<div class="ttc" id="astructez_result_htm"><div class="ttname"><a href="../../d4/da9/structez_result.htm">ezResult</a></div><div class="ttdoc">Default enum for returning failure or success, instead of using a bool.</div><div class="ttdef"><b>Definition</b> Types.h:54</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_b52479c911fe9a42767226b3387b3a02.htm">Strings</a></li><li class="navelem"><b>StringUtils.h</b></li>
    <li class="footer">Generated on Fri Jul 11 2025 12:17:53 for ezEngine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
