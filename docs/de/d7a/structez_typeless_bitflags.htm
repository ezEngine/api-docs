<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: ezTypelessBitflags&lt; T &gt; Struct Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 21.6</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search','.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('de/d7a/structez_typeless_bitflags.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="../../d8/d1b/structez_typeless_bitflags-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ezTypelessBitflags&lt; T &gt; Struct Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Similar to <a class="el" href="../../d1/dec/structez_bitflags.htm" title="The ezBitflags class allows you to work with type-safe bitflags.">ezBitflags</a> but without type-safety.  
 <a href="../../de/d7a/structez_typeless_bitflags.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../db/dec/_bitflags_8h_source.htm">Bitflags.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a199d1db968ca230a3663152f13ee1e3f"><td class="memItemLeft" align="right" valign="top"><a id="a199d1db968ca230a3663152f13ee1e3f"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>StorageType</b> = T</td></tr>
<tr class="separator:a199d1db968ca230a3663152f13ee1e3f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a37fd23738476748154ba6fc01ac1b3d7"><td class="memItemLeft" align="right" valign="top"><a id="a37fd23738476748154ba6fc01ac1b3d7"></a>
EZ_ALWAYS_INLINE&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d7a/structez_typeless_bitflags.htm#a37fd23738476748154ba6fc01ac1b3d7">ezTypelessBitflags</a> ()</td></tr>
<tr class="memdesc:a37fd23738476748154ba6fc01ac1b3d7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the flags zero. <br /></td></tr>
<tr class="separator:a37fd23738476748154ba6fc01ac1b3d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c7cef78159f219591f878c3aab061ee"><td class="memItemLeft" align="right" valign="top"><a id="a6c7cef78159f219591f878c3aab061ee"></a>
EZ_ALWAYS_INLINE&#160;</td><td class="memItemRight" valign="bottom"><b>ezTypelessBitflags</b> (StorageType flags)</td></tr>
<tr class="separator:a6c7cef78159f219591f878c3aab061ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a073a460555a1f5220530e51ddd99937c"><td class="memItemLeft" align="right" valign="top"><a id="a073a460555a1f5220530e51ddd99937c"></a>
EZ_ALWAYS_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (StorageType flags)</td></tr>
<tr class="separator:a073a460555a1f5220530e51ddd99937c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1fbb25a3eaeb64774b2b399232bfaaaa"><td class="memItemLeft" align="right" valign="top"><a id="a1fbb25a3eaeb64774b2b399232bfaaaa"></a>
EZ_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator==</b> (const StorageType rhs) const</td></tr>
<tr class="separator:a1fbb25a3eaeb64774b2b399232bfaaaa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a36f47e2e2db86574fe8a61254b5ef5be"><td class="memItemLeft" align="right" valign="top"><a id="a36f47e2e2db86574fe8a61254b5ef5be"></a>
EZ_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator!=</b> (const StorageType rhs) const</td></tr>
<tr class="separator:a36f47e2e2db86574fe8a61254b5ef5be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad25a46d990b27d7884a251e6aad6a4fa"><td class="memItemLeft" align="right" valign="top"><a id="ad25a46d990b27d7884a251e6aad6a4fa"></a>
EZ_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator==</b> (const <a class="el" href="../../de/d7a/structez_typeless_bitflags.htm">ezTypelessBitflags</a>&lt; StorageType &gt; &amp;rhs) const</td></tr>
<tr class="separator:ad25a46d990b27d7884a251e6aad6a4fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2530d613ba087d5084ffe5e2a2b4fd5e"><td class="memItemLeft" align="right" valign="top"><a id="a2530d613ba087d5084ffe5e2a2b4fd5e"></a>
EZ_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator!=</b> (const <a class="el" href="../../de/d7a/structez_typeless_bitflags.htm">ezTypelessBitflags</a>&lt; StorageType &gt; &amp;rhs) const</td></tr>
<tr class="separator:a2530d613ba087d5084ffe5e2a2b4fd5e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a09218c17584e5ae46b47a9e500a8fc26"><td class="memItemLeft" align="right" valign="top"><a id="a09218c17584e5ae46b47a9e500a8fc26"></a>
EZ_ALWAYS_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d7a/structez_typeless_bitflags.htm#a09218c17584e5ae46b47a9e500a8fc26">Clear</a> ()</td></tr>
<tr class="memdesc:a09218c17584e5ae46b47a9e500a8fc26"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears all flags. <br /></td></tr>
<tr class="separator:a09218c17584e5ae46b47a9e500a8fc26"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d673cc7b47be8ad0a427a176ff8d1d0"><td class="memItemLeft" align="right" valign="top"><a id="a9d673cc7b47be8ad0a427a176ff8d1d0"></a>
EZ_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d7a/structez_typeless_bitflags.htm#a9d673cc7b47be8ad0a427a176ff8d1d0">AreAllSet</a> (const <a class="el" href="../../de/d7a/structez_typeless_bitflags.htm">ezTypelessBitflags</a>&lt; StorageType &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:a9d673cc7b47be8ad0a427a176ff8d1d0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether all the given flags are set. <br /></td></tr>
<tr class="separator:a9d673cc7b47be8ad0a427a176ff8d1d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d9e9dd4f0f9318bbd8761cde579a188"><td class="memItemLeft" align="right" valign="top"><a id="a5d9e9dd4f0f9318bbd8761cde579a188"></a>
EZ_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d7a/structez_typeless_bitflags.htm#a5d9e9dd4f0f9318bbd8761cde579a188">AreNoneSet</a> (const <a class="el" href="../../de/d7a/structez_typeless_bitflags.htm">ezTypelessBitflags</a>&lt; StorageType &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:a5d9e9dd4f0f9318bbd8761cde579a188"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether none of the given flags is set. <br /></td></tr>
<tr class="separator:a5d9e9dd4f0f9318bbd8761cde579a188"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a81ff1b9b4feaad893df5b186ed4f1266"><td class="memItemLeft" align="right" valign="top"><a id="a81ff1b9b4feaad893df5b186ed4f1266"></a>
EZ_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d7a/structez_typeless_bitflags.htm#a81ff1b9b4feaad893df5b186ed4f1266">IsAnySet</a> (const <a class="el" href="../../de/d7a/structez_typeless_bitflags.htm">ezTypelessBitflags</a>&lt; StorageType &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:a81ff1b9b4feaad893df5b186ed4f1266"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether any of the given flags is set. <br /></td></tr>
<tr class="separator:a81ff1b9b4feaad893df5b186ed4f1266"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6c901c09526a66202da924bd7b397bf3"><td class="memItemLeft" align="right" valign="top"><a id="a6c901c09526a66202da924bd7b397bf3"></a>
EZ_ALWAYS_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d7a/structez_typeless_bitflags.htm#a6c901c09526a66202da924bd7b397bf3">Add</a> (const <a class="el" href="../../de/d7a/structez_typeless_bitflags.htm">ezTypelessBitflags</a>&lt; StorageType &gt; &amp;rhs)</td></tr>
<tr class="memdesc:a6c901c09526a66202da924bd7b397bf3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the given flag. <br /></td></tr>
<tr class="separator:a6c901c09526a66202da924bd7b397bf3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a698fd1a81b641ec6e200b20cc2223fb1"><td class="memItemLeft" align="right" valign="top"><a id="a698fd1a81b641ec6e200b20cc2223fb1"></a>
EZ_ALWAYS_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d7a/structez_typeless_bitflags.htm#a698fd1a81b641ec6e200b20cc2223fb1">Remove</a> (const <a class="el" href="../../de/d7a/structez_typeless_bitflags.htm">ezTypelessBitflags</a>&lt; StorageType &gt; &amp;rhs)</td></tr>
<tr class="memdesc:a698fd1a81b641ec6e200b20cc2223fb1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes the given flag. <br /></td></tr>
<tr class="separator:a698fd1a81b641ec6e200b20cc2223fb1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1991a44c7440be8a7e606bf7e2e5e672"><td class="memItemLeft" align="right" valign="top"><a id="a1991a44c7440be8a7e606bf7e2e5e672"></a>
EZ_ALWAYS_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d7a/structez_typeless_bitflags.htm#a1991a44c7440be8a7e606bf7e2e5e672">Toggle</a> (const <a class="el" href="../../de/d7a/structez_typeless_bitflags.htm">ezTypelessBitflags</a>&lt; StorageType &gt; &amp;rhs)</td></tr>
<tr class="memdesc:a1991a44c7440be8a7e606bf7e2e5e672"><td class="mdescLeft">&#160;</td><td class="mdescRight">Toggles the state of the given flag. <br /></td></tr>
<tr class="separator:a1991a44c7440be8a7e606bf7e2e5e672"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4bfad8e27dfed9c8a82f34c6fe995a0f"><td class="memItemLeft" align="right" valign="top"><a id="a4bfad8e27dfed9c8a82f34c6fe995a0f"></a>
EZ_ALWAYS_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d7a/structez_typeless_bitflags.htm#a4bfad8e27dfed9c8a82f34c6fe995a0f">AddOrRemove</a> (const <a class="el" href="../../de/d7a/structez_typeless_bitflags.htm">ezTypelessBitflags</a>&lt; StorageType &gt; &amp;rhs, bool state)</td></tr>
<tr class="memdesc:a4bfad8e27dfed9c8a82f34c6fe995a0f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets or clears the given flag. <br /></td></tr>
<tr class="separator:a4bfad8e27dfed9c8a82f34c6fe995a0f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3692b86c695397372654bf880acdeb15"><td class="memItemLeft" align="right" valign="top"><a id="a3692b86c695397372654bf880acdeb15"></a>
EZ_ALWAYS_INLINE <a class="el" href="../../de/d7a/structez_typeless_bitflags.htm">ezTypelessBitflags</a>&lt; StorageType &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d7a/structez_typeless_bitflags.htm#a3692b86c695397372654bf880acdeb15">operator|</a> (const <a class="el" href="../../de/d7a/structez_typeless_bitflags.htm">ezTypelessBitflags</a>&lt; StorageType &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:a3692b86c695397372654bf880acdeb15"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an object that has the flags of <em>this</em> and <em>rhs</em> combined. <br /></td></tr>
<tr class="separator:a3692b86c695397372654bf880acdeb15"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75676be109977a46719fdce3d3474cdc"><td class="memItemLeft" align="right" valign="top"><a id="a75676be109977a46719fdce3d3474cdc"></a>
EZ_ALWAYS_INLINE <a class="el" href="../../de/d7a/structez_typeless_bitflags.htm">ezTypelessBitflags</a>&lt; StorageType &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d7a/structez_typeless_bitflags.htm#a75676be109977a46719fdce3d3474cdc">operator&amp;</a> (const <a class="el" href="../../de/d7a/structez_typeless_bitflags.htm">ezTypelessBitflags</a>&lt; StorageType &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:a75676be109977a46719fdce3d3474cdc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an object that has the flags that were set both in <em>this</em> and <em>rhs</em>. <br /></td></tr>
<tr class="separator:a75676be109977a46719fdce3d3474cdc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a41a20912dde9b339d6e93fc22dec2625"><td class="memItemLeft" align="right" valign="top"><a id="a41a20912dde9b339d6e93fc22dec2625"></a>
EZ_ALWAYS_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d7a/structez_typeless_bitflags.htm#a41a20912dde9b339d6e93fc22dec2625">operator|=</a> (const <a class="el" href="../../de/d7a/structez_typeless_bitflags.htm">ezTypelessBitflags</a>&lt; StorageType &gt; &amp;rhs)</td></tr>
<tr class="memdesc:a41a20912dde9b339d6e93fc22dec2625"><td class="mdescLeft">&#160;</td><td class="mdescRight">Modifies <em>this</em> to also contain the bits from <em>rhs</em>. <br /></td></tr>
<tr class="separator:a41a20912dde9b339d6e93fc22dec2625"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c23a25e3332473ceb4293c1b04e922f"><td class="memItemLeft" align="right" valign="top"><a id="a0c23a25e3332473ceb4293c1b04e922f"></a>
EZ_ALWAYS_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d7a/structez_typeless_bitflags.htm#a0c23a25e3332473ceb4293c1b04e922f">operator&amp;=</a> (const <a class="el" href="../../de/d7a/structez_typeless_bitflags.htm">ezTypelessBitflags</a>&lt; StorageType &gt; &amp;rhs)</td></tr>
<tr class="memdesc:a0c23a25e3332473ceb4293c1b04e922f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Modifies <em>this</em> to only contain the bits that were set in <em>this</em> and <em>rhs</em>. <br /></td></tr>
<tr class="separator:a0c23a25e3332473ceb4293c1b04e922f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0486d84bee721ecd37ab8478b9983e43"><td class="memItemLeft" align="right" valign="top"><a id="a0486d84bee721ecd37ab8478b9983e43"></a>
EZ_ALWAYS_INLINE StorageType&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d7a/structez_typeless_bitflags.htm#a0486d84bee721ecd37ab8478b9983e43">GetValue</a> () const</td></tr>
<tr class="memdesc:a0486d84bee721ecd37ab8478b9983e43"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the stored value as the underlying integer type. <br /></td></tr>
<tr class="separator:a0486d84bee721ecd37ab8478b9983e43"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac20e47c529b37e143fb428a3b8e2e8a6"><td class="memItemLeft" align="right" valign="top"><a id="ac20e47c529b37e143fb428a3b8e2e8a6"></a>
EZ_ALWAYS_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d7a/structez_typeless_bitflags.htm#ac20e47c529b37e143fb428a3b8e2e8a6">SetValue</a> (StorageType value)</td></tr>
<tr class="memdesc:ac20e47c529b37e143fb428a3b8e2e8a6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Overwrites the flags with a new value. <br /></td></tr>
<tr class="separator:ac20e47c529b37e143fb428a3b8e2e8a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae11df5ed72614fb53a0b826e4d1cc0d5"><td class="memItemLeft" align="right" valign="top"><a id="ae11df5ed72614fb53a0b826e4d1cc0d5"></a>
EZ_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d7a/structez_typeless_bitflags.htm#ae11df5ed72614fb53a0b826e4d1cc0d5">IsNoFlagSet</a> () const</td></tr>
<tr class="memdesc:ae11df5ed72614fb53a0b826e4d1cc0d5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if not a single bit is set. <br /></td></tr>
<tr class="separator:ae11df5ed72614fb53a0b826e4d1cc0d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab8f907295a45638945b0433c327287c3"><td class="memItemLeft" align="right" valign="top"><a id="ab8f907295a45638945b0433c327287c3"></a>
EZ_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/d7a/structez_typeless_bitflags.htm#ab8f907295a45638945b0433c327287c3">IsAnyFlagSet</a> () const</td></tr>
<tr class="memdesc:ab8f907295a45638945b0433c327287c3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if any bitflag is set. <br /></td></tr>
<tr class="separator:ab8f907295a45638945b0433c327287c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename T&gt;<br />
struct ezTypelessBitflags&lt; T &gt;</h3>

<p>Similar to <a class="el" href="../../d1/dec/structez_bitflags.htm" title="The ezBitflags class allows you to work with type-safe bitflags.">ezBitflags</a> but without type-safety. </p>
<p>This class is intended for use cases where type-safety can get in the way, for example when it is intended for the user to extend a flags enum with custom flags a separate file / enum. </p>
</div><hr/>The documentation for this struct was generated from the following file:<ul>
<li>Code/Engine/Foundation/Types/<a class="el" href="../../db/dec/_bitflags_8h_source.htm">Bitflags.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../de/d7a/structez_typeless_bitflags.htm">ezTypelessBitflags</a></li>
    <li class="footer">Generated on Tue Jun 8 2021 14:34:09 for ezEngine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1 </li>
  </ul>
</div>
</body>
</html>
