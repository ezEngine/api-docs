<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: ezSharedPtr&lt; T &gt; Class Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 23.12</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('de/dc1/classez_shared_ptr.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="../../da/dd2/classez_shared_ptr-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ezSharedPtr&lt; T &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>A Shared ptr manages a shared object and destroys that object when no one references it anymore. The managed object must derive from <a class="el" href="../../d2/d70/classez_ref_counted.htm" title="Base class for reference counted objects.">ezRefCounted</a>.  
 <a href="../../de/dc1/classez_shared_ptr.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d1/d13/_shared_ptr_8h_source.htm">SharedPtr.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aa618f890cd31ed20b6be7a30e2650fbf"><td class="memItemLeft" align="right" valign="top"><a id="aa618f890cd31ed20b6be7a30e2650fbf"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>EZ_DECLARE_MEM_RELOCATABLE_TYPE</b> ()</td></tr>
<tr class="separator:aa618f890cd31ed20b6be7a30e2650fbf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a59be6ea0dbed6759236f3a12644f3b"><td class="memItemLeft" align="right" valign="top"><a id="a3a59be6ea0dbed6759236f3a12644f3b"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/dc1/classez_shared_ptr.htm#a3a59be6ea0dbed6759236f3a12644f3b">ezSharedPtr</a> ()</td></tr>
<tr class="memdesc:a3a59be6ea0dbed6759236f3a12644f3b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an empty shared ptr. <br /></td></tr>
<tr class="separator:a3a59be6ea0dbed6759236f3a12644f3b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b5a47ef6ccedc9946e77ea4b57f193f"><td class="memTemplParams" colspan="2"><a id="a1b5a47ef6ccedc9946e77ea4b57f193f"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:a1b5a47ef6ccedc9946e77ea4b57f193f"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../de/dc1/classez_shared_ptr.htm#a1b5a47ef6ccedc9946e77ea4b57f193f">ezSharedPtr</a> (const <a class="el" href="../../da/d7c/structez_internal_1_1_new_instance.htm">ezInternal::NewInstance</a>&lt; U &gt; &amp;instance)</td></tr>
<tr class="memdesc:a1b5a47ef6ccedc9946e77ea4b57f193f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a shared ptr from a freshly created instance through EZ_NEW or EZ_DEFAULT_NEW. <br /></td></tr>
<tr class="separator:a1b5a47ef6ccedc9946e77ea4b57f193f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a515378929af17ff4d356edfc20930b70"><td class="memTemplParams" colspan="2"><a id="a515378929af17ff4d356edfc20930b70"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:a515378929af17ff4d356edfc20930b70"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../de/dc1/classez_shared_ptr.htm#a515378929af17ff4d356edfc20930b70">ezSharedPtr</a> (U *pInstance, <a class="el" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a> *pAllocator)</td></tr>
<tr class="memdesc:a515378929af17ff4d356edfc20930b70"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a shared ptr from a pointer and an allocator. The passed allocator will be used to destroy the instance when the shared ptr goes out of scope. <br /></td></tr>
<tr class="separator:a515378929af17ff4d356edfc20930b70"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7336261d3c43fe7fd69e511c7da6c543"><td class="memItemLeft" align="right" valign="top"><a id="a7336261d3c43fe7fd69e511c7da6c543"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/dc1/classez_shared_ptr.htm#a7336261d3c43fe7fd69e511c7da6c543">ezSharedPtr</a> (const <a class="el" href="../../de/dc1/classez_shared_ptr.htm">ezSharedPtr</a>&lt; T &gt; &amp;other)</td></tr>
<tr class="memdesc:a7336261d3c43fe7fd69e511c7da6c543"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy constructs a shared ptr from another. Both will hold a reference to the managed object afterwards. <br /></td></tr>
<tr class="separator:a7336261d3c43fe7fd69e511c7da6c543"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada264edfd0ee350de531c87fff1ca5a7"><td class="memTemplParams" colspan="2"><a id="ada264edfd0ee350de531c87fff1ca5a7"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:ada264edfd0ee350de531c87fff1ca5a7"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../de/dc1/classez_shared_ptr.htm#ada264edfd0ee350de531c87fff1ca5a7">ezSharedPtr</a> (const <a class="el" href="../../de/dc1/classez_shared_ptr.htm">ezSharedPtr</a>&lt; U &gt; &amp;other)</td></tr>
<tr class="memdesc:ada264edfd0ee350de531c87fff1ca5a7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy constructs a shared ptr from another. Both will hold a reference to the managed object afterwards. <br /></td></tr>
<tr class="separator:ada264edfd0ee350de531c87fff1ca5a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a16a6c415ccc88dce1bb9f7a5eba8755e"><td class="memTemplParams" colspan="2"><a id="a16a6c415ccc88dce1bb9f7a5eba8755e"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:a16a6c415ccc88dce1bb9f7a5eba8755e"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../de/dc1/classez_shared_ptr.htm#a16a6c415ccc88dce1bb9f7a5eba8755e">ezSharedPtr</a> (<a class="el" href="../../de/dc1/classez_shared_ptr.htm">ezSharedPtr</a>&lt; U &gt; &amp;&amp;other)</td></tr>
<tr class="memdesc:a16a6c415ccc88dce1bb9f7a5eba8755e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Move constructs a shared ptr from another. The other shared ptr will be empty afterwards. <br /></td></tr>
<tr class="separator:a16a6c415ccc88dce1bb9f7a5eba8755e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d97599e400fc7a7231c53e7ac01e01b"><td class="memTemplParams" colspan="2"><a id="a2d97599e400fc7a7231c53e7ac01e01b"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:a2d97599e400fc7a7231c53e7ac01e01b"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../de/dc1/classez_shared_ptr.htm#a2d97599e400fc7a7231c53e7ac01e01b">ezSharedPtr</a> (<a class="el" href="../../d8/d96/classez_unique_ptr.htm">ezUniquePtr</a>&lt; U &gt; &amp;&amp;other)</td></tr>
<tr class="memdesc:a2d97599e400fc7a7231c53e7ac01e01b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Move constructs a shared ptr from a unique ptr. The unique ptr will be empty afterwards. <br /></td></tr>
<tr class="separator:a2d97599e400fc7a7231c53e7ac01e01b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af1687abb604fae381263a5e54dfd7d8a"><td class="memItemLeft" align="right" valign="top"><a id="af1687abb604fae381263a5e54dfd7d8a"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/dc1/classez_shared_ptr.htm#af1687abb604fae381263a5e54dfd7d8a">ezSharedPtr</a> (std::nullptr_t)</td></tr>
<tr class="memdesc:af1687abb604fae381263a5e54dfd7d8a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialization with nullptr to be able to return nullptr in functions that return shared ptr. <br /></td></tr>
<tr class="separator:af1687abb604fae381263a5e54dfd7d8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc7eeabcc62c42518b16cf80c1f7630e"><td class="memItemLeft" align="right" valign="top"><a id="afc7eeabcc62c42518b16cf80c1f7630e"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/dc1/classez_shared_ptr.htm#afc7eeabcc62c42518b16cf80c1f7630e">~ezSharedPtr</a> ()</td></tr>
<tr class="memdesc:afc7eeabcc62c42518b16cf80c1f7630e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys the managed object using the stored allocator if no one else references it anymore. <br /></td></tr>
<tr class="separator:afc7eeabcc62c42518b16cf80c1f7630e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c790946bd6364960c35d489c0f9e6d2"><td class="memTemplParams" colspan="2"><a id="a9c790946bd6364960c35d489c0f9e6d2"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:a9c790946bd6364960c35d489c0f9e6d2"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="../../de/dc1/classez_shared_ptr.htm">ezSharedPtr</a>&lt; T &gt; &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../de/dc1/classez_shared_ptr.htm#a9c790946bd6364960c35d489c0f9e6d2">operator=</a> (const <a class="el" href="../../da/d7c/structez_internal_1_1_new_instance.htm">ezInternal::NewInstance</a>&lt; U &gt; &amp;instance)</td></tr>
<tr class="memdesc:a9c790946bd6364960c35d489c0f9e6d2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the shared ptr from a freshly created instance through EZ_NEW or EZ_DEFAULT_NEW. <br /></td></tr>
<tr class="separator:a9c790946bd6364960c35d489c0f9e6d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48d12c6c60097d59135318f4add8cabd"><td class="memItemLeft" align="right" valign="top"><a id="a48d12c6c60097d59135318f4add8cabd"></a>
<a class="el" href="../../de/dc1/classez_shared_ptr.htm">ezSharedPtr</a>&lt; T &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/dc1/classez_shared_ptr.htm#a48d12c6c60097d59135318f4add8cabd">operator=</a> (const <a class="el" href="../../de/dc1/classez_shared_ptr.htm">ezSharedPtr</a>&lt; T &gt; &amp;other)</td></tr>
<tr class="memdesc:a48d12c6c60097d59135318f4add8cabd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the shared ptr from another. Both will hold a reference to the managed object afterwards. <br /></td></tr>
<tr class="separator:a48d12c6c60097d59135318f4add8cabd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a899522c81c6794b1fba06a1e883ddee5"><td class="memTemplParams" colspan="2"><a id="a899522c81c6794b1fba06a1e883ddee5"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:a899522c81c6794b1fba06a1e883ddee5"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="../../de/dc1/classez_shared_ptr.htm">ezSharedPtr</a>&lt; T &gt; &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../de/dc1/classez_shared_ptr.htm#a899522c81c6794b1fba06a1e883ddee5">operator=</a> (const <a class="el" href="../../de/dc1/classez_shared_ptr.htm">ezSharedPtr</a>&lt; U &gt; &amp;other)</td></tr>
<tr class="memdesc:a899522c81c6794b1fba06a1e883ddee5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the shared ptr from another. Both will hold a reference to the managed object afterwards. <br /></td></tr>
<tr class="separator:a899522c81c6794b1fba06a1e883ddee5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf64ee023a2cbdad2abbd994f756c768"><td class="memTemplParams" colspan="2"><a id="adf64ee023a2cbdad2abbd994f756c768"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:adf64ee023a2cbdad2abbd994f756c768"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="../../de/dc1/classez_shared_ptr.htm">ezSharedPtr</a>&lt; T &gt; &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../de/dc1/classez_shared_ptr.htm#adf64ee023a2cbdad2abbd994f756c768">operator=</a> (<a class="el" href="../../de/dc1/classez_shared_ptr.htm">ezSharedPtr</a>&lt; U &gt; &amp;&amp;other)</td></tr>
<tr class="memdesc:adf64ee023a2cbdad2abbd994f756c768"><td class="mdescLeft">&#160;</td><td class="mdescRight">Move assigns a shared ptr from another. The other shared ptr will be empty afterwards. <br /></td></tr>
<tr class="separator:adf64ee023a2cbdad2abbd994f756c768"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab8ea37f1b340eaf75c3ba38d08b1ad58"><td class="memTemplParams" colspan="2"><a id="ab8ea37f1b340eaf75c3ba38d08b1ad58"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:ab8ea37f1b340eaf75c3ba38d08b1ad58"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="../../de/dc1/classez_shared_ptr.htm">ezSharedPtr</a>&lt; T &gt; &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../de/dc1/classez_shared_ptr.htm#ab8ea37f1b340eaf75c3ba38d08b1ad58">operator=</a> (<a class="el" href="../../d8/d96/classez_unique_ptr.htm">ezUniquePtr</a>&lt; U &gt; &amp;&amp;other)</td></tr>
<tr class="memdesc:ab8ea37f1b340eaf75c3ba38d08b1ad58"><td class="mdescLeft">&#160;</td><td class="mdescRight">Move assigns a shared ptr from a unique ptr. The unique ptr will be empty afterwards. <br /></td></tr>
<tr class="separator:ab8ea37f1b340eaf75c3ba38d08b1ad58"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3da3d1d086971c0be798f50ed9493b03"><td class="memItemLeft" align="right" valign="top"><a id="a3da3d1d086971c0be798f50ed9493b03"></a>
<a class="el" href="../../de/dc1/classez_shared_ptr.htm">ezSharedPtr</a>&lt; T &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/dc1/classez_shared_ptr.htm#a3da3d1d086971c0be798f50ed9493b03">operator=</a> (std::nullptr_t)</td></tr>
<tr class="memdesc:a3da3d1d086971c0be798f50ed9493b03"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assigns a nullptr to the shared ptr. Same as Reset. <br /></td></tr>
<tr class="separator:a3da3d1d086971c0be798f50ed9493b03"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aedc1d5f14523b793c8d5e53b83a9a45d"><td class="memItemLeft" align="right" valign="top"><a id="aedc1d5f14523b793c8d5e53b83a9a45d"></a>
T *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/dc1/classez_shared_ptr.htm#aedc1d5f14523b793c8d5e53b83a9a45d">Borrow</a> () const</td></tr>
<tr class="memdesc:aedc1d5f14523b793c8d5e53b83a9a45d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Borrows the managed object. The shared ptr stays unmodified. <br /></td></tr>
<tr class="separator:aedc1d5f14523b793c8d5e53b83a9a45d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a42e678e946ad5211bdb95bd4888d5da2"><td class="memItemLeft" align="right" valign="top"><a id="a42e678e946ad5211bdb95bd4888d5da2"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/dc1/classez_shared_ptr.htm#a42e678e946ad5211bdb95bd4888d5da2">Clear</a> ()</td></tr>
<tr class="memdesc:a42e678e946ad5211bdb95bd4888d5da2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys the managed object if no one else references it anymore and resets the shared ptr. <br /></td></tr>
<tr class="separator:a42e678e946ad5211bdb95bd4888d5da2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc907e6317fbd5e191ed23234d47db74"><td class="memItemLeft" align="right" valign="top"><a id="acc907e6317fbd5e191ed23234d47db74"></a>
T &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/dc1/classez_shared_ptr.htm#acc907e6317fbd5e191ed23234d47db74">operator*</a> () const</td></tr>
<tr class="memdesc:acc907e6317fbd5e191ed23234d47db74"><td class="mdescLeft">&#160;</td><td class="mdescRight">Provides access to the managed object. <br /></td></tr>
<tr class="separator:acc907e6317fbd5e191ed23234d47db74"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af3376c3fc97cf9178576df9a84d3ddde"><td class="memItemLeft" align="right" valign="top"><a id="af3376c3fc97cf9178576df9a84d3ddde"></a>
T *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/dc1/classez_shared_ptr.htm#af3376c3fc97cf9178576df9a84d3ddde">operator-&gt;</a> () const</td></tr>
<tr class="memdesc:af3376c3fc97cf9178576df9a84d3ddde"><td class="mdescLeft">&#160;</td><td class="mdescRight">Provides access to the managed object. <br /></td></tr>
<tr class="separator:af3376c3fc97cf9178576df9a84d3ddde"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8d841fd1068614fecf2ce9a1b71be74"><td class="memItemLeft" align="right" valign="top"><a id="ad8d841fd1068614fecf2ce9a1b71be74"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/dc1/classez_shared_ptr.htm#ad8d841fd1068614fecf2ce9a1b71be74">operator const T *</a> () const</td></tr>
<tr class="memdesc:ad8d841fd1068614fecf2ce9a1b71be74"><td class="mdescLeft">&#160;</td><td class="mdescRight">Provides access to the managed object. <br /></td></tr>
<tr class="separator:ad8d841fd1068614fecf2ce9a1b71be74"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa038e5ab117e976d5c562f84b84a08f"><td class="memItemLeft" align="right" valign="top"><a id="afa038e5ab117e976d5c562f84b84a08f"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/dc1/classez_shared_ptr.htm#afa038e5ab117e976d5c562f84b84a08f">operator T*</a> ()</td></tr>
<tr class="memdesc:afa038e5ab117e976d5c562f84b84a08f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Provides access to the managed object. <br /></td></tr>
<tr class="separator:afa038e5ab117e976d5c562f84b84a08f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a8c1b7fa1b49b4cac9cdfc73de24f7c"><td class="memItemLeft" align="right" valign="top"><a id="a0a8c1b7fa1b49b4cac9cdfc73de24f7c"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/dc1/classez_shared_ptr.htm#a0a8c1b7fa1b49b4cac9cdfc73de24f7c">operator bool</a> () const</td></tr>
<tr class="memdesc:a0a8c1b7fa1b49b4cac9cdfc73de24f7c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if there is managed object and false if the shared ptr is empty. <br /></td></tr>
<tr class="separator:a0a8c1b7fa1b49b4cac9cdfc73de24f7c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a181acfde7526beb65f8d594830ae71"><td class="memItemLeft" align="right" valign="top"><a id="a5a181acfde7526beb65f8d594830ae71"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/dc1/classez_shared_ptr.htm#a5a181acfde7526beb65f8d594830ae71">operator==</a> (const <a class="el" href="../../de/dc1/classez_shared_ptr.htm">ezSharedPtr</a>&lt; T &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:a5a181acfde7526beb65f8d594830ae71"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares the shared ptr against another shared ptr. <br /></td></tr>
<tr class="separator:a5a181acfde7526beb65f8d594830ae71"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad696e1325e1b24d99212d5318708c127"><td class="memItemLeft" align="right" valign="top"><a id="ad696e1325e1b24d99212d5318708c127"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator!=</b> (const <a class="el" href="../../de/dc1/classez_shared_ptr.htm">ezSharedPtr</a>&lt; T &gt; &amp;rhs) const</td></tr>
<tr class="separator:ad696e1325e1b24d99212d5318708c127"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7246704ef8e1e70b15de1a7fed548d94"><td class="memItemLeft" align="right" valign="top"><a id="a7246704ef8e1e70b15de1a7fed548d94"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&lt;</b> (const <a class="el" href="../../de/dc1/classez_shared_ptr.htm">ezSharedPtr</a>&lt; T &gt; &amp;rhs) const</td></tr>
<tr class="separator:a7246704ef8e1e70b15de1a7fed548d94"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aabe40af4b0e16b6b8c6a71c715d9c8c3"><td class="memItemLeft" align="right" valign="top"><a id="aabe40af4b0e16b6b8c6a71c715d9c8c3"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&lt;=</b> (const <a class="el" href="../../de/dc1/classez_shared_ptr.htm">ezSharedPtr</a>&lt; T &gt; &amp;rhs) const</td></tr>
<tr class="separator:aabe40af4b0e16b6b8c6a71c715d9c8c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab67fc80a76898bd15bbf8a45a4aa5b9d"><td class="memItemLeft" align="right" valign="top"><a id="ab67fc80a76898bd15bbf8a45a4aa5b9d"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&gt;</b> (const <a class="el" href="../../de/dc1/classez_shared_ptr.htm">ezSharedPtr</a>&lt; T &gt; &amp;rhs) const</td></tr>
<tr class="separator:ab67fc80a76898bd15bbf8a45a4aa5b9d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6638c702391632fb013db78265a0e8e"><td class="memItemLeft" align="right" valign="top"><a id="af6638c702391632fb013db78265a0e8e"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&gt;=</b> (const <a class="el" href="../../de/dc1/classez_shared_ptr.htm">ezSharedPtr</a>&lt; T &gt; &amp;rhs) const</td></tr>
<tr class="separator:af6638c702391632fb013db78265a0e8e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d65a1ae6a8b686cce672d8467d35ae9"><td class="memItemLeft" align="right" valign="top"><a id="a9d65a1ae6a8b686cce672d8467d35ae9"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../de/dc1/classez_shared_ptr.htm#a9d65a1ae6a8b686cce672d8467d35ae9">operator==</a> (std::nullptr_t) const</td></tr>
<tr class="memdesc:a9d65a1ae6a8b686cce672d8467d35ae9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares the shared ptr against nullptr. <br /></td></tr>
<tr class="separator:a9d65a1ae6a8b686cce672d8467d35ae9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae0996d22cc8f82fb0ed6ba370ff90bad"><td class="memItemLeft" align="right" valign="top"><a id="ae0996d22cc8f82fb0ed6ba370ff90bad"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator!=</b> (std::nullptr_t) const</td></tr>
<tr class="separator:ae0996d22cc8f82fb0ed6ba370ff90bad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e9cf6ba457d9bf153cf8f0a6db67e3f"><td class="memItemLeft" align="right" valign="top"><a id="a1e9cf6ba457d9bf153cf8f0a6db67e3f"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&lt;</b> (std::nullptr_t) const</td></tr>
<tr class="separator:a1e9cf6ba457d9bf153cf8f0a6db67e3f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaececc046e5826b473cc4a6c485006fe"><td class="memItemLeft" align="right" valign="top"><a id="aaececc046e5826b473cc4a6c485006fe"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&lt;=</b> (std::nullptr_t) const</td></tr>
<tr class="separator:aaececc046e5826b473cc4a6c485006fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac50da0a59d1972d98a49528f31eca2a5"><td class="memItemLeft" align="right" valign="top"><a id="ac50da0a59d1972d98a49528f31eca2a5"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&gt;</b> (std::nullptr_t) const</td></tr>
<tr class="separator:ac50da0a59d1972d98a49528f31eca2a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed17f00be4c8a3b66de0bdeb20e52a73"><td class="memItemLeft" align="right" valign="top"><a id="aed17f00be4c8a3b66de0bdeb20e52a73"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&gt;=</b> (std::nullptr_t) const</td></tr>
<tr class="separator:aed17f00be4c8a3b66de0bdeb20e52a73"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abcb2f95e078e37082ddeb72e4a1dfecd"><td class="memTemplParams" colspan="2">template&lt;typename DERIVED &gt; </td></tr>
<tr class="memitem:abcb2f95e078e37082ddeb72e4a1dfecd"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="../../de/dc1/classez_shared_ptr.htm">ezSharedPtr</a>&lt; DERIVED &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../de/dc1/classez_shared_ptr.htm#abcb2f95e078e37082ddeb72e4a1dfecd">Downcast</a> () const</td></tr>
<tr class="memdesc:abcb2f95e078e37082ddeb72e4a1dfecd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a copy of this, as an ezSharedPtr&lt;DERIVED&gt;. Downcasts the stored pointer (using static_cast).  <a href="../../de/dc1/classez_shared_ptr.htm#abcb2f95e078e37082ddeb72e4a1dfecd">More...</a><br /></td></tr>
<tr class="separator:abcb2f95e078e37082ddeb72e4a1dfecd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1f410484af44a3a9f9e4ad426e3a8f30"><td class="memTemplParams" colspan="2"><a id="a1f410484af44a3a9f9e4ad426e3a8f30"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:a1f410484af44a3a9f9e4ad426e3a8f30"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE&#160;</td><td class="memTemplItemRight" valign="bottom"><b>ezSharedPtr</b> (const <a class="el" href="../../da/d7c/structez_internal_1_1_new_instance.htm">ezInternal::NewInstance</a>&lt; U &gt; &amp;instance)</td></tr>
<tr class="separator:a1f410484af44a3a9f9e4ad426e3a8f30"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8377bdf9600f6b24bc27e83f6a0c059"><td class="memTemplParams" colspan="2"><a id="ad8377bdf9600f6b24bc27e83f6a0c059"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:ad8377bdf9600f6b24bc27e83f6a0c059"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE&#160;</td><td class="memTemplItemRight" valign="bottom"><b>ezSharedPtr</b> (U *pInstance, <a class="el" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a> *pAllocator)</td></tr>
<tr class="separator:ad8377bdf9600f6b24bc27e83f6a0c059"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa813eebb4c3fe237dc6f5e5374c93a3e"><td class="memTemplParams" colspan="2"><a id="aa813eebb4c3fe237dc6f5e5374c93a3e"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:aa813eebb4c3fe237dc6f5e5374c93a3e"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE&#160;</td><td class="memTemplItemRight" valign="bottom"><b>ezSharedPtr</b> (const <a class="el" href="../../de/dc1/classez_shared_ptr.htm">ezSharedPtr</a>&lt; U &gt; &amp;other)</td></tr>
<tr class="separator:aa813eebb4c3fe237dc6f5e5374c93a3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa8575f35d323cd32621e98fc184577e4"><td class="memTemplParams" colspan="2"><a id="aa8575f35d323cd32621e98fc184577e4"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:aa8575f35d323cd32621e98fc184577e4"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE&#160;</td><td class="memTemplItemRight" valign="bottom"><b>ezSharedPtr</b> (<a class="el" href="../../de/dc1/classez_shared_ptr.htm">ezSharedPtr</a>&lt; U &gt; &amp;&amp;other)</td></tr>
<tr class="separator:aa8575f35d323cd32621e98fc184577e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a788e4555b340a46dfef816c86aed31"><td class="memTemplParams" colspan="2"><a id="a8a788e4555b340a46dfef816c86aed31"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:a8a788e4555b340a46dfef816c86aed31"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE&#160;</td><td class="memTemplItemRight" valign="bottom"><b>ezSharedPtr</b> (<a class="el" href="../../d8/d96/classez_unique_ptr.htm">ezUniquePtr</a>&lt; U &gt; &amp;&amp;other)</td></tr>
<tr class="separator:a8a788e4555b340a46dfef816c86aed31"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8e9c7e7ab4a49c0d6132756c53ea27b"><td class="memTemplParams" colspan="2"><a id="ad8e9c7e7ab4a49c0d6132756c53ea27b"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:ad8e9c7e7ab4a49c0d6132756c53ea27b"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE <a class="el" href="../../de/dc1/classez_shared_ptr.htm">ezSharedPtr</a>&lt; T &gt; &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="../../da/d7c/structez_internal_1_1_new_instance.htm">ezInternal::NewInstance</a>&lt; U &gt; &amp;instance)</td></tr>
<tr class="separator:ad8e9c7e7ab4a49c0d6132756c53ea27b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9f91b45c14b268f7222803eb50e4021"><td class="memTemplParams" colspan="2"><a id="ad9f91b45c14b268f7222803eb50e4021"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:ad9f91b45c14b268f7222803eb50e4021"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE <a class="el" href="../../de/dc1/classez_shared_ptr.htm">ezSharedPtr</a>&lt; T &gt; &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="../../de/dc1/classez_shared_ptr.htm">ezSharedPtr</a>&lt; U &gt; &amp;other)</td></tr>
<tr class="separator:ad9f91b45c14b268f7222803eb50e4021"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b50f093d48f2563a74e1271409521c7"><td class="memTemplParams" colspan="2"><a id="a8b50f093d48f2563a74e1271409521c7"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:a8b50f093d48f2563a74e1271409521c7"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE <a class="el" href="../../de/dc1/classez_shared_ptr.htm">ezSharedPtr</a>&lt; T &gt; &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>operator=</b> (<a class="el" href="../../de/dc1/classez_shared_ptr.htm">ezSharedPtr</a>&lt; U &gt; &amp;&amp;other)</td></tr>
<tr class="separator:a8b50f093d48f2563a74e1271409521c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a564fd9b7c991cb0818940fc0855dc690"><td class="memTemplParams" colspan="2"><a id="a564fd9b7c991cb0818940fc0855dc690"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:a564fd9b7c991cb0818940fc0855dc690"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE <a class="el" href="../../de/dc1/classez_shared_ptr.htm">ezSharedPtr</a>&lt; T &gt; &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>operator=</b> (<a class="el" href="../../d8/d96/classez_unique_ptr.htm">ezUniquePtr</a>&lt; U &gt; &amp;&amp;other)</td></tr>
<tr class="separator:a564fd9b7c991cb0818940fc0855dc690"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename T&gt;<br />
class ezSharedPtr&lt; T &gt;</h3>

<p>A Shared ptr manages a shared object and destroys that object when no one references it anymore. The managed object must derive from <a class="el" href="../../d2/d70/classez_ref_counted.htm" title="Base class for reference counted objects.">ezRefCounted</a>. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="abcb2f95e078e37082ddeb72e4a1dfecd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abcb2f95e078e37082ddeb72e4a1dfecd">&#9670;&nbsp;</a></span>Downcast()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename T &gt; </div>
<div class="memtemplate">
template&lt;typename DERIVED &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../de/dc1/classez_shared_ptr.htm">ezSharedPtr</a>&lt;DERIVED&gt; <a class="el" href="../../de/dc1/classez_shared_ptr.htm">ezSharedPtr</a>&lt; T &gt;::Downcast </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns a copy of this, as an ezSharedPtr&lt;DERIVED&gt;. Downcasts the stored pointer (using static_cast). </p>
<p>Does not check whether the cast would be valid, that is all your responsibility. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Types/<a class="el" href="../../d1/d13/_shared_ptr_8h_source.htm">SharedPtr.h</a></li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Types/Implementation/<a class="el" href="../../df/dc1/_shared_ptr__inl_8h_source.htm">SharedPtr_inl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../de/dc1/classez_shared_ptr.htm">ezSharedPtr</a></li>
    <li class="footer">Generated on Fri Dec 22 2023 20:43:16 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
