<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Math/Plane.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 25.03</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d6/dbf/_plane_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Plane.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;Foundation/Math/Vec3.h&gt;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;Foundation/Math/Vec4.h&gt;</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160; </div>
<div class="line"><a name="l00007"></a><span class="lineno"><a class="line" href="../../db/d9e/structez_position_on_plane.htm">    7</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../db/d9e/structez_position_on_plane.htm">ezPositionOnPlane</a></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;{</div>
<div class="line"><a name="l00009"></a><span class="lineno"><a class="line" href="../../db/d9e/structez_position_on_plane.htm#a377e6d93106db3d72713f119abba493a">    9</a></span>&#160;  <span class="keyword">enum</span> <a class="code" href="../../db/d9e/structez_position_on_plane.htm#a377e6d93106db3d72713f119abba493a">Enum</a></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;  {</div>
<div class="line"><a name="l00011"></a><span class="lineno"><a class="line" href="../../db/d9e/structez_position_on_plane.htm#a377e6d93106db3d72713f119abba493aaf7fd432be55b3b305215efa02f3d74df">   11</a></span>&#160;    <a class="code" href="../../db/d9e/structez_position_on_plane.htm#a377e6d93106db3d72713f119abba493aaf7fd432be55b3b305215efa02f3d74df">Back</a>,     </div>
<div class="line"><a name="l00012"></a><span class="lineno"><a class="line" href="../../db/d9e/structez_position_on_plane.htm#a377e6d93106db3d72713f119abba493aaebe326c76bceb98d6abb19c3a5d78069">   12</a></span>&#160;    <a class="code" href="../../db/d9e/structez_position_on_plane.htm#a377e6d93106db3d72713f119abba493aaebe326c76bceb98d6abb19c3a5d78069">Front</a>,    </div>
<div class="line"><a name="l00013"></a><span class="lineno"><a class="line" href="../../db/d9e/structez_position_on_plane.htm#a377e6d93106db3d72713f119abba493aab0d95c5104ddc7fcbc98328507f19919">   13</a></span>&#160;    <a class="code" href="../../db/d9e/structez_position_on_plane.htm#a377e6d93106db3d72713f119abba493aab0d95c5104ddc7fcbc98328507f19919">OnPlane</a>,  </div>
<div class="line"><a name="l00014"></a><span class="lineno"><a class="line" href="../../db/d9e/structez_position_on_plane.htm#a377e6d93106db3d72713f119abba493aad02f359204ea0a13cb95b9adda945892">   14</a></span>&#160;    <a class="code" href="../../db/d9e/structez_position_on_plane.htm#a377e6d93106db3d72713f119abba493aad02f359204ea0a13cb95b9adda945892">Spanning</a>, </div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;  };</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;};</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160; </div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">struct </span><a class="code" href="../../d5/d8d/structez_plane_template.htm">ezPlaneTemplate</a></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;{</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;  <span class="comment">// Means this object can be copied using memcpy instead of copy construction.</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;  EZ_DECLARE_POD_TYPE();</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160; </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;  <span class="keyword">using</span> ComponentType = Type;</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160; </div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  <span class="comment">// *** Data ***</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;  <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> m_vNormal;</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  Type m_fNegDistance;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160; </div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160; </div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  <span class="comment">// *** Constructors ***</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;  <a class="code" href="../../d5/d8d/structez_plane_template.htm#a1de3da403b933d43433a758289b7a858">ezPlaneTemplate</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160; </div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  [[nodiscard]] <span class="keyword">static</span> <a class="code" href="../../d5/d8d/structez_plane_template.htm">ezPlaneTemplate&lt;Type&gt;</a> <a class="code" href="../../d5/d8d/structez_plane_template.htm#af69ba68dd8563d28b8c59da733e6b9b2">MakeInvalid</a>();</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160; </div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  [[nodiscard]] <span class="keyword">static</span> <a class="code" href="../../d5/d8d/structez_plane_template.htm">ezPlaneTemplate&lt;Type&gt;</a> <a class="code" href="../../d5/d8d/structez_plane_template.htm#ac5ffef5e5462391813003ce6084aab6a">MakeFromNormalAndPoint</a>(<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vNormal, <span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vPointOnPlane);</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160; </div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  [[nodiscard]] <span class="keyword">static</span> <a class="code" href="../../d5/d8d/structez_plane_template.htm">ezPlaneTemplate&lt;Type&gt;</a> <a class="code" href="../../d5/d8d/structez_plane_template.htm#afb5008b67f62f03c2dbd5e158db09b18">MakeFromPoints</a>(<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; v1, <span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; v2, <span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; v3);</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160; </div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="preprocessor">#if EZ_ENABLED(EZ_MATH_CHECK_FOR_NAN)</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  <span class="keywordtype">void</span> AssertNotNaN()<span class="keyword"> const</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    EZ_ASSERT_ALWAYS(!<a class="code" href="../../d5/d8d/structez_plane_template.htm#ab552082d9b537a4d3f52f12cec194cc0">IsNaN</a>(), <span class="stringliteral">&quot;This object contains NaN values. This can happen when you forgot to initialize it before using it. Please check that &quot;</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;                               <span class="stringliteral">&quot;all code-paths properly initialize this object.&quot;</span>);</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;  }</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160; </div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  <a class="code" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template&lt;Type&gt;</a> <a class="code" href="../../d5/d8d/structez_plane_template.htm#aa4dfcf604b449b67d5d50f34fb5b204c">GetAsVec4</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160; </div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;  <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code" href="../../d5/d8d/structez_plane_template.htm#a82c740662e228339a4b9ee28c9d4dce0">SetFromPoints</a>(<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; v1, <span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; v2, <span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; v3); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160; </div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;  <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code" href="../../d5/d8d/structez_plane_template.htm#a82c740662e228339a4b9ee28c9d4dce0">SetFromPoints</a>(<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>* <span class="keyword">const</span> pVertices); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160; </div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code" href="../../d5/d8d/structez_plane_template.htm#a82c740662e228339a4b9ee28c9d4dce0">SetFromPoints</a>(<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>* <span class="keyword">const</span> pVertices, ezUInt32 uiMaxVertices); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160; </div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code" href="../../d5/d8d/structez_plane_template.htm#a87c0f6bc684fca6c1736ded74b185263">SetFromDirections</a>(<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vTangent1, <span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vTangent2, <span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vPointOnPlane); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160; </div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;  <span class="comment">// *** Distance and Position ***</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;  Type <a class="code" href="../../d5/d8d/structez_plane_template.htm#a9e8f1c0e5f0ec6d086026ac817d3a72e">GetDistanceTo</a>(<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vPoint) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160; </div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;  Type <a class="code" href="../../d5/d8d/structez_plane_template.htm#a4f31e60fb1708add1aebcbbabfcdaa69">GetMinimumDistanceTo</a>(<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>* pPoints, ezUInt32 uiNumPoints, ezUInt32 uiStride = <span class="keyword">sizeof</span>(<a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>)) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160; </div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;  Type <a class="code" href="../../d5/d8d/structez_plane_template.htm#a4f31e60fb1708add1aebcbbabfcdaa69">GetMinimumDistanceTo</a>(<span class="keyword">const</span> <a class="code" href="../../d6/d25/classez_bounding_box_template.htm">ezBoundingBoxTemplate&lt;Type&gt;</a>&amp; box) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160; </div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  Type <a class="code" href="../../d5/d8d/structez_plane_template.htm#add9e22a79e32c96205fdc1d45c95ecbe">GetMaximumDistanceTo</a>(<span class="keyword">const</span> <a class="code" href="../../d6/d25/classez_bounding_box_template.htm">ezBoundingBoxTemplate&lt;Type&gt;</a>&amp; box) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160; </div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d5/d8d/structez_plane_template.htm#adcf9fc9a41b04ab68a2f0dbe97096887">GetMinMaxDistanceTo</a>(Type&amp; out_fMin, Type&amp; out_fMax, <span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>* pPoints, ezUInt32 uiNumPoints, ezUInt32 uiStride = <span class="keyword">sizeof</span>(<a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>)) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160; </div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;  <a class="code" href="../../db/d9e/structez_position_on_plane.htm#a377e6d93106db3d72713f119abba493a">ezPositionOnPlane::Enum</a> <a class="code" href="../../d5/d8d/structez_plane_template.htm#aea8e5e369188e2e5fd5ce172caeb5ec2">GetPointPosition</a>(<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vPoint) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160; </div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;  <a class="code" href="../../db/d9e/structez_position_on_plane.htm#a377e6d93106db3d72713f119abba493a">ezPositionOnPlane::Enum</a> <a class="code" href="../../d5/d8d/structez_plane_template.htm#aea8e5e369188e2e5fd5ce172caeb5ec2">GetPointPosition</a>(<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vPoint, Type fPlaneHalfWidth) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160; </div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;  <a class="code" href="../../db/d9e/structez_position_on_plane.htm#a377e6d93106db3d72713f119abba493a">ezPositionOnPlane::Enum</a> <a class="code" href="../../d5/d8d/structez_plane_template.htm#a61bce56755f1ab47838afa42194698ff">GetObjectPosition</a>(<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>* <span class="keyword">const</span> pPoints, ezUInt32 uiVertices) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160; </div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;  <a class="code" href="../../db/d9e/structez_position_on_plane.htm#a377e6d93106db3d72713f119abba493a">ezPositionOnPlane::Enum</a> <a class="code" href="../../d5/d8d/structez_plane_template.htm#a61bce56755f1ab47838afa42194698ff">GetObjectPosition</a>(<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>* <span class="keyword">const</span> pPoints, ezUInt32 uiVertices, Type fPlaneHalfWidth) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160; </div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;  <a class="code" href="../../db/d9e/structez_position_on_plane.htm#a377e6d93106db3d72713f119abba493a">ezPositionOnPlane::Enum</a> <a class="code" href="../../d5/d8d/structez_plane_template.htm#a61bce56755f1ab47838afa42194698ff">GetObjectPosition</a>(<span class="keyword">const</span> <a class="code" href="../../d2/d50/classez_bounding_sphere_template.htm">ezBoundingSphereTemplate&lt;Type&gt;</a>&amp; sphere) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160; </div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;  <a class="code" href="../../db/d9e/structez_position_on_plane.htm#a377e6d93106db3d72713f119abba493a">ezPositionOnPlane::Enum</a> <a class="code" href="../../d5/d8d/structez_plane_template.htm#a61bce56755f1ab47838afa42194698ff">GetObjectPosition</a>(<span class="keyword">const</span> <a class="code" href="../../d6/d25/classez_bounding_box_template.htm">ezBoundingBoxTemplate&lt;Type&gt;</a>&amp; box) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160; </div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;  [[nodiscard]] <span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> <a class="code" href="../../d5/d8d/structez_plane_template.htm#af96ba78aa55f0a7b1d4fc7f60f588319">ProjectOntoPlane</a>(<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vPoint) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160; </div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;  [[nodiscard]] <span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> <a class="code" href="../../d5/d8d/structez_plane_template.htm#aaa1fc827595fcd488d6165f54baba75d">Mirror</a>(<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vPoint) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160; </div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> <a class="code" href="../../d5/d8d/structez_plane_template.htm#a3ed189801d0cbdc6563cb6b3efd80169">GetCoplanarDirection</a>(<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vDirection) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160; </div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;  <span class="comment">// *** Comparisons ***</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d5/d8d/structez_plane_template.htm#a28ed715903e01728f3c7d414019a5aa4">IsIdentical</a>(<span class="keyword">const</span> <a class="code" href="../../d5/d8d/structez_plane_template.htm">ezPlaneTemplate&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160; </div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d5/d8d/structez_plane_template.htm#ac09e6e736ffe4763aaf75c13bc7ad87b">IsEqual</a>(<span class="keyword">const</span> <a class="code" href="../../d5/d8d/structez_plane_template.htm">ezPlaneTemplate&lt;Type&gt;</a>&amp; rhs, Type fEpsilon = ezMath::DefaultEpsilon&lt;Type&gt;()) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160; </div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d5/d8d/structez_plane_template.htm#a6c1a787b6d5994e283150fb7c98fb27a">IsValid</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160; </div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d5/d8d/structez_plane_template.htm#ab552082d9b537a4d3f52f12cec194cc0">IsNaN</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160; </div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d5/d8d/structez_plane_template.htm#ab61816663e35211f64eff20ec0561155">IsFinite</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160; </div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;  <span class="comment">// *** Modifications ***</span></div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d5/d8d/structez_plane_template.htm#add9700307efa3f30fbd89feb7904b86f">Transform</a>(<span class="keyword">const</span> <a class="code" href="../../db/daf/classez_mat3_template.htm">ezMat3Template&lt;Type&gt;</a>&amp; m); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160; </div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d5/d8d/structez_plane_template.htm#add9700307efa3f30fbd89feb7904b86f">Transform</a>(<span class="keyword">const</span> <a class="code" href="../../d7/d9b/classez_mat4_template.htm">ezMat4Template&lt;Type&gt;</a>&amp; m); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160; </div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d5/d8d/structez_plane_template.htm#ac0a1a557cb5f996bfda7d145acd23e88">Flip</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160; </div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d5/d8d/structez_plane_template.htm#a433d69109382ca8fb062bb678dae5a9e">FlipIfNecessary</a>(<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vPoint, <span class="keywordtype">bool</span> bPlaneShouldFacePoint = <span class="keyword">true</span>); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160; </div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;  <span class="comment">// *** Intersection Tests ***</span></div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;  [[nodiscard]] <span class="keywordtype">bool</span> <a class="code" href="../../d5/d8d/structez_plane_template.htm#a8f634a506e232c58c1c41f1f4c5cba9a">GetRayIntersection</a>(<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vRayStartPos, <span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vRayDir, Type* out_pIntersectionDinstance = <span class="keyword">nullptr</span>, <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>* out_pIntersection = <span class="keyword">nullptr</span>) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160; </div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;  [[nodiscard]] <span class="keywordtype">bool</span> <a class="code" href="../../d5/d8d/structez_plane_template.htm#afcd7e99d95506a12d1b17a83461208ac">GetRayIntersectionBiDirectional</a>(<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vRayStartPos, <span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vRayDir, Type* out_pIntersectionDistance = <span class="keyword">nullptr</span>, <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>* out_pIntersection = <span class="keyword">nullptr</span>) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160; </div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;  [[nodiscard]] <span class="keywordtype">bool</span> <a class="code" href="../../d5/d8d/structez_plane_template.htm#ab3bcce23bd81f23551ae219ca2bc2644">GetLineSegmentIntersection</a>(<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vLineStartPos, <span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vLineEndPos, Type* out_pHitFraction = <span class="keyword">nullptr</span>, <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>* out_pIntersection = <span class="keyword">nullptr</span>) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160; </div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;  <span class="keyword">static</span> <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code" href="../../d5/d8d/structez_plane_template.htm#a77957ecb2ac5c2be8af8d4e77ce27607">GetPlanesIntersectionPoint</a>(<span class="keyword">const</span> <a class="code" href="../../d5/d8d/structez_plane_template.htm">ezPlaneTemplate&lt;Type&gt;</a>&amp; p0, <span class="keyword">const</span> <a class="code" href="../../d5/d8d/structez_plane_template.htm">ezPlaneTemplate&lt;Type&gt;</a>&amp; p1, <span class="keyword">const</span> <a class="code" href="../../d5/d8d/structez_plane_template.htm">ezPlaneTemplate&lt;Type&gt;</a>&amp; p2, <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; out_vResult); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160; </div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;  <span class="comment">// *** Helper Functions ***</span></div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;  <span class="keyword">static</span> <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code" href="../../d5/d8d/structez_plane_template.htm#a1a281cd486cd85c999af6d94cfbbd3db">FindSupportPoints</a>(<span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>* <span class="keyword">const</span> pVertices, ezInt32 iMaxVertices, ezInt32&amp; out_i1, ezInt32&amp; out_i2, ezInt32&amp; out_i3); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;};</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160; </div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="keywordtype">bool</span> operator==(<span class="keyword">const</span> <a class="code" href="../../d5/d8d/structez_plane_template.htm">ezPlaneTemplate&lt;Type&gt;</a>&amp; lhs, <span class="keyword">const</span> <a class="code" href="../../d5/d8d/structez_plane_template.htm">ezPlaneTemplate&lt;Type&gt;</a>&amp; rhs); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160; </div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="keywordtype">bool</span> operator!=(<span class="keyword">const</span> <a class="code" href="../../d5/d8d/structez_plane_template.htm">ezPlaneTemplate&lt;Type&gt;</a>&amp; lhs, <span class="keyword">const</span> <a class="code" href="../../d5/d8d/structez_plane_template.htm">ezPlaneTemplate&lt;Type&gt;</a>&amp; rhs); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160; </div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="preprocessor">#include &lt;Foundation/Math/Implementation/Plane_inl.h&gt;</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="astructez_position_on_plane_htm_a377e6d93106db3d72713f119abba493aab0d95c5104ddc7fcbc98328507f19919"><div class="ttname"><a href="../../db/d9e/structez_position_on_plane.htm#a377e6d93106db3d72713f119abba493aab0d95c5104ddc7fcbc98328507f19919">ezPositionOnPlane::OnPlane</a></div><div class="ttdeci">@ OnPlane</div><div class="ttdoc">Something is lying completely on a plane (all points)</div><div class="ttdef"><b>Definition:</b> Plane.h:13</div></div>
<div class="ttc" id="astructez_plane_template_htm_a8f634a506e232c58c1c41f1f4c5cba9a"><div class="ttname"><a href="../../d5/d8d/structez_plane_template.htm#a8f634a506e232c58c1c41f1f4c5cba9a">ezPlaneTemplate::GetRayIntersection</a></div><div class="ttdeci">bool GetRayIntersection(const ezVec3Template&lt; Type &gt; &amp;vRayStartPos, const ezVec3Template&lt; Type &gt; &amp;vRayDir, Type *out_pIntersectionDinstance=nullptr, ezVec3Template&lt; Type &gt; *out_pIntersection=nullptr) const</div><div class="ttdoc">Returns true, if the ray hit the plane. The intersection time describes at which multiple of the ray ...</div><div class="ttdef"><b>Definition:</b> Plane_inl.h:368</div></div>
<div class="ttc" id="astructez_result_htm"><div class="ttname"><a href="../../d4/da9/structez_result.htm">ezResult</a></div><div class="ttdoc">Default enum for returning failure or success, instead of using a bool.</div><div class="ttdef"><b>Definition:</b> Types.h:53</div></div>
<div class="ttc" id="astructez_plane_template_htm_ac5ffef5e5462391813003ce6084aab6a"><div class="ttname"><a href="../../d5/d8d/structez_plane_template.htm#ac5ffef5e5462391813003ce6084aab6a">ezPlaneTemplate::MakeFromNormalAndPoint</a></div><div class="ttdeci">static ezPlaneTemplate&lt; Type &gt; MakeFromNormalAndPoint(const ezVec3Template&lt; Type &gt; &amp;vNormal, const ezVec3Template&lt; Type &gt; &amp;vPointOnPlane)</div><div class="ttdoc">Creates a plane from a normal and a point on the plane.</div><div class="ttdef"><b>Definition:</b> Plane_inl.h:26</div></div>
<div class="ttc" id="astructez_plane_template_htm_a87c0f6bc684fca6c1736ded74b185263"><div class="ttname"><a href="../../d5/d8d/structez_plane_template.htm#a87c0f6bc684fca6c1736ded74b185263">ezPlaneTemplate::SetFromDirections</a></div><div class="ttdeci">ezResult SetFromDirections(const ezVec3Template&lt; Type &gt; &amp;vTangent1, const ezVec3Template&lt; Type &gt; &amp;vTangent2, const ezVec3Template&lt; Type &gt; &amp;vPointOnPlane)</div><div class="ttdoc">Creates a plane from two direction vectors that span the plane, and one point on it.</div><div class="ttdef"><b>Definition:</b> Plane_inl.h:73</div></div>
<div class="ttc" id="aclassez_bounding_sphere_template_htm"><div class="ttname"><a href="../../d2/d50/classez_bounding_sphere_template.htm">ezBoundingSphereTemplate</a></div><div class="ttdoc">An implementation of a bounding sphere.</div><div class="ttdef"><b>Definition:</b> BoundingSphere.h:10</div></div>
<div class="ttc" id="astructez_plane_template_htm_aaa1fc827595fcd488d6165f54baba75d"><div class="ttname"><a href="../../d5/d8d/structez_plane_template.htm#aaa1fc827595fcd488d6165f54baba75d">ezPlaneTemplate::Mirror</a></div><div class="ttdeci">const ezVec3Template&lt; Type &gt; Mirror(const ezVec3Template&lt; Type &gt; &amp;vPoint) const</div><div class="ttdoc">Returns the mirrored point. E.g. on the other side of the plane, at the same distance.</div><div class="ttdef"><b>Definition:</b> Plane_inl.h:173</div></div>
<div class="ttc" id="astructez_plane_template_htm_a1a281cd486cd85c999af6d94cfbbd3db"><div class="ttname"><a href="../../d5/d8d/structez_plane_template.htm#a1a281cd486cd85c999af6d94cfbbd3db">ezPlaneTemplate::FindSupportPoints</a></div><div class="ttdeci">static ezResult FindSupportPoints(const ezVec3Template&lt; Type &gt; *const pVertices, ezInt32 iMaxVertices, ezInt32 &amp;out_i1, ezInt32 &amp;out_i2, ezInt32 &amp;out_i3)</div><div class="ttdoc">Returns three points from an unreliable set of points, that reliably form a plane....</div><div class="ttdef"><b>Definition:</b> Plane_inl.h:259</div></div>
<div class="ttc" id="astructez_position_on_plane_htm_a377e6d93106db3d72713f119abba493aaf7fd432be55b3b305215efa02f3d74df"><div class="ttname"><a href="../../db/d9e/structez_position_on_plane.htm#a377e6d93106db3d72713f119abba493aaf7fd432be55b3b305215efa02f3d74df">ezPositionOnPlane::Back</a></div><div class="ttdeci">@ Back</div><div class="ttdoc">Something is completely on the back side of a plane.</div><div class="ttdef"><b>Definition:</b> Plane.h:11</div></div>
<div class="ttc" id="astructez_plane_template_htm_a3ed189801d0cbdc6563cb6b3efd80169"><div class="ttname"><a href="../../d5/d8d/structez_plane_template.htm#a3ed189801d0cbdc6563cb6b3efd80169">ezPlaneTemplate::GetCoplanarDirection</a></div><div class="ttdeci">const ezVec3Template&lt; Type &gt; GetCoplanarDirection(const ezVec3Template&lt; Type &gt; &amp;vDirection) const</div><div class="ttdoc">Take the given direction vector and returns a modified one that is coplanar to the plane.</div><div class="ttdef"><b>Definition:</b> Plane_inl.h:179</div></div>
<div class="ttc" id="astructez_plane_template_htm_ac09e6e736ffe4763aaf75c13bc7ad87b"><div class="ttname"><a href="../../d5/d8d/structez_plane_template.htm#ac09e6e736ffe4763aaf75c13bc7ad87b">ezPlaneTemplate::IsEqual</a></div><div class="ttdeci">bool IsEqual(const ezPlaneTemplate&lt; Type &gt; &amp;rhs, Type fEpsilon=ezMath::DefaultEpsilon&lt; Type &gt;()) const</div><div class="ttdoc">Checks whether this plane and the other are equal within some threshold.</div><div class="ttdef"><b>Definition:</b> Plane_inl.h:193</div></div>
<div class="ttc" id="astructez_plane_template_htm_a61bce56755f1ab47838afa42194698ff"><div class="ttname"><a href="../../d5/d8d/structez_plane_template.htm#a61bce56755f1ab47838afa42194698ff">ezPlaneTemplate::GetObjectPosition</a></div><div class="ttdeci">ezPositionOnPlane::Enum GetObjectPosition(const ezVec3Template&lt; Type &gt; *const pPoints, ezUInt32 uiVertices) const</div><div class="ttdoc">Returns on which side of the plane the set of points lies. Might be on both sides.</div><div class="ttdef"><b>Definition:</b> Plane_inl.h:305</div></div>
<div class="ttc" id="astructez_position_on_plane_htm_a377e6d93106db3d72713f119abba493aad02f359204ea0a13cb95b9adda945892"><div class="ttname"><a href="../../db/d9e/structez_position_on_plane.htm#a377e6d93106db3d72713f119abba493aad02f359204ea0a13cb95b9adda945892">ezPositionOnPlane::Spanning</a></div><div class="ttdeci">@ Spanning</div><div class="ttdoc">Something is spanning a plane, i.e. some points are on the front and some on the back.</div><div class="ttdef"><b>Definition:</b> Plane.h:14</div></div>
<div class="ttc" id="astructez_plane_template_htm_afb5008b67f62f03c2dbd5e158db09b18"><div class="ttname"><a href="../../d5/d8d/structez_plane_template.htm#afb5008b67f62f03c2dbd5e158db09b18">ezPlaneTemplate::MakeFromPoints</a></div><div class="ttdeci">static ezPlaneTemplate&lt; Type &gt; MakeFromPoints(const ezVec3Template&lt; Type &gt; &amp;v1, const ezVec3Template&lt; Type &gt; &amp;v2, const ezVec3Template&lt; Type &gt; &amp;v3)</div><div class="ttdoc">Creates a plane from three points.</div><div class="ttdef"><b>Definition:</b> Plane_inl.h:37</div></div>
<div class="ttc" id="aclassez_bounding_box_template_htm"><div class="ttname"><a href="../../d6/d25/classez_bounding_box_template.htm">ezBoundingBoxTemplate</a></div><div class="ttdoc">An axis-aligned bounding box implementation.</div><div class="ttdef"><b>Definition:</b> BoundingBox.h:11</div></div>
<div class="ttc" id="astructez_plane_template_htm_add9e22a79e32c96205fdc1d45c95ecbe"><div class="ttname"><a href="../../d5/d8d/structez_plane_template.htm#add9e22a79e32c96205fdc1d45c95ecbe">ezPlaneTemplate::GetMaximumDistanceTo</a></div><div class="ttdeci">Type GetMaximumDistanceTo(const ezBoundingBoxTemplate&lt; Type &gt; &amp;box) const</div><div class="ttdoc">Returns the maximum distance between given box and a plane.</div><div class="ttdef"><b>Definition:</b> AllClasses_inl.h:165</div></div>
<div class="ttc" id="astructez_plane_template_htm_af69ba68dd8563d28b8c59da733e6b9b2"><div class="ttname"><a href="../../d5/d8d/structez_plane_template.htm#af69ba68dd8563d28b8c59da733e6b9b2">ezPlaneTemplate::MakeInvalid</a></div><div class="ttdeci">static ezPlaneTemplate&lt; Type &gt; MakeInvalid()</div><div class="ttdoc">Returns an invalid plane with a zero normal.</div><div class="ttdef"><b>Definition:</b> Plane_inl.h:17</div></div>
<div class="ttc" id="astructez_position_on_plane_htm_a377e6d93106db3d72713f119abba493a"><div class="ttname"><a href="../../db/d9e/structez_position_on_plane.htm#a377e6d93106db3d72713f119abba493a">ezPositionOnPlane::Enum</a></div><div class="ttdeci">Enum</div><div class="ttdef"><b>Definition:</b> Plane.h:9</div></div>
<div class="ttc" id="aclassez_mat4_template_htm"><div class="ttname"><a href="../../d7/d9b/classez_mat4_template.htm">ezMat4Template</a></div><div class="ttdoc">A 4x4 component matrix class.</div><div class="ttdef"><b>Definition:</b> Declarations.h:169</div></div>
<div class="ttc" id="aclassez_mat3_template_htm"><div class="ttname"><a href="../../db/daf/classez_mat3_template.htm">ezMat3Template</a></div><div class="ttdoc">A 3x3 component matrix class.</div><div class="ttdef"><b>Definition:</b> Declarations.h:163</div></div>
<div class="ttc" id="astructez_plane_template_htm_af96ba78aa55f0a7b1d4fc7f60f588319"><div class="ttname"><a href="../../d5/d8d/structez_plane_template.htm#af96ba78aa55f0a7b1d4fc7f60f588319">ezPlaneTemplate::ProjectOntoPlane</a></div><div class="ttdeci">const ezVec3Template&lt; Type &gt; ProjectOntoPlane(const ezVec3Template&lt; Type &gt; &amp;vPoint) const</div><div class="ttdoc">Projects a point onto a plane (along the planes normal).</div><div class="ttdef"><b>Definition:</b> Plane_inl.h:167</div></div>
<div class="ttc" id="astructez_plane_template_htm_ac0a1a557cb5f996bfda7d145acd23e88"><div class="ttname"><a href="../../d5/d8d/structez_plane_template.htm#ac0a1a557cb5f996bfda7d145acd23e88">ezPlaneTemplate::Flip</a></div><div class="ttdeci">void Flip()</div><div class="ttdoc">Negates Normal/Distance to switch which side of the plane is front and back.</div><div class="ttdef"><b>Definition:</b> Plane_inl.h:134</div></div>
<div class="ttc" id="astructez_plane_template_htm_ab552082d9b537a4d3f52f12cec194cc0"><div class="ttname"><a href="../../d5/d8d/structez_plane_template.htm#ab552082d9b537a4d3f52f12cec194cc0">ezPlaneTemplate::IsNaN</a></div><div class="ttdeci">bool IsNaN() const</div><div class="ttdoc">Checks whether any component is NaN.</div><div class="ttdef"><b>Definition:</b> Plane_inl.h:229</div></div>
<div class="ttc" id="astructez_position_on_plane_htm_a377e6d93106db3d72713f119abba493aaebe326c76bceb98d6abb19c3a5d78069"><div class="ttname"><a href="../../db/d9e/structez_position_on_plane.htm#a377e6d93106db3d72713f119abba493aaebe326c76bceb98d6abb19c3a5d78069">ezPositionOnPlane::Front</a></div><div class="ttdeci">@ Front</div><div class="ttdoc">Something is completely in front of a plane.</div><div class="ttdef"><b>Definition:</b> Plane.h:12</div></div>
<div class="ttc" id="astructez_plane_template_htm_a433d69109382ca8fb062bb678dae5a9e"><div class="ttname"><a href="../../d5/d8d/structez_plane_template.htm#a433d69109382ca8fb062bb678dae5a9e">ezPlaneTemplate::FlipIfNecessary</a></div><div class="ttdeci">bool FlipIfNecessary(const ezVec3Template&lt; Type &gt; &amp;vPoint, bool bPlaneShouldFacePoint=true)</div><div class="ttdoc">Negates Normal/Distance to switch which side of the plane is front and back. Returns true,...</div><div class="ttdef"><b>Definition:</b> Plane_inl.h:211</div></div>
<div class="ttc" id="astructez_plane_template_htm_a9e8f1c0e5f0ec6d086026ac817d3a72e"><div class="ttname"><a href="../../d5/d8d/structez_plane_template.htm#a9e8f1c0e5f0ec6d086026ac817d3a72e">ezPlaneTemplate::GetDistanceTo</a></div><div class="ttdeci">Type GetDistanceTo(const ezVec3Template&lt; Type &gt; &amp;vPoint) const</div><div class="ttdoc">Returns the distance of the point to the plane.</div><div class="ttdef"><b>Definition:</b> Plane_inl.h:141</div></div>
<div class="ttc" id="astructez_plane_template_htm_a77957ecb2ac5c2be8af8d4e77ce27607"><div class="ttname"><a href="../../d5/d8d/structez_plane_template.htm#a77957ecb2ac5c2be8af8d4e77ce27607">ezPlaneTemplate::GetPlanesIntersectionPoint</a></div><div class="ttdeci">static ezResult GetPlanesIntersectionPoint(const ezPlaneTemplate&lt; Type &gt; &amp;p0, const ezPlaneTemplate&lt; Type &gt; &amp;p1, const ezPlaneTemplate&lt; Type &gt; &amp;p2, ezVec3Template&lt; Type &gt; &amp;out_vResult)</div><div class="ttdoc">Computes the one point where all three planes intersect. Returns EZ_FAILURE if no such point exists.</div><div class="ttdef"><b>Definition:</b> Plane_inl.h:478</div></div>
<div class="ttc" id="astructez_plane_template_htm_adcf9fc9a41b04ab68a2f0dbe97096887"><div class="ttname"><a href="../../d5/d8d/structez_plane_template.htm#adcf9fc9a41b04ab68a2f0dbe97096887">ezPlaneTemplate::GetMinMaxDistanceTo</a></div><div class="ttdeci">void GetMinMaxDistanceTo(Type &amp;out_fMin, Type &amp;out_fMax, const ezVec3Template&lt; Type &gt; *pPoints, ezUInt32 uiNumPoints, ezUInt32 uiStride=sizeof(ezVec3Template&lt; Type &gt;)) const</div><div class="ttdoc">Returns the minimum and maximum distance that any of the given points had to the plane.</div><div class="ttdef"><b>Definition:</b> Plane_inl.h:452</div></div>
<div class="ttc" id="astructez_plane_template_htm_a6c1a787b6d5994e283150fb7c98fb27a"><div class="ttname"><a href="../../d5/d8d/structez_plane_template.htm#a6c1a787b6d5994e283150fb7c98fb27a">ezPlaneTemplate::IsValid</a></div><div class="ttdeci">bool IsValid() const</div><div class="ttdoc">Checks whether the plane has valid values (not NaN, normalized normal).</div><div class="ttdef"><b>Definition:</b> Plane_inl.h:223</div></div>
<div class="ttc" id="astructez_plane_template_htm_add9700307efa3f30fbd89feb7904b86f"><div class="ttname"><a href="../../d5/d8d/structez_plane_template.htm#add9700307efa3f30fbd89feb7904b86f">ezPlaneTemplate::Transform</a></div><div class="ttdeci">void Transform(const ezMat3Template&lt; Type &gt; &amp;m)</div><div class="ttdoc">Transforms the plane with the given matrix.</div><div class="ttdef"><b>Definition:</b> Plane_inl.h:84</div></div>
<div class="ttc" id="astructez_plane_template_htm_ab3bcce23bd81f23551ae219ca2bc2644"><div class="ttname"><a href="../../d5/d8d/structez_plane_template.htm#ab3bcce23bd81f23551ae219ca2bc2644">ezPlaneTemplate::GetLineSegmentIntersection</a></div><div class="ttdeci">bool GetLineSegmentIntersection(const ezVec3Template&lt; Type &gt; &amp;vLineStartPos, const ezVec3Template&lt; Type &gt; &amp;vLineEndPos, Type *out_pHitFraction=nullptr, ezVec3Template&lt; Type &gt; *out_pIntersection=nullptr) const</div><div class="ttdoc">Returns true, if there is any intersection with the plane between the line's start and end position....</div><div class="ttdef"><b>Definition:</b> Plane_inl.h:417</div></div>
<div class="ttc" id="astructez_plane_template_htm_aa4dfcf604b449b67d5d50f34fb5b204c"><div class="ttname"><a href="../../d5/d8d/structez_plane_template.htm#aa4dfcf604b449b67d5d50f34fb5b204c">ezPlaneTemplate::GetAsVec4</a></div><div class="ttdeci">ezVec4Template&lt; Type &gt; GetAsVec4() const</div><div class="ttdoc">Returns an ezVec4 with the plane normal in x,y,z and the negative distance in w.</div><div class="ttdef"><b>Definition:</b> Plane_inl.h:47</div></div>
<div class="ttc" id="astructez_plane_template_htm_afcd7e99d95506a12d1b17a83461208ac"><div class="ttname"><a href="../../d5/d8d/structez_plane_template.htm#afcd7e99d95506a12d1b17a83461208ac">ezPlaneTemplate::GetRayIntersectionBiDirectional</a></div><div class="ttdeci">bool GetRayIntersectionBiDirectional(const ezVec3Template&lt; Type &gt; &amp;vRayStartPos, const ezVec3Template&lt; Type &gt; &amp;vRayDir, Type *out_pIntersectionDistance=nullptr, ezVec3Template&lt; Type &gt; *out_pIntersection=nullptr) const</div><div class="ttdoc">Returns true, if the ray intersects the plane. Intersection time and point are stored in the out-para...</div><div class="ttdef"><b>Definition:</b> Plane_inl.h:394</div></div>
<div class="ttc" id="astructez_plane_template_htm_a1de3da403b933d43433a758289b7a858"><div class="ttname"><a href="../../d5/d8d/structez_plane_template.htm#a1de3da403b933d43433a758289b7a858">ezPlaneTemplate::ezPlaneTemplate</a></div><div class="ttdeci">ezPlaneTemplate()</div><div class="ttdoc">Default constructor. Does not initialize the plane.</div><div class="ttdef"><b>Definition:</b> Plane_inl.h:6</div></div>
<div class="ttc" id="astructez_plane_template_htm"><div class="ttname"><a href="../../d5/d8d/structez_plane_template.htm">ezPlaneTemplate</a></div><div class="ttdoc">A class that represents a mathematical plane.</div><div class="ttdef"><b>Definition:</b> Declarations.h:175</div></div>
<div class="ttc" id="astructez_plane_template_htm_a82c740662e228339a4b9ee28c9d4dce0"><div class="ttname"><a href="../../d5/d8d/structez_plane_template.htm#a82c740662e228339a4b9ee28c9d4dce0">ezPlaneTemplate::SetFromPoints</a></div><div class="ttdeci">ezResult SetFromPoints(const ezVec3Template&lt; Type &gt; &amp;v1, const ezVec3Template&lt; Type &gt; &amp;v2, const ezVec3Template&lt; Type &gt; &amp;v3)</div><div class="ttdoc">Creates the plane-equation from three points on the plane.</div><div class="ttdef"><b>Definition:</b> Plane_inl.h:53</div></div>
<div class="ttc" id="astructez_plane_template_htm_aea8e5e369188e2e5fd5ce172caeb5ec2"><div class="ttname"><a href="../../d5/d8d/structez_plane_template.htm#aea8e5e369188e2e5fd5ce172caeb5ec2">ezPlaneTemplate::GetPointPosition</a></div><div class="ttdeci">ezPositionOnPlane::Enum GetPointPosition(const ezVec3Template&lt; Type &gt; &amp;vPoint) const</div><div class="ttdoc">Returns on which side of the plane the point lies.</div><div class="ttdef"><b>Definition:</b> Plane_inl.h:147</div></div>
<div class="ttc" id="astructez_plane_template_htm_a4f31e60fb1708add1aebcbbabfcdaa69"><div class="ttname"><a href="../../d5/d8d/structez_plane_template.htm#a4f31e60fb1708add1aebcbbabfcdaa69">ezPlaneTemplate::GetMinimumDistanceTo</a></div><div class="ttdeci">Type GetMinimumDistanceTo(const ezVec3Template&lt; Type &gt; *pPoints, ezUInt32 uiNumPoints, ezUInt32 uiStride=sizeof(ezVec3Template&lt; Type &gt;)) const</div><div class="ttdoc">Returns the minimum distance that any of the given points had to the plane.</div><div class="ttdef"><b>Definition:</b> Plane_inl.h:431</div></div>
<div class="ttc" id="astructez_plane_template_htm_ab61816663e35211f64eff20ec0561155"><div class="ttname"><a href="../../d5/d8d/structez_plane_template.htm#ab61816663e35211f64eff20ec0561155">ezPlaneTemplate::IsFinite</a></div><div class="ttdeci">bool IsFinite() const</div><div class="ttdoc">Checks whether any component is Infinity.</div><div class="ttdef"><b>Definition:</b> Plane_inl.h:235</div></div>
<div class="ttc" id="aclassez_vec4_template_htm"><div class="ttname"><a href="../../da/dd2/classez_vec4_template.htm">ezVec4Template</a></div><div class="ttdoc">A 4-component vector class.</div><div class="ttdef"><b>Definition:</b> Declarations.h:149</div></div>
<div class="ttc" id="aclassez_vec3_template_htm"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm">ezVec3Template</a></div><div class="ttdoc">A 3-component vector class.</div><div class="ttdef"><b>Definition:</b> Declarations.h:139</div></div>
<div class="ttc" id="astructez_plane_template_htm_a28ed715903e01728f3c7d414019a5aa4"><div class="ttname"><a href="../../d5/d8d/structez_plane_template.htm#a28ed715903e01728f3c7d414019a5aa4">ezPlaneTemplate::IsIdentical</a></div><div class="ttdeci">bool IsIdentical(const ezPlaneTemplate&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Checks whether this plane and the other are identical.</div><div class="ttdef"><b>Definition:</b> Plane_inl.h:187</div></div>
<div class="ttc" id="astructez_position_on_plane_htm"><div class="ttname"><a href="../../db/d9e/structez_position_on_plane.htm">ezPositionOnPlane</a></div><div class="ttdoc">Describes on which side of a plane a point or an object is located.</div><div class="ttdef"><b>Definition:</b> Plane.h:7</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_4ad0f5fbee83b30173e7fecedeea26f0.htm">Math</a></li><li class="navelem"><b>Plane.h</b></li>
    <li class="footer">Generated on Mon Mar 3 2025 17:23:44 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
