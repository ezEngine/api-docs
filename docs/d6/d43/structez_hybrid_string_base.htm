<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: ezHybridStringBase&lt; Size &gt; Struct Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 25.03</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d6/d43/structez_hybrid_string_base.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="../../d7/dbb/structez_hybrid_string_base-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ezHybridStringBase&lt; Size &gt; Struct Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>A string class for storing and passing around strings.  
 <a href="../../d6/d43/structez_hybrid_string_base.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../db/db5/_string_8h_source.htm">String.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for ezHybridStringBase&lt; Size &gt;:</div>
<div class="dyncontent">
<div class="center"><img src="../../d5/dd6/structez_hybrid_string_base__inherit__graph.png" border="0" usemap="#ez_hybrid_string_base_3_01_size_01_4_inherit__map" alt="Inheritance graph"/></div>
<map name="ez_hybrid_string_base_3_01_size_01_4_inherit__map" id="ez_hybrid_string_base_3_01_size_01_4_inherit__map">
<area shape="rect" title="A string class for storing and passing around strings." alt="" coords="39,169,190,211"/>
<area shape="rect" href="../../dd/d69/structez_string_base.htm" title=" " alt="" coords="5,80,224,121"/>
<area shape="rect" href="../../d8/d9a/structez_this_is_a_string.htm" title="Base class which marks a class as containing string data." alt="" coords="53,5,176,32"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aaced07b48ca63da8bd4bacc7ebb1ad86"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d43/structez_hybrid_string_base.htm#aaced07b48ca63da8bd4bacc7ebb1ad86">Clear</a> ()</td></tr>
<tr class="memdesc:aaced07b48ca63da8bd4bacc7ebb1ad86"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resets this string to an empty string.  <a href="../../d6/d43/structez_hybrid_string_base.htm#aaced07b48ca63da8bd4bacc7ebb1ad86">More...</a><br /></td></tr>
<tr class="separator:aaced07b48ca63da8bd4bacc7ebb1ad86"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e11b053ec999656b2b39354bdacf99e"><td class="memItemLeft" align="right" valign="top"><a id="a7e11b053ec999656b2b39354bdacf99e"></a>
const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d43/structez_hybrid_string_base.htm#a7e11b053ec999656b2b39354bdacf99e">GetData</a> () const</td></tr>
<tr class="memdesc:a7e11b053ec999656b2b39354bdacf99e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a pointer to the internal Utf8 string. <br /></td></tr>
<tr class="separator:a7e11b053ec999656b2b39354bdacf99e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab479457ea5ea6c0c5307003b65661042"><td class="memItemLeft" align="right" valign="top"><a id="ab479457ea5ea6c0c5307003b65661042"></a>
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d43/structez_hybrid_string_base.htm#ab479457ea5ea6c0c5307003b65661042">GetElementCount</a> () const</td></tr>
<tr class="memdesc:ab479457ea5ea6c0c5307003b65661042"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the amount of bytes that this string takes (excluding the '\0' terminator). <br /></td></tr>
<tr class="separator:ab479457ea5ea6c0c5307003b65661042"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af20ba0a27cc7fd6c9c98f8bad4d4d18f"><td class="memItemLeft" align="right" valign="top">ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d43/structez_hybrid_string_base.htm#af20ba0a27cc7fd6c9c98f8bad4d4d18f">GetCharacterCount</a> () const</td></tr>
<tr class="memdesc:af20ba0a27cc7fd6c9c98f8bad4d4d18f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of characters in this string. Might be less than GetElementCount, if it contains Utf8 multi-byte characters.  <a href="../../d6/d43/structez_hybrid_string_base.htm#af20ba0a27cc7fd6c9c98f8bad4d4d18f">More...</a><br /></td></tr>
<tr class="separator:af20ba0a27cc7fd6c9c98f8bad4d4d18f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67adf8196229df696cb7d877bcb474ee"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d43/structez_hybrid_string_base.htm#a67adf8196229df696cb7d877bcb474ee">GetSubString</a> (ezUInt32 uiFirstCharacter, ezUInt32 uiNumCharacters) const</td></tr>
<tr class="memdesc:a67adf8196229df696cb7d877bcb474ee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a view to a sub-string of this string, starting at character uiFirstCharacter, up until uiFirstCharacter + uiNumCharacters.  <a href="../../d6/d43/structez_hybrid_string_base.htm#a67adf8196229df696cb7d877bcb474ee">More...</a><br /></td></tr>
<tr class="separator:a67adf8196229df696cb7d877bcb474ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a57069e63a857e02a96ce058b7e08b5a2"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d43/structez_hybrid_string_base.htm#a57069e63a857e02a96ce058b7e08b5a2">GetFirst</a> (ezUInt32 uiNumCharacters) const</td></tr>
<tr class="memdesc:a57069e63a857e02a96ce058b7e08b5a2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a view to the sub-string containing the first uiNumCharacters characters of this string.  <a href="../../d6/d43/structez_hybrid_string_base.htm#a57069e63a857e02a96ce058b7e08b5a2">More...</a><br /></td></tr>
<tr class="separator:a57069e63a857e02a96ce058b7e08b5a2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a81959562e8f0dc60eb14d5a02b92a608"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d43/structez_hybrid_string_base.htm#a81959562e8f0dc60eb14d5a02b92a608">GetLast</a> (ezUInt32 uiNumCharacters) const</td></tr>
<tr class="memdesc:a81959562e8f0dc60eb14d5a02b92a608"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a view to the sub-string containing the last uiNumCharacters characters of this string.  <a href="../../d6/d43/structez_hybrid_string_base.htm#a81959562e8f0dc60eb14d5a02b92a608">More...</a><br /></td></tr>
<tr class="separator:a81959562e8f0dc60eb14d5a02b92a608"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a64473cc36d9507d6fe5620ff5c71ebdd"><td class="memItemLeft" align="right" valign="top"><a id="a64473cc36d9507d6fe5620ff5c71ebdd"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d43/structez_hybrid_string_base.htm#a64473cc36d9507d6fe5620ff5c71ebdd">ReadAll</a> (<a class="el" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a> &amp;inout_stream)</td></tr>
<tr class="memdesc:a64473cc36d9507d6fe5620ff5c71ebdd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Replaces the current string with the content from the stream. Reads the stream to its end. <br /></td></tr>
<tr class="separator:a64473cc36d9507d6fe5620ff5c71ebdd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a451a7e85318f69f8c6715b2d9059aa73"><td class="memItemLeft" align="right" valign="top"><a id="a451a7e85318f69f8c6715b2d9059aa73"></a>
ezUInt64&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d43/structez_hybrid_string_base.htm#a451a7e85318f69f8c6715b2d9059aa73">GetHeapMemoryUsage</a> () const</td></tr>
<tr class="memdesc:a451a7e85318f69f8c6715b2d9059aa73"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the amount of bytes that are currently allocated on the heap. <br /></td></tr>
<tr class="separator:a451a7e85318f69f8c6715b2d9059aa73"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_structez_string_base"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_structez_string_base')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt; ezHybridStringBase&lt; Size &gt; &gt;</a></td></tr>
<tr class="memitem:a3b169646f62ef8a8d33b63e2b8731afb inherit pub_methods_structez_string_base"><td class="memItemLeft" align="right" valign="top"><a id="a3b169646f62ef8a8d33b63e2b8731afb"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d69/structez_string_base.htm#a3b169646f62ef8a8d33b63e2b8731afb">IsEmpty</a> () const</td></tr>
<tr class="memdesc:a3b169646f62ef8a8d33b63e2b8731afb inherit pub_methods_structez_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the string is an empty string. <br /></td></tr>
<tr class="separator:a3b169646f62ef8a8d33b63e2b8731afb inherit pub_methods_structez_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa2292b0dc69f7889157e6488455f5fd6 inherit pub_methods_structez_string_base"><td class="memItemLeft" align="right" valign="top"><a id="aa2292b0dc69f7889157e6488455f5fd6"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d69/structez_string_base.htm#aa2292b0dc69f7889157e6488455f5fd6">StartsWith</a> (<a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a> sStartsWith) const</td></tr>
<tr class="memdesc:aa2292b0dc69f7889157e6488455f5fd6 inherit pub_methods_structez_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if this string starts with the given string. <br /></td></tr>
<tr class="separator:aa2292b0dc69f7889157e6488455f5fd6 inherit pub_methods_structez_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5820e97ac4c87313b8874f9f03e6b902 inherit pub_methods_structez_string_base"><td class="memItemLeft" align="right" valign="top"><a id="a5820e97ac4c87313b8874f9f03e6b902"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d69/structez_string_base.htm#a5820e97ac4c87313b8874f9f03e6b902">StartsWith_NoCase</a> (<a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a> sStartsWith) const</td></tr>
<tr class="memdesc:a5820e97ac4c87313b8874f9f03e6b902 inherit pub_methods_structez_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if this string starts with the given string. Case insensitive. <br /></td></tr>
<tr class="separator:a5820e97ac4c87313b8874f9f03e6b902 inherit pub_methods_structez_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0bc84753ec74d1692958ad6c0b60a065 inherit pub_methods_structez_string_base"><td class="memItemLeft" align="right" valign="top"><a id="a0bc84753ec74d1692958ad6c0b60a065"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d69/structez_string_base.htm#a0bc84753ec74d1692958ad6c0b60a065">EndsWith</a> (<a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a> sEndsWith) const</td></tr>
<tr class="memdesc:a0bc84753ec74d1692958ad6c0b60a065 inherit pub_methods_structez_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if this string ends with the given string. <br /></td></tr>
<tr class="separator:a0bc84753ec74d1692958ad6c0b60a065 inherit pub_methods_structez_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af063ac74d2c0a66f0bbddb62d16c5c50 inherit pub_methods_structez_string_base"><td class="memItemLeft" align="right" valign="top"><a id="af063ac74d2c0a66f0bbddb62d16c5c50"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d69/structez_string_base.htm#af063ac74d2c0a66f0bbddb62d16c5c50">EndsWith_NoCase</a> (<a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a> sEndsWith) const</td></tr>
<tr class="memdesc:af063ac74d2c0a66f0bbddb62d16c5c50 inherit pub_methods_structez_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if this string ends with the given string. Case insensitive. <br /></td></tr>
<tr class="separator:af063ac74d2c0a66f0bbddb62d16c5c50 inherit pub_methods_structez_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7526c38e876eb72118bbb37ab1e36732 inherit pub_methods_structez_string_base"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d69/structez_string_base.htm#a7526c38e876eb72118bbb37ab1e36732">FindSubString</a> (<a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a> sStringToFind, const char *szStartSearchAt=nullptr) const</td></tr>
<tr class="separator:a7526c38e876eb72118bbb37ab1e36732 inherit pub_methods_structez_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a836c2433b152208146b07be5182aa90d inherit pub_methods_structez_string_base"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d69/structez_string_base.htm#a836c2433b152208146b07be5182aa90d">FindSubString_NoCase</a> (<a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a> sStringToFind, const char *szStartSearchAt=nullptr) const</td></tr>
<tr class="separator:a836c2433b152208146b07be5182aa90d inherit pub_methods_structez_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1119c28eec83e75e524b7355024cd636 inherit pub_methods_structez_string_base"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d69/structez_string_base.htm#a1119c28eec83e75e524b7355024cd636">FindLastSubString</a> (<a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a> sStringToFind, const char *szStartSearchAt=nullptr) const</td></tr>
<tr class="separator:a1119c28eec83e75e524b7355024cd636 inherit pub_methods_structez_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a549f29a89a36526391f4e407ca9f3a4b inherit pub_methods_structez_string_base"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d69/structez_string_base.htm#a549f29a89a36526391f4e407ca9f3a4b">FindLastSubString_NoCase</a> (<a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a> sStringToFind, const char *szStartSearchAt=nullptr) const</td></tr>
<tr class="separator:a549f29a89a36526391f4e407ca9f3a4b inherit pub_methods_structez_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afcc7196e4bb81b8b3e2da961dd917fde inherit pub_methods_structez_string_base"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d69/structez_string_base.htm#afcc7196e4bb81b8b3e2da961dd917fde">FindWholeWord</a> (const char *szSearchFor, <a class="el" href="../../de/df8/classez_string_utils.htm#a30a256e58c74618a988775c15bdd3d8e">ezStringUtils::EZ_CHARACTER_FILTER</a> isDelimiterCB, const char *szStartSearchAt=nullptr) const</td></tr>
<tr class="separator:afcc7196e4bb81b8b3e2da961dd917fde inherit pub_methods_structez_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab40b7ada5f552ec62ad5c2a87d9eb2e9 inherit pub_methods_structez_string_base"><td class="memItemLeft" align="right" valign="top">const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d69/structez_string_base.htm#ab40b7ada5f552ec62ad5c2a87d9eb2e9">FindWholeWord_NoCase</a> (const char *szSearchFor, <a class="el" href="../../de/df8/classez_string_utils.htm#a30a256e58c74618a988775c15bdd3d8e">ezStringUtils::EZ_CHARACTER_FILTER</a> isDelimiterCB, const char *szStartSearchAt=nullptr) const</td></tr>
<tr class="separator:ab40b7ada5f552ec62ad5c2a87d9eb2e9 inherit pub_methods_structez_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab4aa8e43c8a2bf68e642ad1bfbffb9fa inherit pub_methods_structez_string_base"><td class="memItemLeft" align="right" valign="top"><a id="ab4aa8e43c8a2bf68e642ad1bfbffb9fa"></a>
ezInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d69/structez_string_base.htm#ab4aa8e43c8a2bf68e642ad1bfbffb9fa">Compare</a> (<a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a> sOther) const</td></tr>
<tr class="memdesc:ab4aa8e43c8a2bf68e642ad1bfbffb9fa inherit pub_methods_structez_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares this string with the other one. Returns 0 for equality, -1 if this string is 'smaller', 1 otherwise. <br /></td></tr>
<tr class="separator:ab4aa8e43c8a2bf68e642ad1bfbffb9fa inherit pub_methods_structez_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad59a099496386a4dc0225f2564a9e9cb inherit pub_methods_structez_string_base"><td class="memItemLeft" align="right" valign="top">ezInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d69/structez_string_base.htm#ad59a099496386a4dc0225f2564a9e9cb">CompareN</a> (<a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a> sOther, ezUInt32 uiCharsToCompare) const</td></tr>
<tr class="separator:ad59a099496386a4dc0225f2564a9e9cb inherit pub_methods_structez_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a11cc4a3305c78e7e5f062073562b78b1 inherit pub_methods_structez_string_base"><td class="memItemLeft" align="right" valign="top"><a id="a11cc4a3305c78e7e5f062073562b78b1"></a>
ezInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d69/structez_string_base.htm#a11cc4a3305c78e7e5f062073562b78b1">Compare_NoCase</a> (<a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a> sOther) const</td></tr>
<tr class="memdesc:a11cc4a3305c78e7e5f062073562b78b1 inherit pub_methods_structez_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares this string with the other one. Returns 0 for equality, -1 if this string is 'smaller', 1 otherwise. Case insensitive. <br /></td></tr>
<tr class="separator:a11cc4a3305c78e7e5f062073562b78b1 inherit pub_methods_structez_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa234e5c9e6b3fb6e0296d00fd863e726 inherit pub_methods_structez_string_base"><td class="memItemLeft" align="right" valign="top">ezInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d69/structez_string_base.htm#aa234e5c9e6b3fb6e0296d00fd863e726">CompareN_NoCase</a> (<a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a> sOther, ezUInt32 uiCharsToCompare) const</td></tr>
<tr class="separator:aa234e5c9e6b3fb6e0296d00fd863e726 inherit pub_methods_structez_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af1283e59a13f463d2137726c0fa2573f inherit pub_methods_structez_string_base"><td class="memItemLeft" align="right" valign="top"><a id="af1283e59a13f463d2137726c0fa2573f"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d69/structez_string_base.htm#af1283e59a13f463d2137726c0fa2573f">IsEqual</a> (<a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a> sOther) const</td></tr>
<tr class="memdesc:af1283e59a13f463d2137726c0fa2573f inherit pub_methods_structez_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares this string with the other string for equality. <br /></td></tr>
<tr class="separator:af1283e59a13f463d2137726c0fa2573f inherit pub_methods_structez_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa75c907e8543d51e46e9715427a2e3db inherit pub_methods_structez_string_base"><td class="memItemLeft" align="right" valign="top"><a id="aa75c907e8543d51e46e9715427a2e3db"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d69/structez_string_base.htm#aa75c907e8543d51e46e9715427a2e3db">IsEqualN</a> (<a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a> sOther, ezUInt32 uiCharsToCompare) const</td></tr>
<tr class="memdesc:aa75c907e8543d51e46e9715427a2e3db inherit pub_methods_structez_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares up to a given number of characters of this string with the other string for equality. Case insensitive. <br /></td></tr>
<tr class="separator:aa75c907e8543d51e46e9715427a2e3db inherit pub_methods_structez_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a819d3861f3efcaeb4393268840a43c37 inherit pub_methods_structez_string_base"><td class="memItemLeft" align="right" valign="top"><a id="a819d3861f3efcaeb4393268840a43c37"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d69/structez_string_base.htm#a819d3861f3efcaeb4393268840a43c37">IsEqual_NoCase</a> (<a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a> sOther) const</td></tr>
<tr class="memdesc:a819d3861f3efcaeb4393268840a43c37 inherit pub_methods_structez_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares this string with the other string for equality. <br /></td></tr>
<tr class="separator:a819d3861f3efcaeb4393268840a43c37 inherit pub_methods_structez_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a746a8a1119e1eee5a5671bada6877265 inherit pub_methods_structez_string_base"><td class="memItemLeft" align="right" valign="top"><a id="a746a8a1119e1eee5a5671bada6877265"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d69/structez_string_base.htm#a746a8a1119e1eee5a5671bada6877265">IsEqualN_NoCase</a> (<a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a> sOther, ezUInt32 uiCharsToCompare) const</td></tr>
<tr class="memdesc:a746a8a1119e1eee5a5671bada6877265 inherit pub_methods_structez_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares up to a given number of characters of this string with the other string for equality. Case insensitive. <br /></td></tr>
<tr class="separator:a746a8a1119e1eee5a5671bada6877265 inherit pub_methods_structez_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a05bec3cf5581b35aa18849239b2471c6 inherit pub_methods_structez_string_base"><td class="memItemLeft" align="right" valign="top"><a id="a05bec3cf5581b35aa18849239b2471c6"></a>
const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d69/structez_string_base.htm#a05bec3cf5581b35aa18849239b2471c6">ComputeCharacterPosition</a> (ezUInt32 uiCharacterIndex) const</td></tr>
<tr class="memdesc:a05bec3cf5581b35aa18849239b2471c6 inherit pub_methods_structez_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Computes the pointer to the n-th character in the string. This is a linear search from the start. <br /></td></tr>
<tr class="separator:a05bec3cf5581b35aa18849239b2471c6 inherit pub_methods_structez_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a630aa4b168172aef7b32f8085148ed8e inherit pub_methods_structez_string_base"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d4/ddc/structez_string_iterator.htm">iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d69/structez_string_base.htm#a630aa4b168172aef7b32f8085148ed8e">GetIteratorFront</a> () const</td></tr>
<tr class="memdesc:a630aa4b168172aef7b32f8085148ed8e inherit pub_methods_structez_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an iterator to this string, which points to the very first character.  <a href="../../dd/d69/structez_string_base.htm#a630aa4b168172aef7b32f8085148ed8e">More...</a><br /></td></tr>
<tr class="separator:a630aa4b168172aef7b32f8085148ed8e inherit pub_methods_structez_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3821af6b610f6c40a46336f7accc0c7e inherit pub_methods_structez_string_base"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d6/d6b/structez_string_reverse_iterator.htm">reverse_iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d69/structez_string_base.htm#a3821af6b610f6c40a46336f7accc0c7e">GetIteratorBack</a> () const</td></tr>
<tr class="memdesc:a3821af6b610f6c40a46336f7accc0c7e inherit pub_methods_structez_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an iterator to this string, which points to the very last character (NOT the end).  <a href="../../dd/d69/structez_string_base.htm#a3821af6b610f6c40a46336f7accc0c7e">More...</a><br /></td></tr>
<tr class="separator:a3821af6b610f6c40a46336f7accc0c7e inherit pub_methods_structez_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2f255aa67639f3d3c0abd7a55a8ee9e3 inherit pub_methods_structez_string_base"><td class="memItemLeft" align="right" valign="top"><a id="a2f255aa67639f3d3c0abd7a55a8ee9e3"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d69/structez_string_base.htm#a2f255aa67639f3d3c0abd7a55a8ee9e3">operator ezStringView</a> () const</td></tr>
<tr class="memdesc:a2f255aa67639f3d3c0abd7a55a8ee9e3 inherit pub_methods_structez_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a string view to this string's data. <br /></td></tr>
<tr class="separator:a2f255aa67639f3d3c0abd7a55a8ee9e3 inherit pub_methods_structez_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4dc8b54007099ca61b4b937923e7987b inherit pub_methods_structez_string_base"><td class="memItemLeft" align="right" valign="top"><a id="a4dc8b54007099ca61b4b937923e7987b"></a>
<a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d69/structez_string_base.htm#a4dc8b54007099ca61b4b937923e7987b">GetView</a> () const</td></tr>
<tr class="memdesc:a4dc8b54007099ca61b4b937923e7987b inherit pub_methods_structez_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a string view to this string's data. <br /></td></tr>
<tr class="separator:a4dc8b54007099ca61b4b937923e7987b inherit pub_methods_structez_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c0fec33cd00f409985b68a820ead16f inherit pub_methods_structez_string_base"><td class="memItemLeft" align="right" valign="top"><a id="a3c0fec33cd00f409985b68a820ead16f"></a>
EZ_ALWAYS_INLINE&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d69/structez_string_base.htm#a3c0fec33cd00f409985b68a820ead16f">operator const char *</a> () const</td></tr>
<tr class="memdesc:a3c0fec33cd00f409985b68a820ead16f inherit pub_methods_structez_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a pointer to the internal Utf8 string. <br /></td></tr>
<tr class="separator:a3c0fec33cd00f409985b68a820ead16f inherit pub_methods_structez_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a328c33c66707ecea8ed93512a5ad2465 inherit pub_methods_structez_string_base"><td class="memItemLeft" align="right" valign="top"><a id="a328c33c66707ecea8ed93512a5ad2465"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d69/structez_string_base.htm#a328c33c66707ecea8ed93512a5ad2465">Split</a> (bool bReturnEmptyStrings, Container &amp;ref_output, const char *szSeparator1, const char *szSeparator2=nullptr, const char *szSeparator3=nullptr, const char *szSeparator4=nullptr, const char *szSeparator5=nullptr, const char *szSeparator6=nullptr) const</td></tr>
<tr class="memdesc:a328c33c66707ecea8ed93512a5ad2465 inherit pub_methods_structez_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Fills the given container with <a class="el" href="../../d9/d18/classez_string_view.htm" title="ezStringView represent a read-only sub-string of a larger string, as it can store a dedicated string ...">ezStringView</a>'s which represent each found substring. If bReturnEmptyStrings is true, even empty strings between separators are returned. Output must be a container that stores <a class="el" href="../../d9/d18/classez_string_view.htm" title="ezStringView represent a read-only sub-string of a larger string, as it can store a dedicated string ...">ezStringView</a>'s and provides the functions 'Clear' and 'Append'. szSeparator1 to szSeparator6 are strings which act as separators and indicate where to split the string. This string itself will not be modified. <br /></td></tr>
<tr class="separator:a328c33c66707ecea8ed93512a5ad2465 inherit pub_methods_structez_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a31f4090e3be6134eb1702f909cd3ba33 inherit pub_methods_structez_string_base"><td class="memItemLeft" align="right" valign="top"><a id="a31f4090e3be6134eb1702f909cd3ba33"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d69/structez_string_base.htm#a31f4090e3be6134eb1702f909cd3ba33">HasAnyExtension</a> () const</td></tr>
<tr class="memdesc:a31f4090e3be6134eb1702f909cd3ba33 inherit pub_methods_structez_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether the given path has any file extension. <br /></td></tr>
<tr class="separator:a31f4090e3be6134eb1702f909cd3ba33 inherit pub_methods_structez_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afdbb18858405f981767e683d858fb73c inherit pub_methods_structez_string_base"><td class="memItemLeft" align="right" valign="top"><a id="afdbb18858405f981767e683d858fb73c"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d69/structez_string_base.htm#afdbb18858405f981767e683d858fb73c">HasExtension</a> (<a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a> sExtension) const</td></tr>
<tr class="memdesc:afdbb18858405f981767e683d858fb73c inherit pub_methods_structez_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether the given path ends with the given extension. szExtension should start with a '.' for performance reasons, but it will work without a '.' too. <br /></td></tr>
<tr class="separator:afdbb18858405f981767e683d858fb73c inherit pub_methods_structez_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5643d2cd395334ef41df8d253cfe85b1 inherit pub_methods_structez_string_base"><td class="memItemLeft" align="right" valign="top"><a id="a5643d2cd395334ef41df8d253cfe85b1"></a>
<a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d69/structez_string_base.htm#a5643d2cd395334ef41df8d253cfe85b1">GetFileExtension</a> (bool bFullExtension=false) const</td></tr>
<tr class="memdesc:a5643d2cd395334ef41df8d253cfe85b1 inherit pub_methods_structez_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the file extension of the given path. Will be empty, if the path does not end with a proper extension. <br /></td></tr>
<tr class="separator:a5643d2cd395334ef41df8d253cfe85b1 inherit pub_methods_structez_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e36684efb429bac40152974cd8ca817 inherit pub_methods_structez_string_base"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d69/structez_string_base.htm#a6e36684efb429bac40152974cd8ca817">GetFileName</a> () const</td></tr>
<tr class="memdesc:a6e36684efb429bac40152974cd8ca817 inherit pub_methods_structez_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the file name of a path, excluding the path and extension.  <a href="../../dd/d69/structez_string_base.htm#a6e36684efb429bac40152974cd8ca817">More...</a><br /></td></tr>
<tr class="separator:a6e36684efb429bac40152974cd8ca817 inherit pub_methods_structez_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a839a783b7199310da98f5e52f7174c43 inherit pub_methods_structez_string_base"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d69/structez_string_base.htm#a839a783b7199310da98f5e52f7174c43">GetFileNameAndExtension</a> () const</td></tr>
<tr class="memdesc:a839a783b7199310da98f5e52f7174c43 inherit pub_methods_structez_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the substring that represents the file name including the file extension.  <a href="../../dd/d69/structez_string_base.htm#a839a783b7199310da98f5e52f7174c43">More...</a><br /></td></tr>
<tr class="separator:a839a783b7199310da98f5e52f7174c43 inherit pub_methods_structez_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abcd136562b6d279801aa6653c3dbd7c8 inherit pub_methods_structez_string_base"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d69/structez_string_base.htm#abcd136562b6d279801aa6653c3dbd7c8">GetFileDirectory</a> () const</td></tr>
<tr class="memdesc:abcd136562b6d279801aa6653c3dbd7c8 inherit pub_methods_structez_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the directory of the given file, which is the substring up to the last path separator.  <a href="../../dd/d69/structez_string_base.htm#abcd136562b6d279801aa6653c3dbd7c8">More...</a><br /></td></tr>
<tr class="separator:abcd136562b6d279801aa6653c3dbd7c8 inherit pub_methods_structez_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa2bb565f17573d92b3f995ede720b915 inherit pub_methods_structez_string_base"><td class="memItemLeft" align="right" valign="top"><a id="aa2bb565f17573d92b3f995ede720b915"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d69/structez_string_base.htm#aa2bb565f17573d92b3f995ede720b915">IsAbsolutePath</a> () const</td></tr>
<tr class="memdesc:aa2bb565f17573d92b3f995ede720b915 inherit pub_methods_structez_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if the given path represents an absolute path on the current OS. <br /></td></tr>
<tr class="separator:aa2bb565f17573d92b3f995ede720b915 inherit pub_methods_structez_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2fc8eecf7a508bcb383b70ced7ffc25 inherit pub_methods_structez_string_base"><td class="memItemLeft" align="right" valign="top"><a id="ac2fc8eecf7a508bcb383b70ced7ffc25"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d69/structez_string_base.htm#ac2fc8eecf7a508bcb383b70ced7ffc25">IsRelativePath</a> () const</td></tr>
<tr class="memdesc:ac2fc8eecf7a508bcb383b70ced7ffc25 inherit pub_methods_structez_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if the given path represents a relative path on the current OS. <br /></td></tr>
<tr class="separator:ac2fc8eecf7a508bcb383b70ced7ffc25 inherit pub_methods_structez_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5981da7976e9bd420dc871da0bfab1a2 inherit pub_methods_structez_string_base"><td class="memItemLeft" align="right" valign="top"><a id="a5981da7976e9bd420dc871da0bfab1a2"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d69/structez_string_base.htm#a5981da7976e9bd420dc871da0bfab1a2">IsRootedPath</a> () const</td></tr>
<tr class="memdesc:a5981da7976e9bd420dc871da0bfab1a2 inherit pub_methods_structez_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if the given path represents a 'rooted' path. See <a class="el" href="../../d4/d6b/classez_file_system.htm" title="The ezFileSystem provides high-level functionality to manage files in a virtual file system.">ezFileSystem</a> for details. <br /></td></tr>
<tr class="separator:a5981da7976e9bd420dc871da0bfab1a2 inherit pub_methods_structez_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a501c95c64bd9476f553ea361d0f94a33 inherit pub_methods_structez_string_base"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d69/structez_string_base.htm#a501c95c64bd9476f553ea361d0f94a33">GetRootedPathRootName</a> () const</td></tr>
<tr class="memdesc:a501c95c64bd9476f553ea361d0f94a33 inherit pub_methods_structez_string_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Extracts the root name from a rooted path.  <a href="../../dd/d69/structez_string_base.htm#a501c95c64bd9476f553ea361d0f94a33">More...</a><br /></td></tr>
<tr class="separator:a501c95c64bd9476f553ea361d0f94a33 inherit pub_methods_structez_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a38388b6f173efff8b339cf1d6209fe9d"><td class="memItemLeft" align="right" valign="top"><a id="a38388b6f173efff8b339cf1d6209fe9d"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d43/structez_hybrid_string_base.htm#a38388b6f173efff8b339cf1d6209fe9d">ezHybridStringBase</a> (<a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:a38388b6f173efff8b339cf1d6209fe9d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an empty string. <br /></td></tr>
<tr class="separator:a38388b6f173efff8b339cf1d6209fe9d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac05ba000cfafad3b187a1373dfdcaaa4"><td class="memItemLeft" align="right" valign="top"><a id="ac05ba000cfafad3b187a1373dfdcaaa4"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d43/structez_hybrid_string_base.htm#ac05ba000cfafad3b187a1373dfdcaaa4">ezHybridStringBase</a> (const <a class="el" href="../../d6/d43/structez_hybrid_string_base.htm">ezHybridStringBase</a> &amp;rhs, <a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:ac05ba000cfafad3b187a1373dfdcaaa4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the data from <em>rhs</em>. <br /></td></tr>
<tr class="separator:ac05ba000cfafad3b187a1373dfdcaaa4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab571ddc904088ef1855837a559d5291a"><td class="memItemLeft" align="right" valign="top"><a id="ab571ddc904088ef1855837a559d5291a"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d43/structez_hybrid_string_base.htm#ab571ddc904088ef1855837a559d5291a">ezHybridStringBase</a> (<a class="el" href="../../d6/d43/structez_hybrid_string_base.htm">ezHybridStringBase</a> &amp;&amp;rhs, <a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:ab571ddc904088ef1855837a559d5291a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Moves the data from <em>rhs</em>. <br /></td></tr>
<tr class="separator:ab571ddc904088ef1855837a559d5291a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b556525541f47589a9e7ef5cba2ff5d"><td class="memItemLeft" align="right" valign="top"><a id="a6b556525541f47589a9e7ef5cba2ff5d"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d43/structez_hybrid_string_base.htm#a6b556525541f47589a9e7ef5cba2ff5d">ezHybridStringBase</a> (const char *rhs, <a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:a6b556525541f47589a9e7ef5cba2ff5d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the data from <em>rhs</em>. <br /></td></tr>
<tr class="separator:a6b556525541f47589a9e7ef5cba2ff5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb4af3ad3dd52439de3728062981a840"><td class="memItemLeft" align="right" valign="top"><a id="acb4af3ad3dd52439de3728062981a840"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d43/structez_hybrid_string_base.htm#acb4af3ad3dd52439de3728062981a840">ezHybridStringBase</a> (const wchar_t *rhs, <a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:acb4af3ad3dd52439de3728062981a840"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the data from <em>rhs</em>. <br /></td></tr>
<tr class="separator:acb4af3ad3dd52439de3728062981a840"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab40ea7b7665ecb669ecada8fd8f79a7e"><td class="memItemLeft" align="right" valign="top"><a id="ab40ea7b7665ecb669ecada8fd8f79a7e"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d43/structez_hybrid_string_base.htm#ab40ea7b7665ecb669ecada8fd8f79a7e">ezHybridStringBase</a> (const <a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a> &amp;rhs, <a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:ab40ea7b7665ecb669ecada8fd8f79a7e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the data from <em>rhs</em>. <br /></td></tr>
<tr class="separator:ab40ea7b7665ecb669ecada8fd8f79a7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a940438aa20cebfefd9fa69b476a6b03f"><td class="memItemLeft" align="right" valign="top"><a id="a940438aa20cebfefd9fa69b476a6b03f"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d43/structez_hybrid_string_base.htm#a940438aa20cebfefd9fa69b476a6b03f">ezHybridStringBase</a> (const <a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a> &amp;rhs, <a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:a940438aa20cebfefd9fa69b476a6b03f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the data from <em>rhs</em>. <br /></td></tr>
<tr class="separator:a940438aa20cebfefd9fa69b476a6b03f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab0690446e3325baaf371cf94c333adc1"><td class="memItemLeft" align="right" valign="top"><a id="ab0690446e3325baaf371cf94c333adc1"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d43/structez_hybrid_string_base.htm#ab0690446e3325baaf371cf94c333adc1">ezHybridStringBase</a> (<a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a> &amp;&amp;rhs, <a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:ab0690446e3325baaf371cf94c333adc1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Moves the data from <em>rhs</em>. <br /></td></tr>
<tr class="separator:ab0690446e3325baaf371cf94c333adc1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae62faf872800bba225ee53e73dff7289"><td class="memItemLeft" align="right" valign="top"><a id="ae62faf872800bba225ee53e73dff7289"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d43/structez_hybrid_string_base.htm#ae62faf872800bba225ee53e73dff7289">~ezHybridStringBase</a> ()</td></tr>
<tr class="memdesc:ae62faf872800bba225ee53e73dff7289"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor. <br /></td></tr>
<tr class="separator:ae62faf872800bba225ee53e73dff7289"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18183bd86269e0bb7124f5dd4f27b2e5"><td class="memItemLeft" align="right" valign="top"><a id="a18183bd86269e0bb7124f5dd4f27b2e5"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d43/structez_hybrid_string_base.htm#a18183bd86269e0bb7124f5dd4f27b2e5">operator=</a> (const <a class="el" href="../../d6/d43/structez_hybrid_string_base.htm">ezHybridStringBase</a> &amp;rhs)</td></tr>
<tr class="memdesc:a18183bd86269e0bb7124f5dd4f27b2e5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the data from <em>rhs</em>. <br /></td></tr>
<tr class="separator:a18183bd86269e0bb7124f5dd4f27b2e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55dbfd982101ad25513f432b624ee7df"><td class="memItemLeft" align="right" valign="top"><a id="a55dbfd982101ad25513f432b624ee7df"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d43/structez_hybrid_string_base.htm#a55dbfd982101ad25513f432b624ee7df">operator=</a> (<a class="el" href="../../d6/d43/structez_hybrid_string_base.htm">ezHybridStringBase</a> &amp;&amp;rhs)</td></tr>
<tr class="memdesc:a55dbfd982101ad25513f432b624ee7df"><td class="mdescLeft">&#160;</td><td class="mdescRight">Moves the data from <em>rhs</em>. <br /></td></tr>
<tr class="separator:a55dbfd982101ad25513f432b624ee7df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8732f9ecbcab3c7af4de41a9bd89df03"><td class="memItemLeft" align="right" valign="top"><a id="a8732f9ecbcab3c7af4de41a9bd89df03"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d43/structez_hybrid_string_base.htm#a8732f9ecbcab3c7af4de41a9bd89df03">operator=</a> (const char *rhs)</td></tr>
<tr class="memdesc:a8732f9ecbcab3c7af4de41a9bd89df03"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the data from <em>rhs</em>. <br /></td></tr>
<tr class="separator:a8732f9ecbcab3c7af4de41a9bd89df03"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae68d1a260ef632266a596419853b12aa"><td class="memItemLeft" align="right" valign="top"><a id="ae68d1a260ef632266a596419853b12aa"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d43/structez_hybrid_string_base.htm#ae68d1a260ef632266a596419853b12aa">operator=</a> (const wchar_t *rhs)</td></tr>
<tr class="memdesc:ae68d1a260ef632266a596419853b12aa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the data from <em>rhs</em>. <br /></td></tr>
<tr class="separator:ae68d1a260ef632266a596419853b12aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a144a0639f006201f931fd05200f260f5"><td class="memItemLeft" align="right" valign="top"><a id="a144a0639f006201f931fd05200f260f5"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d43/structez_hybrid_string_base.htm#a144a0639f006201f931fd05200f260f5">operator=</a> (const <a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a> &amp;rhs)</td></tr>
<tr class="memdesc:a144a0639f006201f931fd05200f260f5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the data from <em>rhs</em>. <br /></td></tr>
<tr class="separator:a144a0639f006201f931fd05200f260f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c0ddca8b52667378bb4aa181ba27e8c"><td class="memItemLeft" align="right" valign="top"><a id="a3c0ddca8b52667378bb4aa181ba27e8c"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d43/structez_hybrid_string_base.htm#a3c0ddca8b52667378bb4aa181ba27e8c">operator=</a> (const <a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a> &amp;rhs)</td></tr>
<tr class="memdesc:a3c0ddca8b52667378bb4aa181ba27e8c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the data from <em>rhs</em>. <br /></td></tr>
<tr class="separator:a3c0ddca8b52667378bb4aa181ba27e8c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a397d42cc575aff87ad3184a73c3cdbd1"><td class="memItemLeft" align="right" valign="top"><a id="a397d42cc575aff87ad3184a73c3cdbd1"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d43/structez_hybrid_string_base.htm#a397d42cc575aff87ad3184a73c3cdbd1">operator=</a> (<a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a> &amp;&amp;rhs)</td></tr>
<tr class="memdesc:a397d42cc575aff87ad3184a73c3cdbd1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Moves the data from <em>rhs</em>. <br /></td></tr>
<tr class="separator:a397d42cc575aff87ad3184a73c3cdbd1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:a5e46a93a55134b0ea1b6b2f7b13fbbdc"><td class="memItemLeft" align="right" valign="top"><a id="a5e46a93a55134b0ea1b6b2f7b13fbbdc"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><b>ezStringBuilder</b></td></tr>
<tr class="separator:a5e46a93a55134b0ea1b6b2f7b13fbbdc"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_types_structez_string_base"><td colspan="2" onclick="javascript:toggleInherit('pub_types_structez_string_base')"><img src="../../closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt; ezHybridStringBase&lt; Size &gt; &gt;</a></td></tr>
<tr class="memitem:a6d70336d6bc99eb0ffc416dc5244e4ae inherit pub_types_structez_string_base"><td class="memItemLeft" align="right" valign="top"><a id="a6d70336d6bc99eb0ffc416dc5244e4ae"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>iterator</b> = <a class="el" href="../../d4/ddc/structez_string_iterator.htm">ezStringIterator</a></td></tr>
<tr class="separator:a6d70336d6bc99eb0ffc416dc5244e4ae inherit pub_types_structez_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a531d3947b6eec62f004ca77f662b78e1 inherit pub_types_structez_string_base"><td class="memItemLeft" align="right" valign="top"><a id="a531d3947b6eec62f004ca77f662b78e1"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>const_iterator</b> = <a class="el" href="../../d4/ddc/structez_string_iterator.htm">ezStringIterator</a></td></tr>
<tr class="separator:a531d3947b6eec62f004ca77f662b78e1 inherit pub_types_structez_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b2f3b0362604dfa9bbf4f157ac841d2 inherit pub_types_structez_string_base"><td class="memItemLeft" align="right" valign="top"><a id="a4b2f3b0362604dfa9bbf4f157ac841d2"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>reverse_iterator</b> = <a class="el" href="../../d6/d6b/structez_string_reverse_iterator.htm">ezStringReverseIterator</a></td></tr>
<tr class="separator:a4b2f3b0362604dfa9bbf4f157ac841d2 inherit pub_types_structez_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae708cb6d1cfcb5ca696272434087266c inherit pub_types_structez_string_base"><td class="memItemLeft" align="right" valign="top"><a id="ae708cb6d1cfcb5ca696272434087266c"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>const_reverse_iterator</b> = <a class="el" href="../../d6/d6b/structez_string_reverse_iterator.htm">ezStringReverseIterator</a></td></tr>
<tr class="separator:ae708cb6d1cfcb5ca696272434087266c inherit pub_types_structez_string_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;ezUInt16 Size&gt;<br />
struct ezHybridStringBase&lt; Size &gt;</h3>

<p>A string class for storing and passing around strings. </p>
<p>This class only allows read-access to its data. It does not allow modifications. To build / modify strings, use the <a class="el" href="../../d3/d88/classez_string_builder.htm" title="ezStringBuilder is a class that is meant for creating and modifying strings.">ezStringBuilder</a> class. <a class="el" href="../../d4/d53/structez_hybrid_string.htm">ezHybridString</a> has an internal array to store short strings without any memory allocations, it will dynamically allocate additional memory, if that cache is insufficient. Thus a hybrid string will always take up a certain amount of memory, which might be of concern when it is used as a member variable, in such cases you might want to use an <a class="el" href="../../d4/d53/structez_hybrid_string.htm">ezHybridString</a> with a very small internal array (1 would basically make it into a completely dynamic string). On the other hand, creating <a class="el" href="../../d4/d53/structez_hybrid_string.htm">ezHybridString</a> instances on the stack and working locally with them, is quite fast. Prefer to use the typedef'd string types <em>ezString</em>, <em>ezDynamicString</em>, <em>ezString32</em> etc. Most strings in an application are rather short, typically shorter than 20 characters. Use <em>ezString</em>, which is a typedef'd <a class="el" href="../../d4/d53/structez_hybrid_string.htm">ezHybridString</a> to use a cache size that is sufficient for more than 90% of all use cases. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="aaced07b48ca63da8bd4bacc7ebb1ad86"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aaced07b48ca63da8bd4bacc7ebb1ad86">&#9670;&nbsp;</a></span>Clear()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;ezUInt16 Size&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">void <a class="el" href="../../d6/d43/structez_hybrid_string_base.htm">ezHybridStringBase</a>&lt; Size &gt;::Clear</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Resets this string to an empty string. </p>
<p>This will not deallocate any previously allocated data, but reuse that memory. </p>

</div>
</div>
<a id="af20ba0a27cc7fd6c9c98f8bad4d4d18f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af20ba0a27cc7fd6c9c98f8bad4d4d18f">&#9670;&nbsp;</a></span>GetCharacterCount()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;ezUInt16 Size&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">EZ_ALWAYS_INLINE ezUInt32 <a class="el" href="../../d6/d43/structez_hybrid_string_base.htm">ezHybridStringBase</a>&lt; Size &gt;::GetCharacterCount</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the number of characters in this string. Might be less than GetElementCount, if it contains Utf8 multi-byte characters. </p>
<dl class="section note"><dt>Note</dt><dd>This is a slow operation, as it has to run through the entire string to count the Unicode characters. Only call this once and use the result as long as the string doesn't change. Don't call this in a loop. </dd></dl>

</div>
</div>
<a id="a57069e63a857e02a96ce058b7e08b5a2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a57069e63a857e02a96ce058b7e08b5a2">&#9670;&nbsp;</a></span>GetFirst()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;ezUInt16 Size&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a> <a class="el" href="../../d6/d43/structez_hybrid_string_base.htm">ezHybridStringBase</a>&lt; Size &gt;::GetFirst </td>
          <td>(</td>
          <td class="paramtype">ezUInt32&#160;</td>
          <td class="paramname"><em>uiNumCharacters</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns a view to the sub-string containing the first uiNumCharacters characters of this string. </p>
<p>Note that this view will only be valid as long as this <a class="el" href="../../d4/d53/structez_hybrid_string.htm">ezHybridString</a> lives. Once the original string is destroyed, all views to them will point into invalid memory. </p>

</div>
</div>
<a id="a81959562e8f0dc60eb14d5a02b92a608"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a81959562e8f0dc60eb14d5a02b92a608">&#9670;&nbsp;</a></span>GetLast()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;ezUInt16 Size&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a> <a class="el" href="../../d6/d43/structez_hybrid_string_base.htm">ezHybridStringBase</a>&lt; Size &gt;::GetLast </td>
          <td>(</td>
          <td class="paramtype">ezUInt32&#160;</td>
          <td class="paramname"><em>uiNumCharacters</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns a view to the sub-string containing the last uiNumCharacters characters of this string. </p>
<p>Note that this view will only be valid as long as this <a class="el" href="../../d4/d53/structez_hybrid_string.htm">ezHybridString</a> lives. Once the original string is destroyed, all views to them will point into invalid memory. </p>

</div>
</div>
<a id="a67adf8196229df696cb7d877bcb474ee"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a67adf8196229df696cb7d877bcb474ee">&#9670;&nbsp;</a></span>GetSubString()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;ezUInt16 Size&gt; </div>
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a> <a class="el" href="../../d6/d43/structez_hybrid_string_base.htm">ezHybridStringBase</a>&lt; Size &gt;::GetSubString </td>
          <td>(</td>
          <td class="paramtype">ezUInt32&#160;</td>
          <td class="paramname"><em>uiFirstCharacter</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ezUInt32&#160;</td>
          <td class="paramname"><em>uiNumCharacters</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns a view to a sub-string of this string, starting at character uiFirstCharacter, up until uiFirstCharacter + uiNumCharacters. </p>
<p>Note that this view will only be valid as long as this <a class="el" href="../../d4/d53/structez_hybrid_string.htm">ezHybridString</a> lives. Once the original string is destroyed, all views to them will point into invalid memory. </p>

</div>
</div>
<hr/>The documentation for this struct was generated from the following files:<ul>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Strings/<a class="el" href="../../db/db5/_string_8h_source.htm">String.h</a></li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Strings/Implementation/<a class="el" href="../../d7/dec/_all_strings__inl_8h_source.htm">AllStrings_inl.h</a></li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Strings/Implementation/<a class="el" href="../../d7/d4f/_string__inl_8h_source.htm">String_inl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d6/d43/structez_hybrid_string_base.htm">ezHybridStringBase</a></li>
    <li class="footer">Generated on Mon Mar 3 2025 17:23:52 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
