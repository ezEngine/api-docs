<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Containers/SmallArray.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 23.04</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d6/d8d/_small_array_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">SmallArray.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;Foundation/Algorithm/Sorting.h&gt;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;Foundation/Math/Math.h&gt;</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;Foundation/Memory/AllocatorWrapper.h&gt;</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;Foundation/Types/ArrayPtr.h&gt;</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160; </div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;constexpr ezUInt32 ezSmallInvalidIndex = 0xFFFF;</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160; </div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, ezUInt16 Size&gt;</div>
<div class="line"><a name="l00016"></a><span class="lineno"><a class="line" href="../../d4/d0b/classez_small_array_base.htm">   16</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase</a></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;{</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;  <span class="comment">// Only if the stored type is either POD or relocatable the hybrid array itself is also relocatable.</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;  EZ_DECLARE_MEM_RELOCATABLE_TYPE_CONDITIONAL(T);</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160; </div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;  <a class="code" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase</a>();                                                                    <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;  <a class="code" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase</a>(<span class="keyword">const</span> <a class="code" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase&lt;T, Size&gt;</a>&amp; other, <a class="code" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;  <a class="code" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase</a>(<span class="keyword">const</span> <a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const T&gt;</a>&amp; other, <a class="code" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a>* pAllocator);       <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;  <a class="code" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase</a>(<a class="code" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase&lt;T, Size&gt;</a>&amp;&amp; other, <a class="code" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a>* pAllocator);      <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;  ~<a class="code" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160; </div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;  <span class="comment">// Can&#39;t use regular assignment operators since we need to pass an allocator. Use CopyFrom or MoveFrom methods instead.</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> <a class="code" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase&lt;T, Size&gt;</a>&amp; rhs) = <span class="keyword">delete</span>;</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  <span class="keywordtype">void</span> operator=(<a class="code" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase&lt;T, Size&gt;</a>&amp;&amp; rhs) = <span class="keyword">delete</span>;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160; </div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d4/d0b/classez_small_array_base.htm#a97de18ad1c8ffa22da8c77907f10341b">CopyFrom</a>(<span class="keyword">const</span> <a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const T&gt;</a>&amp; other, <a class="code" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160; </div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d4/d0b/classez_small_array_base.htm#a8fccbb4e33c365fc8bdab7d9490cd9df">MoveFrom</a>(<a class="code" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase&lt;T, Size&gt;</a>&amp;&amp; other, <a class="code" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160; </div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  <span class="keyword">operator</span> <a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const T&gt;</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160; </div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  <span class="keyword">operator</span> <a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;T&gt;</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160; </div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d4/d0b/classez_small_array_base.htm#a0f88c6f77d9dfac59323e44c08eac677">operator==</a>(<span class="keyword">const</span> <a class="code" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase&lt;T, Size&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d4/d0b/classez_small_array_base.htm#a0f88c6f77d9dfac59323e44c08eac677">operator==</a>(<span class="keyword">const</span> <a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const T&gt;</a>&amp; rhs) <span class="keyword">const</span>;       <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160; </div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d4/d0b/classez_small_array_base.htm#af6e2c133e77abd3aeb8ae5d9f9458356">operator!=</a>(<span class="keyword">const</span> <a class="code" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase&lt;T, Size&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d4/d0b/classez_small_array_base.htm#af6e2c133e77abd3aeb8ae5d9f9458356">operator!=</a>(<span class="keyword">const</span> <a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const T&gt;</a>&amp; rhs) <span class="keyword">const</span>;       <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160; </div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;  <span class="keyword">const</span> T&amp; <a class="code" href="../../d4/d0b/classez_small_array_base.htm#a89b21be2199a007c03c93e590ac7b033">operator[]</a>(ezUInt32 uiIndex) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160; </div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;  T&amp; <a class="code" href="../../d4/d0b/classez_small_array_base.htm#a89b21be2199a007c03c93e590ac7b033">operator[]</a>(ezUInt32 uiIndex); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160; </div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d4/d0b/classez_small_array_base.htm#a4d71f8618557dcc52d63b7001f263966">SetCount</a>(ezUInt16 uiCount, <a class="code" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160; </div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d4/d0b/classez_small_array_base.htm#a4d71f8618557dcc52d63b7001f263966">SetCount</a>(ezUInt16 uiCount, <span class="keyword">const</span> T&amp; fillValue, <a class="code" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160; </div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> = <span class="keywordtype">void</span>&gt;                                                 <span class="comment">// Template is used to only conditionally compile this function in when it is actually used.</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d4/d0b/classez_small_array_base.htm#a286f03bad58c3ada8915769f43946307">SetCountUninitialized</a>(ezUInt16 uiCount, <a class="code" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160; </div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d4/d0b/classez_small_array_base.htm#a90abaa8230bacd395e9927b685d385f5">EnsureCount</a>(ezUInt16 uiCount, <a class="code" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160; </div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;  ezUInt32 <a class="code" href="../../d4/d0b/classez_small_array_base.htm#ac13be38fb1e58b0b94c405db9318792a">GetCount</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160; </div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d4/d0b/classez_small_array_base.htm#a0b66ce1a35b2f1659ba61c534969dae4">IsEmpty</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160; </div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d4/d0b/classez_small_array_base.htm#a5787f727bd1a20181e3e2150c7d37fc2">Clear</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160; </div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d4/d0b/classez_small_array_base.htm#a18878b1e8e942abb9861435942918a83">Contains</a>(<span class="keyword">const</span> T&amp; value) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160; </div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d4/d0b/classez_small_array_base.htm#a2c80fa30a421aac1360f240c5068c3b4">Insert</a>(<span class="keyword">const</span> T&amp; value, ezUInt32 uiIndex, <a class="code" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160; </div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d4/d0b/classez_small_array_base.htm#a2c80fa30a421aac1360f240c5068c3b4">Insert</a>(T&amp;&amp; value, ezUInt32 uiIndex, <a class="code" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160; </div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d4/d0b/classez_small_array_base.htm#a772bcf3f2189007961b0ba3b4ecf4213">RemoveAndCopy</a>(<span class="keyword">const</span> T&amp; value); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160; </div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d4/d0b/classez_small_array_base.htm#a820dddee4c830c06fab015b887e474bd">RemoveAndSwap</a>(<span class="keyword">const</span> T&amp; value); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160; </div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d4/d0b/classez_small_array_base.htm#a1738f62dcb310db3108fa70cff237c4f">RemoveAtAndCopy</a>(ezUInt32 uiIndex, ezUInt32 uiNumElements = 1); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160; </div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d4/d0b/classez_small_array_base.htm#abb3c873c53624b1888d3f7a84da00c89">RemoveAtAndSwap</a>(ezUInt32 uiIndex, ezUInt32 uiNumElements = 1); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160; </div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;  ezUInt32 <a class="code" href="../../d4/d0b/classez_small_array_base.htm#a6e93f15bb764fa59a641b642df5cc551">IndexOf</a>(<span class="keyword">const</span> T&amp; value, ezUInt32 uiStartIndex = 0) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160; </div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;  ezUInt32 <a class="code" href="../../d4/d0b/classez_small_array_base.htm#a985ee77c3751c5a007143f128af1bbd5">LastIndexOf</a>(<span class="keyword">const</span> T&amp; value, ezUInt32 uiStartIndex = ezSmallInvalidIndex) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160; </div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;  T&amp; <a class="code" href="../../d4/d0b/classez_small_array_base.htm#a803f880237ba7b654211a9595b6d6795">ExpandAndGetRef</a>(<a class="code" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160; </div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d4/d0b/classez_small_array_base.htm#a753b3d6c3754f4ef45ccb5bb58542339">PushBack</a>(<span class="keyword">const</span> T&amp; value, <a class="code" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160; </div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d4/d0b/classez_small_array_base.htm#a753b3d6c3754f4ef45ccb5bb58542339">PushBack</a>(T&amp;&amp; value, <a class="code" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160; </div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d4/d0b/classez_small_array_base.htm#a804a1289180252024587478ef0de74f2">PushBackUnchecked</a>(<span class="keyword">const</span> T&amp; value); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160; </div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d4/d0b/classez_small_array_base.htm#a804a1289180252024587478ef0de74f2">PushBackUnchecked</a>(T&amp;&amp; value); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160; </div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d4/d0b/classez_small_array_base.htm#aef512670ffc2e2aaca7fa4bc14e21bc3">PushBackRange</a>(<span class="keyword">const</span> <a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const T&gt;</a>&amp; range, <a class="code" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160; </div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d4/d0b/classez_small_array_base.htm#ad9f8a96a3f6070fb3f66a3a5a359016c">PopBack</a>(ezUInt32 uiCountToRemove = 1); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160; </div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;  T&amp; <a class="code" href="../../d4/d0b/classez_small_array_base.htm#a9f0ef09d5e9ad5c283728bb56a42f48d">PeekBack</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160; </div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;  <span class="keyword">const</span> T&amp; <a class="code" href="../../d4/d0b/classez_small_array_base.htm#a9f0ef09d5e9ad5c283728bb56a42f48d">PeekBack</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160; </div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Comparer&gt;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d4/d0b/classez_small_array_base.htm#a46465983c607874239317c3dcc8b12d4">Sort</a>(<span class="keyword">const</span> Comparer&amp; comparer); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160; </div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d4/d0b/classez_small_array_base.htm#a46465983c607874239317c3dcc8b12d4">Sort</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160; </div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;  T* <a class="code" href="../../d4/d0b/classez_small_array_base.htm#a035aabb33113bf853276208dcb524f04">GetData</a>();</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160; </div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;  <span class="keyword">const</span> T* <a class="code" href="../../d4/d0b/classez_small_array_base.htm#a035aabb33113bf853276208dcb524f04">GetData</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160; </div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;  <a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;T&gt;</a> <a class="code" href="../../d4/d0b/classez_small_array_base.htm#a258eaf177ae66072d013917c8f439b2d">GetArrayPtr</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160; </div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;  <a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const T&gt;</a> <a class="code" href="../../d4/d0b/classez_small_array_base.htm#a258eaf177ae66072d013917c8f439b2d">GetArrayPtr</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160; </div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;  <a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;typename ezArrayPtr&lt;T&gt;::ByteType</a>&gt; <a class="code" href="../../d4/d0b/classez_small_array_base.htm#aeb5683c87ebb948913b951385175a88a">GetByteArrayPtr</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160; </div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;  <a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;typename ezArrayPtr&lt;const T&gt;::ByteType</a>&gt; <a class="code" href="../../d4/d0b/classez_small_array_base.htm#aeb5683c87ebb948913b951385175a88a">GetByteArrayPtr</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160; </div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d4/d0b/classez_small_array_base.htm#a2ec2671d06fe7466a6ede942ead4c39e">Reserve</a>(ezUInt16 uiCapacity, <a class="code" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160; </div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d4/d0b/classez_small_array_base.htm#adcff1737aa5d9a233bd3231897aa290b">Compact</a>(<a class="code" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160; </div>
<div class="line"><a name="l00169"></a><span class="lineno"><a class="line" href="../../d4/d0b/classez_small_array_base.htm#a88383b5d42c0b93a8fd424db57909098">  169</a></span>&#160;  ezUInt32 <a class="code" href="../../d4/d0b/classez_small_array_base.htm#a88383b5d42c0b93a8fd424db57909098">GetCapacity</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_uiCapacity; }</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160; </div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;  ezUInt64 <a class="code" href="../../d4/d0b/classez_small_array_base.htm#acfcee52c57545f1c462ef72c5271c416">GetHeapMemoryUsage</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160; </div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;  <span class="keyword">using</span> const_iterator = <span class="keyword">const</span> T*;</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;  <span class="keyword">using</span> const_reverse_iterator = <a class="code" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">const_reverse_pointer_iterator&lt;T&gt;</a>;</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;  <span class="keyword">using</span> iterator = T*;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;  <span class="keyword">using</span> reverse_iterator = <a class="code" href="../../d3/df2/structreverse__pointer__iterator.htm">reverse_pointer_iterator&lt;T&gt;</a>;</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160; </div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;  <span class="keyword">const</span> U&amp; GetUserData() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160; </div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;  U&amp; GetUserData(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160; </div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;  <span class="keyword">enum</span></div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;  {</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    CAPACITY_ALIGNMENT = 4</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;  };</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160; </div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;  <span class="keywordtype">void</span> SetCapacity(ezUInt16 uiCapacity, <a class="code" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a>* pAllocator);</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160; </div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;  T* GetElementsPtr();</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;  <span class="keyword">const</span> T* GetElementsPtr() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160; </div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;  ezUInt16 m_uiCount = 0;</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;  ezUInt16 m_uiCapacity = Size;</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160; </div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;  ezUInt32 m_uiUserData = 0;</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160; </div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;  <span class="keyword">union</span></div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;  {</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    <span class="keyword">struct </span><span class="keyword">alignas</span>(EZ_ALIGNMENT_OF(T))</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;    {</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;      ezUInt8 m_StaticData[Size * <span class="keyword">sizeof</span>(T)];</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    };</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160; </div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    T* m_pElements = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;  };</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;};</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160; </div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160; </div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, ezUInt16 Size, <span class="keyword">typename</span> AllocatorWrapper = ezDefaultAllocatorWrapper&gt;</div>
<div class="line"><a name="l00216"></a><span class="lineno"><a class="line" href="../../d0/d0c/classez_small_array.htm">  216</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d0/d0c/classez_small_array.htm">ezSmallArray</a> : <span class="keyword">public</span> <a class="code" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase</a>&lt;T, Size&gt;</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;{</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;  <span class="keyword">using</span> <a class="code" href="../../d4/d0b/classez_small_array_base.htm">SUPER</a> = <a class="code" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase&lt;T, Size&gt;</a>;</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160; </div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;  <span class="comment">// Only if the stored type is either POD or relocatable the hybrid array itself is also relocatable.</span></div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;  EZ_DECLARE_MEM_RELOCATABLE_TYPE_CONDITIONAL(T);</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160; </div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;  <a class="code" href="../../d0/d0c/classez_small_array.htm">ezSmallArray</a>();</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160; </div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;  <a class="code" href="../../d0/d0c/classez_small_array.htm">ezSmallArray</a>(<span class="keyword">const</span> <a class="code" href="../../d0/d0c/classez_small_array.htm">ezSmallArray&lt;T, Size, AllocatorWrapper&gt;</a>&amp; other);</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;  <a class="code" href="../../d0/d0c/classez_small_array.htm">ezSmallArray</a>(<span class="keyword">const</span> <a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const T&gt;</a>&amp; other);</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;  <a class="code" href="../../d0/d0c/classez_small_array.htm">ezSmallArray</a>(<a class="code" href="../../d0/d0c/classez_small_array.htm">ezSmallArray&lt;T, Size, AllocatorWrapper&gt;</a>&amp;&amp; other);</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160; </div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;  ~<a class="code" href="../../d0/d0c/classez_small_array.htm">ezSmallArray</a>();</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160; </div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> <a class="code" href="../../d0/d0c/classez_small_array.htm">ezSmallArray&lt;T, Size, AllocatorWrapper&gt;</a>&amp; rhs);</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> <a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const T&gt;</a>&amp; rhs);</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;  <span class="keywordtype">void</span> operator=(<a class="code" href="../../d0/d0c/classez_small_array.htm">ezSmallArray&lt;T, Size, AllocatorWrapper&gt;</a>&amp;&amp; rhs) noexcept;</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160; </div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;  <span class="keywordtype">void</span> SetCount(ezUInt16 uiCount);                     <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;  <span class="keywordtype">void</span> SetCount(ezUInt16 uiCount, <span class="keyword">const</span> T&amp; fillValue); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;  <span class="keywordtype">void</span> EnsureCount(ezUInt16 uiCount);                  <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160; </div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> = <span class="keywordtype">void</span>&gt;</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;  <span class="keywordtype">void</span> SetCountUninitialized(ezUInt16 uiCount); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160; </div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;  <span class="keywordtype">void</span> Insert(<span class="keyword">const</span> T&amp; value, ezUInt32 uiIndex); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;  <span class="keywordtype">void</span> Insert(T&amp;&amp; value, ezUInt32 uiIndex);      <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160; </div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;  T&amp; ExpandAndGetRef();                                 <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;  <span class="keywordtype">void</span> PushBack(<span class="keyword">const</span> T&amp; value);                        <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;  <span class="keywordtype">void</span> PushBack(T&amp;&amp; value);                             <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;  <span class="keywordtype">void</span> PushBackRange(<span class="keyword">const</span> <a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const T&gt;</a>&amp; range); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160; </div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;  <span class="keywordtype">void</span> Reserve(ezUInt16 uiCapacity);</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;  <span class="keywordtype">void</span> Compact();</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;};</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160; </div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;<span class="preprocessor">#include &lt;Foundation/Containers/Implementation/SmallArray_inl.h&gt;</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassez_small_array_base_htm_a286f03bad58c3ada8915769f43946307"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#a286f03bad58c3ada8915769f43946307">ezSmallArrayBase::SetCountUninitialized</a></div><div class="ttdeci">void SetCountUninitialized(ezUInt16 uiCount, ezAllocatorBase *pAllocator)</div><div class="ttdoc">Resizes the array to have exactly uiCount elements. Extra elements might be uninitialized.</div><div class="ttdef"><b>Definition:</b> SmallArray_inl.h:200</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_a89b21be2199a007c03c93e590ac7b033"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#a89b21be2199a007c03c93e590ac7b033">ezSmallArrayBase::operator[]</a></div><div class="ttdeci">const T &amp; operator[](ezUInt32 uiIndex) const</div><div class="ttdoc">Returns the element at the given index. Does bounds checks in debug builds.</div><div class="ttdef"><b>Definition:</b> SmallArray_inl.h:138</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_ac13be38fb1e58b0b94c405db9318792a"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#ac13be38fb1e58b0b94c405db9318792a">ezSmallArrayBase::GetCount</a></div><div class="ttdeci">ezUInt32 GetCount() const</div><div class="ttdoc">Returns the number of active elements in the array.</div><div class="ttdef"><b>Definition:</b> SmallArray_inl.h:220</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_a772bcf3f2189007961b0ba3b4ecf4213"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#a772bcf3f2189007961b0ba3b4ecf4213">ezSmallArrayBase::RemoveAndCopy</a></div><div class="ttdeci">bool RemoveAndCopy(const T &amp;value)</div><div class="ttdoc">Removes the first occurrence of value and fills the gap by shifting all following elements.</div><div class="ttdef"><b>Definition:</b> SmallArray_inl.h:267</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_a2ec2671d06fe7466a6ede942ead4c39e"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#a2ec2671d06fe7466a6ede942ead4c39e">ezSmallArrayBase::Reserve</a></div><div class="ttdeci">void Reserve(ezUInt16 uiCapacity, ezAllocatorBase *pAllocator)</div><div class="ttdoc">Expands the array so it can at least store the given capacity.</div><div class="ttdef"><b>Definition:</b> SmallArray_inl.h:496</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_acfcee52c57545f1c462ef72c5271c416"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#acfcee52c57545f1c462ef72c5271c416">ezSmallArrayBase::GetHeapMemoryUsage</a></div><div class="ttdeci">ezUInt64 GetHeapMemoryUsage() const</div><div class="ttdoc">Returns the amount of bytes that are currently allocated on the heap.</div><div class="ttdef"><b>Definition:</b> SmallArray_inl.h:536</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_ad9f8a96a3f6070fb3f66a3a5a359016c"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#ad9f8a96a3f6070fb3f66a3a5a359016c">ezSmallArrayBase::PopBack</a></div><div class="ttdeci">void PopBack(ezUInt32 uiCountToRemove=1)</div><div class="ttdoc">Removes count elements from the end of the array.</div><div class="ttdef"><b>Definition:</b> SmallArray_inl.h:410</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_a4d71f8618557dcc52d63b7001f263966"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#a4d71f8618557dcc52d63b7001f263966">ezSmallArrayBase::SetCount</a></div><div class="ttdeci">void SetCount(ezUInt16 uiCount, ezAllocatorBase *pAllocator)</div><div class="ttdoc">Resizes the array to have exactly uiCount elements. Default constructs extra elements if the array is...</div><div class="ttdef"><b>Definition:</b> SmallArray_inl.h:152</div></div>
<div class="ttc" id="aclassez_array_ptr_htm"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a></div><div class="ttdoc">This class encapsulates an array and it's size. It is recommended to use this class instead of plain ...</div><div class="ttdef"><b>Definition:</b> ArrayPtr.h:36</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_a753b3d6c3754f4ef45ccb5bb58542339"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#a753b3d6c3754f4ef45ccb5bb58542339">ezSmallArrayBase::PushBack</a></div><div class="ttdeci">void PushBack(const T &amp;value, ezAllocatorBase *pAllocator)</div><div class="ttdoc">Pushes value at the end of the array.</div><div class="ttdef"><b>Definition:</b> SmallArray_inl.h:364</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_a0f88c6f77d9dfac59323e44c08eac677"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#a0f88c6f77d9dfac59323e44c08eac677">ezSmallArrayBase::operator==</a></div><div class="ttdeci">bool operator==(const ezSmallArrayBase&lt; T, Size &gt; &amp;rhs) const</div><div class="ttdoc">Compares this array to another contiguous array type.</div><div class="ttdef"><b>Definition:</b> SmallArray_inl.h:111</div></div>
<div class="ttc" id="astructconst__reverse__pointer__iterator_htm"><div class="ttname"><a href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">const_reverse_pointer_iterator</a></div><div class="ttdoc">Base class for Pointer like reverse iterators.</div><div class="ttdef"><b>Definition:</b> ArrayIterator.h:151</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_adcff1737aa5d9a233bd3231897aa290b"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#adcff1737aa5d9a233bd3231897aa290b">ezSmallArrayBase::Compact</a></div><div class="ttdeci">void Compact(ezAllocatorBase *pAllocator)</div><div class="ttdoc">Tries to compact the array to avoid wasting memory. The resulting capacity is at least 'GetCount' (no...</div><div class="ttdef"><b>Definition:</b> SmallArray_inl.h:512</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_aeb5683c87ebb948913b951385175a88a"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#aeb5683c87ebb948913b951385175a88a">ezSmallArrayBase::GetByteArrayPtr</a></div><div class="ttdeci">ezArrayPtr&lt; typename ezArrayPtr&lt; T &gt;::ByteType &gt; GetByteArrayPtr()</div><div class="ttdoc">Returns a byte array pointer to the array data, or an empty array pointer if the array is empty.</div><div class="ttdef"><b>Definition:</b> SmallArray_inl.h:484</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_af6e2c133e77abd3aeb8ae5d9f9458356"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#af6e2c133e77abd3aeb8ae5d9f9458356">ezSmallArrayBase::operator!=</a></div><div class="ttdeci">bool operator!=(const ezSmallArrayBase&lt; T, Size &gt; &amp;rhs) const</div><div class="ttdoc">Compares this array to another contiguous array type.</div><div class="ttdef"><b>Definition:</b> SmallArray_inl.h:126</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_a18878b1e8e942abb9861435942918a83"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#a18878b1e8e942abb9861435942918a83">ezSmallArrayBase::Contains</a></div><div class="ttdeci">bool Contains(const T &amp;value) const</div><div class="ttdoc">Checks whether the given value can be found in the array. O(n) complexity.</div><div class="ttdef"><b>Definition:</b> SmallArray_inl.h:239</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_a88383b5d42c0b93a8fd424db57909098"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#a88383b5d42c0b93a8fd424db57909098">ezSmallArrayBase::GetCapacity</a></div><div class="ttdeci">ezUInt32 GetCapacity() const</div><div class="ttdoc">Returns the reserved number of elements that the array can hold without reallocating.</div><div class="ttdef"><b>Definition:</b> SmallArray.h:169</div></div>
<div class="ttc" id="aclassez_allocator_base_htm"><div class="ttname"><a href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a></div><div class="ttdoc">Base class for all memory allocators.</div><div class="ttdef"><b>Definition:</b> AllocatorBase.h:22</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_a2c80fa30a421aac1360f240c5068c3b4"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#a2c80fa30a421aac1360f240c5068c3b4">ezSmallArrayBase::Insert</a></div><div class="ttdeci">void Insert(const T &amp;value, ezUInt32 uiIndex, ezAllocatorBase *pAllocator)</div><div class="ttdoc">Inserts value at index by shifting all following elements.</div><div class="ttdef"><b>Definition:</b> SmallArray_inl.h:245</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_a804a1289180252024587478ef0de74f2"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#a804a1289180252024587478ef0de74f2">ezSmallArrayBase::PushBackUnchecked</a></div><div class="ttdeci">void PushBackUnchecked(const T &amp;value)</div><div class="ttdoc">Pushes value at the end of the array. Does NOT ensure capacity.</div><div class="ttdef"><b>Definition:</b> SmallArray_inl.h:382</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_aef512670ffc2e2aaca7fa4bc14e21bc3"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#aef512670ffc2e2aaca7fa4bc14e21bc3">ezSmallArrayBase::PushBackRange</a></div><div class="ttdeci">void PushBackRange(const ezArrayPtr&lt; const T &gt; &amp;range, ezAllocatorBase *pAllocator)</div><div class="ttdoc">Pushes all elements in range at the end of the array. Increases the capacity if necessary.</div><div class="ttdef"><b>Definition:</b> SmallArray_inl.h:400</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_a6e93f15bb764fa59a641b642df5cc551"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#a6e93f15bb764fa59a641b642df5cc551">ezSmallArrayBase::IndexOf</a></div><div class="ttdeci">ezUInt32 IndexOf(const T &amp;value, ezUInt32 uiStartIndex=0) const</div><div class="ttdoc">Searches for the first occurrence of the given value and returns its index or ezInvalidIndex if not f...</div><div class="ttdef"><b>Definition:</b> SmallArray_inl.h:322</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_a46465983c607874239317c3dcc8b12d4"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#a46465983c607874239317c3dcc8b12d4">ezSmallArrayBase::Sort</a></div><div class="ttdeci">void Sort()</div><div class="ttdoc">Sort with default comparer.</div><div class="ttdef"><b>Definition:</b> SmallArray_inl.h:444</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_abb3c873c53624b1888d3f7a84da00c89"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#abb3c873c53624b1888d3f7a84da00c89">ezSmallArrayBase::RemoveAtAndSwap</a></div><div class="ttdeci">void RemoveAtAndSwap(ezUInt32 uiIndex, ezUInt32 uiNumElements=1)</div><div class="ttdoc">Removes the element at index and fills the gap by swapping in the last element.</div><div class="ttdef"><b>Definition:</b> SmallArray_inl.h:302</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_a820dddee4c830c06fab015b887e474bd"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#a820dddee4c830c06fab015b887e474bd">ezSmallArrayBase::RemoveAndSwap</a></div><div class="ttdeci">bool RemoveAndSwap(const T &amp;value)</div><div class="ttdoc">Removes the first occurrence of value and fills the gap by swapping in the last element.</div><div class="ttdef"><b>Definition:</b> SmallArray_inl.h:279</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_a8fccbb4e33c365fc8bdab7d9490cd9df"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#a8fccbb4e33c365fc8bdab7d9490cd9df">ezSmallArrayBase::MoveFrom</a></div><div class="ttdeci">void MoveFrom(ezSmallArrayBase&lt; T, Size &gt; &amp;&amp;other, ezAllocatorBase *pAllocator)</div><div class="ttdoc">Moves the data from some other array into this one.</div><div class="ttdef"><b>Definition:</b> SmallArray_inl.h:69</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_a97de18ad1c8ffa22da8c77907f10341b"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#a97de18ad1c8ffa22da8c77907f10341b">ezSmallArrayBase::CopyFrom</a></div><div class="ttdeci">void CopyFrom(const ezArrayPtr&lt; const T &gt; &amp;other, ezAllocatorBase *pAllocator)</div><div class="ttdoc">Copies the data from some other array into this one.</div><div class="ttdef"><b>Definition:</b> SmallArray_inl.h:32</div></div>
<div class="ttc" id="aclassez_small_array_base_htm"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase</a></div><div class="ttdoc">Implementation of a dynamically growing array with in-place storage and small memory overhead.</div><div class="ttdef"><b>Definition:</b> SmallArray.h:16</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_a258eaf177ae66072d013917c8f439b2d"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#a258eaf177ae66072d013917c8f439b2d">ezSmallArrayBase::GetArrayPtr</a></div><div class="ttdeci">ezArrayPtr&lt; T &gt; GetArrayPtr()</div><div class="ttdoc">Returns an array pointer to the array data, or an empty array pointer if the array is empty.</div><div class="ttdef"><b>Definition:</b> SmallArray_inl.h:472</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_a035aabb33113bf853276208dcb524f04"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#a035aabb33113bf853276208dcb524f04">ezSmallArrayBase::GetData</a></div><div class="ttdeci">T * GetData()</div><div class="ttdoc">Returns a pointer to the array data, or nullptr if the array is empty.</div><div class="ttdef"><b>Definition:</b> SmallArray_inl.h:454</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_a5787f727bd1a20181e3e2150c7d37fc2"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#a5787f727bd1a20181e3e2150c7d37fc2">ezSmallArrayBase::Clear</a></div><div class="ttdeci">void Clear()</div><div class="ttdoc">Clears the array.</div><div class="ttdef"><b>Definition:</b> SmallArray_inl.h:232</div></div>
<div class="ttc" id="aclassez_small_array_htm"><div class="ttname"><a href="../../d0/d0c/classez_small_array.htm">ezSmallArray</a></div><div class="ttdef"><b>Definition:</b> SmallArray.h:216</div></div>
<div class="ttc" id="astructreverse__pointer__iterator_htm"><div class="ttname"><a href="../../d3/df2/structreverse__pointer__iterator.htm">reverse_pointer_iterator</a></div><div class="ttdoc">Non-Const class for Pointer like reverse iterators.</div><div class="ttdef"><b>Definition:</b> ArrayIterator.h:215</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_a90abaa8230bacd395e9927b685d385f5"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#a90abaa8230bacd395e9927b685d385f5">ezSmallArrayBase::EnsureCount</a></div><div class="ttdeci">void EnsureCount(ezUInt16 uiCount, ezAllocatorBase *pAllocator)</div><div class="ttdoc">Ensures the container has at least uiCount elements. Ie. calls SetCount() if the container has fewer ...</div><div class="ttdef"><b>Definition:</b> SmallArray_inl.h:190</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_a803f880237ba7b654211a9595b6d6795"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#a803f880237ba7b654211a9595b6d6795">ezSmallArrayBase::ExpandAndGetRef</a></div><div class="ttdeci">T &amp; ExpandAndGetRef(ezAllocatorBase *pAllocator)</div><div class="ttdoc">Grows the array by one element and returns a reference to the newly created element.</div><div class="ttdef"><b>Definition:</b> SmallArray_inl.h:348</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_a1738f62dcb310db3108fa70cff237c4f"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#a1738f62dcb310db3108fa70cff237c4f">ezSmallArrayBase::RemoveAtAndCopy</a></div><div class="ttdeci">void RemoveAtAndCopy(ezUInt32 uiIndex, ezUInt32 uiNumElements=1)</div><div class="ttdoc">Removes the element at index and fills the gap by shifting all following elements.</div><div class="ttdef"><b>Definition:</b> SmallArray_inl.h:291</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_a9f0ef09d5e9ad5c283728bb56a42f48d"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#a9f0ef09d5e9ad5c283728bb56a42f48d">ezSmallArrayBase::PeekBack</a></div><div class="ttdeci">T &amp; PeekBack()</div><div class="ttdoc">Returns the last element of the array.</div><div class="ttdef"><b>Definition:</b> SmallArray_inl.h:419</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_a0b66ce1a35b2f1659ba61c534969dae4"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#a0b66ce1a35b2f1659ba61c534969dae4">ezSmallArrayBase::IsEmpty</a></div><div class="ttdeci">bool IsEmpty() const</div><div class="ttdoc">Returns true, if the array does not contain any elements.</div><div class="ttdef"><b>Definition:</b> SmallArray_inl.h:226</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_a985ee77c3751c5a007143f128af1bbd5"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#a985ee77c3751c5a007143f128af1bbd5">ezSmallArrayBase::LastIndexOf</a></div><div class="ttdeci">ezUInt32 LastIndexOf(const T &amp;value, ezUInt32 uiStartIndex=ezSmallInvalidIndex) const</div><div class="ttdoc">Searches for the last occurrence of the given value and returns its index or ezInvalidIndex if not fo...</div><div class="ttdef"><b>Definition:</b> SmallArray_inl.h:335</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_6b567e6755824bd0b8ffd754b9d67ac0.htm">Containers</a></li><li class="navelem"><b>SmallArray.h</b></li>
    <li class="footer">Generated on Sat Mar 25 2023 19:21:55 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
