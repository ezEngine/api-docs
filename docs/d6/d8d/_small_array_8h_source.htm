<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Containers/SmallArray.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">ezEngine<span id="projectnumber">&#160;Release 25.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function() { init_codefold(1); });
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('d6/d8d/_small_array_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">SmallArray.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="preprocessor">#include &lt;Foundation/Algorithm/Sorting.h&gt;</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="preprocessor">#include &lt;Foundation/Math/Math.h&gt;</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="preprocessor">#include &lt;Foundation/Memory/AllocatorWrapper.h&gt;</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="preprocessor">#include &lt;Foundation/Types/ArrayPtr.h&gt;</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span> </div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="keyword">constexpr</span> ezUInt32 ezSmallInvalidIndex = 0xFFFF;</div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span> </div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, ezUInt16 Size&gt;</div>
<div class="foldopen" id="foldopen00016" data-start="{" data-end="};">
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno"><a class="line" href="../../d4/d0b/classez_small_array_base.htm">   16</a></span><span class="keyword">class </span><a class="code hl_class" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase</a></div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span>{</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span>  <span class="comment">// Only if the stored type is either POD or relocatable the hybrid array itself is also relocatable.</span></div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span>  EZ_DECLARE_MEM_RELOCATABLE_TYPE_CONDITIONAL(T);</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span> </div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span>  <a class="code hl_class" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase</a>();                                                                <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span>  <a class="code hl_class" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase&lt;T, Size&gt;</a>&amp; other, <a class="code hl_class" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span>  <a class="code hl_class" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const T&gt;</a>&amp; other, <a class="code hl_class" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a>* pAllocator);       <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span>  <a class="code hl_class" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase</a>(<a class="code hl_class" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase&lt;T, Size&gt;</a>&amp;&amp; other, <a class="code hl_class" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a>* pAllocator);      <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span> </div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span>  <a class="code hl_class" href="../../d4/d0b/classez_small_array_base.htm">~ezSmallArrayBase</a>();                                                               <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span> </div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span>  <span class="comment">// Can&#39;t use regular assignment operators since we need to pass an allocator. Use CopyFrom or MoveFrom methods instead.</span></div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span>  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> <a class="code hl_class" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase&lt;T, Size&gt;</a>&amp; rhs) = <span class="keyword">delete</span>;</div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span>  <span class="keywordtype">void</span> operator=(<a class="code hl_class" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase&lt;T, Size&gt;</a>&amp;&amp; rhs) = <span class="keyword">delete</span>;</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span> </div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d4/d0b/classez_small_array_base.htm#a44628a75aa717a0ef2161fb4835b57ba">CopyFrom</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const T&gt;</a>&amp; other, <a class="code hl_class" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span> </div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d4/d0b/classez_small_array_base.htm#aa0df7cdbcae0aba5ee737c5ef2d6bcb9">MoveFrom</a>(<a class="code hl_class" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase&lt;T, Size&gt;</a>&amp;&amp; other, <a class="code hl_class" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span> </div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span>  <span class="keyword">operator</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const T&gt;</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span> </div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span>  <span class="keyword">operator</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;T&gt;</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span> </div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d4/d0b/classez_small_array_base.htm#a0f88c6f77d9dfac59323e44c08eac677">operator==</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase&lt;T, Size&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span>  EZ_ADD_DEFAULT_OPERATOR_NOTEQUAL(<span class="keyword">const</span> <a class="code hl_class" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase&lt;T, Size&gt;</a>&amp;);</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span> </div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span><span class="preprocessor">#if EZ_DISABLED(EZ_USE_CPP20_OPERATORS)</span></div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d4/d0b/classez_small_array_base.htm#a0f88c6f77d9dfac59323e44c08eac677">operator==</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const T&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>  EZ_ADD_DEFAULT_OPERATOR_NOTEQUAL(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const T&gt;</a>&amp;);</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span> </div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d4/d0b/classez_small_array_base.htm#a80dfcf73004b688a99a1952e12c3b467">operator&lt;</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase&lt;T, Size&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d4/d0b/classez_small_array_base.htm#a80dfcf73004b688a99a1952e12c3b467">operator&lt;</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const T&gt;</a>&amp; rhs) <span class="keyword">const</span>;       <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span> </div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>  <span class="keyword">const</span> T&amp; <a class="code hl_function" href="../../d4/d0b/classez_small_array_base.htm#a73ca2c3165047828ff1343eddf338033">operator[]</a>(ezUInt32 uiIndex) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span> </div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>  T&amp; <a class="code hl_function" href="../../d4/d0b/classez_small_array_base.htm#a73ca2c3165047828ff1343eddf338033">operator[]</a>(ezUInt32 uiIndex); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span> </div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d4/d0b/classez_small_array_base.htm#a2d97ba0e00466c81f50461e534af3559">SetCount</a>(ezUInt16 uiCount, <a class="code hl_class" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span> </div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d4/d0b/classez_small_array_base.htm#a2d97ba0e00466c81f50461e534af3559">SetCount</a>(ezUInt16 uiCount, <span class="keyword">const</span> T&amp; fillValue, <a class="code hl_class" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span> </div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> = <span class="keywordtype">void</span>&gt;                                             <span class="comment">// Template is used to only conditionally compile this function in when it is actually used.</span></div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d4/d0b/classez_small_array_base.htm#a4676e9e2da82f6f9b2782e453a1e9cb9">SetCountUninitialized</a>(ezUInt16 uiCount, <a class="code hl_class" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span> </div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d4/d0b/classez_small_array_base.htm#ac93d3e6417071debc5ad0563f9563978">EnsureCount</a>(ezUInt16 uiCount, <a class="code hl_class" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span> </div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>  ezUInt32 <a class="code hl_function" href="../../d4/d0b/classez_small_array_base.htm#ac13be38fb1e58b0b94c405db9318792a">GetCount</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span> </div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d4/d0b/classez_small_array_base.htm#a0b66ce1a35b2f1659ba61c534969dae4">IsEmpty</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span> </div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d4/d0b/classez_small_array_base.htm#a5787f727bd1a20181e3e2150c7d37fc2">Clear</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span> </div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d4/d0b/classez_small_array_base.htm#a18878b1e8e942abb9861435942918a83">Contains</a>(<span class="keyword">const</span> T&amp; value) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span> </div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d4/d0b/classez_small_array_base.htm#a53a6fa7d09ed5098bf8e4dbda3b5f429">Insert</a>(<span class="keyword">const</span> T&amp; value, ezUInt32 uiIndex, <a class="code hl_class" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span> </div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d4/d0b/classez_small_array_base.htm#a53a6fa7d09ed5098bf8e4dbda3b5f429">Insert</a>(T&amp;&amp; value, ezUInt32 uiIndex, <a class="code hl_class" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span> </div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d4/d0b/classez_small_array_base.htm#a772bcf3f2189007961b0ba3b4ecf4213">RemoveAndCopy</a>(<span class="keyword">const</span> T&amp; value); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span> </div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d4/d0b/classez_small_array_base.htm#a820dddee4c830c06fab015b887e474bd">RemoveAndSwap</a>(<span class="keyword">const</span> T&amp; value); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span> </div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d4/d0b/classez_small_array_base.htm#a45e132fd3e2e121cd9e1333e494c1c5c">RemoveAtAndCopy</a>(ezUInt32 uiIndex, ezUInt16 uiNumElements = 1); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span> </div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d4/d0b/classez_small_array_base.htm#a38c2e2dc9718e666167e9a8bf521df0d">RemoveAtAndSwap</a>(ezUInt32 uiIndex, ezUInt16 uiNumElements = 1); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span> </div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>  ezUInt32 <a class="code hl_function" href="../../d4/d0b/classez_small_array_base.htm#a6e93f15bb764fa59a641b642df5cc551">IndexOf</a>(<span class="keyword">const</span> T&amp; value, ezUInt32 uiStartIndex = 0) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span> </div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span>  ezUInt32 <a class="code hl_function" href="../../d4/d0b/classez_small_array_base.htm#a985ee77c3751c5a007143f128af1bbd5">LastIndexOf</a>(<span class="keyword">const</span> T&amp; value, ezUInt32 uiStartIndex = ezSmallInvalidIndex) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span> </div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span>  T&amp; <a class="code hl_function" href="../../d4/d0b/classez_small_array_base.htm#ab6c182c841c56b0ecdc83ea26a1c471c">ExpandAndGetRef</a>(<a class="code hl_class" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span> </div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d4/d0b/classez_small_array_base.htm#a74451b4388e083a5074881bc8836c6a4">PushBack</a>(<span class="keyword">const</span> T&amp; value, <a class="code hl_class" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span> </div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d4/d0b/classez_small_array_base.htm#a74451b4388e083a5074881bc8836c6a4">PushBack</a>(T&amp;&amp; value, <a class="code hl_class" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span> </div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d4/d0b/classez_small_array_base.htm#a804a1289180252024587478ef0de74f2">PushBackUnchecked</a>(<span class="keyword">const</span> T&amp; value); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span> </div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d4/d0b/classez_small_array_base.htm#a804a1289180252024587478ef0de74f2">PushBackUnchecked</a>(T&amp;&amp; value); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span> </div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d4/d0b/classez_small_array_base.htm#a945866dd7de01cb96b3f6bd95c086ad0">PushBackRange</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const T&gt;</a>&amp; range, <a class="code hl_class" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span> </div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d4/d0b/classez_small_array_base.htm#ad9f8a96a3f6070fb3f66a3a5a359016c">PopBack</a>(ezUInt32 uiCountToRemove = 1); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span> </div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span>  T&amp; <a class="code hl_function" href="../../d4/d0b/classez_small_array_base.htm#aa5a6fe2b087b6d55b4a66368e633dc88">PeekBack</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span> </div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span>  <span class="keyword">const</span> T&amp; <a class="code hl_function" href="../../d4/d0b/classez_small_array_base.htm#aa5a6fe2b087b6d55b4a66368e633dc88">PeekBack</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span> </div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Comparer&gt;</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d4/d0b/classez_small_array_base.htm#a46465983c607874239317c3dcc8b12d4">Sort</a>(<span class="keyword">const</span> Comparer&amp; comparer); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span> </div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d4/d0b/classez_small_array_base.htm#a46465983c607874239317c3dcc8b12d4">Sort</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span> </div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span>  T* <a class="code hl_function" href="../../d4/d0b/classez_small_array_base.htm#aaa9d377e69c087d2be3c4897ecce0471">GetData</a>();</div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span> </div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span>  <span class="keyword">const</span> T* <a class="code hl_function" href="../../d4/d0b/classez_small_array_base.htm#aaa9d377e69c087d2be3c4897ecce0471">GetData</a>() <span class="keyword">const</span>;</div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span> </div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span>  <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;T&gt;</a> <a class="code hl_function" href="../../d4/d0b/classez_small_array_base.htm#a27bc30d0e06cb01d8d5278245a6483f6">GetArrayPtr</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span> </div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span>  <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const T&gt;</a> <a class="code hl_function" href="../../d4/d0b/classez_small_array_base.htm#a27bc30d0e06cb01d8d5278245a6483f6">GetArrayPtr</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span> </div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span>  <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;typename ezArrayPtr&lt;T&gt;::ByteType</a>&gt; <a class="code hl_function" href="../../d4/d0b/classez_small_array_base.htm#a1fdc8ad1466dcecf86fbf92836988fe8">GetByteArrayPtr</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span> </div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span>  <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;typename ezArrayPtr&lt;const T&gt;::ByteType</a>&gt; <a class="code hl_function" href="../../d4/d0b/classez_small_array_base.htm#a1fdc8ad1466dcecf86fbf92836988fe8">GetByteArrayPtr</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span> </div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d4/d0b/classez_small_array_base.htm#a4db08fca7f530433e083498ed93afc37">Reserve</a>(ezUInt16 uiCapacity, <a class="code hl_class" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span> </div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d4/d0b/classez_small_array_base.htm#adec38160e7d270a3a00ec3d67c0f1144">Compact</a>(<a class="code hl_class" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a>* pAllocator); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span> </div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno"><a class="line" href="../../d4/d0b/classez_small_array_base.htm#a88383b5d42c0b93a8fd424db57909098">  174</a></span>  ezUInt32 <a class="code hl_function" href="../../d4/d0b/classez_small_array_base.htm#a88383b5d42c0b93a8fd424db57909098">GetCapacity</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_uiCapacity; }</div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span> </div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span>  ezUInt64 <a class="code hl_function" href="../../d4/d0b/classez_small_array_base.htm#acfcee52c57545f1c462ef72c5271c416">GetHeapMemoryUsage</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span> </div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span>  <span class="keyword">using </span>value_type = T;</div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span>  <span class="keyword">using </span>const_reference = <span class="keyword">const</span> T&amp;;</div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span>  <span class="keyword">using </span>const_iterator = <span class="keyword">const</span> T*;</div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span>  <span class="keyword">using </span>const_reverse_iterator = <a class="code hl_struct" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">const_reverse_pointer_iterator&lt;T&gt;</a>;</div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno">  183</span>  <span class="keyword">using </span>iterator = T*;</div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span>  <span class="keyword">using </span>reverse_iterator = <a class="code hl_struct" href="../../d3/df2/structreverse__pointer__iterator.htm">reverse_pointer_iterator&lt;T&gt;</a>;</div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span> </div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span>  <span class="keyword">const</span> U&amp; GetUserData() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span> </div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span>  U&amp; GetUserData();             <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span> </div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span><span class="keyword">protected</span>:</div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span>  <span class="keyword">enum</span></div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span>  {</div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span>    CAPACITY_ALIGNMENT = 4</div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span>  };</div>
<div class="line"><a id="l00197" name="l00197"></a><span class="lineno">  197</span> </div>
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno">  198</span>  <span class="keywordtype">void</span> SetCapacity(ezUInt16 uiCapacity, <a class="code hl_class" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a>* pAllocator);</div>
<div class="line"><a id="l00199" name="l00199"></a><span class="lineno">  199</span> </div>
<div class="line"><a id="l00200" name="l00200"></a><span class="lineno">  200</span>  T* GetElementsPtr();</div>
<div class="line"><a id="l00201" name="l00201"></a><span class="lineno">  201</span>  <span class="keyword">const</span> T* GetElementsPtr() <span class="keyword">const</span>;</div>
<div class="line"><a id="l00202" name="l00202"></a><span class="lineno">  202</span> </div>
<div class="line"><a id="l00203" name="l00203"></a><span class="lineno">  203</span>  ezUInt16 m_uiCount = 0;</div>
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno">  204</span>  ezUInt16 m_uiCapacity = Size;</div>
<div class="line"><a id="l00205" name="l00205"></a><span class="lineno">  205</span> </div>
<div class="line"><a id="l00206" name="l00206"></a><span class="lineno">  206</span>  ezUInt32 m_uiUserData = 0;</div>
<div class="line"><a id="l00207" name="l00207"></a><span class="lineno">  207</span> </div>
<div class="line"><a id="l00208" name="l00208"></a><span class="lineno">  208</span>  <span class="keyword">union</span></div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno">  209</span>  {</div>
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno">  210</span>    <span class="keyword">struct </span><span class="keyword">alignas</span>(alignof(T))</div>
<div class="line"><a id="l00211" name="l00211"></a><span class="lineno">  211</span>    {</div>
<div class="line"><a id="l00212" name="l00212"></a><span class="lineno">  212</span>      ezUInt8 m_StaticData[Size * <span class="keyword">sizeof</span>(T)];</div>
<div class="line"><a id="l00213" name="l00213"></a><span class="lineno">  213</span>    };</div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno">  214</span> </div>
<div class="line"><a id="l00215" name="l00215"></a><span class="lineno">  215</span>    T* m_pElements = <span class="keyword">nullptr</span>;</div>
<div class="line"><a id="l00216" name="l00216"></a><span class="lineno">  216</span>  };</div>
<div class="line"><a id="l00217" name="l00217"></a><span class="lineno">  217</span>};</div>
</div>
<div class="line"><a id="l00218" name="l00218"></a><span class="lineno">  218</span> </div>
<div class="line"><a id="l00220" name="l00220"></a><span class="lineno">  220</span> </div>
<div class="line"><a id="l00222" name="l00222"></a><span class="lineno">  222</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, ezUInt16 Size, <span class="keyword">typename</span> AllocatorWrapper = ezDefaultAllocatorWrapper&gt;</div>
<div class="foldopen" id="foldopen00223" data-start="{" data-end="};">
<div class="line"><a id="l00223" name="l00223"></a><span class="lineno"><a class="line" href="../../d0/d0c/classez_small_array.htm">  223</a></span><span class="keyword">class </span><a class="code hl_class" href="../../d0/d0c/classez_small_array.htm">ezSmallArray</a> : <span class="keyword">public</span> <a class="code hl_class" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase</a>&lt;T, Size&gt;</div>
<div class="line"><a id="l00224" name="l00224"></a><span class="lineno">  224</span>{</div>
<div class="line"><a id="l00225" name="l00225"></a><span class="lineno">  225</span>  <span class="keyword">using </span><a class="code hl_class" href="../../d4/d0b/classez_small_array_base.htm">SUPER</a> = <a class="code hl_class" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase&lt;T, Size&gt;</a>;</div>
<div class="line"><a id="l00226" name="l00226"></a><span class="lineno">  226</span> </div>
<div class="line"><a id="l00227" name="l00227"></a><span class="lineno">  227</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00228" name="l00228"></a><span class="lineno">  228</span>  <span class="comment">// Only if the stored type is either POD or relocatable the hybrid array itself is also relocatable.</span></div>
<div class="line"><a id="l00229" name="l00229"></a><span class="lineno">  229</span>  EZ_DECLARE_MEM_RELOCATABLE_TYPE_CONDITIONAL(T);</div>
<div class="line"><a id="l00230" name="l00230"></a><span class="lineno">  230</span> </div>
<div class="line"><a id="l00231" name="l00231"></a><span class="lineno">  231</span>  <a class="code hl_class" href="../../d0/d0c/classez_small_array.htm">ezSmallArray</a>();</div>
<div class="line"><a id="l00232" name="l00232"></a><span class="lineno">  232</span> </div>
<div class="line"><a id="l00233" name="l00233"></a><span class="lineno">  233</span>  <a class="code hl_class" href="../../d0/d0c/classez_small_array.htm">ezSmallArray</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d0/d0c/classez_small_array.htm">ezSmallArray&lt;T, Size, AllocatorWrapper&gt;</a>&amp; other);</div>
<div class="line"><a id="l00234" name="l00234"></a><span class="lineno">  234</span>  <span class="keyword">explicit</span> <a class="code hl_class" href="../../d0/d0c/classez_small_array.htm">ezSmallArray</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const T&gt;</a>&amp; other);</div>
<div class="line"><a id="l00235" name="l00235"></a><span class="lineno">  235</span>  <a class="code hl_class" href="../../d0/d0c/classez_small_array.htm">ezSmallArray</a>(<a class="code hl_class" href="../../d0/d0c/classez_small_array.htm">ezSmallArray&lt;T, Size, AllocatorWrapper&gt;</a>&amp;&amp; other);</div>
<div class="line"><a id="l00236" name="l00236"></a><span class="lineno">  236</span> </div>
<div class="line"><a id="l00237" name="l00237"></a><span class="lineno">  237</span>  <a class="code hl_class" href="../../d0/d0c/classez_small_array.htm">~ezSmallArray</a>();</div>
<div class="line"><a id="l00238" name="l00238"></a><span class="lineno">  238</span> </div>
<div class="line"><a id="l00239" name="l00239"></a><span class="lineno">  239</span>  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> <a class="code hl_class" href="../../d0/d0c/classez_small_array.htm">ezSmallArray&lt;T, Size, AllocatorWrapper&gt;</a>&amp; rhs);</div>
<div class="line"><a id="l00240" name="l00240"></a><span class="lineno">  240</span>  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const T&gt;</a>&amp; rhs);</div>
<div class="line"><a id="l00241" name="l00241"></a><span class="lineno">  241</span>  <span class="keywordtype">void</span> operator=(<a class="code hl_class" href="../../d0/d0c/classez_small_array.htm">ezSmallArray&lt;T, Size, AllocatorWrapper&gt;</a>&amp;&amp; rhs) <span class="keyword">noexcept</span>;</div>
<div class="line"><a id="l00242" name="l00242"></a><span class="lineno">  242</span> </div>
<div class="line"><a id="l00243" name="l00243"></a><span class="lineno">  243</span>  <span class="keywordtype">void</span> SetCount(ezUInt16 uiCount);                      <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00244" name="l00244"></a><span class="lineno">  244</span>  <span class="keywordtype">void</span> SetCount(ezUInt16 uiCount, <span class="keyword">const</span> T&amp; fillValue);  <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00245" name="l00245"></a><span class="lineno">  245</span>  <span class="keywordtype">void</span> EnsureCount(ezUInt16 uiCount);                   <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00246" name="l00246"></a><span class="lineno">  246</span> </div>
<div class="line"><a id="l00247" name="l00247"></a><span class="lineno">  247</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> = <span class="keywordtype">void</span>&gt;</div>
<div class="line"><a id="l00248" name="l00248"></a><span class="lineno">  248</span>  <span class="keywordtype">void</span> SetCountUninitialized(ezUInt16 uiCount);         <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00249" name="l00249"></a><span class="lineno">  249</span> </div>
<div class="line"><a id="l00250" name="l00250"></a><span class="lineno">  250</span>  <span class="keywordtype">void</span> InsertAt(ezUInt32 uiIndex, <span class="keyword">const</span> T&amp; value);      <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00251" name="l00251"></a><span class="lineno">  251</span>  <span class="keywordtype">void</span> InsertAt(ezUInt32 uiIndex, T&amp;&amp; value);           <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00252" name="l00252"></a><span class="lineno">  252</span> </div>
<div class="line"><a id="l00253" name="l00253"></a><span class="lineno">  253</span>  T&amp; ExpandAndGetRef();                                 <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00254" name="l00254"></a><span class="lineno">  254</span>  <span class="keywordtype">void</span> PushBack(<span class="keyword">const</span> T&amp; value);                        <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00255" name="l00255"></a><span class="lineno">  255</span>  <span class="keywordtype">void</span> PushBack(T&amp;&amp; value);                             <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00256" name="l00256"></a><span class="lineno">  256</span>  <span class="keywordtype">void</span> PushBackRange(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const T&gt;</a>&amp; range); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00257" name="l00257"></a><span class="lineno">  257</span> </div>
<div class="line"><a id="l00258" name="l00258"></a><span class="lineno">  258</span>  <span class="keywordtype">void</span> Reserve(ezUInt16 uiCapacity);</div>
<div class="line"><a id="l00259" name="l00259"></a><span class="lineno">  259</span>  <span class="keywordtype">void</span> Compact();</div>
<div class="line"><a id="l00260" name="l00260"></a><span class="lineno">  260</span>};</div>
</div>
<div class="line"><a id="l00261" name="l00261"></a><span class="lineno">  261</span> </div>
<div class="line"><a id="l00262" name="l00262"></a><span class="lineno">  262</span><span class="preprocessor">#include &lt;Foundation/Containers/Implementation/SmallArray_inl.h&gt;</span></div>
<div class="ttc" id="aclassez_allocator_htm"><div class="ttname"><a href="../../d0/dbb/classez_allocator.htm">ezAllocator</a></div><div class="ttdoc">Base class for all memory allocators.</div><div class="ttdef"><b>Definition</b> Allocator.h:23</div></div>
<div class="ttc" id="aclassez_array_ptr_htm"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a></div><div class="ttdoc">This class encapsulates an array and it's size. It is recommended to use this class instead of plain ...</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:41</div></div>
<div class="ttc" id="aclassez_small_array_base_htm"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase</a></div><div class="ttdoc">Implementation of a dynamically growing array with in-place storage and small memory overhead.</div><div class="ttdef"><b>Definition</b> SmallArray.h:17</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_a0b66ce1a35b2f1659ba61c534969dae4"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#a0b66ce1a35b2f1659ba61c534969dae4">ezSmallArrayBase::IsEmpty</a></div><div class="ttdeci">bool IsEmpty() const</div><div class="ttdoc">Returns true, if the array does not contain any elements.</div><div class="ttdef"><b>Definition</b> SmallArray_inl.h:228</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_a0f88c6f77d9dfac59323e44c08eac677"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#a0f88c6f77d9dfac59323e44c08eac677">ezSmallArrayBase::operator==</a></div><div class="ttdeci">bool operator==(const ezSmallArrayBase&lt; T, Size &gt; &amp;rhs) const</div><div class="ttdoc">Compares this array to another contiguous array type.</div><div class="ttdef"><b>Definition</b> SmallArray_inl.h:111</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_a18878b1e8e942abb9861435942918a83"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#a18878b1e8e942abb9861435942918a83">ezSmallArrayBase::Contains</a></div><div class="ttdeci">bool Contains(const T &amp;value) const</div><div class="ttdoc">Checks whether the given value can be found in the array. O(n) complexity.</div><div class="ttdef"><b>Definition</b> SmallArray_inl.h:241</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_a1fdc8ad1466dcecf86fbf92836988fe8"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#a1fdc8ad1466dcecf86fbf92836988fe8">ezSmallArrayBase::GetByteArrayPtr</a></div><div class="ttdeci">ezArrayPtr&lt; typename ezArrayPtr&lt; T &gt;::ByteType &gt; GetByteArrayPtr()</div><div class="ttdoc">Returns a byte array pointer to the array data, or an empty array pointer if the array is empty.</div><div class="ttdef"><b>Definition</b> SmallArray_inl.h:486</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_a27bc30d0e06cb01d8d5278245a6483f6"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#a27bc30d0e06cb01d8d5278245a6483f6">ezSmallArrayBase::GetArrayPtr</a></div><div class="ttdeci">ezArrayPtr&lt; T &gt; GetArrayPtr()</div><div class="ttdoc">Returns an array pointer to the array data, or an empty array pointer if the array is empty.</div><div class="ttdef"><b>Definition</b> SmallArray_inl.h:474</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_a2d97ba0e00466c81f50461e534af3559"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#a2d97ba0e00466c81f50461e534af3559">ezSmallArrayBase::SetCount</a></div><div class="ttdeci">void SetCount(ezUInt16 uiCount, ezAllocator *pAllocator)</div><div class="ttdoc">Resizes the array to have exactly uiCount elements. Default constructs extra elements if the array is...</div><div class="ttdef"><b>Definition</b> SmallArray_inl.h:154</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_a38c2e2dc9718e666167e9a8bf521df0d"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#a38c2e2dc9718e666167e9a8bf521df0d">ezSmallArrayBase::RemoveAtAndSwap</a></div><div class="ttdeci">void RemoveAtAndSwap(ezUInt32 uiIndex, ezUInt16 uiNumElements=1)</div><div class="ttdoc">Removes the element at index and fills the gap by swapping in the last element.</div><div class="ttdef"><b>Definition</b> SmallArray_inl.h:304</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_a44628a75aa717a0ef2161fb4835b57ba"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#a44628a75aa717a0ef2161fb4835b57ba">ezSmallArrayBase::CopyFrom</a></div><div class="ttdeci">void CopyFrom(const ezArrayPtr&lt; const T &gt; &amp;other, ezAllocator *pAllocator)</div><div class="ttdoc">Copies the data from some other array into this one.</div><div class="ttdef"><b>Definition</b> SmallArray_inl.h:32</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_a45e132fd3e2e121cd9e1333e494c1c5c"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#a45e132fd3e2e121cd9e1333e494c1c5c">ezSmallArrayBase::RemoveAtAndCopy</a></div><div class="ttdeci">void RemoveAtAndCopy(ezUInt32 uiIndex, ezUInt16 uiNumElements=1)</div><div class="ttdoc">Removes the element at index and fills the gap by shifting all following elements.</div><div class="ttdef"><b>Definition</b> SmallArray_inl.h:293</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_a46465983c607874239317c3dcc8b12d4"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#a46465983c607874239317c3dcc8b12d4">ezSmallArrayBase::Sort</a></div><div class="ttdeci">void Sort()</div><div class="ttdoc">Sort with default comparer.</div><div class="ttdef"><b>Definition</b> SmallArray_inl.h:446</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_a4676e9e2da82f6f9b2782e453a1e9cb9"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#a4676e9e2da82f6f9b2782e453a1e9cb9">ezSmallArrayBase::SetCountUninitialized</a></div><div class="ttdeci">void SetCountUninitialized(ezUInt16 uiCount, ezAllocator *pAllocator)</div><div class="ttdoc">Resizes the array to have exactly uiCount elements. Extra elements might be uninitialized.</div><div class="ttdef"><b>Definition</b> SmallArray_inl.h:202</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_a4db08fca7f530433e083498ed93afc37"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#a4db08fca7f530433e083498ed93afc37">ezSmallArrayBase::Reserve</a></div><div class="ttdeci">void Reserve(ezUInt16 uiCapacity, ezAllocator *pAllocator)</div><div class="ttdoc">Expands the array so it can at least store the given capacity.</div><div class="ttdef"><b>Definition</b> SmallArray_inl.h:498</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_a53a6fa7d09ed5098bf8e4dbda3b5f429"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#a53a6fa7d09ed5098bf8e4dbda3b5f429">ezSmallArrayBase::Insert</a></div><div class="ttdeci">void Insert(const T &amp;value, ezUInt32 uiIndex, ezAllocator *pAllocator)</div><div class="ttdoc">Inserts value at index by shifting all following elements.</div><div class="ttdef"><b>Definition</b> SmallArray_inl.h:247</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_a5787f727bd1a20181e3e2150c7d37fc2"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#a5787f727bd1a20181e3e2150c7d37fc2">ezSmallArrayBase::Clear</a></div><div class="ttdeci">void Clear()</div><div class="ttdoc">Clears the array.</div><div class="ttdef"><b>Definition</b> SmallArray_inl.h:234</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_a6e93f15bb764fa59a641b642df5cc551"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#a6e93f15bb764fa59a641b642df5cc551">ezSmallArrayBase::IndexOf</a></div><div class="ttdeci">ezUInt32 IndexOf(const T &amp;value, ezUInt32 uiStartIndex=0) const</div><div class="ttdoc">Searches for the first occurrence of the given value and returns its index or ezInvalidIndex if not f...</div><div class="ttdef"><b>Definition</b> SmallArray_inl.h:324</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_a73ca2c3165047828ff1343eddf338033"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#a73ca2c3165047828ff1343eddf338033">ezSmallArrayBase::operator[]</a></div><div class="ttdeci">const T &amp; operator[](ezUInt32 uiIndex) const</div><div class="ttdoc">Returns the element at the given index. Does bounds checks in debug builds.</div><div class="ttdef"><b>Definition</b> SmallArray_inl.h:140</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_a74451b4388e083a5074881bc8836c6a4"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#a74451b4388e083a5074881bc8836c6a4">ezSmallArrayBase::PushBack</a></div><div class="ttdeci">void PushBack(const T &amp;value, ezAllocator *pAllocator)</div><div class="ttdoc">Pushes value at the end of the array.</div><div class="ttdef"><b>Definition</b> SmallArray_inl.h:366</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_a772bcf3f2189007961b0ba3b4ecf4213"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#a772bcf3f2189007961b0ba3b4ecf4213">ezSmallArrayBase::RemoveAndCopy</a></div><div class="ttdeci">bool RemoveAndCopy(const T &amp;value)</div><div class="ttdoc">Removes the first occurrence of value and fills the gap by shifting all following elements.</div><div class="ttdef"><b>Definition</b> SmallArray_inl.h:269</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_a804a1289180252024587478ef0de74f2"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#a804a1289180252024587478ef0de74f2">ezSmallArrayBase::PushBackUnchecked</a></div><div class="ttdeci">void PushBackUnchecked(const T &amp;value)</div><div class="ttdoc">Pushes value at the end of the array. Does NOT ensure capacity.</div><div class="ttdef"><b>Definition</b> SmallArray_inl.h:384</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_a80dfcf73004b688a99a1952e12c3b467"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#a80dfcf73004b688a99a1952e12c3b467">ezSmallArrayBase::operator&lt;</a></div><div class="ttdeci">bool operator&lt;(const ezSmallArrayBase&lt; T, Size &gt; &amp;rhs) const</div><div class="ttdoc">Compares this array to another contiguous array type.</div><div class="ttdef"><b>Definition</b> SmallArray_inl.h:128</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_a820dddee4c830c06fab015b887e474bd"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#a820dddee4c830c06fab015b887e474bd">ezSmallArrayBase::RemoveAndSwap</a></div><div class="ttdeci">bool RemoveAndSwap(const T &amp;value)</div><div class="ttdoc">Removes the first occurrence of value and fills the gap by swapping in the last element.</div><div class="ttdef"><b>Definition</b> SmallArray_inl.h:281</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_a88383b5d42c0b93a8fd424db57909098"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#a88383b5d42c0b93a8fd424db57909098">ezSmallArrayBase::GetCapacity</a></div><div class="ttdeci">ezUInt32 GetCapacity() const</div><div class="ttdoc">Returns the reserved number of elements that the array can hold without reallocating.</div><div class="ttdef"><b>Definition</b> SmallArray.h:174</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_a945866dd7de01cb96b3f6bd95c086ad0"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#a945866dd7de01cb96b3f6bd95c086ad0">ezSmallArrayBase::PushBackRange</a></div><div class="ttdeci">void PushBackRange(const ezArrayPtr&lt; const T &gt; &amp;range, ezAllocator *pAllocator)</div><div class="ttdoc">Pushes all elements in range at the end of the array. Increases the capacity if necessary.</div><div class="ttdef"><b>Definition</b> SmallArray_inl.h:402</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_a985ee77c3751c5a007143f128af1bbd5"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#a985ee77c3751c5a007143f128af1bbd5">ezSmallArrayBase::LastIndexOf</a></div><div class="ttdeci">ezUInt32 LastIndexOf(const T &amp;value, ezUInt32 uiStartIndex=ezSmallInvalidIndex) const</div><div class="ttdoc">Searches for the last occurrence of the given value and returns its index or ezInvalidIndex if not fo...</div><div class="ttdef"><b>Definition</b> SmallArray_inl.h:337</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_aa0df7cdbcae0aba5ee737c5ef2d6bcb9"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#aa0df7cdbcae0aba5ee737c5ef2d6bcb9">ezSmallArrayBase::MoveFrom</a></div><div class="ttdeci">void MoveFrom(ezSmallArrayBase&lt; T, Size &gt; &amp;&amp;other, ezAllocator *pAllocator)</div><div class="ttdoc">Moves the data from some other array into this one.</div><div class="ttdef"><b>Definition</b> SmallArray_inl.h:69</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_aa5a6fe2b087b6d55b4a66368e633dc88"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#aa5a6fe2b087b6d55b4a66368e633dc88">ezSmallArrayBase::PeekBack</a></div><div class="ttdeci">T &amp; PeekBack()</div><div class="ttdoc">Returns the last element of the array.</div><div class="ttdef"><b>Definition</b> SmallArray_inl.h:421</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_aaa9d377e69c087d2be3c4897ecce0471"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#aaa9d377e69c087d2be3c4897ecce0471">ezSmallArrayBase::GetData</a></div><div class="ttdeci">T * GetData()</div><div class="ttdoc">Returns a pointer to the array data, or nullptr if the array is empty.</div><div class="ttdef"><b>Definition</b> SmallArray_inl.h:456</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_ab6c182c841c56b0ecdc83ea26a1c471c"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#ab6c182c841c56b0ecdc83ea26a1c471c">ezSmallArrayBase::ExpandAndGetRef</a></div><div class="ttdeci">T &amp; ExpandAndGetRef(ezAllocator *pAllocator)</div><div class="ttdoc">Grows the array by one element and returns a reference to the newly created element.</div><div class="ttdef"><b>Definition</b> SmallArray_inl.h:350</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_ac13be38fb1e58b0b94c405db9318792a"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#ac13be38fb1e58b0b94c405db9318792a">ezSmallArrayBase::GetCount</a></div><div class="ttdeci">ezUInt32 GetCount() const</div><div class="ttdoc">Returns the number of active elements in the array.</div><div class="ttdef"><b>Definition</b> SmallArray_inl.h:222</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_ac93d3e6417071debc5ad0563f9563978"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#ac93d3e6417071debc5ad0563f9563978">ezSmallArrayBase::EnsureCount</a></div><div class="ttdeci">void EnsureCount(ezUInt16 uiCount, ezAllocator *pAllocator)</div><div class="ttdoc">Ensures the container has at least uiCount elements. Ie. calls SetCount() if the container has fewer ...</div><div class="ttdef"><b>Definition</b> SmallArray_inl.h:192</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_acfcee52c57545f1c462ef72c5271c416"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#acfcee52c57545f1c462ef72c5271c416">ezSmallArrayBase::GetHeapMemoryUsage</a></div><div class="ttdeci">ezUInt64 GetHeapMemoryUsage() const</div><div class="ttdoc">Returns the amount of bytes that are currently allocated on the heap.</div><div class="ttdef"><b>Definition</b> SmallArray_inl.h:538</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_ad9f8a96a3f6070fb3f66a3a5a359016c"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#ad9f8a96a3f6070fb3f66a3a5a359016c">ezSmallArrayBase::PopBack</a></div><div class="ttdeci">void PopBack(ezUInt32 uiCountToRemove=1)</div><div class="ttdoc">Removes count elements from the end of the array.</div><div class="ttdef"><b>Definition</b> SmallArray_inl.h:412</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_adec38160e7d270a3a00ec3d67c0f1144"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#adec38160e7d270a3a00ec3d67c0f1144">ezSmallArrayBase::Compact</a></div><div class="ttdeci">void Compact(ezAllocator *pAllocator)</div><div class="ttdoc">Tries to compact the array to avoid wasting memory. The resulting capacity is at least 'GetCount' (no...</div><div class="ttdef"><b>Definition</b> SmallArray_inl.h:514</div></div>
<div class="ttc" id="aclassez_small_array_htm"><div class="ttname"><a href="../../d0/d0c/classez_small_array.htm">ezSmallArray</a></div><div class="ttdef"><b>Definition</b> SmallArray.h:224</div></div>
<div class="ttc" id="astructconst__reverse__pointer__iterator_htm"><div class="ttname"><a href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">const_reverse_pointer_iterator</a></div><div class="ttdoc">Base class for Pointer like reverse iterators.</div><div class="ttdef"><b>Definition</b> ArrayIterator.h:152</div></div>
<div class="ttc" id="astructreverse__pointer__iterator_htm"><div class="ttname"><a href="../../d3/df2/structreverse__pointer__iterator.htm">reverse_pointer_iterator</a></div><div class="ttdoc">Non-Const class for Pointer like reverse iterators.</div><div class="ttdef"><b>Definition</b> ArrayIterator.h:216</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_6b567e6755824bd0b8ffd754b9d67ac0.htm">Containers</a></li><li class="navelem"><b>SmallArray.h</b></li>
    <li class="footer">Generated on Fri Jul 11 2025 12:17:51 for ezEngine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
