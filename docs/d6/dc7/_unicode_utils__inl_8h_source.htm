<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Strings/Implementation/UnicodeUtils_inl.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 22.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d6/dc7/_unicode_utils__inl_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">UnicodeUtils_inl.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment">You can classify bytes in a UTF-8 stream as follows:</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">  With the high bit set to 0, it&#39;s a single byte value.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">  With the two high bits set to 10, it&#39;s a continuation byte (the second, third or fourth byte in a UTF-8 multi-byte sequence).</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">  Otherwise, it&#39;s the first byte of a multi-byte sequence and the number of leading 1 bits indicates how many bytes there are in total for</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">this sequence (110... means two bytes, 1110... means three bytes, etc).</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">*/</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160; </div>
<div class="line"><a name="l00011"></a><span class="lineno"><a class="line" href="../../d9/d32/classez_unicode_utils.htm#a70c3f60df2e83f7268d9a605ebeb205a">   11</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../d9/d32/classez_unicode_utils.htm#a70c3f60df2e83f7268d9a605ebeb205a">ezUnicodeUtils::IsUtf8StartByte</a>(<span class="keywordtype">char</span> uiByte)</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;{</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;  <span class="comment">// valid utf8 start bytes are 0x0-------, 0x110-----, 0x1110----, 0x11110---, etc</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;  <span class="keywordflow">return</span> ((uiByte &amp; 0x80) == 0) || ((uiByte &amp; 0xE0) == 0xC0) || ((uiByte &amp; 0xF0) == 0xE0) || ((uiByte &amp; 0xF8) == 0xF0) || ((uiByte &amp; 0xFC) == 0xF8);</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;}</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160; </div>
<div class="line"><a name="l00017"></a><span class="lineno"><a class="line" href="../../d9/d32/classez_unicode_utils.htm#af5740fd3939688808f83e1e4da06d1d0">   17</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../d9/d32/classez_unicode_utils.htm#af5740fd3939688808f83e1e4da06d1d0">ezUnicodeUtils::IsUtf8ContinuationByte</a>(<span class="keywordtype">char</span> uiByte)</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;{</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;  <span class="comment">// check whether the two upper bits are set to &#39;10&#39;</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;  <span class="keywordflow">return</span> (uiByte &amp; 0xC0) == 0x80;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;}</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160; </div>
<div class="line"><a name="l00023"></a><span class="lineno"><a class="line" href="../../d9/d32/classez_unicode_utils.htm#aa8fc2304ec3c1db82831c424097a30f5">   23</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../d9/d32/classez_unicode_utils.htm#aa8fc2304ec3c1db82831c424097a30f5">ezUnicodeUtils::IsASCII</a>(ezUInt32 uiChar)</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;{</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;  <span class="keywordflow">return</span> (uiChar &lt;= 127);</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;}</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160; </div>
<div class="line"><a name="l00028"></a><span class="lineno"><a class="line" href="../../d9/d32/classez_unicode_utils.htm#a5c507e4956e619ecd41a69f10c4cf581">   28</a></span>&#160;<span class="keyword">inline</span> ezUInt32 <a class="code" href="../../d9/d32/classez_unicode_utils.htm#a5c507e4956e619ecd41a69f10c4cf581">ezUnicodeUtils::GetUtf8SequenceLength</a>(<span class="keywordtype">char</span> uiFirstByte)</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;{</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;  <span class="keyword">const</span> ezUInt32 uiBit7 = uiFirstByte &amp; EZ_BIT(7);</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  <span class="keyword">const</span> ezUInt32 uiBit6 = uiFirstByte &amp; EZ_BIT(6);</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;  <span class="keyword">const</span> ezUInt32 uiBit5 = uiFirstByte &amp; EZ_BIT(5);</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;  <span class="keyword">const</span> ezUInt32 uiBit4 = uiFirstByte &amp; EZ_BIT(4);</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160; </div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;  <span class="keywordflow">if</span> (uiBit7 == 0) <span class="comment">// ASCII character &#39;0xxxxxxx&#39;</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    <span class="keywordflow">return</span> 1;</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160; </div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  EZ_IGNORE_UNUSED(uiBit6);</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;  EZ_ASSERT_DEV(uiBit6 != 0, <span class="stringliteral">&quot;Invalid Leading UTF-8 Byte.&quot;</span>);</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160; </div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  <span class="keywordflow">if</span> (uiBit5 == 0) <span class="comment">// &#39;110xxxxx&#39;</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <span class="keywordflow">return</span> 2;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  <span class="keywordflow">if</span> (uiBit4 == 0) <span class="comment">// &#39;1110xxxx&#39;</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="keywordflow">return</span> 3;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160; </div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;  <span class="comment">// &#39;1111xxxx&#39;</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;  <span class="keywordflow">return</span> 4;</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;}</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160; </div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> ByteIterator&gt;</div>
<div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="../../d9/d32/classez_unicode_utils.htm#a171663ca5da4e2cbb440866d55cb2769">   51</a></span>&#160;ezUInt32 <a class="code" href="../../d9/d32/classez_unicode_utils.htm#a171663ca5da4e2cbb440866d55cb2769">ezUnicodeUtils::DecodeUtf8ToUtf32</a>(ByteIterator&amp; szUtf8Iterator)</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;{</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;  <span class="keywordflow">return</span> utf8::unchecked::next(szUtf8Iterator);</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;}</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160; </div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> UInt16Iterator&gt;</div>
<div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="../../d9/d32/classez_unicode_utils.htm#a2c7e6282e0915e08e31ef00f316d0427">   57</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d9/d32/classez_unicode_utils.htm#a2c7e6282e0915e08e31ef00f316d0427">ezUnicodeUtils::IsUtf16Surrogate</a>(UInt16Iterator&amp; szUtf16Iterator)</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;{</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;  uint32_t cp = utf8::internal::mask16(*szUtf16Iterator);</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;  <span class="keywordflow">return</span> utf8::internal::is_lead_surrogate(cp);</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;}</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160; </div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> UInt16Iterator&gt;</div>
<div class="line"><a name="l00064"></a><span class="lineno"><a class="line" href="../../d9/d32/classez_unicode_utils.htm#ad022c5c1f35ce72c3ae4c13f0067959d">   64</a></span>&#160;ezUInt32 <a class="code" href="../../d9/d32/classez_unicode_utils.htm#ad022c5c1f35ce72c3ae4c13f0067959d">ezUnicodeUtils::DecodeUtf16ToUtf32</a>(UInt16Iterator&amp; szUtf16Iterator)</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;{</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;  uint32_t cp = utf8::internal::mask16(*szUtf16Iterator++);</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;  <span class="keywordflow">if</span> (utf8::internal::is_lead_surrogate(cp))</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;  {</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    uint32_t trail_surrogate = utf8::internal::mask16(*szUtf16Iterator++);</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    cp = (cp &lt;&lt; 10) + trail_surrogate + utf8::internal::SURROGATE_OFFSET;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;  }</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160; </div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  <span class="keywordflow">return</span> cp;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;}</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160; </div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> WCharIterator&gt;</div>
<div class="line"><a name="l00077"></a><span class="lineno"><a class="line" href="../../d9/d32/classez_unicode_utils.htm#a7a60d95852613dd7bcdd0741a9b620bf">   77</a></span>&#160;ezUInt32 <a class="code" href="../../d9/d32/classez_unicode_utils.htm#a7a60d95852613dd7bcdd0741a9b620bf">ezUnicodeUtils::DecodeWCharToUtf32</a>(WCharIterator&amp; szWCharIterator)</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;{</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  <span class="keywordflow">if</span> (<span class="keyword">sizeof</span>(<span class="keywordtype">wchar_t</span>) == 2)</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;  {</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d9/d32/classez_unicode_utils.htm#ad022c5c1f35ce72c3ae4c13f0067959d">DecodeUtf16ToUtf32</a>(szWCharIterator);</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;  }</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;  <span class="keywordflow">else</span> <span class="comment">// sizeof(wchar_t) == 4</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;  {</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    <span class="keyword">const</span> ezUInt32 uiResult = *szWCharIterator;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    ++szWCharIterator;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    <span class="keywordflow">return</span> uiResult;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;  }</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;}</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160; </div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> ByteIterator&gt;</div>
<div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="../../d9/d32/classez_unicode_utils.htm#ae783ba4fa2cc96ea397955039f3f5e48">   92</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d9/d32/classez_unicode_utils.htm#ae783ba4fa2cc96ea397955039f3f5e48">ezUnicodeUtils::EncodeUtf32ToUtf8</a>(ezUInt32 uiUtf32, ByteIterator&amp; szUtf8Output)</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;{</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;  szUtf8Output = utf8::unchecked::utf32to8(&amp;uiUtf32, &amp;uiUtf32 + 1, szUtf8Output);</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;}</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160; </div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> UInt16Iterator&gt;</div>
<div class="line"><a name="l00098"></a><span class="lineno"><a class="line" href="../../d9/d32/classez_unicode_utils.htm#ab6ce7254223645bdab19741740790773">   98</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d9/d32/classez_unicode_utils.htm#ab6ce7254223645bdab19741740790773">ezUnicodeUtils::EncodeUtf32ToUtf16</a>(ezUInt32 uiUtf32, UInt16Iterator&amp; szUtf16Output)</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;{</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;  <span class="keywordflow">if</span> (uiUtf32 &gt; 0xffff)</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;  {</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;    <span class="comment">// make a surrogate pair</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    *szUtf16Output++ = <span class="keyword">static_cast&lt;</span>uint16_t<span class="keyword">&gt;</span>((uiUtf32 &gt;&gt; 10) + utf8::internal::LEAD_OFFSET);</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    *szUtf16Output++ = <span class="keyword">static_cast&lt;</span>uint16_t<span class="keyword">&gt;</span>((uiUtf32 &amp; 0x3ff) + utf8::internal::TRAIL_SURROGATE_MIN);</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;  }</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    *szUtf16Output++ = <span class="keyword">static_cast&lt;</span>uint16_t<span class="keyword">&gt;</span>(uiUtf32);</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;}</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160; </div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> WCharIterator&gt;</div>
<div class="line"><a name="l00111"></a><span class="lineno"><a class="line" href="../../d9/d32/classez_unicode_utils.htm#a4b55d36d626cd7c88a64eca4c05f4950">  111</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d9/d32/classez_unicode_utils.htm#a4b55d36d626cd7c88a64eca4c05f4950">ezUnicodeUtils::EncodeUtf32ToWChar</a>(ezUInt32 uiUtf32, WCharIterator&amp; szWCharOutput)</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;{</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;  <span class="keywordflow">if</span> (<span class="keyword">sizeof</span>(<span class="keywordtype">wchar_t</span>) == 2)</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;  {</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <a class="code" href="../../d9/d32/classez_unicode_utils.htm#ab6ce7254223645bdab19741740790773">EncodeUtf32ToUtf16</a>(uiUtf32, szWCharOutput);</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;  }</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;  {</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    *szWCharOutput = <span class="keyword">static_cast&lt;</span><span class="keywordtype">wchar_t</span><span class="keyword">&gt;</span>(uiUtf32);</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    ++szWCharOutput;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;  }</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;}</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160; </div>
<div class="line"><a name="l00124"></a><span class="lineno"><a class="line" href="../../d9/d32/classez_unicode_utils.htm#a14961aea9cc3791a6c9f48159fa64d9f">  124</a></span>&#160;<span class="keyword">inline</span> ezUInt32 <a class="code" href="../../d9/d32/classez_unicode_utils.htm#a14961aea9cc3791a6c9f48159fa64d9f">ezUnicodeUtils::ConvertUtf8ToUtf32</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* pFirstChar)</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;{</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;  <span class="keywordflow">return</span> utf8::unchecked::peek_next(pFirstChar);</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;}</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160; </div>
<div class="line"><a name="l00129"></a><span class="lineno"><a class="line" href="../../d9/d32/classez_unicode_utils.htm#a687c3c486dc9d1e276aedda44c7e62c7">  129</a></span>&#160;<span class="keyword">inline</span> ezUInt32 <a class="code" href="../../d9/d32/classez_unicode_utils.htm#a687c3c486dc9d1e276aedda44c7e62c7">ezUnicodeUtils::GetSizeForCharacterInUtf8</a>(ezUInt32 uiCharacter)</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;{</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;  <span class="comment">// Basically implements this: http://en.wikipedia.org/wiki/Utf8#Description</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160; </div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;  <span class="keywordflow">if</span> (uiCharacter &lt;= 0x0000007f)</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    <span class="keywordflow">return</span> 1;</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160; </div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;  <span class="keywordflow">if</span> (uiCharacter &lt;= 0x000007ff)</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;    <span class="keywordflow">return</span> 2;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160; </div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;  <span class="keywordflow">if</span> (uiCharacter &lt;= 0x0000ffff)</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;    <span class="keywordflow">return</span> 3;</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160; </div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;  <span class="comment">// UTF-8 can use up to 6 bytes to encode a code point</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  <span class="comment">// however some committee agreed that never more than 4 bytes are used (no need for more than 21 Bits)</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;  <span class="comment">// this implementation assumes in several places, that the UTF-8 encoding never uses more than 4 bytes</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160; </div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;  EZ_ASSERT_DEV(uiCharacter &lt;= 0x0010ffff, <span class="stringliteral">&quot;Invalid Unicode Codepoint&quot;</span>);</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;  <span class="keywordflow">return</span> 4;</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;}</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160; </div>
<div class="line"><a name="l00150"></a><span class="lineno"><a class="line" href="../../d9/d32/classez_unicode_utils.htm#ab60e002ff65a14de4c81f58c8b42c1a4">  150</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="../../d9/d32/classez_unicode_utils.htm#ab60e002ff65a14de4c81f58c8b42c1a4">ezUnicodeUtils::IsValidUtf8</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szString, <span class="keyword">const</span> <span class="keywordtype">char</span>* szStringEnd)</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;{</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;  <span class="keywordflow">if</span> (szStringEnd == GetMaxStringEnd&lt;char&gt;())</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    szStringEnd = szString + strlen(szString);</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160; </div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;  <span class="keywordflow">return</span> utf8::is_valid(szString, szStringEnd);</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;}</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160; </div>
<div class="line"><a name="l00158"></a><span class="lineno"><a class="line" href="../../d9/d32/classez_unicode_utils.htm#a4a71d939b99c7aa037791806608b2ced">  158</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="../../d9/d32/classez_unicode_utils.htm#a4a71d939b99c7aa037791806608b2ced">ezUnicodeUtils::SkipUtf8Bom</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>*&amp; szUtf8)</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;{</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;  EZ_ASSERT_DEBUG(szUtf8 != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;This function expects non nullptr pointers&quot;</span>);</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160; </div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;  <span class="keywordflow">if</span> (utf8::starts_with_bom(szUtf8, szUtf8 + 4))</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;  {</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;    szUtf8 += 3;</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;  }</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160; </div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;}</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160; </div>
<div class="line"><a name="l00171"></a><span class="lineno"><a class="line" href="../../d9/d32/classez_unicode_utils.htm#a4c90b9f245becbb1ccd746ee58362800">  171</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="../../d9/d32/classez_unicode_utils.htm#a4c90b9f245becbb1ccd746ee58362800">ezUnicodeUtils::SkipUtf16BomLE</a>(<span class="keyword">const</span> ezUInt16*&amp; szUtf16)</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;{</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;  EZ_ASSERT_DEBUG(szUtf16 != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;This function expects non nullptr pointers&quot;</span>);</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160; </div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;  <span class="keywordflow">if</span> (*szUtf16 == <a class="code" href="../../d9/d32/classez_unicode_utils.htm#ab4577c154bb2c133203d2b23ca486172">ezUnicodeUtils::Utf16BomLE</a>)</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;  {</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    ++szUtf16;</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;  }</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160; </div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;}</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160; </div>
<div class="line"><a name="l00184"></a><span class="lineno"><a class="line" href="../../d9/d32/classez_unicode_utils.htm#acb531e1856cc522a32eb9d0de66caec5">  184</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="../../d9/d32/classez_unicode_utils.htm#acb531e1856cc522a32eb9d0de66caec5">ezUnicodeUtils::SkipUtf16BomBE</a>(<span class="keyword">const</span> ezUInt16*&amp; szUtf16)</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;{</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;  EZ_ASSERT_DEBUG(szUtf16 != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;This function expects non nullptr pointers&quot;</span>);</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160; </div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;  <span class="keywordflow">if</span> (*szUtf16 == <a class="code" href="../../d9/d32/classez_unicode_utils.htm#a9a4078cb0ffb999aea8f9816dd30b0f6">ezUnicodeUtils::Utf16BomBE</a>)</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;  {</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    ++szUtf16;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;  }</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160; </div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;}</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160; </div>
<div class="line"><a name="l00197"></a><span class="lineno"><a class="line" href="../../d9/d32/classez_unicode_utils.htm#ada79ec35f647076df77c48e049b5a376">  197</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="../../d9/d32/classez_unicode_utils.htm#ada79ec35f647076df77c48e049b5a376">ezUnicodeUtils::MoveToNextUtf8</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>*&amp; szUtf8, ezUInt32 uiNumCharacters)</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;{</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;  EZ_ASSERT_DEBUG(szUtf8 != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;Bad programmer!&quot;</span>);</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160; </div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;  <span class="keywordflow">while</span> (uiNumCharacters &gt; 0)</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;  {</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    EZ_ASSERT_DEV(*szUtf8 != <span class="charliteral">&#39;\0&#39;</span>, <span class="stringliteral">&quot;The given string must not point to the zero terminator.&quot;</span>);</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160; </div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;    <span class="keywordflow">do</span></div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    {</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;      ++szUtf8;</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;    } <span class="keywordflow">while</span> (<a class="code" href="../../d9/d32/classez_unicode_utils.htm#af5740fd3939688808f83e1e4da06d1d0">IsUtf8ContinuationByte</a>(*szUtf8));</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160; </div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    --uiNumCharacters;</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;  }</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;}</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160; </div>
<div class="line"><a name="l00214"></a><span class="lineno"><a class="line" href="../../d9/d32/classez_unicode_utils.htm#a708fbcfff01ca6e0b8c00dfffc7c74c1">  214</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="../../d9/d32/classez_unicode_utils.htm#ada79ec35f647076df77c48e049b5a376">ezUnicodeUtils::MoveToNextUtf8</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>*&amp; szUtf8, <span class="keyword">const</span> <span class="keywordtype">char</span>* szUtf8End, ezUInt32 uiNumCharacters)</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;{</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;  EZ_ASSERT_DEBUG(szUtf8 != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;Bad programmer!&quot;</span>);</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160; </div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;  <span class="keywordflow">while</span> (uiNumCharacters &gt; 0 &amp;&amp; szUtf8 &lt; szUtf8End)</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;  {</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    EZ_ASSERT_DEV(*szUtf8 != <span class="charliteral">&#39;\0&#39;</span>, <span class="stringliteral">&quot;The given string must not point to the zero terminator.&quot;</span>);</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160; </div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;    <span class="keywordflow">do</span></div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;    {</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;      ++szUtf8;</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    } <span class="keywordflow">while</span> ((szUtf8 &lt; szUtf8End) &amp;&amp; <a class="code" href="../../d9/d32/classez_unicode_utils.htm#af5740fd3939688808f83e1e4da06d1d0">IsUtf8ContinuationByte</a>(*szUtf8));</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160; </div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    --uiNumCharacters;</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;  }</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;}</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160; </div>
<div class="line"><a name="l00231"></a><span class="lineno"><a class="line" href="../../d9/d32/classez_unicode_utils.htm#a76ba90d8cde77798cad214f009b28d02">  231</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="../../d9/d32/classez_unicode_utils.htm#a76ba90d8cde77798cad214f009b28d02">ezUnicodeUtils::MoveToPriorUtf8</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>*&amp; szUtf8, ezUInt32 uiNumCharacters)</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;{</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;  EZ_ASSERT_DEBUG(szUtf8 != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;Bad programmer!&quot;</span>);</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160; </div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;  <span class="keywordflow">while</span> (uiNumCharacters &gt; 0)</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;  {</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;    <span class="keywordflow">do</span></div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    {</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;      --szUtf8;</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;    } <span class="keywordflow">while</span> (<a class="code" href="../../d9/d32/classez_unicode_utils.htm#af5740fd3939688808f83e1e4da06d1d0">IsUtf8ContinuationByte</a>(*szUtf8));</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160; </div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;    --uiNumCharacters;</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;  }</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;}</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00246"></a><span class="lineno"><a class="line" href="../../d9/d32/classez_unicode_utils.htm#a580463d2f8474b7119639fa86104cb93">  246</a></span>&#160;constexpr T* <a class="code" href="../../d9/d32/classez_unicode_utils.htm#a580463d2f8474b7119639fa86104cb93">ezUnicodeUtils::GetMaxStringEnd</a>()</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;{</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">reinterpret_cast&lt;</span>T*<span class="keyword">&gt;</span>(-1);</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;}</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassez_unicode_utils_htm_ae783ba4fa2cc96ea397955039f3f5e48"><div class="ttname"><a href="../../d9/d32/classez_unicode_utils.htm#ae783ba4fa2cc96ea397955039f3f5e48">ezUnicodeUtils::EncodeUtf32ToUtf8</a></div><div class="ttdeci">static void EncodeUtf32ToUtf8(ezUInt32 uiUtf32, ByteIterator &amp;szUtf8Output)</div><div class="ttdoc">Encodes the given Utf32 character to Utf8 and writes as many bytes to the output iterator,...</div><div class="ttdef"><b>Definition:</b> UnicodeUtils_inl.h:92</div></div>
<div class="ttc" id="aclassez_unicode_utils_htm_aa8fc2304ec3c1db82831c424097a30f5"><div class="ttname"><a href="../../d9/d32/classez_unicode_utils.htm#aa8fc2304ec3c1db82831c424097a30f5">ezUnicodeUtils::IsASCII</a></div><div class="ttdeci">static bool IsASCII(ezUInt32 uiChar)</div><div class="ttdoc">Returns whether a character is a pure ASCII character (only the first 7 Bits are used)</div><div class="ttdef"><b>Definition:</b> UnicodeUtils_inl.h:23</div></div>
<div class="ttc" id="aclassez_unicode_utils_htm_a580463d2f8474b7119639fa86104cb93"><div class="ttname"><a href="../../d9/d32/classez_unicode_utils.htm#a580463d2f8474b7119639fa86104cb93">ezUnicodeUtils::GetMaxStringEnd</a></div><div class="ttdeci">static constexpr T * GetMaxStringEnd()</div><div class="ttdoc">[internal] Returns the max string end pointer for the given type</div><div class="ttdef"><b>Definition:</b> UnicodeUtils_inl.h:246</div></div>
<div class="ttc" id="aclassez_unicode_utils_htm_a4a71d939b99c7aa037791806608b2ced"><div class="ttname"><a href="../../d9/d32/classez_unicode_utils.htm#a4a71d939b99c7aa037791806608b2ced">ezUnicodeUtils::SkipUtf8Bom</a></div><div class="ttdeci">static bool SkipUtf8Bom(const char *&amp;szUtf8)</div><div class="ttdoc">If the given string starts with a Utf8 Bom, the pointer is incremented behind the Bom,...</div><div class="ttdef"><b>Definition:</b> UnicodeUtils_inl.h:158</div></div>
<div class="ttc" id="aclassez_unicode_utils_htm_ada79ec35f647076df77c48e049b5a376"><div class="ttname"><a href="../../d9/d32/classez_unicode_utils.htm#ada79ec35f647076df77c48e049b5a376">ezUnicodeUtils::MoveToNextUtf8</a></div><div class="ttdeci">static void MoveToNextUtf8(const char *&amp;szUtf8, ezUInt32 uiNumCharacters=1)</div><div class="ttdoc">Moves the given string pointer ahead to the next Utf8 character sequence.</div><div class="ttdef"><b>Definition:</b> UnicodeUtils_inl.h:197</div></div>
<div class="ttc" id="aclassez_unicode_utils_htm_a70c3f60df2e83f7268d9a605ebeb205a"><div class="ttname"><a href="../../d9/d32/classez_unicode_utils.htm#a70c3f60df2e83f7268d9a605ebeb205a">ezUnicodeUtils::IsUtf8StartByte</a></div><div class="ttdeci">static bool IsUtf8StartByte(char uiByte)</div><div class="ttdoc">Checks whether the given byte is a start byte in a UTF-8 multi-byte sequence.</div><div class="ttdef"><b>Definition:</b> UnicodeUtils_inl.h:11</div></div>
<div class="ttc" id="aclassez_unicode_utils_htm_a14961aea9cc3791a6c9f48159fa64d9f"><div class="ttname"><a href="../../d9/d32/classez_unicode_utils.htm#a14961aea9cc3791a6c9f48159fa64d9f">ezUnicodeUtils::ConvertUtf8ToUtf32</a></div><div class="ttdeci">static ezUInt32 ConvertUtf8ToUtf32(const char *pFirstChar)</div><div class="ttdoc">Converts the UTF-8 character that starts at pFirstChar into a UTF-32 character.</div><div class="ttdef"><b>Definition:</b> UnicodeUtils_inl.h:124</div></div>
<div class="ttc" id="aclassez_unicode_utils_htm_a9a4078cb0ffb999aea8f9816dd30b0f6"><div class="ttname"><a href="../../d9/d32/classez_unicode_utils.htm#a9a4078cb0ffb999aea8f9816dd30b0f6">ezUnicodeUtils::Utf16BomBE</a></div><div class="ttdeci">static constexpr ezUInt16 Utf16BomBE</div><div class="ttdoc">Byte Order Mark for Big Endian Utf16 strings.</div><div class="ttdef"><b>Definition:</b> UnicodeUtils.h:21</div></div>
<div class="ttc" id="aclassez_unicode_utils_htm_ad022c5c1f35ce72c3ae4c13f0067959d"><div class="ttname"><a href="../../d9/d32/classez_unicode_utils.htm#ad022c5c1f35ce72c3ae4c13f0067959d">ezUnicodeUtils::DecodeUtf16ToUtf32</a></div><div class="ttdeci">static ezUInt32 DecodeUtf16ToUtf32(UInt16Iterator &amp;szUtf16Iterator)</div><div class="ttdoc">Decodes the next character from the given Utf16 sequence to Utf32 and increments the iterator as far ...</div><div class="ttdef"><b>Definition:</b> UnicodeUtils_inl.h:64</div></div>
<div class="ttc" id="aclassez_unicode_utils_htm_ab4577c154bb2c133203d2b23ca486172"><div class="ttname"><a href="../../d9/d32/classez_unicode_utils.htm#ab4577c154bb2c133203d2b23ca486172">ezUnicodeUtils::Utf16BomLE</a></div><div class="ttdeci">static constexpr ezUInt16 Utf16BomLE</div><div class="ttdoc">Byte Order Mark for Little Endian Utf16 strings.</div><div class="ttdef"><b>Definition:</b> UnicodeUtils.h:18</div></div>
<div class="ttc" id="aclassez_unicode_utils_htm_a171663ca5da4e2cbb440866d55cb2769"><div class="ttname"><a href="../../d9/d32/classez_unicode_utils.htm#a171663ca5da4e2cbb440866d55cb2769">ezUnicodeUtils::DecodeUtf8ToUtf32</a></div><div class="ttdeci">static ezUInt32 DecodeUtf8ToUtf32(ByteIterator &amp;szUtf8Iterator)</div><div class="ttdoc">Decodes the next character from the given Utf8 sequence to Utf32 and increments the iterator as far a...</div><div class="ttdef"><b>Definition:</b> UnicodeUtils_inl.h:51</div></div>
<div class="ttc" id="aclassez_unicode_utils_htm_a5c507e4956e619ecd41a69f10c4cf581"><div class="ttname"><a href="../../d9/d32/classez_unicode_utils.htm#a5c507e4956e619ecd41a69f10c4cf581">ezUnicodeUtils::GetUtf8SequenceLength</a></div><div class="ttdeci">static ezUInt32 GetUtf8SequenceLength(char uiFirstByte)</div><div class="ttdoc">Returns the number of bytes that a UTF-8 sequence is in length, which is encoded in the first byte of...</div><div class="ttdef"><b>Definition:</b> UnicodeUtils_inl.h:28</div></div>
<div class="ttc" id="aclassez_unicode_utils_htm_a76ba90d8cde77798cad214f009b28d02"><div class="ttname"><a href="../../d9/d32/classez_unicode_utils.htm#a76ba90d8cde77798cad214f009b28d02">ezUnicodeUtils::MoveToPriorUtf8</a></div><div class="ttdeci">static void MoveToPriorUtf8(const char *&amp;szUtf8, ezUInt32 uiNumCharacters=1)</div><div class="ttdoc">Moves the given string pointer backwards to the previous Utf8 character sequence.</div><div class="ttdef"><b>Definition:</b> UnicodeUtils_inl.h:231</div></div>
<div class="ttc" id="aclassez_unicode_utils_htm_ab6ce7254223645bdab19741740790773"><div class="ttname"><a href="../../d9/d32/classez_unicode_utils.htm#ab6ce7254223645bdab19741740790773">ezUnicodeUtils::EncodeUtf32ToUtf16</a></div><div class="ttdeci">static void EncodeUtf32ToUtf16(ezUInt32 uiUtf32, UInt16Iterator &amp;szUtf16Output)</div><div class="ttdoc">Encodes the given Utf32 character to Utf16 and writes as many bytes to the output iterator,...</div><div class="ttdef"><b>Definition:</b> UnicodeUtils_inl.h:98</div></div>
<div class="ttc" id="aclassez_unicode_utils_htm_a687c3c486dc9d1e276aedda44c7e62c7"><div class="ttname"><a href="../../d9/d32/classez_unicode_utils.htm#a687c3c486dc9d1e276aedda44c7e62c7">ezUnicodeUtils::GetSizeForCharacterInUtf8</a></div><div class="ttdeci">static ezUInt32 GetSizeForCharacterInUtf8(ezUInt32 uiCharacter)</div><div class="ttdoc">Computes how many bytes the character would require, if encoded in UTF-8.</div><div class="ttdef"><b>Definition:</b> UnicodeUtils_inl.h:129</div></div>
<div class="ttc" id="aclassez_unicode_utils_htm_ab60e002ff65a14de4c81f58c8b42c1a4"><div class="ttname"><a href="../../d9/d32/classez_unicode_utils.htm#ab60e002ff65a14de4c81f58c8b42c1a4">ezUnicodeUtils::IsValidUtf8</a></div><div class="ttdeci">static bool IsValidUtf8(const char *szString, const char *szStringEnd=GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Returns false if the given string does not contain a completely valid Utf8 string.</div><div class="ttdef"><b>Definition:</b> UnicodeUtils_inl.h:150</div></div>
<div class="ttc" id="aclassez_unicode_utils_htm_acb531e1856cc522a32eb9d0de66caec5"><div class="ttname"><a href="../../d9/d32/classez_unicode_utils.htm#acb531e1856cc522a32eb9d0de66caec5">ezUnicodeUtils::SkipUtf16BomBE</a></div><div class="ttdeci">static bool SkipUtf16BomBE(const ezUInt16 *&amp;szUtf16)</div><div class="ttdoc">If the given string starts with a Utf16 big endian Bom, the pointer is incremented behind the Bom,...</div><div class="ttdef"><b>Definition:</b> UnicodeUtils_inl.h:184</div></div>
<div class="ttc" id="aclassez_unicode_utils_htm_a4b55d36d626cd7c88a64eca4c05f4950"><div class="ttname"><a href="../../d9/d32/classez_unicode_utils.htm#a4b55d36d626cd7c88a64eca4c05f4950">ezUnicodeUtils::EncodeUtf32ToWChar</a></div><div class="ttdeci">static void EncodeUtf32ToWChar(ezUInt32 uiUtf32, WCharIterator &amp;szWCharOutput)</div><div class="ttdoc">Encodes the given Utf32 character to wchar_t and writes as many bytes to the output iterator,...</div><div class="ttdef"><b>Definition:</b> UnicodeUtils_inl.h:111</div></div>
<div class="ttc" id="aclassez_unicode_utils_htm_a2c7e6282e0915e08e31ef00f316d0427"><div class="ttname"><a href="../../d9/d32/classez_unicode_utils.htm#a2c7e6282e0915e08e31ef00f316d0427">ezUnicodeUtils::IsUtf16Surrogate</a></div><div class="ttdeci">static bool IsUtf16Surrogate(UInt16Iterator &amp;szUtf16Iterator)</div><div class="ttdoc">Characters that cannot be represented in a single utf16 code point need to be split up into two surro...</div><div class="ttdef"><b>Definition:</b> UnicodeUtils_inl.h:57</div></div>
<div class="ttc" id="aclassez_unicode_utils_htm_a4c90b9f245becbb1ccd746ee58362800"><div class="ttname"><a href="../../d9/d32/classez_unicode_utils.htm#a4c90b9f245becbb1ccd746ee58362800">ezUnicodeUtils::SkipUtf16BomLE</a></div><div class="ttdeci">static bool SkipUtf16BomLE(const ezUInt16 *&amp;szUtf16)</div><div class="ttdoc">If the given string starts with a Utf16 little endian Bom, the pointer is incremented behind the Bom,...</div><div class="ttdef"><b>Definition:</b> UnicodeUtils_inl.h:171</div></div>
<div class="ttc" id="aclassez_unicode_utils_htm_af5740fd3939688808f83e1e4da06d1d0"><div class="ttname"><a href="../../d9/d32/classez_unicode_utils.htm#af5740fd3939688808f83e1e4da06d1d0">ezUnicodeUtils::IsUtf8ContinuationByte</a></div><div class="ttdeci">static bool IsUtf8ContinuationByte(char uiByte)</div><div class="ttdoc">Checks whether the given byte is a byte in a UTF-8 multi-byte sequence.</div><div class="ttdef"><b>Definition:</b> UnicodeUtils_inl.h:17</div></div>
<div class="ttc" id="aclassez_unicode_utils_htm_a7a60d95852613dd7bcdd0741a9b620bf"><div class="ttname"><a href="../../d9/d32/classez_unicode_utils.htm#a7a60d95852613dd7bcdd0741a9b620bf">ezUnicodeUtils::DecodeWCharToUtf32</a></div><div class="ttdeci">static ezUInt32 DecodeWCharToUtf32(WCharIterator &amp;szWCharIterator)</div><div class="ttdoc">Decodes the next character from the given wchar_t sequence to Utf32 and increments the iterator as fa...</div><div class="ttdef"><b>Definition:</b> UnicodeUtils_inl.h:77</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_b52479c911fe9a42767226b3387b3a02.htm">Strings</a></li><li class="navelem"><a class="el" href="../../dir_067384bf2c73f8a8078edb859c0ba426.htm">Implementation</a></li><li class="navelem"><b>UnicodeUtils_inl.h</b></li>
    <li class="footer">Generated on Fri Nov 18 2022 14:48:00 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
