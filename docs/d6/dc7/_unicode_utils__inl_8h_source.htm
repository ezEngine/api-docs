<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Strings/Implementation/UnicodeUtils_inl.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">ezEngine<span id="projectnumber">&#160;Release 25.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function() { init_codefold(1); });
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('d6/dc7/_unicode_utils__inl_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">UnicodeUtils_inl.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="comment">/*</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="comment">You can classify bytes in a UTF-8 stream as follows:</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="comment">  With the high bit set to 0, it&#39;s a single byte value.</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="comment">  With the two high bits set to 10, it&#39;s a continuation byte (the second, third or fourth byte in a UTF-8 multi-byte sequence).</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="comment">  Otherwise, it&#39;s the first byte of a multi-byte sequence and the number of leading 1 bits indicates how many bytes there are in total for</span></div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="comment">this sequence (110... means two bytes, 1110... means three bytes, etc).</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="comment">*/</span></div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span> </div>
<div class="foldopen" id="foldopen00011" data-start="{" data-end="}">
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno"><a class="line" href="../../d9/d32/classez_unicode_utils.htm#a2fad376e8b879b5731ae33c512e14f51">   11</a></span>EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d9/d32/classez_unicode_utils.htm#a2fad376e8b879b5731ae33c512e14f51">ezUnicodeUtils::IsUtf8StartByte</a>(<span class="keywordtype">char</span> iByte)</div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span>{</div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span>  <span class="comment">// valid utf8 start bytes are 0x0-------, 0x110-----, 0x1110----, 0x11110---, etc</span></div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span>  <span class="keywordflow">return</span> ((iByte &amp; 0x80) == 0) || ((iByte &amp; 0xE0) == 0xC0) || ((iByte &amp; 0xF0) == 0xE0) || ((iByte &amp; 0xF8) == 0xF0) || ((iByte &amp; 0xFC) == 0xF8);</div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span>}</div>
</div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span> </div>
<div class="foldopen" id="foldopen00017" data-start="{" data-end="}">
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno"><a class="line" href="../../d9/d32/classez_unicode_utils.htm#ac00681951c74c2c1ec4c2676b63d3b50">   17</a></span>EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d9/d32/classez_unicode_utils.htm#ac00681951c74c2c1ec4c2676b63d3b50">ezUnicodeUtils::IsUtf8ContinuationByte</a>(<span class="keywordtype">char</span> iByte)</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span>{</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span>  <span class="comment">// check whether the two upper bits are set to &#39;10&#39;</span></div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span>  <span class="keywordflow">return</span> (iByte &amp; 0xC0) == 0x80;</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span>}</div>
</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span> </div>
<div class="foldopen" id="foldopen00023" data-start="{" data-end="}">
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno"><a class="line" href="../../d9/d32/classez_unicode_utils.htm#aa8fc2304ec3c1db82831c424097a30f5">   23</a></span>EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d9/d32/classez_unicode_utils.htm#aa8fc2304ec3c1db82831c424097a30f5">ezUnicodeUtils::IsASCII</a>(ezUInt32 uiChar)</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span>{</div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span>  <span class="keywordflow">return</span> (uiChar &lt;= 127);</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span>}</div>
</div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span> </div>
<div class="foldopen" id="foldopen00028" data-start="{" data-end="}">
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno"><a class="line" href="../../d9/d32/classez_unicode_utils.htm#abc9baf68573084c38716f6c09bcf9138">   28</a></span><span class="keyword">inline</span> ezUInt32 <a class="code hl_function" href="../../d9/d32/classez_unicode_utils.htm#abc9baf68573084c38716f6c09bcf9138">ezUnicodeUtils::GetUtf8SequenceLength</a>(<span class="keywordtype">char</span> iFirstByte)</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span>{</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span>  <span class="keyword">const</span> ezUInt32 uiBit7 = iFirstByte &amp; EZ_BIT(7);</div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span>  <span class="keyword">const</span> ezUInt32 uiBit6 = iFirstByte &amp; EZ_BIT(6);</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span>  <span class="keyword">const</span> ezUInt32 uiBit5 = iFirstByte &amp; EZ_BIT(5);</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>  <span class="keyword">const</span> ezUInt32 uiBit4 = iFirstByte &amp; EZ_BIT(4);</div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span> </div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>  <span class="keywordflow">if</span> (uiBit7 == 0) <span class="comment">// ASCII character &#39;0xxxxxxx&#39;</span></div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span>    <span class="keywordflow">return</span> 1;</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span> </div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>  EZ_IGNORE_UNUSED(uiBit6);</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span>  EZ_ASSERT_DEV(uiBit6 != 0, <span class="stringliteral">&quot;Invalid Leading UTF-8 Byte.&quot;</span>);</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span> </div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>  <span class="keywordflow">if</span> (uiBit5 == 0) <span class="comment">// &#39;110xxxxx&#39;</span></div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>    <span class="keywordflow">return</span> 2;</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span>  <span class="keywordflow">if</span> (uiBit4 == 0) <span class="comment">// &#39;1110xxxx&#39;</span></div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>    <span class="keywordflow">return</span> 3;</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span> </div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span>  <span class="comment">// &#39;1111xxxx&#39;</span></div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span>  <span class="keywordflow">return</span> 4;</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>}</div>
</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span> </div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> ByteIterator&gt;</div>
<div class="foldopen" id="foldopen00051" data-start="{" data-end="}">
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno"><a class="line" href="../../d9/d32/classez_unicode_utils.htm#a7ee2e30f7fc86483b43011333a3f6702">   51</a></span>ezUInt32 <a class="code hl_function" href="../../d9/d32/classez_unicode_utils.htm#a7ee2e30f7fc86483b43011333a3f6702">ezUnicodeUtils::DecodeUtf8ToUtf32</a>(ByteIterator&amp; ref_szUtf8Iterator)</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>{</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>  <span class="keywordflow">return</span> utf8::unchecked::next(ref_szUtf8Iterator);</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>}</div>
</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span> </div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> UInt16Iterator&gt;</div>
<div class="foldopen" id="foldopen00057" data-start="{" data-end="}">
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno"><a class="line" href="../../d9/d32/classez_unicode_utils.htm#a8c0465e887e5e5754c581a1a9e7b6b09">   57</a></span><span class="keywordtype">bool</span> <a class="code hl_function" href="../../d9/d32/classez_unicode_utils.htm#a8c0465e887e5e5754c581a1a9e7b6b09">ezUnicodeUtils::IsUtf16Surrogate</a>(UInt16Iterator&amp; ref_szUtf16Iterator)</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>{</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>  uint32_t cp = utf8::internal::mask16(*ref_szUtf16Iterator);</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span>  <span class="keywordflow">return</span> utf8::internal::is_lead_surrogate(cp);</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>}</div>
</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span> </div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> UInt16Iterator&gt;</div>
<div class="foldopen" id="foldopen00064" data-start="{" data-end="}">
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno"><a class="line" href="../../d9/d32/classez_unicode_utils.htm#a00709223c9e83966947428b91291abce">   64</a></span>ezUInt32 <a class="code hl_function" href="../../d9/d32/classez_unicode_utils.htm#a00709223c9e83966947428b91291abce">ezUnicodeUtils::DecodeUtf16ToUtf32</a>(UInt16Iterator&amp; ref_szUtf16Iterator)</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>{</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span>  uint32_t cp = utf8::internal::mask16(*ref_szUtf16Iterator++);</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>  <span class="keywordflow">if</span> (utf8::internal::is_lead_surrogate(cp))</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>  {</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>    uint32_t trail_surrogate = utf8::internal::mask16(*ref_szUtf16Iterator++);</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>    cp = (cp &lt;&lt; 10) + trail_surrogate + utf8::internal::SURROGATE_OFFSET;</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>  }</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span> </div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>  <span class="keywordflow">return</span> cp;</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>}</div>
</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span> </div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> WCharIterator&gt;</div>
<div class="foldopen" id="foldopen00077" data-start="{" data-end="}">
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno"><a class="line" href="../../d9/d32/classez_unicode_utils.htm#aac35c78e757be093d40846df60d45207">   77</a></span>ezUInt32 <a class="code hl_function" href="../../d9/d32/classez_unicode_utils.htm#aac35c78e757be093d40846df60d45207">ezUnicodeUtils::DecodeWCharToUtf32</a>(WCharIterator&amp; ref_szWCharIterator)</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>{</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>  <span class="keywordflow">if</span> <span class="keyword">constexpr</span> (<span class="keyword">sizeof</span>(wchar_t) == 2)</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>  {</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>    <span class="keywordflow">return</span> <a class="code hl_function" href="../../d9/d32/classez_unicode_utils.htm#a00709223c9e83966947428b91291abce">DecodeUtf16ToUtf32</a>(ref_szWCharIterator);</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span>  }</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>  <span class="keywordflow">else</span> <span class="comment">// sizeof(wchar_t) == 4</span></div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>  {</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>    <span class="keyword">const</span> ezUInt32 uiResult = *ref_szWCharIterator;</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>    ++ref_szWCharIterator;</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>    <span class="keywordflow">return</span> uiResult;</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>  }</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>}</div>
</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span> </div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> ByteIterator&gt;</div>
<div class="foldopen" id="foldopen00092" data-start="{" data-end="}">
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno"><a class="line" href="../../d9/d32/classez_unicode_utils.htm#a482bd0122e8ad37eca5bf535b07a7315">   92</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../d9/d32/classez_unicode_utils.htm#a482bd0122e8ad37eca5bf535b07a7315">ezUnicodeUtils::EncodeUtf32ToUtf8</a>(ezUInt32 uiUtf32, ByteIterator&amp; ref_szUtf8Output)</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>{</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span>  ref_szUtf8Output = utf8::unchecked::utf32to8(&amp;uiUtf32, &amp;uiUtf32 + 1, ref_szUtf8Output);</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>}</div>
</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span> </div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> UInt16Iterator&gt;</div>
<div class="foldopen" id="foldopen00098" data-start="{" data-end="}">
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno"><a class="line" href="../../d9/d32/classez_unicode_utils.htm#aa0d0ac08d8ce989c14d83f19a92d6584">   98</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../d9/d32/classez_unicode_utils.htm#aa0d0ac08d8ce989c14d83f19a92d6584">ezUnicodeUtils::EncodeUtf32ToUtf16</a>(ezUInt32 uiUtf32, UInt16Iterator&amp; ref_szUtf16Output)</div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>{</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>  <span class="keywordflow">if</span> (uiUtf32 &gt; 0xffff)</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>  {</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>    <span class="comment">// make a surrogate pair</span></div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>    *ref_szUtf16Output++ = <span class="keyword">static_cast&lt;</span>uint16_t<span class="keyword">&gt;</span>((uiUtf32 &gt;&gt; 10) + utf8::internal::LEAD_OFFSET);</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>    *ref_szUtf16Output++ = <span class="keyword">static_cast&lt;</span>uint16_t<span class="keyword">&gt;</span>((uiUtf32 &amp; 0x3ff) + utf8::internal::TRAIL_SURROGATE_MIN);</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>  }</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>  <span class="keywordflow">else</span></div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>    *ref_szUtf16Output++ = <span class="keyword">static_cast&lt;</span>uint16_t<span class="keyword">&gt;</span>(uiUtf32);</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>}</div>
</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span> </div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> WCharIterator&gt;</div>
<div class="foldopen" id="foldopen00111" data-start="{" data-end="}">
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno"><a class="line" href="../../d9/d32/classez_unicode_utils.htm#abf2e3d2a3daac062c7d924db1e735dbe">  111</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../d9/d32/classez_unicode_utils.htm#abf2e3d2a3daac062c7d924db1e735dbe">ezUnicodeUtils::EncodeUtf32ToWChar</a>(ezUInt32 uiUtf32, WCharIterator&amp; ref_szWCharOutput)</div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span>{</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>  <span class="keywordflow">if</span> <span class="keyword">constexpr</span> (<span class="keyword">sizeof</span>(wchar_t) == 2)</div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span>  {</div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span>    <a class="code hl_function" href="../../d9/d32/classez_unicode_utils.htm#aa0d0ac08d8ce989c14d83f19a92d6584">EncodeUtf32ToUtf16</a>(uiUtf32, ref_szWCharOutput);</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>  }</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>  <span class="keywordflow">else</span></div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span>  {</div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>    *ref_szWCharOutput = <span class="keyword">static_cast&lt;</span><span class="keywordtype">wchar_t</span><span class="keyword">&gt;</span>(uiUtf32);</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>    ++ref_szWCharOutput;</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span>  }</div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>}</div>
</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span> </div>
<div class="foldopen" id="foldopen00124" data-start="{" data-end="}">
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno"><a class="line" href="../../d9/d32/classez_unicode_utils.htm#a14961aea9cc3791a6c9f48159fa64d9f">  124</a></span><span class="keyword">inline</span> ezUInt32 <a class="code hl_function" href="../../d9/d32/classez_unicode_utils.htm#a14961aea9cc3791a6c9f48159fa64d9f">ezUnicodeUtils::ConvertUtf8ToUtf32</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* pFirstChar)</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span>{</div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span>  <span class="keywordflow">return</span> utf8::unchecked::peek_next(pFirstChar);</div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span>}</div>
</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span> </div>
<div class="foldopen" id="foldopen00129" data-start="{" data-end="}">
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno"><a class="line" href="../../d9/d32/classez_unicode_utils.htm#a687c3c486dc9d1e276aedda44c7e62c7">  129</a></span><span class="keyword">inline</span> ezUInt32 <a class="code hl_function" href="../../d9/d32/classez_unicode_utils.htm#a687c3c486dc9d1e276aedda44c7e62c7">ezUnicodeUtils::GetSizeForCharacterInUtf8</a>(ezUInt32 uiCharacter)</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span>{</div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span>  <span class="comment">// Basically implements this: http://en.wikipedia.org/wiki/Utf8#Description</span></div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span> </div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span>  <span class="keywordflow">if</span> (uiCharacter &lt;= 0x0000007f)</div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>    <span class="keywordflow">return</span> 1;</div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span> </div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span>  <span class="keywordflow">if</span> (uiCharacter &lt;= 0x000007ff)</div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span>    <span class="keywordflow">return</span> 2;</div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span> </div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span>  <span class="keywordflow">if</span> (uiCharacter &lt;= 0x0000ffff)</div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>    <span class="keywordflow">return</span> 3;</div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span> </div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>  <span class="comment">// UTF-8 can use up to 6 bytes to encode a code point</span></div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span>  <span class="comment">// however some committee agreed that never more than 4 bytes are used (no need for more than 21 Bits)</span></div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span>  <span class="comment">// this implementation assumes in several places, that the UTF-8 encoding never uses more than 4 bytes</span></div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span> </div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span>  EZ_ASSERT_DEV(uiCharacter &lt;= 0x0010ffff, <span class="stringliteral">&quot;Invalid Unicode Codepoint&quot;</span>);</div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span>  <span class="keywordflow">return</span> 4;</div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span>}</div>
</div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span> </div>
<div class="foldopen" id="foldopen00150" data-start="{" data-end="}">
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno"><a class="line" href="../../d9/d32/classez_unicode_utils.htm#ae560190e97c0762412f9cae4b8ea39b9">  150</a></span>EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d9/d32/classez_unicode_utils.htm#ae560190e97c0762412f9cae4b8ea39b9">ezUnicodeUtils::IsValidUtf8</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szString, <span class="keyword">const</span> <span class="keywordtype">char</span>* szStringEnd)</div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span>{</div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span><span class="preprocessor">#if EZ_ENABLED(EZ_USE_STRING_VALIDATION)</span></div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span>  <span class="keywordflow">if</span> (szStringEnd == GetMaxStringEnd&lt;char&gt;())</div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span>    szStringEnd = szString + strlen(szString);</div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span> </div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span>  <span class="keywordflow">return</span> utf8::is_valid(szString, szStringEnd);</div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span><span class="preprocessor">#else</span></div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span>  EZ_IGNORE_UNUSED(szString);</div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span>  EZ_IGNORE_UNUSED(szStringEnd);</div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span>  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span>}</div>
</div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span> </div>
<div class="foldopen" id="foldopen00164" data-start="{" data-end="}">
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno"><a class="line" href="../../d9/d32/classez_unicode_utils.htm#a19160bdf6a76417aeb0b00619148d525">  164</a></span><span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d9/d32/classez_unicode_utils.htm#a19160bdf6a76417aeb0b00619148d525">ezUnicodeUtils::SkipUtf8Bom</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>*&amp; ref_szUtf8)</div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span>{</div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span>  EZ_ASSERT_DEBUG(ref_szUtf8 != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;This function expects non nullptr pointers&quot;</span>);</div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span> </div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span>  <span class="keywordflow">if</span> (utf8::starts_with_bom(ref_szUtf8, ref_szUtf8 + 4))</div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span>  {</div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span>    ref_szUtf8 += 3;</div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span>    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span>  }</div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span> </div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span>  <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span>}</div>
</div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span> </div>
<div class="foldopen" id="foldopen00177" data-start="{" data-end="}">
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno"><a class="line" href="../../d9/d32/classez_unicode_utils.htm#a8232b1adaebabaeeeddc2b98b36855de">  177</a></span><span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d9/d32/classez_unicode_utils.htm#a8232b1adaebabaeeeddc2b98b36855de">ezUnicodeUtils::SkipUtf16BomLE</a>(<span class="keyword">const</span> ezUInt16*&amp; ref_pUtf16)</div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span>{</div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span>  EZ_ASSERT_DEBUG(ref_pUtf16 != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;This function expects non nullptr pointers&quot;</span>);</div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span> </div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span>  <span class="keywordflow">if</span> (*ref_pUtf16 == <a class="code hl_variable" href="../../d9/d32/classez_unicode_utils.htm#ab4577c154bb2c133203d2b23ca486172">ezUnicodeUtils::Utf16BomLE</a>)</div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span>  {</div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno">  183</span>    ++ref_pUtf16;</div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span>    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span>  }</div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span> </div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span>  <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span>}</div>
</div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span> </div>
<div class="foldopen" id="foldopen00190" data-start="{" data-end="}">
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno"><a class="line" href="../../d9/d32/classez_unicode_utils.htm#a64b0f38b887bb909109a2864c155b654">  190</a></span><span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d9/d32/classez_unicode_utils.htm#a64b0f38b887bb909109a2864c155b654">ezUnicodeUtils::SkipUtf16BomBE</a>(<span class="keyword">const</span> ezUInt16*&amp; ref_pUtf16)</div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span>{</div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span>  EZ_ASSERT_DEBUG(ref_pUtf16 != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;This function expects non nullptr pointers&quot;</span>);</div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span> </div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span>  <span class="keywordflow">if</span> (*ref_pUtf16 == <a class="code hl_variable" href="../../d9/d32/classez_unicode_utils.htm#a9a4078cb0ffb999aea8f9816dd30b0f6">ezUnicodeUtils::Utf16BomBE</a>)</div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span>  {</div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span>    ++ref_pUtf16;</div>
<div class="line"><a id="l00197" name="l00197"></a><span class="lineno">  197</span>    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno">  198</span>  }</div>
<div class="line"><a id="l00199" name="l00199"></a><span class="lineno">  199</span> </div>
<div class="line"><a id="l00200" name="l00200"></a><span class="lineno">  200</span>  <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00201" name="l00201"></a><span class="lineno">  201</span>}</div>
</div>
<div class="line"><a id="l00202" name="l00202"></a><span class="lineno">  202</span> </div>
<div class="foldopen" id="foldopen00203" data-start="{" data-end="}">
<div class="line"><a id="l00203" name="l00203"></a><span class="lineno"><a class="line" href="../../d9/d32/classez_unicode_utils.htm#ac5acb55d1f2131f2e2578512c6f7c1ed">  203</a></span><span class="keyword">inline</span> <a class="code hl_struct" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code hl_function" href="../../d9/d32/classez_unicode_utils.htm#ac5acb55d1f2131f2e2578512c6f7c1ed">ezUnicodeUtils::MoveToNextUtf8</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>*&amp; ref_szUtf8, ezUInt32 uiNumCharacters)</div>
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno">  204</span>{</div>
<div class="line"><a id="l00205" name="l00205"></a><span class="lineno">  205</span>  EZ_ASSERT_DEBUG(ref_szUtf8 != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;Invalid string pointer to advance!&quot;</span>);</div>
<div class="line"><a id="l00206" name="l00206"></a><span class="lineno">  206</span> </div>
<div class="line"><a id="l00207" name="l00207"></a><span class="lineno">  207</span>  <span class="keywordflow">while</span> (uiNumCharacters &gt; 0)</div>
<div class="line"><a id="l00208" name="l00208"></a><span class="lineno">  208</span>  {</div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno">  209</span>    <span class="keywordflow">if</span> (*ref_szUtf8 == <span class="charliteral">&#39;\0&#39;</span>)</div>
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno">  210</span>      <span class="keywordflow">return</span> EZ_FAILURE;</div>
<div class="line"><a id="l00211" name="l00211"></a><span class="lineno">  211</span> </div>
<div class="line"><a id="l00212" name="l00212"></a><span class="lineno">  212</span>    <span class="keywordflow">do</span></div>
<div class="line"><a id="l00213" name="l00213"></a><span class="lineno">  213</span>    {</div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno">  214</span>      ++ref_szUtf8;</div>
<div class="line"><a id="l00215" name="l00215"></a><span class="lineno">  215</span>    } <span class="keywordflow">while</span> (<a class="code hl_function" href="../../d9/d32/classez_unicode_utils.htm#ac00681951c74c2c1ec4c2676b63d3b50">IsUtf8ContinuationByte</a>(*ref_szUtf8));</div>
<div class="line"><a id="l00216" name="l00216"></a><span class="lineno">  216</span> </div>
<div class="line"><a id="l00217" name="l00217"></a><span class="lineno">  217</span>    --uiNumCharacters;</div>
<div class="line"><a id="l00218" name="l00218"></a><span class="lineno">  218</span>  }</div>
<div class="line"><a id="l00219" name="l00219"></a><span class="lineno">  219</span> </div>
<div class="line"><a id="l00220" name="l00220"></a><span class="lineno">  220</span>  <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a id="l00221" name="l00221"></a><span class="lineno">  221</span>}</div>
</div>
<div class="line"><a id="l00222" name="l00222"></a><span class="lineno">  222</span> </div>
<div class="foldopen" id="foldopen00223" data-start="{" data-end="}">
<div class="line"><a id="l00223" name="l00223"></a><span class="lineno"><a class="line" href="../../d9/d32/classez_unicode_utils.htm#a6c62e4df4ef0f11d39d804587847ac55">  223</a></span><span class="keyword">inline</span> <a class="code hl_struct" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code hl_function" href="../../d9/d32/classez_unicode_utils.htm#ac5acb55d1f2131f2e2578512c6f7c1ed">ezUnicodeUtils::MoveToNextUtf8</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>*&amp; ref_szUtf8, <span class="keyword">const</span> <span class="keywordtype">char</span>* szUtf8End, ezUInt32 uiNumCharacters)</div>
<div class="line"><a id="l00224" name="l00224"></a><span class="lineno">  224</span>{</div>
<div class="line"><a id="l00225" name="l00225"></a><span class="lineno">  225</span>  EZ_ASSERT_DEBUG(ref_szUtf8 != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;Invalid string pointer to advance!&quot;</span>);</div>
<div class="line"><a id="l00226" name="l00226"></a><span class="lineno">  226</span> </div>
<div class="line"><a id="l00227" name="l00227"></a><span class="lineno">  227</span>  <span class="keywordflow">while</span> (uiNumCharacters &gt; 0)</div>
<div class="line"><a id="l00228" name="l00228"></a><span class="lineno">  228</span>  {</div>
<div class="line"><a id="l00229" name="l00229"></a><span class="lineno">  229</span>    <span class="keywordflow">if</span> (ref_szUtf8 &gt;= szUtf8End || *ref_szUtf8 == <span class="charliteral">&#39;\0&#39;</span>)</div>
<div class="line"><a id="l00230" name="l00230"></a><span class="lineno">  230</span>      <span class="keywordflow">return</span> EZ_FAILURE;</div>
<div class="line"><a id="l00231" name="l00231"></a><span class="lineno">  231</span> </div>
<div class="line"><a id="l00232" name="l00232"></a><span class="lineno">  232</span>    <span class="keywordflow">do</span></div>
<div class="line"><a id="l00233" name="l00233"></a><span class="lineno">  233</span>    {</div>
<div class="line"><a id="l00234" name="l00234"></a><span class="lineno">  234</span>      ++ref_szUtf8;</div>
<div class="line"><a id="l00235" name="l00235"></a><span class="lineno">  235</span>    } <span class="keywordflow">while</span> ((ref_szUtf8 &lt; szUtf8End) &amp;&amp; <a class="code hl_function" href="../../d9/d32/classez_unicode_utils.htm#ac00681951c74c2c1ec4c2676b63d3b50">IsUtf8ContinuationByte</a>(*ref_szUtf8));</div>
<div class="line"><a id="l00236" name="l00236"></a><span class="lineno">  236</span> </div>
<div class="line"><a id="l00237" name="l00237"></a><span class="lineno">  237</span>    --uiNumCharacters;</div>
<div class="line"><a id="l00238" name="l00238"></a><span class="lineno">  238</span>  }</div>
<div class="line"><a id="l00239" name="l00239"></a><span class="lineno">  239</span> </div>
<div class="line"><a id="l00240" name="l00240"></a><span class="lineno">  240</span>  <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a id="l00241" name="l00241"></a><span class="lineno">  241</span>}</div>
</div>
<div class="line"><a id="l00242" name="l00242"></a><span class="lineno">  242</span> </div>
<div class="foldopen" id="foldopen00243" data-start="{" data-end="}">
<div class="line"><a id="l00243" name="l00243"></a><span class="lineno"><a class="line" href="../../d9/d32/classez_unicode_utils.htm#a6a90c6df6d77b7e3019eb8701441c749">  243</a></span><span class="keyword">inline</span> <a class="code hl_struct" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code hl_function" href="../../d9/d32/classez_unicode_utils.htm#a6a90c6df6d77b7e3019eb8701441c749">ezUnicodeUtils::MoveToPriorUtf8</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>*&amp; ref_szUtf8, <span class="keyword">const</span> <span class="keywordtype">char</span>* szUtf8Start, ezUInt32 uiNumCharacters)</div>
<div class="line"><a id="l00244" name="l00244"></a><span class="lineno">  244</span>{</div>
<div class="line"><a id="l00245" name="l00245"></a><span class="lineno">  245</span>  EZ_ASSERT_DEBUG(ref_szUtf8 != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;Invalid string pointer to advance!&quot;</span>);</div>
<div class="line"><a id="l00246" name="l00246"></a><span class="lineno">  246</span> </div>
<div class="line"><a id="l00247" name="l00247"></a><span class="lineno">  247</span>  <span class="keywordflow">while</span> (uiNumCharacters &gt; 0)</div>
<div class="line"><a id="l00248" name="l00248"></a><span class="lineno">  248</span>  {</div>
<div class="line"><a id="l00249" name="l00249"></a><span class="lineno">  249</span>    <span class="keywordflow">if</span> (ref_szUtf8 &lt;= szUtf8Start)</div>
<div class="line"><a id="l00250" name="l00250"></a><span class="lineno">  250</span>      <span class="keywordflow">return</span> EZ_FAILURE;</div>
<div class="line"><a id="l00251" name="l00251"></a><span class="lineno">  251</span> </div>
<div class="line"><a id="l00252" name="l00252"></a><span class="lineno">  252</span>    <span class="keywordflow">do</span></div>
<div class="line"><a id="l00253" name="l00253"></a><span class="lineno">  253</span>    {</div>
<div class="line"><a id="l00254" name="l00254"></a><span class="lineno">  254</span>      --ref_szUtf8;</div>
<div class="line"><a id="l00255" name="l00255"></a><span class="lineno">  255</span>    } <span class="keywordflow">while</span> (<a class="code hl_function" href="../../d9/d32/classez_unicode_utils.htm#ac00681951c74c2c1ec4c2676b63d3b50">IsUtf8ContinuationByte</a>(*ref_szUtf8));</div>
<div class="line"><a id="l00256" name="l00256"></a><span class="lineno">  256</span> </div>
<div class="line"><a id="l00257" name="l00257"></a><span class="lineno">  257</span>    --uiNumCharacters;</div>
<div class="line"><a id="l00258" name="l00258"></a><span class="lineno">  258</span>  }</div>
<div class="line"><a id="l00259" name="l00259"></a><span class="lineno">  259</span> </div>
<div class="line"><a id="l00260" name="l00260"></a><span class="lineno">  260</span>  <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a id="l00261" name="l00261"></a><span class="lineno">  261</span>}</div>
</div>
<div class="line"><a id="l00262" name="l00262"></a><span class="lineno">  262</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="foldopen" id="foldopen00263" data-start="{" data-end="}">
<div class="line"><a id="l00263" name="l00263"></a><span class="lineno"><a class="line" href="../../d9/d32/classez_unicode_utils.htm#a580463d2f8474b7119639fa86104cb93">  263</a></span><span class="keyword">constexpr</span> T* <a class="code hl_function" href="../../d9/d32/classez_unicode_utils.htm#a580463d2f8474b7119639fa86104cb93">ezUnicodeUtils::GetMaxStringEnd</a>()</div>
<div class="line"><a id="l00264" name="l00264"></a><span class="lineno">  264</span>{</div>
<div class="line"><a id="l00265" name="l00265"></a><span class="lineno">  265</span>  <span class="keywordflow">return</span> <span class="keyword">reinterpret_cast&lt;</span>T*<span class="keyword">&gt;</span>(-1);</div>
<div class="line"><a id="l00266" name="l00266"></a><span class="lineno">  266</span>}</div>
</div>
<div class="ttc" id="aclassez_unicode_utils_htm_a00709223c9e83966947428b91291abce"><div class="ttname"><a href="../../d9/d32/classez_unicode_utils.htm#a00709223c9e83966947428b91291abce">ezUnicodeUtils::DecodeUtf16ToUtf32</a></div><div class="ttdeci">static ezUInt32 DecodeUtf16ToUtf32(UInt16Iterator &amp;ref_szUtf16Iterator)</div><div class="ttdoc">Decodes the next character from the given Utf16 sequence to Utf32 and increments the iterator as far ...</div><div class="ttdef"><b>Definition</b> UnicodeUtils_inl.h:64</div></div>
<div class="ttc" id="aclassez_unicode_utils_htm_a14961aea9cc3791a6c9f48159fa64d9f"><div class="ttname"><a href="../../d9/d32/classez_unicode_utils.htm#a14961aea9cc3791a6c9f48159fa64d9f">ezUnicodeUtils::ConvertUtf8ToUtf32</a></div><div class="ttdeci">static ezUInt32 ConvertUtf8ToUtf32(const char *pFirstChar)</div><div class="ttdoc">Converts the UTF-8 character that starts at pFirstChar into a UTF-32 character.</div><div class="ttdef"><b>Definition</b> UnicodeUtils_inl.h:124</div></div>
<div class="ttc" id="aclassez_unicode_utils_htm_a19160bdf6a76417aeb0b00619148d525"><div class="ttname"><a href="../../d9/d32/classez_unicode_utils.htm#a19160bdf6a76417aeb0b00619148d525">ezUnicodeUtils::SkipUtf8Bom</a></div><div class="ttdeci">static bool SkipUtf8Bom(const char *&amp;ref_szUtf8)</div><div class="ttdoc">If the given string starts with a Utf8 Bom, the pointer is incremented behind the Bom,...</div><div class="ttdef"><b>Definition</b> UnicodeUtils_inl.h:164</div></div>
<div class="ttc" id="aclassez_unicode_utils_htm_a2fad376e8b879b5731ae33c512e14f51"><div class="ttname"><a href="../../d9/d32/classez_unicode_utils.htm#a2fad376e8b879b5731ae33c512e14f51">ezUnicodeUtils::IsUtf8StartByte</a></div><div class="ttdeci">static bool IsUtf8StartByte(char iByte)</div><div class="ttdoc">Checks whether the given byte is a start byte in a UTF-8 multi-byte sequence.</div><div class="ttdef"><b>Definition</b> UnicodeUtils_inl.h:11</div></div>
<div class="ttc" id="aclassez_unicode_utils_htm_a482bd0122e8ad37eca5bf535b07a7315"><div class="ttname"><a href="../../d9/d32/classez_unicode_utils.htm#a482bd0122e8ad37eca5bf535b07a7315">ezUnicodeUtils::EncodeUtf32ToUtf8</a></div><div class="ttdeci">static void EncodeUtf32ToUtf8(ezUInt32 uiUtf32, ByteIterator &amp;ref_szUtf8Output)</div><div class="ttdoc">Encodes the given Utf32 character to Utf8 and writes as many bytes to the output iterator,...</div><div class="ttdef"><b>Definition</b> UnicodeUtils_inl.h:92</div></div>
<div class="ttc" id="aclassez_unicode_utils_htm_a580463d2f8474b7119639fa86104cb93"><div class="ttname"><a href="../../d9/d32/classez_unicode_utils.htm#a580463d2f8474b7119639fa86104cb93">ezUnicodeUtils::GetMaxStringEnd</a></div><div class="ttdeci">static constexpr T * GetMaxStringEnd()</div><div class="ttdoc">[internal] Returns the max string end pointer for the given type</div><div class="ttdef"><b>Definition</b> UnicodeUtils_inl.h:263</div></div>
<div class="ttc" id="aclassez_unicode_utils_htm_a64b0f38b887bb909109a2864c155b654"><div class="ttname"><a href="../../d9/d32/classez_unicode_utils.htm#a64b0f38b887bb909109a2864c155b654">ezUnicodeUtils::SkipUtf16BomBE</a></div><div class="ttdeci">static bool SkipUtf16BomBE(const ezUInt16 *&amp;ref_pUtf16)</div><div class="ttdoc">If the given string starts with a Utf16 big endian Bom, the pointer is incremented behind the Bom,...</div><div class="ttdef"><b>Definition</b> UnicodeUtils_inl.h:190</div></div>
<div class="ttc" id="aclassez_unicode_utils_htm_a687c3c486dc9d1e276aedda44c7e62c7"><div class="ttname"><a href="../../d9/d32/classez_unicode_utils.htm#a687c3c486dc9d1e276aedda44c7e62c7">ezUnicodeUtils::GetSizeForCharacterInUtf8</a></div><div class="ttdeci">static ezUInt32 GetSizeForCharacterInUtf8(ezUInt32 uiCharacter)</div><div class="ttdoc">Computes how many bytes the character would require, if encoded in UTF-8.</div><div class="ttdef"><b>Definition</b> UnicodeUtils_inl.h:129</div></div>
<div class="ttc" id="aclassez_unicode_utils_htm_a6a90c6df6d77b7e3019eb8701441c749"><div class="ttname"><a href="../../d9/d32/classez_unicode_utils.htm#a6a90c6df6d77b7e3019eb8701441c749">ezUnicodeUtils::MoveToPriorUtf8</a></div><div class="ttdeci">static ezResult MoveToPriorUtf8(const char *&amp;ref_szUtf8, const char *szUtf8Start, ezUInt32 uiNumCharacters=1)</div><div class="ttdoc">Moves the given string pointer backwards to the previous Utf8 character sequence.</div><div class="ttdef"><b>Definition</b> UnicodeUtils_inl.h:243</div></div>
<div class="ttc" id="aclassez_unicode_utils_htm_a7ee2e30f7fc86483b43011333a3f6702"><div class="ttname"><a href="../../d9/d32/classez_unicode_utils.htm#a7ee2e30f7fc86483b43011333a3f6702">ezUnicodeUtils::DecodeUtf8ToUtf32</a></div><div class="ttdeci">static ezUInt32 DecodeUtf8ToUtf32(ByteIterator &amp;ref_szUtf8Iterator)</div><div class="ttdoc">Decodes the next character from the given Utf8 sequence to Utf32 and increments the iterator as far a...</div><div class="ttdef"><b>Definition</b> UnicodeUtils_inl.h:51</div></div>
<div class="ttc" id="aclassez_unicode_utils_htm_a8232b1adaebabaeeeddc2b98b36855de"><div class="ttname"><a href="../../d9/d32/classez_unicode_utils.htm#a8232b1adaebabaeeeddc2b98b36855de">ezUnicodeUtils::SkipUtf16BomLE</a></div><div class="ttdeci">static bool SkipUtf16BomLE(const ezUInt16 *&amp;ref_pUtf16)</div><div class="ttdoc">If the given string starts with a Utf16 little endian Bom, the pointer is incremented behind the Bom,...</div><div class="ttdef"><b>Definition</b> UnicodeUtils_inl.h:177</div></div>
<div class="ttc" id="aclassez_unicode_utils_htm_a8c0465e887e5e5754c581a1a9e7b6b09"><div class="ttname"><a href="../../d9/d32/classez_unicode_utils.htm#a8c0465e887e5e5754c581a1a9e7b6b09">ezUnicodeUtils::IsUtf16Surrogate</a></div><div class="ttdeci">static bool IsUtf16Surrogate(UInt16Iterator &amp;ref_szUtf16Iterator)</div><div class="ttdoc">Characters that cannot be represented in a single utf16 code point need to be split up into two surro...</div><div class="ttdef"><b>Definition</b> UnicodeUtils_inl.h:57</div></div>
<div class="ttc" id="aclassez_unicode_utils_htm_a9a4078cb0ffb999aea8f9816dd30b0f6"><div class="ttname"><a href="../../d9/d32/classez_unicode_utils.htm#a9a4078cb0ffb999aea8f9816dd30b0f6">ezUnicodeUtils::Utf16BomBE</a></div><div class="ttdeci">static constexpr ezUInt16 Utf16BomBE</div><div class="ttdoc">Byte Order Mark for Big Endian Utf16 strings.</div><div class="ttdef"><b>Definition</b> UnicodeUtils.h:22</div></div>
<div class="ttc" id="aclassez_unicode_utils_htm_aa0d0ac08d8ce989c14d83f19a92d6584"><div class="ttname"><a href="../../d9/d32/classez_unicode_utils.htm#aa0d0ac08d8ce989c14d83f19a92d6584">ezUnicodeUtils::EncodeUtf32ToUtf16</a></div><div class="ttdeci">static void EncodeUtf32ToUtf16(ezUInt32 uiUtf32, UInt16Iterator &amp;ref_szUtf16Output)</div><div class="ttdoc">Encodes the given Utf32 character to Utf16 and writes as many bytes to the output iterator,...</div><div class="ttdef"><b>Definition</b> UnicodeUtils_inl.h:98</div></div>
<div class="ttc" id="aclassez_unicode_utils_htm_aa8fc2304ec3c1db82831c424097a30f5"><div class="ttname"><a href="../../d9/d32/classez_unicode_utils.htm#aa8fc2304ec3c1db82831c424097a30f5">ezUnicodeUtils::IsASCII</a></div><div class="ttdeci">static bool IsASCII(ezUInt32 uiChar)</div><div class="ttdoc">Returns whether a character is a pure ASCII character (only the first 7 Bits are used)</div><div class="ttdef"><b>Definition</b> UnicodeUtils_inl.h:23</div></div>
<div class="ttc" id="aclassez_unicode_utils_htm_aac35c78e757be093d40846df60d45207"><div class="ttname"><a href="../../d9/d32/classez_unicode_utils.htm#aac35c78e757be093d40846df60d45207">ezUnicodeUtils::DecodeWCharToUtf32</a></div><div class="ttdeci">static ezUInt32 DecodeWCharToUtf32(WCharIterator &amp;ref_szWCharIterator)</div><div class="ttdoc">Decodes the next character from the given wchar_t sequence to Utf32 and increments the iterator as fa...</div><div class="ttdef"><b>Definition</b> UnicodeUtils_inl.h:77</div></div>
<div class="ttc" id="aclassez_unicode_utils_htm_ab4577c154bb2c133203d2b23ca486172"><div class="ttname"><a href="../../d9/d32/classez_unicode_utils.htm#ab4577c154bb2c133203d2b23ca486172">ezUnicodeUtils::Utf16BomLE</a></div><div class="ttdeci">static constexpr ezUInt16 Utf16BomLE</div><div class="ttdoc">Byte Order Mark for Little Endian Utf16 strings.</div><div class="ttdef"><b>Definition</b> UnicodeUtils.h:19</div></div>
<div class="ttc" id="aclassez_unicode_utils_htm_abc9baf68573084c38716f6c09bcf9138"><div class="ttname"><a href="../../d9/d32/classez_unicode_utils.htm#abc9baf68573084c38716f6c09bcf9138">ezUnicodeUtils::GetUtf8SequenceLength</a></div><div class="ttdeci">static ezUInt32 GetUtf8SequenceLength(char iFirstByte)</div><div class="ttdoc">Returns the number of bytes that a UTF-8 sequence is in length, which is encoded in the first byte of...</div><div class="ttdef"><b>Definition</b> UnicodeUtils_inl.h:28</div></div>
<div class="ttc" id="aclassez_unicode_utils_htm_abf2e3d2a3daac062c7d924db1e735dbe"><div class="ttname"><a href="../../d9/d32/classez_unicode_utils.htm#abf2e3d2a3daac062c7d924db1e735dbe">ezUnicodeUtils::EncodeUtf32ToWChar</a></div><div class="ttdeci">static void EncodeUtf32ToWChar(ezUInt32 uiUtf32, WCharIterator &amp;ref_szWCharOutput)</div><div class="ttdoc">Encodes the given Utf32 character to wchar_t and writes as many bytes to the output iterator,...</div><div class="ttdef"><b>Definition</b> UnicodeUtils_inl.h:111</div></div>
<div class="ttc" id="aclassez_unicode_utils_htm_ac00681951c74c2c1ec4c2676b63d3b50"><div class="ttname"><a href="../../d9/d32/classez_unicode_utils.htm#ac00681951c74c2c1ec4c2676b63d3b50">ezUnicodeUtils::IsUtf8ContinuationByte</a></div><div class="ttdeci">static bool IsUtf8ContinuationByte(char iByte)</div><div class="ttdoc">Checks whether the given byte is a byte in a UTF-8 multi-byte sequence.</div><div class="ttdef"><b>Definition</b> UnicodeUtils_inl.h:17</div></div>
<div class="ttc" id="aclassez_unicode_utils_htm_ac5acb55d1f2131f2e2578512c6f7c1ed"><div class="ttname"><a href="../../d9/d32/classez_unicode_utils.htm#ac5acb55d1f2131f2e2578512c6f7c1ed">ezUnicodeUtils::MoveToNextUtf8</a></div><div class="ttdeci">static ezResult MoveToNextUtf8(const char *&amp;ref_szUtf8, ezUInt32 uiNumCharacters=1)</div><div class="ttdoc">Moves the given string pointer ahead to the next Utf8 character sequence.</div><div class="ttdef"><b>Definition</b> UnicodeUtils_inl.h:203</div></div>
<div class="ttc" id="aclassez_unicode_utils_htm_ae560190e97c0762412f9cae4b8ea39b9"><div class="ttname"><a href="../../d9/d32/classez_unicode_utils.htm#ae560190e97c0762412f9cae4b8ea39b9">ezUnicodeUtils::IsValidUtf8</a></div><div class="ttdeci">static bool IsValidUtf8(const char *szString, const char *szStringEnd=GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Returns false if the given string does not contain a completely valid Utf8 string.</div><div class="ttdef"><b>Definition</b> UnicodeUtils_inl.h:150</div></div>
<div class="ttc" id="astructez_result_htm"><div class="ttname"><a href="../../d4/da9/structez_result.htm">ezResult</a></div><div class="ttdoc">Default enum for returning failure or success, instead of using a bool.</div><div class="ttdef"><b>Definition</b> Types.h:54</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_b52479c911fe9a42767226b3387b3a02.htm">Strings</a></li><li class="navelem"><a class="el" href="../../dir_067384bf2c73f8a8078edb859c0ba426.htm">Implementation</a></li><li class="navelem"><b>UnicodeUtils_inl.h</b></li>
    <li class="footer">Generated on Fri Jul 11 2025 12:17:53 for ezEngine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
