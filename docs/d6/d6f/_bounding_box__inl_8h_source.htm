<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Math/Implementation/BoundingBox_inl.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">ezEngine<span id="projectnumber">&#160;Release 25.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function() { init_codefold(1); });
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('d6/d6f/_bounding_box__inl_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">BoundingBox_inl.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="preprocessor">#include &lt;Foundation/Math/Mat4.h&gt;</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span> </div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span>EZ_ALWAYS_INLINE <a class="code hl_function" href="../../d6/d25/classez_bounding_box_template.htm#a9e7856a6da6bc5f71440e309584b7238">ezBoundingBoxTemplate&lt;Type&gt;::ezBoundingBoxTemplate</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span> </div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00009" data-start="{" data-end="}">
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#a4baf0a26aafdf68d78f63ed6c0721203">    9</a></span>EZ_FORCE_INLINE <a class="code hl_function" href="../../d6/d25/classez_bounding_box_template.htm#a9e7856a6da6bc5f71440e309584b7238">ezBoundingBoxTemplate&lt;Type&gt;::ezBoundingBoxTemplate</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vMin, <span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vMax)</div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span>{</div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span>  *<span class="keyword">this</span> = MakeFromMinMax(vMin, vMax);</div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span>}</div>
</div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span> </div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00015" data-start="{" data-end="}">
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#a1e522040c3c34c9ece7035a9116280f9">   15</a></span>EZ_FORCE_INLINE <a class="code hl_class" href="../../d6/d25/classez_bounding_box_template.htm">ezBoundingBoxTemplate&lt;Type&gt;</a> <a class="code hl_function" href="../../d6/d25/classez_bounding_box_template.htm#a1e522040c3c34c9ece7035a9116280f9">ezBoundingBoxTemplate&lt;Type&gt;::MakeZero</a>()</div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span>{</div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span>  <a class="code hl_class" href="../../d6/d25/classez_bounding_box_template.htm">ezBoundingBoxTemplate&lt;Type&gt;</a> res;</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span>  res.m_vMin = <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a42872bfbb26be83b6e0d0066fe772258">ezVec3Template&lt;Type&gt;::MakeZero</a>();</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span>  res.m_vMax = <a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a42872bfbb26be83b6e0d0066fe772258">ezVec3Template&lt;Type&gt;::MakeZero</a>();</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span>  <span class="keywordflow">return</span> res;</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span>}</div>
</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span> </div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00024" data-start="{" data-end="}">
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#a4baf0a26aafdf68d78f63ed6c0721203">   24</a></span>EZ_FORCE_INLINE <a class="code hl_class" href="../../d6/d25/classez_bounding_box_template.htm">ezBoundingBoxTemplate&lt;Type&gt;</a> <a class="code hl_function" href="../../d6/d25/classez_bounding_box_template.htm#a31501fc2dd571ba1f8986bf40320f396">ezBoundingBoxTemplate&lt;Type&gt;::MakeInvalid</a>()</div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span>{</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span>  <a class="code hl_class" href="../../d6/d25/classez_bounding_box_template.htm">ezBoundingBoxTemplate&lt;Type&gt;</a> res;</div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span>  res.m_vMin.Set(ezMath::MaxValue&lt;Type&gt;());</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span>  res.m_vMax.Set(-ezMath::MaxValue&lt;Type&gt;());</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span>  <span class="keywordflow">return</span> res;</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span>}</div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span> </div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00033" data-start="{" data-end="}">
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#a23c099531d15e150f84f226e295062d7">   33</a></span>EZ_FORCE_INLINE <a class="code hl_class" href="../../d6/d25/classez_bounding_box_template.htm">ezBoundingBoxTemplate&lt;Type&gt;</a> <a class="code hl_function" href="../../d6/d25/classez_bounding_box_template.htm#a23c099531d15e150f84f226e295062d7">ezBoundingBoxTemplate&lt;Type&gt;::MakeFromCenterAndHalfExtents</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vCenter, <span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vHalfExtents)</div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span>{</div>
<div class="foldopen" id="foldopen00035" data-start="{" data-end="}">
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#a1e522040c3c34c9ece7035a9116280f9">   35</a></span>  <a class="code hl_class" href="../../d6/d25/classez_bounding_box_template.htm">ezBoundingBoxTemplate&lt;Type&gt;</a> res;</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span>  res.m_vMin = vCenter - vHalfExtents;</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span>  res.m_vMax = vCenter + vHalfExtents;</div>
<div class="foldopen" id="foldopen00038" data-start="{" data-end="}">
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#a31501fc2dd571ba1f8986bf40320f396">   38</a></span>  <span class="keywordflow">return</span> res;</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span>}</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span> </div>
<div class="foldopen" id="foldopen00041" data-start="{" data-end="}">
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#a23c099531d15e150f84f226e295062d7">   41</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00042" data-start="{" data-end="}">
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#a4599f3e1af7765dcdac1dbd3353862eb">   42</a></span>EZ_FORCE_INLINE <a class="code hl_class" href="../../d6/d25/classez_bounding_box_template.htm">ezBoundingBoxTemplate&lt;Type&gt;</a> <a class="code hl_function" href="../../d6/d25/classez_bounding_box_template.htm#a4599f3e1af7765dcdac1dbd3353862eb">ezBoundingBoxTemplate&lt;Type&gt;::MakeFromMinMax</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vMin, <span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vMax)</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span>{</div>
<div class="foldopen" id="foldopen00044" data-start="{" data-end="}">
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#a4599f3e1af7765dcdac1dbd3353862eb">   44</a></span>  <a class="code hl_class" href="../../d6/d25/classez_bounding_box_template.htm">ezBoundingBoxTemplate&lt;Type&gt;</a> res;</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>  res.m_vMin = vMin;</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span>  res.m_vMax = vMax;</div>
<div class="foldopen" id="foldopen00047" data-start="{" data-end="}">
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#a32a4753ead3ebe710720283b97880c77">   47</a></span> </div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>  EZ_ASSERT_DEBUG(res.<a class="code hl_function" href="../../d6/d25/classez_bounding_box_template.htm#ac69be90f51d35d38cd90588ce9442809">IsValid</a>(), <span class="stringliteral">&quot;The given values don&#39;t create a valid bounding box ({0} | {1} | {2} - {3} | {4} | {5})&quot;</span>, <a class="code hl_struct" href="../../d7/dfa/structez_arg_f.htm">ezArgF</a>(vMin.x, 2), <a class="code hl_struct" href="../../d7/dfa/structez_arg_f.htm">ezArgF</a>(vMin.y, 2), <a class="code hl_struct" href="../../d7/dfa/structez_arg_f.htm">ezArgF</a>(vMin.z, 2), <a class="code hl_struct" href="../../d7/dfa/structez_arg_f.htm">ezArgF</a>(vMax.x, 2), <a class="code hl_struct" href="../../d7/dfa/structez_arg_f.htm">ezArgF</a>(vMax.y, 2), <a class="code hl_struct" href="../../d7/dfa/structez_arg_f.htm">ezArgF</a>(vMax.z, 2));</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span> </div>
<div class="foldopen" id="foldopen00050" data-start="{" data-end="}">
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#ac69be90f51d35d38cd90588ce9442809">   50</a></span>  <span class="keywordflow">return</span> res;</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>}</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span> </div>
<div class="foldopen" id="foldopen00053" data-start="{" data-end="}">
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#ab921f13ead8b40ac2dc501fd09b64785">   53</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00054" data-start="{" data-end="}">
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#a32a4753ead3ebe710720283b97880c77">   54</a></span>EZ_FORCE_INLINE <a class="code hl_class" href="../../d6/d25/classez_bounding_box_template.htm">ezBoundingBoxTemplate&lt;Type&gt;</a> <a class="code hl_function" href="../../d6/d25/classez_bounding_box_template.htm#a32a4753ead3ebe710720283b97880c77">ezBoundingBoxTemplate&lt;Type&gt;::MakeFromPoints</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>* pPoints, ezUInt32 uiNumPoints, ezUInt32 uiStride <span class="comment">/*= sizeof(ezVec3Template&lt;Type&gt;)*/</span>)</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>{</div>
<div class="foldopen" id="foldopen00056" data-start="{" data-end="}">
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#ac08ca0cfe8e130b306f9cb253831ba86">   56</a></span>  <a class="code hl_class" href="../../d6/d25/classez_bounding_box_template.htm">ezBoundingBoxTemplate&lt;Type&gt;</a> res = MakeInvalid();</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>  res.<a class="code hl_function" href="../../d6/d25/classez_bounding_box_template.htm#ad6684e555ebc4629c2680ceb768b1ee1">ExpandToInclude</a>(pPoints, uiNumPoints, uiStride);</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>  <span class="keywordflow">return</span> res;</div>
<div class="foldopen" id="foldopen00059" data-start="{" data-end="}">
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#a5b5cf92c58c3c07892417738696d0ed6">   59</a></span>}</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span> </div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00062" data-start="{" data-end="}">
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#ac08ca0cfe8e130b306f9cb253831ba86">   62</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../d6/d25/classez_bounding_box_template.htm#ac08ca0cfe8e130b306f9cb253831ba86">ezBoundingBoxTemplate&lt;Type&gt;::GetCorners</a>(<a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>* out_pCorners)<span class="keyword"> const</span></div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span>  EZ_NAN_ASSERT(<span class="keyword">this</span>);</div>
<div class="foldopen" id="foldopen00065" data-start="{" data-end="}">
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#aa05f968b190ff2bdd069854f6a1a9151">   65</a></span>  EZ_ASSERT_DEBUG(out_pCorners != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;Out Parameter must not be nullptr.&quot;</span>);</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span> </div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>  out_pCorners[0].<a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a4693ce7e3ea568fb31504369e69836fb">Set</a>(m_vMin.x, m_vMin.y, m_vMin.z);</div>
<div class="foldopen" id="foldopen00068" data-start="{" data-end="}">
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#ad6684e555ebc4629c2680ceb768b1ee1">   68</a></span>  out_pCorners[1].<a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a4693ce7e3ea568fb31504369e69836fb">Set</a>(m_vMin.x, m_vMin.y, m_vMax.z);</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>  out_pCorners[2].<a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a4693ce7e3ea568fb31504369e69836fb">Set</a>(m_vMin.x, m_vMax.y, m_vMin.z);</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>  out_pCorners[3].<a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a4693ce7e3ea568fb31504369e69836fb">Set</a>(m_vMin.x, m_vMax.y, m_vMax.z);</div>
<div class="foldopen" id="foldopen00071" data-start="{" data-end="}">
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#ac39c75f8e03718c89e4c59b7668dd26f">   71</a></span>  out_pCorners[4].<a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a4693ce7e3ea568fb31504369e69836fb">Set</a>(m_vMax.x, m_vMin.y, m_vMin.z);</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>  out_pCorners[5].<a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a4693ce7e3ea568fb31504369e69836fb">Set</a>(m_vMax.x, m_vMin.y, m_vMax.z);</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>  out_pCorners[6].<a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a4693ce7e3ea568fb31504369e69836fb">Set</a>(m_vMax.x, m_vMax.y, m_vMin.z);</div>
<div class="foldopen" id="foldopen00074" data-start="{" data-end="}">
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#a9c31a9a32af0e204f169f7cf4fdc9b45">   74</a></span>  out_pCorners[7].<a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a4693ce7e3ea568fb31504369e69836fb">Set</a>(m_vMax.x, m_vMax.y, m_vMax.z);</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>}</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span> </div>
<div class="foldopen" id="foldopen00077" data-start="{" data-end="}">
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#a5cb16eb5a9ec92bd0d8325ed7642441e">   77</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00078" data-start="{" data-end="}">
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#a5b5cf92c58c3c07892417738696d0ed6">   78</a></span>EZ_FORCE_INLINE <span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../d6/d25/classez_bounding_box_template.htm#a5b5cf92c58c3c07892417738696d0ed6">ezBoundingBoxTemplate&lt;Type&gt;::GetCenter</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span><span class="keyword"></span>{</div>
<div class="foldopen" id="foldopen00080" data-start="{" data-end="}">
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#ad59a4af199ac0a7afadec9fddb8b986f">   80</a></span>  <span class="keywordflow">return</span> m_vMin + GetHalfExtents();</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>}</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span> </div>
<div class="foldopen" id="foldopen00083" data-start="{" data-end="}">
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#a483bf35eb69bb1a1ab87ca0deb7f8a93">   83</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00084" data-start="{" data-end="}">
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#a6fa427974e16355e5a87935b44e33dad">   84</a></span>EZ_ALWAYS_INLINE <span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../d6/d25/classez_bounding_box_template.htm#a6fa427974e16355e5a87935b44e33dad">ezBoundingBoxTemplate&lt;Type&gt;::GetExtents</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span><span class="keyword"></span>{</div>
<div class="foldopen" id="foldopen00086" data-start="{" data-end="}">
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#ac292e4095bebdc00d8bad2bc4643077f">   86</a></span>  <span class="keywordflow">return</span> m_vMax - m_vMin;</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>}</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span> </div>
<div class="foldopen" id="foldopen00089" data-start="{" data-end="}">
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#a2ecb09d828210fb6901a8f3850e228f9">   89</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00090" data-start="{" data-end="}">
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#aa05f968b190ff2bdd069854f6a1a9151">   90</a></span>EZ_FORCE_INLINE <span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../d6/d25/classez_bounding_box_template.htm#aa05f968b190ff2bdd069854f6a1a9151">ezBoundingBoxTemplate&lt;Type&gt;::GetHalfExtents</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>  <span class="keywordflow">return</span> (m_vMax - m_vMin) / (Type)2;</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>}</div>
</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span> </div>
<div class="foldopen" id="foldopen00095" data-start="{" data-end="}">
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#a50ce4fbb4a3485a58d363ab0e4355663">   95</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00096" data-start="{" data-end="}">
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#ac69be90f51d35d38cd90588ce9442809">   96</a></span><span class="keywordtype">bool</span> <a class="code hl_function" href="../../d6/d25/classez_bounding_box_template.htm#ac69be90f51d35d38cd90588ce9442809">ezBoundingBoxTemplate&lt;Type&gt;::IsValid</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span><span class="keyword"></span>{</div>
<div class="foldopen" id="foldopen00098" data-start="{" data-end="}">
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#ae7eef5f9eb661343eb37c899045e0f76">   98</a></span>  <span class="keywordflow">return</span> (m_vMin.IsValid() &amp;&amp; m_vMax.IsValid() &amp;&amp; m_vMin.x &lt;= m_vMax.x &amp;&amp; m_vMin.y &lt;= m_vMax.y &amp;&amp; m_vMin.z &lt;= m_vMax.z);</div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>}</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span> </div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00102" data-start="{" data-end="}">
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#ab921f13ead8b40ac2dc501fd09b64785">  102</a></span><span class="keywordtype">bool</span> <a class="code hl_function" href="../../d6/d25/classez_bounding_box_template.htm#ab921f13ead8b40ac2dc501fd09b64785">ezBoundingBoxTemplate&lt;Type&gt;::IsNaN</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span><span class="keyword"></span>{</div>
<div class="foldopen" id="foldopen00104" data-start="{" data-end="}">
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#af5a401b75e877ee27e47dfae6e8f28c4">  104</a></span>  <span class="keywordflow">return</span> m_vMin.<a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a330f758d541d570f19443bbbc0969e5e">IsNaN</a>() || m_vMax.IsNaN();</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>}</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span> </div>
<div class="foldopen" id="foldopen00107" data-start="{" data-end="}">
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#ae5516b049bd458fca1c86bb97a846f2d">  107</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00108" data-start="{" data-end="}">
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#ad6684e555ebc4629c2680ceb768b1ee1">  108</a></span>EZ_FORCE_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../d6/d25/classez_bounding_box_template.htm#ad6684e555ebc4629c2680ceb768b1ee1">ezBoundingBoxTemplate&lt;Type&gt;::ExpandToInclude</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vPoint)</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>{</div>
<div class="foldopen" id="foldopen00110" data-start="{" data-end="}">
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#a4a2167dcbd2197b7d6b882e5596435d3">  110</a></span>  m_vMin = m_vMin.CompMin(vPoint);</div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span>  m_vMax = m_vMax.CompMax(vPoint);</div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span>}</div>
<div class="foldopen" id="foldopen00113" data-start="{" data-end="}">
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#a4170976eea7cbc231d17581dab59515f">  113</a></span> </div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00115" data-start="{" data-end="}">
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#ac39c75f8e03718c89e4c59b7668dd26f">  115</a></span>EZ_FORCE_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../d6/d25/classez_bounding_box_template.htm#ad6684e555ebc4629c2680ceb768b1ee1">ezBoundingBoxTemplate&lt;Type&gt;::ExpandToInclude</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d6/d25/classez_bounding_box_template.htm">ezBoundingBoxTemplate&lt;Type&gt;</a>&amp; rhs)</div>
<div class="foldopen" id="foldopen00116" data-start="{" data-end="}">
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#a9c90db5c117368f3efb2325a11f7f9a7">  116</a></span>{</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>  EZ_ASSERT_DEBUG(rhs.<a class="code hl_function" href="../../d6/d25/classez_bounding_box_template.htm#ac69be90f51d35d38cd90588ce9442809">IsValid</a>(), <span class="stringliteral">&quot;rhs must be a valid AABB.&quot;</span>);</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span>  m_vMin = m_vMin.CompMin(rhs.m_vMin);</div>
<div class="foldopen" id="foldopen00119" data-start="{" data-end="}">
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#a52c2dc04664fdcf22eeecc0e10d17bdb">  119</a></span>  m_vMax = m_vMax.CompMax(rhs.m_vMax);</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>}</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span> </div>
<div class="foldopen" id="foldopen00122" data-start="{" data-end="}">
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#a9048b79c0771b59051c39f1bc50987eb">  122</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00123" data-start="{" data-end="}">
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#a9c31a9a32af0e204f169f7cf4fdc9b45">  123</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../d6/d25/classez_bounding_box_template.htm#ad6684e555ebc4629c2680ceb768b1ee1">ezBoundingBoxTemplate&lt;Type&gt;::ExpandToInclude</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>* pPoints, ezUInt32 uiNumPoints, ezUInt32 uiStride)</div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span>{</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span>  EZ_ASSERT_DEBUG(pPoints != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;Array may not be nullptr.&quot;</span>);</div>
<div class="foldopen" id="foldopen00126" data-start="{" data-end="}">
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#ac7b9b32702796a1039da45d8e67f3bb9">  126</a></span>  EZ_ASSERT_DEBUG(uiStride &gt;= <span class="keyword">sizeof</span>(<a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>), <span class="stringliteral">&quot;Data may not overlap.&quot;</span>);</div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span> </div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>* pCur = &amp;pPoints[0];</div>
<div class="foldopen" id="foldopen00129" data-start="{" data-end="}">
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#a967a358a476c731641b1ad6633b8475f">  129</a></span> </div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span>  <span class="keywordflow">for</span> (ezUInt32 i = 0; i &lt; uiNumPoints; ++i)</div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span>  {</div>
<div class="foldopen" id="foldopen00132" data-start="{" data-end="}">
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#aa97d2cdef9d1857b6088782d429e1ffe">  132</a></span>    ExpandToInclude(*pCur);</div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span> </div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>    pCur = <a class="code hl_function" href="../../dc/d4d/classez_memory_utils.htm#aaa8814eb70ee62638d61609635346446">ezMemoryUtils::AddByteOffset</a>(pCur, uiStride);</div>
<div class="foldopen" id="foldopen00135" data-start="{" data-end="}">
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#aa6e1b369a4cba10665e6e6fb86fb9176">  135</a></span>  }</div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span>}</div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span> </div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00139" data-start="{" data-end="}">
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#a5cb16eb5a9ec92bd0d8325ed7642441e">  139</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../d6/d25/classez_bounding_box_template.htm#a5cb16eb5a9ec92bd0d8325ed7642441e">ezBoundingBoxTemplate&lt;Type&gt;::ExpandToCube</a>()</div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>{</div>
<div class="foldopen" id="foldopen00141" data-start="{" data-end="}">
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#a11c3d6d23886d0ea5e90a8d30d858a3a">  141</a></span>  <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> vHalfExtents = GetHalfExtents();</div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> vCenter = m_vMin + vHalfExtents;</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span> </div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span>  <span class="keyword">const</span> Type f = <a class="code hl_function" href="../../db/d78/namespaceez_math.htm#a6f7ee19d0f8e81ff6ae5f394075e3a56">ezMath::Max</a>(vHalfExtents.x, vHalfExtents.y, vHalfExtents.z);</div>
<div class="foldopen" id="foldopen00145" data-start="{" data-end="}">
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#acc6196bf642a8e5351811db5e91ff962">  145</a></span> </div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span>  m_vMin = vCenter - <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>(f);</div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span>  m_vMax = vCenter + <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>(f);</div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span>}</div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span> </div>
<div class="foldopen" id="foldopen00150" data-start="{" data-end="}">
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#a0fa8841453c64d36e81476f7adb0fe3d">  150</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00151" data-start="{" data-end="}">
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#ad59a4af199ac0a7afadec9fddb8b986f">  151</a></span>EZ_FORCE_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../d6/d25/classez_bounding_box_template.htm#ad59a4af199ac0a7afadec9fddb8b986f">ezBoundingBoxTemplate&lt;Type&gt;::Grow</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vDiff)</div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span>{</div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span>  EZ_ASSERT_DEBUG(IsValid(), <span class="stringliteral">&quot;Cannot grow a box that is invalid.&quot;</span>);</div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span> </div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span>  m_vMax += vDiff;</div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span>  m_vMin -= vDiff;</div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span> </div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span>  EZ_ASSERT_DEBUG(IsValid(), <span class="stringliteral">&quot;The grown box has become invalid.&quot;</span>);</div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span>}</div>
</div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span> </div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00162" data-start="{" data-end="}">
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#a483bf35eb69bb1a1ab87ca0deb7f8a93">  162</a></span>EZ_FORCE_INLINE <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d6/d25/classez_bounding_box_template.htm#a483bf35eb69bb1a1ab87ca0deb7f8a93">ezBoundingBoxTemplate&lt;Type&gt;::Contains</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vPoint)<span class="keyword"> const</span></div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span>  EZ_NAN_ASSERT(<span class="keyword">this</span>);</div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span>  EZ_NAN_ASSERT(&amp;vPoint);</div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span> </div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span>  <span class="keywordflow">return</span> (<a class="code hl_function" href="../../db/d78/namespaceez_math.htm#ae076df9c39820ea636c580267e2e379a">ezMath::IsInRange</a>(vPoint.x, m_vMin.x, m_vMax.x) &amp;&amp; <a class="code hl_function" href="../../db/d78/namespaceez_math.htm#ae076df9c39820ea636c580267e2e379a">ezMath::IsInRange</a>(vPoint.y, m_vMin.y, m_vMax.y) &amp;&amp;</div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span>          <a class="code hl_function" href="../../db/d78/namespaceez_math.htm#ae076df9c39820ea636c580267e2e379a">ezMath::IsInRange</a>(vPoint.z, m_vMin.z, m_vMax.z));</div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span>}</div>
</div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span> </div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00172" data-start="{" data-end="}">
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#ac292e4095bebdc00d8bad2bc4643077f">  172</a></span>EZ_FORCE_INLINE <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d6/d25/classez_bounding_box_template.htm#a483bf35eb69bb1a1ab87ca0deb7f8a93">ezBoundingBoxTemplate&lt;Type&gt;::Contains</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d6/d25/classez_bounding_box_template.htm">ezBoundingBoxTemplate&lt;Type&gt;</a>&amp; rhs)<span class="keyword"> const</span></div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span>  <span class="keywordflow">return</span> Contains(rhs.m_vMin) &amp;&amp; Contains(rhs.m_vMax);</div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span>}</div>
</div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span> </div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00178" data-start="{" data-end="}">
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#a2ecb09d828210fb6901a8f3850e228f9">  178</a></span><span class="keywordtype">bool</span> <a class="code hl_function" href="../../d6/d25/classez_bounding_box_template.htm#a483bf35eb69bb1a1ab87ca0deb7f8a93">ezBoundingBoxTemplate&lt;Type&gt;::Contains</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>* pPoints, ezUInt32 uiNumPoints, ezUInt32 uiStride <span class="comment">/* = sizeof(ezVec3Template&lt;Type&gt;) */</span>)<span class="keyword"> const</span></div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span>  EZ_ASSERT_DEBUG(pPoints != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;Array must not be NuLL.&quot;</span>);</div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span>  EZ_ASSERT_DEBUG(uiStride &gt;= <span class="keyword">sizeof</span>(<a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>), <span class="stringliteral">&quot;Data must not overlap.&quot;</span>);</div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span> </div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno">  183</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>* pCur = &amp;pPoints[0];</div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span> </div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span>  <span class="keywordflow">for</span> (ezUInt32 i = 0; i &lt; uiNumPoints; ++i)</div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span>  {</div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span>    <span class="keywordflow">if</span> (!Contains(*pCur))</div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span>      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span> </div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span>    pCur = <a class="code hl_function" href="../../dc/d4d/classez_memory_utils.htm#aaa8814eb70ee62638d61609635346446">ezMemoryUtils::AddByteOffset</a>(pCur, uiStride);</div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span>  }</div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span> </div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span>  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span>}</div>
</div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span> </div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00197" data-start="{" data-end="}">
<div class="line"><a id="l00197" name="l00197"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#a50ce4fbb4a3485a58d363ab0e4355663">  197</a></span><span class="keywordtype">bool</span> <a class="code hl_function" href="../../d6/d25/classez_bounding_box_template.htm#a50ce4fbb4a3485a58d363ab0e4355663">ezBoundingBoxTemplate&lt;Type&gt;::Overlaps</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d6/d25/classez_bounding_box_template.htm">ezBoundingBoxTemplate&lt;Type&gt;</a>&amp; rhs)<span class="keyword"> const</span></div>
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno">  198</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00199" name="l00199"></a><span class="lineno">  199</span>  EZ_NAN_ASSERT(<span class="keyword">this</span>);</div>
<div class="line"><a id="l00200" name="l00200"></a><span class="lineno">  200</span>  EZ_NAN_ASSERT(&amp;rhs);</div>
<div class="line"><a id="l00201" name="l00201"></a><span class="lineno">  201</span> </div>
<div class="line"><a id="l00202" name="l00202"></a><span class="lineno">  202</span>  <span class="keywordflow">if</span> (rhs.m_vMin.x &gt;= m_vMax.x)</div>
<div class="line"><a id="l00203" name="l00203"></a><span class="lineno">  203</span>    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno">  204</span>  <span class="keywordflow">if</span> (rhs.m_vMin.y &gt;= m_vMax.y)</div>
<div class="line"><a id="l00205" name="l00205"></a><span class="lineno">  205</span>    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00206" name="l00206"></a><span class="lineno">  206</span>  <span class="keywordflow">if</span> (rhs.m_vMin.z &gt;= m_vMax.z)</div>
<div class="line"><a id="l00207" name="l00207"></a><span class="lineno">  207</span>    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00208" name="l00208"></a><span class="lineno">  208</span> </div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno">  209</span>  <span class="keywordflow">if</span> (m_vMin.x &gt;= rhs.m_vMax.x)</div>
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno">  210</span>    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00211" name="l00211"></a><span class="lineno">  211</span>  <span class="keywordflow">if</span> (m_vMin.y &gt;= rhs.m_vMax.y)</div>
<div class="line"><a id="l00212" name="l00212"></a><span class="lineno">  212</span>    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00213" name="l00213"></a><span class="lineno">  213</span>  <span class="keywordflow">if</span> (m_vMin.z &gt;= rhs.m_vMax.z)</div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno">  214</span>    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00215" name="l00215"></a><span class="lineno">  215</span> </div>
<div class="line"><a id="l00216" name="l00216"></a><span class="lineno">  216</span>  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a id="l00217" name="l00217"></a><span class="lineno">  217</span>}</div>
</div>
<div class="line"><a id="l00218" name="l00218"></a><span class="lineno">  218</span> </div>
<div class="line"><a id="l00219" name="l00219"></a><span class="lineno">  219</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00220" data-start="{" data-end="}">
<div class="line"><a id="l00220" name="l00220"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#ae7eef5f9eb661343eb37c899045e0f76">  220</a></span><span class="keywordtype">bool</span> <a class="code hl_function" href="../../d6/d25/classez_bounding_box_template.htm#a50ce4fbb4a3485a58d363ab0e4355663">ezBoundingBoxTemplate&lt;Type&gt;::Overlaps</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>* pPoints, ezUInt32 uiNumPoints, ezUInt32 uiStride <span class="comment">/* = sizeof(ezVec3Template&lt;Type&gt;) */</span>)<span class="keyword"> const</span></div>
<div class="line"><a id="l00221" name="l00221"></a><span class="lineno">  221</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00222" name="l00222"></a><span class="lineno">  222</span>  EZ_ASSERT_DEBUG(pPoints != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;Array must not be NuLL.&quot;</span>);</div>
<div class="line"><a id="l00223" name="l00223"></a><span class="lineno">  223</span>  EZ_ASSERT_DEBUG(uiStride &gt;= <span class="keyword">sizeof</span>(<a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>), <span class="stringliteral">&quot;Data must not overlap.&quot;</span>);</div>
<div class="line"><a id="l00224" name="l00224"></a><span class="lineno">  224</span> </div>
<div class="line"><a id="l00225" name="l00225"></a><span class="lineno">  225</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>* pCur = &amp;pPoints[0];</div>
<div class="line"><a id="l00226" name="l00226"></a><span class="lineno">  226</span> </div>
<div class="line"><a id="l00227" name="l00227"></a><span class="lineno">  227</span>  <span class="keywordflow">for</span> (ezUInt32 i = 0; i &lt; uiNumPoints; ++i)</div>
<div class="line"><a id="l00228" name="l00228"></a><span class="lineno">  228</span>  {</div>
<div class="line"><a id="l00229" name="l00229"></a><span class="lineno">  229</span>    <span class="keywordflow">if</span> (Contains(*pCur))</div>
<div class="line"><a id="l00230" name="l00230"></a><span class="lineno">  230</span>      <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a id="l00231" name="l00231"></a><span class="lineno">  231</span> </div>
<div class="line"><a id="l00232" name="l00232"></a><span class="lineno">  232</span>    pCur = <a class="code hl_function" href="../../dc/d4d/classez_memory_utils.htm#aaa8814eb70ee62638d61609635346446">ezMemoryUtils::AddByteOffset</a>(pCur, uiStride);</div>
<div class="line"><a id="l00233" name="l00233"></a><span class="lineno">  233</span>  }</div>
<div class="line"><a id="l00234" name="l00234"></a><span class="lineno">  234</span> </div>
<div class="line"><a id="l00235" name="l00235"></a><span class="lineno">  235</span>  <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00236" name="l00236"></a><span class="lineno">  236</span>}</div>
</div>
<div class="line"><a id="l00237" name="l00237"></a><span class="lineno">  237</span> </div>
<div class="line"><a id="l00238" name="l00238"></a><span class="lineno">  238</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00239" data-start="{" data-end="}">
<div class="line"><a id="l00239" name="l00239"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#af5a401b75e877ee27e47dfae6e8f28c4">  239</a></span>EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d6/d25/classez_bounding_box_template.htm#af5a401b75e877ee27e47dfae6e8f28c4">ezBoundingBoxTemplate&lt;Type&gt;::IsIdentical</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d6/d25/classez_bounding_box_template.htm">ezBoundingBoxTemplate&lt;Type&gt;</a>&amp; rhs)<span class="keyword"> const</span></div>
<div class="line"><a id="l00240" name="l00240"></a><span class="lineno">  240</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00241" name="l00241"></a><span class="lineno">  241</span>  <span class="keywordflow">return</span> (m_vMin == rhs.m_vMin &amp;&amp; m_vMax == rhs.m_vMax);</div>
<div class="line"><a id="l00242" name="l00242"></a><span class="lineno">  242</span>}</div>
</div>
<div class="line"><a id="l00243" name="l00243"></a><span class="lineno">  243</span> </div>
<div class="line"><a id="l00244" name="l00244"></a><span class="lineno">  244</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00245" data-start="{" data-end="}">
<div class="line"><a id="l00245" name="l00245"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#ae5516b049bd458fca1c86bb97a846f2d">  245</a></span><span class="keywordtype">bool</span> <a class="code hl_function" href="../../d6/d25/classez_bounding_box_template.htm#ae5516b049bd458fca1c86bb97a846f2d">ezBoundingBoxTemplate&lt;Type&gt;::IsEqual</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d6/d25/classez_bounding_box_template.htm">ezBoundingBoxTemplate&lt;Type&gt;</a>&amp; rhs, Type fEpsilon)<span class="keyword"> const</span></div>
<div class="line"><a id="l00246" name="l00246"></a><span class="lineno">  246</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00247" name="l00247"></a><span class="lineno">  247</span>  <span class="keywordflow">return</span> (m_vMin.IsEqual(rhs.m_vMin, fEpsilon) &amp;&amp; m_vMax.IsEqual(rhs.m_vMax, fEpsilon));</div>
<div class="line"><a id="l00248" name="l00248"></a><span class="lineno">  248</span>}</div>
</div>
<div class="line"><a id="l00249" name="l00249"></a><span class="lineno">  249</span> </div>
<div class="line"><a id="l00250" name="l00250"></a><span class="lineno">  250</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00251" name="l00251"></a><span class="lineno">  251</span>EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> operator==(<span class="keyword">const</span> <a class="code hl_class" href="../../d6/d25/classez_bounding_box_template.htm">ezBoundingBoxTemplate&lt;Type&gt;</a>&amp; lhs, <span class="keyword">const</span> <a class="code hl_class" href="../../d6/d25/classez_bounding_box_template.htm">ezBoundingBoxTemplate&lt;Type&gt;</a>&amp; rhs)</div>
<div class="line"><a id="l00252" name="l00252"></a><span class="lineno">  252</span>{</div>
<div class="line"><a id="l00253" name="l00253"></a><span class="lineno">  253</span>  <span class="keywordflow">return</span> lhs.<a class="code hl_function" href="../../d6/d25/classez_bounding_box_template.htm#af5a401b75e877ee27e47dfae6e8f28c4">IsIdentical</a>(rhs);</div>
<div class="line"><a id="l00254" name="l00254"></a><span class="lineno">  254</span>}</div>
<div class="line"><a id="l00255" name="l00255"></a><span class="lineno">  255</span> </div>
<div class="line"><a id="l00256" name="l00256"></a><span class="lineno">  256</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00257" name="l00257"></a><span class="lineno">  257</span>EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> operator!=(<span class="keyword">const</span> <a class="code hl_class" href="../../d6/d25/classez_bounding_box_template.htm">ezBoundingBoxTemplate&lt;Type&gt;</a>&amp; lhs, <span class="keyword">const</span> <a class="code hl_class" href="../../d6/d25/classez_bounding_box_template.htm">ezBoundingBoxTemplate&lt;Type&gt;</a>&amp; rhs)</div>
<div class="line"><a id="l00258" name="l00258"></a><span class="lineno">  258</span>{</div>
<div class="line"><a id="l00259" name="l00259"></a><span class="lineno">  259</span>  <span class="keywordflow">return</span> !lhs.<a class="code hl_function" href="../../d6/d25/classez_bounding_box_template.htm#af5a401b75e877ee27e47dfae6e8f28c4">IsIdentical</a>(rhs);</div>
<div class="line"><a id="l00260" name="l00260"></a><span class="lineno">  260</span>}</div>
<div class="line"><a id="l00261" name="l00261"></a><span class="lineno">  261</span> </div>
<div class="line"><a id="l00262" name="l00262"></a><span class="lineno">  262</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00263" data-start="{" data-end="}">
<div class="line"><a id="l00263" name="l00263"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#a4a2167dcbd2197b7d6b882e5596435d3">  263</a></span>EZ_FORCE_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../d6/d25/classez_bounding_box_template.htm#a4a2167dcbd2197b7d6b882e5596435d3">ezBoundingBoxTemplate&lt;Type&gt;::Translate</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vDiff)</div>
<div class="line"><a id="l00264" name="l00264"></a><span class="lineno">  264</span>{</div>
<div class="line"><a id="l00265" name="l00265"></a><span class="lineno">  265</span>  m_vMin += vDiff;</div>
<div class="line"><a id="l00266" name="l00266"></a><span class="lineno">  266</span>  m_vMax += vDiff;</div>
<div class="line"><a id="l00267" name="l00267"></a><span class="lineno">  267</span>}</div>
</div>
<div class="line"><a id="l00268" name="l00268"></a><span class="lineno">  268</span> </div>
<div class="line"><a id="l00269" name="l00269"></a><span class="lineno">  269</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00270" data-start="{" data-end="}">
<div class="line"><a id="l00270" name="l00270"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#a4170976eea7cbc231d17581dab59515f">  270</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../d6/d25/classez_bounding_box_template.htm#a4170976eea7cbc231d17581dab59515f">ezBoundingBoxTemplate&lt;Type&gt;::ScaleFromCenter</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vScale)</div>
<div class="line"><a id="l00271" name="l00271"></a><span class="lineno">  271</span>{</div>
<div class="line"><a id="l00272" name="l00272"></a><span class="lineno">  272</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> vCenter = GetCenter();</div>
<div class="line"><a id="l00273" name="l00273"></a><span class="lineno">  273</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3</a> vNewMin = vCenter + (m_vMin - vCenter).CompMul(vScale);</div>
<div class="line"><a id="l00274" name="l00274"></a><span class="lineno">  274</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3</a> vNewMax = vCenter + (m_vMax - vCenter).CompMul(vScale);</div>
<div class="line"><a id="l00275" name="l00275"></a><span class="lineno">  275</span> </div>
<div class="line"><a id="l00276" name="l00276"></a><span class="lineno">  276</span>  <span class="comment">// this is necessary for negative scalings to work as expected</span></div>
<div class="line"><a id="l00277" name="l00277"></a><span class="lineno">  277</span>  m_vMin = vNewMin.<a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a1f96804c091f0d4a34225ce22f3d8128">CompMin</a>(vNewMax);</div>
<div class="line"><a id="l00278" name="l00278"></a><span class="lineno">  278</span>  m_vMax = vNewMin.<a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#ab6d1eb1df0d8a172507f322249582485">CompMax</a>(vNewMax);</div>
<div class="line"><a id="l00279" name="l00279"></a><span class="lineno">  279</span>}</div>
</div>
<div class="line"><a id="l00280" name="l00280"></a><span class="lineno">  280</span> </div>
<div class="line"><a id="l00281" name="l00281"></a><span class="lineno">  281</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00282" data-start="{" data-end="}">
<div class="line"><a id="l00282" name="l00282"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#a9c90db5c117368f3efb2325a11f7f9a7">  282</a></span>EZ_FORCE_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../d6/d25/classez_bounding_box_template.htm#a9c90db5c117368f3efb2325a11f7f9a7">ezBoundingBoxTemplate&lt;Type&gt;::ScaleFromOrigin</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vScale)</div>
<div class="line"><a id="l00283" name="l00283"></a><span class="lineno">  283</span>{</div>
<div class="line"><a id="l00284" name="l00284"></a><span class="lineno">  284</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3</a> vNewMin = m_vMin.<a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a9b0266c9e67ecf838d3507bd67625941">CompMul</a>(vScale);</div>
<div class="line"><a id="l00285" name="l00285"></a><span class="lineno">  285</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3</a> vNewMax = m_vMax.<a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a9b0266c9e67ecf838d3507bd67625941">CompMul</a>(vScale);</div>
<div class="line"><a id="l00286" name="l00286"></a><span class="lineno">  286</span> </div>
<div class="line"><a id="l00287" name="l00287"></a><span class="lineno">  287</span>  <span class="comment">// this is necessary for negative scalings to work as expected</span></div>
<div class="line"><a id="l00288" name="l00288"></a><span class="lineno">  288</span>  m_vMin = vNewMin.<a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a1f96804c091f0d4a34225ce22f3d8128">CompMin</a>(vNewMax);</div>
<div class="line"><a id="l00289" name="l00289"></a><span class="lineno">  289</span>  m_vMax = vNewMin.<a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#ab6d1eb1df0d8a172507f322249582485">CompMax</a>(vNewMax);</div>
<div class="line"><a id="l00290" name="l00290"></a><span class="lineno">  290</span>}</div>
</div>
<div class="line"><a id="l00291" name="l00291"></a><span class="lineno">  291</span> </div>
<div class="line"><a id="l00292" name="l00292"></a><span class="lineno">  292</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00293" data-start="{" data-end="}">
<div class="line"><a id="l00293" name="l00293"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#a52c2dc04664fdcf22eeecc0e10d17bdb">  293</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../d6/d25/classez_bounding_box_template.htm#a52c2dc04664fdcf22eeecc0e10d17bdb">ezBoundingBoxTemplate&lt;Type&gt;::TransformFromCenter</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d7/d9b/classez_mat4_template.htm">ezMat4Template&lt;Type&gt;</a>&amp; mTransform)</div>
<div class="line"><a id="l00294" name="l00294"></a><span class="lineno">  294</span>{</div>
<div class="line"><a id="l00295" name="l00295"></a><span class="lineno">  295</span>  <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> vCorners[8];</div>
<div class="line"><a id="l00296" name="l00296"></a><span class="lineno">  296</span>  GetCorners(vCorners);</div>
<div class="line"><a id="l00297" name="l00297"></a><span class="lineno">  297</span> </div>
<div class="line"><a id="l00298" name="l00298"></a><span class="lineno">  298</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> vCenter = GetCenter();</div>
<div class="line"><a id="l00299" name="l00299"></a><span class="lineno">  299</span>  *<span class="keyword">this</span> = MakeInvalid();</div>
<div class="line"><a id="l00300" name="l00300"></a><span class="lineno">  300</span> </div>
<div class="line"><a id="l00301" name="l00301"></a><span class="lineno">  301</span>  <span class="keywordflow">for</span> (ezUInt32 i = 0; i &lt; 8; ++i)</div>
<div class="line"><a id="l00302" name="l00302"></a><span class="lineno">  302</span>    ExpandToInclude(vCenter + mTransform.<a class="code hl_function" href="../../d7/d9b/classez_mat4_template.htm#a446a4875709d5d2577718d314005e51d">TransformPosition</a>(vCorners[i] - vCenter));</div>
<div class="line"><a id="l00303" name="l00303"></a><span class="lineno">  303</span>}</div>
</div>
<div class="line"><a id="l00304" name="l00304"></a><span class="lineno">  304</span> </div>
<div class="line"><a id="l00305" name="l00305"></a><span class="lineno">  305</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00306" data-start="{" data-end="}">
<div class="line"><a id="l00306" name="l00306"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#a9048b79c0771b59051c39f1bc50987eb">  306</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../d6/d25/classez_bounding_box_template.htm#a9048b79c0771b59051c39f1bc50987eb">ezBoundingBoxTemplate&lt;Type&gt;::TransformFromOrigin</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d7/d9b/classez_mat4_template.htm">ezMat4Template&lt;Type&gt;</a>&amp; mTransform)</div>
<div class="line"><a id="l00307" name="l00307"></a><span class="lineno">  307</span>{</div>
<div class="line"><a id="l00308" name="l00308"></a><span class="lineno">  308</span>  <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> vCorners[8];</div>
<div class="line"><a id="l00309" name="l00309"></a><span class="lineno">  309</span>  GetCorners(vCorners);</div>
<div class="line"><a id="l00310" name="l00310"></a><span class="lineno">  310</span> </div>
<div class="line"><a id="l00311" name="l00311"></a><span class="lineno">  311</span>  mTransform.<a class="code hl_function" href="../../d7/d9b/classez_mat4_template.htm#a446a4875709d5d2577718d314005e51d">TransformPosition</a>(vCorners, 8);</div>
<div class="line"><a id="l00312" name="l00312"></a><span class="lineno">  312</span> </div>
<div class="line"><a id="l00313" name="l00313"></a><span class="lineno">  313</span>  *<span class="keyword">this</span> = MakeInvalid();</div>
<div class="line"><a id="l00314" name="l00314"></a><span class="lineno">  314</span>  ExpandToInclude(vCorners, 8);</div>
<div class="line"><a id="l00315" name="l00315"></a><span class="lineno">  315</span>}</div>
</div>
<div class="line"><a id="l00316" name="l00316"></a><span class="lineno">  316</span> </div>
<div class="line"><a id="l00317" name="l00317"></a><span class="lineno">  317</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00318" data-start="{" data-end="}">
<div class="line"><a id="l00318" name="l00318"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#ac7b9b32702796a1039da45d8e67f3bb9">  318</a></span>EZ_FORCE_INLINE <span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../d6/d25/classez_bounding_box_template.htm#ac7b9b32702796a1039da45d8e67f3bb9">ezBoundingBoxTemplate&lt;Type&gt;::GetClampedPoint</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vPoint)<span class="keyword"> const</span></div>
<div class="line"><a id="l00319" name="l00319"></a><span class="lineno">  319</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00320" name="l00320"></a><span class="lineno">  320</span>  <span class="keywordflow">return</span> vPoint.<a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a1f96804c091f0d4a34225ce22f3d8128">CompMin</a>(m_vMax).CompMax(m_vMin);</div>
<div class="line"><a id="l00321" name="l00321"></a><span class="lineno">  321</span>}</div>
</div>
<div class="line"><a id="l00322" name="l00322"></a><span class="lineno">  322</span> </div>
<div class="line"><a id="l00323" name="l00323"></a><span class="lineno">  323</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00324" data-start="{" data-end="}">
<div class="line"><a id="l00324" name="l00324"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#aa6e1b369a4cba10665e6e6fb86fb9176">  324</a></span>Type <a class="code hl_function" href="../../d6/d25/classez_bounding_box_template.htm#aa6e1b369a4cba10665e6e6fb86fb9176">ezBoundingBoxTemplate&lt;Type&gt;::GetDistanceTo</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vPoint)<span class="keyword"> const</span></div>
<div class="line"><a id="l00325" name="l00325"></a><span class="lineno">  325</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00326" name="l00326"></a><span class="lineno">  326</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> vClamped = GetClampedPoint(vPoint);</div>
<div class="line"><a id="l00327" name="l00327"></a><span class="lineno">  327</span> </div>
<div class="line"><a id="l00328" name="l00328"></a><span class="lineno">  328</span>  <span class="keywordflow">return</span> (vPoint - vClamped).GetLength();</div>
<div class="line"><a id="l00329" name="l00329"></a><span class="lineno">  329</span>}</div>
</div>
<div class="line"><a id="l00330" name="l00330"></a><span class="lineno">  330</span> </div>
<div class="line"><a id="l00331" name="l00331"></a><span class="lineno">  331</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00332" data-start="{" data-end="}">
<div class="line"><a id="l00332" name="l00332"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#a967a358a476c731641b1ad6633b8475f">  332</a></span>Type <a class="code hl_function" href="../../d6/d25/classez_bounding_box_template.htm#a967a358a476c731641b1ad6633b8475f">ezBoundingBoxTemplate&lt;Type&gt;::GetDistanceSquaredTo</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vPoint)<span class="keyword"> const</span></div>
<div class="line"><a id="l00333" name="l00333"></a><span class="lineno">  333</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00334" name="l00334"></a><span class="lineno">  334</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> vClamped = GetClampedPoint(vPoint);</div>
<div class="line"><a id="l00335" name="l00335"></a><span class="lineno">  335</span> </div>
<div class="line"><a id="l00336" name="l00336"></a><span class="lineno">  336</span>  <span class="keywordflow">return</span> (vPoint - vClamped).GetLengthSquared();</div>
<div class="line"><a id="l00337" name="l00337"></a><span class="lineno">  337</span>}</div>
</div>
<div class="line"><a id="l00338" name="l00338"></a><span class="lineno">  338</span> </div>
<div class="line"><a id="l00339" name="l00339"></a><span class="lineno">  339</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00340" data-start="{" data-end="}">
<div class="line"><a id="l00340" name="l00340"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#aa97d2cdef9d1857b6088782d429e1ffe">  340</a></span>Type <a class="code hl_function" href="../../d6/d25/classez_bounding_box_template.htm#a967a358a476c731641b1ad6633b8475f">ezBoundingBoxTemplate&lt;Type&gt;::GetDistanceSquaredTo</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d6/d25/classez_bounding_box_template.htm">ezBoundingBoxTemplate&lt;Type&gt;</a>&amp; rhs)<span class="keyword"> const</span></div>
<div class="line"><a id="l00341" name="l00341"></a><span class="lineno">  341</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00342" name="l00342"></a><span class="lineno">  342</span>  <span class="comment">// This will return zero for overlapping boxes</span></div>
<div class="line"><a id="l00343" name="l00343"></a><span class="lineno">  343</span> </div>
<div class="line"><a id="l00344" name="l00344"></a><span class="lineno">  344</span>  EZ_NAN_ASSERT(<span class="keyword">this</span>);</div>
<div class="line"><a id="l00345" name="l00345"></a><span class="lineno">  345</span>  EZ_NAN_ASSERT(&amp;rhs);</div>
<div class="line"><a id="l00346" name="l00346"></a><span class="lineno">  346</span> </div>
<div class="line"><a id="l00347" name="l00347"></a><span class="lineno">  347</span>  Type fDistSQR = 0.0f;</div>
<div class="line"><a id="l00348" name="l00348"></a><span class="lineno">  348</span> </div>
<div class="line"><a id="l00349" name="l00349"></a><span class="lineno">  349</span>  {</div>
<div class="line"><a id="l00350" name="l00350"></a><span class="lineno">  350</span>    <span class="keywordflow">if</span> (rhs.m_vMin.x &gt; m_vMax.x)</div>
<div class="line"><a id="l00351" name="l00351"></a><span class="lineno">  351</span>    {</div>
<div class="line"><a id="l00352" name="l00352"></a><span class="lineno">  352</span>      fDistSQR += <a class="code hl_function" href="../../db/d78/namespaceez_math.htm#adfc8bc546fb58a0280cce97f9a40f324">ezMath::Square</a>(rhs.m_vMin.x - m_vMax.x);</div>
<div class="line"><a id="l00353" name="l00353"></a><span class="lineno">  353</span>    }</div>
<div class="line"><a id="l00354" name="l00354"></a><span class="lineno">  354</span>    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (rhs.m_vMax.x &lt; m_vMin.x)</div>
<div class="line"><a id="l00355" name="l00355"></a><span class="lineno">  355</span>    {</div>
<div class="line"><a id="l00356" name="l00356"></a><span class="lineno">  356</span>      fDistSQR += <a class="code hl_function" href="../../db/d78/namespaceez_math.htm#adfc8bc546fb58a0280cce97f9a40f324">ezMath::Square</a>(m_vMin.x - rhs.m_vMax.x);</div>
<div class="line"><a id="l00357" name="l00357"></a><span class="lineno">  357</span>    }</div>
<div class="line"><a id="l00358" name="l00358"></a><span class="lineno">  358</span>  }</div>
<div class="line"><a id="l00359" name="l00359"></a><span class="lineno">  359</span> </div>
<div class="line"><a id="l00360" name="l00360"></a><span class="lineno">  360</span>  {</div>
<div class="line"><a id="l00361" name="l00361"></a><span class="lineno">  361</span>    <span class="keywordflow">if</span> (rhs.m_vMin.y &gt; m_vMax.y)</div>
<div class="line"><a id="l00362" name="l00362"></a><span class="lineno">  362</span>    {</div>
<div class="line"><a id="l00363" name="l00363"></a><span class="lineno">  363</span>      fDistSQR += <a class="code hl_function" href="../../db/d78/namespaceez_math.htm#adfc8bc546fb58a0280cce97f9a40f324">ezMath::Square</a>(rhs.m_vMin.y - m_vMax.y);</div>
<div class="line"><a id="l00364" name="l00364"></a><span class="lineno">  364</span>    }</div>
<div class="line"><a id="l00365" name="l00365"></a><span class="lineno">  365</span>    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (rhs.m_vMax.y &lt; m_vMin.y)</div>
<div class="line"><a id="l00366" name="l00366"></a><span class="lineno">  366</span>    {</div>
<div class="line"><a id="l00367" name="l00367"></a><span class="lineno">  367</span>      fDistSQR += <a class="code hl_function" href="../../db/d78/namespaceez_math.htm#adfc8bc546fb58a0280cce97f9a40f324">ezMath::Square</a>(m_vMin.y - rhs.m_vMax.y);</div>
<div class="line"><a id="l00368" name="l00368"></a><span class="lineno">  368</span>    }</div>
<div class="line"><a id="l00369" name="l00369"></a><span class="lineno">  369</span>  }</div>
<div class="line"><a id="l00370" name="l00370"></a><span class="lineno">  370</span> </div>
<div class="line"><a id="l00371" name="l00371"></a><span class="lineno">  371</span>  {</div>
<div class="line"><a id="l00372" name="l00372"></a><span class="lineno">  372</span>    <span class="keywordflow">if</span> (rhs.m_vMin.z &gt; m_vMax.z)</div>
<div class="line"><a id="l00373" name="l00373"></a><span class="lineno">  373</span>    {</div>
<div class="line"><a id="l00374" name="l00374"></a><span class="lineno">  374</span>      fDistSQR += <a class="code hl_function" href="../../db/d78/namespaceez_math.htm#adfc8bc546fb58a0280cce97f9a40f324">ezMath::Square</a>(rhs.m_vMin.z - m_vMax.z);</div>
<div class="line"><a id="l00375" name="l00375"></a><span class="lineno">  375</span>    }</div>
<div class="line"><a id="l00376" name="l00376"></a><span class="lineno">  376</span>    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (rhs.m_vMax.z &lt; m_vMin.z)</div>
<div class="line"><a id="l00377" name="l00377"></a><span class="lineno">  377</span>    {</div>
<div class="line"><a id="l00378" name="l00378"></a><span class="lineno">  378</span>      fDistSQR += <a class="code hl_function" href="../../db/d78/namespaceez_math.htm#adfc8bc546fb58a0280cce97f9a40f324">ezMath::Square</a>(m_vMin.z - rhs.m_vMax.z);</div>
<div class="line"><a id="l00379" name="l00379"></a><span class="lineno">  379</span>    }</div>
<div class="line"><a id="l00380" name="l00380"></a><span class="lineno">  380</span>  }</div>
<div class="line"><a id="l00381" name="l00381"></a><span class="lineno">  381</span> </div>
<div class="line"><a id="l00382" name="l00382"></a><span class="lineno">  382</span>  <span class="keywordflow">return</span> fDistSQR;</div>
<div class="line"><a id="l00383" name="l00383"></a><span class="lineno">  383</span>}</div>
</div>
<div class="line"><a id="l00384" name="l00384"></a><span class="lineno">  384</span> </div>
<div class="line"><a id="l00385" name="l00385"></a><span class="lineno">  385</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00386" data-start="{" data-end="}">
<div class="line"><a id="l00386" name="l00386"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#a11c3d6d23886d0ea5e90a8d30d858a3a">  386</a></span>Type <a class="code hl_function" href="../../d6/d25/classez_bounding_box_template.htm#aa6e1b369a4cba10665e6e6fb86fb9176">ezBoundingBoxTemplate&lt;Type&gt;::GetDistanceTo</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d6/d25/classez_bounding_box_template.htm">ezBoundingBoxTemplate&lt;Type&gt;</a>&amp; rhs)<span class="keyword"> const</span></div>
<div class="line"><a id="l00387" name="l00387"></a><span class="lineno">  387</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00388" name="l00388"></a><span class="lineno">  388</span>  <span class="keywordflow">return</span> <a class="code hl_function" href="../../db/d78/namespaceez_math.htm#a7f4e38e30c7914d11bcc85b0a4b1c09a">ezMath::Sqrt</a>(GetDistanceSquaredTo(rhs));</div>
<div class="line"><a id="l00389" name="l00389"></a><span class="lineno">  389</span>}</div>
</div>
<div class="line"><a id="l00390" name="l00390"></a><span class="lineno">  390</span> </div>
<div class="line"><a id="l00391" name="l00391"></a><span class="lineno">  391</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00392" data-start="{" data-end="}">
<div class="line"><a id="l00392" name="l00392"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#acc6196bf642a8e5351811db5e91ff962">  392</a></span><span class="keywordtype">bool</span> <a class="code hl_function" href="../../d6/d25/classez_bounding_box_template.htm#acc6196bf642a8e5351811db5e91ff962">ezBoundingBoxTemplate&lt;Type&gt;::GetRayIntersection</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vStartPos, <span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vRayDir, Type* out_pIntersectionDistance, <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>* out_pIntersection)<span class="keyword"> const</span></div>
<div class="line"><a id="l00393" name="l00393"></a><span class="lineno">  393</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00394" name="l00394"></a><span class="lineno">  394</span>  <span class="comment">// This code was taken from: http://people.csail.mit.edu/amy/papers/box-jgt.pdf</span></div>
<div class="line"><a id="l00395" name="l00395"></a><span class="lineno">  395</span>  <span class="comment">// &quot;An Efficient and Robust Ray-Box Intersection Algorithm&quot;</span></div>
<div class="line"><a id="l00396" name="l00396"></a><span class="lineno">  396</span>  <span class="comment">// Contrary to previous implementation, this one actually works with ray/box configurations</span></div>
<div class="line"><a id="l00397" name="l00397"></a><span class="lineno">  397</span>  <span class="comment">// that produce division by zero and multiplication with infinity (which can produce NaNs).</span></div>
<div class="line"><a id="l00398" name="l00398"></a><span class="lineno">  398</span> </div>
<div class="line"><a id="l00399" name="l00399"></a><span class="lineno">  399</span>  EZ_ASSERT_DEBUG(ezMath::SupportsInfinity&lt;Type&gt;(), <span class="stringliteral">&quot;This type does not support infinite values, which is required for this algorithm.&quot;</span>);</div>
<div class="line"><a id="l00400" name="l00400"></a><span class="lineno">  400</span>  EZ_ASSERT_DEBUG(vStartPos.<a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a216fcb73cd48b1bd9062fdf9b8be0b88">IsValid</a>(), <span class="stringliteral">&quot;Ray start position must be valid.&quot;</span>);</div>
<div class="line"><a id="l00401" name="l00401"></a><span class="lineno">  401</span>  EZ_ASSERT_DEBUG(vRayDir.<a class="code hl_function" href="../../da/df1/classez_vec3_template.htm#a216fcb73cd48b1bd9062fdf9b8be0b88">IsValid</a>(), <span class="stringliteral">&quot;Ray direction must be valid.&quot;</span>);</div>
<div class="line"><a id="l00402" name="l00402"></a><span class="lineno">  402</span> </div>
<div class="line"><a id="l00403" name="l00403"></a><span class="lineno">  403</span>  EZ_NAN_ASSERT(<span class="keyword">this</span>);</div>
<div class="line"><a id="l00404" name="l00404"></a><span class="lineno">  404</span> </div>
<div class="line"><a id="l00405" name="l00405"></a><span class="lineno">  405</span>  <span class="keywordtype">float</span> tMin, tMax;</div>
<div class="line"><a id="l00406" name="l00406"></a><span class="lineno">  406</span> </div>
<div class="line"><a id="l00407" name="l00407"></a><span class="lineno">  407</span>  <span class="comment">// Compare along X and Z axis, find intersection point</span></div>
<div class="line"><a id="l00408" name="l00408"></a><span class="lineno">  408</span>  {</div>
<div class="line"><a id="l00409" name="l00409"></a><span class="lineno">  409</span>    <span class="keywordtype">float</span> tMinY, tMaxY;</div>
<div class="line"><a id="l00410" name="l00410"></a><span class="lineno">  410</span> </div>
<div class="line"><a id="l00411" name="l00411"></a><span class="lineno">  411</span>    <span class="keyword">const</span> <span class="keywordtype">float</span> fDivX = 1.0f / vRayDir.x;</div>
<div class="line"><a id="l00412" name="l00412"></a><span class="lineno">  412</span>    <span class="keyword">const</span> <span class="keywordtype">float</span> fDivY = 1.0f / vRayDir.y;</div>
<div class="line"><a id="l00413" name="l00413"></a><span class="lineno">  413</span> </div>
<div class="line"><a id="l00414" name="l00414"></a><span class="lineno">  414</span>    <span class="keywordflow">if</span> (vRayDir.x &gt;= 0.0f)</div>
<div class="line"><a id="l00415" name="l00415"></a><span class="lineno">  415</span>    {</div>
<div class="line"><a id="l00416" name="l00416"></a><span class="lineno">  416</span>      tMin = (m_vMin.x - vStartPos.x) * fDivX;</div>
<div class="line"><a id="l00417" name="l00417"></a><span class="lineno">  417</span>      tMax = (m_vMax.x - vStartPos.x) * fDivX;</div>
<div class="line"><a id="l00418" name="l00418"></a><span class="lineno">  418</span>    }</div>
<div class="line"><a id="l00419" name="l00419"></a><span class="lineno">  419</span>    <span class="keywordflow">else</span></div>
<div class="line"><a id="l00420" name="l00420"></a><span class="lineno">  420</span>    {</div>
<div class="line"><a id="l00421" name="l00421"></a><span class="lineno">  421</span>      tMin = (m_vMax.x - vStartPos.x) * fDivX;</div>
<div class="line"><a id="l00422" name="l00422"></a><span class="lineno">  422</span>      tMax = (m_vMin.x - vStartPos.x) * fDivX;</div>
<div class="line"><a id="l00423" name="l00423"></a><span class="lineno">  423</span>    }</div>
<div class="line"><a id="l00424" name="l00424"></a><span class="lineno">  424</span> </div>
<div class="line"><a id="l00425" name="l00425"></a><span class="lineno">  425</span>    <span class="keywordflow">if</span> (vRayDir.y &gt;= 0.0f)</div>
<div class="line"><a id="l00426" name="l00426"></a><span class="lineno">  426</span>    {</div>
<div class="line"><a id="l00427" name="l00427"></a><span class="lineno">  427</span>      tMinY = (m_vMin.y - vStartPos.y) * fDivY;</div>
<div class="line"><a id="l00428" name="l00428"></a><span class="lineno">  428</span>      tMaxY = (m_vMax.y - vStartPos.y) * fDivY;</div>
<div class="line"><a id="l00429" name="l00429"></a><span class="lineno">  429</span>    }</div>
<div class="line"><a id="l00430" name="l00430"></a><span class="lineno">  430</span>    <span class="keywordflow">else</span></div>
<div class="line"><a id="l00431" name="l00431"></a><span class="lineno">  431</span>    {</div>
<div class="line"><a id="l00432" name="l00432"></a><span class="lineno">  432</span>      tMinY = (m_vMax.y - vStartPos.y) * fDivY;</div>
<div class="line"><a id="l00433" name="l00433"></a><span class="lineno">  433</span>      tMaxY = (m_vMin.y - vStartPos.y) * fDivY;</div>
<div class="line"><a id="l00434" name="l00434"></a><span class="lineno">  434</span>    }</div>
<div class="line"><a id="l00435" name="l00435"></a><span class="lineno">  435</span> </div>
<div class="line"><a id="l00436" name="l00436"></a><span class="lineno">  436</span>    <span class="keywordflow">if</span> (tMin &gt; tMaxY || tMinY &gt; tMax)</div>
<div class="line"><a id="l00437" name="l00437"></a><span class="lineno">  437</span>      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00438" name="l00438"></a><span class="lineno">  438</span> </div>
<div class="line"><a id="l00439" name="l00439"></a><span class="lineno">  439</span>    <span class="keywordflow">if</span> (tMinY &gt; tMin)</div>
<div class="line"><a id="l00440" name="l00440"></a><span class="lineno">  440</span>      tMin = tMinY;</div>
<div class="line"><a id="l00441" name="l00441"></a><span class="lineno">  441</span>    <span class="keywordflow">if</span> (tMaxY &lt; tMax)</div>
<div class="line"><a id="l00442" name="l00442"></a><span class="lineno">  442</span>      tMax = tMaxY;</div>
<div class="line"><a id="l00443" name="l00443"></a><span class="lineno">  443</span>  }</div>
<div class="line"><a id="l00444" name="l00444"></a><span class="lineno">  444</span> </div>
<div class="line"><a id="l00445" name="l00445"></a><span class="lineno">  445</span>  <span class="comment">// Compare along Z axis and previous result, find intersection point</span></div>
<div class="line"><a id="l00446" name="l00446"></a><span class="lineno">  446</span>  {</div>
<div class="line"><a id="l00447" name="l00447"></a><span class="lineno">  447</span>    <span class="keywordtype">float</span> tMinZ, tMaxZ;</div>
<div class="line"><a id="l00448" name="l00448"></a><span class="lineno">  448</span> </div>
<div class="line"><a id="l00449" name="l00449"></a><span class="lineno">  449</span>    <span class="keyword">const</span> <span class="keywordtype">float</span> fDivZ = 1.0f / vRayDir.z;</div>
<div class="line"><a id="l00450" name="l00450"></a><span class="lineno">  450</span> </div>
<div class="line"><a id="l00451" name="l00451"></a><span class="lineno">  451</span>    <span class="keywordflow">if</span> (vRayDir.z &gt;= 0.0f)</div>
<div class="line"><a id="l00452" name="l00452"></a><span class="lineno">  452</span>    {</div>
<div class="line"><a id="l00453" name="l00453"></a><span class="lineno">  453</span>      tMinZ = (m_vMin.z - vStartPos.z) * fDivZ;</div>
<div class="line"><a id="l00454" name="l00454"></a><span class="lineno">  454</span>      tMaxZ = (m_vMax.z - vStartPos.z) * fDivZ;</div>
<div class="line"><a id="l00455" name="l00455"></a><span class="lineno">  455</span>    }</div>
<div class="line"><a id="l00456" name="l00456"></a><span class="lineno">  456</span>    <span class="keywordflow">else</span></div>
<div class="line"><a id="l00457" name="l00457"></a><span class="lineno">  457</span>    {</div>
<div class="line"><a id="l00458" name="l00458"></a><span class="lineno">  458</span>      tMinZ = (m_vMax.z - vStartPos.z) * fDivZ;</div>
<div class="line"><a id="l00459" name="l00459"></a><span class="lineno">  459</span>      tMaxZ = (m_vMin.z - vStartPos.z) * fDivZ;</div>
<div class="line"><a id="l00460" name="l00460"></a><span class="lineno">  460</span>    }</div>
<div class="line"><a id="l00461" name="l00461"></a><span class="lineno">  461</span> </div>
<div class="line"><a id="l00462" name="l00462"></a><span class="lineno">  462</span>    <span class="keywordflow">if</span> (tMin &gt; tMaxZ || tMinZ &gt; tMax)</div>
<div class="line"><a id="l00463" name="l00463"></a><span class="lineno">  463</span>      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00464" name="l00464"></a><span class="lineno">  464</span> </div>
<div class="line"><a id="l00465" name="l00465"></a><span class="lineno">  465</span>    <span class="keywordflow">if</span> (tMinZ &gt; tMin)</div>
<div class="line"><a id="l00466" name="l00466"></a><span class="lineno">  466</span>      tMin = tMinZ;</div>
<div class="line"><a id="l00467" name="l00467"></a><span class="lineno">  467</span>    <span class="keywordflow">if</span> (tMaxZ &lt; tMax)</div>
<div class="line"><a id="l00468" name="l00468"></a><span class="lineno">  468</span>      tMax = tMaxZ;</div>
<div class="line"><a id="l00469" name="l00469"></a><span class="lineno">  469</span>  }</div>
<div class="line"><a id="l00470" name="l00470"></a><span class="lineno">  470</span> </div>
<div class="line"><a id="l00471" name="l00471"></a><span class="lineno">  471</span>  <span class="comment">// rays that start inside the box are considered as not hitting the box</span></div>
<div class="line"><a id="l00472" name="l00472"></a><span class="lineno">  472</span>  <span class="keywordflow">if</span> (tMax &lt;= 0.0f)</div>
<div class="line"><a id="l00473" name="l00473"></a><span class="lineno">  473</span>    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00474" name="l00474"></a><span class="lineno">  474</span> </div>
<div class="line"><a id="l00475" name="l00475"></a><span class="lineno">  475</span>  <span class="keywordflow">if</span> (out_pIntersectionDistance)</div>
<div class="line"><a id="l00476" name="l00476"></a><span class="lineno">  476</span>    *out_pIntersectionDistance = tMin;</div>
<div class="line"><a id="l00477" name="l00477"></a><span class="lineno">  477</span> </div>
<div class="line"><a id="l00478" name="l00478"></a><span class="lineno">  478</span>  <span class="keywordflow">if</span> (out_pIntersection)</div>
<div class="line"><a id="l00479" name="l00479"></a><span class="lineno">  479</span>    *out_pIntersection = vStartPos + tMin * vRayDir;</div>
<div class="line"><a id="l00480" name="l00480"></a><span class="lineno">  480</span> </div>
<div class="line"><a id="l00481" name="l00481"></a><span class="lineno">  481</span>  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a id="l00482" name="l00482"></a><span class="lineno">  482</span>}</div>
</div>
<div class="line"><a id="l00483" name="l00483"></a><span class="lineno">  483</span> </div>
<div class="line"><a id="l00484" name="l00484"></a><span class="lineno">  484</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00485" data-start="{" data-end="}">
<div class="line"><a id="l00485" name="l00485"></a><span class="lineno"><a class="line" href="../../d6/d25/classez_bounding_box_template.htm#a0fa8841453c64d36e81476f7adb0fe3d">  485</a></span><span class="keywordtype">bool</span> <a class="code hl_function" href="../../d6/d25/classez_bounding_box_template.htm#a0fa8841453c64d36e81476f7adb0fe3d">ezBoundingBoxTemplate&lt;Type&gt;::GetLineSegmentIntersection</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vStartPos, <span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vEndPos, Type* out_pLineFraction, <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>* out_pIntersection)<span class="keyword"> const</span></div>
<div class="line"><a id="l00486" name="l00486"></a><span class="lineno">  486</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00487" name="l00487"></a><span class="lineno">  487</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> vRayDir = vEndPos - vStartPos;</div>
<div class="line"><a id="l00488" name="l00488"></a><span class="lineno">  488</span> </div>
<div class="line"><a id="l00489" name="l00489"></a><span class="lineno">  489</span>  Type fIntersection = 0.0f;</div>
<div class="line"><a id="l00490" name="l00490"></a><span class="lineno">  490</span>  <span class="keywordflow">if</span> (!GetRayIntersection(vStartPos, vRayDir, &amp;fIntersection, out_pIntersection))</div>
<div class="line"><a id="l00491" name="l00491"></a><span class="lineno">  491</span>    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00492" name="l00492"></a><span class="lineno">  492</span> </div>
<div class="line"><a id="l00493" name="l00493"></a><span class="lineno">  493</span>  <span class="keywordflow">if</span> (out_pLineFraction)</div>
<div class="line"><a id="l00494" name="l00494"></a><span class="lineno">  494</span>    *out_pLineFraction = fIntersection;</div>
<div class="line"><a id="l00495" name="l00495"></a><span class="lineno">  495</span> </div>
<div class="line"><a id="l00496" name="l00496"></a><span class="lineno">  496</span>  <span class="keywordflow">return</span> fIntersection &lt;= 1.0f;</div>
<div class="line"><a id="l00497" name="l00497"></a><span class="lineno">  497</span>}</div>
</div>
</div>
<div class="line"><a id="l00498" name="l00498"></a><span class="lineno">  498</span> </div>
<div class="line"><a id="l00499" name="l00499"></a><span class="lineno">  499</span> </div>
<div class="line"><a id="l00500" name="l00500"></a><span class="lineno">  500</span> </div>
<div class="line"><a id="l00501" name="l00501"></a><span class="lineno">  501</span><span class="preprocessor">#include &lt;Foundation/Math/Implementation/AllClasses_inl.h&gt;</span></div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="ttc" id="aclassez_bounding_box_template_htm"><div class="ttname"><a href="../../d6/d25/classez_bounding_box_template.htm">ezBoundingBoxTemplate</a></div><div class="ttdoc">An axis-aligned bounding box implementation.</div><div class="ttdef"><b>Definition</b> BoundingBox.h:12</div></div>
<div class="ttc" id="aclassez_bounding_box_template_htm_a0fa8841453c64d36e81476f7adb0fe3d"><div class="ttname"><a href="../../d6/d25/classez_bounding_box_template.htm#a0fa8841453c64d36e81476f7adb0fe3d">ezBoundingBoxTemplate::GetLineSegmentIntersection</a></div><div class="ttdeci">bool GetLineSegmentIntersection(const ezVec3Template&lt; Type &gt; &amp;vStartPos, const ezVec3Template&lt; Type &gt; &amp;vEndPos, Type *out_pLineFraction=nullptr, ezVec3Template&lt; Type &gt; *out_pIntersection=nullptr) const</div><div class="ttdoc">Checks whether the line segment intersects the box. Optionally returns the intersection point and the...</div><div class="ttdef"><b>Definition</b> BoundingBox_inl.h:485</div></div>
<div class="ttc" id="aclassez_bounding_box_template_htm_a1e522040c3c34c9ece7035a9116280f9"><div class="ttname"><a href="../../d6/d25/classez_bounding_box_template.htm#a1e522040c3c34c9ece7035a9116280f9">ezBoundingBoxTemplate::MakeZero</a></div><div class="ttdeci">static ezBoundingBoxTemplate&lt; Type &gt; MakeZero()</div><div class="ttdoc">Creates a box that is located at the origin and has zero size. This is a 'valid' box.</div><div class="ttdef"><b>Definition</b> BoundingBox_inl.h:15</div></div>
<div class="ttc" id="aclassez_bounding_box_template_htm_a23c099531d15e150f84f226e295062d7"><div class="ttname"><a href="../../d6/d25/classez_bounding_box_template.htm#a23c099531d15e150f84f226e295062d7">ezBoundingBoxTemplate::MakeFromCenterAndHalfExtents</a></div><div class="ttdeci">static ezBoundingBoxTemplate&lt; Type &gt; MakeFromCenterAndHalfExtents(const ezVec3Template&lt; Type &gt; &amp;vCenter, const ezVec3Template&lt; Type &gt; &amp;vHalfExtents)</div><div class="ttdoc">Creates a box from a center point and half-extents for each axis.</div><div class="ttdef"><b>Definition</b> BoundingBox_inl.h:33</div></div>
<div class="ttc" id="aclassez_bounding_box_template_htm_a31501fc2dd571ba1f8986bf40320f396"><div class="ttname"><a href="../../d6/d25/classez_bounding_box_template.htm#a31501fc2dd571ba1f8986bf40320f396">ezBoundingBoxTemplate::MakeInvalid</a></div><div class="ttdeci">static ezBoundingBoxTemplate&lt; Type &gt; MakeInvalid()</div><div class="ttdoc">Creates a box that is in an invalid state. ExpandToInclude can then be used to make it into a boundin...</div><div class="ttdef"><b>Definition</b> BoundingBox_inl.h:24</div></div>
<div class="ttc" id="aclassez_bounding_box_template_htm_a32a4753ead3ebe710720283b97880c77"><div class="ttname"><a href="../../d6/d25/classez_bounding_box_template.htm#a32a4753ead3ebe710720283b97880c77">ezBoundingBoxTemplate::MakeFromPoints</a></div><div class="ttdeci">static ezBoundingBoxTemplate&lt; Type &gt; MakeFromPoints(const ezVec3Template&lt; Type &gt; *pPoints, ezUInt32 uiNumPoints, ezUInt32 uiStride=sizeof(ezVec3Template&lt; Type &gt;))</div><div class="ttdoc">Creates a box around the given set of points. If uiNumPoints is zero, the returned box is invalid (sa...</div><div class="ttdef"><b>Definition</b> BoundingBox_inl.h:54</div></div>
<div class="ttc" id="aclassez_bounding_box_template_htm_a4170976eea7cbc231d17581dab59515f"><div class="ttname"><a href="../../d6/d25/classez_bounding_box_template.htm#a4170976eea7cbc231d17581dab59515f">ezBoundingBoxTemplate::ScaleFromCenter</a></div><div class="ttdeci">void ScaleFromCenter(const ezVec3Template&lt; Type &gt; &amp;vScale)</div><div class="ttdoc">Scales the box along each axis, but keeps its center constant.</div><div class="ttdef"><b>Definition</b> BoundingBox_inl.h:270</div></div>
<div class="ttc" id="aclassez_bounding_box_template_htm_a4599f3e1af7765dcdac1dbd3353862eb"><div class="ttname"><a href="../../d6/d25/classez_bounding_box_template.htm#a4599f3e1af7765dcdac1dbd3353862eb">ezBoundingBoxTemplate::MakeFromMinMax</a></div><div class="ttdeci">static ezBoundingBoxTemplate&lt; Type &gt; MakeFromMinMax(const ezVec3Template&lt; Type &gt; &amp;vMin, const ezVec3Template&lt; Type &gt; &amp;vMax)</div><div class="ttdoc">Creates a box with the given minimum and maximum values.</div><div class="ttdef"><b>Definition</b> BoundingBox_inl.h:42</div></div>
<div class="ttc" id="aclassez_bounding_box_template_htm_a483bf35eb69bb1a1ab87ca0deb7f8a93"><div class="ttname"><a href="../../d6/d25/classez_bounding_box_template.htm#a483bf35eb69bb1a1ab87ca0deb7f8a93">ezBoundingBoxTemplate::Contains</a></div><div class="ttdeci">bool Contains(const ezVec3Template&lt; Type &gt; &amp;vPoint) const</div><div class="ttdoc">Checks whether the given point is inside the box.</div><div class="ttdef"><b>Definition</b> BoundingBox_inl.h:162</div></div>
<div class="ttc" id="aclassez_bounding_box_template_htm_a4a2167dcbd2197b7d6b882e5596435d3"><div class="ttname"><a href="../../d6/d25/classez_bounding_box_template.htm#a4a2167dcbd2197b7d6b882e5596435d3">ezBoundingBoxTemplate::Translate</a></div><div class="ttdeci">void Translate(const ezVec3Template&lt; Type &gt; &amp;vDiff)</div><div class="ttdoc">Moves the box by the given vector.</div><div class="ttdef"><b>Definition</b> BoundingBox_inl.h:263</div></div>
<div class="ttc" id="aclassez_bounding_box_template_htm_a50ce4fbb4a3485a58d363ab0e4355663"><div class="ttname"><a href="../../d6/d25/classez_bounding_box_template.htm#a50ce4fbb4a3485a58d363ab0e4355663">ezBoundingBoxTemplate::Overlaps</a></div><div class="ttdeci">bool Overlaps(const ezBoundingBoxTemplate &amp;rhs) const</div><div class="ttdoc">Checks whether this box overlaps with the given box.</div><div class="ttdef"><b>Definition</b> BoundingBox_inl.h:197</div></div>
<div class="ttc" id="aclassez_bounding_box_template_htm_a52c2dc04664fdcf22eeecc0e10d17bdb"><div class="ttname"><a href="../../d6/d25/classez_bounding_box_template.htm#a52c2dc04664fdcf22eeecc0e10d17bdb">ezBoundingBoxTemplate::TransformFromCenter</a></div><div class="ttdeci">void TransformFromCenter(const ezMat4Template&lt; Type &gt; &amp;mTransform)</div><div class="ttdoc">Transforms the corners of the box in its local space. The center of the box does not change,...</div><div class="ttdef"><b>Definition</b> BoundingBox_inl.h:293</div></div>
<div class="ttc" id="aclassez_bounding_box_template_htm_a5b5cf92c58c3c07892417738696d0ed6"><div class="ttname"><a href="../../d6/d25/classez_bounding_box_template.htm#a5b5cf92c58c3c07892417738696d0ed6">ezBoundingBoxTemplate::GetCenter</a></div><div class="ttdeci">const ezVec3Template&lt; Type &gt; GetCenter() const</div><div class="ttdoc">Returns the center position of the box.</div><div class="ttdef"><b>Definition</b> BoundingBox_inl.h:78</div></div>
<div class="ttc" id="aclassez_bounding_box_template_htm_a5cb16eb5a9ec92bd0d8325ed7642441e"><div class="ttname"><a href="../../d6/d25/classez_bounding_box_template.htm#a5cb16eb5a9ec92bd0d8325ed7642441e">ezBoundingBoxTemplate::ExpandToCube</a></div><div class="ttdeci">void ExpandToCube()</div><div class="ttdoc">If the box is not cubic all extents are set to the value of the maximum extent, such that the box bec...</div><div class="ttdef"><b>Definition</b> BoundingBox_inl.h:139</div></div>
<div class="ttc" id="aclassez_bounding_box_template_htm_a6fa427974e16355e5a87935b44e33dad"><div class="ttname"><a href="../../d6/d25/classez_bounding_box_template.htm#a6fa427974e16355e5a87935b44e33dad">ezBoundingBoxTemplate::GetExtents</a></div><div class="ttdeci">const ezVec3Template&lt; Type &gt; GetExtents() const</div><div class="ttdoc">Returns the extents of the box along each axis.</div><div class="ttdef"><b>Definition</b> BoundingBox_inl.h:84</div></div>
<div class="ttc" id="aclassez_bounding_box_template_htm_a9048b79c0771b59051c39f1bc50987eb"><div class="ttname"><a href="../../d6/d25/classez_bounding_box_template.htm#a9048b79c0771b59051c39f1bc50987eb">ezBoundingBoxTemplate::TransformFromOrigin</a></div><div class="ttdeci">void TransformFromOrigin(const ezMat4Template&lt; Type &gt; &amp;mTransform)</div><div class="ttdoc">Transforms the corners of the box and recomputes the AABB of those transformed points....</div><div class="ttdef"><b>Definition</b> BoundingBox_inl.h:306</div></div>
<div class="ttc" id="aclassez_bounding_box_template_htm_a967a358a476c731641b1ad6633b8475f"><div class="ttname"><a href="../../d6/d25/classez_bounding_box_template.htm#a967a358a476c731641b1ad6633b8475f">ezBoundingBoxTemplate::GetDistanceSquaredTo</a></div><div class="ttdeci">Type GetDistanceSquaredTo(const ezVec3Template&lt; Type &gt; &amp;vPoint) const</div><div class="ttdoc">Returns the squared minimum distance from the box's surface to the point. Zero if the point is inside...</div><div class="ttdef"><b>Definition</b> BoundingBox_inl.h:332</div></div>
<div class="ttc" id="aclassez_bounding_box_template_htm_a9c90db5c117368f3efb2325a11f7f9a7"><div class="ttname"><a href="../../d6/d25/classez_bounding_box_template.htm#a9c90db5c117368f3efb2325a11f7f9a7">ezBoundingBoxTemplate::ScaleFromOrigin</a></div><div class="ttdeci">void ScaleFromOrigin(const ezVec3Template&lt; Type &gt; &amp;vScale)</div><div class="ttdoc">Scales the box's corners by the given factors, thus also moves the box around.</div><div class="ttdef"><b>Definition</b> BoundingBox_inl.h:282</div></div>
<div class="ttc" id="aclassez_bounding_box_template_htm_a9e7856a6da6bc5f71440e309584b7238"><div class="ttname"><a href="../../d6/d25/classez_bounding_box_template.htm#a9e7856a6da6bc5f71440e309584b7238">ezBoundingBoxTemplate::ezBoundingBoxTemplate</a></div><div class="ttdeci">ezBoundingBoxTemplate()</div><div class="ttdoc">Default constructor does not initialize anything.</div></div>
<div class="ttc" id="aclassez_bounding_box_template_htm_aa05f968b190ff2bdd069854f6a1a9151"><div class="ttname"><a href="../../d6/d25/classez_bounding_box_template.htm#aa05f968b190ff2bdd069854f6a1a9151">ezBoundingBoxTemplate::GetHalfExtents</a></div><div class="ttdeci">const ezVec3Template&lt; Type &gt; GetHalfExtents() const</div><div class="ttdoc">Returns the half extents of the box along each axis.</div><div class="ttdef"><b>Definition</b> BoundingBox_inl.h:90</div></div>
<div class="ttc" id="aclassez_bounding_box_template_htm_aa6e1b369a4cba10665e6e6fb86fb9176"><div class="ttname"><a href="../../d6/d25/classez_bounding_box_template.htm#aa6e1b369a4cba10665e6e6fb86fb9176">ezBoundingBoxTemplate::GetDistanceTo</a></div><div class="ttdeci">Type GetDistanceTo(const ezVec3Template&lt; Type &gt; &amp;vPoint) const</div><div class="ttdoc">Returns the minimum distance from the box's surface to the point. Zero if the point is inside the box...</div><div class="ttdef"><b>Definition</b> BoundingBox_inl.h:324</div></div>
<div class="ttc" id="aclassez_bounding_box_template_htm_ab921f13ead8b40ac2dc501fd09b64785"><div class="ttname"><a href="../../d6/d25/classez_bounding_box_template.htm#ab921f13ead8b40ac2dc501fd09b64785">ezBoundingBoxTemplate::IsNaN</a></div><div class="ttdeci">bool IsNaN() const</div><div class="ttdoc">Checks whether any component is NaN.</div><div class="ttdef"><b>Definition</b> BoundingBox_inl.h:102</div></div>
<div class="ttc" id="aclassez_bounding_box_template_htm_ac08ca0cfe8e130b306f9cb253831ba86"><div class="ttname"><a href="../../d6/d25/classez_bounding_box_template.htm#ac08ca0cfe8e130b306f9cb253831ba86">ezBoundingBoxTemplate::GetCorners</a></div><div class="ttdeci">void GetCorners(ezVec3Template&lt; Type &gt; *out_pCorners) const</div><div class="ttdoc">Writes the 8 different corners of the box to the given array.</div><div class="ttdef"><b>Definition</b> BoundingBox_inl.h:62</div></div>
<div class="ttc" id="aclassez_bounding_box_template_htm_ac69be90f51d35d38cd90588ce9442809"><div class="ttname"><a href="../../d6/d25/classez_bounding_box_template.htm#ac69be90f51d35d38cd90588ce9442809">ezBoundingBoxTemplate::IsValid</a></div><div class="ttdeci">bool IsValid() const</div><div class="ttdoc">Checks whether the box is in an invalid state.</div><div class="ttdef"><b>Definition</b> BoundingBox_inl.h:96</div></div>
<div class="ttc" id="aclassez_bounding_box_template_htm_ac7b9b32702796a1039da45d8e67f3bb9"><div class="ttname"><a href="../../d6/d25/classez_bounding_box_template.htm#ac7b9b32702796a1039da45d8e67f3bb9">ezBoundingBoxTemplate::GetClampedPoint</a></div><div class="ttdeci">const ezVec3Template&lt; Type &gt; GetClampedPoint(const ezVec3Template&lt; Type &gt; &amp;vPoint) const</div><div class="ttdoc">The given point is clamped to the volume of the box, i.e. it will be either inside the box or on its ...</div><div class="ttdef"><b>Definition</b> BoundingBox_inl.h:318</div></div>
<div class="ttc" id="aclassez_bounding_box_template_htm_acc6196bf642a8e5351811db5e91ff962"><div class="ttname"><a href="../../d6/d25/classez_bounding_box_template.htm#acc6196bf642a8e5351811db5e91ff962">ezBoundingBoxTemplate::GetRayIntersection</a></div><div class="ttdeci">bool GetRayIntersection(const ezVec3Template&lt; Type &gt; &amp;vStartPos, const ezVec3Template&lt; Type &gt; &amp;vRayDir, Type *out_pIntersectionDistance=nullptr, ezVec3Template&lt; Type &gt; *out_pIntersection=nullptr) const</div><div class="ttdoc">Returns whether the given ray intersects the box. Optionally returns the intersection distance and po...</div><div class="ttdef"><b>Definition</b> BoundingBox_inl.h:392</div></div>
<div class="ttc" id="aclassez_bounding_box_template_htm_ad59a4af199ac0a7afadec9fddb8b986f"><div class="ttname"><a href="../../d6/d25/classez_bounding_box_template.htm#ad59a4af199ac0a7afadec9fddb8b986f">ezBoundingBoxTemplate::Grow</a></div><div class="ttdeci">void Grow(const ezVec3Template&lt; Type &gt; &amp;vDiff)</div><div class="ttdoc">Will increase the size of the box in all directions by the given amount (per axis).</div><div class="ttdef"><b>Definition</b> BoundingBox_inl.h:151</div></div>
<div class="ttc" id="aclassez_bounding_box_template_htm_ad6684e555ebc4629c2680ceb768b1ee1"><div class="ttname"><a href="../../d6/d25/classez_bounding_box_template.htm#ad6684e555ebc4629c2680ceb768b1ee1">ezBoundingBoxTemplate::ExpandToInclude</a></div><div class="ttdeci">void ExpandToInclude(const ezVec3Template&lt; Type &gt; &amp;vPoint)</div><div class="ttdoc">Expands the box such that the given point is inside it.</div><div class="ttdef"><b>Definition</b> BoundingBox_inl.h:108</div></div>
<div class="ttc" id="aclassez_bounding_box_template_htm_ae5516b049bd458fca1c86bb97a846f2d"><div class="ttname"><a href="../../d6/d25/classez_bounding_box_template.htm#ae5516b049bd458fca1c86bb97a846f2d">ezBoundingBoxTemplate::IsEqual</a></div><div class="ttdeci">bool IsEqual(const ezBoundingBoxTemplate &amp;rhs, Type fEpsilon=ezMath::DefaultEpsilon&lt; Type &gt;()) const</div><div class="ttdoc">Checks whether this box and the other box are equal within some threshold.</div><div class="ttdef"><b>Definition</b> BoundingBox_inl.h:245</div></div>
<div class="ttc" id="aclassez_bounding_box_template_htm_af5a401b75e877ee27e47dfae6e8f28c4"><div class="ttname"><a href="../../d6/d25/classez_bounding_box_template.htm#af5a401b75e877ee27e47dfae6e8f28c4">ezBoundingBoxTemplate::IsIdentical</a></div><div class="ttdeci">bool IsIdentical(const ezBoundingBoxTemplate &amp;rhs) const</div><div class="ttdoc">Checks whether this box and the other box are exactly identical.</div><div class="ttdef"><b>Definition</b> BoundingBox_inl.h:239</div></div>
<div class="ttc" id="aclassez_mat4_template_htm"><div class="ttname"><a href="../../d7/d9b/classez_mat4_template.htm">ezMat4Template</a></div><div class="ttdoc">A 4x4 component matrix class.</div><div class="ttdef"><b>Definition</b> Mat4.h:11</div></div>
<div class="ttc" id="aclassez_mat4_template_htm_a446a4875709d5d2577718d314005e51d"><div class="ttname"><a href="../../d7/d9b/classez_mat4_template.htm#a446a4875709d5d2577718d314005e51d">ezMat4Template::TransformPosition</a></div><div class="ttdeci">const ezVec3Template&lt; Type &gt; TransformPosition(const ezVec3Template&lt; Type &gt; &amp;v) const</div><div class="ttdoc">Matrix-vector multiplication, assuming the 4th component of the vector is one (default behavior).</div><div class="ttdef"><b>Definition</b> Mat4_inl.h:347</div></div>
<div class="ttc" id="aclassez_memory_utils_htm_aaa8814eb70ee62638d61609635346446"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm#aaa8814eb70ee62638d61609635346446">ezMemoryUtils::AddByteOffset</a></div><div class="ttdeci">static T * AddByteOffset(T *pPtr, std::ptrdiff_t offset)</div><div class="ttdoc">Returns the address stored in ptr plus the given byte offset iOffset, cast to type T.</div></div>
<div class="ttc" id="aclassez_vec3_template_htm"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm">ezVec3Template</a></div><div class="ttdoc">A 3-component vector class.</div><div class="ttdef"><b>Definition</b> Vec3.h:9</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a1f96804c091f0d4a34225ce22f3d8128"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a1f96804c091f0d4a34225ce22f3d8128">ezVec3Template::CompMin</a></div><div class="ttdeci">const ezVec3Template&lt; Type &gt; CompMin(const ezVec3Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the component-wise minimum of *this and rhs.</div><div class="ttdef"><b>Definition</b> Vec3_inl.h:363</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a216fcb73cd48b1bd9062fdf9b8be0b88"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a216fcb73cd48b1bd9062fdf9b8be0b88">ezVec3Template::IsValid</a></div><div class="ttdeci">bool IsValid() const</div><div class="ttdoc">Checks that all components are finite numbers.</div><div class="ttdef"><b>Definition</b> Vec3_inl.h:169</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a330f758d541d570f19443bbbc0969e5e"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a330f758d541d570f19443bbbc0969e5e">ezVec3Template::IsNaN</a></div><div class="ttdeci">bool IsNaN() const</div><div class="ttdoc">Returns true, if any of x, y or z is NaN.</div><div class="ttdef"><b>Definition</b> Vec3_inl.h:156</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a42872bfbb26be83b6e0d0066fe772258"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a42872bfbb26be83b6e0d0066fe772258">ezVec3Template::MakeZero</a></div><div class="ttdeci">static ezVec3Template&lt; Type &gt; MakeZero()</div><div class="ttdoc">Returns a vector with all components set to zero.</div><div class="ttdef"><b>Definition</b> Vec3.h:38</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a4693ce7e3ea568fb31504369e69836fb"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a4693ce7e3ea568fb31504369e69836fb">ezVec3Template::Set</a></div><div class="ttdeci">void Set(Type xyz)</div><div class="ttdoc">Sets all 3 components to this value.</div><div class="ttdef"><b>Definition</b> Vec3_inl.h:32</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_a9b0266c9e67ecf838d3507bd67625941"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#a9b0266c9e67ecf838d3507bd67625941">ezVec3Template::CompMul</a></div><div class="ttdeci">const ezVec3Template&lt; Type &gt; CompMul(const ezVec3Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the component-wise multiplication of *this and rhs.</div><div class="ttdef"><b>Definition</b> Vec3_inl.h:391</div></div>
<div class="ttc" id="aclassez_vec3_template_htm_ab6d1eb1df0d8a172507f322249582485"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm#ab6d1eb1df0d8a172507f322249582485">ezVec3Template::CompMax</a></div><div class="ttdeci">const ezVec3Template&lt; Type &gt; CompMax(const ezVec3Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the component-wise maximum of *this and rhs.</div><div class="ttdef"><b>Definition</b> Vec3_inl.h:372</div></div>
<div class="ttc" id="anamespaceez_math_htm_a6f7ee19d0f8e81ff6ae5f394075e3a56"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a6f7ee19d0f8e81ff6ae5f394075e3a56">ezMath::Max</a></div><div class="ttdeci">constexpr EZ_ALWAYS_INLINE T Max(T f1, T f2)</div><div class="ttdoc">Returns the greater value, f1 or f2.</div><div class="ttdef"><b>Definition</b> Math_inl.h:39</div></div>
<div class="ttc" id="anamespaceez_math_htm_a7f4e38e30c7914d11bcc85b0a4b1c09a"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a7f4e38e30c7914d11bcc85b0a4b1c09a">ezMath::Sqrt</a></div><div class="ttdeci">EZ_ALWAYS_INLINE double Sqrt(double f)</div><div class="ttdoc">Returns the square root of f.</div><div class="ttdef"><b>Definition</b> MathDouble_inl.h:99</div></div>
<div class="ttc" id="anamespaceez_math_htm_adfc8bc546fb58a0280cce97f9a40f324"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#adfc8bc546fb58a0280cce97f9a40f324">ezMath::Square</a></div><div class="ttdeci">constexpr EZ_ALWAYS_INLINE T Square(T f)</div><div class="ttdoc">Returns f * f.</div><div class="ttdef"><b>Definition</b> Math_inl.h:8</div></div>
<div class="ttc" id="anamespaceez_math_htm_ae076df9c39820ea636c580267e2e379a"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#ae076df9c39820ea636c580267e2e379a">ezMath::IsInRange</a></div><div class="ttdeci">constexpr bool IsInRange(T value, T minVal, T maxVal)</div><div class="ttdoc">Checks whether the value of the first parameter lies between the value of the second and third.</div><div class="ttdef"><b>Definition</b> Math_inl.h:282</div></div>
<div class="ttc" id="astructez_arg_f_htm"><div class="ttname"><a href="../../d7/dfa/structez_arg_f.htm">ezArgF</a></div><div class="ttdef"><b>Definition</b> FormatStringArgs.h:48</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_4ad0f5fbee83b30173e7fecedeea26f0.htm">Math</a></li><li class="navelem"><a class="el" href="../../dir_89ec743f7412cd7cb287fad7b6649245.htm">Implementation</a></li><li class="navelem"><b>BoundingBox_inl.h</b></li>
    <li class="footer">Generated on Fri Jul 11 2025 12:17:51 for ezEngine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
