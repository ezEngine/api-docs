<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: ezAtomicUtils Struct Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 23.04</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d6/d25/structez_atomic_utils.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="../../d8/dcf/structez_atomic_utils-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ezAtomicUtils Struct Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>This class provides functions to do atomic operations.  
 <a href="../../d6/d25/structez_atomic_utils.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d0/d8e/_atomic_utils_8h_source.htm">AtomicUtils.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a1549844787e3c4c20a8882dd1cfa149f"><td class="memItemLeft" align="right" valign="top"><a id="a1549844787e3c4c20a8882dd1cfa149f"></a>
static ezInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d25/structez_atomic_utils.htm#a1549844787e3c4c20a8882dd1cfa149f">Read</a> (volatile const ezInt32 &amp;iSrc)</td></tr>
<tr class="memdesc:a1549844787e3c4c20a8882dd1cfa149f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns src as an atomic operation and returns its value. <br /></td></tr>
<tr class="separator:a1549844787e3c4c20a8882dd1cfa149f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a347a01cee062a226eddf4e53c66810ad"><td class="memItemLeft" align="right" valign="top"><a id="a347a01cee062a226eddf4e53c66810ad"></a>
static ezInt64&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d25/structez_atomic_utils.htm#a347a01cee062a226eddf4e53c66810ad">Read</a> (volatile const ezInt64 &amp;iSrc)</td></tr>
<tr class="memdesc:a347a01cee062a226eddf4e53c66810ad"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns src as an atomic operation and returns its value. <br /></td></tr>
<tr class="separator:a347a01cee062a226eddf4e53c66810ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a959377f2746af300fbcd76b8b77aedb8"><td class="memItemLeft" align="right" valign="top"><a id="a959377f2746af300fbcd76b8b77aedb8"></a>
static ezInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d25/structez_atomic_utils.htm#a959377f2746af300fbcd76b8b77aedb8">Increment</a> (volatile ezInt32 &amp;ref_iDest)</td></tr>
<tr class="memdesc:a959377f2746af300fbcd76b8b77aedb8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Increments dest as an atomic operation and returns the new value. <br /></td></tr>
<tr class="separator:a959377f2746af300fbcd76b8b77aedb8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b6a6b895f0541db4d3bc06e98f1b9b5"><td class="memItemLeft" align="right" valign="top"><a id="a7b6a6b895f0541db4d3bc06e98f1b9b5"></a>
static ezInt64&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d25/structez_atomic_utils.htm#a7b6a6b895f0541db4d3bc06e98f1b9b5">Increment</a> (volatile ezInt64 &amp;ref_iDest)</td></tr>
<tr class="memdesc:a7b6a6b895f0541db4d3bc06e98f1b9b5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Increments dest as an atomic operation and returns the new value. <br /></td></tr>
<tr class="separator:a7b6a6b895f0541db4d3bc06e98f1b9b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a891bc0653bdeabecf91557d62fee4bf7"><td class="memItemLeft" align="right" valign="top"><a id="a891bc0653bdeabecf91557d62fee4bf7"></a>
static ezInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d25/structez_atomic_utils.htm#a891bc0653bdeabecf91557d62fee4bf7">Decrement</a> (volatile ezInt32 &amp;ref_iDest)</td></tr>
<tr class="memdesc:a891bc0653bdeabecf91557d62fee4bf7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Decrements dest as an atomic operation and returns the new value. <br /></td></tr>
<tr class="separator:a891bc0653bdeabecf91557d62fee4bf7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a28f9b8e25cc08e4fc2ce2255647f57ca"><td class="memItemLeft" align="right" valign="top"><a id="a28f9b8e25cc08e4fc2ce2255647f57ca"></a>
static ezInt64&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d25/structez_atomic_utils.htm#a28f9b8e25cc08e4fc2ce2255647f57ca">Decrement</a> (volatile ezInt64 &amp;ref_iDest)</td></tr>
<tr class="memdesc:a28f9b8e25cc08e4fc2ce2255647f57ca"><td class="mdescLeft">&#160;</td><td class="mdescRight">Decrements dest as an atomic operation and returns the new value. <br /></td></tr>
<tr class="separator:a28f9b8e25cc08e4fc2ce2255647f57ca"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af15ac40af80e1d985e666e31cf6e99af"><td class="memItemLeft" align="right" valign="top"><a id="af15ac40af80e1d985e666e31cf6e99af"></a>
static ezInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d25/structez_atomic_utils.htm#af15ac40af80e1d985e666e31cf6e99af">PostIncrement</a> (volatile ezInt32 &amp;ref_iDest)</td></tr>
<tr class="memdesc:af15ac40af80e1d985e666e31cf6e99af"><td class="mdescLeft">&#160;</td><td class="mdescRight">Increments dest as an atomic operation and returns the old value. <br /></td></tr>
<tr class="separator:af15ac40af80e1d985e666e31cf6e99af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8233757a618400e06415bfa3f13c5b1e"><td class="memItemLeft" align="right" valign="top"><a id="a8233757a618400e06415bfa3f13c5b1e"></a>
static ezInt64&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d25/structez_atomic_utils.htm#a8233757a618400e06415bfa3f13c5b1e">PostIncrement</a> (volatile ezInt64 &amp;ref_iDest)</td></tr>
<tr class="memdesc:a8233757a618400e06415bfa3f13c5b1e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Increments dest as an atomic operation and returns the old value. <br /></td></tr>
<tr class="separator:a8233757a618400e06415bfa3f13c5b1e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f93633960a320a99db463afa5f11fd8"><td class="memItemLeft" align="right" valign="top"><a id="a5f93633960a320a99db463afa5f11fd8"></a>
static ezInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d25/structez_atomic_utils.htm#a5f93633960a320a99db463afa5f11fd8">PostDecrement</a> (volatile ezInt32 &amp;ref_iDest)</td></tr>
<tr class="memdesc:a5f93633960a320a99db463afa5f11fd8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Decrements dest as an atomic operation and returns the old value. <br /></td></tr>
<tr class="separator:a5f93633960a320a99db463afa5f11fd8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a50e695d574b3518171f92e5a4bca7c0b"><td class="memItemLeft" align="right" valign="top"><a id="a50e695d574b3518171f92e5a4bca7c0b"></a>
static ezInt64&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d25/structez_atomic_utils.htm#a50e695d574b3518171f92e5a4bca7c0b">PostDecrement</a> (volatile ezInt64 &amp;ref_iDest)</td></tr>
<tr class="memdesc:a50e695d574b3518171f92e5a4bca7c0b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Decrements dest as an atomic operation and returns the old value. <br /></td></tr>
<tr class="separator:a50e695d574b3518171f92e5a4bca7c0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aef963f7605a9c97643f891da145ce8c2"><td class="memItemLeft" align="right" valign="top"><a id="aef963f7605a9c97643f891da145ce8c2"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d25/structez_atomic_utils.htm#aef963f7605a9c97643f891da145ce8c2">Add</a> (volatile ezInt32 &amp;ref_iDest, ezInt32 value)</td></tr>
<tr class="memdesc:aef963f7605a9c97643f891da145ce8c2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds value to dest as an atomic operation. <br /></td></tr>
<tr class="separator:aef963f7605a9c97643f891da145ce8c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a13aa6d14df32d516e591a87ea3a9eeff"><td class="memItemLeft" align="right" valign="top"><a id="a13aa6d14df32d516e591a87ea3a9eeff"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d25/structez_atomic_utils.htm#a13aa6d14df32d516e591a87ea3a9eeff">Add</a> (volatile ezInt64 &amp;ref_iDest, ezInt64 value)</td></tr>
<tr class="memdesc:a13aa6d14df32d516e591a87ea3a9eeff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds value to dest as an atomic operation. <br /></td></tr>
<tr class="separator:a13aa6d14df32d516e591a87ea3a9eeff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a58ddb25500b7b065128e5cd84d18a002"><td class="memItemLeft" align="right" valign="top"><a id="a58ddb25500b7b065128e5cd84d18a002"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d25/structez_atomic_utils.htm#a58ddb25500b7b065128e5cd84d18a002">And</a> (volatile ezInt32 &amp;ref_iDest, ezInt32 value)</td></tr>
<tr class="memdesc:a58ddb25500b7b065128e5cd84d18a002"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an atomic bitwise AND on dest using value. <br /></td></tr>
<tr class="separator:a58ddb25500b7b065128e5cd84d18a002"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3388136581ec5cae331a291e92e38036"><td class="memItemLeft" align="right" valign="top"><a id="a3388136581ec5cae331a291e92e38036"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d25/structez_atomic_utils.htm#a3388136581ec5cae331a291e92e38036">And</a> (volatile ezInt64 &amp;ref_iDest, ezInt64 value)</td></tr>
<tr class="memdesc:a3388136581ec5cae331a291e92e38036"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an atomic bitwise AND on dest using value. <br /></td></tr>
<tr class="separator:a3388136581ec5cae331a291e92e38036"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7549b60facd9254bffd7759c41e7109"><td class="memItemLeft" align="right" valign="top"><a id="ab7549b60facd9254bffd7759c41e7109"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d25/structez_atomic_utils.htm#ab7549b60facd9254bffd7759c41e7109">Or</a> (volatile ezInt32 &amp;ref_iDest, ezInt32 value)</td></tr>
<tr class="memdesc:ab7549b60facd9254bffd7759c41e7109"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an atomic bitwise OR on dest using value. <br /></td></tr>
<tr class="separator:ab7549b60facd9254bffd7759c41e7109"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeec78003ed51989eb264a6508d938841"><td class="memItemLeft" align="right" valign="top"><a id="aeec78003ed51989eb264a6508d938841"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d25/structez_atomic_utils.htm#aeec78003ed51989eb264a6508d938841">Or</a> (volatile ezInt64 &amp;ref_iDest, ezInt64 value)</td></tr>
<tr class="memdesc:aeec78003ed51989eb264a6508d938841"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an atomic bitwise OR on dest using value. <br /></td></tr>
<tr class="separator:aeec78003ed51989eb264a6508d938841"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:addf66539a98ed2add0cc34d4ea272493"><td class="memItemLeft" align="right" valign="top"><a id="addf66539a98ed2add0cc34d4ea272493"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d25/structez_atomic_utils.htm#addf66539a98ed2add0cc34d4ea272493">Xor</a> (volatile ezInt32 &amp;ref_iDest, ezInt32 value)</td></tr>
<tr class="memdesc:addf66539a98ed2add0cc34d4ea272493"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an atomic bitwise XOR on dest using value. <br /></td></tr>
<tr class="separator:addf66539a98ed2add0cc34d4ea272493"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed098aaa30cbd4433732d6c8b3c0e895"><td class="memItemLeft" align="right" valign="top"><a id="aed098aaa30cbd4433732d6c8b3c0e895"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d25/structez_atomic_utils.htm#aed098aaa30cbd4433732d6c8b3c0e895">Xor</a> (volatile ezInt64 &amp;ref_iDest, ezInt64 value)</td></tr>
<tr class="memdesc:aed098aaa30cbd4433732d6c8b3c0e895"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an atomic bitwise XOR on dest using value. <br /></td></tr>
<tr class="separator:aed098aaa30cbd4433732d6c8b3c0e895"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75c803bc64f064a0c2ee291b2271e8c9"><td class="memItemLeft" align="right" valign="top"><a id="a75c803bc64f064a0c2ee291b2271e8c9"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d25/structez_atomic_utils.htm#a75c803bc64f064a0c2ee291b2271e8c9">Min</a> (volatile ezInt32 &amp;ref_iDest, ezInt32 value)</td></tr>
<tr class="memdesc:a75c803bc64f064a0c2ee291b2271e8c9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an atomic min operation on dest using value. <br /></td></tr>
<tr class="separator:a75c803bc64f064a0c2ee291b2271e8c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae081af1ccbb8243e905a26c2a0498445"><td class="memItemLeft" align="right" valign="top"><a id="ae081af1ccbb8243e905a26c2a0498445"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d25/structez_atomic_utils.htm#ae081af1ccbb8243e905a26c2a0498445">Min</a> (volatile ezInt64 &amp;ref_iDest, ezInt64 value)</td></tr>
<tr class="memdesc:ae081af1ccbb8243e905a26c2a0498445"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an atomic min operation on dest using value. <br /></td></tr>
<tr class="separator:ae081af1ccbb8243e905a26c2a0498445"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c4254a8e7637b08c0e946fbc49c0127"><td class="memItemLeft" align="right" valign="top"><a id="a9c4254a8e7637b08c0e946fbc49c0127"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d25/structez_atomic_utils.htm#a9c4254a8e7637b08c0e946fbc49c0127">Max</a> (volatile ezInt32 &amp;ref_iDest, ezInt32 value)</td></tr>
<tr class="memdesc:a9c4254a8e7637b08c0e946fbc49c0127"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an atomic max operation on dest using value. <br /></td></tr>
<tr class="separator:a9c4254a8e7637b08c0e946fbc49c0127"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6f47c4c957317a96730ab1912db596a"><td class="memItemLeft" align="right" valign="top"><a id="ab6f47c4c957317a96730ab1912db596a"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d25/structez_atomic_utils.htm#ab6f47c4c957317a96730ab1912db596a">Max</a> (volatile ezInt64 &amp;ref_iDest, ezInt64 value)</td></tr>
<tr class="memdesc:ab6f47c4c957317a96730ab1912db596a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs an atomic max operation on dest using value. <br /></td></tr>
<tr class="separator:ab6f47c4c957317a96730ab1912db596a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8fbeb8191b3c9f203aa4caaa539e9819"><td class="memItemLeft" align="right" valign="top"><a id="a8fbeb8191b3c9f203aa4caaa539e9819"></a>
static ezInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d25/structez_atomic_utils.htm#a8fbeb8191b3c9f203aa4caaa539e9819">Set</a> (volatile ezInt32 &amp;ref_iDest, ezInt32 value)</td></tr>
<tr class="memdesc:a8fbeb8191b3c9f203aa4caaa539e9819"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets dest to value as an atomic operation and returns the original value of dest. <br /></td></tr>
<tr class="separator:a8fbeb8191b3c9f203aa4caaa539e9819"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5445cb3e85597c0350b8444881762907"><td class="memItemLeft" align="right" valign="top"><a id="a5445cb3e85597c0350b8444881762907"></a>
static ezInt64&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d25/structez_atomic_utils.htm#a5445cb3e85597c0350b8444881762907">Set</a> (volatile ezInt64 &amp;ref_iDest, ezInt64 value)</td></tr>
<tr class="memdesc:a5445cb3e85597c0350b8444881762907"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets dest to value as an atomic operation and returns the original value of dest. <br /></td></tr>
<tr class="separator:a5445cb3e85597c0350b8444881762907"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abf41654c514ee5a904b733c31e101d7b"><td class="memItemLeft" align="right" valign="top"><a id="abf41654c514ee5a904b733c31e101d7b"></a>
static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d25/structez_atomic_utils.htm#abf41654c514ee5a904b733c31e101d7b">TestAndSet</a> (volatile ezInt32 &amp;ref_iDest, ezInt32 iExpected, ezInt32 value)</td></tr>
<tr class="memdesc:abf41654c514ee5a904b733c31e101d7b"><td class="mdescLeft">&#160;</td><td class="mdescRight">If <em>dest</em> is equal to <em>expected</em>, this function sets <em>dest</em> to <em>value</em> and returns true. Otherwise <em>dest</em> will not be modified and the function returns false. <br /></td></tr>
<tr class="separator:abf41654c514ee5a904b733c31e101d7b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a98cbf6cc9344e5177ec4a5b07ea7d29d"><td class="memItemLeft" align="right" valign="top"><a id="a98cbf6cc9344e5177ec4a5b07ea7d29d"></a>
static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d25/structez_atomic_utils.htm#a98cbf6cc9344e5177ec4a5b07ea7d29d">TestAndSet</a> (volatile ezInt64 &amp;ref_iDest, ezInt64 iExpected, ezInt64 value)</td></tr>
<tr class="memdesc:a98cbf6cc9344e5177ec4a5b07ea7d29d"><td class="mdescLeft">&#160;</td><td class="mdescRight">If <em>dest</em> is equal to <em>expected</em>, this function sets <em>dest</em> to <em>value</em> and returns true. Otherwise <em>dest</em> will not be modified and the function returns false. <br /></td></tr>
<tr class="separator:a98cbf6cc9344e5177ec4a5b07ea7d29d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a54fa75ce1652394fdc8ba6acd84834d1"><td class="memItemLeft" align="right" valign="top"><a id="a54fa75ce1652394fdc8ba6acd84834d1"></a>
static bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d25/structez_atomic_utils.htm#a54fa75ce1652394fdc8ba6acd84834d1">TestAndSet</a> (void **volatile pDest, void *pExpected, void *value)</td></tr>
<tr class="memdesc:a54fa75ce1652394fdc8ba6acd84834d1"><td class="mdescLeft">&#160;</td><td class="mdescRight">If <em>dest</em> is equal to <em>expected</em>, this function sets <em>dest</em> to <em>value</em> and returns true. Otherwise <em>dest</em> will not be modified and the function returns false. <br /></td></tr>
<tr class="separator:a54fa75ce1652394fdc8ba6acd84834d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba742593a6508c2b19a33b0769af18ac"><td class="memItemLeft" align="right" valign="top"><a id="aba742593a6508c2b19a33b0769af18ac"></a>
static ezInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d25/structez_atomic_utils.htm#aba742593a6508c2b19a33b0769af18ac">CompareAndSwap</a> (volatile ezInt32 &amp;ref_iDest, ezInt32 iExpected, ezInt32 value)</td></tr>
<tr class="memdesc:aba742593a6508c2b19a33b0769af18ac"><td class="mdescLeft">&#160;</td><td class="mdescRight">If <em>dest</em> is equal to <em>expected</em>, this function sets <em>dest</em> to <em>value</em>. Otherwise <em>dest</em> will not be modified. Always returns the value of <em>dest</em> before the modification. <br /></td></tr>
<tr class="separator:aba742593a6508c2b19a33b0769af18ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac8cb4e9df46d98666384de11347236dc"><td class="memItemLeft" align="right" valign="top"><a id="ac8cb4e9df46d98666384de11347236dc"></a>
static ezInt64&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d25/structez_atomic_utils.htm#ac8cb4e9df46d98666384de11347236dc">CompareAndSwap</a> (volatile ezInt64 &amp;ref_iDest, ezInt64 iExpected, ezInt64 value)</td></tr>
<tr class="memdesc:ac8cb4e9df46d98666384de11347236dc"><td class="mdescLeft">&#160;</td><td class="mdescRight">If <em>dest</em> is equal to <em>expected</em>, this function sets <em>dest</em> to <em>value</em>. Otherwise <em>dest</em> will not be modified. Always returns the value of <em>dest</em> before the modification. <br /></td></tr>
<tr class="separator:ac8cb4e9df46d98666384de11347236dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>This class provides functions to do atomic operations. </p>
<p>Atomic operations are generally faster than mutexes, and should therefore be preferred whenever possible. However only the operations in themselves are atomic, once you execute several of them in sequence, the sequence will not be atomic. Also atomic operations are a lot slower than non-atomic operations, thus you should not use them in code that does not need to be thread-safe. <a class="el" href="../../da/d01/classez_atomic_integer.htm" title="Integer class that can be manipulated in an atomic (i.e. thread-safe) fashion.">ezAtomicInteger</a> is built on top of <a class="el" href="../../d6/d25/structez_atomic_utils.htm" title="This class provides functions to do atomic operations.">ezAtomicUtils</a> and provides a more convenient interface to use atomic integer instructions. </p>
</div><hr/>The documentation for this struct was generated from the following files:<ul>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Threading/<a class="el" href="../../d0/d8e/_atomic_utils_8h_source.htm">AtomicUtils.h</a></li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Threading/Implementation/Posix/<a class="el" href="../../d0/d71/_atomic_utils__posix_8h_source.htm">AtomicUtils_posix.h</a></li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Threading/Implementation/Win/<a class="el" href="../../dc/d1d/_atomic_utils__win_8h_source.htm">AtomicUtils_win.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d6/d25/structez_atomic_utils.htm">ezAtomicUtils</a></li>
    <li class="footer">Generated on Sat Mar 25 2023 19:22:01 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
