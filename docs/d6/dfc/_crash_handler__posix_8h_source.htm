<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/System/Implementation/Posix/CrashHandler_posix.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 22.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d6/dfc/_crash_handler__posix_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">CrashHandler_posix.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#include &lt;Foundation/FoundationInternal.h&gt;</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;EZ_FOUNDATION_INTERNAL_HEADER</div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160; </div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;Foundation/Logging/Log.h&gt;</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;Foundation/System/CrashHandler.h&gt;</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;Foundation/System/StackTracer.h&gt;</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160; </div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;csignal&gt;</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;cxxabi.h&gt;</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;unistd.h&gt;</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160; </div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="keyword">static</span> <span class="keywordtype">void</span> ezCrashHandlerFunc() noexcept</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;{</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;  <span class="keywordflow">if</span> (ezCrashHandler::GetCrashHandler() != <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;  {</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;    ezCrashHandler::GetCrashHandler()-&gt;HandleCrash(<span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;  }</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160; </div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;  <span class="comment">// restore the original signal handler for the abort signal and raise one so the kernel can do a core dump</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;  std::signal(SIGABRT, SIG_DFL);</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;  std::raise(SIGABRT);</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;}</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160; </div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keyword">static</span> <span class="keywordtype">void</span> ezSignalHandler(<span class="keywordtype">int</span> signum)</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;{</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;  <a class="code" href="../../dc/d9e/classez_log.htm#a151496b9618cf53b4389d8f125ee9e2c">ezLog::Printf</a>(<span class="stringliteral">&quot;***Unhandled Signal:***\n&quot;</span>);</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;  <span class="keywordflow">switch</span> (signum)</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  {</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    <span class="keywordflow">case</span> SIGINT:</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;      <a class="code" href="../../dc/d9e/classez_log.htm#a151496b9618cf53b4389d8f125ee9e2c">ezLog::Printf</a>(<span class="stringliteral">&quot;Signal SIGINT: interrupt\n&quot;</span>);</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;    <span class="keywordflow">case</span> SIGILL:</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;      <a class="code" href="../../dc/d9e/classez_log.htm#a151496b9618cf53b4389d8f125ee9e2c">ezLog::Printf</a>(<span class="stringliteral">&quot;Signal SIGILL: illegal instruction - invalid function image\n&quot;</span>);</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    <span class="keywordflow">case</span> SIGFPE:</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;      <a class="code" href="../../dc/d9e/classez_log.htm#a151496b9618cf53b4389d8f125ee9e2c">ezLog::Printf</a>(<span class="stringliteral">&quot;Signal SIGFPE: floating point exception\n&quot;</span>);</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    <span class="keywordflow">case</span> SIGSEGV:</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;      <a class="code" href="../../dc/d9e/classez_log.htm#a151496b9618cf53b4389d8f125ee9e2c">ezLog::Printf</a>(<span class="stringliteral">&quot;Signal SIGSEGV: segment violation\n&quot;</span>);</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <span class="keywordflow">case</span> SIGTERM:</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;      <a class="code" href="../../dc/d9e/classez_log.htm#a151496b9618cf53b4389d8f125ee9e2c">ezLog::Printf</a>(<span class="stringliteral">&quot;Signal SIGTERM: Software termination signal from kill\n&quot;</span>);</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="keywordflow">case</span> SIGABRT:</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;      <a class="code" href="../../dc/d9e/classez_log.htm#a151496b9618cf53b4389d8f125ee9e2c">ezLog::Printf</a>(<span class="stringliteral">&quot;Signal SIGABRT: abnormal termination triggered by abort call\n&quot;</span>);</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    <span class="keywordflow">default</span>:</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;      <a class="code" href="../../dc/d9e/classez_log.htm#a151496b9618cf53b4389d8f125ee9e2c">ezLog::Printf</a>(<span class="stringliteral">&quot;Signal %i: unknown signal\n&quot;</span>, signal);</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;  }</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160; </div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  <span class="keywordflow">if</span> (ezCrashHandler::GetCrashHandler() != <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;  {</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;    ezCrashHandler::GetCrashHandler()-&gt;HandleCrash(<span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  }</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160; </div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;  <span class="comment">// forward the signal back to the OS so that it can write a core dump</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  std::signal(signum, SIG_DFL);</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;  kill(getpid(), signum);</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;}</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160; </div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="keywordtype">void</span> ezCrashHandler::SetCrashHandler(<a class="code" href="../../db/d82/classez_crash_handler.htm">ezCrashHandler</a>* pHandler)</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;{</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  s_pActiveHandler = pHandler;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160; </div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;  <span class="keywordflow">if</span> (s_pActiveHandler != <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;  {</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    std::signal(SIGINT, ezSignalHandler);</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    std::signal(SIGILL, ezSignalHandler);</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    std::signal(SIGFPE, ezSignalHandler);</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    std::signal(SIGSEGV, ezSignalHandler);</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    std::signal(SIGTERM, ezSignalHandler);</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    std::signal(SIGABRT, ezSignalHandler);</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    std::set_terminate(ezCrashHandlerFunc);</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;  }</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;  {</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    std::signal(SIGINT, <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    std::signal(SIGILL, <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    std::signal(SIGFPE, <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    std::signal(SIGSEGV, <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    std::signal(SIGTERM, <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    std::signal(SIGABRT, <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    std::set_terminate(<span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  }</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;}</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160; </div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="keywordtype">bool</span> ezCrashHandler_WriteMiniDump::WriteOwnProcessMiniDump(<span class="keywordtype">void</span>* pOsSpecificData)</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;{</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;}</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160; </div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;<span class="keywordtype">void</span> ezCrashHandler_WriteMiniDump::PrintStackTrace(<span class="keywordtype">void</span>* pOsSpecificData)</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;{</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;  <a class="code" href="../../dc/d9e/classez_log.htm#a151496b9618cf53b4389d8f125ee9e2c">ezLog::Printf</a>(<span class="stringliteral">&quot;***Unhandled Exception:***\n&quot;</span>);</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160; </div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;  <span class="comment">// ezLog::Printf exception type</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  <span class="keywordflow">if</span> (std::type_info* type = abi::__cxa_current_exception_type())</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;  {</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keywordflow">if</span> (<span class="keyword">const</span> <span class="keywordtype">char</span>* szName = type-&gt;name())</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;    {</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;      <span class="keywordtype">int</span> status = -1;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;      <span class="comment">// Try to print nice name</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;      <span class="keywordflow">if</span> (<span class="keywordtype">char</span>* szNiceName = abi::__cxa_demangle(szName, 0, 0, &amp;status))</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        <a class="code" href="../../dc/d9e/classez_log.htm#a151496b9618cf53b4389d8f125ee9e2c">ezLog::Printf</a>(<span class="stringliteral">&quot;Exception: %s\n&quot;</span>, szNiceName);</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;      <span class="keywordflow">else</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        <a class="code" href="../../dc/d9e/classez_log.htm#a151496b9618cf53b4389d8f125ee9e2c">ezLog::Printf</a>(<span class="stringliteral">&quot;Exception: %s\n&quot;</span>, szName);</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;    }</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;  }</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160; </div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;  {</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <a class="code" href="../../dc/d9e/classez_log.htm#a151496b9618cf53b4389d8f125ee9e2c">ezLog::Printf</a>(<span class="stringliteral">&quot;\n\n***Stack Trace:***\n&quot;</span>);</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160; </div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="keywordtype">void</span>* pBuffer[64];</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;void*&gt;</a> tempTrace(pBuffer);</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;    <span class="keyword">const</span> ezUInt32 uiNumTraces = <a class="code" href="../../d3/d42/classez_stack_tracer.htm#a1e72556f123761463cdf6d0297a746a8">ezStackTracer::GetStackTrace</a>(tempTrace);</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160; </div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <a class="code" href="../../d3/d42/classez_stack_tracer.htm#a198faaf655ef637ce094c0dc3d282def">ezStackTracer::ResolveStackTrace</a>(tempTrace.GetSubArray(0, uiNumTraces), &amp;PrintHelper);</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;  }</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;}</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassez_stack_tracer_htm_a1e72556f123761463cdf6d0297a746a8"><div class="ttname"><a href="../../d3/d42/classez_stack_tracer.htm#a1e72556f123761463cdf6d0297a746a8">ezStackTracer::GetStackTrace</a></div><div class="ttdeci">static ezUInt32 GetStackTrace(ezArrayPtr&lt; void * &gt; &amp;trace, void *pContext=nullptr)</div><div class="ttdoc">Captures the current stack trace.</div><div class="ttdef"><b>Definition:</b> StackTracer_android.h:37</div></div>
<div class="ttc" id="aclassez_array_ptr_htm"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt; void * &gt;</a></div></div>
<div class="ttc" id="aclassez_log_htm_a151496b9618cf53b4389d8f125ee9e2c"><div class="ttname"><a href="../../dc/d9e/classez_log.htm#a151496b9618cf53b4389d8f125ee9e2c">ezLog::Printf</a></div><div class="ttdeci">static void Printf(const char *szFormat,...)</div><div class="ttdoc">Calls low-level OS functionality to print a string to the typical outputs. Forwards to Print.</div><div class="ttdef"><b>Definition:</b> Log.cpp:258</div></div>
<div class="ttc" id="aclassez_stack_tracer_htm_a198faaf655ef637ce094c0dc3d282def"><div class="ttname"><a href="../../d3/d42/classez_stack_tracer.htm#a198faaf655ef637ce094c0dc3d282def">ezStackTracer::ResolveStackTrace</a></div><div class="ttdeci">static void ResolveStackTrace(const ezArrayPtr&lt; void * &gt; &amp;trace, PrintFunc printFunc)</div><div class="ttdoc">Print a stack trace.</div><div class="ttdef"><b>Definition:</b> StackTracer_android.h:46</div></div>
<div class="ttc" id="aclassez_crash_handler_htm"><div class="ttname"><a href="../../db/d82/classez_crash_handler.htm">ezCrashHandler</a></div><div class="ttdoc">Helper class to manage the top level exception handler.</div><div class="ttdef"><b>Definition:</b> CrashHandler.h:20</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_755fdcfb6b850fe41cc906fd4ef666a8.htm">System</a></li><li class="navelem"><a class="el" href="../../dir_8580235f0f8f387a258dcf4b47a3ab70.htm">Implementation</a></li><li class="navelem"><a class="el" href="../../dir_a2012d26ec404754be871fd7b4ae5611.htm">Posix</a></li><li class="navelem"><b>CrashHandler_posix.h</b></li>
    <li class="footer">Generated on Fri Nov 18 2022 14:48:00 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
