<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: ezEnum&lt; Derived &gt; Struct Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 23.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d6/dd9/structez_enum.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="../../d8/d88/structez_enum-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ezEnum&lt; Derived &gt; Struct Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>A custom enum implementation that allows to define the underlying storage type to control its memory footprint.  
 <a href="../../d6/dd9/structez_enum.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../dd/dd8/_enum_8h_source.htm">Enum.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for ezEnum&lt; Derived &gt;:</div>
<div class="dyncontent">
<div class="center"><img src="../../db/d7b/structez_enum__inherit__graph.png" border="0" usemap="#ez_enum_3_01_derived_01_4_inherit__map" alt="Inheritance graph"/></div>
<map name="ez_enum_3_01_derived_01_4_inherit__map" id="ez_enum_3_01_derived_01_4_inherit__map">
<area shape="rect" title="A custom enum implementation that allows to define the underlying storage type to control its memory ..." alt="" coords="5,80,160,107"/>
<area shape="rect" title=" " alt="" coords="46,5,119,32"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:ab813301497fbf015e88d55a55b1feeb7"><td class="memItemLeft" align="right" valign="top"><a id="ab813301497fbf015e88d55a55b1feeb7"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>SelfType</b> = <a class="el" href="../../d6/dd9/structez_enum.htm">ezEnum</a>&lt; Derived &gt;</td></tr>
<tr class="separator:ab813301497fbf015e88d55a55b1feeb7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5062a9d9b4d439e7a0489461303f508a"><td class="memItemLeft" align="right" valign="top"><a id="a5062a9d9b4d439e7a0489461303f508a"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>StorageType</b> = typename Derived::StorageType</td></tr>
<tr class="separator:a5062a9d9b4d439e7a0489461303f508a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a87b8e6ff9151469f29cf1ed22ce26714"><td class="memItemLeft" align="right" valign="top"><a id="a87b8e6ff9151469f29cf1ed22ce26714"></a>
EZ_ALWAYS_INLINE&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/dd9/structez_enum.htm#a87b8e6ff9151469f29cf1ed22ce26714">ezEnum</a> ()</td></tr>
<tr class="memdesc:a87b8e6ff9151469f29cf1ed22ce26714"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor. <br /></td></tr>
<tr class="separator:a87b8e6ff9151469f29cf1ed22ce26714"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac062a5315fc1dfe37d7f5606ed4e0e9e"><td class="memItemLeft" align="right" valign="top"><a id="ac062a5315fc1dfe37d7f5606ed4e0e9e"></a>
EZ_ALWAYS_INLINE&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/dd9/structez_enum.htm#ac062a5315fc1dfe37d7f5606ed4e0e9e">ezEnum</a> (const <a class="el" href="../../d6/dd9/structez_enum.htm">SelfType</a> &amp;rh)</td></tr>
<tr class="memdesc:ac062a5315fc1dfe37d7f5606ed4e0e9e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy constructor. <br /></td></tr>
<tr class="separator:ac062a5315fc1dfe37d7f5606ed4e0e9e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6e171a38e6772fcdb397c77573e1518"><td class="memItemLeft" align="right" valign="top"><a id="ac6e171a38e6772fcdb397c77573e1518"></a>
EZ_ALWAYS_INLINE&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/dd9/structez_enum.htm#ac6e171a38e6772fcdb397c77573e1518">ezEnum</a> (typename Derived::Enum init)</td></tr>
<tr class="memdesc:ac6e171a38e6772fcdb397c77573e1518"><td class="mdescLeft">&#160;</td><td class="mdescRight">Construct from a C++ enum, and implicit conversion from enum type. <br /></td></tr>
<tr class="separator:ac6e171a38e6772fcdb397c77573e1518"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb4d4d4574d9b279b3a2030e1406da98"><td class="memItemLeft" align="right" valign="top"><a id="aeb4d4d4574d9b279b3a2030e1406da98"></a>
EZ_ALWAYS_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/dd9/structez_enum.htm#aeb4d4d4574d9b279b3a2030e1406da98">operator=</a> (const <a class="el" href="../../d6/dd9/structez_enum.htm">SelfType</a> &amp;rh)</td></tr>
<tr class="memdesc:aeb4d4d4574d9b279b3a2030e1406da98"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assignment operator. <br /></td></tr>
<tr class="separator:aeb4d4d4574d9b279b3a2030e1406da98"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9378ac64b89aeb4b6c8ce9f5ec5d8c5d"><td class="memItemLeft" align="right" valign="top"><a id="a9378ac64b89aeb4b6c8ce9f5ec5d8c5d"></a>
EZ_ALWAYS_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/dd9/structez_enum.htm#a9378ac64b89aeb4b6c8ce9f5ec5d8c5d">operator=</a> (const typename Derived::Enum value)</td></tr>
<tr class="memdesc:a9378ac64b89aeb4b6c8ce9f5ec5d8c5d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assignment operator. <br /></td></tr>
<tr class="separator:a9378ac64b89aeb4b6c8ce9f5ec5d8c5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac300aaee3655a97bce01d6be337904a3"><td class="memItemLeft" align="right" valign="top"><a id="ac300aaee3655a97bce01d6be337904a3"></a>
EZ_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/dd9/structez_enum.htm#ac300aaee3655a97bce01d6be337904a3">operator==</a> (const <a class="el" href="../../d6/dd9/structez_enum.htm">SelfType</a> &amp;rhs) const</td></tr>
<tr class="memdesc:ac300aaee3655a97bce01d6be337904a3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Comparison operators. <br /></td></tr>
<tr class="separator:ac300aaee3655a97bce01d6be337904a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac08cdea7d16824ee7be99ac925327f5"><td class="memItemLeft" align="right" valign="top"><a id="aac08cdea7d16824ee7be99ac925327f5"></a>
EZ_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator!=</b> (const <a class="el" href="../../d6/dd9/structez_enum.htm">SelfType</a> &amp;rhs) const</td></tr>
<tr class="separator:aac08cdea7d16824ee7be99ac925327f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed0a6f6a864b5ea91eb9066bddeddb92"><td class="memItemLeft" align="right" valign="top"><a id="aed0a6f6a864b5ea91eb9066bddeddb92"></a>
EZ_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&gt;</b> (const <a class="el" href="../../d6/dd9/structez_enum.htm">SelfType</a> &amp;rhs) const</td></tr>
<tr class="separator:aed0a6f6a864b5ea91eb9066bddeddb92"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab2a2e56c71ac7df34496dd452ff3007d"><td class="memItemLeft" align="right" valign="top"><a id="ab2a2e56c71ac7df34496dd452ff3007d"></a>
EZ_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&lt;</b> (const <a class="el" href="../../d6/dd9/structez_enum.htm">SelfType</a> &amp;rhs) const</td></tr>
<tr class="separator:ab2a2e56c71ac7df34496dd452ff3007d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b4719bff7c2f2421bef08a8f645de59"><td class="memItemLeft" align="right" valign="top"><a id="a7b4719bff7c2f2421bef08a8f645de59"></a>
EZ_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&gt;=</b> (const <a class="el" href="../../d6/dd9/structez_enum.htm">SelfType</a> &amp;rhs) const</td></tr>
<tr class="separator:a7b4719bff7c2f2421bef08a8f645de59"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1abd4c30062871689187dd96e99bb1e7"><td class="memItemLeft" align="right" valign="top"><a id="a1abd4c30062871689187dd96e99bb1e7"></a>
EZ_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&lt;=</b> (const <a class="el" href="../../d6/dd9/structez_enum.htm">SelfType</a> &amp;rhs) const</td></tr>
<tr class="separator:a1abd4c30062871689187dd96e99bb1e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af833da9b5f43fa4ce5a0674737697d3d"><td class="memItemLeft" align="right" valign="top"><a id="af833da9b5f43fa4ce5a0674737697d3d"></a>
EZ_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator==</b> (typename Derived::Enum value) const</td></tr>
<tr class="separator:af833da9b5f43fa4ce5a0674737697d3d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace5bba364bbe5badda40a269c21d9ae3"><td class="memItemLeft" align="right" valign="top"><a id="ace5bba364bbe5badda40a269c21d9ae3"></a>
EZ_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator!=</b> (typename Derived::Enum value) const</td></tr>
<tr class="separator:ace5bba364bbe5badda40a269c21d9ae3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9dddba048115561e450243139ad7ff3e"><td class="memItemLeft" align="right" valign="top"><a id="a9dddba048115561e450243139ad7ff3e"></a>
EZ_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&gt;</b> (typename Derived::Enum value) const</td></tr>
<tr class="separator:a9dddba048115561e450243139ad7ff3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a60153855fe2cf453712c5352cd09e6f5"><td class="memItemLeft" align="right" valign="top"><a id="a60153855fe2cf453712c5352cd09e6f5"></a>
EZ_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&lt;</b> (typename Derived::Enum value) const</td></tr>
<tr class="separator:a60153855fe2cf453712c5352cd09e6f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a101b78fe1a486a57cf60cf24aeee9e67"><td class="memItemLeft" align="right" valign="top"><a id="a101b78fe1a486a57cf60cf24aeee9e67"></a>
EZ_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&gt;=</b> (typename Derived::Enum value) const</td></tr>
<tr class="separator:a101b78fe1a486a57cf60cf24aeee9e67"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab072f2706e9342de994b8351b70a9c05"><td class="memItemLeft" align="right" valign="top"><a id="ab072f2706e9342de994b8351b70a9c05"></a>
EZ_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&lt;=</b> (typename Derived::Enum value) const</td></tr>
<tr class="separator:ab072f2706e9342de994b8351b70a9c05"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9186e7e02dc3d3eaff6a3dcf51befcf6"><td class="memItemLeft" align="right" valign="top"><a id="a9186e7e02dc3d3eaff6a3dcf51befcf6"></a>
EZ_ALWAYS_INLINE <a class="el" href="../../d6/dd9/structez_enum.htm">SelfType</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/dd9/structez_enum.htm#a9186e7e02dc3d3eaff6a3dcf51befcf6">operator|</a> (const <a class="el" href="../../d6/dd9/structez_enum.htm">SelfType</a> &amp;rhs) const</td></tr>
<tr class="memdesc:a9186e7e02dc3d3eaff6a3dcf51befcf6"><td class="mdescLeft">&#160;</td><td class="mdescRight">brief Bitwise operators <br /></td></tr>
<tr class="separator:a9186e7e02dc3d3eaff6a3dcf51befcf6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e570bf628933f7f94a3afa9a947bb80"><td class="memItemLeft" align="right" valign="top"><a id="a1e570bf628933f7f94a3afa9a947bb80"></a>
EZ_ALWAYS_INLINE <a class="el" href="../../d6/dd9/structez_enum.htm">SelfType</a>&#160;</td><td class="memItemRight" valign="bottom"><b>operator&amp;</b> (const <a class="el" href="../../d6/dd9/structez_enum.htm">SelfType</a> &amp;rhs) const</td></tr>
<tr class="separator:a1e570bf628933f7f94a3afa9a947bb80"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa864b9e1706cfb66718161186443e7ef"><td class="memItemLeft" align="right" valign="top"><a id="aa864b9e1706cfb66718161186443e7ef"></a>
EZ_ALWAYS_INLINE&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/dd9/structez_enum.htm#aa864b9e1706cfb66718161186443e7ef">operator typename Derived::Enum</a> () const</td></tr>
<tr class="memdesc:aa864b9e1706cfb66718161186443e7ef"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implicit conversion to enum type. <br /></td></tr>
<tr class="separator:aa864b9e1706cfb66718161186443e7ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7438b2c97eab52e031a6faeb4c5aa093"><td class="memItemLeft" align="right" valign="top"><a id="a7438b2c97eab52e031a6faeb4c5aa093"></a>
EZ_ALWAYS_INLINE StorageType&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/dd9/structez_enum.htm#a7438b2c97eab52e031a6faeb4c5aa093">GetValue</a> () const</td></tr>
<tr class="memdesc:a7438b2c97eab52e031a6faeb4c5aa093"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the enum value as an integer. <br /></td></tr>
<tr class="separator:a7438b2c97eab52e031a6faeb4c5aa093"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af1217b2038aa0920fc928414b6a3c3ba"><td class="memItemLeft" align="right" valign="top"><a id="af1217b2038aa0920fc928414b6a3c3ba"></a>
EZ_ALWAYS_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/dd9/structez_enum.htm#af1217b2038aa0920fc928414b6a3c3ba">SetValue</a> (StorageType value)</td></tr>
<tr class="memdesc:af1217b2038aa0920fc928414b6a3c3ba"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the enum value through an integer. <br /></td></tr>
<tr class="separator:af1217b2038aa0920fc928414b6a3c3ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename Derived&gt;<br />
struct ezEnum&lt; Derived &gt;</h3>

<p>A custom enum implementation that allows to define the underlying storage type to control its memory footprint. </p>
<p>Advantages over a simple C++ enum: 1) Storage type can be defined 2) Enum is default initialized automatically 3) Definition of the enum itself, the storage type and the default init value is in one place 4) It makes function definitions shorter, instead of: void function(ezExampleEnumBase::Enum value) you can write: void function(ezExampleEnum value) 5) In all other ways it works exactly like a C++ enum</p>
<p>Example:</p>
<p>struct ezExampleEnumBase { using StorageType = ezUInt8;</p>
<p>enum Enum { Value1 = 1, // normal value Value2 = 2, // normal value Value3 = 3, // normal value Default = Value1 // Default initialization value (required) }; }; using ezExampleEnum = ezEnum&lt;ezExampleEnumBase&gt;;</p>
<p>This defines an "ezExampleEnum" which is stored in an ezUInt8 and is default initialized with Value1 For more examples see the enum test. </p>
</div><hr/>The documentation for this struct was generated from the following file:<ul>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Types/<a class="el" href="../../dd/dd8/_enum_8h_source.htm">Enum.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d6/dd9/structez_enum.htm">ezEnum</a></li>
    <li class="footer">Generated on Sat Nov 11 2023 17:04:26 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
