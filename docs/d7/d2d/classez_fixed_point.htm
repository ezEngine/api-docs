<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: ezFixedPoint&lt; DecimalBits &gt; Class Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 21.10</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d7/d2d/classez_fixed_point.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="../../d0/d41/classez_fixed_point-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ezFixedPoint&lt; DecimalBits &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Implements fixed point arithmetic for fractional values.  
 <a href="../../d7/d2d/classez_fixed_point.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d8/d95/_fixed_point_8h_source.htm">FixedPoint.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a10766f7b04ca0851d27119bd7631c9ff"><td class="memItemLeft" align="right" valign="top"><a id="a10766f7b04ca0851d27119bd7631c9ff"></a>
EZ_ALWAYS_INLINE&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d2d/classez_fixed_point.htm#a10766f7b04ca0851d27119bd7631c9ff">ezFixedPoint</a> ()</td></tr>
<tr class="memdesc:a10766f7b04ca0851d27119bd7631c9ff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default constructor does not do any initialization. <br /></td></tr>
<tr class="separator:a10766f7b04ca0851d27119bd7631c9ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9cd9e3034bfe85226603cf8274d8a1c7"><td class="memItemLeft" align="right" valign="top"><a id="a9cd9e3034bfe85226603cf8274d8a1c7"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d2d/classez_fixed_point.htm#a9cd9e3034bfe85226603cf8274d8a1c7">ezFixedPoint</a> (ezInt32 IntVal)</td></tr>
<tr class="memdesc:a9cd9e3034bfe85226603cf8274d8a1c7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Construct from an integer. <br /></td></tr>
<tr class="separator:a9cd9e3034bfe85226603cf8274d8a1c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a646b232cf87e93e984f0ab595256ff2a"><td class="memItemLeft" align="right" valign="top"><a id="a646b232cf87e93e984f0ab595256ff2a"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d2d/classez_fixed_point.htm#a646b232cf87e93e984f0ab595256ff2a">ezFixedPoint</a> (float FloatVal)</td></tr>
<tr class="memdesc:a646b232cf87e93e984f0ab595256ff2a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Construct from a float. <br /></td></tr>
<tr class="separator:a646b232cf87e93e984f0ab595256ff2a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af11f188b3875efc6d599b2894047cf18"><td class="memItemLeft" align="right" valign="top"><a id="af11f188b3875efc6d599b2894047cf18"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d2d/classez_fixed_point.htm#af11f188b3875efc6d599b2894047cf18">ezFixedPoint</a> (double FloatVal)</td></tr>
<tr class="memdesc:af11f188b3875efc6d599b2894047cf18"><td class="mdescLeft">&#160;</td><td class="mdescRight">Construct from a double. <br /></td></tr>
<tr class="separator:af11f188b3875efc6d599b2894047cf18"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7568c56182966270a9f40c9a9e47e429"><td class="memItemLeft" align="right" valign="top"><a id="a7568c56182966270a9f40c9a9e47e429"></a>
const <a class="el" href="../../d7/d2d/classez_fixed_point.htm">ezFixedPoint</a>&lt; DecimalBits &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d2d/classez_fixed_point.htm#a7568c56182966270a9f40c9a9e47e429">operator=</a> (ezInt32 IntVal)</td></tr>
<tr class="memdesc:a7568c56182966270a9f40c9a9e47e429"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assignment from an integer. <br /></td></tr>
<tr class="separator:a7568c56182966270a9f40c9a9e47e429"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8838694a51e337f03ce0dc87c044665e"><td class="memItemLeft" align="right" valign="top"><a id="a8838694a51e337f03ce0dc87c044665e"></a>
const <a class="el" href="../../d7/d2d/classez_fixed_point.htm">ezFixedPoint</a>&lt; DecimalBits &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d2d/classez_fixed_point.htm#a8838694a51e337f03ce0dc87c044665e">operator=</a> (float FloatVal)</td></tr>
<tr class="memdesc:a8838694a51e337f03ce0dc87c044665e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assignment from a float. <br /></td></tr>
<tr class="separator:a8838694a51e337f03ce0dc87c044665e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae12995c0780f6e39eb29e6bbfcb8e4d1"><td class="memItemLeft" align="right" valign="top"><a id="ae12995c0780f6e39eb29e6bbfcb8e4d1"></a>
const <a class="el" href="../../d7/d2d/classez_fixed_point.htm">ezFixedPoint</a>&lt; DecimalBits &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d2d/classez_fixed_point.htm#ae12995c0780f6e39eb29e6bbfcb8e4d1">operator=</a> (double FloatVal)</td></tr>
<tr class="memdesc:ae12995c0780f6e39eb29e6bbfcb8e4d1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assignment from a double. <br /></td></tr>
<tr class="separator:ae12995c0780f6e39eb29e6bbfcb8e4d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2fe41c7fedbc6c252a5ab457a6428e4a"><td class="memItemLeft" align="right" valign="top"><a id="a2fe41c7fedbc6c252a5ab457a6428e4a"></a>
ezInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d2d/classez_fixed_point.htm#a2fe41c7fedbc6c252a5ab457a6428e4a">ToInt</a> () const</td></tr>
<tr class="memdesc:a2fe41c7fedbc6c252a5ab457a6428e4a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implicit conversion to int (the fractional part is dropped). <br /></td></tr>
<tr class="separator:a2fe41c7fedbc6c252a5ab457a6428e4a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae161199b394fe83875994afecad177c9"><td class="memItemLeft" align="right" valign="top"><a id="ae161199b394fe83875994afecad177c9"></a>
float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d2d/classez_fixed_point.htm#ae161199b394fe83875994afecad177c9">ToFloat</a> () const</td></tr>
<tr class="memdesc:ae161199b394fe83875994afecad177c9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implicit conversion to float. <br /></td></tr>
<tr class="separator:ae161199b394fe83875994afecad177c9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9666752cebab1492530797e7097431e7"><td class="memItemLeft" align="right" valign="top"><a id="a9666752cebab1492530797e7097431e7"></a>
double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d2d/classez_fixed_point.htm#a9666752cebab1492530797e7097431e7">ToDouble</a> () const</td></tr>
<tr class="memdesc:a9666752cebab1492530797e7097431e7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Implicit conversion to double. <br /></td></tr>
<tr class="separator:a9666752cebab1492530797e7097431e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9675730a48527ed4c17b41f936089f08"><td class="memItemLeft" align="right" valign="top"><a id="a9675730a48527ed4c17b41f936089f08"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d2d/classez_fixed_point.htm#a9675730a48527ed4c17b41f936089f08">operator==</a> (const <a class="el" href="../../d7/d2d/classez_fixed_point.htm">ezFixedPoint</a>&lt; DecimalBits &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:a9675730a48527ed4c17b41f936089f08"><td class="mdescLeft">&#160;</td><td class="mdescRight">'Equality' comparison. <br /></td></tr>
<tr class="separator:a9675730a48527ed4c17b41f936089f08"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4cf20500651c0efc83cc43bea366baf7"><td class="memItemLeft" align="right" valign="top"><a id="a4cf20500651c0efc83cc43bea366baf7"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d2d/classez_fixed_point.htm#a4cf20500651c0efc83cc43bea366baf7">operator!=</a> (const <a class="el" href="../../d7/d2d/classez_fixed_point.htm">ezFixedPoint</a>&lt; DecimalBits &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:a4cf20500651c0efc83cc43bea366baf7"><td class="mdescLeft">&#160;</td><td class="mdescRight">'Inequality' comparison. <br /></td></tr>
<tr class="separator:a4cf20500651c0efc83cc43bea366baf7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f5b7cef5c422b8d5b47fb9b756f16de"><td class="memItemLeft" align="right" valign="top"><a id="a3f5b7cef5c422b8d5b47fb9b756f16de"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d2d/classez_fixed_point.htm#a3f5b7cef5c422b8d5b47fb9b756f16de">operator&lt;</a> (const <a class="el" href="../../d7/d2d/classez_fixed_point.htm">ezFixedPoint</a>&lt; DecimalBits &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:a3f5b7cef5c422b8d5b47fb9b756f16de"><td class="mdescLeft">&#160;</td><td class="mdescRight">'Less than' comparison. <br /></td></tr>
<tr class="separator:a3f5b7cef5c422b8d5b47fb9b756f16de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ced557774681720bd30b9193dcbf2a0"><td class="memItemLeft" align="right" valign="top"><a id="a1ced557774681720bd30b9193dcbf2a0"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d2d/classez_fixed_point.htm#a1ced557774681720bd30b9193dcbf2a0">operator&gt;</a> (const <a class="el" href="../../d7/d2d/classez_fixed_point.htm">ezFixedPoint</a>&lt; DecimalBits &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:a1ced557774681720bd30b9193dcbf2a0"><td class="mdescLeft">&#160;</td><td class="mdescRight">'Greater than' comparison. <br /></td></tr>
<tr class="separator:a1ced557774681720bd30b9193dcbf2a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96572f1507513b09841d68c2ec509e4c"><td class="memItemLeft" align="right" valign="top"><a id="a96572f1507513b09841d68c2ec509e4c"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d2d/classez_fixed_point.htm#a96572f1507513b09841d68c2ec509e4c">operator&lt;=</a> (const <a class="el" href="../../d7/d2d/classez_fixed_point.htm">ezFixedPoint</a>&lt; DecimalBits &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:a96572f1507513b09841d68c2ec509e4c"><td class="mdescLeft">&#160;</td><td class="mdescRight">'Less than or equal' comparison. <br /></td></tr>
<tr class="separator:a96572f1507513b09841d68c2ec509e4c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77102fe7df580917cd51deb71d41835e"><td class="memItemLeft" align="right" valign="top"><a id="a77102fe7df580917cd51deb71d41835e"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d2d/classez_fixed_point.htm#a77102fe7df580917cd51deb71d41835e">operator&gt;=</a> (const <a class="el" href="../../d7/d2d/classez_fixed_point.htm">ezFixedPoint</a>&lt; DecimalBits &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:a77102fe7df580917cd51deb71d41835e"><td class="mdescLeft">&#160;</td><td class="mdescRight">'Greater than or equal' comparison. <br /></td></tr>
<tr class="separator:a77102fe7df580917cd51deb71d41835e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a91cf0fc4995323b60d77d129f4d2750f"><td class="memItemLeft" align="right" valign="top"><a id="a91cf0fc4995323b60d77d129f4d2750f"></a>
const <a class="el" href="../../d7/d2d/classez_fixed_point.htm">ezFixedPoint</a>&lt; DecimalBits &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>operator-</b> () const</td></tr>
<tr class="separator:a91cf0fc4995323b60d77d129f4d2750f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3bcfae936c24d3575f48de0ffe3b42d5"><td class="memItemLeft" align="right" valign="top"><a id="a3bcfae936c24d3575f48de0ffe3b42d5"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d2d/classez_fixed_point.htm#a3bcfae936c24d3575f48de0ffe3b42d5">operator+=</a> (const <a class="el" href="../../d7/d2d/classez_fixed_point.htm">ezFixedPoint</a>&lt; DecimalBits &gt; &amp;rhs)</td></tr>
<tr class="memdesc:a3bcfae936c24d3575f48de0ffe3b42d5"><td class="mdescLeft">&#160;</td><td class="mdescRight">+= operator <br /></td></tr>
<tr class="separator:a3bcfae936c24d3575f48de0ffe3b42d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa3b73f70f51191bcf9c7c0f7039672f2"><td class="memItemLeft" align="right" valign="top"><a id="aa3b73f70f51191bcf9c7c0f7039672f2"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d2d/classez_fixed_point.htm#aa3b73f70f51191bcf9c7c0f7039672f2">operator-=</a> (const <a class="el" href="../../d7/d2d/classez_fixed_point.htm">ezFixedPoint</a>&lt; DecimalBits &gt; &amp;rhs)</td></tr>
<tr class="memdesc:aa3b73f70f51191bcf9c7c0f7039672f2"><td class="mdescLeft">&#160;</td><td class="mdescRight">-= operator <br /></td></tr>
<tr class="separator:aa3b73f70f51191bcf9c7c0f7039672f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a38b1edcd9168b236dd6d3ac6df22710a"><td class="memItemLeft" align="right" valign="top"><a id="a38b1edcd9168b236dd6d3ac6df22710a"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d2d/classez_fixed_point.htm#a38b1edcd9168b236dd6d3ac6df22710a">operator*=</a> (const <a class="el" href="../../d7/d2d/classez_fixed_point.htm">ezFixedPoint</a>&lt; DecimalBits &gt; &amp;rhs)</td></tr>
<tr class="memdesc:a38b1edcd9168b236dd6d3ac6df22710a"><td class="mdescLeft">&#160;</td><td class="mdescRight">*= operator <br /></td></tr>
<tr class="separator:a38b1edcd9168b236dd6d3ac6df22710a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a545091c9c74410858c1070034390964b"><td class="memItemLeft" align="right" valign="top"><a id="a545091c9c74410858c1070034390964b"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d2d/classez_fixed_point.htm#a545091c9c74410858c1070034390964b">operator/=</a> (const <a class="el" href="../../d7/d2d/classez_fixed_point.htm">ezFixedPoint</a>&lt; DecimalBits &gt; &amp;rhs)</td></tr>
<tr class="memdesc:a545091c9c74410858c1070034390964b"><td class="mdescLeft">&#160;</td><td class="mdescRight">/= operator <br /></td></tr>
<tr class="separator:a545091c9c74410858c1070034390964b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb11f6b865b552b9f2354f39a468ef9e"><td class="memItemLeft" align="right" valign="top"><a id="abb11f6b865b552b9f2354f39a468ef9e"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d2d/classez_fixed_point.htm#abb11f6b865b552b9f2354f39a468ef9e">operator*=</a> (ezInt32 rhs)</td></tr>
<tr class="memdesc:abb11f6b865b552b9f2354f39a468ef9e"><td class="mdescLeft">&#160;</td><td class="mdescRight">*= operator with integers (more efficient) <br /></td></tr>
<tr class="separator:abb11f6b865b552b9f2354f39a468ef9e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a72809084d1c5fc4aa8327611e2f2ddce"><td class="memItemLeft" align="right" valign="top"><a id="a72809084d1c5fc4aa8327611e2f2ddce"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d2d/classez_fixed_point.htm#a72809084d1c5fc4aa8327611e2f2ddce">operator/=</a> (ezInt32 rhs)</td></tr>
<tr class="memdesc:a72809084d1c5fc4aa8327611e2f2ddce"><td class="mdescLeft">&#160;</td><td class="mdescRight">/= operator with integers (more efficient) <br /></td></tr>
<tr class="separator:a72809084d1c5fc4aa8327611e2f2ddce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea87fe63182c1597995e32b77f74a3c6"><td class="memItemLeft" align="right" valign="top"><a id="aea87fe63182c1597995e32b77f74a3c6"></a>
ezInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d2d/classez_fixed_point.htm#aea87fe63182c1597995e32b77f74a3c6">GetRawValue</a> () const</td></tr>
<tr class="memdesc:aea87fe63182c1597995e32b77f74a3c6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the underlying integer value. Mostly useful for serialization (or tests). <br /></td></tr>
<tr class="separator:aea87fe63182c1597995e32b77f74a3c6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abfac9cb508f2106f638bd7930c5ae5e4"><td class="memItemLeft" align="right" valign="top"><a id="abfac9cb508f2106f638bd7930c5ae5e4"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d2d/classez_fixed_point.htm#abfac9cb508f2106f638bd7930c5ae5e4">SetRawValue</a> (ezInt32 val)</td></tr>
<tr class="memdesc:abfac9cb508f2106f638bd7930c5ae5e4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the underlying integer value. Mostly useful for serialization (or tests). <br /></td></tr>
<tr class="separator:abfac9cb508f2106f638bd7930c5ae5e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;ezUInt8 DecimalBits&gt;<br />
class ezFixedPoint&lt; DecimalBits &gt;</h3>

<p>Implements fixed point arithmetic for fractional values. </p>
<p>Advantages over float and double are mostly that the computations are entirely integer-based and therefore have a predictable (i.e. deterministic) result, independent from floating point settings, SSE support and differences among CPUs. Additionally fixed point arithmetic should be quite fast, compare to traditional floating point arithmetic (not comparing it to SSE though). With the template argument 'DecimalBits' you can specify how many bits are used for the fractional part. I.e. a simple integer has zero DecimalBits. For a precision of about 1/1000 you need at least 10 DecimalBits (1 &lt;&lt; 10) == 1024. Conversion between integer and fixed point is very fast (a shift), in contrast to float/int conversion.</p>
<p>If you are using <a class="el" href="../../d7/d2d/classez_fixed_point.htm" title="Implements fixed point arithmetic for fractional values.">ezFixedPoint</a> to get guaranteed deterministic behavior, you should minimize the usage of <a class="el" href="../../d7/d2d/classez_fixed_point.htm" title="Implements fixed point arithmetic for fractional values.">ezFixedPoint</a> &lt;-&gt; float conversions. You can set <a class="el" href="../../d7/d2d/classez_fixed_point.htm" title="Implements fixed point arithmetic for fractional values.">ezFixedPoint</a> variables from float constants, but you should never put data into <a class="el" href="../../d7/d2d/classez_fixed_point.htm" title="Implements fixed point arithmetic for fractional values.">ezFixedPoint</a> variables that was computed using floating point arithmetic (even if the computations are simple and look harmless). Instead do all those computations with <a class="el" href="../../d7/d2d/classez_fixed_point.htm" title="Implements fixed point arithmetic for fractional values.">ezFixedPoint</a> variables. </p>
</div><hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Math/<a class="el" href="../../d4/dbc/_engine_2_foundation_2_math_2_declarations_8h_source.htm">Declarations.h</a></li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Math/<a class="el" href="../../d8/d95/_fixed_point_8h_source.htm">FixedPoint.h</a></li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Math/Implementation/<a class="el" href="../../d2/d2c/_fixed_point__inl_8h_source.htm">FixedPoint_inl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d7/d2d/classez_fixed_point.htm">ezFixedPoint</a></li>
    <li class="footer">Generated on Sun Oct 9 2022 14:45:03 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
