<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Strings/Implementation/AllStrings_inl.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 21.10</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d7/dec/_all_strings__inl_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">AllStrings_inl.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;Foundation/IO/Stream.h&gt;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;Foundation/Strings/String.h&gt;</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;Foundation/Strings/StringBuilder.h&gt;</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160; </div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="keyword">template</span> &lt;ezUInt16 Size&gt;</div>
<div class="line"><a name="l00008"></a><span class="lineno"><a class="line" href="../../d6/d43/structez_hybrid_string_base.htm#ae6028e687525c58aad7e8b1b9147e94f">    8</a></span>&#160;<a class="code" href="../../d6/d43/structez_hybrid_string_base.htm#a5171d9569cd4cb2689dd3a1b02829f8c">ezHybridStringBase&lt;Size&gt;::ezHybridStringBase</a>(<span class="keyword">const</span> <a class="code" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>&amp; rhs, <a class="code" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a>* pAllocator)</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;  : m_Data(pAllocator)</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;{</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;  *<span class="keyword">this</span> = rhs;</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;}</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160; </div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="keyword">template</span> &lt;ezUInt16 Size&gt;</div>
<div class="line"><a name="l00015"></a><span class="lineno"><a class="line" href="../../d6/d43/structez_hybrid_string_base.htm#a93ef47908565a3938eb9253b63f8408d">   15</a></span>&#160;<a class="code" href="../../d6/d43/structez_hybrid_string_base.htm#a5171d9569cd4cb2689dd3a1b02829f8c">ezHybridStringBase&lt;Size&gt;::ezHybridStringBase</a>(<a class="code" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>&amp;&amp; rhs, <a class="code" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a>* pAllocator)</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;  : m_Data(pAllocator)</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;{</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;  *<span class="keyword">this</span> = std::move(rhs);</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;}</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160; </div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">template</span> &lt;ezUInt16 Size, <span class="keyword">typename</span> A&gt;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;EZ_ALWAYS_INLINE <a class="code" href="../../d4/d53/structez_hybrid_string.htm">ezHybridString&lt;Size, A&gt;::ezHybridString</a>(<span class="keyword">const</span> <a class="code" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>&amp; rhs)</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;  : <a class="code" href="../../d6/d43/structez_hybrid_string_base.htm">ezHybridStringBase</a>&lt;Size&gt;(rhs, A::GetAllocator())</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;{</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;}</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">template</span> &lt;ezUInt16 Size, <span class="keyword">typename</span> A&gt;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;EZ_ALWAYS_INLINE <a class="code" href="../../d4/d53/structez_hybrid_string.htm">ezHybridString&lt;Size, A&gt;::ezHybridString</a>(<a class="code" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>&amp;&amp; rhs)</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;  : <a class="code" href="../../d6/d43/structez_hybrid_string_base.htm">ezHybridStringBase</a>&lt;Size&gt;(std::move(rhs), A::GetAllocator())</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;{</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;}</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160; </div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">template</span> &lt;ezUInt16 Size&gt;</div>
<div class="line"><a name="l00034"></a><span class="lineno"><a class="line" href="../../d6/d43/structez_hybrid_string_base.htm#a3c0ddca8b52667378bb4aa181ba27e8c">   34</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d6/d43/structez_hybrid_string_base.htm#a18183bd86269e0bb7124f5dd4f27b2e5">ezHybridStringBase&lt;Size&gt;::operator=</a>(<span class="keyword">const</span> <a class="code" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>&amp; rhs)</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;{</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;  m_uiCharacterCount = rhs.m_uiCharacterCount;</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;  m_Data = rhs.m_Data;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;}</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160; </div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">template</span> &lt;ezUInt16 Size&gt;</div>
<div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="../../d6/d43/structez_hybrid_string_base.htm#a397d42cc575aff87ad3184a73c3cdbd1">   41</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d6/d43/structez_hybrid_string_base.htm#a18183bd86269e0bb7124f5dd4f27b2e5">ezHybridStringBase&lt;Size&gt;::operator=</a>(<a class="code" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>&amp;&amp; rhs)</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;{</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  m_uiCharacterCount = rhs.m_uiCharacterCount;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  m_Data = std::move(rhs.m_Data);</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;}</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160; </div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keyword">template</span> &lt;ezUInt16 Size, <span class="keyword">typename</span> A&gt;</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d4/d53/structez_hybrid_string.htm">ezHybridString&lt;Size, A&gt;::operator=</a>(<span class="keyword">const</span> <a class="code" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>&amp; rhs)</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;{</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;  <a class="code" href="../../d6/d43/structez_hybrid_string_base.htm#a18183bd86269e0bb7124f5dd4f27b2e5">ezHybridStringBase&lt;Size&gt;::operator=</a>(rhs);</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;}</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160; </div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="keyword">template</span> &lt;ezUInt16 Size, <span class="keyword">typename</span> A&gt;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d4/d53/structez_hybrid_string.htm">ezHybridString&lt;Size, A&gt;::operator=</a>(<a class="code" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>&amp;&amp; rhs)</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;{</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;  <a class="code" href="../../d6/d43/structez_hybrid_string_base.htm#a18183bd86269e0bb7124f5dd4f27b2e5">ezHybridStringBase&lt;Size&gt;::operator=</a>(std::move(rhs));</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;}</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160; </div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="keyword">template</span> &lt;ezUInt16 Size&gt;</div>
<div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="../../d6/d43/structez_hybrid_string_base.htm#ae6ed257766f300943d9707f716837c76">   60</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d6/d43/structez_hybrid_string_base.htm#ae6ed257766f300943d9707f716837c76">ezHybridStringBase&lt;Size&gt;::ReadAll</a>(<a class="code" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a>&amp; Stream)</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;{</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;  <a class="code" href="../../de/dce/classez_hashed_string.htm#afabe790c06d98a79e97f295ac043aaaf">Clear</a>();</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160; </div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  <a class="code" href="../../d8/deb/classez_hybrid_array.htm">ezHybridArray&lt;ezUInt8, 1024 * 4&gt;</a> Bytes(m_Data.GetAllocator());</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;  ezUInt8 Temp[1024];</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160; </div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;  <span class="keywordflow">while</span> (<span class="keyword">true</span>)</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;  {</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="keyword">const</span> ezUInt32 uiRead = (ezUInt32)Stream.<a class="code" href="../../d2/d19/classez_stream_reader.htm#a9b8ce20de04610d28b4118ff23b42020">ReadBytes</a>(Temp, 1024);</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160; </div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    <span class="keywordflow">if</span> (uiRead == 0)</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160; </div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    Bytes.<a class="code" href="../../dc/d59/classez_array_base.htm#ac6223c492c021ef85253fb486dfd6434">PushBackRange</a>(<a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;ezUInt8&gt;</a>(Temp, uiRead));</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;  }</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160; </div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;  Bytes.<a class="code" href="../../dc/d59/classez_array_base.htm#abc514bdf8b2de7b5b220ffdbd862e830">PushBack</a>(<span class="charliteral">&#39;\0&#39;</span>);</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160; </div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  *<span class="keyword">this</span> = (<span class="keyword">const</span> <span class="keywordtype">char</span>*)&amp;Bytes[0];</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;}</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassez_array_base_htm_abc514bdf8b2de7b5b220ffdbd862e830"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#abc514bdf8b2de7b5b220ffdbd862e830">ezArrayBase&lt; T, ezDynamicArrayBase&lt; T &gt; &gt;::PushBack</a></div><div class="ttdeci">void PushBack(const T &amp;value)</div><div class="ttdoc">Pushes value at the end of the array.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:321</div></div>
<div class="ttc" id="aclassez_stream_reader_htm"><div class="ttname"><a href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a></div><div class="ttdoc">Interface for binary in (read) streams.</div><div class="ttdef"><b>Definition:</b> Stream.h:20</div></div>
<div class="ttc" id="aclassez_array_ptr_htm"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt; ezUInt8 &gt;</a></div></div>
<div class="ttc" id="astructez_hybrid_string_base_htm_a18183bd86269e0bb7124f5dd4f27b2e5"><div class="ttname"><a href="../../d6/d43/structez_hybrid_string_base.htm#a18183bd86269e0bb7124f5dd4f27b2e5">ezHybridStringBase::operator=</a></div><div class="ttdeci">void operator=(const ezHybridStringBase &amp;rhs)</div><div class="ttdoc">Copies the data from rhs.</div><div class="ttdef"><b>Definition:</b> String_inl.h:110</div></div>
<div class="ttc" id="aclassez_hashed_string_htm_afabe790c06d98a79e97f295ac043aaaf"><div class="ttname"><a href="../../de/dce/classez_hashed_string.htm#afabe790c06d98a79e97f295ac043aaaf">ezHashedString::Clear</a></div><div class="ttdeci">void Clear()</div><div class="ttdoc">Resets the string to the empty string.</div><div class="ttdef"><b>Definition:</b> HashedString.cpp:126</div></div>
<div class="ttc" id="astructez_hybrid_string_htm"><div class="ttname"><a href="../../d4/d53/structez_hybrid_string.htm">ezHybridString</a></div><div class="ttdef"><b>Definition:</b> Stream.h:15</div></div>
<div class="ttc" id="aclassez_stream_reader_htm_a9b8ce20de04610d28b4118ff23b42020"><div class="ttname"><a href="../../d2/d19/classez_stream_reader.htm#a9b8ce20de04610d28b4118ff23b42020">ezStreamReader::ReadBytes</a></div><div class="ttdeci">virtual ezUInt64 ReadBytes(void *pReadBuffer, ezUInt64 uiBytesToRead)=0</div><div class="ttdoc">Reads a raw number of bytes into the read buffer, this is the only method which has to be implemented...</div></div>
<div class="ttc" id="aclassez_allocator_base_htm"><div class="ttname"><a href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a></div><div class="ttdoc">Base class for all memory allocators.</div><div class="ttdef"><b>Definition:</b> AllocatorBase.h:22</div></div>
<div class="ttc" id="aclassez_array_base_htm_ac6223c492c021ef85253fb486dfd6434"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#ac6223c492c021ef85253fb486dfd6434">ezArrayBase&lt; T, ezDynamicArrayBase&lt; T &gt; &gt;::PushBackRange</a></div><div class="ttdeci">void PushBackRange(const ezArrayPtr&lt; const T &gt; &amp;range)</div><div class="ttdoc">Pushes all elements in range at the end of the array. Increases the capacity if necessary.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:357</div></div>
<div class="ttc" id="astructez_hybrid_string_base_htm"><div class="ttname"><a href="../../d6/d43/structez_hybrid_string_base.htm">ezHybridStringBase</a></div><div class="ttdoc">A string class for storing and passing around strings.</div><div class="ttdef"><b>Definition:</b> String.h:27</div></div>
<div class="ttc" id="astructez_hybrid_string_base_htm_a5171d9569cd4cb2689dd3a1b02829f8c"><div class="ttname"><a href="../../d6/d43/structez_hybrid_string_base.htm#a5171d9569cd4cb2689dd3a1b02829f8c">ezHybridStringBase::ezHybridStringBase</a></div><div class="ttdeci">ezHybridStringBase(ezAllocatorBase *pAllocator)</div><div class="ttdoc">Creates an empty string.</div><div class="ttdef"><b>Definition:</b> String_inl.h:4</div></div>
<div class="ttc" id="aclassez_hybrid_array_htm"><div class="ttname"><a href="../../d8/deb/classez_hybrid_array.htm">ezHybridArray</a></div><div class="ttdoc">A hybrid array uses in-place storage to handle the first few elements without any allocation....</div><div class="ttdef"><b>Definition:</b> HybridArray.h:11</div></div>
<div class="ttc" id="aclassez_string_builder_htm"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></div><div class="ttdoc">ezStringBuilder is a class that is meant for creating and modifying strings.</div><div class="ttdef"><b>Definition:</b> StringBuilder.h:34</div></div>
<div class="ttc" id="astructez_hybrid_string_base_htm_ae6ed257766f300943d9707f716837c76"><div class="ttname"><a href="../../d6/d43/structez_hybrid_string_base.htm#ae6ed257766f300943d9707f716837c76">ezHybridStringBase::ReadAll</a></div><div class="ttdeci">void ReadAll(ezStreamReader &amp;Stream)</div><div class="ttdoc">Replaces the current string with the content from the stream. Reads the stream to its end.</div><div class="ttdef"><b>Definition:</b> AllStrings_inl.h:60</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_b52479c911fe9a42767226b3387b3a02.htm">Strings</a></li><li class="navelem"><a class="el" href="../../dir_067384bf2c73f8a8078edb859c0ba426.htm">Implementation</a></li><li class="navelem"><b>AllStrings_inl.h</b></li>
    <li class="footer">Generated on Sun Oct 9 2022 14:44:55 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
