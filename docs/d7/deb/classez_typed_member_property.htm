<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: ezTypedMemberProperty&lt; Type &gt; Class Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 22.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d7/deb/classez_typed_member_property.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="../../d9/da1/classez_typed_member_property-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ezTypedMemberProperty&lt; Type &gt; Class Template Reference<span class="mlabels"><span class="mlabel">abstract</span></span></div>  </div>
</div><!--header-->
<div class="contents">

<p>The base class for all typed member properties. I.e. once the type of a property is determined, it can be cast to the proper version of this.  
 <a href="../../d7/deb/classez_typed_member_property.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d7/d7c/_member_property_8h_source.htm">MemberProperty.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for ezTypedMemberProperty&lt; Type &gt;:</div>
<div class="dyncontent">
<div class="center"><img src="../../d0/d9b/classez_typed_member_property__inherit__graph.png" border="0" usemap="#ez_typed_member_property_3_01_type_01_4_inherit__map" alt="Inheritance graph"/></div>
<map name="ez_typed_member_property_3_01_type_01_4_inherit__map" id="ez_typed_member_property_3_01_type_01_4_inherit__map">
<area shape="rect" title="The base class for all typed member properties. I.e. once the type of a property is determined,..." alt="" coords="17,155,201,196"/>
<area shape="rect" href="../../d2/d85/classez_member_property.htm" title="[internal] An implementation of ezTypedMemberProperty that accesses the property data directly." alt="" coords="5,244,212,271"/>
<area shape="rect" href="../../da/d67/classez_abstract_member_property.htm" title="This is the base class for all properties that are members of a class. It provides more information a..." alt="" coords="9,80,209,107"/>
<area shape="rect" href="../../d6/d81/classez_abstract_property.htm" title="This is the base interface for all properties in the reflection system. It provides enough informatio..." alt="" coords="35,5,182,32"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a1a0cf13aafbc8cf79571914697b035e7"><td class="memItemLeft" align="right" valign="top"><a id="a1a0cf13aafbc8cf79571914697b035e7"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/deb/classez_typed_member_property.htm#a1a0cf13aafbc8cf79571914697b035e7">ezTypedMemberProperty</a> (const char *szPropertyName)</td></tr>
<tr class="memdesc:a1a0cf13aafbc8cf79571914697b035e7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Passes the property name through to <a class="el" href="../../da/d67/classez_abstract_member_property.htm" title="This is the base class for all properties that are members of a class. It provides more information a...">ezAbstractMemberProperty</a>. <br /></td></tr>
<tr class="separator:a1a0cf13aafbc8cf79571914697b035e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a051d3cbbe4be5cd1943fe9429f9d7a55"><td class="memItemLeft" align="right" valign="top"><a id="a051d3cbbe4be5cd1943fe9429f9d7a55"></a>
virtual const <a class="el" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/deb/classez_typed_member_property.htm#a051d3cbbe4be5cd1943fe9429f9d7a55">GetSpecificType</a> () const override</td></tr>
<tr class="memdesc:a051d3cbbe4be5cd1943fe9429f9d7a55"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the actual type of the property. You can then compare that with known types, eg. compare it to ezGetStaticRTTI&lt;int&gt;() to see whether this is an int property. <br /></td></tr>
<tr class="separator:a051d3cbbe4be5cd1943fe9429f9d7a55"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af0f1c42b9313c34917eb828ffbd2f811"><td class="memItemLeft" align="right" valign="top"><a id="af0f1c42b9313c34917eb828ffbd2f811"></a>
virtual Type&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/deb/classez_typed_member_property.htm#af0f1c42b9313c34917eb828ffbd2f811">GetValue</a> (const void *pInstance) const =0</td></tr>
<tr class="memdesc:af0f1c42b9313c34917eb828ffbd2f811"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the value of the property. Pass the instance pointer to the surrounding class along. <br /></td></tr>
<tr class="separator:af0f1c42b9313c34917eb828ffbd2f811"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4b3863076feb7d2279686e4f9400158a"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/deb/classez_typed_member_property.htm#a4b3863076feb7d2279686e4f9400158a">SetValue</a> (void *pInstance, Type value)=0</td></tr>
<tr class="memdesc:a4b3863076feb7d2279686e4f9400158a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Modifies the value of the property. Pass the instance pointer to the surrounding class along.  <a href="../../d7/deb/classez_typed_member_property.htm#a4b3863076feb7d2279686e4f9400158a">More...</a><br /></td></tr>
<tr class="separator:a4b3863076feb7d2279686e4f9400158a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a25f90a405eb63da850b8e5d5e6ac21f5"><td class="memItemLeft" align="right" valign="top"><a id="a25f90a405eb63da850b8e5d5e6ac21f5"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/deb/classez_typed_member_property.htm#a25f90a405eb63da850b8e5d5e6ac21f5">GetValuePtr</a> (const void *pInstance, void *pObject) const override</td></tr>
<tr class="memdesc:a25f90a405eb63da850b8e5d5e6ac21f5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes the value of this property in pInstance to pObject. pObject needs to point to an instance of this property's type. <br /></td></tr>
<tr class="separator:a25f90a405eb63da850b8e5d5e6ac21f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f6f5d994784ac359e91666fcdba3c88"><td class="memItemLeft" align="right" valign="top"><a id="a0f6f5d994784ac359e91666fcdba3c88"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/deb/classez_typed_member_property.htm#a0f6f5d994784ac359e91666fcdba3c88">SetValuePtr</a> (void *pInstance, const void *pObject) override</td></tr>
<tr class="memdesc:a0f6f5d994784ac359e91666fcdba3c88"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the value of pObject to the property in pInstance. pObject needs to point to an instance of this property's type. <br /></td></tr>
<tr class="separator:a0f6f5d994784ac359e91666fcdba3c88"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classez_abstract_member_property"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classez_abstract_member_property')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../da/d67/classez_abstract_member_property.htm">ezAbstractMemberProperty</a></td></tr>
<tr class="memitem:a61bc7051bc6b7b65192f513b7e820036 inherit pub_methods_classez_abstract_member_property"><td class="memItemLeft" align="right" valign="top"><a id="a61bc7051bc6b7b65192f513b7e820036"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/d67/classez_abstract_member_property.htm#a61bc7051bc6b7b65192f513b7e820036">ezAbstractMemberProperty</a> (const char *szPropertyName)</td></tr>
<tr class="memdesc:a61bc7051bc6b7b65192f513b7e820036 inherit pub_methods_classez_abstract_member_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Passes the property name through to <a class="el" href="../../d6/d81/classez_abstract_property.htm" title="This is the base interface for all properties in the reflection system. It provides enough informatio...">ezAbstractProperty</a>. <br /></td></tr>
<tr class="separator:a61bc7051bc6b7b65192f513b7e820036 inherit pub_methods_classez_abstract_member_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6799a8b691ee7f90fd8fbbd2e534a9db inherit pub_methods_classez_abstract_member_property"><td class="memItemLeft" align="right" valign="top"><a id="a6799a8b691ee7f90fd8fbbd2e534a9db"></a>
virtual <a class="el" href="../../d5/d49/structez_property_category.htm#a6900b9049e7887fa4b00d16d5eace8cf">ezPropertyCategory::Enum</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/d67/classez_abstract_member_property.htm#a6799a8b691ee7f90fd8fbbd2e534a9db">GetCategory</a> () const override</td></tr>
<tr class="memdesc:a6799a8b691ee7f90fd8fbbd2e534a9db inherit pub_methods_classez_abstract_member_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns <a class="el" href="../../d5/d49/structez_property_category.htm#a6900b9049e7887fa4b00d16d5eace8cfae8a16ea65b820b392e7480a87375f651" title="The property is a &#39;member property&#39;, i.e. it represents some accessible value. Cast to ezAbstractMemb...">ezPropertyCategory::Member</a>. <br /></td></tr>
<tr class="separator:a6799a8b691ee7f90fd8fbbd2e534a9db inherit pub_methods_classez_abstract_member_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae47ec5c08a707c6443e626e414f86a21 inherit pub_methods_classez_abstract_member_property"><td class="memItemLeft" align="right" valign="top">virtual void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/d67/classez_abstract_member_property.htm#ae47ec5c08a707c6443e626e414f86a21">GetPropertyPointer</a> (const void *pInstance) const =0</td></tr>
<tr class="memdesc:ae47ec5c08a707c6443e626e414f86a21 inherit pub_methods_classez_abstract_member_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a pointer to the property data or nullptr. If a valid pointer is returned, that pointer and the information from <a class="el" href="../../d6/d81/classez_abstract_property.htm#a1b635b773d133bea08d1ebca8d1a7792" title="Returns the type information of the constant property. Use this to cast this property to a specific v...">GetSpecificType()</a> can be used to step deeper into the type (if required).  <a href="../../da/d67/classez_abstract_member_property.htm#ae47ec5c08a707c6443e626e414f86a21">More...</a><br /></td></tr>
<tr class="separator:ae47ec5c08a707c6443e626e414f86a21 inherit pub_methods_classez_abstract_member_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classez_abstract_property"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classez_abstract_property')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../d6/d81/classez_abstract_property.htm">ezAbstractProperty</a></td></tr>
<tr class="memitem:a9f823cb935524098cc4c08e2351b43be inherit pub_methods_classez_abstract_property"><td class="memItemLeft" align="right" valign="top"><a id="a9f823cb935524098cc4c08e2351b43be"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d81/classez_abstract_property.htm#a9f823cb935524098cc4c08e2351b43be">ezAbstractProperty</a> (const char *szPropertyName)</td></tr>
<tr class="memdesc:a9f823cb935524098cc4c08e2351b43be inherit pub_methods_classez_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">The constructor must get the name of the property. The string must be a compile-time constant. <br /></td></tr>
<tr class="separator:a9f823cb935524098cc4c08e2351b43be inherit pub_methods_classez_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a978bb805adf38827ef6485801fb25341 inherit pub_methods_classez_abstract_property"><td class="memItemLeft" align="right" valign="top"><a id="a978bb805adf38827ef6485801fb25341"></a>
const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d81/classez_abstract_property.htm#a978bb805adf38827ef6485801fb25341">GetPropertyName</a> () const</td></tr>
<tr class="memdesc:a978bb805adf38827ef6485801fb25341 inherit pub_methods_classez_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the name of the property. <br /></td></tr>
<tr class="separator:a978bb805adf38827ef6485801fb25341 inherit pub_methods_classez_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0bc18186382496a51fc09c2eadaf9d34 inherit pub_methods_classez_abstract_property"><td class="memItemLeft" align="right" valign="top"><a id="a0bc18186382496a51fc09c2eadaf9d34"></a>
const <a class="el" href="../../d1/dec/structez_bitflags.htm">ezBitflags</a>&lt; <a class="el" href="../../d2/da3/structez_property_flags.htm">ezPropertyFlags</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d81/classez_abstract_property.htm#a0bc18186382496a51fc09c2eadaf9d34">GetFlags</a> () const</td></tr>
<tr class="memdesc:a0bc18186382496a51fc09c2eadaf9d34 inherit pub_methods_classez_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the flags of the property. <br /></td></tr>
<tr class="separator:a0bc18186382496a51fc09c2eadaf9d34 inherit pub_methods_classez_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c4938948f956e2fcdb2f40eae9104bc inherit pub_methods_classez_abstract_property"><td class="memItemLeft" align="right" valign="top"><a id="a8c4938948f956e2fcdb2f40eae9104bc"></a>
<a class="el" href="../../d6/d81/classez_abstract_property.htm">ezAbstractProperty</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d81/classez_abstract_property.htm#a8c4938948f956e2fcdb2f40eae9104bc">AddFlags</a> (<a class="el" href="../../d1/dec/structez_bitflags.htm">ezBitflags</a>&lt; <a class="el" href="../../d2/da3/structez_property_flags.htm">ezPropertyFlags</a> &gt; flags)</td></tr>
<tr class="memdesc:a8c4938948f956e2fcdb2f40eae9104bc inherit pub_methods_classez_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds flags to the property. Returns itself to allow to be called during initialization. <br /></td></tr>
<tr class="separator:a8c4938948f956e2fcdb2f40eae9104bc inherit pub_methods_classez_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a58f20a9beb3479b679f4241585a16bb8 inherit pub_methods_classez_abstract_property"><td class="memItemLeft" align="right" valign="top"><a id="a58f20a9beb3479b679f4241585a16bb8"></a>
<a class="el" href="../../d6/d81/classez_abstract_property.htm">ezAbstractProperty</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d81/classez_abstract_property.htm#a58f20a9beb3479b679f4241585a16bb8">AddAttributes</a> (<a class="el" href="../../d7/d48/classez_property_attribute.htm">ezPropertyAttribute</a> *pAttrib1, <a class="el" href="../../d7/d48/classez_property_attribute.htm">ezPropertyAttribute</a> *pAttrib2=nullptr, <a class="el" href="../../d7/d48/classez_property_attribute.htm">ezPropertyAttribute</a> *pAttrib3=nullptr, <a class="el" href="../../d7/d48/classez_property_attribute.htm">ezPropertyAttribute</a> *pAttrib4=nullptr, <a class="el" href="../../d7/d48/classez_property_attribute.htm">ezPropertyAttribute</a> *pAttrib5=nullptr, <a class="el" href="../../d7/d48/classez_property_attribute.htm">ezPropertyAttribute</a> *pAttrib6=nullptr)</td></tr>
<tr class="memdesc:a58f20a9beb3479b679f4241585a16bb8 inherit pub_methods_classez_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds attributes to the property. Returns itself to allow to be called during initialization. Allocate an attribute using standard 'new'. <br /></td></tr>
<tr class="separator:a58f20a9beb3479b679f4241585a16bb8 inherit pub_methods_classez_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa9e27b65ecbdd6eb9bfcbcca20714097 inherit pub_methods_classez_abstract_property"><td class="memItemLeft" align="right" valign="top"><a id="aa9e27b65ecbdd6eb9bfcbcca20714097"></a>
const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; <a class="el" href="../../d7/d48/classez_property_attribute.htm">ezPropertyAttribute</a> *const  &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d81/classez_abstract_property.htm#aa9e27b65ecbdd6eb9bfcbcca20714097">GetAttributes</a> () const</td></tr>
<tr class="memdesc:aa9e27b65ecbdd6eb9bfcbcca20714097 inherit pub_methods_classez_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the array of property attributes. <br /></td></tr>
<tr class="separator:aa9e27b65ecbdd6eb9bfcbcca20714097 inherit pub_methods_classez_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf854f28a9813d44b239d1d4a6f0765f inherit pub_methods_classez_abstract_property"><td class="memTemplParams" colspan="2"><a id="aaf854f28a9813d44b239d1d4a6f0765f"></a>
template&lt;typename Type &gt; </td></tr>
<tr class="memitem:aaf854f28a9813d44b239d1d4a6f0765f inherit pub_methods_classez_abstract_property"><td class="memTemplItemLeft" align="right" valign="top">const Type *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../d6/d81/classez_abstract_property.htm#aaf854f28a9813d44b239d1d4a6f0765f">GetAttributeByType</a> () const</td></tr>
<tr class="memdesc:aaf854f28a9813d44b239d1d4a6f0765f inherit pub_methods_classez_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the first attribute that derives from the given type, or nullptr if nothing is found. <br /></td></tr>
<tr class="separator:aaf854f28a9813d44b239d1d4a6f0765f inherit pub_methods_classez_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pro_attribs_classez_abstract_property"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classez_abstract_property')"><img src="../../closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="../../d6/d81/classez_abstract_property.htm">ezAbstractProperty</a></td></tr>
<tr class="memitem:a7bec6eca881e4d101c85a79252b3d071 inherit pro_attribs_classez_abstract_property"><td class="memItemLeft" align="right" valign="top"><a id="a7bec6eca881e4d101c85a79252b3d071"></a>
<a class="el" href="../../d1/dec/structez_bitflags.htm">ezBitflags</a>&lt; <a class="el" href="../../d2/da3/structez_property_flags.htm">ezPropertyFlags</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_Flags</b></td></tr>
<tr class="separator:a7bec6eca881e4d101c85a79252b3d071 inherit pro_attribs_classez_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae4922433e59479d4a2a35e3709defeb8 inherit pro_attribs_classez_abstract_property"><td class="memItemLeft" align="right" valign="top"><a id="ae4922433e59479d4a2a35e3709defeb8"></a>
const char *&#160;</td><td class="memItemRight" valign="bottom"><b>m_szPropertyName</b></td></tr>
<tr class="separator:ae4922433e59479d4a2a35e3709defeb8 inherit pro_attribs_classez_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a03e3728bd6753bfeaf3aeed60861548b inherit pro_attribs_classez_abstract_property"><td class="memItemLeft" align="right" valign="top"><a id="a03e3728bd6753bfeaf3aeed60861548b"></a>
<a class="el" href="../../d8/deb/classez_hybrid_array.htm">ezHybridArray</a>&lt; <a class="el" href="../../d7/d48/classez_property_attribute.htm">ezPropertyAttribute</a> *, 2, <a class="el" href="../../d5/d90/structez_static_allocator_wrapper.htm">ezStaticAllocatorWrapper</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_Attributes</b></td></tr>
<tr class="separator:a03e3728bd6753bfeaf3aeed60861548b inherit pro_attribs_classez_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename Type&gt;<br />
class ezTypedMemberProperty&lt; Type &gt;</h3>

<p>The base class for all typed member properties. I.e. once the type of a property is determined, it can be cast to the proper version of this. </p>
<p>For example, when you have a pointer to an <a class="el" href="../../da/d67/classez_abstract_member_property.htm" title="This is the base class for all properties that are members of a class. It provides more information a...">ezAbstractMemberProperty</a> and it returns that the property is of type 'int', you can cast the pointer to an pointer to ezTypedMemberProperty&lt;int&gt; which then allows you to access its values. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a4b3863076feb7d2279686e4f9400158a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4b3863076feb7d2279686e4f9400158a">&#9670;&nbsp;</a></span>SetValue()</h2>

<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Type &gt; </div>
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void <a class="el" href="../../d7/deb/classez_typed_member_property.htm">ezTypedMemberProperty</a>&lt; Type &gt;::SetValue </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>pInstance</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Type&#160;</td>
          <td class="paramname"><em>value</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">pure virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Modifies the value of the property. Pass the instance pointer to the surrounding class along. </p>
<dl class="section note"><dt>Note</dt><dd>Make sure the property is not read-only before calling this, otherwise an assert will fire. </dd></dl>

<p>Implemented in <a class="el" href="../../d2/d85/classez_member_property.htm#a2b6495f561ed67de542f9a3d49a7a4c3">ezMemberProperty&lt; Class, Type &gt;</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following file:<ul>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Reflection/Implementation/<a class="el" href="../../d7/d7c/_member_property_8h_source.htm">MemberProperty.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d7/deb/classez_typed_member_property.htm">ezTypedMemberProperty</a></li>
    <li class="footer">Generated on Fri Nov 18 2022 14:48:12 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
