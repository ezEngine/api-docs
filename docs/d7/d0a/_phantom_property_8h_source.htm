<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Tools/Libs/ToolsFoundation/Reflection/PhantomProperty.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 23.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d7/d0a/_phantom_property_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">PhantomProperty.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;Foundation/Reflection/Reflection.h&gt;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;ToolsFoundation/Reflection/ReflectedType.h&gt;</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160; </div>
<div class="line"><a name="l00006"></a><span class="lineno"><a class="line" href="../../db/dbc/classez_phantom_constant_property.htm">    6</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../db/dbc/classez_phantom_constant_property.htm">ezPhantomConstantProperty</a> : <span class="keyword">public</span> <a class="code" href="../../d8/d53/classez_abstract_constant_property.htm">ezAbstractConstantProperty</a></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;{</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;  <a class="code" href="../../db/dbc/classez_phantom_constant_property.htm">ezPhantomConstantProperty</a>(<span class="keyword">const</span> <a class="code" href="../../db/deb/structez_reflected_property_descriptor.htm">ezReflectedPropertyDescriptor</a>* pDesc);</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;  ~<a class="code" href="../../db/dbc/classez_phantom_constant_property.htm">ezPhantomConstantProperty</a>();</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160; </div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;  <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* <a class="code" href="../../db/dbc/classez_phantom_constant_property.htm#abfdf7f7f7d739eb1e668a2f6e5926749">GetSpecificType</a>() <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span>* <a class="code" href="../../db/dbc/classez_phantom_constant_property.htm#a14139041702236fe4f2d273d1a9bfeba">GetPropertyPointer</a>() <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00014"></a><span class="lineno"><a class="line" href="../../db/dbc/classez_phantom_constant_property.htm#aa5b8d7e109ff7255fe22bb3f8794c5f4">   14</a></span>&#160;  <span class="keyword">virtual</span> <a class="code" href="../../de/de6/classez_variant.htm">ezVariant</a> <a class="code" href="../../db/dbc/classez_phantom_constant_property.htm#aa5b8d7e109ff7255fe22bb3f8794c5f4">GetConstant</a>()<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> m_Value; }</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160; </div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;  <a class="code" href="../../de/de6/classez_variant.htm">ezVariant</a> m_Value;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;  <a class="code" href="../../d4/d53/structez_hybrid_string.htm">ezString</a> m_sPropertyNameStorage;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* m_pPropertyType;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;};</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160; </div>
<div class="line"><a name="l00022"></a><span class="lineno"><a class="line" href="../../d7/dcc/classez_phantom_member_property.htm">   22</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d7/dcc/classez_phantom_member_property.htm">ezPhantomMemberProperty</a> : <span class="keyword">public</span> <a class="code" href="../../da/d67/classez_abstract_member_property.htm">ezAbstractMemberProperty</a></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;{</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;  <a class="code" href="../../d7/dcc/classez_phantom_member_property.htm">ezPhantomMemberProperty</a>(<span class="keyword">const</span> <a class="code" href="../../db/deb/structez_reflected_property_descriptor.htm">ezReflectedPropertyDescriptor</a>* pDesc);</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;  ~<a class="code" href="../../d7/dcc/classez_phantom_member_property.htm">ezPhantomMemberProperty</a>();</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160; </div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* <a class="code" href="../../d7/dcc/classez_phantom_member_property.htm#a41951269e236ae2f0c4fc1252d2165f1">GetSpecificType</a>() <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00029"></a><span class="lineno"><a class="line" href="../../d7/dcc/classez_phantom_member_property.htm#aad54c52e132e1d0dbb30758accabd8ff">   29</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span>* <a class="code" href="../../d7/dcc/classez_phantom_member_property.htm#aad54c52e132e1d0dbb30758accabd8ff">GetPropertyPointer</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance)<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> <span class="keyword">nullptr</span>; }</div>
<div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="../../d7/dcc/classez_phantom_member_property.htm#aa963ea55913ce3c64c80e6064b670040">   30</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/dcc/classez_phantom_member_property.htm#aa963ea55913ce3c64c80e6064b670040">GetValuePtr</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance, <span class="keywordtype">void</span>* pObject)<span class="keyword"> const override </span>{}</div>
<div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="../../d7/dcc/classez_phantom_member_property.htm#a408424bec37cbd8d86e7398bc3b50591">   31</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../d7/dcc/classez_phantom_member_property.htm#a408424bec37cbd8d86e7398bc3b50591">SetValuePtr</a>(<span class="keywordtype">void</span>* pInstance, <span class="keyword">const</span> <span class="keywordtype">void</span>* pObject)<span class="keyword"> const override </span>{}</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160; </div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  <a class="code" href="../../d4/d53/structez_hybrid_string.htm">ezString</a> m_sPropertyNameStorage;</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* m_pPropertyType;</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;};</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160; </div>
<div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="../../d0/d33/classez_phantom_function_property.htm">   38</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d0/d33/classez_phantom_function_property.htm">ezPhantomFunctionProperty</a> : <span class="keyword">public</span> <a class="code" href="../../d3/d4c/classez_abstract_function_property.htm">ezAbstractFunctionProperty</a></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  <a class="code" href="../../d0/d33/classez_phantom_function_property.htm">ezPhantomFunctionProperty</a>(<a class="code" href="../../d0/d9f/structez_reflected_function_descriptor.htm">ezReflectedFunctionDescriptor</a>* pDesc);</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;  ~<a class="code" href="../../d0/d33/classez_phantom_function_property.htm">ezPhantomFunctionProperty</a>();</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160; </div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  <span class="keyword">virtual</span> <a class="code" href="../../d6/dbb/structez_function_type.htm#a13bed06180e1a399e5d28f38d33a3f36">ezFunctionType::Enum</a> <a class="code" href="../../d0/d33/classez_phantom_function_property.htm#ac12d56baf7014b2f824ed44a64e7ee35">GetFunctionType</a>() <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* <a class="code" href="../../d0/d33/classez_phantom_function_property.htm#a2712d960a3b7d79152e4a9f0bc8d0bc7">GetReturnType</a>() <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;  <span class="keyword">virtual</span> <a class="code" href="../../d1/dec/structez_bitflags.htm">ezBitflags&lt;ezPropertyFlags&gt;</a> <a class="code" href="../../d0/d33/classez_phantom_function_property.htm#a312b9bbb5bfe91167feb10f6aef972be">GetReturnFlags</a>() <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;  <span class="keyword">virtual</span> ezUInt32 <a class="code" href="../../d0/d33/classez_phantom_function_property.htm#a24bd9de6204418fb663e5a41b15671e7">GetArgumentCount</a>() <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;  <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* <a class="code" href="../../d0/d33/classez_phantom_function_property.htm#aeaa3aa49c613d0f6118cd9939c611acf">GetArgumentType</a>(ezUInt32 uiParamIndex) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;  <span class="keyword">virtual</span> <a class="code" href="../../d1/dec/structez_bitflags.htm">ezBitflags&lt;ezPropertyFlags&gt;</a> <a class="code" href="../../d0/d33/classez_phantom_function_property.htm#ade07f45b88fb211c22f46d7aeb900955">GetArgumentFlags</a>(ezUInt32 uiParamIndex) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../d0/d33/classez_phantom_function_property.htm#a3f1f3ae92c12d7f83824fe4ae44909be">Execute</a>(<span class="keywordtype">void</span>* pInstance, <a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;ezVariant&gt;</a> values, <a class="code" href="../../de/de6/classez_variant.htm">ezVariant</a>&amp; ref_returnValue) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160; </div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;  <a class="code" href="../../d4/d53/structez_hybrid_string.htm">ezString</a> m_sPropertyNameStorage;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;  <a class="code" href="../../d6/dd9/structez_enum.htm">ezEnum&lt;ezFunctionType&gt;</a> m_FunctionType;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  <a class="code" href="../../d0/d56/structez_function_argument_descriptor.htm">ezFunctionArgumentDescriptor</a> m_ReturnValue;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;  <a class="code" href="../../d2/d4f/classez_dynamic_array.htm">ezDynamicArray&lt;ezFunctionArgumentDescriptor&gt;</a> m_Arguments;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;};</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160; </div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160; </div>
<div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="../../db/d21/classez_phantom_array_property.htm">   60</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../db/d21/classez_phantom_array_property.htm">ezPhantomArrayProperty</a> : <span class="keyword">public</span> <a class="code" href="../../dc/dfb/classez_abstract_array_property.htm">ezAbstractArrayProperty</a></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;{</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  <a class="code" href="../../db/d21/classez_phantom_array_property.htm">ezPhantomArrayProperty</a>(<span class="keyword">const</span> <a class="code" href="../../db/deb/structez_reflected_property_descriptor.htm">ezReflectedPropertyDescriptor</a>* pDesc);</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  ~<a class="code" href="../../db/d21/classez_phantom_array_property.htm">ezPhantomArrayProperty</a>();</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160; </div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;  <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* <a class="code" href="../../db/d21/classez_phantom_array_property.htm#a07e00561f30f95093b8bbf336990d9b1">GetSpecificType</a>() <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="../../db/d21/classez_phantom_array_property.htm#a39ae76656a88510040f00e2c3f38e8e5">   67</a></span>&#160;  <span class="keyword">virtual</span> ezUInt32 <a class="code" href="../../db/d21/classez_phantom_array_property.htm#a39ae76656a88510040f00e2c3f38e8e5">GetCount</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance)<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> 0; }</div>
<div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="../../db/d21/classez_phantom_array_property.htm#ac3120d207c7fe72e347868f4c6e61049">   68</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../db/d21/classez_phantom_array_property.htm#ac3120d207c7fe72e347868f4c6e61049">GetValue</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance, ezUInt32 uiIndex, <span class="keywordtype">void</span>* pObject)<span class="keyword"> const override </span>{}</div>
<div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="../../db/d21/classez_phantom_array_property.htm#a7dce5a645a4319bc5a7ef7f3d1e3ae47">   69</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../db/d21/classez_phantom_array_property.htm#a7dce5a645a4319bc5a7ef7f3d1e3ae47">SetValue</a>(<span class="keywordtype">void</span>* pInstance, ezUInt32 uiIndex, <span class="keyword">const</span> <span class="keywordtype">void</span>* pObject)<span class="keyword"> const override </span>{}</div>
<div class="line"><a name="l00070"></a><span class="lineno"><a class="line" href="../../db/d21/classez_phantom_array_property.htm#a2968e2c36f0e130551a6018825fc34bf">   70</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../db/d21/classez_phantom_array_property.htm#a2968e2c36f0e130551a6018825fc34bf">Insert</a>(<span class="keywordtype">void</span>* pInstance, ezUInt32 uiIndex, <span class="keyword">const</span> <span class="keywordtype">void</span>* pObject)<span class="keyword"> const override </span>{}</div>
<div class="line"><a name="l00071"></a><span class="lineno"><a class="line" href="../../db/d21/classez_phantom_array_property.htm#ad20b8b6c5834efa15f5a3071ec7b3a61">   71</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../db/d21/classez_phantom_array_property.htm#ad20b8b6c5834efa15f5a3071ec7b3a61">Remove</a>(<span class="keywordtype">void</span>* pInstance, ezUInt32 uiIndex)<span class="keyword"> const override </span>{}</div>
<div class="line"><a name="l00072"></a><span class="lineno"><a class="line" href="../../db/d21/classez_phantom_array_property.htm#a457c381596a562ce2744a9c4f23a27b9">   72</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../db/d21/classez_phantom_array_property.htm#a457c381596a562ce2744a9c4f23a27b9">Clear</a>(<span class="keywordtype">void</span>* pInstance)<span class="keyword"> const override </span>{}</div>
<div class="line"><a name="l00073"></a><span class="lineno"><a class="line" href="../../db/d21/classez_phantom_array_property.htm#ad2e1e22c6f44a73e6ff7a9325405bc6e">   73</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../db/d21/classez_phantom_array_property.htm#ad2e1e22c6f44a73e6ff7a9325405bc6e">SetCount</a>(<span class="keywordtype">void</span>* pInstance, ezUInt32 uiCount)<span class="keyword"> const override </span>{}</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160; </div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160; </div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;  <a class="code" href="../../d4/d53/structez_hybrid_string.htm">ezString</a> m_sPropertyNameStorage;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* m_pPropertyType;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;};</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160; </div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160; </div>
<div class="line"><a name="l00082"></a><span class="lineno"><a class="line" href="../../d4/da1/classez_phantom_set_property.htm">   82</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d4/da1/classez_phantom_set_property.htm">ezPhantomSetProperty</a> : <span class="keyword">public</span> <a class="code" href="../../d9/dc6/classez_abstract_set_property.htm">ezAbstractSetProperty</a></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;{</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  <a class="code" href="../../d4/da1/classez_phantom_set_property.htm">ezPhantomSetProperty</a>(<span class="keyword">const</span> <a class="code" href="../../db/deb/structez_reflected_property_descriptor.htm">ezReflectedPropertyDescriptor</a>* pDesc);</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;  ~<a class="code" href="../../d4/da1/classez_phantom_set_property.htm">ezPhantomSetProperty</a>();</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160; </div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;  <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* <a class="code" href="../../d4/da1/classez_phantom_set_property.htm#a9d05f5eb7c620a3be254e582e9e87154">GetSpecificType</a>() <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00089"></a><span class="lineno"><a class="line" href="../../d4/da1/classez_phantom_set_property.htm#accadf2738eb1108b75ad35ef4f9b56a4">   89</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="../../d4/da1/classez_phantom_set_property.htm#accadf2738eb1108b75ad35ef4f9b56a4">IsEmpty</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance)<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> <span class="keyword">true</span>; }</div>
<div class="line"><a name="l00090"></a><span class="lineno"><a class="line" href="../../d4/da1/classez_phantom_set_property.htm#acb9863b6896d54abee5acce498e5b9a3">   90</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../d4/da1/classez_phantom_set_property.htm#acb9863b6896d54abee5acce498e5b9a3">Clear</a>(<span class="keywordtype">void</span>* pInstance)<span class="keyword"> const override </span>{}</div>
<div class="line"><a name="l00091"></a><span class="lineno"><a class="line" href="../../d4/da1/classez_phantom_set_property.htm#a16fc1d7b0592449a255df41f67d42e94">   91</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../d4/da1/classez_phantom_set_property.htm#a16fc1d7b0592449a255df41f67d42e94">Insert</a>(<span class="keywordtype">void</span>* pInstance, <span class="keyword">const</span> <span class="keywordtype">void</span>* pObject)<span class="keyword"> const override </span>{}</div>
<div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="../../d4/da1/classez_phantom_set_property.htm#ae6bb01befab7b48c9421010c0618ff95">   92</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../d4/da1/classez_phantom_set_property.htm#ae6bb01befab7b48c9421010c0618ff95">Remove</a>(<span class="keywordtype">void</span>* pInstance, <span class="keyword">const</span> <span class="keywordtype">void</span>* pObject)<span class="keyword"> const override </span>{}</div>
<div class="line"><a name="l00093"></a><span class="lineno"><a class="line" href="../../d4/da1/classez_phantom_set_property.htm#a1d325fe4f6595fe5df8b12a871bf0f37">   93</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="../../d4/da1/classez_phantom_set_property.htm#a1d325fe4f6595fe5df8b12a871bf0f37">Contains</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance, <span class="keyword">const</span> <span class="keywordtype">void</span>* pObject)<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> <span class="keyword">false</span>; }</div>
<div class="line"><a name="l00094"></a><span class="lineno"><a class="line" href="../../d4/da1/classez_phantom_set_property.htm#a9ea3fea3aaa98323ec5434e9720a2162">   94</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../d4/da1/classez_phantom_set_property.htm#a9ea3fea3aaa98323ec5434e9720a2162">GetValues</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance, <a class="code" href="../../d2/d4f/classez_dynamic_array.htm">ezDynamicArray&lt;ezVariant&gt;</a>&amp; out_keys)<span class="keyword"> const override </span>{}</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160; </div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;  <a class="code" href="../../d4/d53/structez_hybrid_string.htm">ezString</a> m_sPropertyNameStorage;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* m_pPropertyType;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;};</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160; </div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160; </div>
<div class="line"><a name="l00102"></a><span class="lineno"><a class="line" href="../../d8/d39/classez_phantom_map_property.htm">  102</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d8/d39/classez_phantom_map_property.htm">ezPhantomMapProperty</a> : <span class="keyword">public</span> <a class="code" href="../../d3/d48/classez_abstract_map_property.htm">ezAbstractMapProperty</a></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;{</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;  <a class="code" href="../../d8/d39/classez_phantom_map_property.htm">ezPhantomMapProperty</a>(<span class="keyword">const</span> <a class="code" href="../../db/deb/structez_reflected_property_descriptor.htm">ezReflectedPropertyDescriptor</a>* pDesc);</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;  ~<a class="code" href="../../d8/d39/classez_phantom_map_property.htm">ezPhantomMapProperty</a>();</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160; </div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;  <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* <a class="code" href="../../d8/d39/classez_phantom_map_property.htm#a8148d6899beaab2787086ea20347f47f">GetSpecificType</a>() <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00109"></a><span class="lineno"><a class="line" href="../../d8/d39/classez_phantom_map_property.htm#a8e213fd66af2981a9bd363a9ad26cff6">  109</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="../../d8/d39/classez_phantom_map_property.htm#a8e213fd66af2981a9bd363a9ad26cff6">IsEmpty</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance)<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> <span class="keyword">true</span>; }</div>
<div class="line"><a name="l00110"></a><span class="lineno"><a class="line" href="../../d8/d39/classez_phantom_map_property.htm#a15eb5959dc41d6876ccd21ccfa888e1b">  110</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../d8/d39/classez_phantom_map_property.htm#a15eb5959dc41d6876ccd21ccfa888e1b">Clear</a>(<span class="keywordtype">void</span>* pInstance)<span class="keyword"> const override </span>{}</div>
<div class="line"><a name="l00111"></a><span class="lineno"><a class="line" href="../../d8/d39/classez_phantom_map_property.htm#aed3ca8567a3beb46a0b2799da0d80fa4">  111</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../d8/d39/classez_phantom_map_property.htm#aed3ca8567a3beb46a0b2799da0d80fa4">Insert</a>(<span class="keywordtype">void</span>* pInstance, <span class="keyword">const</span> <span class="keywordtype">char</span>* szKey, <span class="keyword">const</span> <span class="keywordtype">void</span>* pObject)<span class="keyword"> const override </span>{}</div>
<div class="line"><a name="l00112"></a><span class="lineno"><a class="line" href="../../d8/d39/classez_phantom_map_property.htm#a806e43aa9391a32034c89d003796f953">  112</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../d8/d39/classez_phantom_map_property.htm#a806e43aa9391a32034c89d003796f953">Remove</a>(<span class="keywordtype">void</span>* pInstance, <span class="keyword">const</span> <span class="keywordtype">char</span>* szKey)<span class="keyword"> const override </span>{}</div>
<div class="line"><a name="l00113"></a><span class="lineno"><a class="line" href="../../d8/d39/classez_phantom_map_property.htm#a75f4059fe27233834b0ea82003f1bde7">  113</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="../../d8/d39/classez_phantom_map_property.htm#a75f4059fe27233834b0ea82003f1bde7">Contains</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance, <span class="keyword">const</span> <span class="keywordtype">char</span>* szKey)<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> <span class="keyword">false</span>; }</div>
<div class="line"><a name="l00114"></a><span class="lineno"><a class="line" href="../../d8/d39/classez_phantom_map_property.htm#a466ab32093111d91203373017b5edf4e">  114</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="../../d8/d39/classez_phantom_map_property.htm#a466ab32093111d91203373017b5edf4e">GetValue</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance, <span class="keyword">const</span> <span class="keywordtype">char</span>* szKey, <span class="keywordtype">void</span>* pObject)<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> <span class="keyword">false</span>; }</div>
<div class="line"><a name="l00115"></a><span class="lineno"><a class="line" href="../../d8/d39/classez_phantom_map_property.htm#af9443d6cc2d1de736a7d140cdaebf396">  115</a></span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../d8/d39/classez_phantom_map_property.htm#af9443d6cc2d1de736a7d140cdaebf396">GetKeys</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance, <a class="code" href="../../d8/deb/classez_hybrid_array.htm">ezHybridArray&lt;ezString, 16&gt;</a>&amp; out_keys)<span class="keyword"> const override </span>{}</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160; </div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;  <a class="code" href="../../d4/d53/structez_hybrid_string.htm">ezString</a> m_sPropertyNameStorage;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* m_pPropertyType;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;};</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassez_abstract_set_property_htm"><div class="ttname"><a href="../../d9/dc6/classez_abstract_set_property.htm">ezAbstractSetProperty</a></div><div class="ttdoc">The base class for a property that represents a set of values.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:312</div></div>
<div class="ttc" id="astructez_reflected_function_descriptor_htm"><div class="ttname"><a href="../../d0/d9f/structez_reflected_function_descriptor.htm">ezReflectedFunctionDescriptor</a></div><div class="ttdoc">Stores the description of a reflected function in a serializable form, used by ezReflectedTypeDescrip...</div><div class="ttdef"><b>Definition:</b> ReflectedType.h:74</div></div>
<div class="ttc" id="aclassez_phantom_set_property_htm_a1d325fe4f6595fe5df8b12a871bf0f37"><div class="ttname"><a href="../../d4/da1/classez_phantom_set_property.htm#a1d325fe4f6595fe5df8b12a871bf0f37">ezPhantomSetProperty::Contains</a></div><div class="ttdeci">virtual bool Contains(const void *pInstance, const void *pObject) const override</div><div class="ttdoc">Returns whether the target of pObject is in the set.</div><div class="ttdef"><b>Definition:</b> PhantomProperty.h:93</div></div>
<div class="ttc" id="aclassez_phantom_function_property_htm_a2712d960a3b7d79152e4a9f0bc8d0bc7"><div class="ttname"><a href="../../d0/d33/classez_phantom_function_property.htm#a2712d960a3b7d79152e4a9f0bc8d0bc7">ezPhantomFunctionProperty::GetReturnType</a></div><div class="ttdeci">virtual const ezRTTI * GetReturnType() const override</div><div class="ttdoc">Returns the type of the return value.</div><div class="ttdef"><b>Definition:</b> PhantomProperty.cpp:98</div></div>
<div class="ttc" id="astructez_bitflags_htm"><div class="ttname"><a href="../../d1/dec/structez_bitflags.htm">ezBitflags&lt; ezPropertyFlags &gt;</a></div></div>
<div class="ttc" id="aclassez_phantom_member_property_htm_aa963ea55913ce3c64c80e6064b670040"><div class="ttname"><a href="../../d7/dcc/classez_phantom_member_property.htm#aa963ea55913ce3c64c80e6064b670040">ezPhantomMemberProperty::GetValuePtr</a></div><div class="ttdeci">virtual void GetValuePtr(const void *pInstance, void *pObject) const override</div><div class="ttdoc">Writes the value of this property in pInstance to pObject. pObject needs to point to an instance of t...</div><div class="ttdef"><b>Definition:</b> PhantomProperty.h:30</div></div>
<div class="ttc" id="aclassez_abstract_map_property_htm"><div class="ttname"><a href="../../d3/d48/classez_abstract_map_property.htm">ezAbstractMapProperty</a></div><div class="ttdoc">The base class for a property that represents a set of values.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:347</div></div>
<div class="ttc" id="aclassez_phantom_constant_property_htm"><div class="ttname"><a href="../../db/dbc/classez_phantom_constant_property.htm">ezPhantomConstantProperty</a></div><div class="ttdef"><b>Definition:</b> PhantomProperty.h:6</div></div>
<div class="ttc" id="aclassez_phantom_array_property_htm_a2968e2c36f0e130551a6018825fc34bf"><div class="ttname"><a href="../../db/d21/classez_phantom_array_property.htm#a2968e2c36f0e130551a6018825fc34bf">ezPhantomArrayProperty::Insert</a></div><div class="ttdeci">virtual void Insert(void *pInstance, ezUInt32 uiIndex, const void *pObject) const override</div><div class="ttdoc">Inserts the target of pObject into the array at index uiIndex.</div><div class="ttdef"><b>Definition:</b> PhantomProperty.h:70</div></div>
<div class="ttc" id="aclassez_r_t_t_i_htm"><div class="ttname"><a href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a></div><div class="ttdoc">This class holds information about reflected types. Each instance represents one type that is known t...</div><div class="ttdef"><b>Definition:</b> RTTI.h:28</div></div>
<div class="ttc" id="aclassez_phantom_function_property_htm_a3f1f3ae92c12d7f83824fe4ae44909be"><div class="ttname"><a href="../../d0/d33/classez_phantom_function_property.htm#a3f1f3ae92c12d7f83824fe4ae44909be">ezPhantomFunctionProperty::Execute</a></div><div class="ttdeci">virtual void Execute(void *pInstance, ezArrayPtr&lt; ezVariant &gt; values, ezVariant &amp;ref_returnValue) const override</div><div class="ttdoc">Calls the function. Provide the instance on which the function is supposed to be called.</div><div class="ttdef"><b>Definition:</b> PhantomProperty.cpp:123</div></div>
<div class="ttc" id="aclassez_abstract_array_property_htm"><div class="ttname"><a href="../../dc/dfb/classez_abstract_array_property.htm">ezAbstractArrayProperty</a></div><div class="ttdoc">The base class for a property that represents an array of values.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:272</div></div>
<div class="ttc" id="aclassez_phantom_map_property_htm_aed3ca8567a3beb46a0b2799da0d80fa4"><div class="ttname"><a href="../../d8/d39/classez_phantom_map_property.htm#aed3ca8567a3beb46a0b2799da0d80fa4">ezPhantomMapProperty::Insert</a></div><div class="ttdeci">virtual void Insert(void *pInstance, const char *szKey, const void *pObject) const override</div><div class="ttdoc">Inserts the target of pObject into the set.</div><div class="ttdef"><b>Definition:</b> PhantomProperty.h:111</div></div>
<div class="ttc" id="aclassez_abstract_member_property_htm"><div class="ttname"><a href="../../da/d67/classez_abstract_member_property.htm">ezAbstractMemberProperty</a></div><div class="ttdoc">This is the base class for all properties that are members of a class. It provides more information a...</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:236</div></div>
<div class="ttc" id="aclassez_phantom_function_property_htm_ac12d56baf7014b2f824ed44a64e7ee35"><div class="ttname"><a href="../../d0/d33/classez_phantom_function_property.htm#ac12d56baf7014b2f824ed44a64e7ee35">ezPhantomFunctionProperty::GetFunctionType</a></div><div class="ttdeci">virtual ezFunctionType::Enum GetFunctionType() const override</div><div class="ttdoc">Returns the type of function, see ezFunctionPropertyType::Enum.</div><div class="ttdef"><b>Definition:</b> PhantomProperty.cpp:93</div></div>
<div class="ttc" id="aclassez_abstract_constant_property_htm"><div class="ttname"><a href="../../d8/d53/classez_abstract_constant_property.htm">ezAbstractConstantProperty</a></div><div class="ttdoc">This is the base class for all constant properties that are stored inside the RTTI data.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:212</div></div>
<div class="ttc" id="astructez_function_type_htm_a13bed06180e1a399e5d28f38d33a3f36"><div class="ttname"><a href="../../d6/dbb/structez_function_type.htm#a13bed06180e1a399e5d28f38d33a3f36">ezFunctionType::Enum</a></div><div class="ttdeci">Enum</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:524</div></div>
<div class="ttc" id="aclassez_phantom_map_property_htm_a806e43aa9391a32034c89d003796f953"><div class="ttname"><a href="../../d8/d39/classez_phantom_map_property.htm#a806e43aa9391a32034c89d003796f953">ezPhantomMapProperty::Remove</a></div><div class="ttdeci">virtual void Remove(void *pInstance, const char *szKey) const override</div><div class="ttdoc">Removes the target of pObject from the set.</div><div class="ttdef"><b>Definition:</b> PhantomProperty.h:112</div></div>
<div class="ttc" id="aclassez_array_ptr_htm"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a></div><div class="ttdoc">This class encapsulates an array and it's size. It is recommended to use this class instead of plain ...</div><div class="ttdef"><b>Definition:</b> ArrayPtr.h:36</div></div>
<div class="ttc" id="aclassez_phantom_map_property_htm"><div class="ttname"><a href="../../d8/d39/classez_phantom_map_property.htm">ezPhantomMapProperty</a></div><div class="ttdef"><b>Definition:</b> PhantomProperty.h:102</div></div>
<div class="ttc" id="aclassez_phantom_map_property_htm_af9443d6cc2d1de736a7d140cdaebf396"><div class="ttname"><a href="../../d8/d39/classez_phantom_map_property.htm#af9443d6cc2d1de736a7d140cdaebf396">ezPhantomMapProperty::GetKeys</a></div><div class="ttdeci">virtual void GetKeys(const void *pInstance, ezHybridArray&lt; ezString, 16 &gt; &amp;out_keys) const override</div><div class="ttdoc">Writes the content of the set to out_keys.</div><div class="ttdef"><b>Definition:</b> PhantomProperty.h:115</div></div>
<div class="ttc" id="aclassez_phantom_map_property_htm_a15eb5959dc41d6876ccd21ccfa888e1b"><div class="ttname"><a href="../../d8/d39/classez_phantom_map_property.htm#a15eb5959dc41d6876ccd21ccfa888e1b">ezPhantomMapProperty::Clear</a></div><div class="ttdeci">virtual void Clear(void *pInstance) const override</div><div class="ttdoc">Clears the set.</div><div class="ttdef"><b>Definition:</b> PhantomProperty.h:110</div></div>
<div class="ttc" id="aclassez_phantom_array_property_htm_a7dce5a645a4319bc5a7ef7f3d1e3ae47"><div class="ttname"><a href="../../db/d21/classez_phantom_array_property.htm#a7dce5a645a4319bc5a7ef7f3d1e3ae47">ezPhantomArrayProperty::SetValue</a></div><div class="ttdeci">virtual void SetValue(void *pInstance, ezUInt32 uiIndex, const void *pObject) const override</div><div class="ttdoc">Writes the target of pObject to the element at index uiIndex.</div><div class="ttdef"><b>Definition:</b> PhantomProperty.h:69</div></div>
<div class="ttc" id="astructez_hybrid_string_htm"><div class="ttname"><a href="../../d4/d53/structez_hybrid_string.htm">ezHybridString</a></div><div class="ttdef"><b>Definition:</b> Stream.h:16</div></div>
<div class="ttc" id="aclassez_phantom_array_property_htm_a07e00561f30f95093b8bbf336990d9b1"><div class="ttname"><a href="../../db/d21/classez_phantom_array_property.htm#a07e00561f30f95093b8bbf336990d9b1">ezPhantomArrayProperty::GetSpecificType</a></div><div class="ttdeci">virtual const ezRTTI * GetSpecificType() const override</div><div class="ttdoc">Returns the type information of the constant property. Use this to cast this property to a specific v...</div><div class="ttdef"><b>Definition:</b> PhantomProperty.cpp:149</div></div>
<div class="ttc" id="aclassez_phantom_set_property_htm_a16fc1d7b0592449a255df41f67d42e94"><div class="ttname"><a href="../../d4/da1/classez_phantom_set_property.htm#a16fc1d7b0592449a255df41f67d42e94">ezPhantomSetProperty::Insert</a></div><div class="ttdeci">virtual void Insert(void *pInstance, const void *pObject) const override</div><div class="ttdoc">Inserts the target of pObject into the set.</div><div class="ttdef"><b>Definition:</b> PhantomProperty.h:91</div></div>
<div class="ttc" id="aclassez_phantom_member_property_htm_a41951269e236ae2f0c4fc1252d2165f1"><div class="ttname"><a href="../../d7/dcc/classez_phantom_member_property.htm#a41951269e236ae2f0c4fc1252d2165f1">ezPhantomMemberProperty::GetSpecificType</a></div><div class="ttdeci">virtual const ezRTTI * GetSpecificType() const override</div><div class="ttdoc">Returns the type information of the constant property. Use this to cast this property to a specific v...</div><div class="ttdef"><b>Definition:</b> PhantomProperty.cpp:61</div></div>
<div class="ttc" id="aclassez_phantom_map_property_htm_a466ab32093111d91203373017b5edf4e"><div class="ttname"><a href="../../d8/d39/classez_phantom_map_property.htm#a466ab32093111d91203373017b5edf4e">ezPhantomMapProperty::GetValue</a></div><div class="ttdeci">virtual bool GetValue(const void *pInstance, const char *szKey, void *pObject) const override</div><div class="ttdoc">Writes element at index uiIndex to the target of pObject.</div><div class="ttdef"><b>Definition:</b> PhantomProperty.h:114</div></div>
<div class="ttc" id="aclassez_phantom_constant_property_htm_abfdf7f7f7d739eb1e668a2f6e5926749"><div class="ttname"><a href="../../db/dbc/classez_phantom_constant_property.htm#abfdf7f7f7d739eb1e668a2f6e5926749">ezPhantomConstantProperty::GetSpecificType</a></div><div class="ttdeci">virtual const ezRTTI * GetSpecificType() const override</div><div class="ttdoc">Returns the type information of the constant property. Use this to cast this property to a specific v...</div><div class="ttdef"><b>Definition:</b> PhantomProperty.cpp:28</div></div>
<div class="ttc" id="aclassez_phantom_array_property_htm_a457c381596a562ce2744a9c4f23a27b9"><div class="ttname"><a href="../../db/d21/classez_phantom_array_property.htm#a457c381596a562ce2744a9c4f23a27b9">ezPhantomArrayProperty::Clear</a></div><div class="ttdeci">virtual void Clear(void *pInstance) const override</div><div class="ttdoc">Clears the array.</div><div class="ttdef"><b>Definition:</b> PhantomProperty.h:72</div></div>
<div class="ttc" id="aclassez_dynamic_array_htm"><div class="ttname"><a href="../../d2/d4f/classez_dynamic_array.htm">ezDynamicArray&lt; ezFunctionArgumentDescriptor &gt;</a></div></div>
<div class="ttc" id="aclassez_phantom_function_property_htm_ade07f45b88fb211c22f46d7aeb900955"><div class="ttname"><a href="../../d0/d33/classez_phantom_function_property.htm#ade07f45b88fb211c22f46d7aeb900955">ezPhantomFunctionProperty::GetArgumentFlags</a></div><div class="ttdeci">virtual ezBitflags&lt; ezPropertyFlags &gt; GetArgumentFlags(ezUInt32 uiParamIndex) const override</div><div class="ttdoc">Returns the property flags of the given argument.</div><div class="ttdef"><b>Definition:</b> PhantomProperty.cpp:118</div></div>
<div class="ttc" id="aclassez_phantom_constant_property_htm_a14139041702236fe4f2d273d1a9bfeba"><div class="ttname"><a href="../../db/dbc/classez_phantom_constant_property.htm#a14139041702236fe4f2d273d1a9bfeba">ezPhantomConstantProperty::GetPropertyPointer</a></div><div class="ttdeci">virtual void * GetPropertyPointer() const override</div><div class="ttdoc">Returns a pointer to the constant data or nullptr. See ezAbstractMemberProperty::GetPropertyPointer f...</div><div class="ttdef"><b>Definition:</b> PhantomProperty.cpp:33</div></div>
<div class="ttc" id="aclassez_phantom_array_property_htm_ad2e1e22c6f44a73e6ff7a9325405bc6e"><div class="ttname"><a href="../../db/d21/classez_phantom_array_property.htm#ad2e1e22c6f44a73e6ff7a9325405bc6e">ezPhantomArrayProperty::SetCount</a></div><div class="ttdeci">virtual void SetCount(void *pInstance, ezUInt32 uiCount) const override</div><div class="ttdoc">Resizes the array to uiCount.</div><div class="ttdef"><b>Definition:</b> PhantomProperty.h:73</div></div>
<div class="ttc" id="astructez_enum_htm"><div class="ttname"><a href="../../d6/dd9/structez_enum.htm">ezEnum&lt; ezFunctionType &gt;</a></div></div>
<div class="ttc" id="aclassez_phantom_array_property_htm_a39ae76656a88510040f00e2c3f38e8e5"><div class="ttname"><a href="../../db/d21/classez_phantom_array_property.htm#a39ae76656a88510040f00e2c3f38e8e5">ezPhantomArrayProperty::GetCount</a></div><div class="ttdeci">virtual ezUInt32 GetCount(const void *pInstance) const override</div><div class="ttdoc">Returns number of elements.</div><div class="ttdef"><b>Definition:</b> PhantomProperty.h:67</div></div>
<div class="ttc" id="aclassez_variant_htm"><div class="ttname"><a href="../../de/de6/classez_variant.htm">ezVariant</a></div><div class="ttdoc">ezVariant is a class that can store different types of variables, which is useful in situations where...</div><div class="ttdef"><b>Definition:</b> Variant.h:46</div></div>
<div class="ttc" id="astructez_function_argument_descriptor_htm"><div class="ttname"><a href="../../d0/d56/structez_function_argument_descriptor.htm">ezFunctionArgumentDescriptor</a></div><div class="ttdef"><b>Definition:</b> ReflectedType.h:64</div></div>
<div class="ttc" id="aclassez_phantom_function_property_htm_a24bd9de6204418fb663e5a41b15671e7"><div class="ttname"><a href="../../d0/d33/classez_phantom_function_property.htm#a24bd9de6204418fb663e5a41b15671e7">ezPhantomFunctionProperty::GetArgumentCount</a></div><div class="ttdeci">virtual ezUInt32 GetArgumentCount() const override</div><div class="ttdoc">Returns the number of arguments.</div><div class="ttdef"><b>Definition:</b> PhantomProperty.cpp:108</div></div>
<div class="ttc" id="aclassez_phantom_function_property_htm_a312b9bbb5bfe91167feb10f6aef972be"><div class="ttname"><a href="../../d0/d33/classez_phantom_function_property.htm#a312b9bbb5bfe91167feb10f6aef972be">ezPhantomFunctionProperty::GetReturnFlags</a></div><div class="ttdeci">virtual ezBitflags&lt; ezPropertyFlags &gt; GetReturnFlags() const override</div><div class="ttdoc">Returns property flags of the return value.</div><div class="ttdef"><b>Definition:</b> PhantomProperty.cpp:103</div></div>
<div class="ttc" id="aclassez_phantom_set_property_htm_a9d05f5eb7c620a3be254e582e9e87154"><div class="ttname"><a href="../../d4/da1/classez_phantom_set_property.htm#a9d05f5eb7c620a3be254e582e9e87154">ezPhantomSetProperty::GetSpecificType</a></div><div class="ttdeci">virtual const ezRTTI * GetSpecificType() const override</div><div class="ttdoc">Returns the type information of the constant property. Use this to cast this property to a specific v...</div><div class="ttdef"><b>Definition:</b> PhantomProperty.cpp:175</div></div>
<div class="ttc" id="aclassez_phantom_set_property_htm"><div class="ttname"><a href="../../d4/da1/classez_phantom_set_property.htm">ezPhantomSetProperty</a></div><div class="ttdef"><b>Definition:</b> PhantomProperty.h:82</div></div>
<div class="ttc" id="aclassez_phantom_set_property_htm_acb9863b6896d54abee5acce498e5b9a3"><div class="ttname"><a href="../../d4/da1/classez_phantom_set_property.htm#acb9863b6896d54abee5acce498e5b9a3">ezPhantomSetProperty::Clear</a></div><div class="ttdeci">virtual void Clear(void *pInstance) const override</div><div class="ttdoc">Clears the set.</div><div class="ttdef"><b>Definition:</b> PhantomProperty.h:90</div></div>
<div class="ttc" id="aclassez_phantom_set_property_htm_a9ea3fea3aaa98323ec5434e9720a2162"><div class="ttname"><a href="../../d4/da1/classez_phantom_set_property.htm#a9ea3fea3aaa98323ec5434e9720a2162">ezPhantomSetProperty::GetValues</a></div><div class="ttdeci">virtual void GetValues(const void *pInstance, ezDynamicArray&lt; ezVariant &gt; &amp;out_keys) const override</div><div class="ttdoc">Writes the content of the set to out_keys.</div><div class="ttdef"><b>Definition:</b> PhantomProperty.h:94</div></div>
<div class="ttc" id="aclassez_phantom_map_property_htm_a8148d6899beaab2787086ea20347f47f"><div class="ttname"><a href="../../d8/d39/classez_phantom_map_property.htm#a8148d6899beaab2787086ea20347f47f">ezPhantomMapProperty::GetSpecificType</a></div><div class="ttdeci">virtual const ezRTTI * GetSpecificType() const override</div><div class="ttdoc">Returns the type information of the constant property. Use this to cast this property to a specific v...</div><div class="ttdef"><b>Definition:</b> PhantomProperty.cpp:201</div></div>
<div class="ttc" id="aclassez_phantom_array_property_htm_ad20b8b6c5834efa15f5a3071ec7b3a61"><div class="ttname"><a href="../../db/d21/classez_phantom_array_property.htm#ad20b8b6c5834efa15f5a3071ec7b3a61">ezPhantomArrayProperty::Remove</a></div><div class="ttdeci">virtual void Remove(void *pInstance, ezUInt32 uiIndex) const override</div><div class="ttdoc">Removes the element in the array at index uiIndex.</div><div class="ttdef"><b>Definition:</b> PhantomProperty.h:71</div></div>
<div class="ttc" id="aclassez_hybrid_array_htm"><div class="ttname"><a href="../../d8/deb/classez_hybrid_array.htm">ezHybridArray</a></div><div class="ttdoc">A hybrid array uses in-place storage to handle the first few elements without any allocation....</div><div class="ttdef"><b>Definition:</b> HybridArray.h:11</div></div>
<div class="ttc" id="aclassez_phantom_set_property_htm_accadf2738eb1108b75ad35ef4f9b56a4"><div class="ttname"><a href="../../d4/da1/classez_phantom_set_property.htm#accadf2738eb1108b75ad35ef4f9b56a4">ezPhantomSetProperty::IsEmpty</a></div><div class="ttdeci">virtual bool IsEmpty(const void *pInstance) const override</div><div class="ttdoc">Returns whether the set is empty.</div><div class="ttdef"><b>Definition:</b> PhantomProperty.h:89</div></div>
<div class="ttc" id="aclassez_phantom_array_property_htm"><div class="ttname"><a href="../../db/d21/classez_phantom_array_property.htm">ezPhantomArrayProperty</a></div><div class="ttdef"><b>Definition:</b> PhantomProperty.h:60</div></div>
<div class="ttc" id="astructez_reflected_property_descriptor_htm"><div class="ttname"><a href="../../db/deb/structez_reflected_property_descriptor.htm">ezReflectedPropertyDescriptor</a></div><div class="ttdoc">Stores the description of a reflected property in a serializable form, used by ezReflectedTypeDescrip...</div><div class="ttdef"><b>Definition:</b> ReflectedType.h:42</div></div>
<div class="ttc" id="aclassez_phantom_member_property_htm_aad54c52e132e1d0dbb30758accabd8ff"><div class="ttname"><a href="../../d7/dcc/classez_phantom_member_property.htm#aad54c52e132e1d0dbb30758accabd8ff">ezPhantomMemberProperty::GetPropertyPointer</a></div><div class="ttdeci">virtual void * GetPropertyPointer(const void *pInstance) const override</div><div class="ttdoc">Returns a pointer to the property data or nullptr. If a valid pointer is returned,...</div><div class="ttdef"><b>Definition:</b> PhantomProperty.h:29</div></div>
<div class="ttc" id="aclassez_abstract_function_property_htm"><div class="ttname"><a href="../../d3/d4c/classez_abstract_function_property.htm">ezAbstractFunctionProperty</a></div><div class="ttdoc">The base class for a property that represents a function.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:534</div></div>
<div class="ttc" id="aclassez_phantom_map_property_htm_a75f4059fe27233834b0ea82003f1bde7"><div class="ttname"><a href="../../d8/d39/classez_phantom_map_property.htm#a75f4059fe27233834b0ea82003f1bde7">ezPhantomMapProperty::Contains</a></div><div class="ttdeci">virtual bool Contains(const void *pInstance, const char *szKey) const override</div><div class="ttdoc">Returns whether the target of pObject is in the set.</div><div class="ttdef"><b>Definition:</b> PhantomProperty.h:113</div></div>
<div class="ttc" id="aclassez_phantom_member_property_htm_a408424bec37cbd8d86e7398bc3b50591"><div class="ttname"><a href="../../d7/dcc/classez_phantom_member_property.htm#a408424bec37cbd8d86e7398bc3b50591">ezPhantomMemberProperty::SetValuePtr</a></div><div class="ttdeci">virtual void SetValuePtr(void *pInstance, const void *pObject) const override</div><div class="ttdoc">Sets the value of pObject to the property in pInstance. pObject needs to point to an instance of this...</div><div class="ttdef"><b>Definition:</b> PhantomProperty.h:31</div></div>
<div class="ttc" id="aclassez_phantom_map_property_htm_a8e213fd66af2981a9bd363a9ad26cff6"><div class="ttname"><a href="../../d8/d39/classez_phantom_map_property.htm#a8e213fd66af2981a9bd363a9ad26cff6">ezPhantomMapProperty::IsEmpty</a></div><div class="ttdeci">virtual bool IsEmpty(const void *pInstance) const override</div><div class="ttdoc">Returns whether the set is empty.</div><div class="ttdef"><b>Definition:</b> PhantomProperty.h:109</div></div>
<div class="ttc" id="aclassez_phantom_function_property_htm_aeaa3aa49c613d0f6118cd9939c611acf"><div class="ttname"><a href="../../d0/d33/classez_phantom_function_property.htm#aeaa3aa49c613d0f6118cd9939c611acf">ezPhantomFunctionProperty::GetArgumentType</a></div><div class="ttdeci">virtual const ezRTTI * GetArgumentType(ezUInt32 uiParamIndex) const override</div><div class="ttdoc">Returns the type of the given argument.</div><div class="ttdef"><b>Definition:</b> PhantomProperty.cpp:113</div></div>
<div class="ttc" id="aclassez_phantom_array_property_htm_ac3120d207c7fe72e347868f4c6e61049"><div class="ttname"><a href="../../db/d21/classez_phantom_array_property.htm#ac3120d207c7fe72e347868f4c6e61049">ezPhantomArrayProperty::GetValue</a></div><div class="ttdeci">virtual void GetValue(const void *pInstance, ezUInt32 uiIndex, void *pObject) const override</div><div class="ttdoc">Writes element at index uiIndex to the target of pObject.</div><div class="ttdef"><b>Definition:</b> PhantomProperty.h:68</div></div>
<div class="ttc" id="aclassez_phantom_member_property_htm"><div class="ttname"><a href="../../d7/dcc/classez_phantom_member_property.htm">ezPhantomMemberProperty</a></div><div class="ttdef"><b>Definition:</b> PhantomProperty.h:22</div></div>
<div class="ttc" id="aclassez_phantom_set_property_htm_ae6bb01befab7b48c9421010c0618ff95"><div class="ttname"><a href="../../d4/da1/classez_phantom_set_property.htm#ae6bb01befab7b48c9421010c0618ff95">ezPhantomSetProperty::Remove</a></div><div class="ttdeci">virtual void Remove(void *pInstance, const void *pObject) const override</div><div class="ttdoc">Removes the target of pObject from the set.</div><div class="ttdef"><b>Definition:</b> PhantomProperty.h:92</div></div>
<div class="ttc" id="aclassez_phantom_constant_property_htm_aa5b8d7e109ff7255fe22bb3f8794c5f4"><div class="ttname"><a href="../../db/dbc/classez_phantom_constant_property.htm#aa5b8d7e109ff7255fe22bb3f8794c5f4">ezPhantomConstantProperty::GetConstant</a></div><div class="ttdeci">virtual ezVariant GetConstant() const override</div><div class="ttdoc">Returns the constant value as an ezVariant.</div><div class="ttdef"><b>Definition:</b> PhantomProperty.h:14</div></div>
<div class="ttc" id="aclassez_phantom_function_property_htm"><div class="ttname"><a href="../../d0/d33/classez_phantom_function_property.htm">ezPhantomFunctionProperty</a></div><div class="ttdef"><b>Definition:</b> PhantomProperty.h:38</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_07792d309f5611e62640e8ec1fb96105.htm">Tools</a></li><li class="navelem"><a class="el" href="../../dir_8e80be223102188e67d1ce7cce146de0.htm">Libs</a></li><li class="navelem"><a class="el" href="../../dir_2c504b9267ae5782c5ed966d1eebd572.htm">ToolsFoundation</a></li><li class="navelem"><a class="el" href="../../dir_5848402b0c8c1a46514da2d3f3d76e62.htm">Reflection</a></li><li class="navelem"><b>PhantomProperty.h</b></li>
    <li class="footer">Generated on Sat Nov 11 2023 17:04:24 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
