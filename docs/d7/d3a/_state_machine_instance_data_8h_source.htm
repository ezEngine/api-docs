<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/GameEngine/StateMachine/Implementation/StateMachineInstanceData.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">ezEngine<span id="projectnumber">&#160;Release 25.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function() { init_codefold(1); });
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('d7/d3a/_state_machine_instance_data_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">StateMachineInstanceData.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="preprocessor">#include &lt;GameEngine/GameEngineDLL.h&gt;</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span> </div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="preprocessor">#include &lt;Foundation/Containers/Blob.h&gt;</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="preprocessor">#include &lt;Foundation/Containers/SmallArray.h&gt;</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="preprocessor">#include &lt;Foundation/Memory/InstanceDataAllocator.h&gt;</span></div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span> </div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="keyword">namespace </span>ezStateMachineInternal</div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span>{</div>
<div class="foldopen" id="foldopen00012" data-start="{" data-end="};">
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno"><a class="line" href="../../d3/dc5/structez_state_machine_internal_1_1_compound.htm">   12</a></span>  <span class="keyword">struct </span>EZ_GAMEENGINE_DLL <a class="code hl_struct" href="../../d3/dc5/structez_state_machine_internal_1_1_compound.htm">Compound</a></div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span>  {</div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span>    EZ_ALWAYS_INLINE ezUInt32 GetBaseOffset()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_InstanceDataOffsets.GetUserData&lt;ezUInt32&gt;(); }</div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span>    EZ_ALWAYS_INLINE ezUInt32 GetDataSize()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_InstanceDataAllocator.GetTotalDataSize(); }</div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span> </div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span>    <a class="code hl_class" href="../../d0/d0c/classez_small_array.htm">ezSmallArray&lt;ezUInt32, 2&gt;</a> m_InstanceDataOffsets;</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span>    <a class="code hl_class" href="../../da/d1b/classez_instance_data_allocator.htm">ezInstanceDataAllocator</a> m_InstanceDataAllocator;</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span> </div>
<div class="foldopen" id="foldopen00020" data-start="{" data-end="};">
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno"><a class="line" href="../../dc/de9/structez_state_machine_internal_1_1_compound_1_1_instance_data.htm">   20</a></span>    <span class="keyword">struct </span><a class="code hl_struct" href="../../dc/de9/structez_state_machine_internal_1_1_compound_1_1_instance_data.htm">InstanceData</a></div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span>    {</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span>      <span class="keyword">const</span> <a class="code hl_struct" href="../../d3/dc5/structez_state_machine_internal_1_1_compound.htm">Compound</a>* m_pOwner = <span class="keyword">nullptr</span>;</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span> </div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span>      <a class="code hl_struct" href="../../dc/de9/structez_state_machine_internal_1_1_compound_1_1_instance_data.htm">~InstanceData</a>()</div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span>      {</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span>        <span class="keywordflow">if</span> (m_pOwner != <span class="keyword">nullptr</span>)</div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span>        {</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span>          m_pOwner-&gt;m_InstanceDataAllocator.<a class="code hl_function" href="../../da/d1b/classez_instance_data_allocator.htm#a373b6ffecd080186221c6be710928f3a">Destruct</a>(GetBlobPtr());</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span>        }</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span>      }</div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span> </div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span>      EZ_ALWAYS_INLINE <a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezByteBlobPtr</a> GetBlobPtr()</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>      {</div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span>        <span class="keywordflow">return</span> <a class="code hl_class" href="../../d3/da7/classez_blob_ptr.htm">ezByteBlobPtr</a>(<a class="code hl_function" href="../../dc/d4d/classez_memory_utils.htm#aaa8814eb70ee62638d61609635346446">ezMemoryUtils::AddByteOffset</a>(<span class="keyword">reinterpret_cast&lt;</span>ezUInt8*<span class="keyword">&gt;</span>(<span class="keyword">this</span>), m_pOwner-&gt;GetBaseOffset()), m_pOwner-&gt;GetDataSize());</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>      }</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span>    };</div>
</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span> </div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>    EZ_ALWAYS_INLINE <span class="keywordtype">void</span>* GetSubInstanceData(<a class="code hl_struct" href="../../dc/de9/structez_state_machine_internal_1_1_compound_1_1_instance_data.htm">InstanceData</a>* pData, ezUInt32 uiIndex)<span class="keyword"> const</span></div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span>      <span class="keywordflow">return</span> pData != <span class="keyword">nullptr</span> ? m_InstanceDataAllocator.<a class="code hl_function" href="../../da/d1b/classez_instance_data_allocator.htm#a92eb75337bd46c6195db2f8b50f00c24">GetInstanceData</a>(pData-&gt;GetBlobPtr(), m_InstanceDataOffsets[uiIndex]) : <span class="keyword">nullptr</span>;</div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>    }</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span> </div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span>    EZ_FORCE_INLINE <span class="keywordtype">void</span> Initialize(InstanceData* pData)<span class="keyword"> const</span></div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>      <span class="keywordflow">if</span> (pData != <span class="keyword">nullptr</span> &amp;&amp; pData-&gt;m_pOwner == <span class="keyword">nullptr</span>)</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span>      {</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span>        pData-&gt;m_pOwner = <span class="keyword">this</span>;</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>        m_InstanceDataAllocator.<a class="code hl_function" href="../../da/d1b/classez_instance_data_allocator.htm#a305eb7fc00ed4c26de0acde4b0eede0f">Construct</a>(pData-&gt;GetBlobPtr());</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span>      }</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span>    }</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span> </div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>    <span class="keywordtype">bool</span> GetInstanceDataDesc(<a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;T*&gt;</a> subObjects, <a class="code hl_struct" href="../../d3/d46/structez_instance_data_desc.htm">ezInstanceDataDesc</a>&amp; out_desc)</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>    {</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>      m_InstanceDataOffsets.<a class="code hl_function" href="../../d4/d0b/classez_small_array_base.htm#a5787f727bd1a20181e3e2150c7d37fc2">Clear</a>();</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>      m_InstanceDataAllocator.<a class="code hl_function" href="../../da/d1b/classez_instance_data_allocator.htm#a7c87092f653d59bee2c370a3c882bcc8">ClearDescs</a>();</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span> </div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>      ezUInt32 uiMaxAlignment = 0;</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span> </div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span>      <a class="code hl_struct" href="../../d3/d46/structez_instance_data_desc.htm">ezInstanceDataDesc</a> instanceDataDesc;</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>      <span class="keywordflow">for</span> (T* pSubObject : subObjects)</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>      {</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>        ezUInt32 uiOffset = ezInvalidIndex;</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span>        <span class="keywordflow">if</span> (pSubObject-&gt;GetInstanceDataDesc(instanceDataDesc))</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>        {</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span>          uiOffset = m_InstanceDataAllocator.<a class="code hl_function" href="../../da/d1b/classez_instance_data_allocator.htm#ae578e4c70b9f45bf4f079441258ff684">AddDesc</a>(instanceDataDesc);</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>          uiMaxAlignment = <a class="code hl_function" href="../../db/d78/namespaceez_math.htm#a6f7ee19d0f8e81ff6ae5f394075e3a56">ezMath::Max</a>(uiMaxAlignment, instanceDataDesc.m_uiTypeAlignment);</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>        }</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>        m_InstanceDataOffsets.PushBack(uiOffset);</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>      }</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span> </div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>      <span class="keywordflow">if</span> (uiMaxAlignment &gt; 0)</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>      {</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>        out_desc.FillFromType&lt;InstanceData&gt;();</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>        out_desc.m_ConstructorFunction = <span class="keyword">nullptr</span>; <span class="comment">// not needed, instance data is constructed on first OnEnter</span></div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span> </div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>        ezUInt32 uiBaseOffset = <a class="code hl_function" href="../../dc/d4d/classez_memory_utils.htm#a2583fd48644a0a7b3eb72797c7c65a34">ezMemoryUtils::AlignSize</a>(out_desc.m_uiTypeSize, uiMaxAlignment);</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>        m_InstanceDataOffsets.GetUserData&lt;ezUInt32&gt;() = uiBaseOffset;</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span> </div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>        out_desc.m_uiTypeSize = uiBaseOffset + m_InstanceDataAllocator.<a class="code hl_function" href="../../da/d1b/classez_instance_data_allocator.htm#a9d6de98ccac89ee0762db9d956d41060">GetTotalDataSize</a>();</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>        out_desc.m_uiTypeAlignment = <a class="code hl_function" href="../../db/d78/namespaceez_math.htm#a6f7ee19d0f8e81ff6ae5f394075e3a56">ezMath::Max</a>(out_desc.m_uiTypeAlignment, uiMaxAlignment);</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span> </div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>      }</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span> </div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>    }</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>  };</div>
</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>} <span class="comment">// namespace ezStateMachineInternal</span></div>
<div class="ttc" id="aclassez_array_ptr_htm"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a></div><div class="ttdoc">This class encapsulates an array and it's size. It is recommended to use this class instead of plain ...</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:41</div></div>
<div class="ttc" id="aclassez_blob_ptr_htm"><div class="ttname"><a href="../../d3/da7/classez_blob_ptr.htm">ezBlobPtr&lt; ezUInt8 &gt;</a></div></div>
<div class="ttc" id="aclassez_instance_data_allocator_htm"><div class="ttname"><a href="../../da/d1b/classez_instance_data_allocator.htm">ezInstanceDataAllocator</a></div><div class="ttdoc">Helper class to manager instance data allocation, construction and destruction.</div><div class="ttdef"><b>Definition</b> InstanceDataAllocator.h:35</div></div>
<div class="ttc" id="aclassez_instance_data_allocator_htm_a305eb7fc00ed4c26de0acde4b0eede0f"><div class="ttname"><a href="../../da/d1b/classez_instance_data_allocator.htm#a305eb7fc00ed4c26de0acde4b0eede0f">ezInstanceDataAllocator::Construct</a></div><div class="ttdeci">void Construct(ezByteBlobPtr blobPtr) const</div><div class="ttdoc">Constructs the instance data objects, within the pre-allocated memory block.</div><div class="ttdef"><b>Definition</b> InstanceDataAllocator.cpp:43</div></div>
<div class="ttc" id="aclassez_instance_data_allocator_htm_a373b6ffecd080186221c6be710928f3a"><div class="ttname"><a href="../../da/d1b/classez_instance_data_allocator.htm#a373b6ffecd080186221c6be710928f3a">ezInstanceDataAllocator::Destruct</a></div><div class="ttdeci">void Destruct(ezByteBlobPtr blobPtr) const</div><div class="ttdoc">Destructs the instance data objects.</div><div class="ttdef"><b>Definition</b> InstanceDataAllocator.cpp:59</div></div>
<div class="ttc" id="aclassez_instance_data_allocator_htm_a7c87092f653d59bee2c370a3c882bcc8"><div class="ttname"><a href="../../da/d1b/classez_instance_data_allocator.htm#a7c87092f653d59bee2c370a3c882bcc8">ezInstanceDataAllocator::ClearDescs</a></div><div class="ttdeci">void ClearDescs()</div><div class="ttdoc">Resets all internal state.</div><div class="ttdef"><b>Definition</b> InstanceDataAllocator.cpp:15</div></div>
<div class="ttc" id="aclassez_instance_data_allocator_htm_a92eb75337bd46c6195db2f8b50f00c24"><div class="ttname"><a href="../../da/d1b/classez_instance_data_allocator.htm#a92eb75337bd46c6195db2f8b50f00c24">ezInstanceDataAllocator::GetInstanceData</a></div><div class="ttdeci">static EZ_ALWAYS_INLINE void * GetInstanceData(const ezByteBlobPtr &amp;blobPtr, ezUInt32 uiOffset)</div><div class="ttdoc">Retrieves a void pointer to the instance data within the given blob at the given offset,...</div><div class="ttdef"><b>Definition</b> InstanceDataAllocator.h:59</div></div>
<div class="ttc" id="aclassez_instance_data_allocator_htm_a9d6de98ccac89ee0762db9d956d41060"><div class="ttname"><a href="../../da/d1b/classez_instance_data_allocator.htm#a9d6de98ccac89ee0762db9d956d41060">ezInstanceDataAllocator::GetTotalDataSize</a></div><div class="ttdeci">ezUInt32 GetTotalDataSize() const</div><div class="ttdoc">The total size in bytes taken up by all instance data objects that were added.</div><div class="ttdef"><b>Definition</b> InstanceDataAllocator.h:56</div></div>
<div class="ttc" id="aclassez_instance_data_allocator_htm_ae578e4c70b9f45bf4f079441258ff684"><div class="ttname"><a href="../../da/d1b/classez_instance_data_allocator.htm#ae578e4c70b9f45bf4f079441258ff684">ezInstanceDataAllocator::AddDesc</a></div><div class="ttdeci">ezUInt32 AddDesc(const ezInstanceDataDesc &amp;desc)</div><div class="ttdoc">Adds the given desc to internal list of data that needs to be allocated and returns the byte offset.</div><div class="ttdef"><b>Definition</b> InstanceDataAllocator.cpp:5</div></div>
<div class="ttc" id="aclassez_memory_utils_htm_a2583fd48644a0a7b3eb72797c7c65a34"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm#a2583fd48644a0a7b3eb72797c7c65a34">ezMemoryUtils::AlignSize</a></div><div class="ttdeci">static T AlignSize(T uiSize, T uiAlignment)</div><div class="ttdoc">Aligns the given size uiSize by rounding up to the next multiple of the size.</div></div>
<div class="ttc" id="aclassez_memory_utils_htm_aaa8814eb70ee62638d61609635346446"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm#aaa8814eb70ee62638d61609635346446">ezMemoryUtils::AddByteOffset</a></div><div class="ttdeci">static T * AddByteOffset(T *pPtr, std::ptrdiff_t offset)</div><div class="ttdoc">Returns the address stored in ptr plus the given byte offset iOffset, cast to type T.</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_a5787f727bd1a20181e3e2150c7d37fc2"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#a5787f727bd1a20181e3e2150c7d37fc2">ezSmallArrayBase::Clear</a></div><div class="ttdeci">void Clear()</div><div class="ttdoc">Clears the array.</div><div class="ttdef"><b>Definition</b> SmallArray_inl.h:234</div></div>
<div class="ttc" id="aclassez_small_array_htm"><div class="ttname"><a href="../../d0/d0c/classez_small_array.htm">ezSmallArray</a></div><div class="ttdef"><b>Definition</b> SmallArray.h:224</div></div>
<div class="ttc" id="anamespaceez_math_htm_a6f7ee19d0f8e81ff6ae5f394075e3a56"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a6f7ee19d0f8e81ff6ae5f394075e3a56">ezMath::Max</a></div><div class="ttdeci">constexpr EZ_ALWAYS_INLINE T Max(T f1, T f2)</div><div class="ttdoc">Returns the greater value, f1 or f2.</div><div class="ttdef"><b>Definition</b> Math_inl.h:39</div></div>
<div class="ttc" id="astructez_instance_data_desc_htm"><div class="ttname"><a href="../../d3/d46/structez_instance_data_desc.htm">ezInstanceDataDesc</a></div><div class="ttdoc">Structure to describe an instance data type.</div><div class="ttdef"><b>Definition</b> InstanceDataAllocator.h:17</div></div>
<div class="ttc" id="astructez_state_machine_internal_1_1_compound_1_1_instance_data_htm"><div class="ttname"><a href="../../dc/de9/structez_state_machine_internal_1_1_compound_1_1_instance_data.htm">ezStateMachineInternal::Compound::InstanceData</a></div><div class="ttdef"><b>Definition</b> StateMachineInstanceData.h:21</div></div>
<div class="ttc" id="astructez_state_machine_internal_1_1_compound_htm"><div class="ttname"><a href="../../d3/dc5/structez_state_machine_internal_1_1_compound.htm">ezStateMachineInternal::Compound</a></div><div class="ttdoc">Helper class to manage instance data for compound states or transitions.</div><div class="ttdef"><b>Definition</b> StateMachineInstanceData.h:13</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_fe4f349dd73c6459187bb04ae7deb06f.htm">GameEngine</a></li><li class="navelem"><a class="el" href="../../dir_b5acae571bcde48717a6d5892341cf6b.htm">StateMachine</a></li><li class="navelem"><a class="el" href="../../dir_3838f1c091559355365a9cca6ef0a25d.htm">Implementation</a></li><li class="navelem"><b>StateMachineInstanceData.h</b></li>
    <li class="footer">Generated on Fri Jul 11 2025 12:17:55 for ezEngine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
