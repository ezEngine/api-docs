<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Core/Utils/Implementation/IntervalScheduler_inl.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 25.03</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d7/d4d/_interval_scheduler__inl_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">IntervalScheduler_inl.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160; </div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#include &lt;Foundation/SimdMath/SimdRandom.h&gt;</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160; </div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;EZ_ALWAYS_INLINE ezUInt32 ezIntervalSchedulerBase::GetHistogramIndex(<a class="code" href="../../d3/d90/structez_time.htm">ezTime</a> value)</div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;{</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;  <span class="keywordflow">if</span> (value.<a class="code" href="../../d3/d90/structez_time.htm#a68ad20e2069c826060662cfd319807ea">IsZero</a>())</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;    <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160; </div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;  constexpr ezUInt32 maxSlotIndex = HistogramSize - 1;</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">double</span> x = <a class="code" href="../../db/d78/namespaceez_math.htm#a6f7ee19d0f8e81ff6ae5f394075e3a56">ezMath::Max</a>((value - m_MinInterval).GetSeconds() * m_fInvIntervalRange, 0.0);</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">double</span> i = <a class="code" href="../../db/d78/namespaceez_math.htm#a7f4e38e30c7914d11bcc85b0a4b1c09a">ezMath::Sqrt</a>(x) * (maxSlotIndex - 1) + 1;</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../db/d78/namespaceez_math.htm#ad8009b4da9cb427658d71e30576f209e">ezMath::Min</a>(<span class="keyword">static_cast&lt;</span>ezUInt32<span class="keyword">&gt;</span>(i), maxSlotIndex);</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;}</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160; </div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;EZ_ALWAYS_INLINE <a class="code" href="../../d3/d90/structez_time.htm">ezTime</a> ezIntervalSchedulerBase::GetHistogramSlotValue(ezUInt32 uiIndex)</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;{</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;  <span class="keywordflow">if</span> (uiIndex == 0)</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d3/d90/structez_time.htm#afac0fdd4c1f3e5d63531e6ac0c601cfc">ezTime::MakeZero</a>();</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160; </div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;  constexpr <span class="keywordtype">double</span> norm = 1.0 / (HistogramSize - 2.0);</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">double</span> x = (uiIndex - 1) * norm;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;  <span class="keywordflow">return</span> (x * x) * (m_MaxInterval - m_MinInterval) + m_MinInterval;</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;}</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160; </div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">// static</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">float</span> ezIntervalSchedulerBase::GetRandomZeroToOne(<span class="keywordtype">int</span> pos, ezUInt32&amp; seed)</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;{</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d7/d50/structez_simd_random.htm#a496cdb389bbb68cac53d5cda3998d558">ezSimdRandom::FloatZeroToOne</a>(<a class="code" href="../../d6/d8e/classez_simd_vec4i.htm">ezSimdVec4i</a>(pos), <a class="code" href="../../d5/de5/classez_simd_vec4u.htm">ezSimdVec4u</a>(seed++)).x();</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;}</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160; </div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;constexpr <a class="code" href="../../d3/d90/structez_time.htm">ezTime</a> s_JitterRange = <a class="code" href="../../d3/d90/structez_time.htm#a576f85fc7c01d87dfac0b8b89f8f74ad">ezTime::MakeFromMicroseconds</a>(10);</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160; </div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="comment">// static</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;EZ_ALWAYS_INLINE <a class="code" href="../../d3/d90/structez_time.htm">ezTime</a> ezIntervalSchedulerBase::GetRandomTimeJitter(<span class="keywordtype">int</span> pos, ezUInt32&amp; seed)</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;{</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">float</span> x = <a class="code" href="../../d7/d50/structez_simd_random.htm#a496cdb389bbb68cac53d5cda3998d558">ezSimdRandom::FloatZeroToOne</a>(<a class="code" href="../../d6/d8e/classez_simd_vec4i.htm">ezSimdVec4i</a>(pos), <a class="code" href="../../d5/de5/classez_simd_vec4u.htm">ezSimdVec4u</a>(seed++)).x();</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;  <span class="keywordflow">return</span> s_JitterRange * (x * 2.0f - 1.0f);</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;}</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160; </div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160; </div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../dc/de8/classez_interval_scheduler.htm">ezIntervalScheduler&lt;T&gt;::Data::IsValid</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  <span class="keywordflow">return</span> m_Interval.IsZeroOrPositive();</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;}</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160; </div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../dc/de8/classez_interval_scheduler.htm">ezIntervalScheduler&lt;T&gt;::Data::MarkAsInvalid</a>()</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;{</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;  m_Interval = <a class="code" href="../../d3/d90/structez_time.htm#a7810d213329178ba8332dedc36d0166d">ezTime::MakeFromSeconds</a>(-1);</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;}</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160; </div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160; </div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../dc/de8/classez_interval_scheduler.htm">ezIntervalScheduler&lt;T&gt;::AddOrUpdateWork</a>(<span class="keyword">const</span> T&amp; work, <a class="code" href="../../d3/d90/structez_time.htm">ezTime</a> interval)</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;{</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;  <span class="keyword">typename</span> DataMap::Iterator it;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;  <span class="keywordflow">if</span> (m_WorkIdToData.TryGetValue(work, it))</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  {</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;    <span class="keyword">auto</span>&amp; data = it.Value();</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <a class="code" href="../../d3/d90/structez_time.htm">ezTime</a> oldInterval = data.m_Interval;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keywordflow">if</span> (interval == oldInterval)</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;      <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160; </div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    data.MarkAsInvalid();</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160; </div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;    <span class="keyword">const</span> ezUInt32 uiHistogramIndex = GetHistogramIndex(oldInterval);</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    m_Histogram[uiHistogramIndex]--;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;  }</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160; </div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  Data data;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;  data.m_Work = work;</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;  data.m_Interval = <a class="code" href="../../db/d78/namespaceez_math.htm#a6f7ee19d0f8e81ff6ae5f394075e3a56">ezMath::Max</a>(interval, <a class="code" href="../../d3/d90/structez_time.htm#afac0fdd4c1f3e5d63531e6ac0c601cfc">ezTime::MakeZero</a>());</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  data.m_DueTime = m_CurrentTime + GetRandomZeroToOne(m_Data.GetCount(), m_uiSeed) * data.m_Interval;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;  data.m_LastScheduledTime = m_CurrentTime;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160; </div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  m_WorkIdToData[work] = InsertData(data);</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160; </div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;  <span class="keyword">const</span> ezUInt32 uiHistogramIndex = GetHistogramIndex(data.m_Interval);</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;  m_Histogram[uiHistogramIndex]++;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;}</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160; </div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../dc/de8/classez_interval_scheduler.htm">ezIntervalScheduler&lt;T&gt;::RemoveWork</a>(<span class="keyword">const</span> T&amp; work)</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;{</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;  <span class="keyword">typename</span> DataMap::Iterator it;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;  <span class="keywordflow">if</span> (m_WorkIdToData.Remove(work, &amp;it))</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;  {</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="keyword">auto</span>&amp; data = it.Value();</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    <a class="code" href="../../d3/d90/structez_time.htm">ezTime</a> oldInterval = data.m_Interval;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    data.MarkAsInvalid();</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160; </div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keyword">const</span> ezUInt32 uiHistogramIndex = GetHistogramIndex(oldInterval);</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    m_Histogram[uiHistogramIndex]--;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;  }</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;}</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160; </div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<a class="code" href="../../d3/d90/structez_time.htm">ezTime</a> <a class="code" href="../../dc/de8/classez_interval_scheduler.htm">ezIntervalScheduler&lt;T&gt;::GetInterval</a>(<span class="keyword">const</span> T&amp; work)<span class="keyword"> const</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  <span class="keyword">typename</span> DataMap::Iterator it;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;  EZ_VERIFY(m_WorkIdToData.TryGetValue(work, it), <span class="stringliteral">&quot;Entry not found&quot;</span>);</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;  <span class="keywordflow">return</span> it.Value().m_Interval;</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;}</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160; </div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00109"></a><span class="lineno"><a class="line" href="../../dc/de8/classez_interval_scheduler.htm#a1f493f0814354eb82d6207ab60f5c661">  109</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../dc/de8/classez_interval_scheduler.htm#a1f493f0814354eb82d6207ab60f5c661">ezIntervalScheduler&lt;T&gt;::Update</a>(<a class="code" href="../../d3/d90/structez_time.htm">ezTime</a> deltaTime, <a class="code" href="../../d5/d68/structez_delegate.htm">RunWorkCallback</a> runWorkCallback)</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;{</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;  <span class="keywordflow">if</span> (deltaTime.<a class="code" href="../../d3/d90/structez_time.htm#a46493afe0398bf70c6f0e453d0d8d9c9">IsZeroOrNegative</a>())</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160; </div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;  m_CurrentTime += deltaTime;</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160; </div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;  <span class="keywordflow">if</span> (m_Data.IsEmpty())</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    <span class="keywordflow">return</span>;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160; </div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;  {</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keywordtype">double</span> fNumWork = 0;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="keywordflow">for</span> (ezUInt32 i = 1; i &lt; HistogramSize; ++i)</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;    {</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;      fNumWork += (1.0 / <a class="code" href="../../db/d78/namespaceez_math.htm#a6f7ee19d0f8e81ff6ae5f394075e3a56">ezMath::Max</a>(m_HistogramSlotValues[i], deltaTime).GetSeconds()) * m_Histogram[i];</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    }</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    fNumWork *= deltaTime.<a class="code" href="../../d3/d90/structez_time.htm#aa3f39404ef06ff0dea3bd11750c26962">GetSeconds</a>();</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160; </div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">float</span> fRemainder = <span class="keyword">static_cast&lt;</span><span class="keywordtype">float</span><span class="keyword">&gt;</span>(<a class="code" href="../../db/d78/namespaceez_math.htm#ab6648cbd915168c7e2b5d4a922ee1974">ezMath::Fraction</a>(fNumWork));</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">int</span> pos = <span class="keyword">static_cast&lt;</span><span class="keywordtype">int</span><span class="keyword">&gt;</span>(m_CurrentTime.GetNanoseconds());</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    <span class="keyword">const</span> ezUInt32 extra = GetRandomZeroToOne(pos, m_uiSeed) &lt; fRemainder ? 1 : 0;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;    <span class="keyword">const</span> ezUInt32 uiScheduleCount = <a class="code" href="../../db/d78/namespaceez_math.htm#ad8009b4da9cb427658d71e30576f209e">ezMath::Min</a>(<span class="keyword">static_cast&lt;</span>ezUInt32<span class="keyword">&gt;</span>(fNumWork) + extra + m_Histogram[0], m_Data.GetCount());</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160; </div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    <span class="comment">// schedule work</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;    {</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;      <span class="keyword">auto</span> RunWork = [&amp;](<span class="keyword">typename</span> <a class="code" href="../../d1/ddf/structez_map_base_iterator_base.htm">DataMap::Iterator</a> it, ezUInt32 uiIndex)</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;      {</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        <span class="keyword">auto</span>&amp; data = it.<a class="code" href="../../d1/ddf/structez_map_base_iterator_base.htm#a0751b73f11f2afcbcba1b27c48076c14">Value</a>();</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        <span class="keywordflow">if</span> (data.IsValid())</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        {</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;          <span class="keywordflow">if</span> (runWorkCallback.IsValid())</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;          {</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;            runWorkCallback(data.m_Work, m_CurrentTime - data.m_LastScheduledTime);</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;          }</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160; </div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;          <span class="comment">// add a little bit of random jitter so we don&#39;t end up with perfect timings that might collide with other work</span></div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;          data.m_DueTime = m_CurrentTime + data.m_Interval + GetRandomTimeJitter(uiIndex, m_uiSeed);</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;          data.m_LastScheduledTime = m_CurrentTime;</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        }</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160; </div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        m_ScheduledWork.PushBack(it);</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;      };</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160; </div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;      <span class="keyword">auto</span> it = m_Data.GetIterator();</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;      <span class="keywordflow">for</span> (ezUInt32 i = 0; i &lt; uiScheduleCount; ++i, ++it)</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;      {</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        RunWork(it, i);</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;      }</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160; </div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;      <span class="comment">// check if the next works have a zero interval if so execute them as well to fulfill the every frame guarantee</span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;      ezUInt32 uiNumExtras = 0;</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;      <span class="keywordflow">while</span> (it.<a class="code" href="../../dc/d19/structez_map_base_const_iterator_base.htm#ae7c83670cacfa6e95267d61699635612">IsValid</a>())</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;      {</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        <span class="keyword">auto</span>&amp; data = it.<a class="code" href="../../d1/ddf/structez_map_base_iterator_base.htm#a0751b73f11f2afcbcba1b27c48076c14">Value</a>();</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;        <span class="keywordflow">if</span> (data.m_Interval.IsPositive())</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;          <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160; </div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        RunWork(it, uiNumExtras);</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160; </div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;        ++uiNumExtras;</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;        ++it;</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;      }</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    }</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160; </div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    <span class="comment">// re-sort</span></div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;    <span class="keywordflow">for</span> (<span class="keyword">auto</span>&amp; it : m_ScheduledWork)</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    {</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;      <span class="keywordflow">if</span> (it.Value().IsValid())</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;      {</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        <span class="comment">// make a copy of data and re-insert at new due time</span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        Data data = it.<a class="code" href="../../d1/ddf/structez_map_base_iterator_base.htm#a0751b73f11f2afcbcba1b27c48076c14">Value</a>();</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        m_WorkIdToData[data.m_Work] = InsertData(data);</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;      }</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160; </div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;      m_Data.Remove(it);</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;    }</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    m_ScheduledWork.Clear();</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;  }</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;}</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160; </div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../dc/de8/classez_interval_scheduler.htm">ezIntervalScheduler&lt;T&gt;::Clear</a>()</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;{</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;  m_CurrentTime = <a class="code" href="../../d3/d90/structez_time.htm#afac0fdd4c1f3e5d63531e6ac0c601cfc">ezTime::MakeZero</a>();</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;  m_uiSeed = 0;</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;  <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a0df3a6403e0c7ab2a65997e1e6f6bc14">ezMemoryUtils::ZeroFill</a>(m_Histogram, HistogramSize);</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160; </div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;  m_Data.Clear();</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;  m_WorkIdToData.Clear();</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;}</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160; </div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;EZ_FORCE_INLINE <span class="keyword">typename</span> <a class="code" href="../../d1/ddf/structez_map_base_iterator_base.htm">ezIntervalScheduler&lt;T&gt;::DataMap::Iterator</a> <a class="code" href="../../dc/de8/classez_interval_scheduler.htm">ezIntervalScheduler&lt;T&gt;::InsertData</a>(Data&amp; data)</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;{</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;  <span class="comment">// make sure that we have a unique due time since the map can&#39;t store multiple keys with the same value</span></div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;  <span class="keywordtype">int</span> pos = 0;</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;  <span class="keywordflow">while</span> (m_Data.Contains(data.m_DueTime))</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;  {</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    data.m_DueTime += GetRandomTimeJitter(pos++, m_uiSeed);</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;  }</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160; </div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;  <span class="keywordflow">return</span> m_Data.Insert(data.m_DueTime, data);</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;}</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="astructez_simd_random_htm_a496cdb389bbb68cac53d5cda3998d558"><div class="ttname"><a href="../../d7/d50/structez_simd_random.htm#a496cdb389bbb68cac53d5cda3998d558">ezSimdRandom::FloatZeroToOne</a></div><div class="ttdeci">static ezSimdVec4f FloatZeroToOne(const ezSimdVec4i &amp;vPosition, const ezSimdVec4u &amp;vSeed=ezSimdVec4u::MakeZero())</div><div class="ttdoc">Returns 4 random float values in range [0.0 ; 1.0], ie. including zero and one.</div><div class="ttdef"><b>Definition:</b> SimdRandom_inl.h:24</div></div>
<div class="ttc" id="astructez_time_htm"><div class="ttname"><a href="../../d3/d90/structez_time.htm">ezTime</a></div><div class="ttdoc">The time class encapsulates a double value storing the time in seconds.</div><div class="ttdef"><b>Definition:</b> Time.h:11</div></div>
<div class="ttc" id="astructez_map_base_iterator_base_htm"><div class="ttname"><a href="../../d1/ddf/structez_map_base_iterator_base.htm">ezMapBaseIteratorBase</a></div><div class="ttdoc">Forward Iterator to iterate over all elements in sorted order.</div><div class="ttdef"><b>Definition:</b> Map.h:102</div></div>
<div class="ttc" id="anamespaceez_math_htm_ab6648cbd915168c7e2b5d4a922ee1974"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#ab6648cbd915168c7e2b5d4a922ee1974">ezMath::Fraction</a></div><div class="ttdeci">EZ_ALWAYS_INLINE Type Fraction(Type f)</div><div class="ttdoc">Returns the fraction-part of f.</div><div class="ttdef"><b>Definition:</b> Math_inl.h:305</div></div>
<div class="ttc" id="astructez_map_base_const_iterator_base_htm_ae7c83670cacfa6e95267d61699635612"><div class="ttname"><a href="../../dc/d19/structez_map_base_const_iterator_base.htm#ae7c83670cacfa6e95267d61699635612">ezMapBaseConstIteratorBase::IsValid</a></div><div class="ttdeci">EZ_ALWAYS_INLINE bool IsValid() const</div><div class="ttdoc">Checks whether this iterator points to a valid element.</div><div class="ttdef"><b>Definition:</b> Map.h:27</div></div>
<div class="ttc" id="aclassez_simd_vec4u_htm"><div class="ttname"><a href="../../d5/de5/classez_simd_vec4u.htm">ezSimdVec4u</a></div><div class="ttdoc">A SIMD 4-component vector class of unsigned 32b integers.</div><div class="ttdef"><b>Definition:</b> SimdVec4u.h:6</div></div>
<div class="ttc" id="anamespaceez_math_htm_a7f4e38e30c7914d11bcc85b0a4b1c09a"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a7f4e38e30c7914d11bcc85b0a4b1c09a">ezMath::Sqrt</a></div><div class="ttdeci">EZ_ALWAYS_INLINE double Sqrt(double f)</div><div class="ttdoc">Returns the square root of f.</div><div class="ttdef"><b>Definition:</b> MathDouble_inl.h:99</div></div>
<div class="ttc" id="astructez_time_htm_a46493afe0398bf70c6f0e453d0d8d9c9"><div class="ttname"><a href="../../d3/d90/structez_time.htm#a46493afe0398bf70c6f0e453d0d8d9c9">ezTime::IsZeroOrNegative</a></div><div class="ttdeci">constexpr EZ_ALWAYS_INLINE bool IsZeroOrNegative() const</div><div class="ttdoc">Returns true if the stored time is zero or negative.</div><div class="ttdef"><b>Definition:</b> Time.h:59</div></div>
<div class="ttc" id="astructez_time_htm_a68ad20e2069c826060662cfd319807ea"><div class="ttname"><a href="../../d3/d90/structez_time.htm#a68ad20e2069c826060662cfd319807ea">ezTime::IsZero</a></div><div class="ttdeci">constexpr EZ_ALWAYS_INLINE bool IsZero() const</div><div class="ttdoc">Returns true if the stored time is exactly zero. That typically means the value was not changed from ...</div><div class="ttdef"><b>Definition:</b> Time.h:50</div></div>
<div class="ttc" id="anamespaceez_math_htm_a6f7ee19d0f8e81ff6ae5f394075e3a56"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a6f7ee19d0f8e81ff6ae5f394075e3a56">ezMath::Max</a></div><div class="ttdeci">constexpr EZ_ALWAYS_INLINE T Max(T f1, T f2)</div><div class="ttdoc">Returns the greater value, f1 or f2.</div><div class="ttdef"><b>Definition:</b> Math_inl.h:39</div></div>
<div class="ttc" id="astructez_time_htm_aa3f39404ef06ff0dea3bd11750c26962"><div class="ttname"><a href="../../d3/d90/structez_time.htm#aa3f39404ef06ff0dea3bd11750c26962">ezTime::GetSeconds</a></div><div class="ttdeci">constexpr double GetSeconds() const</div><div class="ttdoc">Returns the seconds value.</div><div class="ttdef"><b>Definition:</b> Time_inl.h:30</div></div>
<div class="ttc" id="aclassez_memory_utils_htm_a0df3a6403e0c7ab2a65997e1e6f6bc14"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm#a0df3a6403e0c7ab2a65997e1e6f6bc14">ezMemoryUtils::ZeroFill</a></div><div class="ttdeci">static void ZeroFill(T *pDestination, size_t uiCount=1)</div><div class="ttdoc">Zeros every byte in the provided memory buffer.</div></div>
<div class="ttc" id="astructez_delegate_htm"><div class="ttname"><a href="../../d5/d68/structez_delegate.htm">ezDelegate</a></div><div class="ttdoc">A generic delegate class which supports static functions and member functions.</div><div class="ttdef"><b>Definition:</b> Delegate.h:75</div></div>
<div class="ttc" id="aclassez_simd_vec4i_htm"><div class="ttname"><a href="../../d6/d8e/classez_simd_vec4i.htm">ezSimdVec4i</a></div><div class="ttdoc">A SIMD 4-component vector class of signed 32b integers.</div><div class="ttdef"><b>Definition:</b> SimdVec4i.h:8</div></div>
<div class="ttc" id="aclassez_interval_scheduler_htm_a1f493f0814354eb82d6207ab60f5c661"><div class="ttname"><a href="../../dc/de8/classez_interval_scheduler.htm#a1f493f0814354eb82d6207ab60f5c661">ezIntervalScheduler::Update</a></div><div class="ttdeci">void Update(ezTime deltaTime, RunWorkCallback runWorkCallback)</div><div class="ttdoc">Advances the scheduler by deltaTime and triggers runWorkCallback for each work that should be run dur...</div><div class="ttdef"><b>Definition:</b> IntervalScheduler_inl.h:109</div></div>
<div class="ttc" id="anamespaceez_math_htm_ad8009b4da9cb427658d71e30576f209e"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#ad8009b4da9cb427658d71e30576f209e">ezMath::Min</a></div><div class="ttdeci">constexpr EZ_ALWAYS_INLINE T Min(T f1, T f2)</div><div class="ttdoc">Returns the smaller value, f1 or f2.</div><div class="ttdef"><b>Definition:</b> Math_inl.h:27</div></div>
<div class="ttc" id="aclassez_interval_scheduler_htm"><div class="ttname"><a href="../../dc/de8/classez_interval_scheduler.htm">ezIntervalScheduler</a></div><div class="ttdef"><b>Definition:</b> IntervalScheduler.h:64</div></div>
<div class="ttc" id="astructez_time_htm_afac0fdd4c1f3e5d63531e6ac0c601cfc"><div class="ttname"><a href="../../d3/d90/structez_time.htm#afac0fdd4c1f3e5d63531e6ac0c601cfc">ezTime::MakeZero</a></div><div class="ttdeci">constexpr static EZ_ALWAYS_INLINE ezTime MakeZero()</div><div class="ttdoc">Creates an instance of ezTime that was initialized with zero.</div><div class="ttdef"><b>Definition:</b> Time.h:42</div></div>
<div class="ttc" id="astructez_time_htm_a7810d213329178ba8332dedc36d0166d"><div class="ttname"><a href="../../d3/d90/structez_time.htm#a7810d213329178ba8332dedc36d0166d">ezTime::MakeFromSeconds</a></div><div class="ttdeci">constexpr static EZ_ALWAYS_INLINE ezTime MakeFromSeconds(double fSeconds)</div><div class="ttdoc">Creates an instance of ezTime that was initialized from seconds.</div><div class="ttdef"><b>Definition:</b> Time.h:30</div></div>
<div class="ttc" id="astructez_time_htm_a576f85fc7c01d87dfac0b8b89f8f74ad"><div class="ttname"><a href="../../d3/d90/structez_time.htm#a576f85fc7c01d87dfac0b8b89f8f74ad">ezTime::MakeFromMicroseconds</a></div><div class="ttdeci">constexpr static EZ_ALWAYS_INLINE ezTime MakeFromMicroseconds(double fMicroseconds)</div><div class="ttdoc">Creates an instance of ezTime that was initialized from microseconds.</div><div class="ttdef"><b>Definition:</b> Time.h:22</div></div>
<div class="ttc" id="astructez_map_base_iterator_base_htm_a0751b73f11f2afcbcba1b27c48076c14"><div class="ttname"><a href="../../d1/ddf/structez_map_base_iterator_base.htm#a0751b73f11f2afcbcba1b27c48076c14">ezMapBaseIteratorBase::Value</a></div><div class="ttdeci">EZ_FORCE_INLINE ValueType &amp; Value()</div><div class="ttdoc">Returns the 'value' of the element that this iterator points to.</div><div class="ttdef"><b>Definition:</b> Map.h:119</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_ac029bbb8a17b4d550e2f9d55d89a029.htm">Core</a></li><li class="navelem"><a class="el" href="../../dir_86f32016d07da093e911d6ad825bb1b6.htm">Utils</a></li><li class="navelem"><a class="el" href="../../dir_8a718b6c41bf3c4b1aafda502c3d1034.htm">Implementation</a></li><li class="navelem"><b>IntervalScheduler_inl.h</b></li>
    <li class="footer">Generated on Mon Mar 3 2025 17:23:39 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
