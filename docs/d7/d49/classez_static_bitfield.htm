<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: ezStaticBitfield&lt; T &gt; Class Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">ezEngine<span id="projectnumber">&#160;Release 25.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('d7/d49/classez_static_bitfield.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="../../d5/d14/classez_static_bitfield-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">ezStaticBitfield&lt; T &gt; Class Template Reference</div></div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-types" name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:afe433e6c67564dddbee486d8b7c2e1d4" id="r_afe433e6c67564dddbee486d8b7c2e1d4"><td class="memItemLeft" align="right" valign="top"><a id="afe433e6c67564dddbee486d8b7c2e1d4" name="afe433e6c67564dddbee486d8b7c2e1d4"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>StorageType</b> = T</td></tr>
<tr class="separator:afe433e6c67564dddbee486d8b7c2e1d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a226cca028691cc50060d6d8fa3bef196" id="r_a226cca028691cc50060d6d8fa3bef196"><td class="memItemLeft" align="right" valign="top"><a id="a226cca028691cc50060d6d8fa3bef196" name="a226cca028691cc50060d6d8fa3bef196"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>ConstIterator</b> = <a class="el" href="../../da/d40/structez_bit_iterator.htm">ezBitIterator</a>&lt; StorageType, true, ezUInt32 &gt;</td></tr>
<tr class="separator:a226cca028691cc50060d6d8fa3bef196"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a4b5144fa732d74afb51d97d2de037db8" id="r_a4b5144fa732d74afb51d97d2de037db8"><td class="memItemLeft" align="right" valign="top"><a id="a4b5144fa732d74afb51d97d2de037db8" name="a4b5144fa732d74afb51d97d2de037db8"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>ezStaticBitfield</b> ()</td></tr>
<tr class="memdesc:a4b5144fa732d74afb51d97d2de037db8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the bitfield to all zero. <br /></td></tr>
<tr class="separator:a4b5144fa732d74afb51d97d2de037db8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad22cb17cacfab8521e2a5289476cfbe4" id="r_ad22cb17cacfab8521e2a5289476cfbe4"><td class="memItemLeft" align="right" valign="top"><a id="ad22cb17cacfab8521e2a5289476cfbe4" name="ad22cb17cacfab8521e2a5289476cfbe4"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsAnyBitSet</b> () const</td></tr>
<tr class="memdesc:ad22cb17cacfab8521e2a5289476cfbe4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if the bitfield is not zero. <br /></td></tr>
<tr class="separator:ad22cb17cacfab8521e2a5289476cfbe4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac08954c1c7161ecf4e568f867286969e" id="r_ac08954c1c7161ecf4e568f867286969e"><td class="memItemLeft" align="right" valign="top"><a id="ac08954c1c7161ecf4e568f867286969e" name="ac08954c1c7161ecf4e568f867286969e"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsNoBitSet</b> () const</td></tr>
<tr class="memdesc:ac08954c1c7161ecf4e568f867286969e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if the bitfield is all zero. <br /></td></tr>
<tr class="separator:ac08954c1c7161ecf4e568f867286969e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2b44eb887d27a71a67f322bf3992e1a0" id="r_a2b44eb887d27a71a67f322bf3992e1a0"><td class="memItemLeft" align="right" valign="top"><a id="a2b44eb887d27a71a67f322bf3992e1a0" name="a2b44eb887d27a71a67f322bf3992e1a0"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>AreAllBitsSet</b> () const</td></tr>
<tr class="memdesc:a2b44eb887d27a71a67f322bf3992e1a0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if the bitfield is not empty and all bits are set to one. <br /></td></tr>
<tr class="separator:a2b44eb887d27a71a67f322bf3992e1a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4266b70a3530425eba1ff01bd9cbd450" id="r_a4266b70a3530425eba1ff01bd9cbd450"><td class="memItemLeft" align="right" valign="top"><a id="a4266b70a3530425eba1ff01bd9cbd450" name="a4266b70a3530425eba1ff01bd9cbd450"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetBit</b> (ezUInt32 uiBit)</td></tr>
<tr class="memdesc:a4266b70a3530425eba1ff01bd9cbd450"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the given bit to 1. <br /></td></tr>
<tr class="separator:a4266b70a3530425eba1ff01bd9cbd450"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a58dc7be6d97276d75a3049547270ede3" id="r_a58dc7be6d97276d75a3049547270ede3"><td class="memItemLeft" align="right" valign="top"><a id="a58dc7be6d97276d75a3049547270ede3" name="a58dc7be6d97276d75a3049547270ede3"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>ClearBit</b> (ezUInt32 uiBit)</td></tr>
<tr class="memdesc:a58dc7be6d97276d75a3049547270ede3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears the given bit to 0. <br /></td></tr>
<tr class="separator:a58dc7be6d97276d75a3049547270ede3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa2284db7917c62103fa7c39b2057a495" id="r_aa2284db7917c62103fa7c39b2057a495"><td class="memItemLeft" align="right" valign="top"><a id="aa2284db7917c62103fa7c39b2057a495" name="aa2284db7917c62103fa7c39b2057a495"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetBitValue</b> (ezUInt32 uiBit, bool bValue)</td></tr>
<tr class="memdesc:aa2284db7917c62103fa7c39b2057a495"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the given bit to 1 or 0 depending on the given value. <br /></td></tr>
<tr class="separator:aa2284db7917c62103fa7c39b2057a495"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a130bfe6663dbb0d19927e499d44a6532" id="r_a130bfe6663dbb0d19927e499d44a6532"><td class="memItemLeft" align="right" valign="top"><a id="a130bfe6663dbb0d19927e499d44a6532" name="a130bfe6663dbb0d19927e499d44a6532"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsBitSet</b> (ezUInt32 uiBit) const</td></tr>
<tr class="memdesc:a130bfe6663dbb0d19927e499d44a6532"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if the given bit is set to 1. <br /></td></tr>
<tr class="separator:a130bfe6663dbb0d19927e499d44a6532"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9c8aa0b8287fb9a6d139a4f45f8e1b7" id="r_ab9c8aa0b8287fb9a6d139a4f45f8e1b7"><td class="memItemLeft" align="right" valign="top"><a id="ab9c8aa0b8287fb9a6d139a4f45f8e1b7" name="ab9c8aa0b8287fb9a6d139a4f45f8e1b7"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>ClearAllBits</b> ()</td></tr>
<tr class="memdesc:ab9c8aa0b8287fb9a6d139a4f45f8e1b7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears all bits to 0. Same as Clear(). <br /></td></tr>
<tr class="separator:ab9c8aa0b8287fb9a6d139a4f45f8e1b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abbfcf7318ab085ca06dcd8eed022060c" id="r_abbfcf7318ab085ca06dcd8eed022060c"><td class="memItemLeft" align="right" valign="top"><a id="abbfcf7318ab085ca06dcd8eed022060c" name="abbfcf7318ab085ca06dcd8eed022060c"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetAllBits</b> ()</td></tr>
<tr class="memdesc:abbfcf7318ab085ca06dcd8eed022060c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets all bits to 1. <br /></td></tr>
<tr class="separator:abbfcf7318ab085ca06dcd8eed022060c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa9a4922565cd058d77ebd71f1333fbb2" id="r_aa9a4922565cd058d77ebd71f1333fbb2"><td class="memItemLeft" align="right" valign="top"><a id="aa9a4922565cd058d77ebd71f1333fbb2" name="aa9a4922565cd058d77ebd71f1333fbb2"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetBitRange</b> (ezUInt32 uiFirstBit, ezUInt32 uiNumBits)</td></tr>
<tr class="memdesc:aa9a4922565cd058d77ebd71f1333fbb2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the range starting at uiFirstBit up to (and including) uiLastBit to 1. <br /></td></tr>
<tr class="separator:aa9a4922565cd058d77ebd71f1333fbb2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45f15761c9ca73cef777994ef949c4c7" id="r_a45f15761c9ca73cef777994ef949c4c7"><td class="memItemLeft" align="right" valign="top"><a id="a45f15761c9ca73cef777994ef949c4c7" name="a45f15761c9ca73cef777994ef949c4c7"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>ClearBitRange</b> (ezUInt32 uiFirstBit, ezUInt32 uiNumBits)</td></tr>
<tr class="memdesc:a45f15761c9ca73cef777994ef949c4c7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears the range starting at uiFirstBit up to (and including) uiLastBit to 0. <br /></td></tr>
<tr class="separator:a45f15761c9ca73cef777994ef949c4c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab01d96409feb7c5eb803d02018d17c22" id="r_ab01d96409feb7c5eb803d02018d17c22"><td class="memItemLeft" align="right" valign="top"><a id="ab01d96409feb7c5eb803d02018d17c22" name="ab01d96409feb7c5eb803d02018d17c22"></a>
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetLowestBitSet</b> () const</td></tr>
<tr class="memdesc:ab01d96409feb7c5eb803d02018d17c22"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the index of the lowest bit that is set. Returns the max index+1 in case no bit is set, at all. <br /></td></tr>
<tr class="separator:ab01d96409feb7c5eb803d02018d17c22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a016cccd3653a7d52a55ee7f528630834" id="r_a016cccd3653a7d52a55ee7f528630834"><td class="memItemLeft" align="right" valign="top"><a id="a016cccd3653a7d52a55ee7f528630834" name="a016cccd3653a7d52a55ee7f528630834"></a>
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetHighestBitSet</b> () const</td></tr>
<tr class="memdesc:a016cccd3653a7d52a55ee7f528630834"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the index of the highest bit that is set. Returns the max index+1 in case no bit is set, at all. <br /></td></tr>
<tr class="separator:a016cccd3653a7d52a55ee7f528630834"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9775d824ceade69a13ed3a21c95c03a0" id="r_a9775d824ceade69a13ed3a21c95c03a0"><td class="memItemLeft" align="right" valign="top"><a id="a9775d824ceade69a13ed3a21c95c03a0" name="a9775d824ceade69a13ed3a21c95c03a0"></a>
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetNumBitsSet</b> () const</td></tr>
<tr class="memdesc:a9775d824ceade69a13ed3a21c95c03a0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the count of how many bits are set in total. <br /></td></tr>
<tr class="separator:a9775d824ceade69a13ed3a21c95c03a0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9daba5221702b65b0cf55cce45d150a6" id="r_a9daba5221702b65b0cf55cce45d150a6"><td class="memItemLeft" align="right" valign="top"><a id="a9daba5221702b65b0cf55cce45d150a6" name="a9daba5221702b65b0cf55cce45d150a6"></a>
T&#160;</td><td class="memItemRight" valign="bottom"><b>GetValue</b> () const</td></tr>
<tr class="memdesc:a9daba5221702b65b0cf55cce45d150a6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the raw uint that stores all bits. <br /></td></tr>
<tr class="separator:a9daba5221702b65b0cf55cce45d150a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:accee6b155d9f434105428528f22afe35" id="r_accee6b155d9f434105428528f22afe35"><td class="memItemLeft" align="right" valign="top"><a id="accee6b155d9f434105428528f22afe35" name="accee6b155d9f434105428528f22afe35"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetValue</b> (T value)</td></tr>
<tr class="memdesc:accee6b155d9f434105428528f22afe35"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the raw uint that stores all bits. <br /></td></tr>
<tr class="separator:accee6b155d9f434105428528f22afe35"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a30b63579f89956cc28569ee272d12287" id="r_a30b63579f89956cc28569ee272d12287"><td class="memItemLeft" align="right" valign="top"><a id="a30b63579f89956cc28569ee272d12287" name="a30b63579f89956cc28569ee272d12287"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Swap</b> (<a class="el" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield</a>&lt; T &gt; &amp;other)</td></tr>
<tr class="memdesc:a30b63579f89956cc28569ee272d12287"><td class="mdescLeft">&#160;</td><td class="mdescRight">Swaps two bitfields. <br /></td></tr>
<tr class="separator:a30b63579f89956cc28569ee272d12287"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2832a180df25cdb046ed440ac2666626" id="r_a2832a180df25cdb046ed440ac2666626"><td class="memItemLeft" align="right" valign="top"><a id="a2832a180df25cdb046ed440ac2666626" name="a2832a180df25cdb046ed440ac2666626"></a>
EZ_ALWAYS_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><b>operator|=</b> (const <a class="el" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield</a>&lt; T &gt; &amp;rhs)</td></tr>
<tr class="memdesc:a2832a180df25cdb046ed440ac2666626"><td class="mdescLeft">&#160;</td><td class="mdescRight">Modifies <em>this</em> to also contain the bits from <em>rhs</em>. <br /></td></tr>
<tr class="separator:a2832a180df25cdb046ed440ac2666626"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a4b927018401aa70460d9bee995e5d5" id="r_a1a4b927018401aa70460d9bee995e5d5"><td class="memItemLeft" align="right" valign="top"><a id="a1a4b927018401aa70460d9bee995e5d5" name="a1a4b927018401aa70460d9bee995e5d5"></a>
EZ_ALWAYS_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><b>operator&amp;=</b> (const <a class="el" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield</a>&lt; T &gt; &amp;rhs)</td></tr>
<tr class="memdesc:a1a4b927018401aa70460d9bee995e5d5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Modifies <em>this</em> to only contain the bits that were set in <em>this</em> and <em>rhs</em>. <br /></td></tr>
<tr class="separator:a1a4b927018401aa70460d9bee995e5d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adef19dc22e9a3736f4f308cd29e18f63" id="r_adef19dc22e9a3736f4f308cd29e18f63"><td class="memItemLeft" align="right" valign="top"><a id="adef19dc22e9a3736f4f308cd29e18f63" name="adef19dc22e9a3736f4f308cd29e18f63"></a>
<a class="el" href="../../d4/da9/structez_result.htm">ezResult</a>&#160;</td><td class="memItemRight" valign="bottom"><b>Serialize</b> (<a class="el" href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a> &amp;inout_writer) const</td></tr>
<tr class="separator:adef19dc22e9a3736f4f308cd29e18f63"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4029c123f434b1351d2fc1ea9701c0cd" id="r_a4029c123f434b1351d2fc1ea9701c0cd"><td class="memItemLeft" align="right" valign="top"><a id="a4029c123f434b1351d2fc1ea9701c0cd" name="a4029c123f434b1351d2fc1ea9701c0cd"></a>
<a class="el" href="../../d4/da9/structez_result.htm">ezResult</a>&#160;</td><td class="memItemRight" valign="bottom"><b>Deserialize</b> (<a class="el" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a> &amp;inout_reader)</td></tr>
<tr class="separator:a4029c123f434b1351d2fc1ea9701c0cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab04832b2e2420dc2a69b2685d0d8ed5d" id="r_ab04832b2e2420dc2a69b2685d0d8ed5d"><td class="memItemLeft" align="right" valign="top"><a id="ab04832b2e2420dc2a69b2685d0d8ed5d" name="ab04832b2e2420dc2a69b2685d0d8ed5d"></a>
<a class="el" href="../../da/d40/structez_bit_iterator.htm">ConstIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetIterator</b> () const</td></tr>
<tr class="memdesc:ab04832b2e2420dc2a69b2685d0d8ed5d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a constant iterator to the very first set bit. Note that due to the way iterating through bits is accelerated, changes to the bitfield while iterating through the bits has undefined behaviour. <br /></td></tr>
<tr class="separator:ab04832b2e2420dc2a69b2685d0d8ed5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7548b3439e95bfdbd0f4a5bff23042d4" id="r_a7548b3439e95bfdbd0f4a5bff23042d4"><td class="memItemLeft" align="right" valign="top"><a id="a7548b3439e95bfdbd0f4a5bff23042d4" name="a7548b3439e95bfdbd0f4a5bff23042d4"></a>
<a class="el" href="../../da/d40/structez_bit_iterator.htm">ConstIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetEndIterator</b> () const</td></tr>
<tr class="memdesc:a7548b3439e95bfdbd0f4a5bff23042d4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an invalid iterator. Needed to support range based for loops. <br /></td></tr>
<tr class="separator:a7548b3439e95bfdbd0f4a5bff23042d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-static-methods" name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:aa5e1e24c2731b397e898985d6ff4ed4e" id="r_aa5e1e24c2731b397e898985d6ff4ed4e"><td class="memItemLeft" align="right" valign="top"><a id="aa5e1e24c2731b397e898985d6ff4ed4e" name="aa5e1e24c2731b397e898985d6ff4ed4e"></a>
static constexpr ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetStorageTypeBitCount</b> ()</td></tr>
<tr class="separator:aa5e1e24c2731b397e898985d6ff4ed4e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe3101cb88d12de5dd7053f941a34716" id="r_afe3101cb88d12de5dd7053f941a34716"><td class="memItemLeft" align="right" valign="top"><a id="afe3101cb88d12de5dd7053f941a34716" name="afe3101cb88d12de5dd7053f941a34716"></a>
static <a class="el" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield</a>&lt; T &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>MakeFromMask</b> (StorageType bits)</td></tr>
<tr class="separator:afe3101cb88d12de5dd7053f941a34716"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="friends" name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:a3ff575c8ea83f07a7a5403cd01401dd4" id="r_a3ff575c8ea83f07a7a5403cd01401dd4"><td class="memTemplParams" colspan="2"><a id="a3ff575c8ea83f07a7a5403cd01401dd4" name="a3ff575c8ea83f07a7a5403cd01401dd4"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:a3ff575c8ea83f07a7a5403cd01401dd4"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield</a>&lt; U &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>operator|</b> (<a class="el" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield</a>&lt; U &gt; lhs, <a class="el" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield</a>&lt; U &gt; rhs)</td></tr>
<tr class="separator:a3ff575c8ea83f07a7a5403cd01401dd4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa3580eb7b2cbfd455f15fa2b68fb126d" id="r_aa3580eb7b2cbfd455f15fa2b68fb126d"><td class="memTemplParams" colspan="2"><a id="aa3580eb7b2cbfd455f15fa2b68fb126d" name="aa3580eb7b2cbfd455f15fa2b68fb126d"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:aa3580eb7b2cbfd455f15fa2b68fb126d"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield</a>&lt; U &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>operator&amp;</b> (<a class="el" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield</a>&lt; U &gt; lhs, <a class="el" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield</a>&lt; U &gt; rhs)</td></tr>
<tr class="separator:aa3580eb7b2cbfd455f15fa2b68fb126d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f7b6c02baf19fc6d297f5a5e112e340" id="r_a5f7b6c02baf19fc6d297f5a5e112e340"><td class="memTemplParams" colspan="2"><a id="a5f7b6c02baf19fc6d297f5a5e112e340" name="a5f7b6c02baf19fc6d297f5a5e112e340"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:a5f7b6c02baf19fc6d297f5a5e112e340"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield</a>&lt; U &gt;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>operator^</b> (<a class="el" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield</a>&lt; U &gt; lhs, <a class="el" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield</a>&lt; U &gt; rhs)</td></tr>
<tr class="separator:a5f7b6c02baf19fc6d297f5a5e112e340"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a02534bec2e9a4d9f04068f82bc43497a" id="r_a02534bec2e9a4d9f04068f82bc43497a"><td class="memTemplParams" colspan="2"><a id="a02534bec2e9a4d9f04068f82bc43497a" name="a02534bec2e9a4d9f04068f82bc43497a"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:a02534bec2e9a4d9f04068f82bc43497a"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>operator==</b> (<a class="el" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield</a>&lt; U &gt; lhs, <a class="el" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield</a>&lt; U &gt; rhs)</td></tr>
<tr class="separator:a02534bec2e9a4d9f04068f82bc43497a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a54411f8af8894bb4549eb77bfdc32813" id="r_a54411f8af8894bb4549eb77bfdc32813"><td class="memTemplParams" colspan="2"><a id="a54411f8af8894bb4549eb77bfdc32813" name="a54411f8af8894bb4549eb77bfdc32813"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:a54411f8af8894bb4549eb77bfdc32813"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>operator!=</b> (<a class="el" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield</a>&lt; U &gt; lhs, <a class="el" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield</a>&lt; U &gt; rhs)</td></tr>
<tr class="separator:a54411f8af8894bb4549eb77bfdc32813"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Containers/<a class="el" href="../../df/d21/_bitfield_8h_source.htm">Bitfield.h</a></li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Containers/Implementation/<a class="el" href="../../de/d58/_bitfield__inl_8h_source.htm">Bitfield_inl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield</a></li>
    <li class="footer">Generated on Fri Jul 11 2025 12:18:01 for ezEngine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
