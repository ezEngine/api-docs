<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Threading/Implementation/ParallelFor_inl.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 25.03</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('df/d21/_parallel_for__inl_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ParallelFor_inl.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;Foundation/Memory/FrameAllocator.h&gt;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;Foundation/Profiling/Profiling.h&gt;</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160; </div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> ElemType&gt;</div>
<div class="line"><a name="l00007"></a><span class="lineno"><a class="line" href="../../dd/dc9/class_array_ptr_task.htm">    7</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../dd/dc9/class_array_ptr_task.htm">ArrayPtrTask</a> final : <span class="keyword">public</span> <a class="code" href="../../dd/d2b/classez_task.htm">ezTask</a></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;{</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;  <a class="code" href="../../dd/dc9/class_array_ptr_task.htm">ArrayPtrTask</a>(<a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;ElemType&gt;</a> payload, <a class="code" href="../../d5/d68/structez_delegate.htm">ezParallelForFunction&lt;ElemType&gt;</a> taskCallback, ezUInt32 uiItemsPerInvocation)</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;    : m_Payload(payload)</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;    , m_uiItemsPerInvocation(uiItemsPerInvocation)</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;    , m_TaskCallback(std::move(taskCallback))</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;  {</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;  }</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160; </div>
<div class="line"><a name="l00017"></a><span class="lineno"><a class="line" href="../../dd/dc9/class_array_ptr_task.htm#ad75a86a3ec86ccaf55b22247249611b9">   17</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../dd/dc9/class_array_ptr_task.htm#ad75a86a3ec86ccaf55b22247249611b9">Execute</a>()<span class="keyword"> override</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    <span class="comment">// Work through all of them.</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;    m_TaskCallback(0, m_Payload);</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;  }</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160; </div>
<div class="line"><a name="l00023"></a><span class="lineno"><a class="line" href="../../dd/dc9/class_array_ptr_task.htm#a1ddc3756a4bc338ff7a63902acdadde7">   23</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../dd/dc9/class_array_ptr_task.htm#a1ddc3756a4bc338ff7a63902acdadde7">ExecuteWithMultiplicity</a>(ezUInt32 uiInvocation)<span class="keyword"> const override</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    <span class="keyword">const</span> ezUInt32 uiSliceStartIndex = uiInvocation * m_uiItemsPerInvocation;</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    <span class="keyword">const</span> ezUInt32 uiRemainingItems = uiSliceStartIndex &gt; m_Payload.<a class="code" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>() ? 0 : m_Payload.<a class="code" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>() - uiSliceStartIndex;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;    <span class="keyword">const</span> ezUInt32 uiSliceItemCount = <a class="code" href="../../db/d78/namespaceez_math.htm#ad8009b4da9cb427658d71e30576f209e">ezMath::Min</a>(m_uiItemsPerInvocation, uiRemainingItems);</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160; </div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    <span class="keywordflow">if</span> (uiSliceItemCount &gt; 0)</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    {</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;      <span class="comment">// Run through the calculated slice.</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;      <span class="keyword">auto</span> taskItemSlice = m_Payload.<a class="code" href="../../dc/dae/classez_array_ptr.htm#a072efd17708468bf61afd5a5a86e2b14">GetSubArray</a>(uiSliceStartIndex, uiSliceItemCount);</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;      m_TaskCallback(uiSliceStartIndex, taskItemSlice);</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    }</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;  }</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160; </div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;  <a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;ElemType&gt;</a> m_Payload;</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  ezUInt32 m_uiItemsPerInvocation;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  <a class="code" href="../../d5/d68/structez_delegate.htm">ezParallelForFunction&lt;ElemType&gt;</a> m_TaskCallback;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;};</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160; </div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> ElemType&gt;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keywordtype">void</span> ezTaskSystem::ParallelForInternal(<a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;ElemType&gt;</a> taskItems, <a class="code" href="../../d5/d68/structez_delegate.htm">ezParallelForFunction&lt;ElemType&gt;</a> taskCallback, <span class="keyword">const</span> <span class="keywordtype">char</span>* taskName, <span class="keyword">const</span> <a class="code" href="../../de/d73/structez_parallel_for_params.htm">ezParallelForParams</a>&amp; params)</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;{</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;  <span class="keywordflow">if</span> (taskItems.<a class="code" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>() &lt;= params.<a class="code" href="../../de/d73/structez_parallel_for_params.htm#af200f4da2e61469d1c1781e99faad2fe">m_uiBinSize</a>)</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;  {</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    <a class="code" href="../../dd/dc9/class_array_ptr_task.htm">ArrayPtrTask&lt;ElemType&gt;</a> arrayPtrTask(taskItems, std::move(taskCallback), taskItems.<a class="code" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>());</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    arrayPtrTask.ConfigureTask(taskName ? taskName : <span class="stringliteral">&quot;Generic ArrayPtr Task&quot;</span>, params.m_NestingMode);</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160; </div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;    EZ_PROFILE_SCOPE(arrayPtrTask.m_sTaskName);</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    arrayPtrTask.Execute();</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;  }</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;  {</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    ezUInt32 uiMultiplicity;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    ezUInt64 uiItemsPerInvocation;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    params.DetermineThreading(taskItems.<a class="code" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>(), uiMultiplicity, uiItemsPerInvocation);</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160; </div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;    <a class="code" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a>* pAllocator = (params.<a class="code" href="../../de/d73/structez_parallel_for_params.htm#a91fbefe0ce3ab60827eaa49f788aa98e">m_pTaskAllocator</a> != <span class="keyword">nullptr</span>) ? params.<a class="code" href="../../de/d73/structez_parallel_for_params.htm#a91fbefe0ce3ab60827eaa49f788aa98e">m_pTaskAllocator</a> : <a class="code" href="../../d0/d49/classez_foundation.htm#a9fec1f3614e3ba19daf06f8c22c91f78">ezFoundation::GetDefaultAllocator</a>();</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160; </div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;    <a class="code" href="../../de/dc1/classez_shared_ptr.htm">ezSharedPtr&lt;ArrayPtrTask&lt;ElemType&gt;</a>&gt; pArrayPtrTask = EZ_NEW(pAllocator, <a class="code" href="../../dd/dc9/class_array_ptr_task.htm">ArrayPtrTask&lt;ElemType&gt;</a>, taskItems, std::move(taskCallback), <span class="keyword">static_cast&lt;</span>ezUInt32<span class="keyword">&gt;</span>(uiItemsPerInvocation));</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    pArrayPtrTask-&gt;ConfigureTask(taskName ? taskName : <span class="stringliteral">&quot;Generic ArrayPtr Task&quot;</span>, params.m_NestingMode);</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160; </div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    pArrayPtrTask-&gt;SetMultiplicity(uiMultiplicity);</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    <a class="code" href="../../df/d37/classez_task_group_i_d.htm">ezTaskGroupID</a> taskGroupId = <a class="code" href="../../d5/d52/classez_task_system.htm#ada4556b5680c386be4cbba563b36f842">ezTaskSystem::StartSingleTask</a>(pArrayPtrTask, <a class="code" href="../../dc/d91/structez_task_priority.htm#a35a9483691d4ae936e99396b0cfc775eab932331c337e15064a229ddf6770ff12">ezTaskPriority::EarlyThisFrame</a>);</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;    <a class="code" href="../../d5/d52/classez_task_system.htm#aba5bc1575aa819798ff41dac13a6ee3b">ezTaskSystem::WaitForGroup</a>(taskGroupId);</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;  }</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;}</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160; </div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> ElemType, <span class="keyword">typename</span> Callback&gt;</div>
<div class="line"><a name="l00073"></a><span class="lineno"><a class="line" href="../../d5/d52/classez_task_system.htm#a734d4d34c2044de9413b7d27285ebdb6">   73</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/d52/classez_task_system.htm#a734d4d34c2044de9413b7d27285ebdb6">ezTaskSystem::ParallelFor</a>(<a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;ElemType&gt;</a> taskItems, Callback taskCallback, <span class="keyword">const</span> <span class="keywordtype">char</span>* szTaskName, <span class="keyword">const</span> <a class="code" href="../../de/d73/structez_parallel_for_params.htm">ezParallelForParams</a>&amp; params)</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;{</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;  <span class="keyword">auto</span> wrappedCallback = [taskCallback = std::move(taskCallback)](</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;                           ezUInt32 <span class="comment">/*uiBaseIndex*/</span>, <a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;ElemType&gt;</a> taskSlice)</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;  { taskCallback(taskSlice); };</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160; </div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  ParallelForInternal&lt;ElemType&gt;(</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    taskItems, <a class="code" href="../../d5/d68/structez_delegate.htm">ezParallelForFunction&lt;ElemType&gt;</a>(std::move(wrappedCallback), ezFrameAllocator::GetCurrentAllocator()), szTaskName, params);</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;}</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160; </div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> ElemType, <span class="keyword">typename</span> Callback&gt;</div>
<div class="line"><a name="l00084"></a><span class="lineno"><a class="line" href="../../d5/d52/classez_task_system.htm#adcf3a78a973404d5e90e7af681971efd">   84</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/d52/classez_task_system.htm#adcf3a78a973404d5e90e7af681971efd">ezTaskSystem::ParallelForSingle</a>(<a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;ElemType&gt;</a> taskItems, Callback taskCallback, <span class="keyword">const</span> <span class="keywordtype">char</span>* szTaskName, <span class="keyword">const</span> <a class="code" href="../../de/d73/structez_parallel_for_params.htm">ezParallelForParams</a>&amp; params)</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;{</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;  <span class="keyword">auto</span> wrappedCallback = [taskCallback = std::move(taskCallback)](ezUInt32 <span class="comment">/*uiBaseIndex*/</span>, <a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;ElemType&gt;</a> taskSlice)</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;  {</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    <span class="comment">// Handing in by non-const&amp; allows to use callbacks with (non-)const&amp; as well as value parameters.</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="keywordflow">for</span> (ElemType&amp; taskItem : taskSlice)</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;    {</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;      taskCallback(taskItem);</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;    }</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  };</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160; </div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;  ParallelForInternal&lt;ElemType&gt;(</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    taskItems, <a class="code" href="../../d5/d68/structez_delegate.htm">ezParallelForFunction&lt;ElemType&gt;</a>(std::move(wrappedCallback), ezFrameAllocator::GetCurrentAllocator()), szTaskName, params);</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;}</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160; </div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> ElemType, <span class="keyword">typename</span> Callback&gt;</div>
<div class="line"><a name="l00100"></a><span class="lineno"><a class="line" href="../../d5/d52/classez_task_system.htm#acd257ab07b2d483cd9ed2a161ce3beb2">  100</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d5/d52/classez_task_system.htm#acd257ab07b2d483cd9ed2a161ce3beb2">ezTaskSystem::ParallelForSingleIndex</a>(</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;  <a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;ElemType&gt;</a> taskItems, Callback taskCallback, <span class="keyword">const</span> <span class="keywordtype">char</span>* szTaskName, <span class="keyword">const</span> <a class="code" href="../../de/d73/structez_parallel_for_params.htm">ezParallelForParams</a>&amp; params)</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;{</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  <span class="keyword">auto</span> wrappedCallback = [taskCallback = std::move(taskCallback)](ezUInt32 uiBaseIndex, <a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;ElemType&gt;</a> taskSlice)</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;  {</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="keywordflow">for</span> (ezUInt32 uiIndex = 0; uiIndex &lt; taskSlice.GetCount(); ++uiIndex)</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    {</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;      <span class="comment">// Handing in by dereferenced pointer allows to use callbacks with (non-)const&amp; as well as value parameters.</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;      taskCallback(uiBaseIndex + uiIndex, *(taskSlice.GetPtr() + uiIndex));</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    }</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;  };</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160; </div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;  ParallelForInternal&lt;ElemType&gt;(</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    taskItems, <a class="code" href="../../d5/d68/structez_delegate.htm">ezParallelForFunction&lt;ElemType&gt;</a>(std::move(wrappedCallback), ezFrameAllocator::GetCurrentAllocator()), szTaskName, params);</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;}</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="astructez_parallel_for_params_htm"><div class="ttname"><a href="../../de/d73/structez_parallel_for_params.htm">ezParallelForParams</a></div><div class="ttdoc">Settings for ezTaskSystem::ParallelFor invocations.</div><div class="ttdef"><b>Definition:</b> TaskSystemDeclarations.h:166</div></div>
<div class="ttc" id="aclassez_task_system_htm_ada4556b5680c386be4cbba563b36f842"><div class="ttname"><a href="../../d5/d52/classez_task_system.htm#ada4556b5680c386be4cbba563b36f842">ezTaskSystem::StartSingleTask</a></div><div class="ttdeci">static ezTaskGroupID StartSingleTask(const ezSharedPtr&lt; ezTask &gt; &amp;pTask, ezTaskPriority::Enum priority, ezOnTaskGroupFinishedCallback callback=ezOnTaskGroupFinishedCallback())</div><div class="ttdoc">A helper function to insert a single task into the system and start it right away....</div><div class="ttdef"><b>Definition:</b> TaskSystemTasks.cpp:20</div></div>
<div class="ttc" id="astructez_parallel_for_params_htm_a91fbefe0ce3ab60827eaa49f788aa98e"><div class="ttname"><a href="../../de/d73/structez_parallel_for_params.htm#a91fbefe0ce3ab60827eaa49f788aa98e">ezParallelForParams::m_pTaskAllocator</a></div><div class="ttdeci">ezAllocator * m_pTaskAllocator</div><div class="ttdoc">The allocator used to for the tasks that the parallel-for uses internally. If null,...</div><div class="ttdef"><b>Definition:</b> TaskSystemDeclarations.h:186</div></div>
<div class="ttc" id="aclassez_task_system_htm_aba5bc1575aa819798ff41dac13a6ee3b"><div class="ttname"><a href="../../d5/d52/classez_task_system.htm#aba5bc1575aa819798ff41dac13a6ee3b">ezTaskSystem::WaitForGroup</a></div><div class="ttdeci">static void WaitForGroup(ezTaskGroupID group)</div><div class="ttdoc">Blocks until all tasks in the given group have finished.</div><div class="ttdef"><b>Definition:</b> TaskSystemGroups.cpp:274</div></div>
<div class="ttc" id="aclassez_array_ptr_htm_a072efd17708468bf61afd5a5a86e2b14"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm#a072efd17708468bf61afd5a5a86e2b14">ezArrayPtr::GetSubArray</a></div><div class="ttdeci">EZ_FORCE_INLINE ezArrayPtr&lt; T &gt; GetSubArray(ezUInt32 uiStart, ezUInt32 uiCount) const</div><div class="ttdoc">Creates a sub-array from this array.</div><div class="ttdef"><b>Definition:</b> ArrayPtr.h:181</div></div>
<div class="ttc" id="aclassez_shared_ptr_htm"><div class="ttname"><a href="../../de/dc1/classez_shared_ptr.htm">ezSharedPtr</a></div><div class="ttdoc">A Shared ptr manages a shared object and destroys that object when no one references it anymore....</div><div class="ttdef"><b>Definition:</b> SharedPtr.h:9</div></div>
<div class="ttc" id="aclassez_task_group_i_d_htm"><div class="ttname"><a href="../../df/d37/classez_task_group_i_d.htm">ezTaskGroupID</a></div><div class="ttdoc">Given out by ezTaskSystem::CreateTaskGroup to identify a task group.</div><div class="ttdef"><b>Definition:</b> TaskSystemDeclarations.h:102</div></div>
<div class="ttc" id="aclassez_array_ptr_htm"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt; ElemType &gt;</a></div></div>
<div class="ttc" id="aclassez_task_system_htm_a734d4d34c2044de9413b7d27285ebdb6"><div class="ttname"><a href="../../d5/d52/classez_task_system.htm#a734d4d34c2044de9413b7d27285ebdb6">ezTaskSystem::ParallelFor</a></div><div class="ttdeci">static void ParallelFor(ezArrayPtr&lt; ElemType &gt; taskItems, Callback taskCallback, const char *szTaskName=nullptr, const ezParallelForParams &amp;params=ezParallelForParams())</div><div class="ttdef"><b>Definition:</b> ParallelFor_inl.h:73</div></div>
<div class="ttc" id="aclassez_task_system_htm_adcf3a78a973404d5e90e7af681971efd"><div class="ttname"><a href="../../d5/d52/classez_task_system.htm#adcf3a78a973404d5e90e7af681971efd">ezTaskSystem::ParallelForSingle</a></div><div class="ttdeci">static void ParallelForSingle(ezArrayPtr&lt; ElemType &gt; taskItems, Callback taskCallback, const char *szTaskName=nullptr, const ezParallelForParams &amp;params=ezParallelForParams())</div><div class="ttdef"><b>Definition:</b> ParallelFor_inl.h:84</div></div>
<div class="ttc" id="aclassez_array_ptr_htm_a9f222695f57e4cf200e07135dbbd7edd"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">ezArrayPtr::GetCount</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezUInt32 GetCount() const</div><div class="ttdoc">Returns the number of elements in the array.</div><div class="ttdef"><b>Definition:</b> ArrayPtr.h:175</div></div>
<div class="ttc" id="aclass_array_ptr_task_htm_ad75a86a3ec86ccaf55b22247249611b9"><div class="ttname"><a href="../../dd/dc9/class_array_ptr_task.htm#ad75a86a3ec86ccaf55b22247249611b9">ArrayPtrTask::Execute</a></div><div class="ttdeci">void Execute() override</div><div class="ttdoc">Override this to implement the task's supposed functionality.</div><div class="ttdef"><b>Definition:</b> ParallelFor_inl.h:17</div></div>
<div class="ttc" id="astructez_delegate_htm"><div class="ttname"><a href="../../d5/d68/structez_delegate.htm">ezDelegate</a></div><div class="ttdoc">A generic delegate class which supports static functions and member functions.</div><div class="ttdef"><b>Definition:</b> Delegate.h:75</div></div>
<div class="ttc" id="aclass_array_ptr_task_htm_a1ddc3756a4bc338ff7a63902acdadde7"><div class="ttname"><a href="../../dd/dc9/class_array_ptr_task.htm#a1ddc3756a4bc338ff7a63902acdadde7">ArrayPtrTask::ExecuteWithMultiplicity</a></div><div class="ttdeci">void ExecuteWithMultiplicity(ezUInt32 uiInvocation) const override</div><div class="ttdoc">Override this to implement the task's supposed functionality.</div><div class="ttdef"><b>Definition:</b> ParallelFor_inl.h:23</div></div>
<div class="ttc" id="aclassez_task_htm"><div class="ttname"><a href="../../dd/d2b/classez_task.htm">ezTask</a></div><div class="ttdoc">Base class for custom tasks.</div><div class="ttdef"><b>Definition:</b> Task.h:9</div></div>
<div class="ttc" id="anamespaceez_math_htm_ad8009b4da9cb427658d71e30576f209e"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#ad8009b4da9cb427658d71e30576f209e">ezMath::Min</a></div><div class="ttdeci">constexpr EZ_ALWAYS_INLINE T Min(T f1, T f2)</div><div class="ttdoc">Returns the smaller value, f1 or f2.</div><div class="ttdef"><b>Definition:</b> Math_inl.h:27</div></div>
<div class="ttc" id="aclassez_allocator_htm"><div class="ttname"><a href="../../d0/dbb/classez_allocator.htm">ezAllocator</a></div><div class="ttdoc">Base class for all memory allocators.</div><div class="ttdef"><b>Definition:</b> Allocator.h:22</div></div>
<div class="ttc" id="aclassez_foundation_htm_a9fec1f3614e3ba19daf06f8c22c91f78"><div class="ttname"><a href="../../d0/d49/classez_foundation.htm#a9fec1f3614e3ba19daf06f8c22c91f78">ezFoundation::GetDefaultAllocator</a></div><div class="ttdeci">static EZ_ALWAYS_INLINE ezAllocator * GetDefaultAllocator()</div><div class="ttdoc">The default allocator can be used for any kind of allocation if no alignment is required.</div><div class="ttdef"><b>Definition:</b> Basics.h:67</div></div>
<div class="ttc" id="astructez_parallel_for_params_htm_af200f4da2e61469d1c1781e99faad2fe"><div class="ttname"><a href="../../de/d73/structez_parallel_for_params.htm#af200f4da2e61469d1c1781e99faad2fe">ezParallelForParams::m_uiBinSize</a></div><div class="ttdeci">ezUInt32 m_uiBinSize</div><div class="ttdef"><b>Definition:</b> TaskSystemDeclarations.h:173</div></div>
<div class="ttc" id="aclassez_task_system_htm_acd257ab07b2d483cd9ed2a161ce3beb2"><div class="ttname"><a href="../../d5/d52/classez_task_system.htm#acd257ab07b2d483cd9ed2a161ce3beb2">ezTaskSystem::ParallelForSingleIndex</a></div><div class="ttdeci">static void ParallelForSingleIndex(ezArrayPtr&lt; ElemType &gt; taskItems, Callback taskCallback, const char *szTaskName=nullptr, const ezParallelForParams &amp;params=ezParallelForParams())</div><div class="ttdef"><b>Definition:</b> ParallelFor_inl.h:100</div></div>
<div class="ttc" id="aclass_array_ptr_task_htm"><div class="ttname"><a href="../../dd/dc9/class_array_ptr_task.htm">ArrayPtrTask</a></div><div class="ttdef"><b>Definition:</b> ParallelFor_inl.h:7</div></div>
<div class="ttc" id="astructez_task_priority_htm_a35a9483691d4ae936e99396b0cfc775eab932331c337e15064a229ddf6770ff12"><div class="ttname"><a href="../../dc/d91/structez_task_priority.htm#a35a9483691d4ae936e99396b0cfc775eab932331c337e15064a229ddf6770ff12">ezTaskPriority::EarlyThisFrame</a></div><div class="ttdeci">@ EarlyThisFrame</div><div class="ttdoc">Highest priority, guaranteed to get finished in this frame.</div><div class="ttdef"><b>Definition:</b> TaskSystemDeclarations.h:42</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_05460f4aa032e23246d68b56847b5fed.htm">Threading</a></li><li class="navelem"><a class="el" href="../../dir_87563d8e459b6b2efd39d0a742560444.htm">Implementation</a></li><li class="navelem"><b>ParallelFor_inl.h</b></li>
    <li class="footer">Generated on Mon Mar 3 2025 17:23:45 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
