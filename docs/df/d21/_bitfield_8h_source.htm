<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Containers/Bitfield.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 23.04</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('df/d21/_bitfield_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Bitfield.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;Foundation/Containers/DynamicArray.h&gt;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;Foundation/Containers/HybridArray.h&gt;</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;Foundation/IO/Stream.h&gt;</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;Foundation/Math/Constants.h&gt;</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160; </div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> Container&gt;</div>
<div class="line"><a name="l00015"></a><span class="lineno"><a class="line" href="../../d2/d62/classez_bitfield.htm">   15</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d2/d62/classez_bitfield.htm">ezBitfield</a></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;{</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;  <a class="code" href="../../d2/d62/classez_bitfield.htm">ezBitfield</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160; </div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;  ezUInt32 <a class="code" href="../../d2/d62/classez_bitfield.htm#acf370dced312910f0aca4ea0449c54d5">GetCount</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160; </div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> = <span class="keywordtype">void</span>&gt;                       <span class="comment">// Template is used to only conditionally compile this function in when it is actually used.</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d2/d62/classez_bitfield.htm#a7541e5112a522c7429f2f18e95fef35c">SetCountUninitialized</a>(ezUInt32 uiBitCount); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d2/d62/classez_bitfield.htm#a5d2e77f2c19d452c5a81fc2da9fb05f2">SetCount</a>(ezUInt32 uiBitCount, <span class="keywordtype">bool</span> bSetNew = <span class="keyword">false</span>); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160; </div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d2/d62/classez_bitfield.htm#ad418a90f02802f36dce70a2ad1c02e06">IsEmpty</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160; </div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d2/d62/classez_bitfield.htm#a7d72c9d5cdef37f42a845d7d191453fd">IsAnyBitSet</a>(ezUInt32 uiFirstBit = 0, ezUInt32 uiNumBits = 0xFFFFFFFF) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160; </div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d2/d62/classez_bitfield.htm#acefb6bbf5ba62038a91adfdfd527344c">IsNoBitSet</a>(ezUInt32 uiFirstBit = 0, ezUInt32 uiNumBits = 0xFFFFFFFF) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160; </div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d2/d62/classez_bitfield.htm#a2df952dade46abd60d44d954c4b5c821">AreAllBitsSet</a>(ezUInt32 uiFirstBit = 0, ezUInt32 uiNumBits = 0xFFFFFFFF) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160; </div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d2/d62/classez_bitfield.htm#aec1f88c81c67279e730d88fcd6e48723">Clear</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160; </div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d2/d62/classez_bitfield.htm#a9e2f730a80533668732441f695ad13fc">SetBit</a>(ezUInt32 uiBit); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160; </div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d2/d62/classez_bitfield.htm#aa6d897045d639889ca47c86452abeaa3">ClearBit</a>(ezUInt32 uiBit); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160; </div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d2/d62/classez_bitfield.htm#ab30c12ebc439eef63010e8c3d5a56471">IsBitSet</a>(ezUInt32 uiBit) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160; </div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d2/d62/classez_bitfield.htm#a33f3b1f5dcb047a2ec667470281e7187">ClearAllBits</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160; </div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d2/d62/classez_bitfield.htm#ac93aa3da4c16de9c15887e99b788e90f">SetAllBits</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160; </div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d2/d62/classez_bitfield.htm#adcad809b5a1ef9295d853af3684c7e1a">SetBitRange</a>(ezUInt32 uiFirstBit, ezUInt32 uiNumBits); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160; </div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d2/d62/classez_bitfield.htm#a97bcb21f9c0e2472111fe7d97948392b">ClearBitRange</a>(ezUInt32 uiFirstBit, ezUInt32 uiNumBits); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160; </div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;  ezUInt32 GetBitInt(ezUInt32 uiBitIndex) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;  ezUInt32 GetBitMask(ezUInt32 uiBitIndex) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160; </div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  ezUInt32 m_uiCount = 0;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;  Container m_Container;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;};</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160; </div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="keyword">using</span> <a class="code" href="../../d2/d62/classez_bitfield.htm">ezDynamicBitfield</a> = <a class="code" href="../../d2/d62/classez_bitfield.htm">ezBitfield&lt;ezDynamicArray&lt;ezUInt32&gt;</a>&gt;;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160; </div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;<span class="keyword">template</span> &lt;ezUInt32 BITS&gt;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="keyword">using</span> <a class="code" href="../../d2/d62/classez_bitfield.htm">ezHybridBitfield</a> = <a class="code" href="../../d2/d62/classez_bitfield.htm">ezBitfield</a>&lt;<a class="code" href="../../d8/deb/classez_hybrid_array.htm">ezHybridArray</a>&lt;ezUInt32, (BITS + 31) / 32&gt;&gt;;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160; </div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160; </div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00086"></a><span class="lineno"><a class="line" href="../../d7/d49/classez_static_bitfield.htm">   86</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield</a></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;{</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;  <span class="keyword">using</span> StorageType = T;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;  <span class="keyword">static</span> constexpr ezUInt32 GetNumBits() { <span class="keywordflow">return</span> ezMath::NumBits&lt;T&gt;(); }</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160; </div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  <a class="code" href="../../d7/d49/classez_static_bitfield.htm#a4b5144fa732d74afb51d97d2de037db8">ezStaticBitfield</a>();</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160; </div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;  <span class="keyword">static</span> <a class="code" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield&lt;T&gt;</a> FromMask(StorageType bits);</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160; </div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d7/d49/classez_static_bitfield.htm#ad22cb17cacfab8521e2a5289476cfbe4">IsAnyBitSet</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160; </div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d7/d49/classez_static_bitfield.htm#ac08954c1c7161ecf4e568f867286969e">IsNoBitSet</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160; </div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d7/d49/classez_static_bitfield.htm#a2b44eb887d27a71a67f322bf3992e1a0">AreAllBitsSet</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160; </div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d7/d49/classez_static_bitfield.htm#a4266b70a3530425eba1ff01bd9cbd450">SetBit</a>(ezUInt32 uiBit); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160; </div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d7/d49/classez_static_bitfield.htm#a58dc7be6d97276d75a3049547270ede3">ClearBit</a>(ezUInt32 uiBit); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160; </div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d7/d49/classez_static_bitfield.htm#a130bfe6663dbb0d19927e499d44a6532">IsBitSet</a>(ezUInt32 uiBit) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160; </div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d7/d49/classez_static_bitfield.htm#ab9c8aa0b8287fb9a6d139a4f45f8e1b7">ClearAllBits</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160; </div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d7/d49/classez_static_bitfield.htm#abbfcf7318ab085ca06dcd8eed022060c">SetAllBits</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160; </div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d7/d49/classez_static_bitfield.htm#aa9a4922565cd058d77ebd71f1333fbb2">SetBitRange</a>(ezUInt32 uiFirstBit, ezUInt32 uiNumBits); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160; </div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d7/d49/classez_static_bitfield.htm#a45f15761c9ca73cef777994ef949c4c7">ClearBitRange</a>(ezUInt32 uiFirstBit, ezUInt32 uiNumBits); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160; </div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;  T <a class="code" href="../../d7/d49/classez_static_bitfield.htm#a9daba5221702b65b0cf55cce45d150a6">GetValue</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160; </div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d7/d49/classez_static_bitfield.htm#accee6b155d9f434105428528f22afe35">SetValue</a>(T value); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160; </div>
<div class="line"><a name="l00134"></a><span class="lineno"><a class="line" href="../../d7/d49/classez_static_bitfield.htm#a2832a180df25cdb046ed440ac2666626">  134</a></span>&#160;  EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d7/d49/classez_static_bitfield.htm#a2832a180df25cdb046ed440ac2666626">operator|=</a>(<span class="keyword">const</span> <a class="code" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield&lt;T&gt;</a>&amp; rhs) { m_Storage |= rhs.m_Storage; }</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160; </div>
<div class="line"><a name="l00137"></a><span class="lineno"><a class="line" href="../../d7/d49/classez_static_bitfield.htm#a1a4b927018401aa70460d9bee995e5d5">  137</a></span>&#160;  EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d7/d49/classez_static_bitfield.htm#a1a4b927018401aa70460d9bee995e5d5">operator&amp;=</a>(<span class="keyword">const</span> <a class="code" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield&lt;T&gt;</a>&amp; rhs) { m_Storage &amp;= rhs.m_Storage; }</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160; </div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;  <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> Serialize(<a class="code" href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a>&amp; inout_writer)<span class="keyword"> const</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    inout_writer.<a class="code" href="../../d6/dcc/classez_stream_writer.htm#af0f04420ac6163d305babf9147b20e60">WriteVersion</a>(s_Version);</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    inout_writer &lt;&lt; m_Storage;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;    <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;  }</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160; </div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;  <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> Deserialize(<a class="code" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a>&amp; inout_reader)</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;  {</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;    <span class="comment">/*auto version =*/</span>inout_reader.ReadVersion(s_Version);</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    inout_reader &gt;&gt; m_Storage;</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;  }</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160; </div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;  <span class="keyword">static</span> constexpr ezTypeVersion s_Version = 1;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160; </div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;  <a class="code" href="../../d7/d49/classez_static_bitfield.htm#a4b5144fa732d74afb51d97d2de037db8">ezStaticBitfield</a>(StorageType initValue)</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;    : m_Storage(initValue)</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;  {</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;  }</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160; </div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;  <span class="keyword">friend</span> <a class="code" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield&lt;U&gt;</a> operator|(<a class="code" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield&lt;U&gt;</a> lhs, <a class="code" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield&lt;U&gt;</a> rhs);</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160; </div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;  <span class="keyword">friend</span> <a class="code" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield&lt;U&gt;</a> operator&amp;(<a class="code" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield&lt;U&gt;</a> lhs, <a class="code" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield&lt;U&gt;</a> rhs);</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160; </div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;  <span class="keyword">friend</span> <a class="code" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield&lt;U&gt;</a> operator^(<a class="code" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield&lt;U&gt;</a> lhs, <a class="code" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield&lt;U&gt;</a> rhs);</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160; </div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;  <span class="keyword">friend</span> <span class="keywordtype">bool</span> operator==(<a class="code" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield&lt;U&gt;</a> lhs, <a class="code" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield&lt;U&gt;</a> rhs);</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160; </div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;  <span class="keyword">friend</span> <span class="keywordtype">bool</span> operator!=(<a class="code" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield&lt;U&gt;</a> lhs, <a class="code" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield&lt;U&gt;</a> rhs);</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160; </div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;  StorageType m_Storage = 0;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;};</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160; </div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="keyword">inline</span> <a class="code" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield&lt;T&gt;</a> operator|(<a class="code" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield&lt;T&gt;</a> lhs, <a class="code" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield&lt;T&gt;</a> rhs)</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;{</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield&lt;T&gt;</a>(lhs.m_Storage | rhs.m_Storage);</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;}</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160; </div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="keyword">inline</span> <a class="code" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield&lt;T&gt;</a> operator&amp;(<a class="code" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield&lt;T&gt;</a> lhs, <a class="code" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield&lt;T&gt;</a> rhs)</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;{</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield&lt;T&gt;</a>(lhs.m_Storage &amp; rhs.m_Storage);</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;}</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160; </div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="keyword">inline</span> <a class="code" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield&lt;T&gt;</a> operator^(<a class="code" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield&lt;T&gt;</a> lhs, <a class="code" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield&lt;T&gt;</a> rhs)</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;{</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield&lt;T&gt;</a>(lhs.m_Storage ^ rhs.m_Storage);</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;}</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160; </div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="keyword">inline</span> <span class="keywordtype">bool</span> operator==(<a class="code" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield&lt;T&gt;</a> lhs, <a class="code" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield&lt;T&gt;</a> rhs)</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;{</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;  <span class="keywordflow">return</span> lhs.m_Storage == rhs.m_Storage;</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;}</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160; </div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;<span class="keyword">inline</span> <span class="keywordtype">bool</span> operator!=(<a class="code" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield&lt;T&gt;</a> lhs, <a class="code" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield&lt;T&gt;</a> rhs)</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;{</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;  <span class="keywordflow">return</span> lhs.m_Storage != rhs.m_Storage;</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;}</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160; </div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="keyword">using</span> <a class="code" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield8</a> = <a class="code" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield&lt;ezUInt8&gt;</a>;</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="keyword">using</span> <a class="code" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield16</a> = <a class="code" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield&lt;ezUInt16&gt;</a>;</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="keyword">using</span> <a class="code" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield32</a> = <a class="code" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield&lt;ezUInt32&gt;</a>;</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="keyword">using</span> <a class="code" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield64</a> = <a class="code" href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield&lt;ezUInt64&gt;</a>;</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160; </div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="preprocessor">#include &lt;Foundation/Containers/Implementation/Bitfield_inl.h&gt;</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassez_static_bitfield_htm_ac08954c1c7161ecf4e568f867286969e"><div class="ttname"><a href="../../d7/d49/classez_static_bitfield.htm#ac08954c1c7161ecf4e568f867286969e">ezStaticBitfield::IsNoBitSet</a></div><div class="ttdeci">bool IsNoBitSet() const</div><div class="ttdoc">Returns true, if the bitfield is all zero.</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:312</div></div>
<div class="ttc" id="aclassez_static_bitfield_htm_a2832a180df25cdb046ed440ac2666626"><div class="ttname"><a href="../../d7/d49/classez_static_bitfield.htm#a2832a180df25cdb046ed440ac2666626">ezStaticBitfield::operator|=</a></div><div class="ttdeci">EZ_ALWAYS_INLINE void operator|=(const ezStaticBitfield&lt; T &gt; &amp;rhs)</div><div class="ttdoc">Modifies this to also contain the bits from rhs.</div><div class="ttdef"><b>Definition:</b> Bitfield.h:134</div></div>
<div class="ttc" id="aclassez_bitfield_htm_aa6d897045d639889ca47c86452abeaa3"><div class="ttname"><a href="../../d2/d62/classez_bitfield.htm#aa6d897045d639889ca47c86452abeaa3">ezBitfield::ClearBit</a></div><div class="ttdeci">void ClearBit(ezUInt32 uiBit)</div><div class="ttdoc">Clears the given bit to 0.</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:184</div></div>
<div class="ttc" id="aclassez_bitfield_htm_ac93aa3da4c16de9c15887e99b788e90f"><div class="ttname"><a href="../../d2/d62/classez_bitfield.htm#ac93aa3da4c16de9c15887e99b788e90f">ezBitfield::SetAllBits</a></div><div class="ttdeci">void SetAllBits()</div><div class="ttdoc">Sets all bits to 1.</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:207</div></div>
<div class="ttc" id="astructez_result_htm"><div class="ttname"><a href="../../d4/da9/structez_result.htm">ezResult</a></div><div class="ttdoc">Default enum for returning failure or success, instead of using a bool.</div><div class="ttdef"><b>Definition:</b> Types.h:50</div></div>
<div class="ttc" id="aclassez_stream_writer_htm"><div class="ttname"><a href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a></div><div class="ttdoc">Interface for binary out (write) streams.</div><div class="ttdef"><b>Definition:</b> Stream.h:106</div></div>
<div class="ttc" id="aclassez_stream_reader_htm"><div class="ttname"><a href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a></div><div class="ttdoc">Interface for binary in (read) streams.</div><div class="ttdef"><b>Definition:</b> Stream.h:21</div></div>
<div class="ttc" id="aclassez_stream_writer_htm_af0f04420ac6163d305babf9147b20e60"><div class="ttname"><a href="../../d6/dcc/classez_stream_writer.htm#af0f04420ac6163d305babf9147b20e60">ezStreamWriter::WriteVersion</a></div><div class="ttdeci">EZ_ALWAYS_INLINE void WriteVersion(ezTypeVersion version)</div><div class="ttdoc">Writes a type version to the stream.</div><div class="ttdef"><b>Definition:</b> Stream_inl.h:154</div></div>
<div class="ttc" id="aclassez_static_bitfield_htm_ab9c8aa0b8287fb9a6d139a4f45f8e1b7"><div class="ttname"><a href="../../d7/d49/classez_static_bitfield.htm#ab9c8aa0b8287fb9a6d139a4f45f8e1b7">ezStaticBitfield::ClearAllBits</a></div><div class="ttdeci">void ClearAllBits()</div><div class="ttdoc">Clears all bits to 0. Same as Clear().</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:355</div></div>
<div class="ttc" id="aclassez_bitfield_htm_ab30c12ebc439eef63010e8c3d5a56471"><div class="ttname"><a href="../../d2/d62/classez_bitfield.htm#ab30c12ebc439eef63010e8c3d5a56471">ezBitfield::IsBitSet</a></div><div class="ttdeci">bool IsBitSet(ezUInt32 uiBit) const</div><div class="ttdoc">Returns true, if the given bit is set to 1.</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:192</div></div>
<div class="ttc" id="aclassez_bitfield_htm_a9e2f730a80533668732441f695ad13fc"><div class="ttname"><a href="../../d2/d62/classez_bitfield.htm#a9e2f730a80533668732441f695ad13fc">ezBitfield::SetBit</a></div><div class="ttdeci">void SetBit(ezUInt32 uiBit)</div><div class="ttdoc">Sets the given bit to 1.</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:176</div></div>
<div class="ttc" id="aclassez_bitfield_htm_acefb6bbf5ba62038a91adfdfd527344c"><div class="ttname"><a href="../../d2/d62/classez_bitfield.htm#acefb6bbf5ba62038a91adfdfd527344c">ezBitfield::IsNoBitSet</a></div><div class="ttdeci">bool IsNoBitSet(ezUInt32 uiFirstBit=0, ezUInt32 uiNumBits=0xFFFFFFFF) const</div><div class="ttdoc">Returns true, if the bitfield is empty or all bits are set to zero.</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:111</div></div>
<div class="ttc" id="aclassez_static_bitfield_htm_a1a4b927018401aa70460d9bee995e5d5"><div class="ttname"><a href="../../d7/d49/classez_static_bitfield.htm#a1a4b927018401aa70460d9bee995e5d5">ezStaticBitfield::operator&amp;=</a></div><div class="ttdeci">EZ_ALWAYS_INLINE void operator&amp;=(const ezStaticBitfield&lt; T &gt; &amp;rhs)</div><div class="ttdoc">Modifies this to only contain the bits that were set in this and rhs.</div><div class="ttdef"><b>Definition:</b> Bitfield.h:137</div></div>
<div class="ttc" id="aclassez_bitfield_htm_a97bcb21f9c0e2472111fe7d97948392b"><div class="ttname"><a href="../../d2/d62/classez_bitfield.htm#a97bcb21f9c0e2472111fe7d97948392b">ezBitfield::ClearBitRange</a></div><div class="ttdeci">void ClearBitRange(ezUInt32 uiFirstBit, ezUInt32 uiNumBits)</div><div class="ttdoc">Clears the range starting at uiFirstBit up to (and including) uiLastBit to 0.</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:252</div></div>
<div class="ttc" id="aclassez_bitfield_htm_a2df952dade46abd60d44d954c4b5c821"><div class="ttname"><a href="../../d2/d62/classez_bitfield.htm#a2df952dade46abd60d44d954c4b5c821">ezBitfield::AreAllBitsSet</a></div><div class="ttdeci">bool AreAllBitsSet(ezUInt32 uiFirstBit=0, ezUInt32 uiNumBits=0xFFFFFFFF) const</div><div class="ttdoc">Returns true, if the bitfield is not empty and all bits are set to one.</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:117</div></div>
<div class="ttc" id="aclassez_static_bitfield_htm_accee6b155d9f434105428528f22afe35"><div class="ttname"><a href="../../d7/d49/classez_static_bitfield.htm#accee6b155d9f434105428528f22afe35">ezStaticBitfield::SetValue</a></div><div class="ttdeci">void SetValue(T value)</div><div class="ttdoc">Sets the raw uint that stores all bits.</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:385</div></div>
<div class="ttc" id="aclassez_bitfield_htm_a7541e5112a522c7429f2f18e95fef35c"><div class="ttname"><a href="../../d2/d62/classez_bitfield.htm#a7541e5112a522c7429f2f18e95fef35c">ezBitfield::SetCountUninitialized</a></div><div class="ttdeci">void SetCountUninitialized(ezUInt32 uiBitCount)</div><div class="ttdoc">Resizes the Bitfield to hold the given number of bits. This version does NOT initialize new bits!</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:24</div></div>
<div class="ttc" id="aclassez_static_bitfield_htm_a4b5144fa732d74afb51d97d2de037db8"><div class="ttname"><a href="../../d7/d49/classez_static_bitfield.htm#a4b5144fa732d74afb51d97d2de037db8">ezStaticBitfield::ezStaticBitfield</a></div><div class="ttdeci">ezStaticBitfield()</div><div class="ttdoc">Initializes the bitfield to all zero.</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:294</div></div>
<div class="ttc" id="aclassez_static_bitfield_htm_a45f15761c9ca73cef777994ef949c4c7"><div class="ttname"><a href="../../d7/d49/classez_static_bitfield.htm#a45f15761c9ca73cef777994ef949c4c7">ezStaticBitfield::ClearBitRange</a></div><div class="ttdeci">void ClearBitRange(ezUInt32 uiFirstBit, ezUInt32 uiNumBits)</div><div class="ttdoc">Clears the range starting at uiFirstBit up to (and including) uiLastBit to 0.</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:325</div></div>
<div class="ttc" id="aclassez_static_bitfield_htm_a58dc7be6d97276d75a3049547270ede3"><div class="ttname"><a href="../../d7/d49/classez_static_bitfield.htm#a58dc7be6d97276d75a3049547270ede3">ezStaticBitfield::ClearBit</a></div><div class="ttdeci">void ClearBit(ezUInt32 uiBit)</div><div class="ttdoc">Clears the given bit to 0.</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:369</div></div>
<div class="ttc" id="aclassez_static_bitfield_htm_a4266b70a3530425eba1ff01bd9cbd450"><div class="ttname"><a href="../../d7/d49/classez_static_bitfield.htm#a4266b70a3530425eba1ff01bd9cbd450">ezStaticBitfield::SetBit</a></div><div class="ttdeci">void SetBit(ezUInt32 uiBit)</div><div class="ttdoc">Sets the given bit to 1.</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:377</div></div>
<div class="ttc" id="aclassez_bitfield_htm_adcad809b5a1ef9295d853af3684c7e1a"><div class="ttname"><a href="../../d2/d62/classez_bitfield.htm#adcad809b5a1ef9295d853af3684c7e1a">ezBitfield::SetBitRange</a></div><div class="ttdeci">void SetBitRange(ezUInt32 uiFirstBit, ezUInt32 uiNumBits)</div><div class="ttdoc">Sets the range starting at uiFirstBit up to (and including) uiLastBit to 1.</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:214</div></div>
<div class="ttc" id="aclassez_bitfield_htm_a7d72c9d5cdef37f42a845d7d191453fd"><div class="ttname"><a href="../../d2/d62/classez_bitfield.htm#a7d72c9d5cdef37f42a845d7d191453fd">ezBitfield::IsAnyBitSet</a></div><div class="ttdeci">bool IsAnyBitSet(ezUInt32 uiFirstBit=0, ezUInt32 uiNumBits=0xFFFFFFFF) const</div><div class="ttdoc">Returns true, if the bitfield is not empty and any bit is 1.</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:59</div></div>
<div class="ttc" id="aclassez_static_bitfield_htm_a130bfe6663dbb0d19927e499d44a6532"><div class="ttname"><a href="../../d7/d49/classez_static_bitfield.htm#a130bfe6663dbb0d19927e499d44a6532">ezStaticBitfield::IsBitSet</a></div><div class="ttdeci">bool IsBitSet(ezUInt32 uiBit) const</div><div class="ttdoc">Returns true, if the given bit is set to 1.</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:361</div></div>
<div class="ttc" id="aclassez_bitfield_htm_aec1f88c81c67279e730d88fcd6e48723"><div class="ttname"><a href="../../d2/d62/classez_bitfield.htm#aec1f88c81c67279e730d88fcd6e48723">ezBitfield::Clear</a></div><div class="ttdeci">void Clear()</div><div class="ttdoc">Discards all bits and sets count to zero.</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:169</div></div>
<div class="ttc" id="aclassez_static_bitfield_htm_ad22cb17cacfab8521e2a5289476cfbe4"><div class="ttname"><a href="../../d7/d49/classez_static_bitfield.htm#ad22cb17cacfab8521e2a5289476cfbe4">ezStaticBitfield::IsAnyBitSet</a></div><div class="ttdeci">bool IsAnyBitSet() const</div><div class="ttdoc">Returns true, if the bitfield is not zero.</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:306</div></div>
<div class="ttc" id="aclassez_bitfield_htm_ad418a90f02802f36dce70a2ad1c02e06"><div class="ttname"><a href="../../d2/d62/classez_bitfield.htm#ad418a90f02802f36dce70a2ad1c02e06">ezBitfield::IsEmpty</a></div><div class="ttdeci">bool IsEmpty() const</div><div class="ttdoc">Returns true, if the bitfield does not store any bits.</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:53</div></div>
<div class="ttc" id="aclassez_static_bitfield_htm_a9daba5221702b65b0cf55cce45d150a6"><div class="ttname"><a href="../../d7/d49/classez_static_bitfield.htm#a9daba5221702b65b0cf55cce45d150a6">ezStaticBitfield::GetValue</a></div><div class="ttdeci">T GetValue() const</div><div class="ttdoc">Returns the raw uint that stores all bits.</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:391</div></div>
<div class="ttc" id="aclassez_bitfield_htm_a5d2e77f2c19d452c5a81fc2da9fb05f2"><div class="ttname"><a href="../../d2/d62/classez_bitfield.htm#a5d2e77f2c19d452c5a81fc2da9fb05f2">ezBitfield::SetCount</a></div><div class="ttdeci">void SetCount(ezUInt32 uiBitCount, bool bSetNew=false)</div><div class="ttdoc">Resizes the Bitfield to hold the given number of bits. If bSetNew is true, new bits are set to 1,...</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:33</div></div>
<div class="ttc" id="aclassez_bitfield_htm_acf370dced312910f0aca4ea0449c54d5"><div class="ttname"><a href="../../d2/d62/classez_bitfield.htm#acf370dced312910f0aca4ea0449c54d5">ezBitfield::GetCount</a></div><div class="ttdeci">ezUInt32 GetCount() const</div><div class="ttdoc">Returns the number of bits that this bitfield stores.</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:16</div></div>
<div class="ttc" id="aclassez_static_bitfield_htm_a2b44eb887d27a71a67f322bf3992e1a0"><div class="ttname"><a href="../../d7/d49/classez_static_bitfield.htm#a2b44eb887d27a71a67f322bf3992e1a0">ezStaticBitfield::AreAllBitsSet</a></div><div class="ttdeci">bool AreAllBitsSet() const</div><div class="ttdoc">Returns true, if the bitfield is not empty and all bits are set to one.</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:318</div></div>
<div class="ttc" id="aclassez_static_bitfield_htm_abbfcf7318ab085ca06dcd8eed022060c"><div class="ttname"><a href="../../d7/d49/classez_static_bitfield.htm#abbfcf7318ab085ca06dcd8eed022060c">ezStaticBitfield::SetAllBits</a></div><div class="ttdeci">void SetAllBits()</div><div class="ttdoc">Sets all bits to 1.</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:349</div></div>
<div class="ttc" id="aclassez_bitfield_htm_a33f3b1f5dcb047a2ec667470281e7187"><div class="ttname"><a href="../../d2/d62/classez_bitfield.htm#a33f3b1f5dcb047a2ec667470281e7187">ezBitfield::ClearAllBits</a></div><div class="ttdeci">void ClearAllBits()</div><div class="ttdoc">Clears all bits to 0.</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:200</div></div>
<div class="ttc" id="aclassez_hybrid_array_htm"><div class="ttname"><a href="../../d8/deb/classez_hybrid_array.htm">ezHybridArray</a></div><div class="ttdoc">A hybrid array uses in-place storage to handle the first few elements without any allocation....</div><div class="ttdef"><b>Definition:</b> HybridArray.h:11</div></div>
<div class="ttc" id="aclassez_bitfield_htm"><div class="ttname"><a href="../../d2/d62/classez_bitfield.htm">ezBitfield</a></div><div class="ttdoc">A template interface, that turns any array class into a bitfield.</div><div class="ttdef"><b>Definition:</b> Bitfield.h:15</div></div>
<div class="ttc" id="aclassez_static_bitfield_htm_aa9a4922565cd058d77ebd71f1333fbb2"><div class="ttname"><a href="../../d7/d49/classez_static_bitfield.htm#aa9a4922565cd058d77ebd71f1333fbb2">ezStaticBitfield::SetBitRange</a></div><div class="ttdeci">void SetBitRange(ezUInt32 uiFirstBit, ezUInt32 uiNumBits)</div><div class="ttdoc">Sets the range starting at uiFirstBit up to (and including) uiLastBit to 1.</div><div class="ttdef"><b>Definition:</b> Bitfield_inl.h:337</div></div>
<div class="ttc" id="aclassez_static_bitfield_htm"><div class="ttname"><a href="../../d7/d49/classez_static_bitfield.htm">ezStaticBitfield</a></div><div class="ttdef"><b>Definition:</b> Bitfield.h:86</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_6b567e6755824bd0b8ffd754b9d67ac0.htm">Containers</a></li><li class="navelem"><b>Bitfield.h</b></li>
    <li class="footer">Generated on Sat Mar 25 2023 19:21:53 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
