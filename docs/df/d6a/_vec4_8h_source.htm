<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Math/Vec4.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 23.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('df/d6a/_vec4_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Vec4.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;Foundation/Math/Math.h&gt;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;Foundation/Math/Vec3.h&gt;</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160; </div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="keyword">class </span><a class="code" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template</a></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;{</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;  <span class="comment">// Means that vectors can be copied using memcpy instead of copy construction.</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;  EZ_DECLARE_POD_TYPE();</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160; </div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;  <span class="keyword">using</span> ComponentType = Type;</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160; </div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;  <span class="comment">// *** Data ***</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;  Type x, y, z, w;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160; </div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;  <span class="comment">// *** Constructors ***</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;  <a class="code" href="../../da/dd2/classez_vec4_template.htm#a58ca6e0fd129b688b3520529bbebe6e7">ezVec4Template</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160; </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;  <a class="code" href="../../da/dd2/classez_vec4_template.htm#a58ca6e0fd129b688b3520529bbebe6e7">ezVec4Template</a>(Type x, Type y, Type z, Type w); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160; </div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;  <span class="keyword">explicit</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm#a58ca6e0fd129b688b3520529bbebe6e7">ezVec4Template</a>(Type v); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;  <span class="comment">// no copy-constructor and operator= since the default-generated ones will be faster</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160; </div>
<div class="line"><a name="l00033"></a><span class="lineno"><a class="line" href="../../da/dd2/classez_vec4_template.htm#a00aa356c272072108462ff79a63d5abf">   33</a></span>&#160;  [[nodiscard]] <span class="keyword">static</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template&lt;Type&gt;</a> <a class="code" href="../../da/dd2/classez_vec4_template.htm#a00aa356c272072108462ff79a63d5abf">MakeNaN</a>() { <span class="keywordflow">return</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template&lt;Type&gt;</a>(ezMath::NaN&lt;Type&gt;()); }</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160; </div>
<div class="line"><a name="l00036"></a><span class="lineno"><a class="line" href="../../da/dd2/classez_vec4_template.htm#a3e098ff8f21023a59101fb152c74ef2d">   36</a></span>&#160;  [[nodiscard]] <span class="keyword">static</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template&lt;Type&gt;</a> <a class="code" href="../../da/dd2/classez_vec4_template.htm#a3e098ff8f21023a59101fb152c74ef2d">MakeZero</a>() { <span class="keywordflow">return</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template&lt;Type&gt;</a>(0); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160; </div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">#if EZ_ENABLED(EZ_MATH_CHECK_FOR_NAN)</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;  <span class="keywordtype">void</span> AssertNotNaN()<span class="keyword"> const</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    EZ_ASSERT_ALWAYS(!<a class="code" href="../../da/dd2/classez_vec4_template.htm#ad6e390f941878d363223b114ac24b99d">IsNaN</a>(), <span class="stringliteral">&quot;This object contains NaN values. This can happen when you forgot to initialize it before using it. Please &quot;</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;                               <span class="stringliteral">&quot;check that all code-paths properly initialize this object.&quot;</span>);</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  }</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160; </div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;  <span class="comment">// *** Conversions ***</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a> <a class="code" href="../../da/dd2/classez_vec4_template.htm#a6c8d04307213bdadfcd37573d0c90204">GetAsVec2</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160; </div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> <a class="code" href="../../da/dd2/classez_vec4_template.htm#a54bfbe91369aa9bd44c87741e1210463">GetAsVec3</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160; </div>
<div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="../../da/dd2/classez_vec4_template.htm#a6557c300a24e1a9d90e16b62b1eeff93">   55</a></span>&#160;  <span class="keyword">const</span> Type* <a class="code" href="../../da/dd2/classez_vec4_template.htm#a6557c300a24e1a9d90e16b62b1eeff93">GetData</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> &amp;x; }</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160; </div>
<div class="line"><a name="l00058"></a><span class="lineno"><a class="line" href="../../da/dd2/classez_vec4_template.htm#afc10b4efa7bbac2009be6e829306f7bf">   58</a></span>&#160;  Type* <a class="code" href="../../da/dd2/classez_vec4_template.htm#afc10b4efa7bbac2009be6e829306f7bf">GetData</a>() { <span class="keywordflow">return</span> &amp;x; }</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160; </div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;  <span class="comment">// *** Functions to set the vector to specific values ***</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm#a734bd1957e14960f1bd196cbad95df07">Set</a>(Type xyzw); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160; </div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm#a734bd1957e14960f1bd196cbad95df07">Set</a>(Type x, Type y, Type z, Type w); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160; </div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm#a85ee092f91af27c089c8416d7c37f20c">SetZero</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160; </div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;  <span class="comment">// *** Functions dealing with length ***</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;  Type <a class="code" href="../../da/dd2/classez_vec4_template.htm#a4f1500ca758c9a12701aef0ce22d622b">GetLength</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160; </div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;  Type <a class="code" href="../../da/dd2/classez_vec4_template.htm#a50e33e22bdbf34a39c02cdc75b0df213">GetLengthSquared</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160; </div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;  Type <a class="code" href="../../da/dd2/classez_vec4_template.htm#acf561c5a792ff2780e6186e9229c530a">GetLengthAndNormalize</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160; </div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template&lt;Type&gt;</a> <a class="code" href="../../da/dd2/classez_vec4_template.htm#af7aabb9168965ce3ee39ccaab263acc7">GetNormalized</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160; </div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm#a1c50b3edbaecadaedf81512cbc85beda">Normalize</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160; </div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;  <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code" href="../../da/dd2/classez_vec4_template.htm#a2a203ee36fe107c320e1e599672064da">NormalizeIfNotZero</a>(<span class="keyword">const</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template&lt;Type&gt;</a>&amp; vFallback = <a class="code" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template&lt;Type&gt;</a>(1, 0, 0, 0), Type fEpsilon = ezMath::SmallEpsilon&lt;Type&gt;()); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160; </div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm#aa848eab17984566c4244748c4002f174">IsZero</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160; </div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm#aa848eab17984566c4244748c4002f174">IsZero</a>(Type fEpsilon) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160; </div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm#a2317d6bedb61f10f08379dc9ad60ff02">IsNormalized</a>(Type fEpsilon = ezMath::HugeEpsilon&lt;Type&gt;()) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160; </div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm#ad6e390f941878d363223b114ac24b99d">IsNaN</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160; </div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm#a52e6bbfa4721c65bfe90e6813a2e3330">IsValid</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160; </div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160; </div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;  <span class="comment">// *** Operators ***</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template&lt;Type&gt;</a> <a class="code" href="../../da/dd2/classez_vec4_template.htm#ab73d56747274b9c81efcc06c1cc218d4">operator-</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160; </div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm#a1dc3e7c5e39ee2f0feec6373f547df30">operator+=</a>(<span class="keyword">const</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template&lt;Type&gt;</a>&amp; vCc); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160; </div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm#a68ab26d7d3d0df4d8a1fd22eeccdb3f4">operator-=</a>(<span class="keyword">const</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template&lt;Type&gt;</a>&amp; vCc); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160; </div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm#a01ef497261e43f39dff0379e4d31dc3f">operator*=</a>(Type f); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160; </div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm#a0e309d10d40a1f37ab4f4e88d4949a67">operator/=</a>(Type f); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160; </div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm#a998a04b66d071e9943026ee4b73cec6a">IsIdentical</a>(<span class="keyword">const</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160; </div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm#a30c9a06bc89e117da8db839f8a64af32">IsEqual</a>(<span class="keyword">const</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template&lt;Type&gt;</a>&amp; rhs, Type fEpsilon) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160; </div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160; </div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;  <span class="comment">// *** Common vector operations ***</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;  Type <a class="code" href="../../da/dd2/classez_vec4_template.htm#a49b21d01ca53426ea97bbcb301b0d878">Dot</a>(<span class="keyword">const</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160; </div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template&lt;Type&gt;</a> <a class="code" href="../../da/dd2/classez_vec4_template.htm#a3d761f0cd1b26c036d406107e0b15934">CompMin</a>(<span class="keyword">const</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160; </div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template&lt;Type&gt;</a> <a class="code" href="../../da/dd2/classez_vec4_template.htm#a7dd284122aeb9fb1191e0f3b4557d684">CompMax</a>(<span class="keyword">const</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160; </div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template&lt;Type&gt;</a> <a class="code" href="../../da/dd2/classez_vec4_template.htm#a461ad8757c32b6019b29a76481ae1863">CompClamp</a>(<span class="keyword">const</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template&lt;Type&gt;</a>&amp; vLow, <span class="keyword">const</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template&lt;Type&gt;</a>&amp; vHigh) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160; </div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template&lt;Type&gt;</a> <a class="code" href="../../da/dd2/classez_vec4_template.htm#ae6ae1e5ba6b2a63221d21e3677c492b9">CompMul</a>(<span class="keyword">const</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160; </div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template&lt;Type&gt;</a> <a class="code" href="../../da/dd2/classez_vec4_template.htm#a4df00207f38d8038e418cb1cacc3882d">CompDiv</a>(<span class="keyword">const</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160; </div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template&lt;Type&gt;</a> <a class="code" href="../../da/dd2/classez_vec4_template.htm#a2f4fd92f542c7ea5f37834c9149766ea">Abs</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;};</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160; </div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160; </div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160; </div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="comment">// *** Operators ***</span></div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160; </div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="keyword">const</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template&lt;Type&gt;</a> operator+(<span class="keyword">const</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template&lt;Type&gt;</a>&amp; v1, <span class="keyword">const</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template&lt;Type&gt;</a>&amp; v2); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160; </div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;<span class="keyword">const</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template&lt;Type&gt;</a> operator-(<span class="keyword">const</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template&lt;Type&gt;</a>&amp; v1, <span class="keyword">const</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template&lt;Type&gt;</a>&amp; v2); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160; </div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160; </div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="keyword">const</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template&lt;Type&gt;</a> operator*(Type f, <span class="keyword">const</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template&lt;Type&gt;</a>&amp; v); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160; </div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="keyword">const</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template&lt;Type&gt;</a> operator*(<span class="keyword">const</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template&lt;Type&gt;</a>&amp; v, Type f); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160; </div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160; </div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="keyword">const</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template&lt;Type&gt;</a> operator/(<span class="keyword">const</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template&lt;Type&gt;</a>&amp; v, Type f); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160; </div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160; </div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="keywordtype">bool</span> operator==(<span class="keyword">const</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template&lt;Type&gt;</a>&amp; v1, <span class="keyword">const</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template&lt;Type&gt;</a>&amp; v2); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160; </div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="keywordtype">bool</span> operator!=(<span class="keyword">const</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template&lt;Type&gt;</a>&amp; v1, <span class="keyword">const</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template&lt;Type&gt;</a>&amp; v2); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160; </div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;<span class="keywordtype">bool</span> operator&lt;(<span class="keyword">const</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template&lt;Type&gt;</a>&amp; v1, <span class="keyword">const</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template&lt;Type&gt;</a>&amp; v2); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160; </div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="preprocessor">#include &lt;Foundation/Math/Implementation/Vec4_inl.h&gt;</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassez_vec4_template_htm_ab73d56747274b9c81efcc06c1cc218d4"><div class="ttname"><a href="../../da/dd2/classez_vec4_template.htm#ab73d56747274b9c81efcc06c1cc218d4">ezVec4Template::operator-</a></div><div class="ttdeci">const ezVec4Template&lt; Type &gt; operator-() const</div><div class="ttdoc">Returns the negation of this vector.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:246</div></div>
<div class="ttc" id="aclassez_vec4_template_htm_a52e6bbfa4721c65bfe90e6813a2e3330"><div class="ttname"><a href="../../da/dd2/classez_vec4_template.htm#a52e6bbfa4721c65bfe90e6813a2e3330">ezVec4Template::IsValid</a></div><div class="ttdeci">bool IsValid() const</div><div class="ttdoc">Checks that all components are finite numbers.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:231</div></div>
<div class="ttc" id="aclassez_vec4_template_htm_a4df00207f38d8038e418cb1cacc3882d"><div class="ttname"><a href="../../da/dd2/classez_vec4_template.htm#a4df00207f38d8038e418cb1cacc3882d">ezVec4Template::CompDiv</a></div><div class="ttdeci">const ezVec4Template&lt; Type &gt; CompDiv(const ezVec4Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the component-wise division of *this and rhs.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:348</div></div>
<div class="ttc" id="astructez_result_htm"><div class="ttname"><a href="../../d4/da9/structez_result.htm">ezResult</a></div><div class="ttdoc">Default enum for returning failure or success, instead of using a bool.</div><div class="ttdef"><b>Definition:</b> Types.h:50</div></div>
<div class="ttc" id="aclassez_vec4_template_htm_ae6ae1e5ba6b2a63221d21e3677c492b9"><div class="ttname"><a href="../../da/dd2/classez_vec4_template.htm#ae6ae1e5ba6b2a63221d21e3677c492b9">ezVec4Template::CompMul</a></div><div class="ttdeci">const ezVec4Template&lt; Type &gt; CompMul(const ezVec4Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the component-wise multiplication of *this and rhs.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:337</div></div>
<div class="ttc" id="aclassez_vec4_template_htm_a6c8d04307213bdadfcd37573d0c90204"><div class="ttname"><a href="../../da/dd2/classez_vec4_template.htm#a6c8d04307213bdadfcd37573d0c90204">ezVec4Template::GetAsVec2</a></div><div class="ttdeci">const ezVec2Template&lt; Type &gt; GetAsVec2() const</div><div class="ttdoc">Returns an ezVec2Template with x and y from this vector.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:94</div></div>
<div class="ttc" id="aclassez_vec4_template_htm_a00aa356c272072108462ff79a63d5abf"><div class="ttname"><a href="../../da/dd2/classez_vec4_template.htm#a00aa356c272072108462ff79a63d5abf">ezVec4Template::MakeNaN</a></div><div class="ttdeci">static ezVec4Template&lt; Type &gt; MakeNaN()</div><div class="ttdoc">Returns a vector with all components set to Not-a-Number (NaN).</div><div class="ttdef"><b>Definition:</b> Vec4.h:33</div></div>
<div class="ttc" id="aclassez_vec4_template_htm_a2f4fd92f542c7ea5f37834c9149766ea"><div class="ttname"><a href="../../da/dd2/classez_vec4_template.htm#a2f4fd92f542c7ea5f37834c9149766ea">ezVec4Template::Abs</a></div><div class="ttdeci">const ezVec4Template&lt; Type &gt; Abs() const</div><div class="ttdoc">brief Returns the component-wise absolute of *this.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:358</div></div>
<div class="ttc" id="aclassez_vec4_template_htm_a58ca6e0fd129b688b3520529bbebe6e7"><div class="ttname"><a href="../../da/dd2/classez_vec4_template.htm#a58ca6e0fd129b688b3520529bbebe6e7">ezVec4Template::ezVec4Template</a></div><div class="ttdeci">ezVec4Template()</div><div class="ttdoc">Default-constructed vector is uninitialized (for speed)</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:63</div></div>
<div class="ttc" id="aclassez_vec4_template_htm_a54bfbe91369aa9bd44c87741e1210463"><div class="ttname"><a href="../../da/dd2/classez_vec4_template.htm#a54bfbe91369aa9bd44c87741e1210463">ezVec4Template::GetAsVec3</a></div><div class="ttdeci">const ezVec3Template&lt; Type &gt; GetAsVec3() const</div><div class="ttdoc">Returns an ezVec3Template with x,y and z from this vector.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:103</div></div>
<div class="ttc" id="aclassez_vec4_template_htm_a7dd284122aeb9fb1191e0f3b4557d684"><div class="ttname"><a href="../../da/dd2/classez_vec4_template.htm#a7dd284122aeb9fb1191e0f3b4557d684">ezVec4Template::CompMax</a></div><div class="ttdeci">const ezVec4Template&lt; Type &gt; CompMax(const ezVec4Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the component-wise maximum of *this and rhs.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:318</div></div>
<div class="ttc" id="aclassez_vec4_template_htm_a3e098ff8f21023a59101fb152c74ef2d"><div class="ttname"><a href="../../da/dd2/classez_vec4_template.htm#a3e098ff8f21023a59101fb152c74ef2d">ezVec4Template::MakeZero</a></div><div class="ttdeci">static ezVec4Template&lt; Type &gt; MakeZero()</div><div class="ttdoc">Returns a vector with all components set to zero.</div><div class="ttdef"><b>Definition:</b> Vec4.h:36</div></div>
<div class="ttc" id="aclassez_vec4_template_htm_a6557c300a24e1a9d90e16b62b1eeff93"><div class="ttname"><a href="../../da/dd2/classez_vec4_template.htm#a6557c300a24e1a9d90e16b62b1eeff93">ezVec4Template::GetData</a></div><div class="ttdeci">const Type * GetData() const</div><div class="ttdoc">Returns the data as an array.</div><div class="ttdef"><b>Definition:</b> Vec4.h:55</div></div>
<div class="ttc" id="aclassez_vec4_template_htm_a01ef497261e43f39dff0379e4d31dc3f"><div class="ttname"><a href="../../da/dd2/classez_vec4_template.htm#a01ef497261e43f39dff0379e4d31dc3f">ezVec4Template::operator*=</a></div><div class="ttdeci">void operator*=(Type f)</div><div class="ttdoc">Multiplies all components of this vector with f.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:276</div></div>
<div class="ttc" id="aclassez_vec4_template_htm_acf561c5a792ff2780e6186e9229c530a"><div class="ttname"><a href="../../da/dd2/classez_vec4_template.htm#acf561c5a792ff2780e6186e9229c530a">ezVec4Template::GetLengthAndNormalize</a></div><div class="ttdeci">Type GetLengthAndNormalize()</div><div class="ttdoc">Normalizes this vector and returns its previous length in one operation. More efficient than calling ...</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:150</div></div>
<div class="ttc" id="aclassez_vec4_template_htm_a4f1500ca758c9a12701aef0ce22d622b"><div class="ttname"><a href="../../da/dd2/classez_vec4_template.htm#a4f1500ca758c9a12701aef0ce22d622b">ezVec4Template::GetLength</a></div><div class="ttdeci">Type GetLength() const</div><div class="ttdoc">Returns the length of the vector.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:136</div></div>
<div class="ttc" id="aclassez_vec4_template_htm_a2a203ee36fe107c320e1e599672064da"><div class="ttname"><a href="../../da/dd2/classez_vec4_template.htm#a2a203ee36fe107c320e1e599672064da">ezVec4Template::NormalizeIfNotZero</a></div><div class="ttdeci">ezResult NormalizeIfNotZero(const ezVec4Template&lt; Type &gt; &amp;vFallback=ezVec4Template&lt; Type &gt;(1, 0, 0, 0), Type fEpsilon=ezMath::SmallEpsilon&lt; Type &gt;())</div><div class="ttdoc">Tries to normalize this vector. If the vector is too close to zero, EZ_FAILURE is returned and the ve...</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:173</div></div>
<div class="ttc" id="aclassez_vec4_template_htm_a85ee092f91af27c089c8416d7c37f20c"><div class="ttname"><a href="../../da/dd2/classez_vec4_template.htm#a85ee092f91af27c089c8416d7c37f20c">ezVec4Template::SetZero</a></div><div class="ttdeci">void SetZero()</div><div class="ttdoc">Sets the vector to all zero.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:130</div></div>
<div class="ttc" id="aclassez_vec4_template_htm_aa848eab17984566c4244748c4002f174"><div class="ttname"><a href="../../da/dd2/classez_vec4_template.htm#aa848eab17984566c4244748c4002f174">ezVec4Template::IsZero</a></div><div class="ttdeci">bool IsZero() const</div><div class="ttdoc">Returns, whether this vector is (0, 0, 0, 0).</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:200</div></div>
<div class="ttc" id="aclassez_vec4_template_htm_ad6e390f941878d363223b114ac24b99d"><div class="ttname"><a href="../../da/dd2/classez_vec4_template.htm#ad6e390f941878d363223b114ac24b99d">ezVec4Template::IsNaN</a></div><div class="ttdeci">bool IsNaN() const</div><div class="ttdoc">Returns true, if any of x, y, z or w is NaN.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:216</div></div>
<div class="ttc" id="aclassez_vec4_template_htm_af7aabb9168965ce3ee39ccaab263acc7"><div class="ttname"><a href="../../da/dd2/classez_vec4_template.htm#af7aabb9168965ce3ee39ccaab263acc7">ezVec4Template::GetNormalized</a></div><div class="ttdeci">const ezVec4Template&lt; Type &gt; GetNormalized() const</div><div class="ttdoc">Returns a normalized version of this vector, leaves the vector itself unchanged.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:158</div></div>
<div class="ttc" id="aclassez_vec4_template_htm_a30c9a06bc89e117da8db839f8a64af32"><div class="ttname"><a href="../../da/dd2/classez_vec4_template.htm#a30c9a06bc89e117da8db839f8a64af32">ezVec4Template::IsEqual</a></div><div class="ttdeci">bool IsEqual(const ezVec4Template&lt; Type &gt; &amp;rhs, Type fEpsilon) const</div><div class="ttdoc">Equality Check with epsilon.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:419</div></div>
<div class="ttc" id="aclassez_vec4_template_htm_a49b21d01ca53426ea97bbcb301b0d878"><div class="ttname"><a href="../../da/dd2/classez_vec4_template.htm#a49b21d01ca53426ea97bbcb301b0d878">ezVec4Template::Dot</a></div><div class="ttdeci">Type Dot(const ezVec4Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the dot-product of the two vectors (commutative, order does not matter).</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:300</div></div>
<div class="ttc" id="aclassez_vec4_template_htm_a998a04b66d071e9943026ee4b73cec6a"><div class="ttname"><a href="../../da/dd2/classez_vec4_template.htm#a998a04b66d071e9943026ee4b73cec6a">ezVec4Template::IsIdentical</a></div><div class="ttdeci">bool IsIdentical(const ezVec4Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Equality Check (bitwise).</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:410</div></div>
<div class="ttc" id="aclassez_vec4_template_htm_a1c50b3edbaecadaedf81512cbc85beda"><div class="ttname"><a href="../../da/dd2/classez_vec4_template.htm#a1c50b3edbaecadaedf81512cbc85beda">ezVec4Template::Normalize</a></div><div class="ttdeci">void Normalize()</div><div class="ttdoc">Normalizes this vector.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:167</div></div>
<div class="ttc" id="aclassez_vec4_template_htm_a0e309d10d40a1f37ab4f4e88d4949a67"><div class="ttname"><a href="../../da/dd2/classez_vec4_template.htm#a0e309d10d40a1f37ab4f4e88d4949a67">ezVec4Template::operator/=</a></div><div class="ttdeci">void operator/=(Type f)</div><div class="ttdoc">Divides all components of this vector by f.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:287</div></div>
<div class="ttc" id="aclassez_vec4_template_htm_a1dc3e7c5e39ee2f0feec6373f547df30"><div class="ttname"><a href="../../da/dd2/classez_vec4_template.htm#a1dc3e7c5e39ee2f0feec6373f547df30">ezVec4Template::operator+=</a></div><div class="ttdeci">void operator+=(const ezVec4Template&lt; Type &gt; &amp;vCc)</div><div class="ttdoc">Adds cc component-wise to this vector.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:254</div></div>
<div class="ttc" id="aclassez_vec4_template_htm_afc10b4efa7bbac2009be6e829306f7bf"><div class="ttname"><a href="../../da/dd2/classez_vec4_template.htm#afc10b4efa7bbac2009be6e829306f7bf">ezVec4Template::GetData</a></div><div class="ttdeci">Type * GetData()</div><div class="ttdoc">Returns the data as an array.</div><div class="ttdef"><b>Definition:</b> Vec4.h:58</div></div>
<div class="ttc" id="aclassez_vec4_template_htm_a461ad8757c32b6019b29a76481ae1863"><div class="ttname"><a href="../../da/dd2/classez_vec4_template.htm#a461ad8757c32b6019b29a76481ae1863">ezVec4Template::CompClamp</a></div><div class="ttdeci">const ezVec4Template&lt; Type &gt; CompClamp(const ezVec4Template&lt; Type &gt; &amp;vLow, const ezVec4Template&lt; Type &gt; &amp;vHigh) const</div><div class="ttdoc">Returns the component-wise clamped value of *this between low and high.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:327</div></div>
<div class="ttc" id="aclassez_vec4_template_htm_a3d761f0cd1b26c036d406107e0b15934"><div class="ttname"><a href="../../da/dd2/classez_vec4_template.htm#a3d761f0cd1b26c036d406107e0b15934">ezVec4Template::CompMin</a></div><div class="ttdeci">const ezVec4Template&lt; Type &gt; CompMin(const ezVec4Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the component-wise minimum of *this and rhs.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:309</div></div>
<div class="ttc" id="aclassez_vec4_template_htm_a50e33e22bdbf34a39c02cdc75b0df213"><div class="ttname"><a href="../../da/dd2/classez_vec4_template.htm#a50e33e22bdbf34a39c02cdc75b0df213">ezVec4Template::GetLengthSquared</a></div><div class="ttdeci">Type GetLengthSquared() const</div><div class="ttdoc">Returns the squared length. Faster, since no square-root is taken. Useful, if one only wants to compa...</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:142</div></div>
<div class="ttc" id="aclassez_vec2_template_htm"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm">ezVec2Template</a></div><div class="ttdoc">A 2-component vector class.</div><div class="ttdef"><b>Definition:</b> Declarations.h:126</div></div>
<div class="ttc" id="aclassez_vec4_template_htm"><div class="ttname"><a href="../../da/dd2/classez_vec4_template.htm">ezVec4Template</a></div><div class="ttdoc">A 4-component vector class.</div><div class="ttdef"><b>Definition:</b> Declarations.h:142</div></div>
<div class="ttc" id="aclassez_vec3_template_htm"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm">ezVec3Template</a></div><div class="ttdoc">A 3-component vector class.</div><div class="ttdef"><b>Definition:</b> Declarations.h:134</div></div>
<div class="ttc" id="aclassez_vec4_template_htm_a734bd1957e14960f1bd196cbad95df07"><div class="ttname"><a href="../../da/dd2/classez_vec4_template.htm#a734bd1957e14960f1bd196cbad95df07">ezVec4Template::Set</a></div><div class="ttdeci">void Set(Type xyzw)</div><div class="ttdoc">Sets all 4 components to this value.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:112</div></div>
<div class="ttc" id="aclassez_vec4_template_htm_a2317d6bedb61f10f08379dc9ad60ff02"><div class="ttname"><a href="../../da/dd2/classez_vec4_template.htm#a2317d6bedb61f10f08379dc9ad60ff02">ezVec4Template::IsNormalized</a></div><div class="ttdeci">bool IsNormalized(Type fEpsilon=ezMath::HugeEpsilon&lt; Type &gt;()) const</div><div class="ttdoc">Returns, whether the squared length of this vector is between 0.999f and 1.001f.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:193</div></div>
<div class="ttc" id="aclassez_vec4_template_htm_a68ab26d7d3d0df4d8a1fd22eeccdb3f4"><div class="ttname"><a href="../../da/dd2/classez_vec4_template.htm#a68ab26d7d3d0df4d8a1fd22eeccdb3f4">ezVec4Template::operator-=</a></div><div class="ttdeci">void operator-=(const ezVec4Template&lt; Type &gt; &amp;vCc)</div><div class="ttdoc">Subtracts cc component-wise from this vector.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:265</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_4ad0f5fbee83b30173e7fecedeea26f0.htm">Math</a></li><li class="navelem"><b>Vec4.h</b></li>
    <li class="footer">Generated on Tue Nov 7 2023 21:39:17 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
