<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: ezMathExpression Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 21.10</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d5/d7c/classez_math_expression.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-attribs">Static Public Attributes</a> &#124;
<a href="../../d5/d00/classez_math_expression-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ezMathExpression Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Parses a math expression from a string and allows efficient evaluation with different variable configurations.  
 <a href="../../d5/d7c/classez_math_expression.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../da/d3b/_math_expression_8h_source.htm">MathExpression.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d6/d38/structez_math_expression_1_1_instruction_type.htm">InstructionType</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a3d401bc5fbbf3794c9619fa3bff84802"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d7c/classez_math_expression.htm#a3d401bc5fbbf3794c9619fa3bff84802">ezMathExpression</a> ()</td></tr>
<tr class="memdesc:a3d401bc5fbbf3794c9619fa3bff84802"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new invalid math expression.  <a href="../../d5/d7c/classez_math_expression.htm#a3d401bc5fbbf3794c9619fa3bff84802">More...</a><br /></td></tr>
<tr class="separator:a3d401bc5fbbf3794c9619fa3bff84802"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d28de4fc3082ddba42c29698b4e796d"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d7c/classez_math_expression.htm#a9d28de4fc3082ddba42c29698b4e796d">ezMathExpression</a> (const char *szExpressionString)</td></tr>
<tr class="memdesc:a9d28de4fc3082ddba42c29698b4e796d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes using a given expression.  <a href="../../d5/d7c/classez_math_expression.htm#a9d28de4fc3082ddba42c29698b4e796d">More...</a><br /></td></tr>
<tr class="separator:a9d28de4fc3082ddba42c29698b4e796d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc734d9566277f1dce5973d9e37d26d6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d7c/classez_math_expression.htm#adc734d9566277f1dce5973d9e37d26d6">Reset</a> (const char *szExpressionString)</td></tr>
<tr class="memdesc:adc734d9566277f1dce5973d9e37d26d6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Reinitializes using the given expression.  <a href="../../d5/d7c/classez_math_expression.htm#adc734d9566277f1dce5973d9e37d26d6">More...</a><br /></td></tr>
<tr class="separator:adc734d9566277f1dce5973d9e37d26d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a0dc5c33a212ce73b9c4d1c1f66c0e3"><td class="memItemLeft" align="right" valign="top"><a id="a6a0dc5c33a212ce73b9c4d1c1f66c0e3"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d7c/classez_math_expression.htm#a6a0dc5c33a212ce73b9c4d1c1f66c0e3">IsValid</a> () const</td></tr>
<tr class="memdesc:a6a0dc5c33a212ce73b9c4d1c1f66c0e3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Whether the expression is valid and can be evaluated. <br /></td></tr>
<tr class="separator:a6a0dc5c33a212ce73b9c4d1c1f66c0e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a3366ca73b5a97ca3297a72e07779ee"><td class="memItemLeft" align="right" valign="top"><a id="a3a3366ca73b5a97ca3297a72e07779ee"></a>
const char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d7c/classez_math_expression.htm#a3a3366ca73b5a97ca3297a72e07779ee">GetExpressionString</a> () const</td></tr>
<tr class="memdesc:a3a3366ca73b5a97ca3297a72e07779ee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the original expression string that this MathExpression can evaluate. <br /></td></tr>
<tr class="separator:a3a3366ca73b5a97ca3297a72e07779ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a363e39f3a58128144f26b4bf7a811aac"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d7c/classez_math_expression.htm#a363e39f3a58128144f26b4bf7a811aac">Evaluate</a> (const <a class="el" href="../../d5/d68/structez_delegate.htm">ezDelegate</a>&lt; double(const <a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a> &amp;)&gt; &amp;variableResolveFunction=[](const <a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a> &amp;) { return 0.0;}) const</td></tr>
<tr class="memdesc:a363e39f3a58128144f26b4bf7a811aac"><td class="mdescLeft">&#160;</td><td class="mdescRight">Evaluates parsed expression with given variable configuration.  <a href="../../d5/d7c/classez_math_expression.htm#a363e39f3a58128144f26b4bf7a811aac">More...</a><br /></td></tr>
<tr class="separator:a363e39f3a58128144f26b4bf7a811aac"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-attribs"></a>
Static Public Attributes</h2></td></tr>
<tr class="memitem:abfc74a289ca35fe2c79fd5f7e824736f"><td class="memItemLeft" align="right" valign="top"><a id="abfc74a289ca35fe2c79fd5f7e824736f"></a>
static const char *&#160;</td><td class="memItemRight" valign="bottom"><b>s_szValidVariableCharacters</b> = &quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_0123456789&quot;</td></tr>
<tr class="separator:abfc74a289ca35fe2c79fd5f7e824736f"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Parses a math expression from a string and allows efficient evaluation with different variable configurations. </p>
<p>Valid is any functional, mathematical expression containing:</p><ul>
<li>Numbers (all numbers treated as doubles): 0123456789.</li>
<li>Binary mathematical operators: * / - +</li>
<li>Unary mathematical operators: - + abs</li>
<li>Parenthesis: ( )</li>
<li>Variables consisting of an arbitrary chain of: abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_0123456789 (s_szValidVariableCharacters) but</li>
<li>Note: 'abs' can be used like a function, e.g. "abs(-4)", though it actually is treated like a unary operator, so "abs -4" works as well. mustn't start with a number. Hard-coded to double. </li>
</ul>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a3d401bc5fbbf3794c9619fa3bff84802"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3d401bc5fbbf3794c9619fa3bff84802">&#9670;&nbsp;</a></span>ezMathExpression() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">ezMathExpression::ezMathExpression </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">default</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a new invalid math expression. </p>
<p>Need to call Reset before you can do anything with it. </p>

</div>
</div>
<a id="a9d28de4fc3082ddba42c29698b4e796d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9d28de4fc3082ddba42c29698b4e796d">&#9670;&nbsp;</a></span>ezMathExpression() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">ezMathExpression::ezMathExpression </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>szExpressionString</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">explicit</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Initializes using a given expression. </p>
<p>If anything goes wrong it is logged and the math expression is in an invalid state. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">log</td><td>If null, default log interface will be used. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a363e39f3a58128144f26b4bf7a811aac"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a363e39f3a58128144f26b4bf7a811aac">&#9670;&nbsp;</a></span>Evaluate()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double ezMathExpression::Evaluate </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d5/d68/structez_delegate.htm">ezDelegate</a>&lt; double(const <a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a> &amp;)&gt; &amp;&#160;</td>
          <td class="paramname"><em>variableResolveFunction</em> = <code>[](const&#160;<a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a>&amp;)&#160;{&#160;return&#160;0.0;&#160;}</code></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Evaluates parsed expression with given variable configuration. </p>
<p>Only way this function can fail is if the expression was not valid. </p><dl class="section see"><dt>See also</dt><dd><a class="el" href="../../d5/d7c/classez_math_expression.htm#a6a0dc5c33a212ce73b9c4d1c1f66c0e3" title="Whether the expression is valid and can be evaluated.">IsValid</a> </dd></dl>

</div>
</div>
<a id="adc734d9566277f1dce5973d9e37d26d6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adc734d9566277f1dce5973d9e37d26d6">&#9670;&nbsp;</a></span>Reset()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ezMathExpression::Reset </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>szExpressionString</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Reinitializes using the given expression. </p>
<p>An empty string or nullptr are considered to be 'invalid' expressions. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/CodeUtils/<a class="el" href="../../da/d3b/_math_expression_8h_source.htm">MathExpression.h</a></li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/CodeUtils/Implementation/MathExpression.cpp</li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d5/d7c/classez_math_expression.htm">ezMathExpression</a></li>
    <li class="footer">Generated on Mon Oct 18 2021 15:33:37 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
