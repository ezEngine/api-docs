<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: const_reverse_pointer_iterator&lt; T &gt; Struct Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 23.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d5/dc9/structconst__reverse__pointer__iterator.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="../../dc/d90/structconst__reverse__pointer__iterator-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">const_reverse_pointer_iterator&lt; T &gt; Struct Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Base class for Pointer like reverse iterators.  
 <a href="../../d5/dc9/structconst__reverse__pointer__iterator.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../db/d5d/_array_iterator_8h_source.htm">ArrayIterator.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for const_reverse_pointer_iterator&lt; T &gt;:</div>
<div class="dyncontent">
<div class="center"><img src="../../dd/dda/structconst__reverse__pointer__iterator__inherit__graph.png" border="0" usemap="#const__reverse__pointer__iterator_3_01_t_01_4_inherit__map" alt="Inheritance graph"/></div>
<map name="const__reverse__pointer__iterator_3_01_t_01_4_inherit__map" id="const__reverse__pointer__iterator_3_01_t_01_4_inherit__map">
<area shape="rect" title="Base class for Pointer like reverse iterators." alt="" coords="31,5,197,47"/>
<area shape="rect" href="../../d3/df2/structreverse__pointer__iterator.htm" title="Non&#45;Const class for Pointer like reverse iterators." alt="" coords="5,95,223,121"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:afd08d732427c5fb7284b00b78a8a74a5"><td class="memItemLeft" align="right" valign="top"><a id="afd08d732427c5fb7284b00b78a8a74a5"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>iterator_category</b> = std::random_access_iterator_tag</td></tr>
<tr class="separator:afd08d732427c5fb7284b00b78a8a74a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04efa127f7af22bfe3e22292c3315527"><td class="memItemLeft" align="right" valign="top"><a id="a04efa127f7af22bfe3e22292c3315527"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>value_type</b> = T</td></tr>
<tr class="separator:a04efa127f7af22bfe3e22292c3315527"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaeedd58b4a23282d63afc1bc79a9be89"><td class="memItemLeft" align="right" valign="top"><a id="aaeedd58b4a23282d63afc1bc79a9be89"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>difference_type</b> = ptrdiff_t</td></tr>
<tr class="separator:aaeedd58b4a23282d63afc1bc79a9be89"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59ccf0058483a7ffd51585bfdb892926"><td class="memItemLeft" align="right" valign="top"><a id="a59ccf0058483a7ffd51585bfdb892926"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>pointer</b> = T *</td></tr>
<tr class="separator:a59ccf0058483a7ffd51585bfdb892926"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc93ba9121f3a5184d905ca2d761a5d0"><td class="memItemLeft" align="right" valign="top"><a id="acc93ba9121f3a5184d905ca2d761a5d0"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>reference</b> = T &amp;</td></tr>
<tr class="separator:acc93ba9121f3a5184d905ca2d761a5d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:af11b2a4f05ee33a8a720974d4b6c23eb"><td class="memItemLeft" align="right" valign="top"><a id="af11b2a4f05ee33a8a720974d4b6c23eb"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>const_reverse_pointer_iterator</b> (T const *pPtr)</td></tr>
<tr class="separator:af11b2a4f05ee33a8a720974d4b6c23eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a118a028c02c99a14e5662acc80fb5d81"><td class="memItemLeft" align="right" valign="top"><a id="a118a028c02c99a14e5662acc80fb5d81"></a>
EZ_ALWAYS_INLINE <a class="el" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">const_reverse_pointer_iterator</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator++</b> ()</td></tr>
<tr class="separator:a118a028c02c99a14e5662acc80fb5d81"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa71cd3fbe65cc136a765fb6c5caafe79"><td class="memItemLeft" align="right" valign="top"><a id="aa71cd3fbe65cc136a765fb6c5caafe79"></a>
EZ_ALWAYS_INLINE <a class="el" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">const_reverse_pointer_iterator</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator--</b> ()</td></tr>
<tr class="separator:aa71cd3fbe65cc136a765fb6c5caafe79"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac4c06cc380e1a189d7f7d95913217683"><td class="memItemLeft" align="right" valign="top"><a id="ac4c06cc380e1a189d7f7d95913217683"></a>
EZ_ALWAYS_INLINE <a class="el" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">const_reverse_pointer_iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><b>operator++</b> (int)</td></tr>
<tr class="separator:ac4c06cc380e1a189d7f7d95913217683"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ea4f7b9d3e8f887756992034535d3e9"><td class="memItemLeft" align="right" valign="top"><a id="a0ea4f7b9d3e8f887756992034535d3e9"></a>
EZ_ALWAYS_INLINE <a class="el" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">const_reverse_pointer_iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><b>operator--</b> (int)</td></tr>
<tr class="separator:a0ea4f7b9d3e8f887756992034535d3e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29b5f02da6bb5e3e8fae6e9c6cfe227c"><td class="memItemLeft" align="right" valign="top"><a id="a29b5f02da6bb5e3e8fae6e9c6cfe227c"></a>
EZ_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator==</b> (const <a class="el" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">const_reverse_pointer_iterator</a> &amp;rhs) const</td></tr>
<tr class="separator:a29b5f02da6bb5e3e8fae6e9c6cfe227c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af864bcdd6ae04313f848d4ad5b0dfc82"><td class="memItemLeft" align="right" valign="top"><a id="af864bcdd6ae04313f848d4ad5b0dfc82"></a>
EZ_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator!=</b> (const <a class="el" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">const_reverse_pointer_iterator</a> &amp;rhs) const</td></tr>
<tr class="separator:af864bcdd6ae04313f848d4ad5b0dfc82"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a757ca3069a2acf1ff9544f7e1d7070a9"><td class="memItemLeft" align="right" valign="top"><a id="a757ca3069a2acf1ff9544f7e1d7070a9"></a>
EZ_ALWAYS_INLINE ptrdiff_t&#160;</td><td class="memItemRight" valign="bottom"><b>operator-</b> (const <a class="el" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">const_reverse_pointer_iterator</a> &amp;rhs) const</td></tr>
<tr class="separator:a757ca3069a2acf1ff9544f7e1d7070a9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af235fe28d72b7fd96d1d8d0f4c7d8bb1"><td class="memItemLeft" align="right" valign="top"><a id="af235fe28d72b7fd96d1d8d0f4c7d8bb1"></a>
EZ_ALWAYS_INLINE <a class="el" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">const_reverse_pointer_iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><b>operator+</b> (ptrdiff_t rhs) const</td></tr>
<tr class="separator:af235fe28d72b7fd96d1d8d0f4c7d8bb1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a25f9defd8f93a87eab4280548e1f356a"><td class="memItemLeft" align="right" valign="top"><a id="a25f9defd8f93a87eab4280548e1f356a"></a>
EZ_ALWAYS_INLINE <a class="el" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">const_reverse_pointer_iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><b>operator-</b> (ptrdiff_t rhs) const</td></tr>
<tr class="separator:a25f9defd8f93a87eab4280548e1f356a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69826708df297fe0bc3ff8437d20dc99"><td class="memItemLeft" align="right" valign="top"><a id="a69826708df297fe0bc3ff8437d20dc99"></a>
EZ_ALWAYS_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><b>operator+=</b> (ptrdiff_t rhs)</td></tr>
<tr class="separator:a69826708df297fe0bc3ff8437d20dc99"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d57c000e438a4d28fa3d31d723b6e5f"><td class="memItemLeft" align="right" valign="top"><a id="a6d57c000e438a4d28fa3d31d723b6e5f"></a>
EZ_ALWAYS_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><b>operator-=</b> (ptrdiff_t rhs)</td></tr>
<tr class="separator:a6d57c000e438a4d28fa3d31d723b6e5f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afdf64f7a41b36945456594448a87aacb"><td class="memItemLeft" align="right" valign="top"><a id="afdf64f7a41b36945456594448a87aacb"></a>
const EZ_ALWAYS_INLINE T &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator*</b> () const</td></tr>
<tr class="separator:afdf64f7a41b36945456594448a87aacb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d57f0308139996880efd76d3af3d53f"><td class="memItemLeft" align="right" valign="top"><a id="a4d57f0308139996880efd76d3af3d53f"></a>
const EZ_ALWAYS_INLINE T *&#160;</td><td class="memItemRight" valign="bottom"><b>operator-&gt;</b> () const</td></tr>
<tr class="separator:a4d57f0308139996880efd76d3af3d53f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9182293fec5d0ce70698f54d7e59694c"><td class="memItemLeft" align="right" valign="top"><a id="a9182293fec5d0ce70698f54d7e59694c"></a>
EZ_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&lt;</b> (const <a class="el" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">const_reverse_pointer_iterator</a> &amp;rhs) const</td></tr>
<tr class="separator:a9182293fec5d0ce70698f54d7e59694c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a189f3c424685b7b29e78c1e2c4ca4b26"><td class="memItemLeft" align="right" valign="top"><a id="a189f3c424685b7b29e78c1e2c4ca4b26"></a>
EZ_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&gt;</b> (const <a class="el" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">const_reverse_pointer_iterator</a> &amp;rhs) const</td></tr>
<tr class="separator:a189f3c424685b7b29e78c1e2c4ca4b26"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68ac8c9144ad4c5135f81feb54a8152f"><td class="memItemLeft" align="right" valign="top"><a id="a68ac8c9144ad4c5135f81feb54a8152f"></a>
EZ_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&lt;=</b> (const <a class="el" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">const_reverse_pointer_iterator</a> &amp;rhs) const</td></tr>
<tr class="separator:a68ac8c9144ad4c5135f81feb54a8152f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6ef92aa4c360af7f7bf40c3a7a4d319b"><td class="memItemLeft" align="right" valign="top"><a id="a6ef92aa4c360af7f7bf40c3a7a4d319b"></a>
EZ_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&gt;=</b> (const <a class="el" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">const_reverse_pointer_iterator</a> &amp;rhs) const</td></tr>
<tr class="separator:a6ef92aa4c360af7f7bf40c3a7a4d319b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa02f2cf94164a6ce63e2824f3e04afae"><td class="memItemLeft" align="right" valign="top"><a id="aa02f2cf94164a6ce63e2824f3e04afae"></a>
const EZ_ALWAYS_INLINE T &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator[]</b> (ptrdiff_t iIndex) const</td></tr>
<tr class="separator:aa02f2cf94164a6ce63e2824f3e04afae"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a728fb43dd50fcb3ed2eb9f99845474fa"><td class="memItemLeft" align="right" valign="top"><a id="a728fb43dd50fcb3ed2eb9f99845474fa"></a>
T *&#160;</td><td class="memItemRight" valign="bottom"><b>m_pPtr</b></td></tr>
<tr class="separator:a728fb43dd50fcb3ed2eb9f99845474fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;class T&gt;<br />
struct const_reverse_pointer_iterator&lt; T &gt;</h3>

<p>Base class for Pointer like reverse iterators. </p>
</div><hr/>The documentation for this struct was generated from the following file:<ul>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Containers/Implementation/<a class="el" href="../../db/d5d/_array_iterator_8h_source.htm">ArrayIterator.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">const_reverse_pointer_iterator</a></li>
    <li class="footer">Generated on Sat Nov 11 2023 17:04:24 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
