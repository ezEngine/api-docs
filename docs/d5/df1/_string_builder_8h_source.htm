<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: Code/Engine/Foundation/Strings/StringBuilder.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 21.6</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search','.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d5/df1/_string_builder_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">StringBuilder.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;Foundation/ThirdParty/utf8/utf8.h&gt;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160; </div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;Foundation/Containers/HybridArray.h&gt;</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;Foundation/Memory/MemoryUtils.h&gt;</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;Foundation/Strings/FormatString.h&gt;</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;Foundation/Strings/Implementation/StringBase.h&gt;</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;Foundation/Strings/PathUtils.h&gt;</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;Foundation/Strings/StringUtils.h&gt;</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;Foundation/Strings/StringView.h&gt;</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160; </div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="keyword">template</span> &lt;ezUInt16 Size&gt;</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="keyword">struct </span><a class="code" href="../../d6/d43/structez_hybrid_string_base.htm">ezHybridStringBase</a>;</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160; </div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="keyword">template</span> &lt;ezUInt16 Size, <span class="keyword">typename</span> AllocatorWrapper&gt;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">struct </span><a class="code" href="../../d4/d53/structez_hybrid_string.htm">ezHybridString</a>;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160; </div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="keyword">class </span><a class="code" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a>;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">class </span><a class="code" href="../../d4/d2e/classez_format_string.htm">ezFormatString</a>;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160; </div>
<div class="line"><a name="l00034"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm">   34</a></span>&#160;<span class="keyword">class </span>EZ_FOUNDATION_DLL <a class="code" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a> : <span class="keyword">public</span> <a class="code" href="../../dd/d69/structez_string_base.htm">ezStringBase</a>&lt;ezStringBuilder&gt;</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;{</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  <a class="code" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>(<a class="code" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a>* pAllocator = <a class="code" href="../../d0/d49/classez_foundation.htm#a54836d4a247f8ea89b716701f1f1a4a7">ezFoundation::GetDefaultAllocator</a>()); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160; </div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  <a class="code" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>(<span class="keyword">const</span> <a class="code" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>&amp; rhs); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160; </div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  <a class="code" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>(<a class="code" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>&amp;&amp; rhs) noexcept;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160; </div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;  <span class="keyword">template</span> &lt;ezUInt16 Size&gt;</div>
<div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#aac726d09612fe6a06cfad3d144cda7ab">   48</a></span>&#160;  <a class="code" href="../../d3/d88/classez_string_builder.htm#aac726d09612fe6a06cfad3d144cda7ab">ezStringBuilder</a>(<span class="keyword">const</span> <a class="code" href="../../d6/d43/structez_hybrid_string_base.htm">ezHybridStringBase&lt;Size&gt;</a>&amp; rhs)</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    : m_uiCharacterCount(rhs.m_uiCharacterCount)</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    , m_Data(rhs.m_Data)</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;  {</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  }</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160; </div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  <span class="keyword">template</span> &lt;ezUInt16 Size, <span class="keyword">typename</span> A&gt;</div>
<div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a38ab7f804a615884732786ffd71381cc">   56</a></span>&#160;  <a class="code" href="../../d3/d88/classez_string_builder.htm#a38ab7f804a615884732786ffd71381cc">ezStringBuilder</a>(<span class="keyword">const</span> <a class="code" href="../../d4/d53/structez_hybrid_string.htm">ezHybridString&lt;Size, A&gt;</a>&amp; rhs)</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;    : m_uiCharacterCount(rhs.m_uiCharacterCount)</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;    , m_Data(rhs.m_Data)</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;  {</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;  }</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160; </div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160; </div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  <span class="keyword">template</span> &lt;ezUInt16 Size&gt;</div>
<div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a6e16d660aed7c664987c73b0f44828ba">   65</a></span>&#160;  <a class="code" href="../../d3/d88/classez_string_builder.htm#a6e16d660aed7c664987c73b0f44828ba">ezStringBuilder</a>(<a class="code" href="../../d6/d43/structez_hybrid_string_base.htm">ezHybridStringBase&lt;Size&gt;</a>&amp;&amp; rhs)</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    : m_uiCharacterCount(rhs.m_uiCharacterCount)</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    , m_Data(std::move(rhs.m_Data))</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;  {</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;  }</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160; </div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;  <span class="keyword">template</span> &lt;ezUInt16 Size, <span class="keyword">typename</span> A&gt;</div>
<div class="line"><a name="l00073"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a266bc4e41bc7247f3094ab0b2555cdcf">   73</a></span>&#160;  <a class="code" href="../../d3/d88/classez_string_builder.htm#a266bc4e41bc7247f3094ab0b2555cdcf">ezStringBuilder</a>(<a class="code" href="../../d4/d53/structez_hybrid_string.htm">ezHybridString&lt;Size, A&gt;</a>&amp;&amp; rhs)</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    : m_uiCharacterCount(rhs.m_uiCharacterCount)</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;    , m_Data(std::move(rhs.m_Data))</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  {</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;  }</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160; </div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;  <a class="code" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* pData1, <span class="keyword">const</span> <span class="keywordtype">char</span>* pData2, <span class="keyword">const</span> <span class="keywordtype">char</span>* pData3 = <span class="keyword">nullptr</span>, <span class="keyword">const</span> <span class="keywordtype">char</span>* pData4 = <span class="keyword">nullptr</span>, <span class="keyword">const</span> <span class="keywordtype">char</span>* pData5 = <span class="keyword">nullptr</span>,</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span>* pData6 = <span class="keyword">nullptr</span>); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160; </div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;  <span class="comment">/* implicit */</span> <a class="code" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szUTF8, <a class="code" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a>* pAllocator = <a class="code" href="../../d0/d49/classez_foundation.htm#a54836d4a247f8ea89b716701f1f1a4a7">ezFoundation::GetDefaultAllocator</a>()); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160; </div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;  <span class="comment">/* implicit */</span> <a class="code" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>(<span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* szWChar, <a class="code" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a>* pAllocator = <a class="code" href="../../d0/d49/classez_foundation.htm#a54836d4a247f8ea89b716701f1f1a4a7">ezFoundation::GetDefaultAllocator</a>()); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160; </div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;  <span class="comment">/* implicit */</span> <a class="code" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>(<span class="keyword">const</span> <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a>&amp; rhs, <a class="code" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a>* pAllocator = <a class="code" href="../../d0/d49/classez_foundation.htm#a54836d4a247f8ea89b716701f1f1a4a7">ezFoundation::GetDefaultAllocator</a>()); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160; </div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> <a class="code" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>&amp; rhs); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160; </div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;  <span class="keywordtype">void</span> operator=(<a class="code" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>&amp;&amp; rhs) noexcept;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160; </div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> <span class="keywordtype">char</span>* szUTF8); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160; </div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* szWChar); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160; </div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;  <span class="keywordtype">void</span> operator=(<span class="keyword">const</span> <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a>&amp; rhs); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160; </div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;  <span class="keyword">template</span> &lt;ezUInt16 Size&gt;</div>
<div class="line"><a name="l00109"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#afe3059b8d9cc7fb696bf12777b58299f">  109</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#afe3059b8d9cc7fb696bf12777b58299f">operator=</a>(<span class="keyword">const</span> <a class="code" href="../../d6/d43/structez_hybrid_string_base.htm">ezHybridStringBase&lt;Size&gt;</a>&amp; rhs)</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;  {</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    m_uiCharacterCount = rhs.m_uiCharacterCount;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    m_Data = rhs.m_Data;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;  }</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160; </div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;  <span class="keyword">template</span> &lt;ezUInt16 Size, <span class="keyword">typename</span> A&gt;</div>
<div class="line"><a name="l00117"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a90e96e864b3a3558c15d075e5003bf5b">  117</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#a90e96e864b3a3558c15d075e5003bf5b">operator=</a>(<span class="keyword">const</span> <a class="code" href="../../d4/d53/structez_hybrid_string.htm">ezHybridString&lt;Size, A&gt;</a>&amp; rhs)</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;  {</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;    m_uiCharacterCount = rhs.m_uiCharacterCount;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    m_Data = rhs.m_Data;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;  }</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160; </div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;  <span class="keyword">template</span> &lt;ezUInt16 Size&gt;</div>
<div class="line"><a name="l00125"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#af0dabcebf009530ed5105e0f007427bf">  125</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#af0dabcebf009530ed5105e0f007427bf">operator=</a>(<a class="code" href="../../d6/d43/structez_hybrid_string_base.htm">ezHybridStringBase&lt;Size&gt;</a>&amp;&amp; rhs)</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;  {</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    m_uiCharacterCount = rhs.m_uiCharacterCount;</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;    m_Data = std::move(rhs.m_Data);</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;  }</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160; </div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;  <span class="keyword">template</span> &lt;ezUInt16 Size, <span class="keyword">typename</span> A&gt;</div>
<div class="line"><a name="l00133"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a12236c90721b3462e8606dd7d7d12433">  133</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#a12236c90721b3462e8606dd7d7d12433">operator=</a>(<a class="code" href="../../d4/d53/structez_hybrid_string.htm">ezHybridString&lt;Size, A&gt;</a>&amp;&amp; rhs) noexcept</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;  {</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    m_uiCharacterCount = rhs.m_uiCharacterCount;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;    m_Data = std::move(rhs.m_Data);</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;  }</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160; </div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;  <a class="code" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a>* GetAllocator() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160; </div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  <span class="keyword">operator</span> <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160; </div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;  <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> GetView() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160; </div>
<div class="line"><a name="l00149"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a9187845cffa1b5c7b921a6b34ba80dd0">  149</a></span>&#160;  EZ_ALWAYS_INLINE <span class="keyword">operator</span> <span class="keyword">const</span> <span class="keywordtype">char</span>*() <span class="keyword">const</span> { <span class="keywordflow">return</span> GetData(); }</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160; </div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;  <span class="keywordtype">void</span> Clear(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160; </div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span>* GetData() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160; </div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;  ezUInt32 GetElementCount() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160; </div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;  ezUInt32 GetCharacterCount() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160; </div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;  <span class="keywordtype">bool</span> IsPureASCII() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160; </div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;  <span class="keywordtype">void</span> ToUpper(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160; </div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;  <span class="keywordtype">void</span> ToLower(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160; </div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;  <span class="keywordtype">void</span> ChangeCharacter(iterator&amp; it, ezUInt32 uiCharacter); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160; </div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;  <span class="keywordtype">void</span> Set(<span class="keyword">const</span> <span class="keywordtype">char</span>* pData1, <span class="keyword">const</span> <span class="keywordtype">char</span>* pData2 = <span class="keyword">nullptr</span>, <span class="keyword">const</span> <span class="keywordtype">char</span>* pData3 = <span class="keyword">nullptr</span>, <span class="keyword">const</span> <span class="keywordtype">char</span>* pData4 = <span class="keyword">nullptr</span>, <span class="keyword">const</span> <span class="keywordtype">char</span>* pData5 = <span class="keyword">nullptr</span>,</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span>* pData6 = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160; </div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;  <span class="keywordtype">void</span> SetSubString_FromTo(<span class="keyword">const</span> <span class="keywordtype">char</span>* pStart, <span class="keyword">const</span> <span class="keywordtype">char</span>* pEnd);</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160; </div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;  <span class="keywordtype">void</span> SetSubString_ElementCount(<span class="keyword">const</span> <span class="keywordtype">char</span>* pStart, ezUInt32 uiElementCount);</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160; </div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;  <span class="keywordtype">void</span> SetSubString_CharacterCount(<span class="keyword">const</span> <span class="keywordtype">char</span>* pStart, ezUInt32 uiCharacterCount);</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160; </div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;  <span class="keywordtype">void</span> Append(ezUInt32 uiChar); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160; </div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;  <span class="keywordtype">void</span> Append(<span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData1, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData2 = <span class="keyword">nullptr</span>, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData3 = <span class="keyword">nullptr</span>, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData4 = <span class="keyword">nullptr</span>,</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData5 = <span class="keyword">nullptr</span>, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData6 = <span class="keyword">nullptr</span>); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160; </div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;  <span class="keywordtype">void</span> Append(<span class="keyword">const</span> <span class="keywordtype">char</span>* pData1, <span class="keyword">const</span> <span class="keywordtype">char</span>* pData2 = <span class="keyword">nullptr</span>, <span class="keyword">const</span> <span class="keywordtype">char</span>* pData3 = <span class="keyword">nullptr</span>, <span class="keyword">const</span> <span class="keywordtype">char</span>* pData4 = <span class="keyword">nullptr</span>,</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span>* pData5 = <span class="keyword">nullptr</span>, <span class="keyword">const</span> <span class="keywordtype">char</span>* pData6 = <span class="keyword">nullptr</span>); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160; </div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;  <span class="keywordtype">void</span> Append(<span class="keyword">const</span> <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a>&amp; view);</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160; </div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;  <span class="keywordtype">void</span> Prepend(ezUInt32 uiChar); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160; </div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;  <span class="keywordtype">void</span> Prepend(<span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData1, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData2 = <span class="keyword">nullptr</span>, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData3 = <span class="keyword">nullptr</span>, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData4 = <span class="keyword">nullptr</span>,</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData5 = <span class="keyword">nullptr</span>, <span class="keyword">const</span> <span class="keywordtype">wchar_t</span>* pData6 = <span class="keyword">nullptr</span>); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160; </div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;  <span class="keywordtype">void</span> Prepend(<span class="keyword">const</span> <span class="keywordtype">char</span>* pData1, <span class="keyword">const</span> <span class="keywordtype">char</span>* pData2 = <span class="keyword">nullptr</span>, <span class="keyword">const</span> <span class="keywordtype">char</span>* pData3 = <span class="keyword">nullptr</span>, <span class="keyword">const</span> <span class="keywordtype">char</span>* pData4 = <span class="keyword">nullptr</span>,</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span>* pData5 = <span class="keyword">nullptr</span>, <span class="keyword">const</span> <span class="keywordtype">char</span>* pData6 = <span class="keyword">nullptr</span>); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160; </div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;  <span class="keywordtype">void</span> Printf(<span class="keyword">const</span> <span class="keywordtype">char</span>* szUtf8Format, ...); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160; </div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;  <span class="keywordtype">void</span> PrintfArgs(<span class="keyword">const</span> <span class="keywordtype">char</span>* szUtf8Format, va_list args); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160; </div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;  <span class="keywordtype">void</span> Format(<span class="keyword">const</span> <a class="code" href="../../d4/d2e/classez_format_string.htm">ezFormatString</a>&amp; <span class="keywordtype">string</span>);</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160; </div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span>... ARGS&gt;</div>
<div class="line"><a name="l00234"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#acc6421d53a2932f4fed29e2b8a312118">  234</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#acc6421d53a2932f4fed29e2b8a312118">Format</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szFormat, ARGS&amp;&amp;... args)</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;  {</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;    Format(<a class="code" href="../../df/d42/classez_format_string_impl.htm">ezFormatStringImpl&lt;ARGS...&gt;</a>(szFormat, std::forward&lt;ARGS&gt;(args)...));</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;  }</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160; </div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;  <span class="keywordtype">void</span> AppendFormat(<span class="keyword">const</span> <a class="code" href="../../d4/d2e/classez_format_string.htm">ezFormatString</a>&amp; <span class="keywordtype">string</span>);</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160; </div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span>... ARGS&gt;</div>
<div class="line"><a name="l00244"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a2af0cad3e9a5baec55a556dd1401708c">  244</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#a2af0cad3e9a5baec55a556dd1401708c">AppendFormat</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szFormat, ARGS&amp;&amp;... args)</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;  {</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    AppendFormat(<a class="code" href="../../df/d42/classez_format_string_impl.htm">ezFormatStringImpl&lt;ARGS...&gt;</a>(szFormat, std::forward&lt;ARGS&gt;(args)...));</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;  }</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160; </div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;  <span class="keywordtype">void</span> PrependFormat(<span class="keyword">const</span> <a class="code" href="../../d4/d2e/classez_format_string.htm">ezFormatString</a>&amp; <span class="keywordtype">string</span>);</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160; </div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span>... ARGS&gt;</div>
<div class="line"><a name="l00254"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#a0aab851b5f86af410d3c54df6dbdb903">  254</a></span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d3/d88/classez_string_builder.htm#a0aab851b5f86af410d3c54df6dbdb903">PrependFormat</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szFormat, ARGS&amp;&amp;... args)</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;  {</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;    PrependFormat(<a class="code" href="../../df/d42/classez_format_string_impl.htm">ezFormatStringImpl&lt;ARGS...&gt;</a>(szFormat, std::forward&lt;ARGS&gt;(args)...));</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;  }</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160; </div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;  <span class="keywordtype">void</span> Shrink(ezUInt32 uiShrinkCharsFront, ezUInt32 uiShrinkCharsBack); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160; </div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;  <span class="keywordtype">void</span> Reserve(ezUInt32 uiNumElements); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160; </div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160; </div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;  <span class="keywordtype">void</span> ReplaceSubString(<span class="keyword">const</span> <span class="keywordtype">char</span>* szStartPos, <span class="keyword">const</span> <span class="keywordtype">char</span>* szEndPos, <span class="keyword">const</span> <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a>&amp; szReplaceWith); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160; </div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;  <span class="keywordtype">void</span> Insert(<span class="keyword">const</span> <span class="keywordtype">char</span>* szInsertAtPos, <span class="keyword">const</span> <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a>&amp; szTextToInsert); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160; </div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;  <span class="keywordtype">void</span> Remove(<span class="keyword">const</span> <span class="keywordtype">char</span>* szRemoveFromPos, <span class="keyword">const</span> <span class="keywordtype">char</span>* szRemoveToPos); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160; </div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span>* ReplaceFirst(<span class="keyword">const</span> <span class="keywordtype">char</span>* szSearchFor, <span class="keyword">const</span> <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a>&amp; szReplacement, <span class="keyword">const</span> <span class="keywordtype">char</span>* szStartSearchAt = <span class="keyword">nullptr</span>); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160; </div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span>* ReplaceFirst_NoCase(<span class="keyword">const</span> <span class="keywordtype">char</span>* szSearchFor, <span class="keyword">const</span> <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a>&amp; szReplacement,</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span>* szStartSearchAt = <span class="keyword">nullptr</span>); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160; </div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span>* ReplaceLast(<span class="keyword">const</span> <span class="keywordtype">char</span>* szSearchFor, <span class="keyword">const</span> <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a>&amp; szReplacement, <span class="keyword">const</span> <span class="keywordtype">char</span>* szStartSearchAt = <span class="keyword">nullptr</span>); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160; </div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span>* ReplaceLast_NoCase(<span class="keyword">const</span> <span class="keywordtype">char</span>* szSearchFor, <span class="keyword">const</span> <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a>&amp; szReplacement,</div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span>* szStartSearchAt = <span class="keyword">nullptr</span>); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160; </div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;  ezUInt32 ReplaceAll(<span class="keyword">const</span> <span class="keywordtype">char</span>* szSearchFor, <span class="keyword">const</span> <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a>&amp; szReplacement); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160; </div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;  ezUInt32 ReplaceAll_NoCase(<span class="keyword">const</span> <span class="keywordtype">char</span>* szSearchFor, <span class="keyword">const</span> <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a>&amp; szReplacement); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160; </div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span>* ReplaceWholeWord(<span class="keyword">const</span> <span class="keywordtype">char</span>* szSearchFor, <span class="keyword">const</span> <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a>&amp; szReplaceWith,</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;    <a class="code" href="../../de/df8/classez_string_utils.htm#a30a256e58c74618a988775c15bdd3d8e">ezStringUtils::EZ_CHARACTER_FILTER</a> IsDelimiterCB); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160; </div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span>* ReplaceWholeWord_NoCase(<span class="keyword">const</span> <span class="keywordtype">char</span>* szSearchFor, <span class="keyword">const</span> <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a>&amp; szReplaceWith,</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;    <a class="code" href="../../de/df8/classez_string_utils.htm#a30a256e58c74618a988775c15bdd3d8e">ezStringUtils::EZ_CHARACTER_FILTER</a> IsDelimiterCB); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160; </div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;  ezUInt32 ReplaceWholeWordAll(<span class="keyword">const</span> <span class="keywordtype">char</span>* szSearchFor, <span class="keyword">const</span> <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a>&amp; szReplaceWith,</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;    <a class="code" href="../../de/df8/classez_string_utils.htm#a30a256e58c74618a988775c15bdd3d8e">ezStringUtils::EZ_CHARACTER_FILTER</a> IsDelimiterCB); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160; </div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;  ezUInt32 ReplaceWholeWordAll_NoCase(<span class="keyword">const</span> <span class="keywordtype">char</span>* szSearchFor, <span class="keyword">const</span> <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a>&amp; szReplaceWith,</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;    <a class="code" href="../../de/df8/classez_string_utils.htm#a30a256e58c74618a988775c15bdd3d8e">ezStringUtils::EZ_CHARACTER_FILTER</a> IsDelimiterCB); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160; </div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Container&gt;</div>
<div class="line"><a name="l00328"></a><span class="lineno">  328</span>&#160;  <span class="keywordtype">void</span> Split(<span class="keywordtype">bool</span> bReturnEmptyStrings, Container&amp; Output, <span class="keyword">const</span> <span class="keywordtype">char</span>* szSeparator1, <span class="keyword">const</span> <span class="keywordtype">char</span>* szSeparator2 = <span class="keyword">nullptr</span>,</div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span>* szSeparator3 = <span class="keyword">nullptr</span>, <span class="keyword">const</span> <span class="keywordtype">char</span>* szSeparator4 = <span class="keyword">nullptr</span>, <span class="keyword">const</span> <span class="keywordtype">char</span>* szSeparator5 = <span class="keyword">nullptr</span>,</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span>* szSeparator6 = <span class="keyword">nullptr</span>) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00331"></a><span class="lineno">  331</span>&#160; </div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160;  <span class="keywordtype">void</span> ReadAll(<a class="code" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a>&amp; Stream);</div>
<div class="line"><a name="l00334"></a><span class="lineno">  334</span>&#160; </div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;  <span class="comment">// ******* Path Functions ********</span></div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160; </div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;  <span class="keywordtype">bool</span> HasAnyExtension() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160; </div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;  <span class="keywordtype">bool</span> HasExtension(<span class="keyword">const</span> <span class="keywordtype">char</span>* szExtension) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160; </div>
<div class="line"><a name="l00345"></a><span class="lineno">  345</span>&#160;  <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> GetFileExtension() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160; </div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;  <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> GetFileName() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00351"></a><span class="lineno">  351</span>&#160; </div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;  <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> GetFileNameAndExtension() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160; </div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;  <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> GetFileDirectory() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160; </div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;  <span class="keywordtype">bool</span> IsAbsolutePath() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160; </div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;  <span class="keywordtype">bool</span> IsRelativePath() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160; </div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;  <span class="keywordtype">bool</span> IsRootedPath() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160; </div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;  <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> GetRootedPathRootName() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160; </div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;  <span class="keywordtype">void</span> MakeCleanPath(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160; </div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;  <span class="keywordtype">void</span> PathParentDirectory(ezUInt32 uiLevelsUp = 1); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160; </div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;  <span class="keywordtype">void</span> AppendPath(<span class="keyword">const</span> <span class="keywordtype">char</span>* szPath1, <span class="keyword">const</span> <span class="keywordtype">char</span>* szPath2 = <span class="keyword">nullptr</span>, <span class="keyword">const</span> <span class="keywordtype">char</span>* szPath3 = <span class="keyword">nullptr</span>, <span class="keyword">const</span> <span class="keywordtype">char</span>* szPath4 = <span class="keyword">nullptr</span>); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160; </div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;  <span class="keywordtype">void</span> AppendWithSeparator(<a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> separator, <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sText1, <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sText2 = <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a>(), <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sText3 = <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a>(),</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;    <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sText4 = <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a>(), <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sText5 = <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a>(), <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sText6 = <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a>());</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160; </div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;  <span class="keywordtype">void</span> ChangeFileName(<span class="keyword">const</span> <span class="keywordtype">char</span>* szNewFileName); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160; </div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;  <span class="keywordtype">void</span> ChangeFileNameAndExtension(<span class="keyword">const</span> <span class="keywordtype">char</span>* szNewFileNameWithExtension); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160; </div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;  <span class="keywordtype">void</span> ChangeFileExtension(<span class="keyword">const</span> <span class="keywordtype">char</span>* szNewExtension); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160; </div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;  <span class="keywordtype">void</span> RemoveFileExtension(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160; </div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;  <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> MakeRelativeTo(<span class="keyword">const</span> <span class="keywordtype">char</span>* szAbsolutePathToMakeThisRelativeTo); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160; </div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;  <span class="keywordtype">void</span> MakePathSeparatorsNative(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160; </div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;  <span class="keywordtype">bool</span> IsPathBelowFolder(<span class="keyword">const</span> <span class="keywordtype">char</span>* szPathToFolder); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160; </div>
<div class="line"><a name="l00447"></a><span class="lineno"><a class="line" href="../../d3/d88/classez_string_builder.htm#ae1944172cbf1eeb3faef4c4ae8c7c942">  447</a></span>&#160;  ezUInt64 <a class="code" href="../../d3/d88/classez_string_builder.htm#ae1944172cbf1eeb3faef4c4ae8c7c942">GetHeapMemoryUsage</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_Data.GetHeapMemoryUsage(); }</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160; </div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;  <span class="keywordtype">void</span> Trim(<span class="keyword">const</span> <span class="keywordtype">char</span>* szTrimChars); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160; </div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160;  <span class="keywordtype">void</span> Trim(<span class="keyword">const</span> <span class="keywordtype">char</span>* szTrimCharsStart, <span class="keyword">const</span> <span class="keywordtype">char</span>* szTrimCharsEnd); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160; </div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;  <span class="keywordtype">bool</span> TrimWordStart(</div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span>* szWord1, <span class="keyword">const</span> <span class="keywordtype">char</span>* szWord2 = <span class="keyword">nullptr</span>, <span class="keyword">const</span> <span class="keywordtype">char</span>* szWord3 = <span class="keyword">nullptr</span>, <span class="keyword">const</span> <span class="keywordtype">char</span>* szWord4 = <span class="keyword">nullptr</span>, <span class="keyword">const</span> <span class="keywordtype">char</span>* szWord5 = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160; </div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;  <span class="keywordtype">bool</span> TrimWordEnd(</div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;    <span class="keyword">const</span> <span class="keywordtype">char</span>* szWord1, <span class="keyword">const</span> <span class="keywordtype">char</span>* szWord2 = <span class="keyword">nullptr</span>, <span class="keyword">const</span> <span class="keywordtype">char</span>* szWord3 = <span class="keyword">nullptr</span>, <span class="keyword">const</span> <span class="keywordtype">char</span>* szWord4 = <span class="keyword">nullptr</span>, <span class="keyword">const</span> <span class="keywordtype">char</span>* szWord5 = <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160; </div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;  <span class="keywordtype">void</span> RemoveDoubleSlashesInPath(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160; </div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;  <span class="keywordtype">void</span> ChangeCharacterNonASCII(iterator&amp; it, ezUInt32 uiCharacter);</div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;  <span class="keywordtype">void</span> AppendTerminator();</div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160; </div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;  <span class="comment">// needed for better copy construction</span></div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;  <span class="keyword">template</span> &lt;ezUInt16 T&gt;</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;  <span class="keyword">friend</span> <span class="keyword">struct </span><a class="code" href="../../d6/d43/structez_hybrid_string_base.htm">ezHybridStringBase</a>;</div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160; </div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;  <span class="keyword">friend</span> <a class="code" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a>;</div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160; </div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;  ezUInt32 m_uiCharacterCount;</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;  <a class="code" href="../../d8/deb/classez_hybrid_array.htm">ezHybridArray&lt;char, 128&gt;</a> m_Data;</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;};</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160; </div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;<span class="preprocessor">#include &lt;Foundation/Strings/Implementation/StringBuilder_inl.h&gt;</span></div>
<div class="ttc" id="aclassez_allocator_base_htm"><div class="ttname"><a href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a></div><div class="ttdoc">Base class for all memory allocators.</div><div class="ttdef"><b>Definition:</b> AllocatorBase.h:23</div></div>
<div class="ttc" id="aclassez_format_string_htm"><div class="ttname"><a href="../../d4/d2e/classez_format_string.htm">ezFormatString</a></div><div class="ttdoc">Implements formating of strings with placeholders and formatting options.</div><div class="ttdef"><b>Definition:</b> FormatString.h:55</div></div>
<div class="ttc" id="aclassez_format_string_impl_htm"><div class="ttname"><a href="../../df/d42/classez_format_string_impl.htm">ezFormatStringImpl</a></div><div class="ttdef"><b>Definition:</b> FormatStringImpl.h:9</div></div>
<div class="ttc" id="aclassez_foundation_htm_a54836d4a247f8ea89b716701f1f1a4a7"><div class="ttname"><a href="../../d0/d49/classez_foundation.htm#a54836d4a247f8ea89b716701f1f1a4a7">ezFoundation::GetDefaultAllocator</a></div><div class="ttdeci">static EZ_ALWAYS_INLINE ezAllocatorBase * GetDefaultAllocator()</div><div class="ttdoc">The default allocator can be used for any kind of allocation if no alignment is required.</div><div class="ttdef"><b>Definition:</b> Basics.h:77</div></div>
<div class="ttc" id="aclassez_hybrid_array_htm"><div class="ttname"><a href="../../d8/deb/classez_hybrid_array.htm">ezHybridArray&lt; char, 128 &gt;</a></div></div>
<div class="ttc" id="aclassez_stream_reader_htm"><div class="ttname"><a href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a></div><div class="ttdoc">Interface for binary in (read) streams.</div><div class="ttdef"><b>Definition:</b> Stream.h:21</div></div>
<div class="ttc" id="aclassez_string_builder_htm"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></div><div class="ttdoc">ezStringBuilder is a class that is meant for creating and modifying strings.</div><div class="ttdef"><b>Definition:</b> StringBuilder.h:35</div></div>
<div class="ttc" id="aclassez_string_builder_htm_a0aab851b5f86af410d3c54df6dbdb903"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a0aab851b5f86af410d3c54df6dbdb903">ezStringBuilder::PrependFormat</a></div><div class="ttdeci">void PrependFormat(const char *szFormat, ARGS &amp;&amp;... args)</div><div class="ttdoc">Prepends a formatted string. Uses '{}' formatting placeholders, see ezFormatString for details.</div><div class="ttdef"><b>Definition:</b> StringBuilder.h:254</div></div>
<div class="ttc" id="aclassez_string_builder_htm_a12236c90721b3462e8606dd7d7d12433"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a12236c90721b3462e8606dd7d7d12433">ezStringBuilder::operator=</a></div><div class="ttdeci">void operator=(ezHybridString&lt; Size, A &gt; &amp;&amp;rhs) noexcept</div><div class="ttdoc">Moves the given string into this one.</div><div class="ttdef"><b>Definition:</b> StringBuilder.h:133</div></div>
<div class="ttc" id="aclassez_string_builder_htm_a266bc4e41bc7247f3094ab0b2555cdcf"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a266bc4e41bc7247f3094ab0b2555cdcf">ezStringBuilder::ezStringBuilder</a></div><div class="ttdeci">ezStringBuilder(ezHybridString&lt; Size, A &gt; &amp;&amp;rhs)</div><div class="ttdoc">Moves the given string into this one.</div><div class="ttdef"><b>Definition:</b> StringBuilder.h:73</div></div>
<div class="ttc" id="aclassez_string_builder_htm_a2af0cad3e9a5baec55a556dd1401708c"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a2af0cad3e9a5baec55a556dd1401708c">ezStringBuilder::AppendFormat</a></div><div class="ttdeci">void AppendFormat(const char *szFormat, ARGS &amp;&amp;... args)</div><div class="ttdoc">Appends a formatted string. Uses '{}' formatting placeholders, see ezFormatString for details.</div><div class="ttdef"><b>Definition:</b> StringBuilder.h:244</div></div>
<div class="ttc" id="aclassez_string_builder_htm_a38ab7f804a615884732786ffd71381cc"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a38ab7f804a615884732786ffd71381cc">ezStringBuilder::ezStringBuilder</a></div><div class="ttdeci">ezStringBuilder(const ezHybridString&lt; Size, A &gt; &amp;rhs)</div><div class="ttdoc">Copies the given string into this one.</div><div class="ttdef"><b>Definition:</b> StringBuilder.h:56</div></div>
<div class="ttc" id="aclassez_string_builder_htm_a6e16d660aed7c664987c73b0f44828ba"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a6e16d660aed7c664987c73b0f44828ba">ezStringBuilder::ezStringBuilder</a></div><div class="ttdeci">ezStringBuilder(ezHybridStringBase&lt; Size &gt; &amp;&amp;rhs)</div><div class="ttdoc">Moves the given string into this one.</div><div class="ttdef"><b>Definition:</b> StringBuilder.h:65</div></div>
<div class="ttc" id="aclassez_string_builder_htm_a90e96e864b3a3558c15d075e5003bf5b"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#a90e96e864b3a3558c15d075e5003bf5b">ezStringBuilder::operator=</a></div><div class="ttdeci">void operator=(const ezHybridString&lt; Size, A &gt; &amp;rhs)</div><div class="ttdoc">Copies the given string into this one.</div><div class="ttdef"><b>Definition:</b> StringBuilder.h:117</div></div>
<div class="ttc" id="aclassez_string_builder_htm_aac726d09612fe6a06cfad3d144cda7ab"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#aac726d09612fe6a06cfad3d144cda7ab">ezStringBuilder::ezStringBuilder</a></div><div class="ttdeci">ezStringBuilder(const ezHybridStringBase&lt; Size &gt; &amp;rhs)</div><div class="ttdoc">Copies the given string into this one.</div><div class="ttdef"><b>Definition:</b> StringBuilder.h:48</div></div>
<div class="ttc" id="aclassez_string_builder_htm_acc6421d53a2932f4fed29e2b8a312118"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#acc6421d53a2932f4fed29e2b8a312118">ezStringBuilder::Format</a></div><div class="ttdeci">void Format(const char *szFormat, ARGS &amp;&amp;... args)</div><div class="ttdoc">Replaces this with a formatted string. Uses '{}' formatting placeholders, see ezFormatString for deta...</div><div class="ttdef"><b>Definition:</b> StringBuilder.h:234</div></div>
<div class="ttc" id="aclassez_string_builder_htm_ae1944172cbf1eeb3faef4c4ae8c7c942"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#ae1944172cbf1eeb3faef4c4ae8c7c942">ezStringBuilder::GetHeapMemoryUsage</a></div><div class="ttdeci">ezUInt64 GetHeapMemoryUsage() const</div><div class="ttdoc">Returns the amount of bytes that are currently allocated on the heap.</div><div class="ttdef"><b>Definition:</b> StringBuilder.h:447</div></div>
<div class="ttc" id="aclassez_string_builder_htm_af0dabcebf009530ed5105e0f007427bf"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#af0dabcebf009530ed5105e0f007427bf">ezStringBuilder::operator=</a></div><div class="ttdeci">void operator=(ezHybridStringBase&lt; Size &gt; &amp;&amp;rhs)</div><div class="ttdoc">Moves the given string into this one.</div><div class="ttdef"><b>Definition:</b> StringBuilder.h:125</div></div>
<div class="ttc" id="aclassez_string_builder_htm_afe3059b8d9cc7fb696bf12777b58299f"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm#afe3059b8d9cc7fb696bf12777b58299f">ezStringBuilder::operator=</a></div><div class="ttdeci">void operator=(const ezHybridStringBase&lt; Size &gt; &amp;rhs)</div><div class="ttdoc">Copies the given string into this one.</div><div class="ttdef"><b>Definition:</b> StringBuilder.h:109</div></div>
<div class="ttc" id="aclassez_string_utils_htm_a30a256e58c74618a988775c15bdd3d8e"><div class="ttname"><a href="../../de/df8/classez_string_utils.htm#a30a256e58c74618a988775c15bdd3d8e">ezStringUtils::EZ_CHARACTER_FILTER</a></div><div class="ttdeci">bool(*)(ezUInt32 uiChar) EZ_CHARACTER_FILTER</div><div class="ttdoc">Function Definition for a function that determines whether a (Utf32) character belongs to a certain c...</div><div class="ttdef"><b>Definition:</b> StringUtils.h:220</div></div>
<div class="ttc" id="astructez_hybrid_string_base_htm"><div class="ttname"><a href="../../d6/d43/structez_hybrid_string_base.htm">ezHybridStringBase</a></div><div class="ttdoc">A string class for storing and passing around strings.</div><div class="ttdef"><b>Definition:</b> String.h:28</div></div>
<div class="ttc" id="astructez_hybrid_string_htm"><div class="ttname"><a href="../../d4/d53/structez_hybrid_string.htm">ezHybridString</a></div><div class="ttdef"><b>Definition:</b> String.h:138</div></div>
<div class="ttc" id="astructez_result_htm"><div class="ttname"><a href="../../d4/da9/structez_result.htm">ezResult</a></div><div class="ttdoc">Default enum for returning failure or success, instead of using a bool.</div><div class="ttdef"><b>Definition:</b> Types.h:51</div></div>
<div class="ttc" id="astructez_string_base_htm"><div class="ttname"><a href="../../dd/d69/structez_string_base.htm">ezStringBase</a></div><div class="ttdoc">Base class for strings, which implements all read-only string functions.</div><div class="ttdef"><b>Definition:</b> StringBase.h:19</div></div>
<div class="ttc" id="astructez_string_view_htm"><div class="ttname"><a href="../../de/db8/structez_string_view.htm">ezStringView</a></div><div class="ttdoc">ezStringView represent a read-only sub-string of a larger string, as it can store a dedicated string ...</div><div class="ttdef"><b>Definition:</b> StringView.h:21</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_23fdee2f6995db16c755697cdf620cf4.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_035128dd2074b3ffa643fb93d2ba646f.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_b4afbf48febc82b6d8264e96ce32f252.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_93f3a51c0220f51fc2c286c08d531e1e.htm">Strings</a></li><li class="navelem"><b>StringBuilder.h</b></li>
    <li class="footer">Generated on Tue Jun 8 2021 14:33:54 for ezEngine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1 </li>
  </ul>
</div>
</body>
</html>
