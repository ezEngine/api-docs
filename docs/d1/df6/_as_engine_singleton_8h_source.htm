<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/EnginePlugins/AngelScriptPlugin/Runtime/AsEngineSingleton.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 25.03</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d1/df6/_as_engine_singleton_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">AsEngineSingleton.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;AngelScriptPlugin/AngelScriptPluginDLL.h&gt;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;Foundation/Configuration/Singleton.h&gt;</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;Foundation/Memory/CommonAllocators.h&gt;</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#include &lt;Foundation/Reflection/Reflection.h&gt;</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;Foundation/Types/UniquePtr.h&gt;</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160; </div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="keyword">class </span>asIScriptEngine;</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="keyword">class </span>asIScriptModule;</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">class </span>asIStringFactory;</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="keyword">struct </span>asSMessageInfo;</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="keyword">class </span><a class="code" href="../../db/da7/classez_as_string_factory.htm">ezAsStringFactory</a>;</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160; </div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#if EZ_ENABLED(EZ_COMPILE_FOR_DEVELOPMENT)</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="keyword">using</span> <a class="code" href="../../d8/dde/classez_allocator_with_policy.htm">ezAsAllocatorType</a> = <a class="code" href="../../d8/dde/classez_allocator_with_policy.htm">ezAllocatorWithPolicy&lt;ezAllocPolicyHeap, ezAllocatorTrackingMode::AllocationStats&gt;</a>;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">using</span> <a class="code" href="../../d8/dde/classez_allocator_with_policy.htm">ezAsAllocatorType</a> = <a class="code" href="../../d8/dde/classez_allocator_with_policy.htm">ezAllocatorWithPolicy&lt;ezAllocPolicyHeap, ezAllocatorTrackingMode::Nothing&gt;</a>;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160; </div>
<div class="line"><a name="l00021"></a><span class="lineno"><a class="line" href="../../de/d0b/classez_angel_script_engine_singleton.htm">   21</a></span>&#160;<span class="keyword">class </span>EZ_ANGELSCRIPTPLUGIN_DLL <a class="code" href="../../de/d0b/classez_angel_script_engine_singleton.htm">ezAngelScriptEngineSingleton</a></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;{</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;  EZ_DECLARE_SINGLETON(<a class="code" href="../../de/d0b/classez_angel_script_engine_singleton.htm">ezAngelScriptEngineSingleton</a>);</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160; </div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;  <a class="code" href="../../de/d0b/classez_angel_script_engine_singleton.htm">ezAngelScriptEngineSingleton</a>();</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;  ~<a class="code" href="../../de/d0b/classez_angel_script_engine_singleton.htm">ezAngelScriptEngineSingleton</a>();</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160; </div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;  asIScriptEngine* GetEngine()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_pEngine; }</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160; </div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  asIScriptModule* SetModuleCode(<a class="code" href="../../d9/d18/classez_string_view.htm">ezStringView</a> sModuleName, <a class="code" href="../../d9/d18/classez_string_view.htm">ezStringView</a> sCode, <span class="keywordtype">bool</span> bAddExternalSection);</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;  asIScriptModule* CompileModule(<a class="code" href="../../d9/d18/classez_string_view.htm">ezStringView</a> sModuleName, <a class="code" href="../../d9/d18/classez_string_view.htm">ezStringView</a> sMainClass, <a class="code" href="../../d9/d18/classez_string_view.htm">ezStringView</a> sRefFilePath, <a class="code" href="../../d9/d18/classez_string_view.htm">ezStringView</a> sCode, <a class="code" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>* out_pProcessedCode, <a class="code" href="../../d0/d90/classez_set.htm">ezSet&lt;ezString&gt;</a>* out_pDependencies);</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;  <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> ValidateModule(asIScriptModule* pModule) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160; </div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d0/d90/classez_set.htm">ezSet&lt;ezString&gt;</a>&amp; GetNotRegistered()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_NotRegistered; }</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160; </div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  <span class="keywordtype">void</span> AddForbiddenType(<span class="keyword">const</span> <span class="keywordtype">char</span>* szTypeName);</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;  <span class="keywordtype">bool</span> IsTypeForbidden(<span class="keyword">const</span> asITypeInfo* pType) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  <span class="keywordtype">void</span> CompilerMessageCallback(<span class="keyword">const</span> asSMessageInfo* msg);</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  <span class="keywordtype">void</span> ExceptionCallback(asIScriptContext* pContext);</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160; </div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  <span class="keywordtype">void</span> RegisterStandardTypes();</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  <span class="keywordtype">void</span> Register_RTTI();</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  <span class="keywordtype">void</span> Register_Vec2();</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;  <span class="keywordtype">void</span> Register_Vec3();</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;  <span class="keywordtype">void</span> Register_Vec4();</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;  <span class="keywordtype">void</span> Register_Angle();</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;  <span class="keywordtype">void</span> Register_Quat();</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;  <span class="keywordtype">void</span> Register_Transform();</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;  <span class="keywordtype">void</span> Register_GameObject();</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  <span class="keywordtype">void</span> Register_Time();</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;  <span class="keywordtype">void</span> Register_Mat3();</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;  <span class="keywordtype">void</span> Register_Mat4();</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  <span class="keywordtype">void</span> Register_World();</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;  <span class="keywordtype">void</span> Register_Clock();</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;  <span class="keywordtype">void</span> Register_String();</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  <span class="keywordtype">void</span> Register_StringView();</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;  <span class="keywordtype">void</span> Register_StringBuilder();</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;  <span class="keywordtype">void</span> Register_TempHashedString();</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  <span class="keywordtype">void</span> Register_HashedString();</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;  <span class="keywordtype">void</span> Register_Color();</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  <span class="keywordtype">void</span> Register_ColorGammaUB();</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  <span class="keywordtype">void</span> Register_Random();</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;  <span class="keywordtype">void</span> Register_Math();</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;  <span class="keywordtype">void</span> Register_Spatial();</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160; </div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;  <span class="keywordtype">void</span> Register_ezAngelScriptClass();</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;  <span class="keywordtype">void</span> Register_GlobalReflectedFunctions();</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  <span class="keywordtype">void</span> Register_ReflectedType(<span class="keyword">const</span> <a class="code" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* pBaseType, <span class="keywordtype">bool</span> bCreatable);</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;  <span class="keywordtype">void</span> Register_ReflectedTypes();</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;  <span class="keywordtype">void</span> RegisterTypeFunctions(<span class="keyword">const</span> <span class="keywordtype">char</span>* szTypeName, <span class="keyword">const</span> <a class="code" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* pRtti, <span class="keywordtype">bool</span> bIsInherited);</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  <span class="keywordtype">void</span> RegisterSingleGenericFunction(<span class="keyword">const</span> <span class="keywordtype">char</span>* szFuncName, <span class="keyword">const</span> <span class="keywordtype">char</span>* szTypeName, <span class="keyword">const</span> <a class="code" href="../../d3/d4c/classez_abstract_function_property.htm">ezAbstractFunctionProperty</a>* <span class="keyword">const</span> pFunc, <span class="keyword">const</span> <a class="code" href="../../d1/ddf/classez_scriptable_function_attribute.htm">ezScriptableFunctionAttribute</a>* pFuncAttr, <span class="keywordtype">bool</span> bIsInherited, <span class="keyword">const</span> <a class="code" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* pReturnType);</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;  <span class="keywordtype">void</span> RegisterGenericFunction(<span class="keyword">const</span> <span class="keywordtype">char</span>* szTypeName, <span class="keyword">const</span> <a class="code" href="../../d3/d4c/classez_abstract_function_property.htm">ezAbstractFunctionProperty</a>* <span class="keyword">const</span> pFunc, <span class="keyword">const</span> <a class="code" href="../../d1/ddf/classez_scriptable_function_attribute.htm">ezScriptableFunctionAttribute</a>* pFuncAttr, <span class="keywordtype">bool</span> bIsInherited);</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;  <span class="keywordtype">bool</span> AppendType(<a class="code" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>&amp; decl, <span class="keyword">const</span> <a class="code" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* pRtti, <span class="keyword">const</span> <a class="code" href="../../d1/ddf/classez_scriptable_function_attribute.htm">ezScriptableFunctionAttribute</a>* pFuncAttr, ezUInt32 uiArg, <span class="keywordtype">bool</span>&amp; inout_VarArgs);</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  <span class="keywordtype">bool</span> AppendFuncArgs(<a class="code" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>&amp; decl, <span class="keyword">const</span> <a class="code" href="../../d3/d4c/classez_abstract_function_property.htm">ezAbstractFunctionProperty</a>* pFunc, <span class="keyword">const</span> <a class="code" href="../../d1/ddf/classez_scriptable_function_attribute.htm">ezScriptableFunctionAttribute</a>* pFuncAttr, ezUInt32 uiArg, <span class="keywordtype">bool</span>&amp; inout_VarArgs);</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;  <span class="keywordtype">void</span> Register_ExtraComponentFuncs();</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160; </div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160; </div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;  <span class="keywordtype">void</span> RegisterPodValueType()</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;  {</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    <span class="keyword">const</span> <a class="code" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* pRtti = ezGetStaticRTTI&lt;T&gt;();</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="keywordtype">int</span> typeId = m_pEngine-&gt;RegisterObjectType(pRtti-&gt;<a class="code" href="../../dd/d19/classez_r_t_t_i.htm#a12bb619302f06a0750a230ac62b01886">GetTypeName</a>().<a class="code" href="../../d9/d18/classez_string_view.htm#a7e6ab4aebc721857871d822321935d5f">GetStartPointer</a>(), <span class="keyword">sizeof</span>(T), asOBJ_VALUE | asOBJ_POD | asGetTypeTraits&lt;T&gt;());</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    AS_CHECK(typeId);</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160; </div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    m_pEngine-&gt;GetTypeInfoById(typeId)-&gt;SetUserData((<span class="keywordtype">void</span>*)pRtti, ezAsUserData::RttiPtr);</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;  }</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160; </div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  <span class="keywordtype">void</span> RegisterNonPodValueType()</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;  {</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    <span class="keyword">const</span> <a class="code" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* pRtti = ezGetStaticRTTI&lt;T&gt;();</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;    <span class="keywordtype">int</span> typeId = m_pEngine-&gt;RegisterObjectType(pRtti-&gt;<a class="code" href="../../dd/d19/classez_r_t_t_i.htm#a12bb619302f06a0750a230ac62b01886">GetTypeName</a>().<a class="code" href="../../d9/d18/classez_string_view.htm#a7e6ab4aebc721857871d822321935d5f">GetStartPointer</a>(), <span class="keyword">sizeof</span>(T), asOBJ_VALUE | asGetTypeTraits&lt;T&gt;());</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    AS_CHECK(typeId);</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160; </div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    m_pEngine-&gt;GetTypeInfoById(typeId)-&gt;SetUserData((<span class="keywordtype">void</span>*)pRtti, ezAsUserData::RttiPtr);</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  }</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160; </div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;  <span class="keywordtype">void</span> RegisterRefType()</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;  {</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="keyword">const</span> <a class="code" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* pRtti = ezGetStaticRTTI&lt;T&gt;();</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <span class="keywordtype">int</span> typeId = m_pEngine-&gt;RegisterObjectType(pRtti-&gt;<a class="code" href="../../dd/d19/classez_r_t_t_i.htm#a12bb619302f06a0750a230ac62b01886">GetTypeName</a>().<a class="code" href="../../d9/d18/classez_string_view.htm#a7e6ab4aebc721857871d822321935d5f">GetStartPointer</a>(), 0, asOBJ_REF | asOBJ_NOCOUNT);</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    AS_CHECK(typeId);</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160; </div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    m_pEngine-&gt;GetTypeInfoById(typeId)-&gt;SetUserData((<span class="keywordtype">void</span>*)pRtti, ezAsUserData::RttiPtr);</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160; </div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    AddForbiddenType(pRtti-&gt;GetTypeName().GetStartPointer());</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160; </div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    m_WhitelistedRefTypes.Insert(pRtti-&gt;GetTypeName());</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;  }</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160; </div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;  asIScriptEngine* m_pEngine = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160; </div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;  <a class="code" href="../../d0/d90/classez_set.htm">ezSet&lt;ezString&gt;</a> m_WhitelistedRefTypes;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160; </div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;  <a class="code" href="../../d8/deb/classez_hybrid_array.htm">ezHybridArray&lt;const asITypeInfo*, 16&gt;</a> m_ForbiddenTypes;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160; </div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;  <a class="code" href="../../db/da7/classez_as_string_factory.htm">ezAsStringFactory</a>* m_pStringFactory = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160; </div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;  <a class="code" href="../../d0/d90/classez_set.htm">ezSet&lt;ezString&gt;</a> m_NotRegistered;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160; </div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;  <a class="code" href="../../dd/dbe/classez_mutex.htm">ezMutex</a> m_CompilerMutex;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;  <a class="code" href="../../d9/d18/classez_string_view.htm">ezStringView</a> m_sCodeInCompilation;</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;};</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="astructez_result_htm"><div class="ttname"><a href="../../d4/da9/structez_result.htm">ezResult</a></div><div class="ttdoc">Default enum for returning failure or success, instead of using a bool.</div><div class="ttdef"><b>Definition:</b> Types.h:53</div></div>
<div class="ttc" id="aclassez_set_htm"><div class="ttname"><a href="../../d0/d90/classez_set.htm">ezSet</a></div><div class="ttdef"><b>Definition:</b> Set.h:237</div></div>
<div class="ttc" id="aclassez_r_t_t_i_htm"><div class="ttname"><a href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a></div><div class="ttdoc">This class holds information about reflected types. Each instance represents one type that is known t...</div><div class="ttdef"><b>Definition:</b> RTTI.h:29</div></div>
<div class="ttc" id="aclassez_mutex_htm"><div class="ttname"><a href="../../dd/dbe/classez_mutex.htm">ezMutex</a></div><div class="ttdoc">Provides a simple mechanism for mutual exclusion to prevent multiple threads from accessing a shared ...</div><div class="ttdef"><b>Definition:</b> Mutex.h:12</div></div>
<div class="ttc" id="aclassez_as_string_factory_htm"><div class="ttname"><a href="../../db/da7/classez_as_string_factory.htm">ezAsStringFactory</a></div><div class="ttdef"><b>Definition:</b> AsStringFactory.h:10</div></div>
<div class="ttc" id="aclassez_scriptable_function_attribute_htm"><div class="ttname"><a href="../../d1/ddf/classez_scriptable_function_attribute.htm">ezScriptableFunctionAttribute</a></div><div class="ttdoc">Attribute to mark a function up to be exposed to the scripting system. Arguments specify the names of...</div><div class="ttdef"><b>Definition:</b> PropertyAttributes.h:991</div></div>
<div class="ttc" id="aclassez_angel_script_engine_singleton_htm"><div class="ttname"><a href="../../de/d0b/classez_angel_script_engine_singleton.htm">ezAngelScriptEngineSingleton</a></div><div class="ttdef"><b>Definition:</b> AsEngineSingleton.h:21</div></div>
<div class="ttc" id="aclassez_r_t_t_i_htm_a12bb619302f06a0750a230ac62b01886"><div class="ttname"><a href="../../dd/d19/classez_r_t_t_i.htm#a12bb619302f06a0750a230ac62b01886">ezRTTI::GetTypeName</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezStringView GetTypeName() const</div><div class="ttdoc">Returns the name of this type.</div><div class="ttdef"><b>Definition:</b> RTTI.h:48</div></div>
<div class="ttc" id="aclassez_allocator_with_policy_htm"><div class="ttname"><a href="../../d8/dde/classez_allocator_with_policy.htm">ezAllocatorWithPolicy&lt; ezAllocPolicyHeap, ezAllocatorTrackingMode::Nothing &gt;</a></div></div>
<div class="ttc" id="aclassez_hybrid_array_htm"><div class="ttname"><a href="../../d8/deb/classez_hybrid_array.htm">ezHybridArray&lt; const asITypeInfo *, 16 &gt;</a></div></div>
<div class="ttc" id="aclassez_string_view_htm_a7e6ab4aebc721857871d822321935d5f"><div class="ttname"><a href="../../d9/d18/classez_string_view.htm#a7e6ab4aebc721857871d822321935d5f">ezStringView::GetStartPointer</a></div><div class="ttdeci">const char * GetStartPointer() const</div><div class="ttdoc">Returns the start of the view range.</div><div class="ttdef"><b>Definition:</b> StringView.h:102</div></div>
<div class="ttc" id="aclassez_string_builder_htm"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></div><div class="ttdoc">ezStringBuilder is a class that is meant for creating and modifying strings.</div><div class="ttdef"><b>Definition:</b> StringBuilder.h:34</div></div>
<div class="ttc" id="aclassez_string_view_htm"><div class="ttname"><a href="../../d9/d18/classez_string_view.htm">ezStringView</a></div><div class="ttdoc">ezStringView represent a read-only sub-string of a larger string, as it can store a dedicated string ...</div><div class="ttdef"><b>Definition:</b> StringView.h:33</div></div>
<div class="ttc" id="aclassez_abstract_function_property_htm"><div class="ttname"><a href="../../d3/d4c/classez_abstract_function_property.htm">ezAbstractFunctionProperty</a></div><div class="ttdoc">The base class for a property that represents a function.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:539</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_103378c88ff4c88de6bfabe12da9ec96.htm">EnginePlugins</a></li><li class="navelem"><a class="el" href="../../dir_8eea7b9678ed0566a5672830b0494a62.htm">AngelScriptPlugin</a></li><li class="navelem"><a class="el" href="../../dir_23344606e35aea418e5636ea0a4d10ec.htm">Runtime</a></li><li class="navelem"><b>AsEngineSingleton.h</b></li>
    <li class="footer">Generated on Mon Mar 3 2025 17:23:47 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
