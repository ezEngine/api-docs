<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Math/Vec2.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 21.10</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d1/d8e/_vec2_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Vec2.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;Foundation/Math/Math.h&gt;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160; </div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#if EZ_ENABLED(EZ_MATH_CHECK_FOR_NAN)</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#  define EZ_VEC2_CHECK_FOR_NAN(obj) (obj)-&gt;AssertNotNaN();</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#  define EZ_VEC2_CHECK_FOR_NAN(obj)</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160; </div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="keyword">class </span><a class="code" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template</a></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;{</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;  <span class="comment">// Means that vectors can be copied using memcpy instead of copy construction.</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;  EZ_DECLARE_POD_TYPE();</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160; </div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;  <span class="keyword">using</span> ComponentType = Type;</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160; </div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160; </div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;  <span class="comment">// *** Data ***</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;  Type x;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;  Type y;</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;  <span class="comment">// *** Constructors ***</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;  <a class="code" href="../../d1/df8/classez_vec2_template.htm#a2a5b1af8d3b8c8f95a4e5a53bbf1cfd9">ezVec2Template</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160; </div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;  <a class="code" href="../../d1/df8/classez_vec2_template.htm#a2a5b1af8d3b8c8f95a4e5a53bbf1cfd9">ezVec2Template</a>(Type X, Type Y); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160; </div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;  <span class="keyword">explicit</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm#a2a5b1af8d3b8c8f95a4e5a53bbf1cfd9">ezVec2Template</a>(Type xy); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160; </div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  <span class="comment">// no copy-constructor and operator= since the default-generated ones will be faster</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160; </div>
<div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="../../d1/df8/classez_vec2_template.htm#a5bfb330b990eae4ee79bf01f972d852d">   41</a></span>&#160;  <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a> <a class="code" href="../../d1/df8/classez_vec2_template.htm#a5bfb330b990eae4ee79bf01f972d852d">ZeroVector</a>() { <span class="keywordflow">return</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm#a2a5b1af8d3b8c8f95a4e5a53bbf1cfd9">ezVec2Template</a>(0); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160; </div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="preprocessor">#if EZ_ENABLED(EZ_MATH_CHECK_FOR_NAN)</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  <span class="keywordtype">void</span> AssertNotNaN()<span class="keyword"> const</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    EZ_ASSERT_ALWAYS(!<a class="code" href="../../d1/df8/classez_vec2_template.htm#a33b28d50b1a4fd6e534c4bbeca56d245">IsNaN</a>(), <span class="stringliteral">&quot;This object contains NaN values. This can happen when you forgot to initialize it before using it. Please &quot;</span></div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;                               <span class="stringliteral">&quot;check that all code-paths properly initialize this object.&quot;</span>);</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;  }</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160; </div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;  <span class="comment">// *** Conversions ***</span></div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d6/dbd/structez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> <a class="code" href="../../d1/df8/classez_vec2_template.htm#ab1a22a7a2c108318ed503a0c296df082">GetAsVec3</a>(Type z) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160; </div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template&lt;Type&gt;</a> <a class="code" href="../../d1/df8/classez_vec2_template.htm#a335eb4f6b76ae8ee6bd38051cbe1915d">GetAsVec4</a>(Type z, Type w) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160; </div>
<div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="../../d1/df8/classez_vec2_template.htm#aa84c389f4b054c73a4629ed1c26f2aad">   60</a></span>&#160;  <span class="keyword">const</span> Type* <a class="code" href="../../d1/df8/classez_vec2_template.htm#aa84c389f4b054c73a4629ed1c26f2aad">GetData</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> &amp;x; }</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160; </div>
<div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="../../d1/df8/classez_vec2_template.htm#aced189aa50245299a822c000559f7840">   63</a></span>&#160;  Type* <a class="code" href="../../d1/df8/classez_vec2_template.htm#aced189aa50245299a822c000559f7840">GetData</a>() { <span class="keywordflow">return</span> &amp;x; }</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160; </div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;  <span class="comment">// *** Functions to set the vector to specific values ***</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm#a2f0a2c626e9ec2f773f9828d3e6fe37f">Set</a>(Type xy); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160; </div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm#a2f0a2c626e9ec2f773f9828d3e6fe37f">Set</a>(Type x, Type y); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160; </div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm#a755c841102239d0061f37367e4cce317">SetZero</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160; </div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  <span class="comment">// *** Functions dealing with length ***</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  Type <a class="code" href="../../d1/df8/classez_vec2_template.htm#a26eb0a5b2b1d8efb393cbae760af2daf">GetLength</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160; </div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;  Type <a class="code" href="../../d1/df8/classez_vec2_template.htm#a2574ac9fc9a489865643a1d98a4fea04">GetLengthSquared</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160; </div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;  Type <a class="code" href="../../d1/df8/classez_vec2_template.htm#a3ea36fbb35e0519dd47d4a4f06487260">GetLengthAndNormalize</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160; </div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a> <a class="code" href="../../d1/df8/classez_vec2_template.htm#a4e9198c2dc7d30a43b943161ef2c874d">GetNormalized</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160; </div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm#a82f66258e16bb7fd098e1749852c483a">Normalize</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160; </div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;  <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code" href="../../d1/df8/classez_vec2_template.htm#aae7375cd99b223815b1d2f02cca8da23">NormalizeIfNotZero</a>(</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="keyword">const</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; vFallback = <a class="code" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>(1, 0), Type fEpsilon = ezMath::DefaultEpsilon&lt;Type&gt;()); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160; </div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm#a9f2ea2e14a56288d5a2e8a479d2b4faa">IsZero</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160; </div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm#a9f2ea2e14a56288d5a2e8a479d2b4faa">IsZero</a>(Type fEpsilon) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160; </div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm#a24ec8d11fd2dd3ed4c12880ec663b9a9">IsNormalized</a>(Type fEpsilon = ezMath::HugeEpsilon&lt;Type&gt;()) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160; </div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm#a33b28d50b1a4fd6e534c4bbeca56d245">IsNaN</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160; </div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm#ab3ba3a3ee06c2566e39014dbdccd91c8">IsValid</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160; </div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160; </div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;  <span class="comment">// *** Operators ***</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a> <a class="code" href="../../d1/df8/classez_vec2_template.htm#abd8003534d70b28f3c6b675f9a58be1a">operator-</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160; </div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm#ac6f7684574009bcb2a1da27974b8e741">operator+=</a>(<span class="keyword">const</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; cc); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160; </div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm#ab3413fc95c24f2506d3531f54915c224">operator-=</a>(<span class="keyword">const</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; cc); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160; </div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm#a7e20cc27edfcc9549619a831bfc0f610">operator*=</a>(Type f); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160; </div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm#a1b9a65ebaa272372f2f90d8f7c527e87">operator/=</a>(Type f); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160; </div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm#a281237e6c06f98209f68de8bd3c0cdd7">IsIdentical</a>(<span class="keyword">const</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160; </div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm#ad4021a9bc24572671e67c8f5af1b38cb">IsEqual</a>(<span class="keyword">const</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; rhs, Type fEpsilon) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160; </div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160; </div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;  <span class="comment">// *** Common vector operations ***</span></div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  <a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a> <a class="code" href="../../d1/df8/classez_vec2_template.htm#a3009fa693fb76d33aaee01cdd0b3c798">GetAngleBetween</a>(<span class="keyword">const</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160; </div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;  Type <a class="code" href="../../d1/df8/classez_vec2_template.htm#a0ca7ffe429ee82c47161ddcddb4c8a33">Dot</a>(<span class="keyword">const</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160; </div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a> <a class="code" href="../../d1/df8/classez_vec2_template.htm#a22ca0809b152adb378c0857fc0d4b5b5">CompMin</a>(<span class="keyword">const</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160; </div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a> <a class="code" href="../../d1/df8/classez_vec2_template.htm#ada817908a1ed043df718e65d276ba6ff">CompMax</a>(<span class="keyword">const</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160; </div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a> <a class="code" href="../../d1/df8/classez_vec2_template.htm#aec49e6576ea3dd778f7443692f6a12eb">CompClamp</a>(<span class="keyword">const</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; low, <span class="keyword">const</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; high) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160; </div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a> <a class="code" href="../../d1/df8/classez_vec2_template.htm#adf8ce963aaeb4feda4465f1f8baf8aa1">CompMul</a>(<span class="keyword">const</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160; </div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a> <a class="code" href="../../d1/df8/classez_vec2_template.htm#a236b9f5b105fb5fc56c47a8f36590546">CompDiv</a>(<span class="keyword">const</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160; </div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a> <a class="code" href="../../d1/df8/classez_vec2_template.htm#a33d450a53016a7f87e077f074e4e699a">Abs</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160; </div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160; </div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;  <span class="comment">// *** Other common operations ***</span></div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm#af740e1d40b6054abc97fbc5d3fbdf6b5">MakeOrthogonalTo</a>(<span class="keyword">const</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; vNormal); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160; </div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a> <a class="code" href="../../d1/df8/classez_vec2_template.htm#ada092096c12dada27a1e1fc1e134be8f">GetOrthogonalVector</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160; </div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a> <a class="code" href="../../d1/df8/classez_vec2_template.htm#a8ca2e709e267f6c1272bec7b1dca9c0c">GetReflectedVector</a>(<span class="keyword">const</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; vNormal) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;};</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160; </div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="comment">// *** Operators ***</span></div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160; </div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="keyword">const</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a> operator+(<span class="keyword">const</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; v1, <span class="keyword">const</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; v2); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160; </div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="keyword">const</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a> operator-(<span class="keyword">const</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; v1, <span class="keyword">const</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; v2); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160; </div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="keyword">const</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a> operator*(Type f, <span class="keyword">const</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; v); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160; </div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="keyword">const</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a> operator*(<span class="keyword">const</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; v, Type f); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160; </div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;<span class="keyword">const</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a> operator/(<span class="keyword">const</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; v, Type f); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160; </div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="keywordtype">bool</span> operator==(<span class="keyword">const</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; v1, <span class="keyword">const</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; v2); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160; </div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="keywordtype">bool</span> operator!=(<span class="keyword">const</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; v1, <span class="keyword">const</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; v2); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160; </div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="keywordtype">bool</span> operator&lt;(<span class="keyword">const</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; v1, <span class="keyword">const</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; v2);</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160; </div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="preprocessor">#include &lt;Foundation/Math/Implementation/Vec2_inl.h&gt;</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassez_vec2_template_htm_aae7375cd99b223815b1d2f02cca8da23"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#aae7375cd99b223815b1d2f02cca8da23">ezVec2Template::NormalizeIfNotZero</a></div><div class="ttdeci">ezResult NormalizeIfNotZero(const ezVec2Template&lt; Type &gt; &amp;vFallback=ezVec2Template&lt; Type &gt;(1, 0), Type fEpsilon=ezMath::DefaultEpsilon&lt; Type &gt;())</div><div class="ttdoc">Tries to normalize this vector. If the vector is too close to zero, EZ_FAILURE is returned and the ve...</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:84</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_a0ca7ffe429ee82c47161ddcddb4c8a33"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#a0ca7ffe429ee82c47161ddcddb4c8a33">ezVec2Template::Dot</a></div><div class="ttdeci">Type Dot(const ezVec2Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the Dot-product of the two vectors (commutative, order does not matter)</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:219</div></div>
<div class="ttc" id="astructez_result_htm"><div class="ttname"><a href="../../d4/da9/structez_result.htm">ezResult</a></div><div class="ttdoc">Default enum for returning failure or success, instead of using a bool.</div><div class="ttdef"><b>Definition:</b> Types.h:50</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_a755c841102239d0061f37367e4cce317"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#a755c841102239d0061f37367e4cce317">ezVec2Template::SetZero</a></div><div class="ttdeci">void SetZero()</div><div class="ttdoc">Sets the vector to all zero.</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:43</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_a7e20cc27edfcc9549619a831bfc0f610"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#a7e20cc27edfcc9549619a831bfc0f610">ezVec2Template::operator*=</a></div><div class="ttdeci">void operator*=(Type f)</div><div class="ttdoc">Multiplies all components of this vector with f.</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:173</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_a2574ac9fc9a489865643a1d98a4fea04"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#a2574ac9fc9a489865643a1d98a4fea04">ezVec2Template::GetLengthSquared</a></div><div class="ttdeci">Type GetLengthSquared() const</div><div class="ttdoc">Returns the squared length. Faster, since no square-root is taken. Useful, if one only wants to compa...</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:55</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_ada817908a1ed043df718e65d276ba6ff"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#ada817908a1ed043df718e65d276ba6ff">ezVec2Template::CompMax</a></div><div class="ttdeci">const ezVec2Template&lt; Type &gt; CompMax(const ezVec2Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the component-wise maximum of *this and rhs.</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:246</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_a335eb4f6b76ae8ee6bd38051cbe1915d"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#a335eb4f6b76ae8ee6bd38051cbe1915d">ezVec2Template::GetAsVec4</a></div><div class="ttdeci">const ezVec4Template&lt; Type &gt; GetAsVec4(Type z, Type w) const</div><div class="ttdoc">Returns an ezVec4Template with x,y from this vector and z and w set by the parameters.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:18</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_a33d450a53016a7f87e077f074e4e699a"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#a33d450a53016a7f87e077f074e4e699a">ezVec2Template::Abs</a></div><div class="ttdeci">const ezVec2Template&lt; Type &gt; Abs() const</div><div class="ttdoc">brief Returns the component-wise absolute of *this.</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:283</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_a3009fa693fb76d33aaee01cdd0b3c798"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#a3009fa693fb76d33aaee01cdd0b3c798">ezVec2Template::GetAngleBetween</a></div><div class="ttdeci">ezAngle GetAngleBetween(const ezVec2Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the positive angle between *this and rhs.</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:228</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_a9f2ea2e14a56288d5a2e8a479d2b4faa"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#a9f2ea2e14a56288d5a2e8a479d2b4faa">ezVec2Template::IsZero</a></div><div class="ttdeci">bool IsZero() const</div><div class="ttdoc">Returns, whether this vector is (0, 0).</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:111</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_a281237e6c06f98209f68de8bd3c0cdd7"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#a281237e6c06f98209f68de8bd3c0cdd7">ezVec2Template::IsIdentical</a></div><div class="ttdeci">bool IsIdentical(const ezVec2Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Equality Check (bitwise)</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:335</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_a22ca0809b152adb378c0857fc0d4b5b5"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#a22ca0809b152adb378c0857fc0d4b5b5">ezVec2Template::CompMin</a></div><div class="ttdeci">const ezVec2Template&lt; Type &gt; CompMin(const ezVec2Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the component-wise minimum of *this and rhs.</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:237</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_ab1a22a7a2c108318ed503a0c296df082"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#ab1a22a7a2c108318ed503a0c296df082">ezVec2Template::GetAsVec3</a></div><div class="ttdeci">const ezVec3Template&lt; Type &gt; GetAsVec3(Type z) const</div><div class="ttdoc">Returns an ezVec3Template with x,y from this vector and z set by the parameter.</div><div class="ttdef"><b>Definition:</b> Vec4_inl.h:10</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_ad4021a9bc24572671e67c8f5af1b38cb"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#ad4021a9bc24572671e67c8f5af1b38cb">ezVec2Template::IsEqual</a></div><div class="ttdeci">bool IsEqual(const ezVec2Template&lt; Type &gt; &amp;rhs, Type fEpsilon) const</div><div class="ttdoc">Equality Check with epsilon.</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:344</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_a8ca2e709e267f6c1272bec7b1dca9c0c"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#a8ca2e709e267f6c1272bec7b1dca9c0c">ezVec2Template::GetReflectedVector</a></div><div class="ttdeci">const ezVec2Template&lt; Type &gt; GetReflectedVector(const ezVec2Template&lt; Type &gt; &amp;vNormal) const</div><div class="ttdoc">Returns this vector reflected at vNormal.</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:211</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_a33b28d50b1a4fd6e534c4bbeca56d245"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#a33b28d50b1a4fd6e534c4bbeca56d245">ezVec2Template::IsNaN</a></div><div class="ttdeci">bool IsNaN() const</div><div class="ttdoc">Returns true, if any of x or y is NaN.</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:125</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_ada092096c12dada27a1e1fc1e134be8f"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#ada092096c12dada27a1e1fc1e134be8f">ezVec2Template::GetOrthogonalVector</a></div><div class="ttdeci">const ezVec2Template&lt; Type &gt; GetOrthogonalVector() const</div><div class="ttdoc">Returns some arbitrary vector orthogonal to this one. The vector is NOT normalized.</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:202</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_abd8003534d70b28f3c6b675f9a58be1a"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#abd8003534d70b28f3c6b675f9a58be1a">ezVec2Template::operator-</a></div><div class="ttdeci">const ezVec2Template&lt; Type &gt; operator-() const</div><div class="ttdoc">Returns the negation of this vector.</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:147</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_aa84c389f4b054c73a4629ed1c26f2aad"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#aa84c389f4b054c73a4629ed1c26f2aad">ezVec2Template::GetData</a></div><div class="ttdeci">const Type * GetData() const</div><div class="ttdoc">Returns the data as an array.</div><div class="ttdef"><b>Definition:</b> Vec2.h:60</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_ac6f7684574009bcb2a1da27974b8e741"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#ac6f7684574009bcb2a1da27974b8e741">ezVec2Template::operator+=</a></div><div class="ttdeci">void operator+=(const ezVec2Template&lt; Type &gt; &amp;cc)</div><div class="ttdoc">Adds cc component-wise to this vector.</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:155</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_af740e1d40b6054abc97fbc5d3fbdf6b5"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#af740e1d40b6054abc97fbc5d3fbdf6b5">ezVec2Template::MakeOrthogonalTo</a></div><div class="ttdeci">void MakeOrthogonalTo(const ezVec2Template&lt; Type &gt; &amp;vNormal)</div><div class="ttdoc">Modifies this direction vector to be orthogonal to the given (normalized) direction vector....</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:193</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_a24ec8d11fd2dd3ed4c12880ec663b9a9"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#a24ec8d11fd2dd3ed4c12880ec663b9a9">ezVec2Template::IsNormalized</a></div><div class="ttdeci">bool IsNormalized(Type fEpsilon=ezMath::HugeEpsilon&lt; Type &gt;()) const</div><div class="ttdoc">Returns, whether the squared length of this vector is between 0.999f and 1.001f.</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:104</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_a82f66258e16bb7fd098e1749852c483a"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#a82f66258e16bb7fd098e1749852c483a">ezVec2Template::Normalize</a></div><div class="ttdeci">void Normalize()</div><div class="ttdoc">Normalizes this vector.</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:78</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_aced189aa50245299a822c000559f7840"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#aced189aa50245299a822c000559f7840">ezVec2Template::GetData</a></div><div class="ttdeci">Type * GetData()</div><div class="ttdoc">Returns the data as an array.</div><div class="ttdef"><b>Definition:</b> Vec2.h:63</div></div>
<div class="ttc" id="aclassez_angle_htm"><div class="ttname"><a href="../../db/d6f/classez_angle.htm">ezAngle</a></div><div class="ttdoc">Float wrapper struct for a safe usage and conversions of angles.</div><div class="ttdef"><b>Definition:</b> Angle.h:9</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_a5bfb330b990eae4ee79bf01f972d852d"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#a5bfb330b990eae4ee79bf01f972d852d">ezVec2Template::ZeroVector</a></div><div class="ttdeci">static const ezVec2Template&lt; Type &gt; ZeroVector()</div><div class="ttdoc">Static function that returns a zero-vector.</div><div class="ttdef"><b>Definition:</b> Vec2.h:41</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_ab3ba3a3ee06c2566e39014dbdccd91c8"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#ab3ba3a3ee06c2566e39014dbdccd91c8">ezVec2Template::IsValid</a></div><div class="ttdeci">bool IsValid() const</div><div class="ttdoc">Checks that all components are finite numbers.</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:136</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_ab3413fc95c24f2506d3531f54915c224"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#ab3413fc95c24f2506d3531f54915c224">ezVec2Template::operator-=</a></div><div class="ttdeci">void operator-=(const ezVec2Template&lt; Type &gt; &amp;cc)</div><div class="ttdoc">Subtracts cc component-wise from this vector.</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:164</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_adf8ce963aaeb4feda4465f1f8baf8aa1"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#adf8ce963aaeb4feda4465f1f8baf8aa1">ezVec2Template::CompMul</a></div><div class="ttdeci">const ezVec2Template&lt; Type &gt; CompMul(const ezVec2Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the component-wise multiplication of *this and rhs.</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:265</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_a2a5b1af8d3b8c8f95a4e5a53bbf1cfd9"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#a2a5b1af8d3b8c8f95a4e5a53bbf1cfd9">ezVec2Template::ezVec2Template</a></div><div class="ttdeci">ezVec2Template()</div><div class="ttdoc">default-constructed vector is uninitialized (for speed)</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:4</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_a26eb0a5b2b1d8efb393cbae760af2daf"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#a26eb0a5b2b1d8efb393cbae760af2daf">ezVec2Template::GetLength</a></div><div class="ttdeci">Type GetLength() const</div><div class="ttdoc">Returns the length of the vector.</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:49</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_a236b9f5b105fb5fc56c47a8f36590546"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#a236b9f5b105fb5fc56c47a8f36590546">ezVec2Template::CompDiv</a></div><div class="ttdeci">const ezVec2Template&lt; Type &gt; CompDiv(const ezVec2Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the component-wise division of *this and rhs.</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:274</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_a1b9a65ebaa272372f2f90d8f7c527e87"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#a1b9a65ebaa272372f2f90d8f7c527e87">ezVec2Template::operator/=</a></div><div class="ttdeci">void operator/=(Type f)</div><div class="ttdoc">Divides all components of this vector by f.</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:182</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_a4e9198c2dc7d30a43b943161ef2c874d"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#a4e9198c2dc7d30a43b943161ef2c874d">ezVec2Template::GetNormalized</a></div><div class="ttdeci">const ezVec2Template&lt; Type &gt; GetNormalized() const</div><div class="ttdoc">Returns a normalized version of this vector, leaves the vector itself unchanged.</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:69</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_a2f0a2c626e9ec2f773f9828d3e6fe37f"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#a2f0a2c626e9ec2f773f9828d3e6fe37f">ezVec2Template::Set</a></div><div class="ttdeci">void Set(Type xy)</div><div class="ttdoc">Sets all components to this value.</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:29</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_aec49e6576ea3dd778f7443692f6a12eb"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#aec49e6576ea3dd778f7443692f6a12eb">ezVec2Template::CompClamp</a></div><div class="ttdeci">const ezVec2Template&lt; Type &gt; CompClamp(const ezVec2Template&lt; Type &gt; &amp;low, const ezVec2Template&lt; Type &gt; &amp;high) const</div><div class="ttdoc">Returns the component-wise clamped value of *this between low and high.</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:255</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_a3ea36fbb35e0519dd47d4a4f06487260"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#a3ea36fbb35e0519dd47d4a4f06487260">ezVec2Template::GetLengthAndNormalize</a></div><div class="ttdeci">Type GetLengthAndNormalize()</div><div class="ttdoc">Normalizes this vector and returns its previous length in one operation. More efficient than calling ...</div><div class="ttdef"><b>Definition:</b> Vec2_inl.h:61</div></div>
<div class="ttc" id="astructez_vec3_template_htm"><div class="ttname"><a href="../../d6/dbd/structez_vec3_template.htm">ezVec3Template</a></div><div class="ttdoc">A 3-component vector class.</div><div class="ttdef"><b>Definition:</b> Declarations.h:134</div></div>
<div class="ttc" id="aclassez_vec2_template_htm"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm">ezVec2Template</a></div><div class="ttdoc">A 2-component vector class.</div><div class="ttdef"><b>Definition:</b> Declarations.h:126</div></div>
<div class="ttc" id="aclassez_vec4_template_htm"><div class="ttname"><a href="../../da/dd2/classez_vec4_template.htm">ezVec4Template</a></div><div class="ttdoc">A 4-component vector class.</div><div class="ttdef"><b>Definition:</b> Declarations.h:142</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_4ad0f5fbee83b30173e7fecedeea26f0.htm">Math</a></li><li class="navelem"><b>Vec2.h</b></li>
    <li class="footer">Generated on Mon Oct 18 2021 15:33:28 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
