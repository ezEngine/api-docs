<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Math/Vec2.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">ezEngine<span id="projectnumber">&#160;Release 25.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function() { init_codefold(1); });
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('d1/d8e/_vec2_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">Vec2.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="preprocessor">#include &lt;Foundation/Math/Math.h&gt;</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span> </div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="preprocessor">#if EZ_ENABLED(EZ_MATH_CHECK_FOR_NAN)</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="preprocessor">#  define EZ_VEC2_CHECK_FOR_NAN(obj) (obj)-&gt;AssertNotNaN();</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="preprocessor">#else</span></div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="preprocessor">#  define EZ_VEC2_CHECK_FOR_NAN(obj)</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span> </div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00013" data-start="{" data-end="};">
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno"><a class="line" href="../../d1/df8/classez_vec2_template.htm">   13</a></span><span class="keyword">class </span><a class="code hl_class" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template</a></div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span>{</div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span>  <span class="comment">// Means that vectors can be copied using memcpy instead of copy construction.</span></div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span>  EZ_DECLARE_POD_TYPE();</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span> </div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span>  <span class="keyword">using </span>ComponentType = Type;</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span> </div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span> </div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span>  <span class="comment">// *** Data ***</span></div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span>  Type x;</div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span>  Type y;</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span> </div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span>  <span class="comment">// *** Constructors ***</span></div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span>  <a class="code hl_function" href="../../d1/df8/classez_vec2_template.htm#a2a5b1af8d3b8c8f95a4e5a53bbf1cfd9">ezVec2Template</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span> </div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>  <a class="code hl_function" href="../../d1/df8/classez_vec2_template.htm#a2a5b1af8d3b8c8f95a4e5a53bbf1cfd9">ezVec2Template</a>(Type x, Type y); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span> </div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span>  <span class="keyword">explicit</span> <a class="code hl_function" href="../../d1/df8/classez_vec2_template.htm#a2a5b1af8d3b8c8f95a4e5a53bbf1cfd9">ezVec2Template</a>(Type v); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span> </div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>  <span class="comment">// no copy-constructor and operator= since the default-generated ones will be faster</span></div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span> </div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>  EZ_DECLARE_IF_FLOAT_TYPE</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>  [[nodiscard]] <span class="keyword">static</span> <span class="keyword">const</span> <a class="code hl_class" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a></div>
<div class="foldopen" id="foldopen00043" data-start="{" data-end="}">
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno"><a class="line" href="../../d1/df8/classez_vec2_template.htm#a2a5adeec162c5aac14dc45d78f455e0c">   43</a></span>  <a class="code hl_function" href="../../d1/df8/classez_vec2_template.htm#a2a5adeec162c5aac14dc45d78f455e0c">MakeNaN</a>()</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>  {</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>    <span class="keywordflow">return</span> <a class="code hl_class" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>(ezMath::NaN&lt;Type&gt;());</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span>  }</div>
</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span> </div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno"><a class="line" href="../../d1/df8/classez_vec2_template.htm#a84cbdc52881588b68b1e8ab424770c6f">   49</a></span>  [[nodiscard]] <span class="keyword">static</span> <span class="keyword">constexpr</span> <a class="code hl_class" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a> <a class="code hl_function" href="../../d1/df8/classez_vec2_template.htm#a84cbdc52881588b68b1e8ab424770c6f">MakeZero</a>() { <span class="keywordflow">return</span> <a class="code hl_function" href="../../d1/df8/classez_vec2_template.htm#a2a5b1af8d3b8c8f95a4e5a53bbf1cfd9">ezVec2Template</a>(0); } <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span> </div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span><span class="preprocessor">#if EZ_ENABLED(EZ_MATH_CHECK_FOR_NAN)</span></div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>  <span class="keywordtype">void</span> AssertNotNaN()<span class="keyword"> const</span></div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span><span class="keyword">  </span>{</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>    EZ_ASSERT_ALWAYS(!<a class="code hl_function" href="../../d1/df8/classez_vec2_template.htm#a33b28d50b1a4fd6e534c4bbeca56d245">IsNaN</a>(), <span class="stringliteral">&quot;This object contains NaN values. This can happen when you forgot to initialize it before using it. Please &quot;</span></div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>                               <span class="stringliteral">&quot;check that all code-paths properly initialize this object.&quot;</span>);</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>  }</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span> </div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>  <span class="comment">// *** Conversions ***</span></div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../d1/df8/classez_vec2_template.htm#accbb8a6d344dc1238a302d634bbeb882">GetAsVec3</a>(Type z) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span> </div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../da/dd2/classez_vec4_template.htm">ezVec4Template&lt;Type&gt;</a> <a class="code hl_function" href="../../d1/df8/classez_vec2_template.htm#a54ecba38b99286730db12b691454dadb">GetAsVec4</a>(Type z, Type w) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span> </div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno"><a class="line" href="../../d1/df8/classez_vec2_template.htm#a47c8b28b494c31da1e30548781bac12a">   68</a></span>  <span class="keyword">const</span> Type* <a class="code hl_function" href="../../d1/df8/classez_vec2_template.htm#a47c8b28b494c31da1e30548781bac12a">GetData</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> &amp;x; }</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span> </div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno"><a class="line" href="../../d1/df8/classez_vec2_template.htm#a40739b31ec407ab6235f35cfa9122675">   71</a></span>  Type* <a class="code hl_function" href="../../d1/df8/classez_vec2_template.htm#a40739b31ec407ab6235f35cfa9122675">GetData</a>() { <span class="keywordflow">return</span> &amp;x; }</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span> </div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>  <span class="comment">// *** Functions to set the vector to specific values ***</span></div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d1/df8/classez_vec2_template.htm#a2f0a2c626e9ec2f773f9828d3e6fe37f">Set</a>(Type xy); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span> </div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d1/df8/classez_vec2_template.htm#a2f0a2c626e9ec2f773f9828d3e6fe37f">Set</a>(Type x, Type y); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span> </div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d1/df8/classez_vec2_template.htm#a755c841102239d0061f37367e4cce317">SetZero</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span> </div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>  <span class="comment">// *** Functions dealing with length ***</span></div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>  EZ_DECLARE_IF_FLOAT_TYPE</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>  Type <a class="code hl_function" href="../../d1/df8/classez_vec2_template.htm#a83083f92d4feccaa2f6a50b56d768a33">GetLength</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span> </div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>  EZ_DECLARE_IF_FLOAT_TYPE</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>  Type <a class="code hl_function" href="../../d1/df8/classez_vec2_template.htm#a776828883f7201c2ec487dc41ecafb4c">GetDistanceTo</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span> </div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>  EZ_DECLARE_IF_FLOAT_TYPE</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>  Type <a class="code hl_function" href="../../d1/df8/classez_vec2_template.htm#a1a326d73a545375a3cc2e95c63fbc600">GetSquaredDistanceTo</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span> </div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>  EZ_DECLARE_IF_FLOAT_TYPE</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>  <a class="code hl_struct" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code hl_function" href="../../d1/df8/classez_vec2_template.htm#adf2afabef8724ef04776f0f55fca81cc">SetLength</a>(Type fNewLength, Type fEpsilon = ezMath::DefaultEpsilon&lt;Type&gt;()); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span> </div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>  Type <a class="code hl_function" href="../../d1/df8/classez_vec2_template.htm#a2574ac9fc9a489865643a1d98a4fea04">GetLengthSquared</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span> </div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>  EZ_DECLARE_IF_FLOAT_TYPE</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span>  Type <a class="code hl_function" href="../../d1/df8/classez_vec2_template.htm#a6bbffe0dcd82792255be096cf2d2d9ef">GetLengthAndNormalize</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span> </div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>  EZ_DECLARE_IF_FLOAT_TYPE</div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a> <a class="code hl_function" href="../../d1/df8/classez_vec2_template.htm#a0967e46ddff7f261b5d1bfabe8843f65">GetNormalized</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span> </div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>  EZ_DECLARE_IF_FLOAT_TYPE</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d1/df8/classez_vec2_template.htm#a30713349eaf800045d9c27ba3c91f389">Normalize</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span> </div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>  EZ_DECLARE_IF_FLOAT_TYPE</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span>  <a class="code hl_struct" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code hl_function" href="../../d1/df8/classez_vec2_template.htm#a279e4f390b33ac313dc0e48d0f1bf805">NormalizeIfNotZero</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; vFallback = <a class="code hl_class" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>(1, 0), Type fEpsilon = ezMath::DefaultEpsilon&lt;Type&gt;()); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span> </div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d1/df8/classez_vec2_template.htm#a9f2ea2e14a56288d5a2e8a479d2b4faa">IsZero</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span> </div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d1/df8/classez_vec2_template.htm#a9f2ea2e14a56288d5a2e8a479d2b4faa">IsZero</a>(Type fEpsilon) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span> </div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span>  EZ_DECLARE_IF_FLOAT_TYPE</div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d1/df8/classez_vec2_template.htm#a4632ff5c15c25d1989750ef4d4151d47">IsNormalized</a>(Type fEpsilon = ezMath::HugeEpsilon&lt;Type&gt;()) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span> </div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d1/df8/classez_vec2_template.htm#a33b28d50b1a4fd6e534c4bbeca56d245">IsNaN</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span> </div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d1/df8/classez_vec2_template.htm#ab3ba3a3ee06c2566e39014dbdccd91c8">IsValid</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span> </div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span> </div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>  <span class="comment">// *** Operators ***</span></div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a> <a class="code hl_function" href="../../d1/df8/classez_vec2_template.htm#a4dc6e3ba64d7bbcccfa858d3ae1135a7">operator-</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span> </div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d1/df8/classez_vec2_template.htm#a55f2796552f46aa7b67380ff6845637c">operator+=</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; vCc); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span> </div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d1/df8/classez_vec2_template.htm#a7493c4356038710dcb4b705acf49ce97">operator-=</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; vCc); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span> </div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d1/df8/classez_vec2_template.htm#a7e20cc27edfcc9549619a831bfc0f610">operator*=</a>(Type f); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span> </div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d1/df8/classez_vec2_template.htm#a1b9a65ebaa272372f2f90d8f7c527e87">operator/=</a>(Type f); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span> </div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d1/df8/classez_vec2_template.htm#a281237e6c06f98209f68de8bd3c0cdd7">IsIdentical</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span> </div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="../../d1/df8/classez_vec2_template.htm#ad4021a9bc24572671e67c8f5af1b38cb">IsEqual</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; rhs, Type fEpsilon) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span> </div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span> </div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span>  <span class="comment">// *** Common vector operations ***</span></div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span>  <a class="code hl_class" href="../../db/d6f/classez_angle.htm">ezAngle</a> <a class="code hl_function" href="../../d1/df8/classez_vec2_template.htm#a3009fa693fb76d33aaee01cdd0b3c798">GetAngleBetween</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span> </div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span>  Type <a class="code hl_function" href="../../d1/df8/classez_vec2_template.htm#a0ca7ffe429ee82c47161ddcddb4c8a33">Dot</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span> </div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a> <a class="code hl_function" href="../../d1/df8/classez_vec2_template.htm#a76e3db8f7eec0f31e0de2cb82307c5bd">CompMin</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span> </div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a> <a class="code hl_function" href="../../d1/df8/classez_vec2_template.htm#acc1a7a9e5396b0de32ebd593c5f3511e">CompMax</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span> </div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a> <a class="code hl_function" href="../../d1/df8/classez_vec2_template.htm#a8fb2b518297a59e28ca0965c251f7acb">CompClamp</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; vLow, <span class="keyword">const</span> <a class="code hl_class" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; vHigh) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span> </div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a> <a class="code hl_function" href="../../d1/df8/classez_vec2_template.htm#a5d6986dff8ddf8a5ccaf228a71b690d2">CompMul</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span> </div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a> <a class="code hl_function" href="../../d1/df8/classez_vec2_template.htm#ab39374d00ed8ef90426c444f5fa53e26">CompDiv</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span> </div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a> <a class="code hl_function" href="../../d1/df8/classez_vec2_template.htm#a33d450a53016a7f87e077f074e4e699a">Abs</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span> </div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span> </div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span>  <span class="comment">// *** Other common operations ***</span></div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00199" name="l00199"></a><span class="lineno">  199</span>  EZ_DECLARE_IF_FLOAT_TYPE</div>
<div class="line"><a id="l00200" name="l00200"></a><span class="lineno">  200</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../d1/df8/classez_vec2_template.htm#ad44ca104185ceecd4b96b3d1a7b71d94">MakeOrthogonalTo</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; vNormal); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00201" name="l00201"></a><span class="lineno">  201</span> </div>
<div class="line"><a id="l00203" name="l00203"></a><span class="lineno">  203</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a> <a class="code hl_function" href="../../d1/df8/classez_vec2_template.htm#a463841e5534f589501041ee716e8417f">GetOrthogonalVector</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno">  204</span> </div>
<div class="line"><a id="l00206" name="l00206"></a><span class="lineno">  206</span>  EZ_DECLARE_IF_FLOAT_TYPE</div>
<div class="line"><a id="l00207" name="l00207"></a><span class="lineno">  207</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a> <a class="code hl_function" href="../../d1/df8/classez_vec2_template.htm#a646add64320774cd51608f5d6aa614ff">GetReflectedVector</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; vNormal) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00208" name="l00208"></a><span class="lineno">  208</span>};</div>
</div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno">  209</span> </div>
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno">  210</span><span class="comment">// *** Operators ***</span></div>
<div class="line"><a id="l00211" name="l00211"></a><span class="lineno">  211</span> </div>
<div class="line"><a id="l00213" name="l00213"></a><span class="lineno">  213</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno">  214</span><span class="keyword">const</span> <a class="code hl_class" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a> operator+(<span class="keyword">const</span> <a class="code hl_class" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; v1, <span class="keyword">const</span> <a class="code hl_class" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; v2); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00215" name="l00215"></a><span class="lineno">  215</span> </div>
<div class="line"><a id="l00217" name="l00217"></a><span class="lineno">  217</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00218" name="l00218"></a><span class="lineno">  218</span><span class="keyword">const</span> <a class="code hl_class" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a> operator-(<span class="keyword">const</span> <a class="code hl_class" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; v1, <span class="keyword">const</span> <a class="code hl_class" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; v2); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00219" name="l00219"></a><span class="lineno">  219</span> </div>
<div class="line"><a id="l00221" name="l00221"></a><span class="lineno">  221</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00222" name="l00222"></a><span class="lineno">  222</span><span class="keyword">const</span> <a class="code hl_class" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a> operator*(Type f, <span class="keyword">const</span> <a class="code hl_class" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; v); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00223" name="l00223"></a><span class="lineno">  223</span> </div>
<div class="line"><a id="l00225" name="l00225"></a><span class="lineno">  225</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00226" name="l00226"></a><span class="lineno">  226</span><span class="keyword">const</span> <a class="code hl_class" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a> operator*(<span class="keyword">const</span> <a class="code hl_class" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; v, Type f); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00227" name="l00227"></a><span class="lineno">  227</span> </div>
<div class="line"><a id="l00229" name="l00229"></a><span class="lineno">  229</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00230" name="l00230"></a><span class="lineno">  230</span><span class="keyword">const</span> <a class="code hl_class" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a> operator/(<span class="keyword">const</span> <a class="code hl_class" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; v, Type f); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00231" name="l00231"></a><span class="lineno">  231</span> </div>
<div class="line"><a id="l00233" name="l00233"></a><span class="lineno">  233</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00234" name="l00234"></a><span class="lineno">  234</span><span class="keywordtype">bool</span> operator==(<span class="keyword">const</span> <a class="code hl_class" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; v1, <span class="keyword">const</span> <a class="code hl_class" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; v2); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00235" name="l00235"></a><span class="lineno">  235</span> </div>
<div class="line"><a id="l00237" name="l00237"></a><span class="lineno">  237</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00238" name="l00238"></a><span class="lineno">  238</span><span class="keywordtype">bool</span> operator!=(<span class="keyword">const</span> <a class="code hl_class" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; v1, <span class="keyword">const</span> <a class="code hl_class" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; v2); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00239" name="l00239"></a><span class="lineno">  239</span> </div>
<div class="line"><a id="l00241" name="l00241"></a><span class="lineno">  241</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00242" name="l00242"></a><span class="lineno">  242</span><span class="keywordtype">bool</span> operator&lt;(<span class="keyword">const</span> <a class="code hl_class" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; v1, <span class="keyword">const</span> <a class="code hl_class" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; v2);</div>
<div class="line"><a id="l00243" name="l00243"></a><span class="lineno">  243</span> </div>
<div class="line"><a id="l00244" name="l00244"></a><span class="lineno">  244</span><span class="preprocessor">#include &lt;Foundation/Math/Implementation/Vec2_inl.h&gt;</span></div>
<div class="ttc" id="aclassez_angle_htm"><div class="ttname"><a href="../../db/d6f/classez_angle.htm">ezAngle</a></div><div class="ttdoc">Float wrapper struct for a safe usage and conversions of angles.</div><div class="ttdef"><b>Definition</b> Angle.h:10</div></div>
<div class="ttc" id="aclassez_vec2_template_htm"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm">ezVec2Template</a></div><div class="ttdoc">A 2-component vector class.</div><div class="ttdef"><b>Definition</b> Vec2.h:14</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_a0967e46ddff7f261b5d1bfabe8843f65"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#a0967e46ddff7f261b5d1bfabe8843f65">ezVec2Template::GetNormalized</a></div><div class="ttdeci">EZ_DECLARE_IF_FLOAT_TYPE const ezVec2Template&lt; Type &gt; GetNormalized() const</div><div class="ttdoc">Returns a normalized version of this vector, leaves the vector itself unchanged.</div><div class="ttdef"><b>Definition</b> Vec2_inl.h:91</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_a0ca7ffe429ee82c47161ddcddb4c8a33"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#a0ca7ffe429ee82c47161ddcddb4c8a33">ezVec2Template::Dot</a></div><div class="ttdeci">Type Dot(const ezVec2Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the Dot-product of the two vectors (commutative, order does not matter)</div><div class="ttdef"><b>Definition</b> Vec2_inl.h:248</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_a1a326d73a545375a3cc2e95c63fbc600"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#a1a326d73a545375a3cc2e95c63fbc600">ezVec2Template::GetSquaredDistanceTo</a></div><div class="ttdeci">EZ_DECLARE_IF_FLOAT_TYPE Type GetSquaredDistanceTo(const ezVec2Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the squared length between this position and rhs.</div><div class="ttdef"><b>Definition</b> Vec2_inl.h:61</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_a1b9a65ebaa272372f2f90d8f7c527e87"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#a1b9a65ebaa272372f2f90d8f7c527e87">ezVec2Template::operator/=</a></div><div class="ttdeci">void operator/=(Type f)</div><div class="ttdoc">Divides all components of this vector by f.</div><div class="ttdef"><b>Definition</b> Vec2_inl.h:204</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_a2574ac9fc9a489865643a1d98a4fea04"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#a2574ac9fc9a489865643a1d98a4fea04">ezVec2Template::GetLengthSquared</a></div><div class="ttdeci">Type GetLengthSquared() const</div><div class="ttdoc">Returns the squared length. Faster, since no square-root is taken. Useful, if one only wants to compa...</div><div class="ttdef"><b>Definition</b> Vec2_inl.h:77</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_a279e4f390b33ac313dc0e48d0f1bf805"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#a279e4f390b33ac313dc0e48d0f1bf805">ezVec2Template::NormalizeIfNotZero</a></div><div class="ttdeci">EZ_DECLARE_IF_FLOAT_TYPE ezResult NormalizeIfNotZero(const ezVec2Template&lt; Type &gt; &amp;vFallback=ezVec2Template&lt; Type &gt;(1, 0), Type fEpsilon=ezMath::DefaultEpsilon&lt; Type &gt;())</div><div class="ttdoc">Tries to normalize this vector. If the vector is too close to zero, EZ_FAILURE is returned and the ve...</div><div class="ttdef"><b>Definition</b> Vec2_inl.h:106</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_a281237e6c06f98209f68de8bd3c0cdd7"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#a281237e6c06f98209f68de8bd3c0cdd7">ezVec2Template::IsIdentical</a></div><div class="ttdeci">bool IsIdentical(const ezVec2Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Equality Check (bitwise)</div><div class="ttdef"><b>Definition</b> Vec2_inl.h:371</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_a2a5adeec162c5aac14dc45d78f455e0c"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#a2a5adeec162c5aac14dc45d78f455e0c">ezVec2Template::MakeNaN</a></div><div class="ttdeci">static EZ_DECLARE_IF_FLOAT_TYPE const ezVec2Template&lt; Type &gt; MakeNaN()</div><div class="ttdoc">Returns a vector with all components set to Not-a-Number (NaN).</div><div class="ttdef"><b>Definition</b> Vec2.h:43</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_a2a5b1af8d3b8c8f95a4e5a53bbf1cfd9"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#a2a5b1af8d3b8c8f95a4e5a53bbf1cfd9">ezVec2Template::ezVec2Template</a></div><div class="ttdeci">ezVec2Template()</div><div class="ttdoc">default-constructed vector is uninitialized (for speed)</div><div class="ttdef"><b>Definition</b> Vec2_inl.h:4</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_a2f0a2c626e9ec2f773f9828d3e6fe37f"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#a2f0a2c626e9ec2f773f9828d3e6fe37f">ezVec2Template::Set</a></div><div class="ttdeci">void Set(Type xy)</div><div class="ttdoc">Sets all components to this value.</div><div class="ttdef"><b>Definition</b> Vec2_inl.h:29</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_a3009fa693fb76d33aaee01cdd0b3c798"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#a3009fa693fb76d33aaee01cdd0b3c798">ezVec2Template::GetAngleBetween</a></div><div class="ttdeci">ezAngle GetAngleBetween(const ezVec2Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the positive angle between *this and rhs.</div><div class="ttdef"><b>Definition</b> Vec2_inl.h:257</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_a30713349eaf800045d9c27ba3c91f389"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#a30713349eaf800045d9c27ba3c91f389">ezVec2Template::Normalize</a></div><div class="ttdeci">EZ_DECLARE_IF_FLOAT_TYPE void Normalize()</div><div class="ttdoc">Normalizes this vector.</div><div class="ttdef"><b>Definition</b> Vec2_inl.h:100</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_a33b28d50b1a4fd6e534c4bbeca56d245"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#a33b28d50b1a4fd6e534c4bbeca56d245">ezVec2Template::IsNaN</a></div><div class="ttdeci">bool IsNaN() const</div><div class="ttdoc">Returns true, if any of x or y is NaN.</div><div class="ttdef"><b>Definition</b> Vec2_inl.h:147</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_a33d450a53016a7f87e077f074e4e699a"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#a33d450a53016a7f87e077f074e4e699a">ezVec2Template::Abs</a></div><div class="ttdeci">const ezVec2Template&lt; Type &gt; Abs() const</div><div class="ttdoc">brief Returns the component-wise absolute of *this.</div><div class="ttdef"><b>Definition</b> Vec2_inl.h:312</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_a40739b31ec407ab6235f35cfa9122675"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#a40739b31ec407ab6235f35cfa9122675">ezVec2Template::GetData</a></div><div class="ttdeci">Type * GetData()</div><div class="ttdoc">Returns the data as an array.</div><div class="ttdef"><b>Definition</b> Vec2.h:71</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_a4632ff5c15c25d1989750ef4d4151d47"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#a4632ff5c15c25d1989750ef4d4151d47">ezVec2Template::IsNormalized</a></div><div class="ttdeci">EZ_DECLARE_IF_FLOAT_TYPE bool IsNormalized(Type fEpsilon=ezMath::HugeEpsilon&lt; Type &gt;()) const</div><div class="ttdoc">Returns, whether the squared length of this vector is between 0.999f and 1.001f.</div><div class="ttdef"><b>Definition</b> Vec2_inl.h:126</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_a463841e5534f589501041ee716e8417f"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#a463841e5534f589501041ee716e8417f">ezVec2Template::GetOrthogonalVector</a></div><div class="ttdeci">const ezVec2Template&lt; Type &gt; GetOrthogonalVector() const</div><div class="ttdoc">Returns some arbitrary vector orthogonal to this one. The vector is NOT normalized.</div><div class="ttdef"><b>Definition</b> Vec2_inl.h:231</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_a47c8b28b494c31da1e30548781bac12a"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#a47c8b28b494c31da1e30548781bac12a">ezVec2Template::GetData</a></div><div class="ttdeci">const Type * GetData() const</div><div class="ttdoc">Returns the data as an array.</div><div class="ttdef"><b>Definition</b> Vec2.h:68</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_a4dc6e3ba64d7bbcccfa858d3ae1135a7"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#a4dc6e3ba64d7bbcccfa858d3ae1135a7">ezVec2Template::operator-</a></div><div class="ttdeci">const ezVec2Template&lt; Type &gt; operator-() const</div><div class="ttdoc">Returns the negation of this vector.</div><div class="ttdef"><b>Definition</b> Vec2_inl.h:169</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_a54ecba38b99286730db12b691454dadb"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#a54ecba38b99286730db12b691454dadb">ezVec2Template::GetAsVec4</a></div><div class="ttdeci">const ezVec4Template&lt; Type &gt; GetAsVec4(Type z, Type w) const</div><div class="ttdoc">Returns an ezVec4Template with x,y from this vector and z and w set by the parameters.</div><div class="ttdef"><b>Definition</b> Vec4_inl.h:18</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_a55f2796552f46aa7b67380ff6845637c"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#a55f2796552f46aa7b67380ff6845637c">ezVec2Template::operator+=</a></div><div class="ttdeci">void operator+=(const ezVec2Template&lt; Type &gt; &amp;vCc)</div><div class="ttdoc">Adds cc component-wise to this vector.</div><div class="ttdef"><b>Definition</b> Vec2_inl.h:177</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_a5d6986dff8ddf8a5ccaf228a71b690d2"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#a5d6986dff8ddf8a5ccaf228a71b690d2">ezVec2Template::CompMul</a></div><div class="ttdeci">const ezVec2Template&lt; Type &gt; CompMul(const ezVec2Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the component-wise multiplication of *this and rhs.</div><div class="ttdef"><b>Definition</b> Vec2_inl.h:294</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_a646add64320774cd51608f5d6aa614ff"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#a646add64320774cd51608f5d6aa614ff">ezVec2Template::GetReflectedVector</a></div><div class="ttdeci">EZ_DECLARE_IF_FLOAT_TYPE const ezVec2Template&lt; Type &gt; GetReflectedVector(const ezVec2Template&lt; Type &gt; &amp;vNormal) const</div><div class="ttdoc">Returns this vector reflected at vNormal.</div><div class="ttdef"><b>Definition</b> Vec2_inl.h:240</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_a6bbffe0dcd82792255be096cf2d2d9ef"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#a6bbffe0dcd82792255be096cf2d2d9ef">ezVec2Template::GetLengthAndNormalize</a></div><div class="ttdeci">EZ_DECLARE_IF_FLOAT_TYPE Type GetLengthAndNormalize()</div><div class="ttdoc">Normalizes this vector and returns its previous length in one operation. More efficient than calling ...</div><div class="ttdef"><b>Definition</b> Vec2_inl.h:83</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_a7493c4356038710dcb4b705acf49ce97"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#a7493c4356038710dcb4b705acf49ce97">ezVec2Template::operator-=</a></div><div class="ttdeci">void operator-=(const ezVec2Template&lt; Type &gt; &amp;vCc)</div><div class="ttdoc">Subtracts cc component-wise from this vector.</div><div class="ttdef"><b>Definition</b> Vec2_inl.h:186</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_a755c841102239d0061f37367e4cce317"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#a755c841102239d0061f37367e4cce317">ezVec2Template::SetZero</a></div><div class="ttdeci">void SetZero()</div><div class="ttdoc">Sets the vector to all zero.</div><div class="ttdef"><b>Definition</b> Vec2_inl.h:43</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_a76e3db8f7eec0f31e0de2cb82307c5bd"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#a76e3db8f7eec0f31e0de2cb82307c5bd">ezVec2Template::CompMin</a></div><div class="ttdeci">const ezVec2Template&lt; Type &gt; CompMin(const ezVec2Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the component-wise minimum of *this and rhs.</div><div class="ttdef"><b>Definition</b> Vec2_inl.h:266</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_a776828883f7201c2ec487dc41ecafb4c"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#a776828883f7201c2ec487dc41ecafb4c">ezVec2Template::GetDistanceTo</a></div><div class="ttdeci">EZ_DECLARE_IF_FLOAT_TYPE Type GetDistanceTo(const ezVec2Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the length between this position and rhs.</div><div class="ttdef"><b>Definition</b> Vec2_inl.h:55</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_a7e20cc27edfcc9549619a831bfc0f610"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#a7e20cc27edfcc9549619a831bfc0f610">ezVec2Template::operator*=</a></div><div class="ttdeci">void operator*=(Type f)</div><div class="ttdoc">Multiplies all components of this vector with f.</div><div class="ttdef"><b>Definition</b> Vec2_inl.h:195</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_a83083f92d4feccaa2f6a50b56d768a33"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#a83083f92d4feccaa2f6a50b56d768a33">ezVec2Template::GetLength</a></div><div class="ttdeci">EZ_DECLARE_IF_FLOAT_TYPE Type GetLength() const</div><div class="ttdoc">Returns the length of the vector.</div><div class="ttdef"><b>Definition</b> Vec2_inl.h:49</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_a84cbdc52881588b68b1e8ab424770c6f"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#a84cbdc52881588b68b1e8ab424770c6f">ezVec2Template::MakeZero</a></div><div class="ttdeci">static constexpr ezVec2Template&lt; Type &gt; MakeZero()</div><div class="ttdoc">Static function that returns a zero-vector.</div><div class="ttdef"><b>Definition</b> Vec2.h:49</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_a8fb2b518297a59e28ca0965c251f7acb"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#a8fb2b518297a59e28ca0965c251f7acb">ezVec2Template::CompClamp</a></div><div class="ttdeci">const ezVec2Template&lt; Type &gt; CompClamp(const ezVec2Template&lt; Type &gt; &amp;vLow, const ezVec2Template&lt; Type &gt; &amp;vHigh) const</div><div class="ttdoc">Returns the component-wise clamped value of *this between low and high.</div><div class="ttdef"><b>Definition</b> Vec2_inl.h:284</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_a9f2ea2e14a56288d5a2e8a479d2b4faa"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#a9f2ea2e14a56288d5a2e8a479d2b4faa">ezVec2Template::IsZero</a></div><div class="ttdeci">bool IsZero() const</div><div class="ttdoc">Returns, whether this vector is (0, 0).</div><div class="ttdef"><b>Definition</b> Vec2_inl.h:133</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_ab39374d00ed8ef90426c444f5fa53e26"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#ab39374d00ed8ef90426c444f5fa53e26">ezVec2Template::CompDiv</a></div><div class="ttdeci">const ezVec2Template&lt; Type &gt; CompDiv(const ezVec2Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the component-wise division of *this and rhs.</div><div class="ttdef"><b>Definition</b> Vec2_inl.h:303</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_ab3ba3a3ee06c2566e39014dbdccd91c8"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#ab3ba3a3ee06c2566e39014dbdccd91c8">ezVec2Template::IsValid</a></div><div class="ttdeci">bool IsValid() const</div><div class="ttdoc">Checks that all components are finite numbers.</div><div class="ttdef"><b>Definition</b> Vec2_inl.h:158</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_acc1a7a9e5396b0de32ebd593c5f3511e"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#acc1a7a9e5396b0de32ebd593c5f3511e">ezVec2Template::CompMax</a></div><div class="ttdeci">const ezVec2Template&lt; Type &gt; CompMax(const ezVec2Template&lt; Type &gt; &amp;rhs) const</div><div class="ttdoc">Returns the component-wise maximum of *this and rhs.</div><div class="ttdef"><b>Definition</b> Vec2_inl.h:275</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_accbb8a6d344dc1238a302d634bbeb882"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#accbb8a6d344dc1238a302d634bbeb882">ezVec2Template::GetAsVec3</a></div><div class="ttdeci">const ezVec3Template&lt; Type &gt; GetAsVec3(Type z) const</div><div class="ttdoc">Returns an ezVec3Template with x,y from this vector and z set by the parameter.</div><div class="ttdef"><b>Definition</b> Vec4_inl.h:10</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_ad4021a9bc24572671e67c8f5af1b38cb"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#ad4021a9bc24572671e67c8f5af1b38cb">ezVec2Template::IsEqual</a></div><div class="ttdeci">bool IsEqual(const ezVec2Template&lt; Type &gt; &amp;rhs, Type fEpsilon) const</div><div class="ttdoc">Equality Check with epsilon.</div><div class="ttdef"><b>Definition</b> Vec2_inl.h:380</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_ad44ca104185ceecd4b96b3d1a7b71d94"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#ad44ca104185ceecd4b96b3d1a7b71d94">ezVec2Template::MakeOrthogonalTo</a></div><div class="ttdeci">EZ_DECLARE_IF_FLOAT_TYPE void MakeOrthogonalTo(const ezVec2Template&lt; Type &gt; &amp;vNormal)</div><div class="ttdoc">Modifies this direction vector to be orthogonal to the given (normalized) direction vector....</div><div class="ttdef"><b>Definition</b> Vec2_inl.h:222</div></div>
<div class="ttc" id="aclassez_vec2_template_htm_adf2afabef8724ef04776f0f55fca81cc"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm#adf2afabef8724ef04776f0f55fca81cc">ezVec2Template::SetLength</a></div><div class="ttdeci">EZ_DECLARE_IF_FLOAT_TYPE ezResult SetLength(Type fNewLength, Type fEpsilon=ezMath::DefaultEpsilon&lt; Type &gt;())</div><div class="ttdoc">Tries to rescale the vector to the given length. If the vector is too close to zero,...</div><div class="ttdef"><b>Definition</b> Vec2_inl.h:67</div></div>
<div class="ttc" id="aclassez_vec3_template_htm"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm">ezVec3Template</a></div><div class="ttdoc">A 3-component vector class.</div><div class="ttdef"><b>Definition</b> Vec3.h:9</div></div>
<div class="ttc" id="aclassez_vec4_template_htm"><div class="ttname"><a href="../../da/dd2/classez_vec4_template.htm">ezVec4Template</a></div><div class="ttdoc">A 4-component vector class.</div><div class="ttdef"><b>Definition</b> Vec4.h:9</div></div>
<div class="ttc" id="astructez_result_htm"><div class="ttname"><a href="../../d4/da9/structez_result.htm">ezResult</a></div><div class="ttdoc">Default enum for returning failure or success, instead of using a bool.</div><div class="ttdef"><b>Definition</b> Types.h:54</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_4ad0f5fbee83b30173e7fecedeea26f0.htm">Math</a></li><li class="navelem"><b>Vec2.h</b></li>
    <li class="footer">Generated on Fri Jul 11 2025 12:17:52 for ezEngine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
