<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: ezMapBase&lt; KeyType, ValueType, Comparer &gt; Class Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 21.6</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search','.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d1/d43/classez_map_base.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="../../d2/dd7/classez_map_base-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ezMapBase&lt; KeyType, ValueType, Comparer &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>An associative container. Similar to STL::map.  
 <a href="../../d1/d43/classez_map_base.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d3/d63/_map_8h_source.htm">Map.h</a>&gt;</code></p>

<p>Inherited by <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezInt8, ezSet&lt; ezHybridString &gt; &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, ezTimestamp &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezUInt64, ezHybridString &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, ezDocumentObject * &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHashedString, ezHashSet&lt; ezHashedString &gt; &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezDocumentNodeManager::PinTuple, ezConnection * &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, const ezDocumentTypeDescriptor * &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; const ezRTTI *, ezVisualShaderNodeDescriptor &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; const ezPin *, OutputPinState &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, StatsData &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; const ezDocument *, ezMap&lt; ezActionDescriptorHandle, QWeakPointer&lt; ezQtProxy &gt; &gt; &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, ezParticleEffectHandle &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezUInt32, ezDynamicArray&lt; VkResource * &gt;, ezCompareHelper&lt; ezUInt32 &gt;, ezLocalAllocatorWrapper &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezDynamicTree::ezMultiMapKey, ezDynamicTree::ezObjectData &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; const ezRTTI *, ezActorPlugin * &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; const ezRTTI *, ezVisualScriptNodeDescriptor &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezGameObjectHandle, ezUInt32 &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, ezHybridArray&lt; ezHybridString, 4 &gt; &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; const ezRTTI *, ezResourceManager::ResourceTypeInfo &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; const ezRTTI *, ezResourcePriority &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; const ezDocument *, ezMap&lt; const ezRTTI *, ezPreferences * &gt; &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, ezParticleStreamFactory * &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; const ezDocument *, DocData &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, ShaderData &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; const ezRTTI *, ezHybridArray&lt; ezResourceManager::DerivedTypeInfo, 4 &gt; &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; const ezRenderPipelinePass *, ConnectionData &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, ezCVarWidgetData &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; physx::PxConstraint *, ezComponentHandle &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, ezOpenDdlReaderElement * &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; AssignFuncKey, ezVisualScriptDataPinAssignFunc &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; QString, CacheEntry &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; PropertySemantic, ezVariant &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezUInt32, ezDynamicArray&lt; ID3D11Resource * &gt;, ezCompareHelper&lt; ezUInt32 &gt;, ezLocalAllocatorWrapper &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, ezUniquePtr&lt; ezAssetDocumentInfo &gt; &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; const char *, ezAbstractObjectNode *, CompareConstChar &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezUuid, ezScriptCompendiumResourceDesc::ComponentTypeInfo &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; const ezRTTI *, ReflectedTypeStorageMapping * &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, PropertyWidgetData &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; QModelIndex, bool &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; HandleType, ezUuid &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; const ezSkeletonResource *, CachedAnim &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; const ezRTTI *, ezResourceTypeLoader * &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, QPixmap &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, QImage &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezInt64, QCheckBox * &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; QString, QPixmap &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezGeometry::Vertex, ezUInt32 &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezComponentHandle, ezUInt32 &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, ezTypeScriptBinding::ConsoleFuncBinding &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezUuid, bool &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, QIcon &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; const ezDocumentObject *, ezQtNode * &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezUInt32, ezDynamicArray&lt; ezGALTextureHandle &gt; &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, ezFmodConfiguration &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, float &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, ezHybridString &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; const ezDocumentObject *, NodeState &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, ezRenderWorld::CameraConfig &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezActionDescriptorHandle, QWeakPointer&lt; ezQtProxy &gt; &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; PxRigidDynamic *, SlidingInfo &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezUInt32, ezHybridArray&lt; MeshInstance, 4 &gt; &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, ezVariant &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezUuid, ParamData &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, ezDynamicStringEnum &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, ezFileStatus &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, ezHybridArray&lt; ezUuid, 1 &gt; &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, CategoryData &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezUuid, TsComponentInfo &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, ezTokenizedFileCache::FileData &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ShaderVertexDecl, ezGALVertexDeclarationHandle &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezUuid, ezHybridArray&lt; GoReferencedBy, 4 &gt; &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString&lt; 64 &gt;, ezUInt32 &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezUInt32, ezShaderStageBinary &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, ClockData &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, SubsystemData &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, TransferDataObject &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezUuid, Binding &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, MacroDefinition &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, ezPluginInfo &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; const ezDocument *, Data &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezString, ezActionMap &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, ezUInt16 &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezUuid, ezTypeScriptBinding::TsComponentInfo &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezUuid, ezHybridArray&lt; GoReferenceTo, 4 &gt; &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, ezDynamicEnum &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezInt32, ezHybridString &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, ezActionMap * &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, ezUniquePtr&lt; ezCVar &gt; &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, QStandardItem * &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezUInt32, bool &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezUuid, const ezDocument * &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, ActionData &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, TransferData &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezUuid, ezUniquePtr&lt; PrefabData &gt; &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, ezColor &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, ezModelImporter2::OutputTexture &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; const ezRTTI *, ezGameObjectEditTool * &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, FileCacheStatus &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, FileCheckCache &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, ezFileStatus, ezCompareString_NoCase &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, PropertyValue &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, ezToolsTag &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, FileContent &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, const ezRTTI * &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezUInt32, ezDynamicArray&lt; ezConstantBufferStorageBase * &gt; &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, PluginsData &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezUInt32, AllocatorData &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, StatData &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, GlobalEventsData &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, ezPropertyUiState &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezUInt64, ezUniquePtr&lt; ezAbstractObjectGraph &gt; &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezString, ezInputSlot &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezUuid, ezDocumentNodeManager::NodeInternal &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezTempHashedString, ezTag &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, TypeData &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; const ezConnection *, ezQtConnection * &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, QTreeWidgetItem * &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, ezSet&lt; ezHybridString &gt; &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezUInt64, MessageQueue &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; size_t, ezSingletonRegistry::SingletonEntry &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezResource *, ezUniquePtr&lt; ezResourceTypeLoader &gt; &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; QWidget *, ezMap&lt; ezActionDescriptorHandle, QWeakPointer&lt; ezQtProxy &gt; &gt; &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, ezOBJLoader::Material &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezUuid, ezEditorEngineSyncObject * &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezUInt32, physx::PxRigidDynamic * &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezUuid, ezTreeNode&lt; ezActionMapDescriptor &gt; * &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, SlotData &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezHybridString, ezUInt32 &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; TextureSemantic, ezHybridString &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezUInt32, ezDynamicArray&lt; ezGALBufferHandle &gt; &gt;</a>, <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezUuid, ezAbstractObjectNode * &gt;</a>, and <a class="el" href="../../d1/d79/classez_map.htm">ezMap&lt; ezUInt64, HashedData, ezCompareHelper&lt; ezUInt64 &gt;, ezStaticAllocatorWrapper &gt;</a>.</p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm">ConstIterator</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Base class for all iterators.  <a href="../../dd/d35/structez_map_base_1_1_const_iterator.htm#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../da/d8e/structez_map_base_1_1_iterator.htm">Iterator</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Forward <a class="el" href="../../da/d8e/structez_map_base_1_1_iterator.htm" title="Forward Iterator to iterate over all elements in sorted order.">Iterator</a> to iterate over all elements in sorted order.  <a href="../../da/d8e/structez_map_base_1_1_iterator.htm#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a7c62813d3d15be2f07144978dbb43271"><td class="memItemLeft" align="right" valign="top"><a id="a7c62813d3d15be2f07144978dbb43271"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d43/classez_map_base.htm#a7c62813d3d15be2f07144978dbb43271">IsEmpty</a> () const</td></tr>
<tr class="memdesc:a7c62813d3d15be2f07144978dbb43271"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether there are no elements in the map. O(1) operation. <br /></td></tr>
<tr class="separator:a7c62813d3d15be2f07144978dbb43271"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a400e55a001e58137d0e483a2aba85784"><td class="memItemLeft" align="right" valign="top"><a id="a400e55a001e58137d0e483a2aba85784"></a>
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d43/classez_map_base.htm#a400e55a001e58137d0e483a2aba85784">GetCount</a> () const</td></tr>
<tr class="memdesc:a400e55a001e58137d0e483a2aba85784"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of elements currently stored in the map. O(1) operation. <br /></td></tr>
<tr class="separator:a400e55a001e58137d0e483a2aba85784"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5946a15134311c8353deeee06670e412"><td class="memItemLeft" align="right" valign="top"><a id="a5946a15134311c8353deeee06670e412"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d43/classez_map_base.htm#a5946a15134311c8353deeee06670e412">Clear</a> ()</td></tr>
<tr class="memdesc:a5946a15134311c8353deeee06670e412"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys all elements in the map and resets its size to zero. <br /></td></tr>
<tr class="separator:a5946a15134311c8353deeee06670e412"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d3a11d700c00c174e5bf1e8c88af252"><td class="memItemLeft" align="right" valign="top"><a id="a7d3a11d700c00c174e5bf1e8c88af252"></a>
<a class="el" href="../../da/d8e/structez_map_base_1_1_iterator.htm">Iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d43/classez_map_base.htm#a7d3a11d700c00c174e5bf1e8c88af252">GetIterator</a> ()</td></tr>
<tr class="memdesc:a7d3a11d700c00c174e5bf1e8c88af252"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an <a class="el" href="../../da/d8e/structez_map_base_1_1_iterator.htm" title="Forward Iterator to iterate over all elements in sorted order.">Iterator</a> to the very first element. <br /></td></tr>
<tr class="separator:a7d3a11d700c00c174e5bf1e8c88af252"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea49970324624af1a95d31313c37ebc2"><td class="memItemLeft" align="right" valign="top"><a id="aea49970324624af1a95d31313c37ebc2"></a>
<a class="el" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm">ConstIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d43/classez_map_base.htm#aea49970324624af1a95d31313c37ebc2">GetIterator</a> () const</td></tr>
<tr class="memdesc:aea49970324624af1a95d31313c37ebc2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a constant <a class="el" href="../../da/d8e/structez_map_base_1_1_iterator.htm" title="Forward Iterator to iterate over all elements in sorted order.">Iterator</a> to the very first element. <br /></td></tr>
<tr class="separator:aea49970324624af1a95d31313c37ebc2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68d45b6daaccaa2bbf631bbab121efb8"><td class="memItemLeft" align="right" valign="top"><a id="a68d45b6daaccaa2bbf631bbab121efb8"></a>
<a class="el" href="../../da/d8e/structez_map_base_1_1_iterator.htm">Iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d43/classez_map_base.htm#a68d45b6daaccaa2bbf631bbab121efb8">GetLastIterator</a> ()</td></tr>
<tr class="memdesc:a68d45b6daaccaa2bbf631bbab121efb8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an <a class="el" href="../../da/d8e/structez_map_base_1_1_iterator.htm" title="Forward Iterator to iterate over all elements in sorted order.">Iterator</a> to the very last element. For reverse traversal. <br /></td></tr>
<tr class="separator:a68d45b6daaccaa2bbf631bbab121efb8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af00870338493eb08d541cabeb1a93e4d"><td class="memItemLeft" align="right" valign="top"><a id="af00870338493eb08d541cabeb1a93e4d"></a>
<a class="el" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm">ConstIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d43/classez_map_base.htm#af00870338493eb08d541cabeb1a93e4d">GetLastIterator</a> () const</td></tr>
<tr class="memdesc:af00870338493eb08d541cabeb1a93e4d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a constant <a class="el" href="../../da/d8e/structez_map_base_1_1_iterator.htm" title="Forward Iterator to iterate over all elements in sorted order.">Iterator</a> to the very last element. For reverse traversal. <br /></td></tr>
<tr class="separator:af00870338493eb08d541cabeb1a93e4d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a25d049c3f258c4640642ef5c1ea04d17"><td class="memTemplParams" colspan="2"><a id="a25d049c3f258c4640642ef5c1ea04d17"></a>
template&lt;typename CompatibleKeyType , typename CompatibleValueType &gt; </td></tr>
<tr class="memitem:a25d049c3f258c4640642ef5c1ea04d17"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="../../da/d8e/structez_map_base_1_1_iterator.htm">Iterator</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../d1/d43/classez_map_base.htm#a25d049c3f258c4640642ef5c1ea04d17">Insert</a> (CompatibleKeyType &amp;&amp;key, CompatibleValueType &amp;&amp;value)</td></tr>
<tr class="memdesc:a25d049c3f258c4640642ef5c1ea04d17"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inserts the key/value pair into the tree and returns an <a class="el" href="../../da/d8e/structez_map_base_1_1_iterator.htm" title="Forward Iterator to iterate over all elements in sorted order.">Iterator</a> to it. O(log n) operation. <br /></td></tr>
<tr class="separator:a25d049c3f258c4640642ef5c1ea04d17"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39ec812de69d422bdff1acc12d1d516f"><td class="memTemplParams" colspan="2"><a id="a39ec812de69d422bdff1acc12d1d516f"></a>
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a39ec812de69d422bdff1acc12d1d516f"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../d1/d43/classez_map_base.htm#a39ec812de69d422bdff1acc12d1d516f">Remove</a> (const CompatibleKeyType &amp;key)</td></tr>
<tr class="memdesc:a39ec812de69d422bdff1acc12d1d516f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Erases the key/value pair with the given key, if it exists. O(log n) operation. <br /></td></tr>
<tr class="separator:a39ec812de69d422bdff1acc12d1d516f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac5898be4e807c0b5c9f260a9bc7d2455"><td class="memItemLeft" align="right" valign="top"><a id="ac5898be4e807c0b5c9f260a9bc7d2455"></a>
<a class="el" href="../../da/d8e/structez_map_base_1_1_iterator.htm">Iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d43/classez_map_base.htm#ac5898be4e807c0b5c9f260a9bc7d2455">Remove</a> (const <a class="el" href="../../da/d8e/structez_map_base_1_1_iterator.htm">Iterator</a> &amp;pos)</td></tr>
<tr class="memdesc:ac5898be4e807c0b5c9f260a9bc7d2455"><td class="mdescLeft">&#160;</td><td class="mdescRight">Erases the key/value pair at the given <a class="el" href="../../da/d8e/structez_map_base_1_1_iterator.htm" title="Forward Iterator to iterate over all elements in sorted order.">Iterator</a>. O(log n) operation. Returns an iterator to the element after the given iterator. <br /></td></tr>
<tr class="separator:ac5898be4e807c0b5c9f260a9bc7d2455"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55c8428fee5e9250caf78a96725e8b46"><td class="memTemplParams" colspan="2"><a id="a55c8428fee5e9250caf78a96725e8b46"></a>
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a55c8428fee5e9250caf78a96725e8b46"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="../../da/d8e/structez_map_base_1_1_iterator.htm">Iterator</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../d1/d43/classez_map_base.htm#a55c8428fee5e9250caf78a96725e8b46">FindOrAdd</a> (CompatibleKeyType &amp;&amp;key, bool *bExisted=nullptr)</td></tr>
<tr class="memdesc:a55c8428fee5e9250caf78a96725e8b46"><td class="mdescLeft">&#160;</td><td class="mdescRight">Searches for the given key and returns an iterator to it. If it did not exist yet, it is default-created. <em>bExisted</em> is set to true, if the key was found, false if it needed to be created. <br /></td></tr>
<tr class="separator:a55c8428fee5e9250caf78a96725e8b46"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a520e292a9858a7bb9e8348e3d1f4dbc6"><td class="memTemplParams" colspan="2"><a id="a520e292a9858a7bb9e8348e3d1f4dbc6"></a>
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a520e292a9858a7bb9e8348e3d1f4dbc6"><td class="memTemplItemLeft" align="right" valign="top">ValueType &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../d1/d43/classez_map_base.htm#a520e292a9858a7bb9e8348e3d1f4dbc6">operator[]</a> (const CompatibleKeyType &amp;key)</td></tr>
<tr class="memdesc:a520e292a9858a7bb9e8348e3d1f4dbc6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allows read/write access to the value stored under the given key. If there is no such key, a new element is default-constructed. <br /></td></tr>
<tr class="separator:a520e292a9858a7bb9e8348e3d1f4dbc6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a20c08ab5f72dd2fd99c066e9575ae846"><td class="memTemplParams" colspan="2"><a id="a20c08ab5f72dd2fd99c066e9575ae846"></a>
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a20c08ab5f72dd2fd99c066e9575ae846"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../d1/d43/classez_map_base.htm#a20c08ab5f72dd2fd99c066e9575ae846">TryGetValue</a> (const CompatibleKeyType &amp;key, ValueType &amp;out_value) const</td></tr>
<tr class="memdesc:a20c08ab5f72dd2fd99c066e9575ae846"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether an entry with the given key was found and if found writes out the corresponding value to out_value. <br /></td></tr>
<tr class="separator:a20c08ab5f72dd2fd99c066e9575ae846"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad921fdb59eec740195b650ba67e9d745"><td class="memTemplParams" colspan="2"><a id="ad921fdb59eec740195b650ba67e9d745"></a>
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:ad921fdb59eec740195b650ba67e9d745"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../d1/d43/classez_map_base.htm#ad921fdb59eec740195b650ba67e9d745">TryGetValue</a> (const CompatibleKeyType &amp;key, const ValueType *&amp;out_pValue) const</td></tr>
<tr class="memdesc:ad921fdb59eec740195b650ba67e9d745"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether an entry with the given key was found and if found writes out the pointer to the corresponding value to out_pValue. <br /></td></tr>
<tr class="separator:ad921fdb59eec740195b650ba67e9d745"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7bd13ba97f0c7a573a69f751d7132e5"><td class="memTemplParams" colspan="2"><a id="ac7bd13ba97f0c7a573a69f751d7132e5"></a>
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:ac7bd13ba97f0c7a573a69f751d7132e5"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../d1/d43/classez_map_base.htm#ac7bd13ba97f0c7a573a69f751d7132e5">TryGetValue</a> (const CompatibleKeyType &amp;key, ValueType *&amp;out_pValue) const</td></tr>
<tr class="memdesc:ac7bd13ba97f0c7a573a69f751d7132e5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether an entry with the given key was found and if found writes out the pointer to the corresponding value to out_pValue. <br /></td></tr>
<tr class="separator:ac7bd13ba97f0c7a573a69f751d7132e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a093bd0438e613ffff840693d6134cd63"><td class="memTemplParams" colspan="2"><a id="a093bd0438e613ffff840693d6134cd63"></a>
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a093bd0438e613ffff840693d6134cd63"><td class="memTemplItemLeft" align="right" valign="top">const ValueType *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../d1/d43/classez_map_base.htm#a093bd0438e613ffff840693d6134cd63">GetValue</a> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="memdesc:a093bd0438e613ffff840693d6134cd63"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a pointer to the value of the entry with the given key if found, otherwise returns nullptr. <br /></td></tr>
<tr class="separator:a093bd0438e613ffff840693d6134cd63"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1e225d26a84d7848d4e09f35e0d4869"><td class="memTemplParams" colspan="2"><a id="ad1e225d26a84d7848d4e09f35e0d4869"></a>
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:ad1e225d26a84d7848d4e09f35e0d4869"><td class="memTemplItemLeft" align="right" valign="top">ValueType *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../d1/d43/classez_map_base.htm#ad1e225d26a84d7848d4e09f35e0d4869">GetValue</a> (const CompatibleKeyType &amp;key)</td></tr>
<tr class="memdesc:ad1e225d26a84d7848d4e09f35e0d4869"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a pointer to the value of the entry with the given key if found, otherwise returns nullptr. <br /></td></tr>
<tr class="separator:ad1e225d26a84d7848d4e09f35e0d4869"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a607565550de36a41762eec35182ad52d"><td class="memTemplParams" colspan="2"><a id="a607565550de36a41762eec35182ad52d"></a>
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a607565550de36a41762eec35182ad52d"><td class="memTemplItemLeft" align="right" valign="top">const ValueType &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../d1/d43/classez_map_base.htm#a607565550de36a41762eec35182ad52d">GetValueOrDefault</a> (const CompatibleKeyType &amp;key, const ValueType &amp;defaultValue) const</td></tr>
<tr class="memdesc:a607565550de36a41762eec35182ad52d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Either returns the value of the entry with the given key, if found, or the provided default value. <br /></td></tr>
<tr class="separator:a607565550de36a41762eec35182ad52d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7746594aefe8c1bfc552ab55adb2b88c"><td class="memTemplParams" colspan="2"><a id="a7746594aefe8c1bfc552ab55adb2b88c"></a>
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a7746594aefe8c1bfc552ab55adb2b88c"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="../../da/d8e/structez_map_base_1_1_iterator.htm">Iterator</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../d1/d43/classez_map_base.htm#a7746594aefe8c1bfc552ab55adb2b88c">Find</a> (const CompatibleKeyType &amp;key)</td></tr>
<tr class="memdesc:a7746594aefe8c1bfc552ab55adb2b88c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Searches for key, returns an <a class="el" href="../../da/d8e/structez_map_base_1_1_iterator.htm" title="Forward Iterator to iterate over all elements in sorted order.">Iterator</a> to it or an invalid iterator, if no such key is found. O(log n) operation. <br /></td></tr>
<tr class="separator:a7746594aefe8c1bfc552ab55adb2b88c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a727ef2533114ad2f60146a5c5f541891"><td class="memTemplParams" colspan="2"><a id="a727ef2533114ad2f60146a5c5f541891"></a>
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a727ef2533114ad2f60146a5c5f541891"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="../../da/d8e/structez_map_base_1_1_iterator.htm">Iterator</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../d1/d43/classez_map_base.htm#a727ef2533114ad2f60146a5c5f541891">LowerBound</a> (const CompatibleKeyType &amp;key)</td></tr>
<tr class="memdesc:a727ef2533114ad2f60146a5c5f541891"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an <a class="el" href="../../da/d8e/structez_map_base_1_1_iterator.htm" title="Forward Iterator to iterate over all elements in sorted order.">Iterator</a> to the element with a key equal or larger than the given key. Returns an invalid iterator, if there is no such element. <br /></td></tr>
<tr class="separator:a727ef2533114ad2f60146a5c5f541891"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a07307d10c2c64e866f69a11665c8186f"><td class="memTemplParams" colspan="2"><a id="a07307d10c2c64e866f69a11665c8186f"></a>
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a07307d10c2c64e866f69a11665c8186f"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="../../da/d8e/structez_map_base_1_1_iterator.htm">Iterator</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../d1/d43/classez_map_base.htm#a07307d10c2c64e866f69a11665c8186f">UpperBound</a> (const CompatibleKeyType &amp;key)</td></tr>
<tr class="memdesc:a07307d10c2c64e866f69a11665c8186f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an <a class="el" href="../../da/d8e/structez_map_base_1_1_iterator.htm" title="Forward Iterator to iterate over all elements in sorted order.">Iterator</a> to the element with a key that is LARGER than the given key. Returns an invalid iterator, if there is no such element. <br /></td></tr>
<tr class="separator:a07307d10c2c64e866f69a11665c8186f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1b3b46e225c447427f329b22e7e17f4"><td class="memTemplParams" colspan="2"><a id="ad1b3b46e225c447427f329b22e7e17f4"></a>
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:ad1b3b46e225c447427f329b22e7e17f4"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm">ConstIterator</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../d1/d43/classez_map_base.htm#ad1b3b46e225c447427f329b22e7e17f4">Find</a> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="memdesc:ad1b3b46e225c447427f329b22e7e17f4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Searches for key, returns an <a class="el" href="../../da/d8e/structez_map_base_1_1_iterator.htm" title="Forward Iterator to iterate over all elements in sorted order.">Iterator</a> to it or an invalid iterator, if no such key is found. O(log n) operation. <br /></td></tr>
<tr class="separator:ad1b3b46e225c447427f329b22e7e17f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90016605a67ba6152a4aed1253a113d9"><td class="memTemplParams" colspan="2"><a id="a90016605a67ba6152a4aed1253a113d9"></a>
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a90016605a67ba6152a4aed1253a113d9"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../d1/d43/classez_map_base.htm#a90016605a67ba6152a4aed1253a113d9">Contains</a> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="memdesc:a90016605a67ba6152a4aed1253a113d9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether the given key is in the container. <br /></td></tr>
<tr class="separator:a90016605a67ba6152a4aed1253a113d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8b5281212a394dcccc7afa9d7e295f1"><td class="memTemplParams" colspan="2"><a id="ad8b5281212a394dcccc7afa9d7e295f1"></a>
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:ad8b5281212a394dcccc7afa9d7e295f1"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm">ConstIterator</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../d1/d43/classez_map_base.htm#ad8b5281212a394dcccc7afa9d7e295f1">LowerBound</a> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="memdesc:ad8b5281212a394dcccc7afa9d7e295f1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an <a class="el" href="../../da/d8e/structez_map_base_1_1_iterator.htm" title="Forward Iterator to iterate over all elements in sorted order.">Iterator</a> to the element with a key equal or larger than the given key. Returns an invalid iterator, if there is no such element. <br /></td></tr>
<tr class="separator:ad8b5281212a394dcccc7afa9d7e295f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6271776bdc6f3c34db0b2e7cefb84f6d"><td class="memTemplParams" colspan="2"><a id="a6271776bdc6f3c34db0b2e7cefb84f6d"></a>
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a6271776bdc6f3c34db0b2e7cefb84f6d"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm">ConstIterator</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../d1/d43/classez_map_base.htm#a6271776bdc6f3c34db0b2e7cefb84f6d">UpperBound</a> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="memdesc:a6271776bdc6f3c34db0b2e7cefb84f6d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an <a class="el" href="../../da/d8e/structez_map_base_1_1_iterator.htm" title="Forward Iterator to iterate over all elements in sorted order.">Iterator</a> to the element with a key that is LARGER than the given key. Returns an invalid iterator, if there is no such element. <br /></td></tr>
<tr class="separator:a6271776bdc6f3c34db0b2e7cefb84f6d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a60a8c1e8da9b22e8c3f7bcbb636ebc77"><td class="memItemLeft" align="right" valign="top"><a id="a60a8c1e8da9b22e8c3f7bcbb636ebc77"></a>
<a class="el" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d43/classez_map_base.htm#a60a8c1e8da9b22e8c3f7bcbb636ebc77">GetAllocator</a> () const</td></tr>
<tr class="memdesc:a60a8c1e8da9b22e8c3f7bcbb636ebc77"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the allocator that is used by this instance. <br /></td></tr>
<tr class="separator:a60a8c1e8da9b22e8c3f7bcbb636ebc77"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29ebab2c0b4ca2184e86fcc7354de31e"><td class="memItemLeft" align="right" valign="top"><a id="a29ebab2c0b4ca2184e86fcc7354de31e"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d43/classez_map_base.htm#a29ebab2c0b4ca2184e86fcc7354de31e">operator==</a> (const <a class="el" href="../../d1/d43/classez_map_base.htm">ezMapBase</a>&lt; KeyType, ValueType, Comparer &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:a29ebab2c0b4ca2184e86fcc7354de31e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Comparison operator. <br /></td></tr>
<tr class="separator:a29ebab2c0b4ca2184e86fcc7354de31e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5979d1ba64cd2de6e724229344b31b83"><td class="memItemLeft" align="right" valign="top"><a id="a5979d1ba64cd2de6e724229344b31b83"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d43/classez_map_base.htm#a5979d1ba64cd2de6e724229344b31b83">operator!=</a> (const <a class="el" href="../../d1/d43/classez_map_base.htm">ezMapBase</a>&lt; KeyType, ValueType, Comparer &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:a5979d1ba64cd2de6e724229344b31b83"><td class="mdescLeft">&#160;</td><td class="mdescRight">Comparison operator. <br /></td></tr>
<tr class="separator:a5979d1ba64cd2de6e724229344b31b83"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada00facbaa02afc5a2629ba338a68691"><td class="memItemLeft" align="right" valign="top"><a id="ada00facbaa02afc5a2629ba338a68691"></a>
ezUInt64&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d43/classez_map_base.htm#ada00facbaa02afc5a2629ba338a68691">GetHeapMemoryUsage</a> () const</td></tr>
<tr class="memdesc:ada00facbaa02afc5a2629ba338a68691"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the amount of bytes that are currently allocated on the heap. <br /></td></tr>
<tr class="separator:ada00facbaa02afc5a2629ba338a68691"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea57c64492f82788afe5ee6e9161d8bf"><td class="memItemLeft" align="right" valign="top"><a id="aea57c64492f82788afe5ee6e9161d8bf"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d43/classez_map_base.htm#aea57c64492f82788afe5ee6e9161d8bf">Swap</a> (<a class="el" href="../../d1/d43/classez_map_base.htm">ezMapBase</a>&lt; KeyType, ValueType, Comparer &gt; &amp;other)</td></tr>
<tr class="memdesc:aea57c64492f82788afe5ee6e9161d8bf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Swaps this map with the other one. <br /></td></tr>
<tr class="separator:aea57c64492f82788afe5ee6e9161d8bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac76b14a5703feba717b2fba97d999b0a"><td class="memTemplParams" colspan="2"><a id="ac76b14a5703feba717b2fba97d999b0a"></a>
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:ac76b14a5703feba717b2fba97d999b0a"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>TryGetValue</b> (const CompatibleKeyType &amp;key, ValueType &amp;out_value) const</td></tr>
<tr class="separator:ac76b14a5703feba717b2fba97d999b0a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c0324b041186eb069ab93eab7d54bf5"><td class="memTemplParams" colspan="2"><a id="a7c0324b041186eb069ab93eab7d54bf5"></a>
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a7c0324b041186eb069ab93eab7d54bf5"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>TryGetValue</b> (const CompatibleKeyType &amp;key, const ValueType *&amp;out_pValue) const</td></tr>
<tr class="separator:a7c0324b041186eb069ab93eab7d54bf5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4df37732db6f5bd6dba2fa1848ff011f"><td class="memTemplParams" colspan="2"><a id="a4df37732db6f5bd6dba2fa1848ff011f"></a>
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a4df37732db6f5bd6dba2fa1848ff011f"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>TryGetValue</b> (const CompatibleKeyType &amp;key, ValueType *&amp;out_pValue) const</td></tr>
<tr class="separator:a4df37732db6f5bd6dba2fa1848ff011f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac40bb2bdfe618cd4c053e65551234f11"><td class="memTemplParams" colspan="2"><a id="ac40bb2bdfe618cd4c053e65551234f11"></a>
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:ac40bb2bdfe618cd4c053e65551234f11"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE const ValueType *&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetValue</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="separator:ac40bb2bdfe618cd4c053e65551234f11"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6aed4413193ee31acaf2521adeda43e6"><td class="memTemplParams" colspan="2"><a id="a6aed4413193ee31acaf2521adeda43e6"></a>
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a6aed4413193ee31acaf2521adeda43e6"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE ValueType *&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetValue</b> (const CompatibleKeyType &amp;key)</td></tr>
<tr class="separator:a6aed4413193ee31acaf2521adeda43e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90c3584fff9038b883341ae7a1f477f1"><td class="memTemplParams" colspan="2"><a id="a90c3584fff9038b883341ae7a1f477f1"></a>
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a90c3584fff9038b883341ae7a1f477f1"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE const ValueType &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetValueOrDefault</b> (const CompatibleKeyType &amp;key, const ValueType &amp;defaultValue) const</td></tr>
<tr class="separator:a90c3584fff9038b883341ae7a1f477f1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b555e5f224cec5ad1f0d94dfb5fc1f0"><td class="memTemplParams" colspan="2"><a id="a8b555e5f224cec5ad1f0d94dfb5fc1f0"></a>
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a8b555e5f224cec5ad1f0d94dfb5fc1f0"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE <a class="el" href="../../d1/d43/classez_map_base.htm">ezMapBase</a>&lt; KeyType, ValueType, Comparer &gt;::<a class="el" href="../../da/d8e/structez_map_base_1_1_iterator.htm">Iterator</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Find</b> (const CompatibleKeyType &amp;key)</td></tr>
<tr class="separator:a8b555e5f224cec5ad1f0d94dfb5fc1f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab5b9a16664f96a2574895fc656ab06d8"><td class="memTemplParams" colspan="2"><a id="ab5b9a16664f96a2574895fc656ab06d8"></a>
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:ab5b9a16664f96a2574895fc656ab06d8"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE <a class="el" href="../../d1/d43/classez_map_base.htm">ezMapBase</a>&lt; KeyType, ValueType, Comparer &gt;::<a class="el" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm">ConstIterator</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Find</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="separator:ab5b9a16664f96a2574895fc656ab06d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd864ec1a54e4fe0972c0e1e417b64d7"><td class="memTemplParams" colspan="2"><a id="abd864ec1a54e4fe0972c0e1e417b64d7"></a>
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:abd864ec1a54e4fe0972c0e1e417b64d7"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Contains</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="separator:abd864ec1a54e4fe0972c0e1e417b64d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab662e32e6dba06f48f7302a5adaa04b5"><td class="memTemplParams" colspan="2"><a id="ab662e32e6dba06f48f7302a5adaa04b5"></a>
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:ab662e32e6dba06f48f7302a5adaa04b5"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE <a class="el" href="../../d1/d43/classez_map_base.htm">ezMapBase</a>&lt; KeyType, ValueType, Comparer &gt;::<a class="el" href="../../da/d8e/structez_map_base_1_1_iterator.htm">Iterator</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><b>LowerBound</b> (const CompatibleKeyType &amp;key)</td></tr>
<tr class="separator:ab662e32e6dba06f48f7302a5adaa04b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c3a0ff6efc3ad750e8f72acc9325f34"><td class="memTemplParams" colspan="2"><a id="a1c3a0ff6efc3ad750e8f72acc9325f34"></a>
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a1c3a0ff6efc3ad750e8f72acc9325f34"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE <a class="el" href="../../d1/d43/classez_map_base.htm">ezMapBase</a>&lt; KeyType, ValueType, Comparer &gt;::<a class="el" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm">ConstIterator</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><b>LowerBound</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="separator:a1c3a0ff6efc3ad750e8f72acc9325f34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d64f1d48a551588562fbbb70538fc08"><td class="memTemplParams" colspan="2"><a id="a6d64f1d48a551588562fbbb70538fc08"></a>
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a6d64f1d48a551588562fbbb70538fc08"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE <a class="el" href="../../d1/d43/classez_map_base.htm">ezMapBase</a>&lt; KeyType, ValueType, Comparer &gt;::<a class="el" href="../../da/d8e/structez_map_base_1_1_iterator.htm">Iterator</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><b>UpperBound</b> (const CompatibleKeyType &amp;key)</td></tr>
<tr class="separator:a6d64f1d48a551588562fbbb70538fc08"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9de9c607544933cfd16ca3167054541a"><td class="memTemplParams" colspan="2"><a id="a9de9c607544933cfd16ca3167054541a"></a>
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a9de9c607544933cfd16ca3167054541a"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE <a class="el" href="../../d1/d43/classez_map_base.htm">ezMapBase</a>&lt; KeyType, ValueType, Comparer &gt;::<a class="el" href="../../dd/d35/structez_map_base_1_1_const_iterator.htm">ConstIterator</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><b>UpperBound</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="separator:a9de9c607544933cfd16ca3167054541a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:acbebd24c8eabd3451213fb781ed62a4c"><td class="memItemLeft" align="right" valign="top"><a id="acbebd24c8eabd3451213fb781ed62a4c"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d43/classez_map_base.htm#acbebd24c8eabd3451213fb781ed62a4c">ezMapBase</a> (const Comparer &amp;comparer, <a class="el" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a> *pAllocator)</td></tr>
<tr class="memdesc:acbebd24c8eabd3451213fb781ed62a4c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the map to be empty. <br /></td></tr>
<tr class="separator:acbebd24c8eabd3451213fb781ed62a4c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a592a3a11d80328f21e5aa87fd962cc67"><td class="memItemLeft" align="right" valign="top"><a id="a592a3a11d80328f21e5aa87fd962cc67"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d43/classez_map_base.htm#a592a3a11d80328f21e5aa87fd962cc67">ezMapBase</a> (const <a class="el" href="../../d1/d43/classez_map_base.htm">ezMapBase</a>&lt; KeyType, ValueType, Comparer &gt; &amp;cc, <a class="el" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a> *pAllocator)</td></tr>
<tr class="memdesc:a592a3a11d80328f21e5aa87fd962cc67"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies all key/value pairs from the given map into this one. <br /></td></tr>
<tr class="separator:a592a3a11d80328f21e5aa87fd962cc67"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3bc6ff8af67d601852bdc08bef189f1e"><td class="memItemLeft" align="right" valign="top"><a id="a3bc6ff8af67d601852bdc08bef189f1e"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d43/classez_map_base.htm#a3bc6ff8af67d601852bdc08bef189f1e">~ezMapBase</a> ()</td></tr>
<tr class="memdesc:a3bc6ff8af67d601852bdc08bef189f1e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys all elements from the map. <br /></td></tr>
<tr class="separator:a3bc6ff8af67d601852bdc08bef189f1e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29cfe65a8cf027f6f3818b1f2f9893b2"><td class="memItemLeft" align="right" valign="top"><a id="a29cfe65a8cf027f6f3818b1f2f9893b2"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d43/classez_map_base.htm#a29cfe65a8cf027f6f3818b1f2f9893b2">operator=</a> (const <a class="el" href="../../d1/d43/classez_map_base.htm">ezMapBase</a>&lt; KeyType, ValueType, Comparer &gt; &amp;rhs)</td></tr>
<tr class="memdesc:a29cfe65a8cf027f6f3818b1f2f9893b2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies all key/value pairs from the given map into this one. <br /></td></tr>
<tr class="separator:a29cfe65a8cf027f6f3818b1f2f9893b2"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename KeyType, typename ValueType, typename Comparer&gt;<br />
class ezMapBase&lt; KeyType, ValueType, Comparer &gt;</h3>

<p>An associative container. Similar to STL::map. </p>
<p>A map allows to store key/value pairs. This in turn allows to search for values by looking them up with a certain key. Key/Value pairs can also be erased again. All insertion/erasure/lookup functions take O(log n) time. The map is implemented using a balanced tree (a red-black tree), which means the order of insertions/erasures is not important, since it can never create a degenerated tree, and performance will always stay the same.<br  />
<br  />
KeyType is the key type. For example a string.<br  />
ValueType is the value type. For example int.<br  />
Comparer is a helper class that implements a strictly weak-ordering comparison for Key types. </p>
</div><hr/>The documentation for this class was generated from the following files:<ul>
<li>Code/Engine/Foundation/Containers/<a class="el" href="../../d3/d63/_map_8h_source.htm">Map.h</a></li>
<li>Code/Engine/Foundation/Containers/Implementation/<a class="el" href="../../de/d1a/_map__inl_8h_source.htm">Map_inl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d1/d43/classez_map_base.htm">ezMapBase</a></li>
    <li class="footer">Generated on Tue Jun 8 2021 14:34:03 for ezEngine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1 </li>
  </ul>
</div>
</body>
</html>
