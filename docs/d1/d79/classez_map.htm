<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: ezMap&lt; KeyType, ValueType, Comparer, AllocatorWrapper &gt; Class Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">ezEngine<span id="projectnumber">&#160;Release 25.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('d1/d79/classez_map.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="../../d2/dc1/classez_map-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">ezMap&lt; KeyType, ValueType, Comparer, AllocatorWrapper &gt; Class Template Reference</div></div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="../../d3/d63/_map_8h_source.htm">Map.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for ezMap&lt; KeyType, ValueType, Comparer, AllocatorWrapper &gt;:</div>
<div class="dyncontent">
<div class="center"><img src="../../db/d60/classez_map__inherit__graph.png" border="0" usemap="#aez_map_3_01_key_type_00_01_value_type_00_01_comparer_00_01_allocator_wrapper_01_4_inherit__map" alt="Inheritance graph"/></div>
<map name="aez_map_3_01_key_type_00_01_value_type_00_01_comparer_00_01_allocator_wrapper_01_4_inherit__map" id="aez_map_3_01_key_type_00_01_value_type_00_01_comparer_00_01_allocator_wrapper_01_4_inherit__map">
<area shape="rect" title=" " alt="" coords="5,93,232,133"/>
<area shape="rect" href="../../d1/d43/classez_map_base.htm" title="An associative container. Similar to STL::map." alt="" coords="29,5,208,45"/>
<area shape="poly" title=" " alt="" coords="121,59,121,93,116,93,116,59"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a8f6bf9a3cc89b67cdc066223642b763e" id="r_a8f6bf9a3cc89b67cdc066223642b763e"><td class="memItemLeft" align="right" valign="top"><a id="a8f6bf9a3cc89b67cdc066223642b763e" name="a8f6bf9a3cc89b67cdc066223642b763e"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>ezMap</b> (<a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="separator:a8f6bf9a3cc89b67cdc066223642b763e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4adea1d5c1ebb0093c3d616d1c8565ab" id="r_a4adea1d5c1ebb0093c3d616d1c8565ab"><td class="memItemLeft" align="right" valign="top"><a id="a4adea1d5c1ebb0093c3d616d1c8565ab" name="a4adea1d5c1ebb0093c3d616d1c8565ab"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>ezMap</b> (const Comparer &amp;comparer, <a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="separator:a4adea1d5c1ebb0093c3d616d1c8565ab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3bc0827869c4c3f3e6b049c65d725e7b" id="r_a3bc0827869c4c3f3e6b049c65d725e7b"><td class="memItemLeft" align="right" valign="top"><a id="a3bc0827869c4c3f3e6b049c65d725e7b" name="a3bc0827869c4c3f3e6b049c65d725e7b"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>ezMap</b> (const <a class="el" href="../../d1/d79/classez_map.htm">ezMap</a>&lt; KeyType, ValueType, Comparer, AllocatorWrapper &gt; &amp;other)</td></tr>
<tr class="separator:a3bc0827869c4c3f3e6b049c65d725e7b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad63064b0694607a158f7c0b4b8d0f13f" id="r_ad63064b0694607a158f7c0b4b8d0f13f"><td class="memItemLeft" align="right" valign="top"><a id="ad63064b0694607a158f7c0b4b8d0f13f" name="ad63064b0694607a158f7c0b4b8d0f13f"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>ezMap</b> (const <a class="el" href="../../d1/d43/classez_map_base.htm">ezMapBase</a>&lt; KeyType, ValueType, Comparer &gt; &amp;other)</td></tr>
<tr class="separator:ad63064b0694607a158f7c0b4b8d0f13f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1cd9edbefd45e088d5707efbde85d739" id="r_a1cd9edbefd45e088d5707efbde85d739"><td class="memItemLeft" align="right" valign="top"><a id="a1cd9edbefd45e088d5707efbde85d739" name="a1cd9edbefd45e088d5707efbde85d739"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="../../d1/d79/classez_map.htm">ezMap</a>&lt; KeyType, ValueType, Comparer, AllocatorWrapper &gt; &amp;rhs)</td></tr>
<tr class="separator:a1cd9edbefd45e088d5707efbde85d739"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb6ed7b18940d6e703d301f56904a1e0" id="r_abb6ed7b18940d6e703d301f56904a1e0"><td class="memItemLeft" align="right" valign="top"><a id="abb6ed7b18940d6e703d301f56904a1e0" name="abb6ed7b18940d6e703d301f56904a1e0"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="../../d1/d43/classez_map_base.htm">ezMapBase</a>&lt; KeyType, ValueType, Comparer &gt; &amp;rhs)</td></tr>
<tr class="separator:abb6ed7b18940d6e703d301f56904a1e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classez_map_base"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classez_map_base')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../d1/d43/classez_map_base.htm">ezMapBase&lt; KeyType, ValueType, Comparer &gt;</a></td></tr>
<tr class="memitem:a7c62813d3d15be2f07144978dbb43271 inherit pub_methods_classez_map_base" id="r_a7c62813d3d15be2f07144978dbb43271"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsEmpty</b> () const</td></tr>
<tr class="memdesc:a7c62813d3d15be2f07144978dbb43271 inherit pub_methods_classez_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether there are no elements in the map. O(1) operation. <br /></td></tr>
<tr class="separator:a7c62813d3d15be2f07144978dbb43271 inherit pub_methods_classez_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a400e55a001e58137d0e483a2aba85784 inherit pub_methods_classez_map_base" id="r_a400e55a001e58137d0e483a2aba85784"><td class="memItemLeft" align="right" valign="top">
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetCount</b> () const</td></tr>
<tr class="memdesc:a400e55a001e58137d0e483a2aba85784 inherit pub_methods_classez_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of elements currently stored in the map. O(1) operation. <br /></td></tr>
<tr class="separator:a400e55a001e58137d0e483a2aba85784 inherit pub_methods_classez_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5946a15134311c8353deeee06670e412 inherit pub_methods_classez_map_base" id="r_a5946a15134311c8353deeee06670e412"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>Clear</b> ()</td></tr>
<tr class="memdesc:a5946a15134311c8353deeee06670e412 inherit pub_methods_classez_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys all elements in the map and resets its size to zero. <br /></td></tr>
<tr class="separator:a5946a15134311c8353deeee06670e412 inherit pub_methods_classez_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d3a11d700c00c174e5bf1e8c88af252 inherit pub_methods_classez_map_base" id="r_a7d3a11d700c00c174e5bf1e8c88af252"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d1/ddf/structez_map_base_iterator_base.htm">Iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetIterator</b> ()</td></tr>
<tr class="memdesc:a7d3a11d700c00c174e5bf1e8c88af252 inherit pub_methods_classez_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an Iterator to the very first element. <br /></td></tr>
<tr class="separator:a7d3a11d700c00c174e5bf1e8c88af252 inherit pub_methods_classez_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa57fa86c4aa8b3639569851d61919d59 inherit pub_methods_classez_map_base" id="r_aa57fa86c4aa8b3639569851d61919d59"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d1/ddf/structez_map_base_iterator_base.htm">ReverseIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetReverseIterator</b> ()</td></tr>
<tr class="memdesc:aa57fa86c4aa8b3639569851d61919d59 inherit pub_methods_classez_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a ReverseIterator to the very last element. <br /></td></tr>
<tr class="separator:aa57fa86c4aa8b3639569851d61919d59 inherit pub_methods_classez_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea49970324624af1a95d31313c37ebc2 inherit pub_methods_classez_map_base" id="r_aea49970324624af1a95d31313c37ebc2"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../dc/d19/structez_map_base_const_iterator_base.htm">ConstIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetIterator</b> () const</td></tr>
<tr class="memdesc:aea49970324624af1a95d31313c37ebc2 inherit pub_methods_classez_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a constant Iterator to the very first element. <br /></td></tr>
<tr class="separator:aea49970324624af1a95d31313c37ebc2 inherit pub_methods_classez_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a863ee86d06a99265b131ac35166f74e7 inherit pub_methods_classez_map_base" id="r_a863ee86d06a99265b131ac35166f74e7"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../dc/d19/structez_map_base_const_iterator_base.htm">ConstReverseIterator</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetReverseIterator</b> () const</td></tr>
<tr class="memdesc:a863ee86d06a99265b131ac35166f74e7 inherit pub_methods_classez_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a constant ReverseIterator to the very last element. <br /></td></tr>
<tr class="separator:a863ee86d06a99265b131ac35166f74e7 inherit pub_methods_classez_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a25d049c3f258c4640642ef5c1ea04d17 inherit pub_methods_classez_map_base" id="r_a25d049c3f258c4640642ef5c1ea04d17"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType , typename CompatibleValueType &gt; </td></tr>
<tr class="memitem:a25d049c3f258c4640642ef5c1ea04d17 inherit pub_methods_classez_map_base"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="../../d1/ddf/structez_map_base_iterator_base.htm">Iterator</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Insert</b> (CompatibleKeyType &amp;&amp;key, CompatibleValueType &amp;&amp;value)</td></tr>
<tr class="memdesc:a25d049c3f258c4640642ef5c1ea04d17 inherit pub_methods_classez_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inserts the key/value pair into the tree and returns an Iterator to it. O(log n) operation. <br /></td></tr>
<tr class="separator:a25d049c3f258c4640642ef5c1ea04d17 inherit pub_methods_classez_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a39ec812de69d422bdff1acc12d1d516f inherit pub_methods_classez_map_base" id="r_a39ec812de69d422bdff1acc12d1d516f"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a39ec812de69d422bdff1acc12d1d516f inherit pub_methods_classez_map_base"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Remove</b> (const CompatibleKeyType &amp;key)</td></tr>
<tr class="memdesc:a39ec812de69d422bdff1acc12d1d516f inherit pub_methods_classez_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Erases the key/value pair with the given key, if it exists. O(log n) operation. <br /></td></tr>
<tr class="separator:a39ec812de69d422bdff1acc12d1d516f inherit pub_methods_classez_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac5898be4e807c0b5c9f260a9bc7d2455 inherit pub_methods_classez_map_base" id="r_ac5898be4e807c0b5c9f260a9bc7d2455"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d1/ddf/structez_map_base_iterator_base.htm">Iterator</a>&#160;</td><td class="memItemRight" valign="bottom"><b>Remove</b> (const <a class="el" href="../../d1/ddf/structez_map_base_iterator_base.htm">Iterator</a> &amp;pos)</td></tr>
<tr class="memdesc:ac5898be4e807c0b5c9f260a9bc7d2455 inherit pub_methods_classez_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Erases the key/value pair at the given Iterator. O(log n) operation. Returns an iterator to the element after the given iterator. <br /></td></tr>
<tr class="separator:ac5898be4e807c0b5c9f260a9bc7d2455 inherit pub_methods_classez_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac8a2e13c622f9827d6185dba8977552c inherit pub_methods_classez_map_base" id="r_ac8a2e13c622f9827d6185dba8977552c"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:ac8a2e13c622f9827d6185dba8977552c inherit pub_methods_classez_map_base"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="../../d1/ddf/structez_map_base_iterator_base.htm">Iterator</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><b>FindOrAdd</b> (CompatibleKeyType &amp;&amp;key, bool *out_pExisted=nullptr)</td></tr>
<tr class="memdesc:ac8a2e13c622f9827d6185dba8977552c inherit pub_methods_classez_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Searches for the given key and returns an iterator to it. If it did not exist yet, it is default-created. <em>bExisted</em> is set to true, if the key was found, false if it needed to be created. <br /></td></tr>
<tr class="separator:ac8a2e13c622f9827d6185dba8977552c inherit pub_methods_classez_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a520e292a9858a7bb9e8348e3d1f4dbc6 inherit pub_methods_classez_map_base" id="r_a520e292a9858a7bb9e8348e3d1f4dbc6"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a520e292a9858a7bb9e8348e3d1f4dbc6 inherit pub_methods_classez_map_base"><td class="memTemplItemLeft" align="right" valign="top">ValueType &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>operator[]</b> (const CompatibleKeyType &amp;key)</td></tr>
<tr class="memdesc:a520e292a9858a7bb9e8348e3d1f4dbc6 inherit pub_methods_classez_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allows read/write access to the value stored under the given key. If there is no such key, a new element is default-constructed. <br /></td></tr>
<tr class="separator:a520e292a9858a7bb9e8348e3d1f4dbc6 inherit pub_methods_classez_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a20c08ab5f72dd2fd99c066e9575ae846 inherit pub_methods_classez_map_base" id="r_a20c08ab5f72dd2fd99c066e9575ae846"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a20c08ab5f72dd2fd99c066e9575ae846 inherit pub_methods_classez_map_base"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>TryGetValue</b> (const CompatibleKeyType &amp;key, ValueType &amp;out_value) const</td></tr>
<tr class="memdesc:a20c08ab5f72dd2fd99c066e9575ae846 inherit pub_methods_classez_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether an entry with the given key was found and if found writes out the corresponding value to out_value. <br /></td></tr>
<tr class="separator:a20c08ab5f72dd2fd99c066e9575ae846 inherit pub_methods_classez_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad921fdb59eec740195b650ba67e9d745 inherit pub_methods_classez_map_base" id="r_ad921fdb59eec740195b650ba67e9d745"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:ad921fdb59eec740195b650ba67e9d745 inherit pub_methods_classez_map_base"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>TryGetValue</b> (const CompatibleKeyType &amp;key, const ValueType *&amp;out_pValue) const</td></tr>
<tr class="memdesc:ad921fdb59eec740195b650ba67e9d745 inherit pub_methods_classez_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether an entry with the given key was found and if found writes out the pointer to the corresponding value to out_pValue. <br /></td></tr>
<tr class="separator:ad921fdb59eec740195b650ba67e9d745 inherit pub_methods_classez_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7bd13ba97f0c7a573a69f751d7132e5 inherit pub_methods_classez_map_base" id="r_ac7bd13ba97f0c7a573a69f751d7132e5"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:ac7bd13ba97f0c7a573a69f751d7132e5 inherit pub_methods_classez_map_base"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>TryGetValue</b> (const CompatibleKeyType &amp;key, ValueType *&amp;out_pValue) const</td></tr>
<tr class="memdesc:ac7bd13ba97f0c7a573a69f751d7132e5 inherit pub_methods_classez_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether an entry with the given key was found and if found writes out the pointer to the corresponding value to out_pValue. <br /></td></tr>
<tr class="separator:ac7bd13ba97f0c7a573a69f751d7132e5 inherit pub_methods_classez_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a92c363ce1c0daa193ebe9eb66ad3b343 inherit pub_methods_classez_map_base" id="r_a92c363ce1c0daa193ebe9eb66ad3b343"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a92c363ce1c0daa193ebe9eb66ad3b343 inherit pub_methods_classez_map_base"><td class="memTemplItemLeft" align="right" valign="top">const ValueType *&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetValue</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="memdesc:a92c363ce1c0daa193ebe9eb66ad3b343 inherit pub_methods_classez_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a pointer to the value of the entry with the given key if found, otherwise returns nullptr. <br /></td></tr>
<tr class="separator:a92c363ce1c0daa193ebe9eb66ad3b343 inherit pub_methods_classez_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69ffb9cced615bbfc319156216d32300 inherit pub_methods_classez_map_base" id="r_a69ffb9cced615bbfc319156216d32300"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a69ffb9cced615bbfc319156216d32300 inherit pub_methods_classez_map_base"><td class="memTemplItemLeft" align="right" valign="top">ValueType *&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetValue</b> (const CompatibleKeyType &amp;key)</td></tr>
<tr class="memdesc:a69ffb9cced615bbfc319156216d32300 inherit pub_methods_classez_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a pointer to the value of the entry with the given key if found, otherwise returns nullptr. <br /></td></tr>
<tr class="separator:a69ffb9cced615bbfc319156216d32300 inherit pub_methods_classez_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab84f489b1c20822b4597730261b2ed3 inherit pub_methods_classez_map_base" id="r_aab84f489b1c20822b4597730261b2ed3"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:aab84f489b1c20822b4597730261b2ed3 inherit pub_methods_classez_map_base"><td class="memTemplItemLeft" align="right" valign="top">const ValueType &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetValueOrDefault</b> (const CompatibleKeyType &amp;key, const ValueType &amp;defaultValue) const</td></tr>
<tr class="memdesc:aab84f489b1c20822b4597730261b2ed3 inherit pub_methods_classez_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Either returns the value of the entry with the given key, if found, or the provided default value. <br /></td></tr>
<tr class="separator:aab84f489b1c20822b4597730261b2ed3 inherit pub_methods_classez_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7746594aefe8c1bfc552ab55adb2b88c inherit pub_methods_classez_map_base" id="r_a7746594aefe8c1bfc552ab55adb2b88c"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a7746594aefe8c1bfc552ab55adb2b88c inherit pub_methods_classez_map_base"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="../../d1/ddf/structez_map_base_iterator_base.htm">Iterator</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Find</b> (const CompatibleKeyType &amp;key)</td></tr>
<tr class="memdesc:a7746594aefe8c1bfc552ab55adb2b88c inherit pub_methods_classez_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Searches for key, returns an Iterator to it or an invalid iterator, if no such key is found. O(log n) operation. <br /></td></tr>
<tr class="separator:a7746594aefe8c1bfc552ab55adb2b88c inherit pub_methods_classez_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a727ef2533114ad2f60146a5c5f541891 inherit pub_methods_classez_map_base" id="r_a727ef2533114ad2f60146a5c5f541891"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a727ef2533114ad2f60146a5c5f541891 inherit pub_methods_classez_map_base"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="../../d1/ddf/structez_map_base_iterator_base.htm">Iterator</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><b>LowerBound</b> (const CompatibleKeyType &amp;key)</td></tr>
<tr class="memdesc:a727ef2533114ad2f60146a5c5f541891 inherit pub_methods_classez_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an Iterator to the element with a key equal or larger than the given key. Returns an invalid iterator, if there is no such element. <br /></td></tr>
<tr class="separator:a727ef2533114ad2f60146a5c5f541891 inherit pub_methods_classez_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a07307d10c2c64e866f69a11665c8186f inherit pub_methods_classez_map_base" id="r_a07307d10c2c64e866f69a11665c8186f"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a07307d10c2c64e866f69a11665c8186f inherit pub_methods_classez_map_base"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="../../d1/ddf/structez_map_base_iterator_base.htm">Iterator</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><b>UpperBound</b> (const CompatibleKeyType &amp;key)</td></tr>
<tr class="memdesc:a07307d10c2c64e866f69a11665c8186f inherit pub_methods_classez_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an Iterator to the element with a key that is LARGER than the given key. Returns an invalid iterator, if there is no such element. <br /></td></tr>
<tr class="separator:a07307d10c2c64e866f69a11665c8186f inherit pub_methods_classez_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1b3b46e225c447427f329b22e7e17f4 inherit pub_methods_classez_map_base" id="r_ad1b3b46e225c447427f329b22e7e17f4"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:ad1b3b46e225c447427f329b22e7e17f4 inherit pub_methods_classez_map_base"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="../../dc/d19/structez_map_base_const_iterator_base.htm">ConstIterator</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Find</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="memdesc:ad1b3b46e225c447427f329b22e7e17f4 inherit pub_methods_classez_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Searches for key, returns an Iterator to it or an invalid iterator, if no such key is found. O(log n) operation. <br /></td></tr>
<tr class="separator:ad1b3b46e225c447427f329b22e7e17f4 inherit pub_methods_classez_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90016605a67ba6152a4aed1253a113d9 inherit pub_methods_classez_map_base" id="r_a90016605a67ba6152a4aed1253a113d9"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a90016605a67ba6152a4aed1253a113d9 inherit pub_methods_classez_map_base"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Contains</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="memdesc:a90016605a67ba6152a4aed1253a113d9 inherit pub_methods_classez_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether the given key is in the container. <br /></td></tr>
<tr class="separator:a90016605a67ba6152a4aed1253a113d9 inherit pub_methods_classez_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad8b5281212a394dcccc7afa9d7e295f1 inherit pub_methods_classez_map_base" id="r_ad8b5281212a394dcccc7afa9d7e295f1"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:ad8b5281212a394dcccc7afa9d7e295f1 inherit pub_methods_classez_map_base"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="../../dc/d19/structez_map_base_const_iterator_base.htm">ConstIterator</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><b>LowerBound</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="memdesc:ad8b5281212a394dcccc7afa9d7e295f1 inherit pub_methods_classez_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an Iterator to the element with a key equal or larger than the given key. Returns an invalid iterator, if there is no such element. <br /></td></tr>
<tr class="separator:ad8b5281212a394dcccc7afa9d7e295f1 inherit pub_methods_classez_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6271776bdc6f3c34db0b2e7cefb84f6d inherit pub_methods_classez_map_base" id="r_a6271776bdc6f3c34db0b2e7cefb84f6d"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a6271776bdc6f3c34db0b2e7cefb84f6d inherit pub_methods_classez_map_base"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="../../dc/d19/structez_map_base_const_iterator_base.htm">ConstIterator</a>&#160;</td><td class="memTemplItemRight" valign="bottom"><b>UpperBound</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="memdesc:a6271776bdc6f3c34db0b2e7cefb84f6d inherit pub_methods_classez_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an Iterator to the element with a key that is LARGER than the given key. Returns an invalid iterator, if there is no such element. <br /></td></tr>
<tr class="separator:a6271776bdc6f3c34db0b2e7cefb84f6d inherit pub_methods_classez_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1fbc8d7b1fe878a1be962df61afd3f81 inherit pub_methods_classez_map_base" id="r_a1fbc8d7b1fe878a1be962df61afd3f81"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetAllocator</b> () const</td></tr>
<tr class="memdesc:a1fbc8d7b1fe878a1be962df61afd3f81 inherit pub_methods_classez_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the allocator that is used by this instance. <br /></td></tr>
<tr class="separator:a1fbc8d7b1fe878a1be962df61afd3f81 inherit pub_methods_classez_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29ebab2c0b4ca2184e86fcc7354de31e inherit pub_methods_classez_map_base" id="r_a29ebab2c0b4ca2184e86fcc7354de31e"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator==</b> (const <a class="el" href="../../d1/d43/classez_map_base.htm">ezMapBase</a>&lt; KeyType, ValueType, Comparer &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:a29ebab2c0b4ca2184e86fcc7354de31e inherit pub_methods_classez_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Comparison operator. <br /></td></tr>
<tr class="separator:a29ebab2c0b4ca2184e86fcc7354de31e inherit pub_methods_classez_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac0b628eb1ee07313d02328c99b14b9cc inherit pub_methods_classez_map_base" id="r_ac0b628eb1ee07313d02328c99b14b9cc"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>EZ_ADD_DEFAULT_OPERATOR_NOTEQUAL</b> (const <a class="el" href="../../d1/d43/classez_map_base.htm">ezMapBase</a>&lt; KeyType, ValueType, Comparer &gt; &amp;)</td></tr>
<tr class="separator:ac0b628eb1ee07313d02328c99b14b9cc inherit pub_methods_classez_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada00facbaa02afc5a2629ba338a68691 inherit pub_methods_classez_map_base" id="r_ada00facbaa02afc5a2629ba338a68691"><td class="memItemLeft" align="right" valign="top">
ezUInt64&#160;</td><td class="memItemRight" valign="bottom"><b>GetHeapMemoryUsage</b> () const</td></tr>
<tr class="memdesc:ada00facbaa02afc5a2629ba338a68691 inherit pub_methods_classez_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the amount of bytes that are currently allocated on the heap. <br /></td></tr>
<tr class="separator:ada00facbaa02afc5a2629ba338a68691 inherit pub_methods_classez_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea57c64492f82788afe5ee6e9161d8bf inherit pub_methods_classez_map_base" id="r_aea57c64492f82788afe5ee6e9161d8bf"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>Swap</b> (<a class="el" href="../../d1/d43/classez_map_base.htm">ezMapBase</a>&lt; KeyType, ValueType, Comparer &gt; &amp;other)</td></tr>
<tr class="memdesc:aea57c64492f82788afe5ee6e9161d8bf inherit pub_methods_classez_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Swaps this map with the other one. <br /></td></tr>
<tr class="separator:aea57c64492f82788afe5ee6e9161d8bf inherit pub_methods_classez_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac76b14a5703feba717b2fba97d999b0a inherit pub_methods_classez_map_base" id="r_ac76b14a5703feba717b2fba97d999b0a"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:ac76b14a5703feba717b2fba97d999b0a inherit pub_methods_classez_map_base"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>TryGetValue</b> (const CompatibleKeyType &amp;key, ValueType &amp;out_value) const</td></tr>
<tr class="separator:ac76b14a5703feba717b2fba97d999b0a inherit pub_methods_classez_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c0324b041186eb069ab93eab7d54bf5 inherit pub_methods_classez_map_base" id="r_a7c0324b041186eb069ab93eab7d54bf5"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a7c0324b041186eb069ab93eab7d54bf5 inherit pub_methods_classez_map_base"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>TryGetValue</b> (const CompatibleKeyType &amp;key, const ValueType *&amp;out_pValue) const</td></tr>
<tr class="separator:a7c0324b041186eb069ab93eab7d54bf5 inherit pub_methods_classez_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4df37732db6f5bd6dba2fa1848ff011f inherit pub_methods_classez_map_base" id="r_a4df37732db6f5bd6dba2fa1848ff011f"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a4df37732db6f5bd6dba2fa1848ff011f inherit pub_methods_classez_map_base"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>TryGetValue</b> (const CompatibleKeyType &amp;key, ValueType *&amp;out_pValue) const</td></tr>
<tr class="separator:a4df37732db6f5bd6dba2fa1848ff011f inherit pub_methods_classez_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0fc50d1f38f274d6c7f1a03af99e852d inherit pub_methods_classez_map_base" id="r_a0fc50d1f38f274d6c7f1a03af99e852d"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a0fc50d1f38f274d6c7f1a03af99e852d inherit pub_methods_classez_map_base"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE const ValueType *&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetValue</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="separator:a0fc50d1f38f274d6c7f1a03af99e852d inherit pub_methods_classez_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a85d774ca325b2d07ee8b5fdfb7160f1a inherit pub_methods_classez_map_base" id="r_a85d774ca325b2d07ee8b5fdfb7160f1a"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a85d774ca325b2d07ee8b5fdfb7160f1a inherit pub_methods_classez_map_base"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE ValueType *&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetValue</b> (const CompatibleKeyType &amp;key)</td></tr>
<tr class="separator:a85d774ca325b2d07ee8b5fdfb7160f1a inherit pub_methods_classez_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a483265ea56e5a78cde77fd936bed16f4 inherit pub_methods_classez_map_base" id="r_a483265ea56e5a78cde77fd936bed16f4"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a483265ea56e5a78cde77fd936bed16f4 inherit pub_methods_classez_map_base"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE const ValueType &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetValueOrDefault</b> (const CompatibleKeyType &amp;key, const ValueType &amp;defaultValue) const</td></tr>
<tr class="separator:a483265ea56e5a78cde77fd936bed16f4 inherit pub_methods_classez_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac9d36af1129e674ad95c3d98ece7a7ce inherit pub_methods_classez_map_base" id="r_ac9d36af1129e674ad95c3d98ece7a7ce"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:ac9d36af1129e674ad95c3d98ece7a7ce inherit pub_methods_classez_map_base"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE <a class="el" href="../../d1/d43/classez_map_base.htm">ezMapBase</a>&lt; KeyType, ValueType, Comparer &gt;::Iterator&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Find</b> (const CompatibleKeyType &amp;key)</td></tr>
<tr class="separator:ac9d36af1129e674ad95c3d98ece7a7ce inherit pub_methods_classez_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a374dbab73a9c0c5b02cb2b53105a8979 inherit pub_methods_classez_map_base" id="r_a374dbab73a9c0c5b02cb2b53105a8979"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a374dbab73a9c0c5b02cb2b53105a8979 inherit pub_methods_classez_map_base"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE <a class="el" href="../../d1/d43/classez_map_base.htm">ezMapBase</a>&lt; KeyType, ValueType, Comparer &gt;::ConstIterator&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Find</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="separator:a374dbab73a9c0c5b02cb2b53105a8979 inherit pub_methods_classez_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd864ec1a54e4fe0972c0e1e417b64d7 inherit pub_methods_classez_map_base" id="r_abd864ec1a54e4fe0972c0e1e417b64d7"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:abd864ec1a54e4fe0972c0e1e417b64d7 inherit pub_methods_classez_map_base"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Contains</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="separator:abd864ec1a54e4fe0972c0e1e417b64d7 inherit pub_methods_classez_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a7b4d2a41e55b74d244b6860255f14a inherit pub_methods_classez_map_base" id="r_a1a7b4d2a41e55b74d244b6860255f14a"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a1a7b4d2a41e55b74d244b6860255f14a inherit pub_methods_classez_map_base"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE <a class="el" href="../../d1/d43/classez_map_base.htm">ezMapBase</a>&lt; KeyType, ValueType, Comparer &gt;::Iterator&#160;</td><td class="memTemplItemRight" valign="bottom"><b>LowerBound</b> (const CompatibleKeyType &amp;key)</td></tr>
<tr class="separator:a1a7b4d2a41e55b74d244b6860255f14a inherit pub_methods_classez_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae052752d9c2bede6857bf5b64e8fa32e inherit pub_methods_classez_map_base" id="r_ae052752d9c2bede6857bf5b64e8fa32e"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:ae052752d9c2bede6857bf5b64e8fa32e inherit pub_methods_classez_map_base"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE <a class="el" href="../../d1/d43/classez_map_base.htm">ezMapBase</a>&lt; KeyType, ValueType, Comparer &gt;::ConstIterator&#160;</td><td class="memTemplItemRight" valign="bottom"><b>LowerBound</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="separator:ae052752d9c2bede6857bf5b64e8fa32e inherit pub_methods_classez_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b4a623a62af72e1db35d9509c8e1e8a inherit pub_methods_classez_map_base" id="r_a0b4a623a62af72e1db35d9509c8e1e8a"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a0b4a623a62af72e1db35d9509c8e1e8a inherit pub_methods_classez_map_base"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE <a class="el" href="../../d1/d43/classez_map_base.htm">ezMapBase</a>&lt; KeyType, ValueType, Comparer &gt;::Iterator&#160;</td><td class="memTemplItemRight" valign="bottom"><b>UpperBound</b> (const CompatibleKeyType &amp;key)</td></tr>
<tr class="separator:a0b4a623a62af72e1db35d9509c8e1e8a inherit pub_methods_classez_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6233ddc7560a04536e336df5d66ef47b inherit pub_methods_classez_map_base" id="r_a6233ddc7560a04536e336df5d66ef47b"><td class="memTemplParams" colspan="2">
template&lt;typename CompatibleKeyType &gt; </td></tr>
<tr class="memitem:a6233ddc7560a04536e336df5d66ef47b inherit pub_methods_classez_map_base"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE <a class="el" href="../../d1/d43/classez_map_base.htm">ezMapBase</a>&lt; KeyType, ValueType, Comparer &gt;::ConstIterator&#160;</td><td class="memTemplItemRight" valign="bottom"><b>UpperBound</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="separator:a6233ddc7560a04536e336df5d66ef47b inherit pub_methods_classez_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="inherited" name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_types_classez_map_base"><td colspan="2" onclick="javascript:toggleInherit('pub_types_classez_map_base')"><img src="../../closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="../../d1/d43/classez_map_base.htm">ezMapBase&lt; KeyType, ValueType, Comparer &gt;</a></td></tr>
<tr class="memitem:a53b01dab0605d5e2c8a796da3d4bfbb9 inherit pub_types_classez_map_base" id="r_a53b01dab0605d5e2c8a796da3d4bfbb9"><td class="memItemLeft" align="right" valign="top">
using&#160;</td><td class="memItemRight" valign="bottom"><b>ConstIterator</b> = <a class="el" href="../../dc/d19/structez_map_base_const_iterator_base.htm">ezMapBaseConstIteratorBase</a>&lt; KeyType, ValueType, Comparer, false &gt;</td></tr>
<tr class="separator:a53b01dab0605d5e2c8a796da3d4bfbb9 inherit pub_types_classez_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a82b5ce7af0410516ff7573c4aec82758 inherit pub_types_classez_map_base" id="r_a82b5ce7af0410516ff7573c4aec82758"><td class="memItemLeft" align="right" valign="top">
using&#160;</td><td class="memItemRight" valign="bottom"><b>ConstReverseIterator</b> = <a class="el" href="../../dc/d19/structez_map_base_const_iterator_base.htm">ezMapBaseConstIteratorBase</a>&lt; KeyType, ValueType, Comparer, true &gt;</td></tr>
<tr class="separator:a82b5ce7af0410516ff7573c4aec82758 inherit pub_types_classez_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba55da17e9d5a7043ca48be7a1b3d5bc inherit pub_types_classez_map_base" id="r_aba55da17e9d5a7043ca48be7a1b3d5bc"><td class="memItemLeft" align="right" valign="top">
using&#160;</td><td class="memItemRight" valign="bottom"><b>Iterator</b> = <a class="el" href="../../d1/ddf/structez_map_base_iterator_base.htm">ezMapBaseIteratorBase</a>&lt; KeyType, ValueType, Comparer, false &gt;</td></tr>
<tr class="separator:aba55da17e9d5a7043ca48be7a1b3d5bc inherit pub_types_classez_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb2ac7172ed20c247750a3d127627cf9 inherit pub_types_classez_map_base" id="r_afb2ac7172ed20c247750a3d127627cf9"><td class="memItemLeft" align="right" valign="top">
using&#160;</td><td class="memItemRight" valign="bottom"><b>ReverseIterator</b> = <a class="el" href="../../d1/ddf/structez_map_base_iterator_base.htm">ezMapBaseIteratorBase</a>&lt; KeyType, ValueType, Comparer, true &gt;</td></tr>
<tr class="separator:afb2ac7172ed20c247750a3d127627cf9 inherit pub_types_classez_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classez_map_base"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classez_map_base')"><img src="../../closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="../../d1/d43/classez_map_base.htm">ezMapBase&lt; KeyType, ValueType, Comparer &gt;</a></td></tr>
<tr class="memitem:afe2abe0fcd54ce6bb569893932094383 inherit pro_methods_classez_map_base" id="r_afe2abe0fcd54ce6bb569893932094383"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>ezMapBase</b> (const Comparer &amp;comparer, <a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:afe2abe0fcd54ce6bb569893932094383 inherit pro_methods_classez_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the map to be empty. <br /></td></tr>
<tr class="separator:afe2abe0fcd54ce6bb569893932094383 inherit pro_methods_classez_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a097e75f1ed07ad058951750d26a80dfb inherit pro_methods_classez_map_base" id="r_a097e75f1ed07ad058951750d26a80dfb"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>ezMapBase</b> (const <a class="el" href="../../d1/d43/classez_map_base.htm">ezMapBase</a>&lt; KeyType, ValueType, Comparer &gt; &amp;cc, <a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:a097e75f1ed07ad058951750d26a80dfb inherit pro_methods_classez_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies all key/value pairs from the given map into this one. <br /></td></tr>
<tr class="separator:a097e75f1ed07ad058951750d26a80dfb inherit pro_methods_classez_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3bc6ff8af67d601852bdc08bef189f1e inherit pro_methods_classez_map_base" id="r_a3bc6ff8af67d601852bdc08bef189f1e"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>~ezMapBase</b> ()</td></tr>
<tr class="memdesc:a3bc6ff8af67d601852bdc08bef189f1e inherit pro_methods_classez_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys all elements from the map. <br /></td></tr>
<tr class="separator:a3bc6ff8af67d601852bdc08bef189f1e inherit pro_methods_classez_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29cfe65a8cf027f6f3818b1f2f9893b2 inherit pro_methods_classez_map_base" id="r_a29cfe65a8cf027f6f3818b1f2f9893b2"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="../../d1/d43/classez_map_base.htm">ezMapBase</a>&lt; KeyType, ValueType, Comparer &gt; &amp;rhs)</td></tr>
<tr class="memdesc:a29cfe65a8cf027f6f3818b1f2f9893b2 inherit pro_methods_classez_map_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies all key/value pairs from the given map into this one. <br /></td></tr>
<tr class="separator:a29cfe65a8cf027f6f3818b1f2f9893b2 inherit pro_methods_classez_map_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><div class="compoundTemplParams">template&lt;typename KeyType, typename ValueType, typename Comparer = ezCompareHelper&lt;KeyType&gt;, typename AllocatorWrapper = ezDefaultAllocatorWrapper&gt;<br />
class ezMap&lt; KeyType, ValueType, Comparer, AllocatorWrapper &gt;</div><dl class="section see"><dt>See also</dt><dd><a class="el" href="../../d1/d43/classez_map_base.htm" title="An associative container. Similar to STL::map.">ezMapBase</a> </dd></dl>
</div><hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Containers/<a class="el" href="../../d3/d63/_map_8h_source.htm">Map.h</a></li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Containers/Implementation/<a class="el" href="../../de/d1a/_map__inl_8h_source.htm">Map_inl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d1/d79/classez_map.htm">ezMap</a></li>
    <li class="footer">Generated on Fri Jul 11 2025 12:17:59 for ezEngine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
