<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/IO/Implementation/DeduplicationReadContext_inl.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">ezEngine<span id="projectnumber">&#160;Release 25.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function() { init_codefold(1); });
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('d1/dea/_deduplication_read_context__inl_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">DeduplicationReadContext_inl.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span> </div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="preprocessor">#include &lt;Foundation/IO/Stream.h&gt;</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span> </div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span>EZ_ALWAYS_INLINE <a class="code hl_struct" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code hl_function" href="../../df/ddd/classez_deduplication_read_context.htm#a35ac1d690148aff3801212b2e92b298d">ezDeduplicationReadContext::ReadObjectInplace</a>(<a class="code hl_class" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a>&amp; inout_stream, T&amp; inout_obj)</div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span>{</div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span>  <span class="keywordflow">return</span> <a class="code hl_function" href="../../df/ddd/classez_deduplication_read_context.htm#a04cfab558c2e8e4bbcab156e7703c11e">ReadObject</a>(inout_stream, inout_obj, <span class="keyword">nullptr</span>);</div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span>}</div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span> </div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><a class="code hl_struct" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code hl_function" href="../../df/ddd/classez_deduplication_read_context.htm#a04cfab558c2e8e4bbcab156e7703c11e">ezDeduplicationReadContext::ReadObject</a>(<a class="code hl_class" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a>&amp; inout_stream, T&amp; obj, <a class="code hl_class" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a>* pAllocator)</div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span>{</div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span>  <span class="keywordtype">bool</span> bIsRealObject;</div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span>  inout_stream &gt;&gt; bIsRealObject;</div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span> </div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span>  EZ_ASSERT_DEV(bIsRealObject, <span class="stringliteral">&quot;Reading an object inplace only works for the first occurrence&quot;</span>);</div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span> </div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span>  EZ_SUCCEED_OR_RETURN(ezStreamReaderUtil::Deserialize&lt;T&gt;(inout_stream, obj));</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span> </div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span>  m_Objects.<a class="code hl_function" href="../../dc/d59/classez_array_base.htm#abc514bdf8b2de7b5b220ffdbd862e830">PushBack</a>(&amp;obj);</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span> </div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span>  <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span>}</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span> </div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="foldopen" id="foldopen00026" data-start="{" data-end="}">
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno"><a class="line" href="../../df/ddd/classez_deduplication_read_context.htm#a04cfab558c2e8e4bbcab156e7703c11e">   26</a></span><a class="code hl_struct" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code hl_function" href="../../df/ddd/classez_deduplication_read_context.htm#a04cfab558c2e8e4bbcab156e7703c11e">ezDeduplicationReadContext::ReadObject</a>(<a class="code hl_class" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a>&amp; inout_stream, T*&amp; ref_pObject, <a class="code hl_class" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a>* pAllocator)</div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span>{</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span>  <span class="keywordtype">bool</span> bIsRealObject;</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span>  inout_stream &gt;&gt; bIsRealObject;</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span> </div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span>  <span class="keywordflow">if</span> (bIsRealObject)</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span>  {</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>    EZ_ASSERT_DEBUG(pAllocator != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;Valid allocator required&quot;</span>);</div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span>    ref_pObject = EZ_NEW(pAllocator, T);</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>    EZ_SUCCEED_OR_RETURN(ezStreamReaderUtil::Deserialize&lt;T&gt;(inout_stream, *ref_pObject));</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span> </div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span>    m_Objects.<a class="code hl_function" href="../../dc/d59/classez_array_base.htm#abc514bdf8b2de7b5b220ffdbd862e830">PushBack</a>(ref_pObject);</div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>  }</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span>  <span class="keywordflow">else</span></div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span>  {</div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>    ezUInt32 uiIndex;</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>    inout_stream &gt;&gt; uiIndex;</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span> </div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>    <span class="keywordflow">if</span> (uiIndex &lt; m_Objects.<a class="code hl_function" href="../../dc/d59/classez_array_base.htm#a51ba61fcbd2350ae8850754a41acbaa1">GetCount</a>())</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>    {</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span>      ref_pObject = <span class="keyword">static_cast&lt;</span>T*<span class="keyword">&gt;</span>(m_Objects[uiIndex]);</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span>    }</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (uiIndex == ezInvalidIndex)</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span>    {</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span>      ref_pObject = <span class="keyword">nullptr</span>;</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>    }</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>    <span class="keywordflow">else</span></div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>    {</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>      <span class="keywordflow">return</span> EZ_FAILURE;</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>    }</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>  }</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span> </div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>  <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>}</div>
</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span> </div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="foldopen" id="foldopen00062" data-start="{" data-end="}">
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno"><a class="line" href="../../df/ddd/classez_deduplication_read_context.htm#ae0fa64cdc0a91d109c1d64d2b7c8ba60">   62</a></span><a class="code hl_struct" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code hl_function" href="../../df/ddd/classez_deduplication_read_context.htm#a04cfab558c2e8e4bbcab156e7703c11e">ezDeduplicationReadContext::ReadObject</a>(<a class="code hl_class" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a>&amp; inout_stream, <a class="code hl_class" href="../../de/dc1/classez_shared_ptr.htm">ezSharedPtr&lt;T&gt;</a>&amp; ref_pObject, <a class="code hl_class" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a>* pAllocator)</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>{</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span>  T* ptr = <span class="keyword">nullptr</span>;</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>  <span class="keywordflow">if</span> (<a class="code hl_function" href="../../df/ddd/classez_deduplication_read_context.htm#a04cfab558c2e8e4bbcab156e7703c11e">ReadObject</a>(inout_stream, ptr, pAllocator).Succeeded())</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span>  {</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>    ref_pObject = <a class="code hl_class" href="../../de/dc1/classez_shared_ptr.htm">ezSharedPtr&lt;T&gt;</a>(ptr, pAllocator);</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>    <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>  }</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>  <span class="keywordflow">return</span> EZ_FAILURE;</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>}</div>
</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span> </div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="foldopen" id="foldopen00074" data-start="{" data-end="}">
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno"><a class="line" href="../../df/ddd/classez_deduplication_read_context.htm#ae573192833a175869a63546d7e55a557">   74</a></span><a class="code hl_struct" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code hl_function" href="../../df/ddd/classez_deduplication_read_context.htm#a04cfab558c2e8e4bbcab156e7703c11e">ezDeduplicationReadContext::ReadObject</a>(<a class="code hl_class" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a>&amp; inout_stream, <a class="code hl_class" href="../../d8/d96/classez_unique_ptr.htm">ezUniquePtr&lt;T&gt;</a>&amp; ref_pObject, <a class="code hl_class" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a>* pAllocator)</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>{</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>  T* ptr = <span class="keyword">nullptr</span>;</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>  <span class="keywordflow">if</span> (<a class="code hl_function" href="../../df/ddd/classez_deduplication_read_context.htm#a04cfab558c2e8e4bbcab156e7703c11e">ReadObject</a>(inout_stream, ptr, pAllocator).Succeeded())</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>  {</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>    ref_pObject = std::move(<a class="code hl_class" href="../../d8/d96/classez_unique_ptr.htm">ezUniquePtr&lt;T&gt;</a>(ptr, pAllocator));</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>    <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>  }</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span>  <span class="keywordflow">return</span> EZ_FAILURE;</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>}</div>
</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span> </div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> ArrayType, <span class="keyword">typename</span> ValueType&gt;</div>
<div class="foldopen" id="foldopen00086" data-start="{" data-end="}">
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno"><a class="line" href="../../df/ddd/classez_deduplication_read_context.htm#a656e64dee450eeebf3b69ecf1e382a82">   86</a></span><a class="code hl_struct" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code hl_function" href="../../df/ddd/classez_deduplication_read_context.htm#a656e64dee450eeebf3b69ecf1e382a82">ezDeduplicationReadContext::ReadArray</a>(<a class="code hl_class" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a>&amp; inout_stream, <a class="code hl_class" href="../../dc/d59/classez_array_base.htm">ezArrayBase&lt;ValueType, ArrayType&gt;</a>&amp; ref_array, <a class="code hl_class" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a>* pAllocator)</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>{</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>  ezUInt64 uiCount = 0;</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>  EZ_SUCCEED_OR_RETURN(inout_stream.<a class="code hl_function" href="../../d2/d19/classez_stream_reader.htm#af8a61f22f0a0e77ee49411ae61cbc92d">ReadQWordValue</a>(&amp;uiCount));</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span> </div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>  EZ_ASSERT_DEV(uiCount &lt; std::numeric_limits&lt;ezUInt32&gt;::max(), <span class="stringliteral">&quot;Containers currently use 32 bit for counts internally. Value from file is too large.&quot;</span>);</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span> </div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>  ref_array.<a class="code hl_function" href="../../dc/d59/classez_array_base.htm#a74099c2d7681df345aedf8cfe24f0bc4">Clear</a>();</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span> </div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>  <span class="keywordflow">if</span> (uiCount &gt; 0)</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>  {</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span>    <span class="keyword">static_cast&lt;</span>ArrayType&amp;<span class="keyword">&gt;</span>(ref_array).Reserve(<span class="keyword">static_cast&lt;</span>ezUInt32<span class="keyword">&gt;</span>(uiCount));</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span> </div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>    <span class="keywordflow">for</span> (ezUInt32 i = 0; i &lt; static_cast&lt;ezUInt32&gt;(uiCount); ++i)</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>    {</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>      EZ_SUCCEED_OR_RETURN(<a class="code hl_function" href="../../df/ddd/classez_deduplication_read_context.htm#a04cfab558c2e8e4bbcab156e7703c11e">ReadObject</a>(inout_stream, ref_array.<a class="code hl_function" href="../../dc/d59/classez_array_base.htm#a0f0562f5239ac1e43a81764086de2e25">ExpandAndGetRef</a>(), pAllocator));</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>    }</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>  }</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span> </div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>  <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>}</div>
</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span> </div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> KeyType, <span class="keyword">typename</span> Comparer&gt;</div>
<div class="foldopen" id="foldopen00109" data-start="{" data-end="}">
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno"><a class="line" href="../../df/ddd/classez_deduplication_read_context.htm#aab8f786f7fe3a4f9b8102e34ae5d6855">  109</a></span><a class="code hl_struct" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code hl_function" href="../../df/ddd/classez_deduplication_read_context.htm#aab8f786f7fe3a4f9b8102e34ae5d6855">ezDeduplicationReadContext::ReadSet</a>(<a class="code hl_class" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a>&amp; inout_stream, <a class="code hl_class" href="../../dc/d4b/classez_set_base.htm">ezSetBase&lt;KeyType, Comparer&gt;</a>&amp; ref_set, <a class="code hl_class" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a>* pAllocator)</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span>{</div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span>  ezUInt64 uiCount = 0;</div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span>  EZ_SUCCEED_OR_RETURN(inout_stream.<a class="code hl_function" href="../../d2/d19/classez_stream_reader.htm#af8a61f22f0a0e77ee49411ae61cbc92d">ReadQWordValue</a>(&amp;uiCount));</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span> </div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span>  EZ_ASSERT_DEV(uiCount &lt; std::numeric_limits&lt;ezUInt32&gt;::max(), <span class="stringliteral">&quot;Containers currently use 32 bit for counts internally. Value from file is too large.&quot;</span>);</div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span> </div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>  ref_set.<a class="code hl_function" href="../../dc/d4b/classez_set_base.htm#aaf9b11b02b7dc68cd4a4d95f2e678ce5">Clear</a>();</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span> </div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span>  <span class="keywordflow">for</span> (ezUInt32 i = 0; i &lt; static_cast&lt;ezUInt32&gt;(uiCount); ++i)</div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>  {</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>    KeyType key;</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span>    EZ_SUCCEED_OR_RETURN(<a class="code hl_function" href="../../df/ddd/classez_deduplication_read_context.htm#a04cfab558c2e8e4bbcab156e7703c11e">ReadObject</a>(inout_stream, key, pAllocator));</div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span> </div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span>    ref_set.<a class="code hl_function" href="../../dc/d4b/classez_set_base.htm#a48fcf3d5be80596908f4daebfe984bf4">Insert</a>(std::move(key));</div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span>  }</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span> </div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span>  <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span>}</div>
</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span> </div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span><span class="keyword">namespace </span>ezInternal</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span>{</div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span>  <span class="comment">// Internal helper to prevent the compiler from trying to find a de-serialization method for pointer types or other types which don&#39;t have</span></div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span>  <span class="comment">// one.</span></div>
<div class="foldopen" id="foldopen00133" data-start="{" data-end="};">
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno"><a class="line" href="../../db/d95/structez_internal_1_1_deserialize_helper.htm">  133</a></span>  <span class="keyword">struct </span><a class="code hl_struct" href="../../db/d95/structez_internal_1_1_deserialize_helper.htm">DeserializeHelper</a></div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>  {</div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span>    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span>    <span class="keyword">static</span> <span class="keyword">auto</span> Deserialize(<a class="code hl_class" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a>&amp; inout_stream, T&amp; ref_obj, <span class="keywordtype">int</span>) -&gt; <span class="keyword">decltype</span>(ezStreamReaderUtil::Deserialize(inout_stream, ref_obj))</div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span>    {</div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span>      <span class="keywordflow">return</span> ezStreamReaderUtil::Deserialize(inout_stream, ref_obj);</div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span>    }</div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span> </div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span>    <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>    <span class="keyword">static</span> <a class="code hl_struct" href="../../d4/da9/structez_result.htm">ezResult</a> Deserialize(<a class="code hl_class" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a>&amp; inout_stream, T&amp; ref_obj, <span class="keywordtype">float</span>)</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span>    {</div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span>      EZ_REPORT_FAILURE(<span class="stringliteral">&quot;No deserialize method available&quot;</span>);</div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span>      <span class="keywordflow">return</span> EZ_FAILURE;</div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span>    }</div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span>  };</div>
</div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span>} <span class="comment">// namespace ezInternal</span></div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span> </div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> KeyType, <span class="keyword">typename</span> ValueType, <span class="keyword">typename</span> Comparer&gt;</div>
<div class="foldopen" id="foldopen00151" data-start="{" data-end="}">
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno"><a class="line" href="../../df/ddd/classez_deduplication_read_context.htm#a366fe9cd80e2c18d0c8df6abbd1394a2">  151</a></span><a class="code hl_struct" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code hl_function" href="../../df/ddd/classez_deduplication_read_context.htm#a366fe9cd80e2c18d0c8df6abbd1394a2">ezDeduplicationReadContext::ReadMap</a>(<a class="code hl_class" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a>&amp; inout_stream, <a class="code hl_class" href="../../d1/d43/classez_map_base.htm">ezMapBase&lt;KeyType, ValueType, Comparer&gt;</a>&amp; ref_map, ReadMapMode mode, <a class="code hl_class" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a>* pKeyAllocator, <a class="code hl_class" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a>* pValueAllocator)</div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span>{</div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span>  ezUInt64 uiCount = 0;</div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span>  EZ_SUCCEED_OR_RETURN(inout_stream.<a class="code hl_function" href="../../d2/d19/classez_stream_reader.htm#af8a61f22f0a0e77ee49411ae61cbc92d">ReadQWordValue</a>(&amp;uiCount));</div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span> </div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span>  EZ_ASSERT_DEV(uiCount &lt; std::numeric_limits&lt;ezUInt32&gt;::max(), <span class="stringliteral">&quot;Containers currently use 32 bit for counts internally. Value from file is too large.&quot;</span>);</div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span> </div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span>  ref_map.<a class="code hl_function" href="../../d1/d43/classez_map_base.htm#a5946a15134311c8353deeee06670e412">Clear</a>();</div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span> </div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span>  <span class="keywordflow">if</span> (mode == ReadMapMode::DedupKey)</div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span>  {</div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span>    <span class="keywordflow">for</span> (ezUInt32 i = 0; i &lt; static_cast&lt;ezUInt32&gt;(uiCount); ++i)</div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span>    {</div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span>      KeyType key;</div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span>      ValueType value;</div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span>      EZ_SUCCEED_OR_RETURN(<a class="code hl_function" href="../../df/ddd/classez_deduplication_read_context.htm#a04cfab558c2e8e4bbcab156e7703c11e">ReadObject</a>(inout_stream, key, pKeyAllocator));</div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span>      EZ_SUCCEED_OR_RETURN(ezInternal::DeserializeHelper::Deserialize&lt;ValueType&gt;(inout_stream, value, 0));</div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span> </div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span>      ref_map.<a class="code hl_function" href="../../d1/d43/classez_map_base.htm#a25d049c3f258c4640642ef5c1ea04d17">Insert</a>(std::move(key), std::move(value));</div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span>    }</div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span>  }</div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span>  <span class="keywordflow">else</span> <span class="keywordflow">if</span> (mode == ReadMapMode::DedupValue)</div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span>  {</div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span>    <span class="keywordflow">for</span> (ezUInt32 i = 0; i &lt; static_cast&lt;ezUInt32&gt;(uiCount); ++i)</div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span>    {</div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span>      KeyType key;</div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span>      ValueType value;</div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span>      EZ_SUCCEED_OR_RETURN(ezInternal::DeserializeHelper::Deserialize&lt;KeyType&gt;(inout_stream, key, 0));</div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span>      EZ_SUCCEED_OR_RETURN(<a class="code hl_function" href="../../df/ddd/classez_deduplication_read_context.htm#a04cfab558c2e8e4bbcab156e7703c11e">ReadObject</a>(inout_stream, value, pValueAllocator));</div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span> </div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span>      ref_map.<a class="code hl_function" href="../../d1/d43/classez_map_base.htm#a25d049c3f258c4640642ef5c1ea04d17">Insert</a>(std::move(key), std::move(value));</div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span>    }</div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno">  183</span>  }</div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span>  <span class="keywordflow">else</span></div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span>  {</div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span>    <span class="keywordflow">for</span> (ezUInt32 i = 0; i &lt; static_cast&lt;ezUInt32&gt;(uiCount); ++i)</div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span>    {</div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span>      KeyType key;</div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span>      ValueType value;</div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span>      EZ_SUCCEED_OR_RETURN(<a class="code hl_function" href="../../df/ddd/classez_deduplication_read_context.htm#a04cfab558c2e8e4bbcab156e7703c11e">ReadObject</a>(inout_stream, key, pKeyAllocator));</div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span>      EZ_SUCCEED_OR_RETURN(<a class="code hl_function" href="../../df/ddd/classez_deduplication_read_context.htm#a04cfab558c2e8e4bbcab156e7703c11e">ReadObject</a>(inout_stream, value, pValueAllocator));</div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span> </div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span>      ref_map.<a class="code hl_function" href="../../d1/d43/classez_map_base.htm#a25d049c3f258c4640642ef5c1ea04d17">Insert</a>(std::move(key), std::move(value));</div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span>    }</div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span>  }</div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span> </div>
<div class="line"><a id="l00197" name="l00197"></a><span class="lineno">  197</span>  <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno">  198</span>}</div>
</div>
<div class="ttc" id="aclassez_allocator_htm"><div class="ttname"><a href="../../d0/dbb/classez_allocator.htm">ezAllocator</a></div><div class="ttdoc">Base class for all memory allocators.</div><div class="ttdef"><b>Definition</b> Allocator.h:23</div></div>
<div class="ttc" id="aclassez_array_base_htm"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm">ezArrayBase</a></div><div class="ttdoc">Base class for all array containers. Implements all the basic functionality that only requires a poin...</div><div class="ttdef"><b>Definition</b> ArrayBase.h:19</div></div>
<div class="ttc" id="aclassez_array_base_htm_a0f0562f5239ac1e43a81764086de2e25"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a0f0562f5239ac1e43a81764086de2e25">ezArrayBase::ExpandAndGetRef</a></div><div class="ttdeci">T &amp; ExpandAndGetRef()</div><div class="ttdoc">Grows the array by one element and returns a reference to the newly created element.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:310</div></div>
<div class="ttc" id="aclassez_array_base_htm_a51ba61fcbd2350ae8850754a41acbaa1"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a51ba61fcbd2350ae8850754a41acbaa1">ezArrayBase::GetCount</a></div><div class="ttdeci">ezUInt32 GetCount() const</div><div class="ttdoc">Returns the number of active elements in the array.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:172</div></div>
<div class="ttc" id="aclassez_array_base_htm_a74099c2d7681df345aedf8cfe24f0bc4"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a74099c2d7681df345aedf8cfe24f0bc4">ezArrayBase::Clear</a></div><div class="ttdeci">void Clear()</div><div class="ttdoc">Clears the array.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:184</div></div>
<div class="ttc" id="aclassez_array_base_htm_abc514bdf8b2de7b5b220ffdbd862e830"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#abc514bdf8b2de7b5b220ffdbd862e830">ezArrayBase::PushBack</a></div><div class="ttdeci">void PushBack(const T &amp;value)</div><div class="ttdoc">Pushes value at the end of the array.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:333</div></div>
<div class="ttc" id="aclassez_deduplication_read_context_htm_a04cfab558c2e8e4bbcab156e7703c11e"><div class="ttname"><a href="../../df/ddd/classez_deduplication_read_context.htm#a04cfab558c2e8e4bbcab156e7703c11e">ezDeduplicationReadContext::ReadObject</a></div><div class="ttdeci">ezResult ReadObject(ezStreamReader &amp;inout_stream, T *&amp;ref_pObject, ezAllocator *pAllocator=ezFoundation::GetDefaultAllocator())</div><div class="ttdoc">Reads a single object and sets the pointer to it. The given allocator is used to create the object if...</div><div class="ttdef"><b>Definition</b> DeduplicationReadContext_inl.h:26</div></div>
<div class="ttc" id="aclassez_deduplication_read_context_htm_a35ac1d690148aff3801212b2e92b298d"><div class="ttname"><a href="../../df/ddd/classez_deduplication_read_context.htm#a35ac1d690148aff3801212b2e92b298d">ezDeduplicationReadContext::ReadObjectInplace</a></div><div class="ttdeci">ezResult ReadObjectInplace(ezStreamReader &amp;inout_stream, T &amp;ref_obj)</div><div class="ttdoc">Reads a single object inplace.</div></div>
<div class="ttc" id="aclassez_deduplication_read_context_htm_a366fe9cd80e2c18d0c8df6abbd1394a2"><div class="ttname"><a href="../../df/ddd/classez_deduplication_read_context.htm#a366fe9cd80e2c18d0c8df6abbd1394a2">ezDeduplicationReadContext::ReadMap</a></div><div class="ttdeci">ezResult ReadMap(ezStreamReader &amp;inout_stream, ezMapBase&lt; KeyType, ValueType, Comparer &gt; &amp;ref_map, ReadMapMode mode, ezAllocator *pKeyAllocator=ezFoundation::GetDefaultAllocator(), ezAllocator *pValueAllocator=ezFoundation::GetDefaultAllocator())</div><div class="ttdoc">Reads a map. Mode controls whether key or value or both should de-duplicated.</div><div class="ttdef"><b>Definition</b> DeduplicationReadContext_inl.h:151</div></div>
<div class="ttc" id="aclassez_deduplication_read_context_htm_a656e64dee450eeebf3b69ecf1e382a82"><div class="ttname"><a href="../../df/ddd/classez_deduplication_read_context.htm#a656e64dee450eeebf3b69ecf1e382a82">ezDeduplicationReadContext::ReadArray</a></div><div class="ttdeci">ezResult ReadArray(ezStreamReader &amp;inout_stream, ezArrayBase&lt; ValueType, ArrayType &gt; &amp;ref_array, ezAllocator *pAllocator=ezFoundation::GetDefaultAllocator())</div><div class="ttdoc">Reads an array of de-duplicated objects.</div><div class="ttdef"><b>Definition</b> DeduplicationReadContext_inl.h:86</div></div>
<div class="ttc" id="aclassez_deduplication_read_context_htm_aab8f786f7fe3a4f9b8102e34ae5d6855"><div class="ttname"><a href="../../df/ddd/classez_deduplication_read_context.htm#aab8f786f7fe3a4f9b8102e34ae5d6855">ezDeduplicationReadContext::ReadSet</a></div><div class="ttdeci">ezResult ReadSet(ezStreamReader &amp;inout_stream, ezSetBase&lt; KeyType, Comparer &gt; &amp;ref_set, ezAllocator *pAllocator=ezFoundation::GetDefaultAllocator())</div><div class="ttdoc">Reads a set of de-duplicated objects.</div><div class="ttdef"><b>Definition</b> DeduplicationReadContext_inl.h:109</div></div>
<div class="ttc" id="aclassez_map_base_htm"><div class="ttname"><a href="../../d1/d43/classez_map_base.htm">ezMapBase</a></div><div class="ttdoc">An associative container. Similar to STL::map.</div><div class="ttdef"><b>Definition</b> Map.h:193</div></div>
<div class="ttc" id="aclassez_map_base_htm_a25d049c3f258c4640642ef5c1ea04d17"><div class="ttname"><a href="../../d1/d43/classez_map_base.htm#a25d049c3f258c4640642ef5c1ea04d17">ezMapBase::Insert</a></div><div class="ttdeci">Iterator Insert(CompatibleKeyType &amp;&amp;key, CompatibleValueType &amp;&amp;value)</div><div class="ttdoc">Inserts the key/value pair into the tree and returns an Iterator to it. O(log n) operation.</div><div class="ttdef"><b>Definition</b> Map_inl.h:535</div></div>
<div class="ttc" id="aclassez_map_base_htm_a5946a15134311c8353deeee06670e412"><div class="ttname"><a href="../../d1/d43/classez_map_base.htm#a5946a15134311c8353deeee06670e412">ezMapBase::Clear</a></div><div class="ttdeci">void Clear()</div><div class="ttdoc">Destroys all elements in the map and resets its size to zero.</div><div class="ttdef"><b>Definition</b> Map_inl.h:175</div></div>
<div class="ttc" id="aclassez_set_base_htm"><div class="ttname"><a href="../../dc/d4b/classez_set_base.htm">ezSetBase</a></div><div class="ttdoc">A set container that only stores whether an element resides in it or not. Similar to STL::set.</div><div class="ttdef"><b>Definition</b> Set.h:13</div></div>
<div class="ttc" id="aclassez_set_base_htm_a48fcf3d5be80596908f4daebfe984bf4"><div class="ttname"><a href="../../dc/d4b/classez_set_base.htm#a48fcf3d5be80596908f4daebfe984bf4">ezSetBase::Insert</a></div><div class="ttdeci">Iterator Insert(CompatibleKeyType &amp;&amp;key)</div><div class="ttdoc">Inserts the key into the tree and returns an Iterator to it. O(log n) operation.</div><div class="ttdef"><b>Definition</b> Set_inl.h:351</div></div>
<div class="ttc" id="aclassez_set_base_htm_aaf9b11b02b7dc68cd4a4d95f2e678ce5"><div class="ttname"><a href="../../dc/d4b/classez_set_base.htm#aaf9b11b02b7dc68cd4a4d95f2e678ce5">ezSetBase::Clear</a></div><div class="ttdeci">void Clear()</div><div class="ttdoc">Destroys all elements in the set and resets its size to zero.</div><div class="ttdef"><b>Definition</b> Set_inl.h:133</div></div>
<div class="ttc" id="aclassez_shared_ptr_htm"><div class="ttname"><a href="../../de/dc1/classez_shared_ptr.htm">ezSharedPtr</a></div><div class="ttdoc">A Shared ptr manages a shared object and destroys that object when no one references it anymore....</div><div class="ttdef"><b>Definition</b> SharedPtr.h:10</div></div>
<div class="ttc" id="aclassez_stream_reader_htm"><div class="ttname"><a href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a></div><div class="ttdoc">Interface for binary in (read) streams.</div><div class="ttdef"><b>Definition</b> Stream.h:22</div></div>
<div class="ttc" id="aclassez_stream_reader_htm_af8a61f22f0a0e77ee49411ae61cbc92d"><div class="ttname"><a href="../../d2/d19/classez_stream_reader.htm#af8a61f22f0a0e77ee49411ae61cbc92d">ezStreamReader::ReadQWordValue</a></div><div class="ttdeci">ezResult ReadQWordValue(T *pQWordValue)</div><div class="ttdoc">Helper method to read a qword value correctly (copes with potentially different endianess)</div><div class="ttdef"><b>Definition</b> Stream_inl.h:107</div></div>
<div class="ttc" id="aclassez_unique_ptr_htm"><div class="ttname"><a href="../../d8/d96/classez_unique_ptr.htm">ezUniquePtr</a></div><div class="ttdoc">A Unique ptr manages an object and destroys that object when it goes out of scope....</div><div class="ttdef"><b>Definition</b> UniquePtr.h:10</div></div>
<div class="ttc" id="astructez_internal_1_1_deserialize_helper_htm"><div class="ttname"><a href="../../db/d95/structez_internal_1_1_deserialize_helper.htm">ezInternal::DeserializeHelper</a></div><div class="ttdef"><b>Definition</b> DeduplicationReadContext_inl.h:134</div></div>
<div class="ttc" id="astructez_result_htm"><div class="ttname"><a href="../../d4/da9/structez_result.htm">ezResult</a></div><div class="ttdoc">Default enum for returning failure or success, instead of using a bool.</div><div class="ttdef"><b>Definition</b> Types.h:54</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_64fdcb4094ee5a27b054d4fa23e28e01.htm">IO</a></li><li class="navelem"><a class="el" href="../../dir_958a535fafce83ab8c10e8fc15932487.htm">Implementation</a></li><li class="navelem"><b>DeduplicationReadContext_inl.h</b></li>
    <li class="footer">Generated on Fri Jul 11 2025 12:17:51 for ezEngine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
