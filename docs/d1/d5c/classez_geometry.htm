<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: ezGeometry Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">ezEngine<span id="projectnumber">&#160;Release 25.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('d1/d5c/classez_geometry.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="../../d0/da1/classez_geometry-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">ezGeometry Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p>Provides functions to generate standard geometric shapes, such as boxes, spheres, cylinders, etc.  
 <a href="../../d1/d5c/classez_geometry.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d1/d4e/_geometry_8h_source.htm">Geometry.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="nested-classes" name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Options shared among all geometry creation functions.  <a href="../../d3/da0/structez_geometry_1_1_geo_options.htm#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/db3/structez_geometry_1_1_line.htm">Line</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">A line only references two vertices.  <a href="../../d8/db3/structez_geometry_1_1_line.htm#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/d66/structez_geometry_1_1_polygon.htm">Polygon</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Each polygon has a face normal and a set of indices, which vertices it references.  <a href="../../d2/d66/structez_geometry_1_1_polygon.htm#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d24/structez_geometry_1_1_vertex.htm">Vertex</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">The data that is stored per vertex.  <a href="../../db/d24/structez_geometry_1_1_vertex.htm#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a8cffbba1996f11ef8abacdaf37679bb5" id="r_a8cffbba1996f11ef8abacdaf37679bb5"><td class="memItemLeft" align="right" valign="top"><a id="a8cffbba1996f11ef8abacdaf37679bb5" name="a8cffbba1996f11ef8abacdaf37679bb5"></a>
<a class="el" href="../../d9/dfe/classez_deque.htm">ezDeque</a>&lt; <a class="el" href="../../db/d24/structez_geometry_1_1_vertex.htm">Vertex</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetVertices</b> ()</td></tr>
<tr class="memdesc:a8cffbba1996f11ef8abacdaf37679bb5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the entire vertex data. <br /></td></tr>
<tr class="separator:a8cffbba1996f11ef8abacdaf37679bb5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3aac51f6380399072274168dcce869ed" id="r_a3aac51f6380399072274168dcce869ed"><td class="memItemLeft" align="right" valign="top"><a id="a3aac51f6380399072274168dcce869ed" name="a3aac51f6380399072274168dcce869ed"></a>
<a class="el" href="../../d9/dfe/classez_deque.htm">ezDeque</a>&lt; <a class="el" href="../../d2/d66/structez_geometry_1_1_polygon.htm">Polygon</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetPolygons</b> ()</td></tr>
<tr class="memdesc:a3aac51f6380399072274168dcce869ed"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the entire polygon data. <br /></td></tr>
<tr class="separator:a3aac51f6380399072274168dcce869ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a198bd478595bfa26139d0e4063f95768" id="r_a198bd478595bfa26139d0e4063f95768"><td class="memItemLeft" align="right" valign="top"><a id="a198bd478595bfa26139d0e4063f95768" name="a198bd478595bfa26139d0e4063f95768"></a>
<a class="el" href="../../d9/dfe/classez_deque.htm">ezDeque</a>&lt; <a class="el" href="../../d8/db3/structez_geometry_1_1_line.htm">Line</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetLines</b> ()</td></tr>
<tr class="memdesc:a198bd478595bfa26139d0e4063f95768"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the entire line data. <br /></td></tr>
<tr class="separator:a198bd478595bfa26139d0e4063f95768"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2246db026030ddf1ceaad8392cc9b745" id="r_a2246db026030ddf1ceaad8392cc9b745"><td class="memItemLeft" align="right" valign="top"><a id="a2246db026030ddf1ceaad8392cc9b745" name="a2246db026030ddf1ceaad8392cc9b745"></a>
const <a class="el" href="../../d9/dfe/classez_deque.htm">ezDeque</a>&lt; <a class="el" href="../../db/d24/structez_geometry_1_1_vertex.htm">Vertex</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetVertices</b> () const</td></tr>
<tr class="memdesc:a2246db026030ddf1ceaad8392cc9b745"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the entire vertex data. <br /></td></tr>
<tr class="separator:a2246db026030ddf1ceaad8392cc9b745"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa3008e14bc363147c4a42ab220e3a691" id="r_aa3008e14bc363147c4a42ab220e3a691"><td class="memItemLeft" align="right" valign="top"><a id="aa3008e14bc363147c4a42ab220e3a691" name="aa3008e14bc363147c4a42ab220e3a691"></a>
const <a class="el" href="../../d9/dfe/classez_deque.htm">ezDeque</a>&lt; <a class="el" href="../../d2/d66/structez_geometry_1_1_polygon.htm">Polygon</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetPolygons</b> () const</td></tr>
<tr class="memdesc:aa3008e14bc363147c4a42ab220e3a691"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the entire polygon data. <br /></td></tr>
<tr class="separator:aa3008e14bc363147c4a42ab220e3a691"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a93f87d5aaecc033dc9f71780ca799718" id="r_a93f87d5aaecc033dc9f71780ca799718"><td class="memItemLeft" align="right" valign="top"><a id="a93f87d5aaecc033dc9f71780ca799718" name="a93f87d5aaecc033dc9f71780ca799718"></a>
const <a class="el" href="../../d9/dfe/classez_deque.htm">ezDeque</a>&lt; <a class="el" href="../../d8/db3/structez_geometry_1_1_line.htm">Line</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetLines</b> () const</td></tr>
<tr class="memdesc:a93f87d5aaecc033dc9f71780ca799718"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the entire line data. <br /></td></tr>
<tr class="separator:a93f87d5aaecc033dc9f71780ca799718"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d26768f4b50054c0e329e86fde21fac" id="r_a7d26768f4b50054c0e329e86fde21fac"><td class="memItemLeft" align="right" valign="top"><a id="a7d26768f4b50054c0e329e86fde21fac" name="a7d26768f4b50054c0e329e86fde21fac"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Clear</b> ()</td></tr>
<tr class="memdesc:a7d26768f4b50054c0e329e86fde21fac"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears all data. <br /></td></tr>
<tr class="separator:a7d26768f4b50054c0e329e86fde21fac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ace7c38e3783654b12304377f04103043" id="r_ace7c38e3783654b12304377f04103043"><td class="memItemLeft" align="right" valign="top"><a id="ace7c38e3783654b12304377f04103043" name="ace7c38e3783654b12304377f04103043"></a>
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>AddVertex</b> (const <a class="el" href="../../da/df1/classez_vec3_template.htm">ezVec3</a> &amp;vPos, const <a class="el" href="../../da/df1/classez_vec3_template.htm">ezVec3</a> &amp;vNormal, const <a class="el" href="../../d1/df8/classez_vec2_template.htm">ezVec2</a> &amp;vTexCoord=<a class="el" href="../../d1/df8/classez_vec2_template.htm">ezVec2</a>(0.0f), const <a class="el" href="../../dd/d01/classez_color.htm">ezColor</a> &amp;color=<a class="el" href="../../dd/d01/classez_color.htm#a20d4d15acd9f0a7cb81d386467ab2204">ezColor::White</a>, const <a class="el" href="../../da/dd2/classez_vec4_template.htm">ezVec4U16</a> &amp;vBoneIndices=<a class="el" href="../../da/dd2/classez_vec4_template.htm#a3b7ef2e6937ee4798311fde68c8a31b8">ezVec4U16::MakeZero</a>(), const <a class="el" href="../../de/d68/classez_color_linear_u_b.htm">ezColorLinearUB</a> &amp;boneWeights=<a class="el" href="../../de/d68/classez_color_linear_u_b.htm">ezColorLinearUB</a>(255, 0, 0, 0))</td></tr>
<tr class="memdesc:ace7c38e3783654b12304377f04103043"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a vertex, returns the index to the added vertex. <br /></td></tr>
<tr class="separator:ace7c38e3783654b12304377f04103043"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5eee120b120675f882a181c3058fe201" id="r_a5eee120b120675f882a181c3058fe201"><td class="memItemLeft" align="right" valign="top"><a id="a5eee120b120675f882a181c3058fe201" name="a5eee120b120675f882a181c3058fe201"></a>
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>AddVertex</b> (const <a class="el" href="../../d7/d9b/classez_mat4_template.htm">ezMat4</a> &amp;mTransform, const <a class="el" href="../../da/df1/classez_vec3_template.htm">ezVec3</a> &amp;vPos, const <a class="el" href="../../da/df1/classez_vec3_template.htm">ezVec3</a> &amp;vNormal, const <a class="el" href="../../d1/df8/classez_vec2_template.htm">ezVec2</a> &amp;vTexCoord=<a class="el" href="../../d1/df8/classez_vec2_template.htm">ezVec2</a>(0.0f), const <a class="el" href="../../dd/d01/classez_color.htm">ezColor</a> &amp;color=<a class="el" href="../../dd/d01/classez_color.htm#a20d4d15acd9f0a7cb81d386467ab2204">ezColor::White</a>, const <a class="el" href="../../da/dd2/classez_vec4_template.htm">ezVec4U16</a> &amp;vBoneIndices=<a class="el" href="../../da/dd2/classez_vec4_template.htm#a3b7ef2e6937ee4798311fde68c8a31b8">ezVec4U16::MakeZero</a>(), const <a class="el" href="../../de/d68/classez_color_linear_u_b.htm">ezColorLinearUB</a> &amp;boneWeights=<a class="el" href="../../de/d68/classez_color_linear_u_b.htm">ezColorLinearUB</a>(255, 0, 0, 0))</td></tr>
<tr class="memdesc:a5eee120b120675f882a181c3058fe201"><td class="mdescLeft">&#160;</td><td class="mdescRight">Overload that transforms position and normal with the given matrix. <br /></td></tr>
<tr class="separator:a5eee120b120675f882a181c3058fe201"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac8d696da2a13f8b7c28234b8640da0aa" id="r_ac8d696da2a13f8b7c28234b8640da0aa"><td class="memItemLeft" align="right" valign="top"><a id="ac8d696da2a13f8b7c28234b8640da0aa" name="ac8d696da2a13f8b7c28234b8640da0aa"></a>
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>AddVertex</b> (const <a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a> &amp;options, const <a class="el" href="../../da/df1/classez_vec3_template.htm">ezVec3</a> &amp;vPos, const <a class="el" href="../../da/df1/classez_vec3_template.htm">ezVec3</a> &amp;vNormal, const <a class="el" href="../../d1/df8/classez_vec2_template.htm">ezVec2</a> &amp;vTexCoord=<a class="el" href="../../d1/df8/classez_vec2_template.htm">ezVec2</a>(0.0f))</td></tr>
<tr class="memdesc:ac8d696da2a13f8b7c28234b8640da0aa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Overload that uses the options for color and to transform position and normal and uses a single bone. <br /></td></tr>
<tr class="separator:ac8d696da2a13f8b7c28234b8640da0aa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad30399a886a5efa3268e83b93486b775" id="r_ad30399a886a5efa3268e83b93486b775"><td class="memItemLeft" align="right" valign="top"><a id="ad30399a886a5efa3268e83b93486b775" name="ad30399a886a5efa3268e83b93486b775"></a>
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>AddVertex</b> (const <a class="el" href="../../d7/d9b/classez_mat4_template.htm">ezMat4</a> &amp;mTransform, const <a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a> &amp;options, const <a class="el" href="../../da/df1/classez_vec3_template.htm">ezVec3</a> &amp;vPos, const <a class="el" href="../../da/df1/classez_vec3_template.htm">ezVec3</a> &amp;vNormal, const <a class="el" href="../../d1/df8/classez_vec2_template.htm">ezVec2</a> &amp;vTexCoord=<a class="el" href="../../d1/df8/classez_vec2_template.htm">ezVec2</a>(0.0f))</td></tr>
<tr class="memdesc:ad30399a886a5efa3268e83b93486b775"><td class="mdescLeft">&#160;</td><td class="mdescRight">Overload that uses the options for color and a single bone and transforms position and normal by a separately provided matrix. <br /></td></tr>
<tr class="separator:ad30399a886a5efa3268e83b93486b775"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95402335d72e12bb5e416500be820f05" id="r_a95402335d72e12bb5e416500be820f05"><td class="memItemLeft" align="right" valign="top"><a id="a95402335d72e12bb5e416500be820f05" name="a95402335d72e12bb5e416500be820f05"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>AddPolygon</b> (const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; ezUInt32 &gt; &amp;vertices, bool bFlipWinding)</td></tr>
<tr class="memdesc:a95402335d72e12bb5e416500be820f05"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a polygon that consists of all the referenced vertices. No face normal is computed at this point. <br /></td></tr>
<tr class="separator:a95402335d72e12bb5e416500be820f05"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90d2edfa27bdd1b3c4e91800b9a30912" id="r_a90d2edfa27bdd1b3c4e91800b9a30912"><td class="memItemLeft" align="right" valign="top"><a id="a90d2edfa27bdd1b3c4e91800b9a30912" name="a90d2edfa27bdd1b3c4e91800b9a30912"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>AddLine</b> (ezUInt32 uiStartVertex, ezUInt32 uiEndVertex)</td></tr>
<tr class="memdesc:a90d2edfa27bdd1b3c4e91800b9a30912"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a line with the given start and end vertex index. <br /></td></tr>
<tr class="separator:a90d2edfa27bdd1b3c4e91800b9a30912"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a353a17ad9eaa17d17cc69d4254afb5b3" id="r_a353a17ad9eaa17d17cc69d4254afb5b3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d5c/classez_geometry.htm#a353a17ad9eaa17d17cc69d4254afb5b3">TriangulatePolygons</a> (ezUInt32 uiMaxVerticesInPolygon=3)</td></tr>
<tr class="memdesc:a353a17ad9eaa17d17cc69d4254afb5b3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Triangulates all polygons that have more than <em>uiMaxVerticesInPolygon</em> vertices.  <br /></td></tr>
<tr class="separator:a353a17ad9eaa17d17cc69d4254afb5b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aea7517393e59f9d825daa163b371b4e9" id="r_aea7517393e59f9d825daa163b371b4e9"><td class="memItemLeft" align="right" valign="top"><a id="aea7517393e59f9d825daa163b371b4e9" name="aea7517393e59f9d825daa163b371b4e9"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>ComputeFaceNormals</b> ()</td></tr>
<tr class="memdesc:aea7517393e59f9d825daa163b371b4e9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Computes normals for all polygons from the current vertex positions. Call this when you do not intend to make further modifications. <br /></td></tr>
<tr class="separator:aea7517393e59f9d825daa163b371b4e9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad380b94f5453836050b584fb5caf47ae" id="r_ad380b94f5453836050b584fb5caf47ae"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d5c/classez_geometry.htm#ad380b94f5453836050b584fb5caf47ae">ComputeSmoothVertexNormals</a> ()</td></tr>
<tr class="memdesc:ad380b94f5453836050b584fb5caf47ae"><td class="mdescLeft">&#160;</td><td class="mdescRight">Computes smooth (averaged) normals for each vertex. Requires that face normals are computed.  <br /></td></tr>
<tr class="separator:ad380b94f5453836050b584fb5caf47ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9fccee9b3fa68fffd9351830c579afe4" id="r_a9fccee9b3fa68fffd9351830c579afe4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d5c/classez_geometry.htm#a9fccee9b3fa68fffd9351830c579afe4">ComputeTangents</a> ()</td></tr>
<tr class="memdesc:a9fccee9b3fa68fffd9351830c579afe4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Computes tangents. This function can increase or reduce vertex count.  <br /></td></tr>
<tr class="separator:a9fccee9b3fa68fffd9351830c579afe4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6a99c30766c2cca07be918a6bdc4c11e" id="r_a6a99c30766c2cca07be918a6bdc4c11e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d5c/classez_geometry.htm#a6a99c30766c2cca07be918a6bdc4c11e">ValidateTangents</a> (float fEpsilon=0.01f)</td></tr>
<tr class="memdesc:a6a99c30766c2cca07be918a6bdc4c11e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether present tangents are meaningful and resets them, if necessary.  <br /></td></tr>
<tr class="separator:a6a99c30766c2cca07be918a6bdc4c11e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a959ff223ed78e1b06ac796f4bf214e0c" id="r_a959ff223ed78e1b06ac796f4bf214e0c"><td class="memItemLeft" align="right" valign="top"><a id="a959ff223ed78e1b06ac796f4bf214e0c" name="a959ff223ed78e1b06ac796f4bf214e0c"></a>
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>CalculateTriangleCount</b> () const</td></tr>
<tr class="memdesc:a959ff223ed78e1b06ac796f4bf214e0c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of triangles that the polygons are made up of. <br /></td></tr>
<tr class="separator:a959ff223ed78e1b06ac796f4bf214e0c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29ae0eec9430bd7e77f22cb68a504710" id="r_a29ae0eec9430bd7e77f22cb68a504710"><td class="memItemLeft" align="right" valign="top"><a id="a29ae0eec9430bd7e77f22cb68a504710" name="a29ae0eec9430bd7e77f22cb68a504710"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetAllVertexBoneIndices</b> (const <a class="el" href="../../da/dd2/classez_vec4_template.htm">ezVec4U16</a> &amp;vBoneIndices, ezUInt32 uiFirstVertex=0)</td></tr>
<tr class="memdesc:a29ae0eec9430bd7e77f22cb68a504710"><td class="mdescLeft">&#160;</td><td class="mdescRight">Changes the bone indices for all vertices (starting at vertex <em>uiFirstVertex</em>). <br /></td></tr>
<tr class="separator:a29ae0eec9430bd7e77f22cb68a504710"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a41ac4e4df652bdd107fe6599c0dca55b" id="r_a41ac4e4df652bdd107fe6599c0dca55b"><td class="memItemLeft" align="right" valign="top"><a id="a41ac4e4df652bdd107fe6599c0dca55b" name="a41ac4e4df652bdd107fe6599c0dca55b"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetAllVertexColor</b> (const <a class="el" href="../../dd/d01/classez_color.htm">ezColor</a> &amp;color, ezUInt32 uiFirstVertex=0)</td></tr>
<tr class="memdesc:a41ac4e4df652bdd107fe6599c0dca55b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Changes the color for all vertices (starting at vertex <em>uiFirstVertex</em>). <br /></td></tr>
<tr class="separator:a41ac4e4df652bdd107fe6599c0dca55b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6eafbacb7d126ffc4a50153645b7ee6a" id="r_a6eafbacb7d126ffc4a50153645b7ee6a"><td class="memItemLeft" align="right" valign="top"><a id="a6eafbacb7d126ffc4a50153645b7ee6a" name="a6eafbacb7d126ffc4a50153645b7ee6a"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetAllVertexTexCoord</b> (const <a class="el" href="../../d1/df8/classez_vec2_template.htm">ezVec2</a> &amp;vTexCoord, ezUInt32 uiFirstVertex=0)</td></tr>
<tr class="memdesc:a6eafbacb7d126ffc4a50153645b7ee6a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Changes the texture coordinates for all vertices (starting at vertex <em>uiFirstVertex</em>). <br /></td></tr>
<tr class="separator:a6eafbacb7d126ffc4a50153645b7ee6a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab2324c51ae22a060fae8b15bc1205805" id="r_ab2324c51ae22a060fae8b15bc1205805"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d5c/classez_geometry.htm#ab2324c51ae22a060fae8b15bc1205805">Transform</a> (const <a class="el" href="../../d7/d9b/classez_mat4_template.htm">ezMat4</a> &amp;mTransform, bool bTransformPolyNormals)</td></tr>
<tr class="memdesc:ab2324c51ae22a060fae8b15bc1205805"><td class="mdescLeft">&#160;</td><td class="mdescRight">Transforms all vertices by the given transform.  <br /></td></tr>
<tr class="separator:ab2324c51ae22a060fae8b15bc1205805"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a023ee683bed8154a51f0228ef05b5b4e" id="r_a023ee683bed8154a51f0228ef05b5b4e"><td class="memItemLeft" align="right" valign="top"><a id="a023ee683bed8154a51f0228ef05b5b4e" name="a023ee683bed8154a51f0228ef05b5b4e"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Merge</b> (const <a class="el" href="../../d1/d5c/classez_geometry.htm">ezGeometry</a> &amp;other)</td></tr>
<tr class="memdesc:a023ee683bed8154a51f0228ef05b5b4e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Merges the given mesh into this one. Use this to composite multiple shapes into one. <br /></td></tr>
<tr class="separator:a023ee683bed8154a51f0228ef05b5b4e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1d304635959716127da151f0c84f9c3" id="r_ac1d304635959716127da151f0c84f9c3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d5c/classez_geometry.htm#ac1d304635959716127da151f0c84f9c3">AddRect</a> (const <a class="el" href="../../d1/df8/classez_vec2_template.htm">ezVec2</a> &amp;vSize, ezUInt32 uiTesselationX=1, ezUInt32 uiTesselationY=1, const <a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a> &amp;options=<a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a>())</td></tr>
<tr class="memdesc:ac1d304635959716127da151f0c84f9c3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a rectangle shape, with the front pointing into the main axis direction.  <br /></td></tr>
<tr class="separator:ac1d304635959716127da151f0c84f9c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae97565d5c5b44ae22d7c20fc21fde16f" id="r_ae97565d5c5b44ae22d7c20fc21fde16f"><td class="memItemLeft" align="right" valign="top"><a id="ae97565d5c5b44ae22d7c20fc21fde16f" name="ae97565d5c5b44ae22d7c20fc21fde16f"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>AddBox</b> (const <a class="el" href="../../da/df1/classez_vec3_template.htm">ezVec3</a> &amp;vFullExtents, bool bExtraVerticesForTexturing, const <a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a> &amp;options=<a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a>())</td></tr>
<tr class="memdesc:ae97565d5c5b44ae22d7c20fc21fde16f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a box. If bExtraVerticesForTexturing is false, 8 shared vertices are added. If bExtraVerticesForTexturing is true, 24 separate vertices with UV coordinates are added. <br /></td></tr>
<tr class="separator:ae97565d5c5b44ae22d7c20fc21fde16f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab940f03c54c0f122f2c040f7ee916020" id="r_ab940f03c54c0f122f2c040f7ee916020"><td class="memItemLeft" align="right" valign="top"><a id="ab940f03c54c0f122f2c040f7ee916020" name="ab940f03c54c0f122f2c040f7ee916020"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>AddLineBox</b> (const <a class="el" href="../../da/df1/classez_vec3_template.htm">ezVec3</a> &amp;vSize, const <a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a> &amp;options=<a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a>())</td></tr>
<tr class="memdesc:ab940f03c54c0f122f2c040f7ee916020"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds box out of lines (8 vertices). <br /></td></tr>
<tr class="separator:ab940f03c54c0f122f2c040f7ee916020"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7276de5e585b8014e9bff3ce21357264" id="r_a7276de5e585b8014e9bff3ce21357264"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d5c/classez_geometry.htm#a7276de5e585b8014e9bff3ce21357264">AddLineBoxCorners</a> (const <a class="el" href="../../da/df1/classez_vec3_template.htm">ezVec3</a> &amp;vSize, float fCornerFraction, const <a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a> &amp;options=<a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a>())</td></tr>
<tr class="memdesc:a7276de5e585b8014e9bff3ce21357264"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds the 8 corners of a box as lines.  <br /></td></tr>
<tr class="separator:a7276de5e585b8014e9bff3ce21357264"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f8fc4e0d97de1f4f33e54d6c45b734f" id="r_a8f8fc4e0d97de1f4f33e54d6c45b734f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d5c/classez_geometry.htm#a8f8fc4e0d97de1f4f33e54d6c45b734f">AddPyramid</a> (float fBaseSize, float fHeight, bool bCap, const <a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a> &amp;options=<a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a>())</td></tr>
<tr class="memdesc:a8f8fc4e0d97de1f4f33e54d6c45b734f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a pyramid. This is different to a low-res cone in that the corners are placed differently (like on a box).  <br /></td></tr>
<tr class="separator:a8f8fc4e0d97de1f4f33e54d6c45b734f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e02c94105a2f5f790917e8675466556" id="r_a9e02c94105a2f5f790917e8675466556"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d5c/classez_geometry.htm#a9e02c94105a2f5f790917e8675466556">AddGeodesicSphere</a> (float fRadius, ezUInt8 uiSubDivisions, const <a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a> &amp;options=<a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a>())</td></tr>
<tr class="memdesc:a9e02c94105a2f5f790917e8675466556"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a geodesic sphere at the origin.  <br /></td></tr>
<tr class="separator:a9e02c94105a2f5f790917e8675466556"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abbaa598eb7a91521cf8c79e0458e9470" id="r_abbaa598eb7a91521cf8c79e0458e9470"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d5c/classez_geometry.htm#abbaa598eb7a91521cf8c79e0458e9470">AddCylinder</a> (float fRadiusTop, float fRadiusBottom, float fPositiveLength, float fNegativeLength, bool bCapTop, bool bCapBottom, ezUInt16 uiSegments, const <a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a> &amp;options=<a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a>(), <a class="el" href="../../db/d6f/classez_angle.htm">ezAngle</a> fraction=<a class="el" href="../../db/d6f/classez_angle.htm#a6e6aec7948f52b69936a9074eca179fa">ezAngle::MakeFromDegree</a>(360.0f))</td></tr>
<tr class="memdesc:abbaa598eb7a91521cf8c79e0458e9470"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a cylinder revolving around the main axis (see <a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm" title="Options shared among all geometry creation functions.">GeoOptions</a>).  <br /></td></tr>
<tr class="separator:abbaa598eb7a91521cf8c79e0458e9470"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adb4ab381476f3b63b4b07a76826ab3d9" id="r_adb4ab381476f3b63b4b07a76826ab3d9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d5c/classez_geometry.htm#adb4ab381476f3b63b4b07a76826ab3d9">AddCylinderOnePiece</a> (float fRadiusTop, float fRadiusBottom, float fPositiveLength, float fNegativeLength, ezUInt16 uiSegments, const <a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a> &amp;options=<a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a>())</td></tr>
<tr class="memdesc:adb4ab381476f3b63b4b07a76826ab3d9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as <a class="el" href="../../d1/d5c/classez_geometry.htm#abbaa598eb7a91521cf8c79e0458e9470" title="Adds a cylinder revolving around the main axis (see GeoOptions).">AddCylinder()</a>, but always adds caps and does not generate separate vertices for the caps.  <br /></td></tr>
<tr class="separator:adb4ab381476f3b63b4b07a76826ab3d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa04c2c74977962d28f0822c4e0588b58" id="r_aa04c2c74977962d28f0822c4e0588b58"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d5c/classez_geometry.htm#aa04c2c74977962d28f0822c4e0588b58">AddCone</a> (float fRadius, float fHeight, bool bCap, ezUInt16 uiSegments, const <a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a> &amp;options=<a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a>())</td></tr>
<tr class="memdesc:aa04c2c74977962d28f0822c4e0588b58"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a cone with the origin at the center of the bottom and the tip pointing into the direction of the main axis (see <a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm" title="Options shared among all geometry creation functions.">GeoOptions</a>).  <br /></td></tr>
<tr class="separator:aa04c2c74977962d28f0822c4e0588b58"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd6009da061c9a31b84815805a9584cf" id="r_abd6009da061c9a31b84815805a9584cf"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d5c/classez_geometry.htm#abd6009da061c9a31b84815805a9584cf">AddStackedSphere</a> (float fRadius, ezUInt16 uiSegments, ezUInt16 uiStacks, const <a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a> &amp;options=<a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a>())</td></tr>
<tr class="memdesc:abd6009da061c9a31b84815805a9584cf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a sphere consisting of a number of stacks along the main axis (see <a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm" title="Options shared among all geometry creation functions.">GeoOptions</a>) with a fixed tessellation.  <br /></td></tr>
<tr class="separator:abd6009da061c9a31b84815805a9584cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e44e7c9dae5b0991459782e9069a54c" id="r_a5e44e7c9dae5b0991459782e9069a54c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d5c/classez_geometry.htm#a5e44e7c9dae5b0991459782e9069a54c">AddHalfSphere</a> (float fRadius, ezUInt16 uiSegments, ezUInt16 uiStacks, bool bCap, const <a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a> &amp;options=<a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a>())</td></tr>
<tr class="memdesc:a5e44e7c9dae5b0991459782e9069a54c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds half a stacked sphere with the half being in the direction of the main axis (see <a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm" title="Options shared among all geometry creation functions.">GeoOptions</a>).  <br /></td></tr>
<tr class="separator:a5e44e7c9dae5b0991459782e9069a54c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a614c1d02a4175afdc9104b740d41e481" id="r_a614c1d02a4175afdc9104b740d41e481"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d5c/classez_geometry.htm#a614c1d02a4175afdc9104b740d41e481">AddCapsule</a> (float fRadius, float fHeight, ezUInt16 uiSegments, ezUInt16 uiStacks, const <a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a> &amp;options=<a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a>())</td></tr>
<tr class="memdesc:a614c1d02a4175afdc9104b740d41e481"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a capsule, revolving around the main axis (see <a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm" title="Options shared among all geometry creation functions.">GeoOptions</a>).  <br /></td></tr>
<tr class="separator:a614c1d02a4175afdc9104b740d41e481"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac8c46bdb0f65b18ced2ffd58f0822b30" id="r_ac8c46bdb0f65b18ced2ffd58f0822b30"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d5c/classez_geometry.htm#ac8c46bdb0f65b18ced2ffd58f0822b30">AddTorus</a> (float fInnerRadius, float fOuterRadius, ezUInt16 uiSegments, ezUInt16 uiSegmentDetail, bool bExtraVerticesForTexturing, const <a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a> &amp;options=<a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a>())</td></tr>
<tr class="memdesc:ac8c46bdb0f65b18ced2ffd58f0822b30"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a full torus with the ring revolving around the main axis (see <a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm" title="Options shared among all geometry creation functions.">GeoOptions</a>).  <br /></td></tr>
<tr class="separator:ac8c46bdb0f65b18ced2ffd58f0822b30"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad21de4ae2abe0c1fedfd3b44af900b57" id="r_ad21de4ae2abe0c1fedfd3b44af900b57"><td class="memItemLeft" align="right" valign="top"><a id="ad21de4ae2abe0c1fedfd3b44af900b57" name="ad21de4ae2abe0c1fedfd3b44af900b57"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>AddTexturedRamp</b> (const <a class="el" href="../../da/df1/classez_vec3_template.htm">ezVec3</a> &amp;vSize, const <a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a> &amp;options=<a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a>())</td></tr>
<tr class="memdesc:ad21de4ae2abe0c1fedfd3b44af900b57"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds a ramp that has UV coordinates set. <br /></td></tr>
<tr class="separator:ad21de4ae2abe0c1fedfd3b44af900b57"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acac067d93371eabcb9f803500d21b702" id="r_acac067d93371eabcb9f803500d21b702"><td class="memItemLeft" align="right" valign="top"><a id="acac067d93371eabcb9f803500d21b702" name="acac067d93371eabcb9f803500d21b702"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>AddStairs</b> (const <a class="el" href="../../da/df1/classez_vec3_template.htm">ezVec3</a> &amp;vSize, ezUInt32 uiNumSteps, <a class="el" href="../../db/d6f/classez_angle.htm">ezAngle</a> curvature, bool bSmoothSloped, const <a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a> &amp;options=<a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a>())</td></tr>
<tr class="memdesc:acac067d93371eabcb9f803500d21b702"><td class="mdescLeft">&#160;</td><td class="mdescRight">Generates a straight stair mesh along the X axis. The number of steps determines the step height and depth. <br /></td></tr>
<tr class="separator:acac067d93371eabcb9f803500d21b702"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0aba93c24632c02014aa089776952dfb" id="r_a0aba93c24632c02014aa089776952dfb"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d1/d5c/classez_geometry.htm#a0aba93c24632c02014aa089776952dfb">AddArch</a> (const <a class="el" href="../../da/df1/classez_vec3_template.htm">ezVec3</a> &amp;vSize, ezUInt32 uiNumSegments, float fThickness, <a class="el" href="../../db/d6f/classez_angle.htm">ezAngle</a> angle, bool bMakeSteps, bool bSmoothBottom, bool bSmoothTop, bool bCapTopAndBottom, const <a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a> &amp;options=<a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a>())</td></tr>
<tr class="memdesc:a0aba93c24632c02014aa089776952dfb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates and arch, pipe or spiral stairs within the defined volume (size) curving around the main axis.  <br /></td></tr>
<tr class="separator:a0aba93c24632c02014aa089776952dfb"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Provides functions to generate standard geometric shapes, such as boxes, spheres, cylinders, etc. </p>
<p>This class provides simple functions to create frequently used basic shapes. It allows to transform the shapes, merge them into a single mesh, compute normals, etc. It is meant for debug and editor geometry (gizmos, etc.). Vertices can have position, normal, color and 'shape index'. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a0aba93c24632c02014aa089776952dfb" name="a0aba93c24632c02014aa089776952dfb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0aba93c24632c02014aa089776952dfb">&#9670;&#160;</a></span>AddArch()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ezGeometry::AddArch </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../da/df1/classez_vec3_template.htm">ezVec3</a> &amp;&#160;</td>
          <td class="paramname"><em>vSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ezUInt32&#160;</td>
          <td class="paramname"><em>uiNumSegments</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fThickness</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../db/d6f/classez_angle.htm">ezAngle</a>&#160;</td>
          <td class="paramname"><em>angle</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bMakeSteps</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bSmoothBottom</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bSmoothTop</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bCapTopAndBottom</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a> &amp;&#160;</td>
          <td class="paramname"><em>options</em> = <code><a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Creates and arch, pipe or spiral stairs within the defined volume (size) curving around the main axis. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">uiNumSegments</td><td>The number of segments of the arch or pipe, or the number of steps in spiral stairs. </td></tr>
    <tr><td class="paramname">fThickness</td><td>The wall thickness of the pipe, or the width of steps. </td></tr>
    <tr><td class="paramname">angle</td><td>How far to curl around the main axis. Values between -360 degree and +360 degree are possible. 0 degree is treated like 360 degree. </td></tr>
    <tr><td class="paramname">bMakeSteps</td><td>If true, segments are only thin and are offset in position from the previous one. </td></tr>
    <tr><td class="paramname">bSmoothBottom,bSmoothTop</td><td>If true and bMakeSteps as well, the segments will have a step, but connect smoothly, like in a spiral. </td></tr>
    <tr><td class="paramname">bCapTopAndBottom</td><td>If false, the top and bottom geometry is skipped. Can be used to reduce detail in pipe geometry that connects with something else anyway. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a614c1d02a4175afdc9104b740d41e481" name="a614c1d02a4175afdc9104b740d41e481"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a614c1d02a4175afdc9104b740d41e481">&#9670;&#160;</a></span>AddCapsule()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ezGeometry::AddCapsule </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fRadius</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fHeight</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ezUInt16&#160;</td>
          <td class="paramname"><em>uiSegments</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ezUInt16&#160;</td>
          <td class="paramname"><em>uiStacks</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a> &amp;&#160;</td>
          <td class="paramname"><em>options</em> = <code><a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds a capsule, revolving around the main axis (see <a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm" title="Options shared among all geometry creation functions.">GeoOptions</a>). </p>
<p>The origin is at the center of the capsule. Radius and height are added to get the total height of the capsule. uiSegments is the detail around the up axis, must be at least 3. uiStacks is the detail of the rounded top and bottom, must be at least 1. </p>

</div>
</div>
<a id="aa04c2c74977962d28f0822c4e0588b58" name="aa04c2c74977962d28f0822c4e0588b58"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa04c2c74977962d28f0822c4e0588b58">&#9670;&#160;</a></span>AddCone()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ezGeometry::AddCone </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fRadius</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fHeight</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bCap</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ezUInt16&#160;</td>
          <td class="paramname"><em>uiSegments</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a> &amp;&#160;</td>
          <td class="paramname"><em>options</em> = <code><a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds a cone with the origin at the center of the bottom and the tip pointing into the direction of the main axis (see <a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm" title="Options shared among all geometry creation functions.">GeoOptions</a>). </p>
<p>uiSegments is the detail around the up axis, must be at least 3. </p>

</div>
</div>
<a id="abbaa598eb7a91521cf8c79e0458e9470" name="abbaa598eb7a91521cf8c79e0458e9470"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abbaa598eb7a91521cf8c79e0458e9470">&#9670;&#160;</a></span>AddCylinder()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ezGeometry::AddCylinder </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fRadiusTop</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fRadiusBottom</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fPositiveLength</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fNegativeLength</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bCapTop</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bCapBottom</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ezUInt16&#160;</td>
          <td class="paramname"><em>uiSegments</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a> &amp;&#160;</td>
          <td class="paramname"><em>options</em> = <code><a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a>()</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../db/d6f/classez_angle.htm">ezAngle</a>&#160;</td>
          <td class="paramname"><em>fraction</em> = <code><a class="el" href="../../db/d6f/classez_angle.htm#a6e6aec7948f52b69936a9074eca179fa">ezAngle::MakeFromDegree</a>(360.0f)</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds a cylinder revolving around the main axis (see <a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm" title="Options shared among all geometry creation functions.">GeoOptions</a>). </p>
<p>If fPositiveLength == fNegativeLength, the origin is at the center. If fNegativeLength is zero, the origin is at the bottom and so on.</p>
<p>uiSegments is the detail around the up axis, must be at least 3. The top or bottom caps can be removed using <em>bCapTop</em> and <em>bCapBottom</em>. When <em>fraction</em> is set to any value below 360 degree, a pie / PacMan-shaped cylinder is created. </p>

</div>
</div>
<a id="adb4ab381476f3b63b4b07a76826ab3d9" name="adb4ab381476f3b63b4b07a76826ab3d9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adb4ab381476f3b63b4b07a76826ab3d9">&#9670;&#160;</a></span>AddCylinderOnePiece()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ezGeometry::AddCylinderOnePiece </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fRadiusTop</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fRadiusBottom</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fPositiveLength</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fNegativeLength</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ezUInt16&#160;</td>
          <td class="paramname"><em>uiSegments</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a> &amp;&#160;</td>
          <td class="paramname"><em>options</em> = <code><a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Same as <a class="el" href="../../d1/d5c/classez_geometry.htm#abbaa598eb7a91521cf8c79e0458e9470" title="Adds a cylinder revolving around the main axis (see GeoOptions).">AddCylinder()</a>, but always adds caps and does not generate separate vertices for the caps. </p>
<p>This is a more compact representation, but does not allow as good texturing. </p>

</div>
</div>
<a id="a9e02c94105a2f5f790917e8675466556" name="a9e02c94105a2f5f790917e8675466556"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9e02c94105a2f5f790917e8675466556">&#9670;&#160;</a></span>AddGeodesicSphere()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ezGeometry::AddGeodesicSphere </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fRadius</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ezUInt8&#160;</td>
          <td class="paramname"><em>uiSubDivisions</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a> &amp;&#160;</td>
          <td class="paramname"><em>options</em> = <code><a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds a geodesic sphere at the origin. </p>
<p>When uiSubDivisions is zero, the sphere will have 20 triangles.<br  />
For each subdivision step the number of triangles quadruples.<br  />
0 = 20 triangles, 12 vertices<br  />
1 = 80 triangles, 42 vertices<br  />
2 = 320 triangles, 162 vertices<br  />
3 = 1280 triangles, 642 vertices<br  />
4 = 5120 triangles, 2562 vertices<br  />
...<br  />
 </p>

</div>
</div>
<a id="a5e44e7c9dae5b0991459782e9069a54c" name="a5e44e7c9dae5b0991459782e9069a54c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5e44e7c9dae5b0991459782e9069a54c">&#9670;&#160;</a></span>AddHalfSphere()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ezGeometry::AddHalfSphere </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fRadius</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ezUInt16&#160;</td>
          <td class="paramname"><em>uiSegments</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ezUInt16&#160;</td>
          <td class="paramname"><em>uiStacks</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bCap</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a> &amp;&#160;</td>
          <td class="paramname"><em>options</em> = <code><a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds half a stacked sphere with the half being in the direction of the main axis (see <a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm" title="Options shared among all geometry creation functions.">GeoOptions</a>). </p>
<p>The origin is at the 'full sphere center', ie. at the center of the cap. uiSegments is the detail around the up axis, must be at least 3. uiStacks is the detail of the rounded top and bottom, must be at least 1. </p>

</div>
</div>
<a id="a7276de5e585b8014e9bff3ce21357264" name="a7276de5e585b8014e9bff3ce21357264"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7276de5e585b8014e9bff3ce21357264">&#9670;&#160;</a></span>AddLineBoxCorners()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ezGeometry::AddLineBoxCorners </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../da/df1/classez_vec3_template.htm">ezVec3</a> &amp;&#160;</td>
          <td class="paramname"><em>vSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fCornerFraction</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a> &amp;&#160;</td>
          <td class="paramname"><em>options</em> = <code><a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds the 8 corners of a box as lines. </p>
<p>fCornerFraction must be between 1.0 and 0.0, with 1 making it a completely closed box and 0 no lines at all. </p>

</div>
</div>
<a id="a8f8fc4e0d97de1f4f33e54d6c45b734f" name="a8f8fc4e0d97de1f4f33e54d6c45b734f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8f8fc4e0d97de1f4f33e54d6c45b734f">&#9670;&#160;</a></span>AddPyramid()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ezGeometry::AddPyramid </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fBaseSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fHeight</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bCap</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a> &amp;&#160;</td>
          <td class="paramname"><em>options</em> = <code><a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds a pyramid. This is different to a low-res cone in that the corners are placed differently (like on a box). </p>
<p>The origin is at the center of the base quad and the tip is in the direction of the main axis (see <a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm" title="Options shared among all geometry creation functions.">GeoOptions</a>). </p>

</div>
</div>
<a id="ac1d304635959716127da151f0c84f9c3" name="ac1d304635959716127da151f0c84f9c3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac1d304635959716127da151f0c84f9c3">&#9670;&#160;</a></span>AddRect()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ezGeometry::AddRect </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d1/df8/classez_vec2_template.htm">ezVec2</a> &amp;&#160;</td>
          <td class="paramname"><em>vSize</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ezUInt32&#160;</td>
          <td class="paramname"><em>uiTesselationX</em> = <code>1</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ezUInt32&#160;</td>
          <td class="paramname"><em>uiTesselationY</em> = <code>1</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a> &amp;&#160;</td>
          <td class="paramname"><em>options</em> = <code><a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds a rectangle shape, with the front pointing into the main axis direction. </p>
<p>It is centered at the origin, extending half size.x and half size.y into direction +X, -X, +Y and -Y. Optionally tessellates the rectangle for more detail. </p>

</div>
</div>
<a id="abd6009da061c9a31b84815805a9584cf" name="abd6009da061c9a31b84815805a9584cf"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abd6009da061c9a31b84815805a9584cf">&#9670;&#160;</a></span>AddStackedSphere()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ezGeometry::AddStackedSphere </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fRadius</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ezUInt16&#160;</td>
          <td class="paramname"><em>uiSegments</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ezUInt16&#160;</td>
          <td class="paramname"><em>uiStacks</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a> &amp;&#160;</td>
          <td class="paramname"><em>options</em> = <code><a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds a sphere consisting of a number of stacks along the main axis (see <a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm" title="Options shared among all geometry creation functions.">GeoOptions</a>) with a fixed tessellation. </p>
<p>uiSegments is the detail around the up axis, must be at least 3. uiStacks is the detail along the up axis, must be at least 2. </p>

</div>
</div>
<a id="ac8c46bdb0f65b18ced2ffd58f0822b30" name="ac8c46bdb0f65b18ced2ffd58f0822b30"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac8c46bdb0f65b18ced2ffd58f0822b30">&#9670;&#160;</a></span>AddTorus()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ezGeometry::AddTorus </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fInnerRadius</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fOuterRadius</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ezUInt16&#160;</td>
          <td class="paramname"><em>uiSegments</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ezUInt16&#160;</td>
          <td class="paramname"><em>uiSegmentDetail</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bExtraVerticesForTexturing</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a> &amp;&#160;</td>
          <td class="paramname"><em>options</em> = <code><a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm">GeoOptions</a>()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Adds a full torus with the ring revolving around the main axis (see <a class="el" href="../../d3/da0/structez_geometry_1_1_geo_options.htm" title="Options shared among all geometry creation functions.">GeoOptions</a>). </p>
<p>The origin is at the center of the torus. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">fInnerRadius</td><td>is the radius from the center to where the torus ring starts. </td></tr>
    <tr><td class="paramname">fOuterRadius</td><td>is the radius to where the torus ring stops. </td></tr>
    <tr><td class="paramname">uiSegments</td><td>is the detail around the main axis. </td></tr>
    <tr><td class="paramname">uiSegmentDetail</td><td>is the number of segments around the torus ring (ie. the cylinder detail) </td></tr>
    <tr><td class="paramname">bExtraVerticesForTexturing</td><td>specifies whether the torus should be one closed piece or have additional vertices at the seams, such that texturing works better. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ad380b94f5453836050b584fb5caf47ae" name="ad380b94f5453836050b584fb5caf47ae"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad380b94f5453836050b584fb5caf47ae">&#9670;&#160;</a></span>ComputeSmoothVertexNormals()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ezGeometry::ComputeSmoothVertexNormals </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Computes smooth (averaged) normals for each vertex. Requires that face normals are computed. </p>
<p>This only yields smooth normals for vertices that are shared among multiple polygons, otherwise a vertex will have the same normal as the one face that it is used in. </p>

</div>
</div>
<a id="a9fccee9b3fa68fffd9351830c579afe4" name="a9fccee9b3fa68fffd9351830c579afe4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9fccee9b3fa68fffd9351830c579afe4">&#9670;&#160;</a></span>ComputeTangents()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ezGeometry::ComputeTangents </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Computes tangents. This function can increase or reduce vertex count. </p>
<p>The tangent generation is done by Morten S. Mikkelsen's tangent space generation code. </p>

</div>
</div>
<a id="ab2324c51ae22a060fae8b15bc1205805" name="ab2324c51ae22a060fae8b15bc1205805"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab2324c51ae22a060fae8b15bc1205805">&#9670;&#160;</a></span>Transform()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ezGeometry::Transform </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d7/d9b/classez_mat4_template.htm">ezMat4</a> &amp;&#160;</td>
          <td class="paramname"><em>mTransform</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bTransformPolyNormals</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Transforms all vertices by the given transform. </p>
<p>When <em>bTransformPolyNormals</em> is true, the polygon normals are transformed, as well. Set this to false when face normals are going to be computed later anyway. </p>

</div>
</div>
<a id="a353a17ad9eaa17d17cc69d4254afb5b3" name="a353a17ad9eaa17d17cc69d4254afb5b3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a353a17ad9eaa17d17cc69d4254afb5b3">&#9670;&#160;</a></span>TriangulatePolygons()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ezGeometry::TriangulatePolygons </td>
          <td>(</td>
          <td class="paramtype">ezUInt32&#160;</td>
          <td class="paramname"><em>uiMaxVerticesInPolygon</em> = <code>3</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Triangulates all polygons that have more than <em>uiMaxVerticesInPolygon</em> vertices. </p>
<p>Set <em>uiMaxVerticesInPolygon</em> to 4, if you want to keep quads unchanged. </p>

</div>
</div>
<a id="a6a99c30766c2cca07be918a6bdc4c11e" name="a6a99c30766c2cca07be918a6bdc4c11e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6a99c30766c2cca07be918a6bdc4c11e">&#9670;&#160;</a></span>ValidateTangents()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ezGeometry::ValidateTangents </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fEpsilon</em> = <code>0.01f</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Checks whether present tangents are meaningful and resets them, if necessary. </p>
<p>Checks if the tangents are approximately orthogonal to the vertex normal and of unit length. If this is not the case the respective tangent will be zeroed. The caller can provide a comparison epsilon. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Core/Graphics/<a class="el" href="../../d1/d4e/_geometry_8h_source.htm">Geometry.h</a></li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Core/Graphics/Implementation/<b>Geometry.cpp</b></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d1/d5c/classez_geometry.htm">ezGeometry</a></li>
    <li class="footer">Generated on Fri Jul 11 2025 12:17:58 for ezEngine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
