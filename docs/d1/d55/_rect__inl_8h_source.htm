<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Math/Implementation/Rect_inl.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 25.03</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d1/d55/_rect__inl_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Rect_inl.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;EZ_ALWAYS_INLINE <a class="code" href="../../de/dd8/classez_rect_template.htm#a6c82888d3d2defd71dcbb54d0bcc5afd">ezRectTemplate&lt;Type&gt;::ezRectTemplate</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160; </div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00007"></a><span class="lineno"><a class="line" href="../../de/dd8/classez_rect_template.htm#ad703984a4d4eaefba3aae8a516efd94f">    7</a></span>&#160;EZ_ALWAYS_INLINE <a class="code" href="../../de/dd8/classez_rect_template.htm#a6c82888d3d2defd71dcbb54d0bcc5afd">ezRectTemplate&lt;Type&gt;::ezRectTemplate</a>(Type x, Type y, Type width, Type height)</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;  : x(x)</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;  , y(y)</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;  , width(width)</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;  , height(height)</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;{</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;}</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160; </div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00016"></a><span class="lineno"><a class="line" href="../../de/dd8/classez_rect_template.htm#ad26bb49aee90882539cc46d098b3b6d2">   16</a></span>&#160;EZ_ALWAYS_INLINE <a class="code" href="../../de/dd8/classez_rect_template.htm#a6c82888d3d2defd71dcbb54d0bcc5afd">ezRectTemplate&lt;Type&gt;::ezRectTemplate</a>(Type width, Type height)</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;  : x(0)</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;  , y(0)</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;  , width(width)</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;  , height(height)</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;{</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;}</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160; </div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00025"></a><span class="lineno"><a class="line" href="../../de/dd8/classez_rect_template.htm#a91579987daf22503e8c6c08da0eed924">   25</a></span>&#160;EZ_ALWAYS_INLINE <a class="code" href="../../de/dd8/classez_rect_template.htm#a6c82888d3d2defd71dcbb54d0bcc5afd">ezRectTemplate&lt;Type&gt;::ezRectTemplate</a>(<span class="keyword">const</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; vTopLeftPosition, <span class="keyword">const</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; vSize)</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;{</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;  x = vTopLeftPosition.x;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  y = vTopLeftPosition.y;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;  width = vSize.x;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;  height = vSize.y;</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;}</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160; </div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00034"></a><span class="lineno"><a class="line" href="../../de/dd8/classez_rect_template.htm#a492257b50d3618b37e6d5795a47d3a39">   34</a></span>&#160;<a class="code" href="../../de/dd8/classez_rect_template.htm">ezRectTemplate&lt;Type&gt;</a> <a class="code" href="../../de/dd8/classez_rect_template.htm#a492257b50d3618b37e6d5795a47d3a39">ezRectTemplate&lt;Type&gt;::MakeInvalid</a>()</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;{</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160; </div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  <a class="code" href="../../de/dd8/classez_rect_template.htm">ezRectTemplate&lt;Type&gt;</a> res;</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160; </div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  <span class="keyword">const</span> Type fLargeValue = ezMath::MaxValue&lt;Type&gt;() / 2;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  res.x = fLargeValue;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;  res.y = fLargeValue;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  res.width = -fLargeValue;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  res.height = -fLargeValue;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160; </div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;  <span class="keywordflow">return</span> res;</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;}</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160; </div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00050"></a><span class="lineno"><a class="line" href="../../de/dd8/classez_rect_template.htm#ae71a33c93f89f6bbc4a1c7f8e73ad563">   50</a></span>&#160;<a class="code" href="../../de/dd8/classez_rect_template.htm">ezRectTemplate&lt;Type&gt;</a> <a class="code" href="../../de/dd8/classez_rect_template.htm#ae71a33c93f89f6bbc4a1c7f8e73ad563">ezRectTemplate&lt;Type&gt;::MakeZero</a>()</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;{</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../de/dd8/classez_rect_template.htm">ezRectTemplate&lt;Type&gt;</a>(0, 0, 0, 0);</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;}</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160; </div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="../../de/dd8/classez_rect_template.htm#a3aa719a4cc5c663fb762ff755f1ec013">   56</a></span>&#160;<a class="code" href="../../de/dd8/classez_rect_template.htm">ezRectTemplate&lt;Type&gt;</a> <a class="code" href="../../de/dd8/classez_rect_template.htm#a3aa719a4cc5c663fb762ff755f1ec013">ezRectTemplate&lt;Type&gt;::MakeIntersection</a>(<span class="keyword">const</span> <a class="code" href="../../de/dd8/classez_rect_template.htm">ezRectTemplate&lt;Type&gt;</a>&amp; r0, <span class="keyword">const</span> <a class="code" href="../../de/dd8/classez_rect_template.htm">ezRectTemplate&lt;Type&gt;</a>&amp; r1)</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;{</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160; </div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;  <a class="code" href="../../de/dd8/classez_rect_template.htm">ezRectTemplate&lt;Type&gt;</a> res;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160; </div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;  Type x1 = <a class="code" href="../../db/d78/namespaceez_math.htm#a6f7ee19d0f8e81ff6ae5f394075e3a56">ezMath::Max</a>(r0.<a class="code" href="../../de/dd8/classez_rect_template.htm#a99c776183232f14e5d6589b2f1a980b3">GetX1</a>(), r1.<a class="code" href="../../de/dd8/classez_rect_template.htm#a99c776183232f14e5d6589b2f1a980b3">GetX1</a>());</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  Type y1 = <a class="code" href="../../db/d78/namespaceez_math.htm#a6f7ee19d0f8e81ff6ae5f394075e3a56">ezMath::Max</a>(r0.<a class="code" href="../../de/dd8/classez_rect_template.htm#a9bed0d898d6b0a49a50358bdf28070ec">GetY1</a>(), r1.<a class="code" href="../../de/dd8/classez_rect_template.htm#a9bed0d898d6b0a49a50358bdf28070ec">GetY1</a>());</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  Type x2 = <a class="code" href="../../db/d78/namespaceez_math.htm#ad8009b4da9cb427658d71e30576f209e">ezMath::Min</a>(r0.<a class="code" href="../../de/dd8/classez_rect_template.htm#a37783b0bb68f7669373c6f236b40d1ad">GetX2</a>(), r1.<a class="code" href="../../de/dd8/classez_rect_template.htm#a37783b0bb68f7669373c6f236b40d1ad">GetX2</a>());</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;  Type y2 = <a class="code" href="../../db/d78/namespaceez_math.htm#ad8009b4da9cb427658d71e30576f209e">ezMath::Min</a>(r0.<a class="code" href="../../de/dd8/classez_rect_template.htm#a8558fb988b43bffc5fa48abb43d05dc5">GetY2</a>(), r1.<a class="code" href="../../de/dd8/classez_rect_template.htm#a8558fb988b43bffc5fa48abb43d05dc5">GetY2</a>());</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160; </div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;  res.x = x1;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;  res.y = y1;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;  res.width = x2 - x1;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  res.height = y2 - y1;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160; </div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;  <span class="keywordflow">return</span> res;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;}</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160; </div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00076"></a><span class="lineno"><a class="line" href="../../de/dd8/classez_rect_template.htm#a6f2077b42d5d58cb5a0d1bfd26761a7e">   76</a></span>&#160;<a class="code" href="../../de/dd8/classez_rect_template.htm">ezRectTemplate&lt;Type&gt;</a> <a class="code" href="../../de/dd8/classez_rect_template.htm#a6f2077b42d5d58cb5a0d1bfd26761a7e">ezRectTemplate&lt;Type&gt;::MakeUnion</a>(<span class="keyword">const</span> <a class="code" href="../../de/dd8/classez_rect_template.htm">ezRectTemplate&lt;Type&gt;</a>&amp; r0, <span class="keyword">const</span> <a class="code" href="../../de/dd8/classez_rect_template.htm">ezRectTemplate&lt;Type&gt;</a>&amp; r1)</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;{</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160; </div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;  <a class="code" href="../../de/dd8/classez_rect_template.htm">ezRectTemplate&lt;Type&gt;</a> res;</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160; </div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;  Type x1 = <a class="code" href="../../db/d78/namespaceez_math.htm#ad8009b4da9cb427658d71e30576f209e">ezMath::Min</a>(r0.<a class="code" href="../../de/dd8/classez_rect_template.htm#a99c776183232f14e5d6589b2f1a980b3">GetX1</a>(), r1.<a class="code" href="../../de/dd8/classez_rect_template.htm#a99c776183232f14e5d6589b2f1a980b3">GetX1</a>());</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;  Type y1 = <a class="code" href="../../db/d78/namespaceez_math.htm#ad8009b4da9cb427658d71e30576f209e">ezMath::Min</a>(r0.<a class="code" href="../../de/dd8/classez_rect_template.htm#a9bed0d898d6b0a49a50358bdf28070ec">GetY1</a>(), r1.<a class="code" href="../../de/dd8/classez_rect_template.htm#a9bed0d898d6b0a49a50358bdf28070ec">GetY1</a>());</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;  Type x2 = <a class="code" href="../../db/d78/namespaceez_math.htm#a6f7ee19d0f8e81ff6ae5f394075e3a56">ezMath::Max</a>(r0.<a class="code" href="../../de/dd8/classez_rect_template.htm#a37783b0bb68f7669373c6f236b40d1ad">GetX2</a>(), r1.<a class="code" href="../../de/dd8/classez_rect_template.htm#a37783b0bb68f7669373c6f236b40d1ad">GetX2</a>());</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  Type y2 = <a class="code" href="../../db/d78/namespaceez_math.htm#a6f7ee19d0f8e81ff6ae5f394075e3a56">ezMath::Max</a>(r0.<a class="code" href="../../de/dd8/classez_rect_template.htm#a8558fb988b43bffc5fa48abb43d05dc5">GetY2</a>(), r1.<a class="code" href="../../de/dd8/classez_rect_template.htm#a8558fb988b43bffc5fa48abb43d05dc5">GetY2</a>());</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160; </div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;  res.x = x1;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;  res.y = y1;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;  res.width = x2 - x1;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;  res.height = y2 - y1;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160; </div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;  <span class="keywordflow">return</span> res;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;}</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160; </div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../de/dd8/classez_rect_template.htm">ezRectTemplate&lt;Type&gt;::operator==</a>(<span class="keyword">const</span> <a class="code" href="../../de/dd8/classez_rect_template.htm">ezRectTemplate&lt;Type&gt;</a>&amp; rhs)<span class="keyword"> const</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  <span class="keywordflow">return</span> x == rhs.x &amp;&amp; y == rhs.y &amp;&amp; width == rhs.width &amp;&amp; height == rhs.height;</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;}</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160; </div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../de/dd8/classez_rect_template.htm">ezRectTemplate&lt;Type&gt;::operator!=</a>(<span class="keyword">const</span> <a class="code" href="../../de/dd8/classez_rect_template.htm">ezRectTemplate&lt;Type&gt;</a>&amp; rhs)<span class="keyword"> const</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;  <span class="keywordflow">return</span> !(*<span class="keyword">this</span> == rhs);</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;}</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160; </div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00108"></a><span class="lineno"><a class="line" href="../../de/dd8/classez_rect_template.htm#ac58bd7146feb5f96ab75b5b894866778">  108</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../de/dd8/classez_rect_template.htm#ac58bd7146feb5f96ab75b5b894866778">ezRectTemplate&lt;Type&gt;::HasNonZeroArea</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;  <span class="keywordflow">return</span> (width &gt; 0) &amp;&amp; (height &gt; 0);</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;}</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160; </div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00114"></a><span class="lineno"><a class="line" href="../../de/dd8/classez_rect_template.htm#ae25196a53860c2c88f5642198ae6cd86">  114</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../de/dd8/classez_rect_template.htm#ae25196a53860c2c88f5642198ae6cd86">ezRectTemplate&lt;Type&gt;::Contains</a>(<span class="keyword">const</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; vPoint)<span class="keyword"> const</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;  <span class="keywordflow">if</span> (vPoint.x &gt;= x &amp;&amp; vPoint.x &lt;= Right())</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;  {</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="keywordflow">if</span> (vPoint.y &gt;= y &amp;&amp; vPoint.y &lt;= Bottom())</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;  }</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160; </div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;}</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160; </div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../de/dd8/classez_rect_template.htm#ae25196a53860c2c88f5642198ae6cd86">ezRectTemplate&lt;Type&gt;::Contains</a>(<span class="keyword">const</span> <a class="code" href="../../de/dd8/classez_rect_template.htm">ezRectTemplate&lt;Type&gt;</a>&amp; r)<span class="keyword"> const</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;  <span class="keywordflow">return</span> r.x &gt;= x &amp;&amp; r.y &gt;= y &amp;&amp; r.<a class="code" href="../../de/dd8/classez_rect_template.htm#a19229c0160ff9af312f85b4e8bd51178">Right</a>() &lt;= Right() &amp;&amp; r.<a class="code" href="../../de/dd8/classez_rect_template.htm#a5e438fa76acae89d8b3b6f55d683dfc7">Bottom</a>() &lt;= Bottom();</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;}</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160; </div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00132"></a><span class="lineno"><a class="line" href="../../de/dd8/classez_rect_template.htm#a0d1c7295bd20ccb5c4628a54533f93cb">  132</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../de/dd8/classez_rect_template.htm#a0d1c7295bd20ccb5c4628a54533f93cb">ezRectTemplate&lt;Type&gt;::Overlaps</a>(<span class="keyword">const</span> <a class="code" href="../../de/dd8/classez_rect_template.htm">ezRectTemplate&lt;Type&gt;</a>&amp; other)<span class="keyword"> const</span></div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;  <span class="keywordflow">if</span> (x &lt; other.<a class="code" href="../../de/dd8/classez_rect_template.htm#a19229c0160ff9af312f85b4e8bd51178">Right</a>() &amp;&amp; Right() &gt; other.x &amp;&amp; y &lt; other.<a class="code" href="../../de/dd8/classez_rect_template.htm#a5e438fa76acae89d8b3b6f55d683dfc7">Bottom</a>() &amp;&amp; Bottom() &gt; other.y)</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160; </div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;}</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160; </div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00141"></a><span class="lineno"><a class="line" href="../../de/dd8/classez_rect_template.htm#ad20e4b60e8304277f6b72465a665659f">  141</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../de/dd8/classez_rect_template.htm#ad20e4b60e8304277f6b72465a665659f">ezRectTemplate&lt;Type&gt;::ExpandToInclude</a>(<span class="keyword">const</span> <a class="code" href="../../de/dd8/classez_rect_template.htm">ezRectTemplate&lt;Type&gt;</a>&amp; other)</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;{</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  Type thisRight = Right();</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;  Type thisBottom = Bottom();</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160; </div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;  <span class="keywordflow">if</span> (other.x &lt; x)</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;    x = other.x;</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160; </div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;  <span class="keywordflow">if</span> (other.y &lt; y)</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    y = other.y;</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160; </div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;  <span class="keywordflow">if</span> (other.<a class="code" href="../../de/dd8/classez_rect_template.htm#a19229c0160ff9af312f85b4e8bd51178">Right</a>() &gt; thisRight)</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;    width = other.<a class="code" href="../../de/dd8/classez_rect_template.htm#a19229c0160ff9af312f85b4e8bd51178">Right</a>() - x;</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;    width = thisRight - x;</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160; </div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;  <span class="keywordflow">if</span> (other.<a class="code" href="../../de/dd8/classez_rect_template.htm#a5e438fa76acae89d8b3b6f55d683dfc7">Bottom</a>() &gt; thisBottom)</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    height = other.<a class="code" href="../../de/dd8/classez_rect_template.htm#a5e438fa76acae89d8b3b6f55d683dfc7">Bottom</a>() - y;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    height = thisBottom - y;</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;}</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160; </div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00164"></a><span class="lineno"><a class="line" href="../../de/dd8/classez_rect_template.htm#a69f209875e8c97be1e17de8e84757b8d">  164</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../de/dd8/classez_rect_template.htm#ad20e4b60e8304277f6b72465a665659f">ezRectTemplate&lt;Type&gt;::ExpandToInclude</a>(<span class="keyword">const</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; other)</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;{</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;  Type thisRight = Right();</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;  Type thisBottom = Bottom();</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160; </div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;  <span class="keywordflow">if</span> (other.x &lt; x)</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;    x = other.x;</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160; </div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;  <span class="keywordflow">if</span> (other.y &lt; y)</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;    y = other.y;</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160; </div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;  <span class="keywordflow">if</span> (other.x &gt; thisRight)</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    width = other.x - x;</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    width = thisRight - x;</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160; </div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;  <span class="keywordflow">if</span> (other.y &gt; thisBottom)</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;    height = other.y - y;</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    height = thisBottom - y;</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;}</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160; </div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00187"></a><span class="lineno"><a class="line" href="../../de/dd8/classez_rect_template.htm#a9ebb087da0dfb908e91b93c80981c8d2">  187</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../de/dd8/classez_rect_template.htm#a9ebb087da0dfb908e91b93c80981c8d2">ezRectTemplate&lt;Type&gt;::Grow</a>(Type xy)</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;{</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;  x -= xy;</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;  y -= xy;</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;  width += xy * 2;</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;  height += xy * 2;</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;}</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160; </div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00196"></a><span class="lineno"><a class="line" href="../../de/dd8/classez_rect_template.htm#a2add480d3843c2b71bc515563f2a1460">  196</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../de/dd8/classez_rect_template.htm#a2add480d3843c2b71bc515563f2a1460">ezRectTemplate&lt;Type&gt;::Clip</a>(<span class="keyword">const</span> <a class="code" href="../../de/dd8/classez_rect_template.htm">ezRectTemplate&lt;Type&gt;</a>&amp; clipRect)</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;{</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;  Type newLeft = ezMath::Max&lt;Type&gt;(x, clipRect.x);</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;  Type newTop = ezMath::Max&lt;Type&gt;(y, clipRect.y);</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160; </div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;  Type newRight = ezMath::Min&lt;Type&gt;(Right(), clipRect.<a class="code" href="../../de/dd8/classez_rect_template.htm#a19229c0160ff9af312f85b4e8bd51178">Right</a>());</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;  Type newBottom = ezMath::Min&lt;Type&gt;(Bottom(), clipRect.<a class="code" href="../../de/dd8/classez_rect_template.htm#a5e438fa76acae89d8b3b6f55d683dfc7">Bottom</a>());</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160; </div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;  x = newLeft;</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;  y = newTop;</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;  width = newRight - newLeft;</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;  height = newBottom - newTop;</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;}</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160; </div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00211"></a><span class="lineno"><a class="line" href="../../de/dd8/classez_rect_template.htm#a49359199f26e20f6275d59b77a445248">  211</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../de/dd8/classez_rect_template.htm#a49359199f26e20f6275d59b77a445248">ezRectTemplate&lt;Type&gt;::IsValid</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160; </div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;  <span class="keywordflow">return</span> width &gt;= 0 &amp;&amp; height &gt;= 0;</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;}</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160; </div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00219"></a><span class="lineno"><a class="line" href="../../de/dd8/classez_rect_template.htm#a9a6040a81786efad097f4e105df05d29">  219</a></span>&#160;EZ_ALWAYS_INLINE <span class="keyword">const</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a> <a class="code" href="../../de/dd8/classez_rect_template.htm#a9a6040a81786efad097f4e105df05d29">ezRectTemplate&lt;Type&gt;::GetClampedPoint</a>(<span class="keyword">const</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>&amp; vPoint)<span class="keyword"> const</span></div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160; </div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d1/df8/classez_vec2_template.htm">ezVec2Template&lt;Type&gt;</a>(<a class="code" href="../../db/d78/namespaceez_math.htm#aaaedc100ad5d35ae5362021b9d1b0e7c">ezMath::Clamp</a>(vPoint.x, Left(), Right()), <a class="code" href="../../db/d78/namespaceez_math.htm#aaaedc100ad5d35ae5362021b9d1b0e7c">ezMath::Clamp</a>(vPoint.y, Top(), Bottom()));</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;}</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160; </div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00227"></a><span class="lineno"><a class="line" href="../../de/dd8/classez_rect_template.htm#a7f30d3a0903aeb387fc50efe18997ab4">  227</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../de/dd8/classez_rect_template.htm#a7f30d3a0903aeb387fc50efe18997ab4">ezRectTemplate&lt;Type&gt;::SetCenter</a>(Type tX, Type tY)</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;{</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160; </div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;  x = tX - width / 2;</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;  y = tY - height / 2;</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;}</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160; </div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00236"></a><span class="lineno"><a class="line" href="../../de/dd8/classez_rect_template.htm#a5fa99cacde52a6602aa099e7d9c5bebb">  236</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../de/dd8/classez_rect_template.htm#a5fa99cacde52a6602aa099e7d9c5bebb">ezRectTemplate&lt;Type&gt;::Translate</a>(Type tX, Type tY)</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;{</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160; </div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;  x += tX;</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;  y += tY;</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;}</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160; </div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00245"></a><span class="lineno"><a class="line" href="../../de/dd8/classez_rect_template.htm#a387ce1e5dfad4b7d1125593653d44606">  245</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../de/dd8/classez_rect_template.htm#a387ce1e5dfad4b7d1125593653d44606">ezRectTemplate&lt;Type&gt;::Scale</a>(Type sX, Type sY)</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;{</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160; </div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;  x *= sX;</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;  y *= sY;</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;  width *= sX;</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;  height *= sY;</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;}</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassez_rect_template_htm_ae25196a53860c2c88f5642198ae6cd86"><div class="ttname"><a href="../../de/dd8/classez_rect_template.htm#ae25196a53860c2c88f5642198ae6cd86">ezRectTemplate::Contains</a></div><div class="ttdeci">bool Contains(const ezVec2Template&lt; Type &gt; &amp;vPoint) const</div><div class="ttdoc">Returns true if the rectangle contains the provided point.</div><div class="ttdef"><b>Definition:</b> Rect_inl.h:114</div></div>
<div class="ttc" id="aclassez_rect_template_htm_a5fa99cacde52a6602aa099e7d9c5bebb"><div class="ttname"><a href="../../de/dd8/classez_rect_template.htm#a5fa99cacde52a6602aa099e7d9c5bebb">ezRectTemplate::Translate</a></div><div class="ttdeci">void Translate(Type tX, Type tY)</div><div class="ttdoc">Moves the rectangle.</div><div class="ttdef"><b>Definition:</b> Rect_inl.h:236</div></div>
<div class="ttc" id="aclassez_rect_template_htm_a99c776183232f14e5d6589b2f1a980b3"><div class="ttname"><a href="../../de/dd8/classez_rect_template.htm#a99c776183232f14e5d6589b2f1a980b3">ezRectTemplate::GetX1</a></div><div class="ttdeci">Type GetX1() const</div><div class="ttdoc">The smaller value along x. Same as Left().</div><div class="ttdef"><b>Definition:</b> Rect.h:70</div></div>
<div class="ttc" id="aclassez_rect_template_htm_a387ce1e5dfad4b7d1125593653d44606"><div class="ttname"><a href="../../de/dd8/classez_rect_template.htm#a387ce1e5dfad4b7d1125593653d44606">ezRectTemplate::Scale</a></div><div class="ttdeci">void Scale(Type sX, Type sY)</div><div class="ttdoc">Scales width and height, and moves the position as well.</div><div class="ttdef"><b>Definition:</b> Rect_inl.h:245</div></div>
<div class="ttc" id="aclassez_rect_template_htm_a9a6040a81786efad097f4e105df05d29"><div class="ttname"><a href="../../de/dd8/classez_rect_template.htm#a9a6040a81786efad097f4e105df05d29">ezRectTemplate::GetClampedPoint</a></div><div class="ttdeci">const ezVec2Template&lt; Type &gt; GetClampedPoint(const ezVec2Template&lt; Type &gt; &amp;vPoint) const</div><div class="ttdoc">The given point is clamped to the area of the rect, i.e. it will be either inside the rect or on its ...</div><div class="ttdef"><b>Definition:</b> Rect_inl.h:219</div></div>
<div class="ttc" id="aclassez_rect_template_htm_a6f2077b42d5d58cb5a0d1bfd26761a7e"><div class="ttname"><a href="../../de/dd8/classez_rect_template.htm#a6f2077b42d5d58cb5a0d1bfd26761a7e">ezRectTemplate::MakeUnion</a></div><div class="ttdeci">static ezRectTemplate&lt; Type &gt; MakeUnion(const ezRectTemplate&lt; Type &gt; &amp;r0, const ezRectTemplate&lt; Type &gt; &amp;r1)</div><div class="ttdoc">Creates a rect that is the union of the two provided rects.</div><div class="ttdef"><b>Definition:</b> Rect_inl.h:76</div></div>
<div class="ttc" id="aclassez_rect_template_htm_a9ebb087da0dfb908e91b93c80981c8d2"><div class="ttname"><a href="../../de/dd8/classez_rect_template.htm#a9ebb087da0dfb908e91b93c80981c8d2">ezRectTemplate::Grow</a></div><div class="ttdeci">void Grow(Type xy)</div><div class="ttdoc">Increases the size of the rect in all directions.</div><div class="ttdef"><b>Definition:</b> Rect_inl.h:187</div></div>
<div class="ttc" id="aclassez_rect_template_htm_a3aa719a4cc5c663fb762ff755f1ec013"><div class="ttname"><a href="../../de/dd8/classez_rect_template.htm#a3aa719a4cc5c663fb762ff755f1ec013">ezRectTemplate::MakeIntersection</a></div><div class="ttdeci">static ezRectTemplate&lt; Type &gt; MakeIntersection(const ezRectTemplate&lt; Type &gt; &amp;r0, const ezRectTemplate&lt; Type &gt; &amp;r1)</div><div class="ttdoc">Creates a rect that is the intersection of the two provided rects.</div><div class="ttdef"><b>Definition:</b> Rect_inl.h:56</div></div>
<div class="ttc" id="aclassez_rect_template_htm_ad20e4b60e8304277f6b72465a665659f"><div class="ttname"><a href="../../de/dd8/classez_rect_template.htm#ad20e4b60e8304277f6b72465a665659f">ezRectTemplate::ExpandToInclude</a></div><div class="ttdeci">void ExpandToInclude(const ezRectTemplate&lt; Type &gt; &amp;other)</div><div class="ttdoc">Extends this rectangle so that the provided rectangle is completely contained within it.</div><div class="ttdef"><b>Definition:</b> Rect_inl.h:141</div></div>
<div class="ttc" id="aclassez_rect_template_htm_a6c82888d3d2defd71dcbb54d0bcc5afd"><div class="ttname"><a href="../../de/dd8/classez_rect_template.htm#a6c82888d3d2defd71dcbb54d0bcc5afd">ezRectTemplate::ezRectTemplate</a></div><div class="ttdeci">ezRectTemplate()</div><div class="ttdoc">Default constructor does not initialize the data.</div></div>
<div class="ttc" id="aclassez_rect_template_htm_ac58bd7146feb5f96ab75b5b894866778"><div class="ttname"><a href="../../de/dd8/classez_rect_template.htm#ac58bd7146feb5f96ab75b5b894866778">ezRectTemplate::HasNonZeroArea</a></div><div class="ttdeci">bool HasNonZeroArea() const</div><div class="ttdoc">Returns true if the area of the rectangle is non zero.</div><div class="ttdef"><b>Definition:</b> Rect_inl.h:108</div></div>
<div class="ttc" id="aclassez_rect_template_htm_a492257b50d3618b37e6d5795a47d3a39"><div class="ttname"><a href="../../de/dd8/classez_rect_template.htm#a492257b50d3618b37e6d5795a47d3a39">ezRectTemplate::MakeInvalid</a></div><div class="ttdeci">static ezRectTemplate&lt; Type &gt; MakeInvalid()</div><div class="ttdoc">Creates an 'invalid' rect.</div><div class="ttdef"><b>Definition:</b> Rect_inl.h:34</div></div>
<div class="ttc" id="anamespaceez_math_htm_a6f7ee19d0f8e81ff6ae5f394075e3a56"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a6f7ee19d0f8e81ff6ae5f394075e3a56">ezMath::Max</a></div><div class="ttdeci">constexpr EZ_ALWAYS_INLINE T Max(T f1, T f2)</div><div class="ttdoc">Returns the greater value, f1 or f2.</div><div class="ttdef"><b>Definition:</b> Math_inl.h:39</div></div>
<div class="ttc" id="aclassez_rect_template_htm_a7f30d3a0903aeb387fc50efe18997ab4"><div class="ttname"><a href="../../de/dd8/classez_rect_template.htm#a7f30d3a0903aeb387fc50efe18997ab4">ezRectTemplate::SetCenter</a></div><div class="ttdeci">void SetCenter(Type tX, Type tY)</div><div class="ttdoc">Sets the center of the rectangle.</div><div class="ttdef"><b>Definition:</b> Rect_inl.h:227</div></div>
<div class="ttc" id="anamespaceez_math_htm_aaaedc100ad5d35ae5362021b9d1b0e7c"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#aaaedc100ad5d35ae5362021b9d1b0e7c">ezMath::Clamp</a></div><div class="ttdeci">constexpr EZ_ALWAYS_INLINE T Clamp(T value, T min_val, T max_val)</div><div class="ttdoc">Clamps &quot;value&quot; to the range [min; max]. Returns &quot;value&quot;, if it is inside the range already.</div><div class="ttdef"><b>Definition:</b> Math_inl.h:51</div></div>
<div class="ttc" id="aclassez_rect_template_htm_a8558fb988b43bffc5fa48abb43d05dc5"><div class="ttname"><a href="../../de/dd8/classez_rect_template.htm#a8558fb988b43bffc5fa48abb43d05dc5">ezRectTemplate::GetY2</a></div><div class="ttdeci">Type GetY2() const</div><div class="ttdoc">The larger value along y. Same as Bottom().</div><div class="ttdef"><b>Definition:</b> Rect.h:79</div></div>
<div class="ttc" id="aclassez_rect_template_htm_ae71a33c93f89f6bbc4a1c7f8e73ad563"><div class="ttname"><a href="../../de/dd8/classez_rect_template.htm#ae71a33c93f89f6bbc4a1c7f8e73ad563">ezRectTemplate::MakeZero</a></div><div class="ttdeci">static ezRectTemplate&lt; Type &gt; MakeZero()</div><div class="ttdoc">Creates a rect that is located at the origin and has zero size. This is a 'valid' rect.</div><div class="ttdef"><b>Definition:</b> Rect_inl.h:50</div></div>
<div class="ttc" id="aclassez_rect_template_htm_a0d1c7295bd20ccb5c4628a54533f93cb"><div class="ttname"><a href="../../de/dd8/classez_rect_template.htm#a0d1c7295bd20ccb5c4628a54533f93cb">ezRectTemplate::Overlaps</a></div><div class="ttdeci">bool Overlaps(const ezRectTemplate&lt; Type &gt; &amp;other) const</div><div class="ttdoc">Returns true if the rectangle overlaps the provided rectangle. Also returns true if the rectangles ar...</div><div class="ttdef"><b>Definition:</b> Rect_inl.h:132</div></div>
<div class="ttc" id="aclassez_rect_template_htm"><div class="ttname"><a href="../../de/dd8/classez_rect_template.htm">ezRectTemplate</a></div><div class="ttdoc">A simple rectangle class templated on the type for x, y and width, height.</div><div class="ttdef"><b>Definition:</b> Declarations.h:223</div></div>
<div class="ttc" id="anamespaceez_math_htm_ad8009b4da9cb427658d71e30576f209e"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#ad8009b4da9cb427658d71e30576f209e">ezMath::Min</a></div><div class="ttdeci">constexpr EZ_ALWAYS_INLINE T Min(T f1, T f2)</div><div class="ttdoc">Returns the smaller value, f1 or f2.</div><div class="ttdef"><b>Definition:</b> Math_inl.h:27</div></div>
<div class="ttc" id="aclassez_rect_template_htm_a37783b0bb68f7669373c6f236b40d1ad"><div class="ttname"><a href="../../de/dd8/classez_rect_template.htm#a37783b0bb68f7669373c6f236b40d1ad">ezRectTemplate::GetX2</a></div><div class="ttdeci">Type GetX2() const</div><div class="ttdoc">The larger value along x. Same as Right().</div><div class="ttdef"><b>Definition:</b> Rect.h:73</div></div>
<div class="ttc" id="aclassez_rect_template_htm_a49359199f26e20f6275d59b77a445248"><div class="ttname"><a href="../../de/dd8/classez_rect_template.htm#a49359199f26e20f6275d59b77a445248">ezRectTemplate::IsValid</a></div><div class="ttdeci">bool IsValid() const</div><div class="ttdoc">Checks whether the position and size contain valid values.</div><div class="ttdef"><b>Definition:</b> Rect_inl.h:211</div></div>
<div class="ttc" id="aclassez_rect_template_htm_a19229c0160ff9af312f85b4e8bd51178"><div class="ttname"><a href="../../de/dd8/classez_rect_template.htm#a19229c0160ff9af312f85b4e8bd51178">ezRectTemplate::Right</a></div><div class="ttdeci">Type Right() const</div><div class="ttdoc">The larger value along x.</div><div class="ttdef"><b>Definition:</b> Rect.h:61</div></div>
<div class="ttc" id="aclassez_rect_template_htm_a5e438fa76acae89d8b3b6f55d683dfc7"><div class="ttname"><a href="../../de/dd8/classez_rect_template.htm#a5e438fa76acae89d8b3b6f55d683dfc7">ezRectTemplate::Bottom</a></div><div class="ttdeci">Type Bottom() const</div><div class="ttdoc">The larger value along y.</div><div class="ttdef"><b>Definition:</b> Rect.h:67</div></div>
<div class="ttc" id="aclassez_vec2_template_htm"><div class="ttname"><a href="../../d1/df8/classez_vec2_template.htm">ezVec2Template</a></div><div class="ttdoc">A 2-component vector class.</div><div class="ttdef"><b>Definition:</b> Declarations.h:129</div></div>
<div class="ttc" id="aclassez_rect_template_htm_a9bed0d898d6b0a49a50358bdf28070ec"><div class="ttname"><a href="../../de/dd8/classez_rect_template.htm#a9bed0d898d6b0a49a50358bdf28070ec">ezRectTemplate::GetY1</a></div><div class="ttdeci">Type GetY1() const</div><div class="ttdoc">The smaller value along y. Same as Top().</div><div class="ttdef"><b>Definition:</b> Rect.h:76</div></div>
<div class="ttc" id="aclassez_rect_template_htm_a2add480d3843c2b71bc515563f2a1460"><div class="ttname"><a href="../../de/dd8/classez_rect_template.htm#a2add480d3843c2b71bc515563f2a1460">ezRectTemplate::Clip</a></div><div class="ttdeci">void Clip(const ezRectTemplate&lt; Type &gt; &amp;clipRect)</div><div class="ttdoc">Clips this rect so that it is fully inside the provided rectangle.</div><div class="ttdef"><b>Definition:</b> Rect_inl.h:196</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_4ad0f5fbee83b30173e7fecedeea26f0.htm">Math</a></li><li class="navelem"><a class="el" href="../../dir_89ec743f7412cd7cb287fad7b6649245.htm">Implementation</a></li><li class="navelem"><b>Rect_inl.h</b></li>
    <li class="footer">Generated on Mon Mar 3 2025 17:23:44 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
