<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: Code/Engine/Foundation/Math/Implementation/Angle_inl.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 21.6</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search','.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('dd/d0f/_angle__inl_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Angle_inl.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;constexpr EZ_ALWAYS_INLINE Type ezAngle::Pi()</div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;{</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span>Type<span class="keyword">&gt;</span>(3.1415926535897932384626433832795);</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;}</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160; </div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;constexpr EZ_ALWAYS_INLINE Type <a class="code" href="../../db/d6f/classez_angle.htm#aee264ae3d78889dc28af8f249bfd1896">ezAngle::DegToRadMultiplier</a>()</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;{</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;  <span class="keywordflow">return</span> Pi&lt;Type&gt;() / (Type)180;</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;}</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160; </div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;constexpr EZ_ALWAYS_INLINE Type <a class="code" href="../../db/d6f/classez_angle.htm#a824421cba6dd5ee07e2cb6ae76e6b2f6">ezAngle::RadToDegMultiplier</a>()</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;{</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;  <span class="keywordflow">return</span> ((Type)180) / Pi&lt;Type&gt;();</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;}</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160; </div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;constexpr Type <a class="code" href="../../db/d6f/classez_angle.htm#adab2ede26eb53b905568e319e4ac1453">ezAngle::DegToRad</a>(Type f)</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;{</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;  <span class="keywordflow">return</span> f * DegToRadMultiplier&lt;Type&gt;();</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;}</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;constexpr Type <a class="code" href="../../db/d6f/classez_angle.htm#a49cef592fd82ca0bb2ec82119460d5f2">ezAngle::RadToDeg</a>(Type f)</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;{</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;  <span class="keywordflow">return</span> f * RadToDegMultiplier&lt;Type&gt;();</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;}</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160; </div>
<div class="line"><a name="l00033"></a><span class="lineno"><a class="line" href="../../db/d6f/classez_angle.htm#a5983b2ad96c3d417644bb320cab4ae74">   33</a></span>&#160;constexpr <span class="keyword">inline</span> <a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a> <a class="code" href="../../db/d6f/classez_angle.htm#a5983b2ad96c3d417644bb320cab4ae74">ezAngle::Degree</a>(<span class="keywordtype">float</span> fDegree)</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;{</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../db/d6f/classez_angle.htm#a4313120f7698856e3215669339486c83">ezAngle</a>(<a class="code" href="../../db/d6f/classez_angle.htm#adab2ede26eb53b905568e319e4ac1453">DegToRad</a>(fDegree));</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;}</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160; </div>
<div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="../../db/d6f/classez_angle.htm#a48eaf560f24c0386e80728dfd9e03508">   38</a></span>&#160;constexpr EZ_ALWAYS_INLINE <a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a> <a class="code" href="../../db/d6f/classez_angle.htm#a48eaf560f24c0386e80728dfd9e03508">ezAngle::Radian</a>(<span class="keywordtype">float</span> fRadian)</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;{</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../db/d6f/classez_angle.htm#a4313120f7698856e3215669339486c83">ezAngle</a>(fRadian);</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;}</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160; </div>
<div class="line"><a name="l00043"></a><span class="lineno"><a class="line" href="../../db/d6f/classez_angle.htm#a72444c5d0dbae7c823110344e59b4a69">   43</a></span>&#160;constexpr <span class="keyword">inline</span> <span class="keywordtype">float</span> <a class="code" href="../../db/d6f/classez_angle.htm#a72444c5d0dbae7c823110344e59b4a69">ezAngle::GetDegree</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../db/d6f/classez_angle.htm#a49cef592fd82ca0bb2ec82119460d5f2">RadToDeg</a>(m_fRadian);</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;}</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160; </div>
<div class="line"><a name="l00048"></a><span class="lineno"><a class="line" href="../../db/d6f/classez_angle.htm#ad0abad83b3f0b0ff5427034dc99111d0">   48</a></span>&#160;constexpr EZ_ALWAYS_INLINE <span class="keywordtype">float</span> <a class="code" href="../../db/d6f/classez_angle.htm#ad0abad83b3f0b0ff5427034dc99111d0">ezAngle::GetRadian</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;  <span class="keywordflow">return</span> m_fRadian;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;}</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160; </div>
<div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="../../db/d6f/classez_angle.htm#a204963eccf35f5c1c7b16f5cff4fcf0d">   53</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a> <a class="code" href="../../db/d6f/classez_angle.htm#a204963eccf35f5c1c7b16f5cff4fcf0d">ezAngle::GetNormalizedRange</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  <a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a> out(m_fRadian);</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;  out.<a class="code" href="../../db/d6f/classez_angle.htm#ab7d2199f073fc8e747e1c5865b90b0e7">NormalizeRange</a>();</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;  <span class="keywordflow">return</span> out;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;}</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160; </div>
<div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="../../db/d6f/classez_angle.htm#aaf43f3a575a7f84e269c5a8d9be03c33">   60</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="../../db/d6f/classez_angle.htm#aaf43f3a575a7f84e269c5a8d9be03c33">ezAngle::IsEqualSimple</a>(<a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a> rhs, <a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a> epsilon)<span class="keyword"> const</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a> diff = <a class="code" href="../../db/d6f/classez_angle.htm#a40c9e62d8a12f9bfd59115f3f3050ab4">AngleBetween</a>(*<span class="keyword">this</span>, rhs);</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160; </div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  <span class="keywordflow">return</span> ((diff.m_fRadian &gt;= -epsilon.m_fRadian) &amp;&amp; (diff.m_fRadian &lt;= epsilon.m_fRadian));</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;}</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160; </div>
<div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="../../db/d6f/classez_angle.htm#aca668207b56de72f89bbd6aa4585544a">   67</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code" href="../../db/d6f/classez_angle.htm#aca668207b56de72f89bbd6aa4585544a">ezAngle::IsEqualNormalized</a>(<a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a> rhs, <a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a> epsilon)<span class="keyword"> const</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;  <span class="comment">// equality between normalized angles</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a> aNorm = <a class="code" href="../../db/d6f/classez_angle.htm#a204963eccf35f5c1c7b16f5cff4fcf0d">GetNormalizedRange</a>();</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a> bNorm = rhs.<a class="code" href="../../db/d6f/classez_angle.htm#a204963eccf35f5c1c7b16f5cff4fcf0d">GetNormalizedRange</a>();</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160; </div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  <span class="keywordflow">return</span> aNorm.<a class="code" href="../../db/d6f/classez_angle.htm#aaf43f3a575a7f84e269c5a8d9be03c33">IsEqualSimple</a>(bNorm, epsilon);</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;}</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160; </div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;constexpr EZ_ALWAYS_INLINE <a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a> ezAngle::operator-()<span class="keyword"> const</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../db/d6f/classez_angle.htm#a4313120f7698856e3215669339486c83">ezAngle</a>(-m_fRadian);</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;}</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160; </div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">void</span> ezAngle::operator+=(<a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a> r)</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;{</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;  m_fRadian += r.m_fRadian;</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;}</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160; </div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">void</span> ezAngle::operator-=(<a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a> r)</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;{</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;  m_fRadian -= r.m_fRadian;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;}</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160; </div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;constexpr <span class="keyword">inline</span> <a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a> ezAngle::operator+(<a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a> r)<span class="keyword"> const</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../db/d6f/classez_angle.htm#a4313120f7698856e3215669339486c83">ezAngle</a>(m_fRadian + r.m_fRadian);</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;}</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160; </div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;constexpr <span class="keyword">inline</span> <a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a> ezAngle::operator-(<a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a> r)<span class="keyword"> const</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../db/d6f/classez_angle.htm#a4313120f7698856e3215669339486c83">ezAngle</a>(m_fRadian - r.m_fRadian);</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;}</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160; </div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;constexpr EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> ezAngle::operator==(<span class="keyword">const</span> <a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a>&amp; r)<span class="keyword"> const</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  <span class="keywordflow">return</span> m_fRadian == r.m_fRadian;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;}</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160; </div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;constexpr EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> ezAngle::operator!=(<span class="keyword">const</span> <a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a>&amp; r)<span class="keyword"> const</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;  <span class="keywordflow">return</span> m_fRadian != r.m_fRadian;</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;}</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160; </div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;constexpr EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> ezAngle::operator&lt;(<span class="keyword">const</span> <a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a>&amp; r)<span class="keyword"> const</span></div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;  <span class="keywordflow">return</span> m_fRadian &lt; r.m_fRadian;</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;}</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160; </div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;constexpr EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> ezAngle::operator&gt;(<span class="keyword">const</span> <a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a>&amp; r)<span class="keyword"> const</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;  <span class="keywordflow">return</span> m_fRadian &gt; r.m_fRadian;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;}</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160; </div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;constexpr EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> ezAngle::operator&lt;=(<span class="keyword">const</span> <a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a>&amp; r)<span class="keyword"> const</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;  <span class="keywordflow">return</span> m_fRadian &lt;= r.m_fRadian;</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;}</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160; </div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;constexpr EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> ezAngle::operator&gt;=(<span class="keyword">const</span> <a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a>&amp; r)<span class="keyword"> const</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;  <span class="keywordflow">return</span> m_fRadian &gt;= r.m_fRadian;</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;}</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160; </div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;constexpr <span class="keyword">inline</span> <a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a> operator*(<a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a> a, <span class="keywordtype">float</span> f)</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;{</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../db/d6f/classez_angle.htm#a48eaf560f24c0386e80728dfd9e03508">ezAngle::Radian</a>(a.<a class="code" href="../../db/d6f/classez_angle.htm#ad0abad83b3f0b0ff5427034dc99111d0">GetRadian</a>() * f);</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;}</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160; </div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;constexpr <span class="keyword">inline</span> <a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a> operator*(<span class="keywordtype">float</span> f, <a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a> a)</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;{</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../db/d6f/classez_angle.htm#a48eaf560f24c0386e80728dfd9e03508">ezAngle::Radian</a>(a.<a class="code" href="../../db/d6f/classez_angle.htm#ad0abad83b3f0b0ff5427034dc99111d0">GetRadian</a>() * f);</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;}</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160; </div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;constexpr <span class="keyword">inline</span> <a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a> operator/(<a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a> a, <span class="keywordtype">float</span> f)</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;{</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../db/d6f/classez_angle.htm#a48eaf560f24c0386e80728dfd9e03508">ezAngle::Radian</a>(a.<a class="code" href="../../db/d6f/classez_angle.htm#ad0abad83b3f0b0ff5427034dc99111d0">GetRadian</a>() / f);</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;}</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160; </div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;constexpr <span class="keyword">inline</span> <a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a> operator/(<span class="keywordtype">float</span> f, <a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a> a)</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;{</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../db/d6f/classez_angle.htm#a48eaf560f24c0386e80728dfd9e03508">ezAngle::Radian</a>(a.<a class="code" href="../../db/d6f/classez_angle.htm#ad0abad83b3f0b0ff5427034dc99111d0">GetRadian</a>() / f);</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;}</div>
<div class="ttc" id="aclassez_angle_htm"><div class="ttname"><a href="../../db/d6f/classez_angle.htm">ezAngle</a></div><div class="ttdoc">Float wrapper struct for a safe usage and conversions of angles.</div><div class="ttdef"><b>Definition:</b> Angle.h:10</div></div>
<div class="ttc" id="aclassez_angle_htm_a204963eccf35f5c1c7b16f5cff4fcf0d"><div class="ttname"><a href="../../db/d6f/classez_angle.htm#a204963eccf35f5c1c7b16f5cff4fcf0d">ezAngle::GetNormalizedRange</a></div><div class="ttdeci">ezAngle GetNormalizedRange() const</div><div class="ttdoc">Returns an equivalent angle with range between 0 degree - 360 degree.</div><div class="ttdef"><b>Definition:</b> Angle_inl.h:53</div></div>
<div class="ttc" id="aclassez_angle_htm_a40c9e62d8a12f9bfd59115f3f3050ab4"><div class="ttname"><a href="../../db/d6f/classez_angle.htm#a40c9e62d8a12f9bfd59115f3f3050ab4">ezAngle::AngleBetween</a></div><div class="ttdeci">constexpr static ezAngle AngleBetween(ezAngle a, ezAngle b)</div><div class="ttdoc">Computes the smallest angle between the two given angles. The angle will always be a positive value.</div><div class="ttdef"><b>Definition:</b> Math_inl.h:330</div></div>
<div class="ttc" id="aclassez_angle_htm_a4313120f7698856e3215669339486c83"><div class="ttname"><a href="../../db/d6f/classez_angle.htm#a4313120f7698856e3215669339486c83">ezAngle::ezAngle</a></div><div class="ttdeci">constexpr ezAngle()</div><div class="ttdoc">Standard constructor, initializing with 0.</div><div class="ttdef"><b>Definition:</b> Angle.h:39</div></div>
<div class="ttc" id="aclassez_angle_htm_a48eaf560f24c0386e80728dfd9e03508"><div class="ttname"><a href="../../db/d6f/classez_angle.htm#a48eaf560f24c0386e80728dfd9e03508">ezAngle::Radian</a></div><div class="ttdeci">constexpr static ezAngle Radian(float fRadian)</div><div class="ttdoc">Creates an instance of ezAngle that was initialized from radian. (No need for any conversion)</div><div class="ttdef"><b>Definition:</b> Angle_inl.h:38</div></div>
<div class="ttc" id="aclassez_angle_htm_a49cef592fd82ca0bb2ec82119460d5f2"><div class="ttname"><a href="../../db/d6f/classez_angle.htm#a49cef592fd82ca0bb2ec82119460d5f2">ezAngle::RadToDeg</a></div><div class="ttdeci">constexpr static Type RadToDeg(Type f)</div><div class="ttdoc">Converts an angle in radians to degree.</div></div>
<div class="ttc" id="aclassez_angle_htm_a5983b2ad96c3d417644bb320cab4ae74"><div class="ttname"><a href="../../db/d6f/classez_angle.htm#a5983b2ad96c3d417644bb320cab4ae74">ezAngle::Degree</a></div><div class="ttdeci">constexpr static ezAngle Degree(float fDegree)</div><div class="ttdoc">Creates an instance of ezAngle that was initialized from degree. (Performs a conversion)</div><div class="ttdef"><b>Definition:</b> Angle_inl.h:33</div></div>
<div class="ttc" id="aclassez_angle_htm_a72444c5d0dbae7c823110344e59b4a69"><div class="ttname"><a href="../../db/d6f/classez_angle.htm#a72444c5d0dbae7c823110344e59b4a69">ezAngle::GetDegree</a></div><div class="ttdeci">constexpr float GetDegree() const</div><div class="ttdoc">Returns the degree value. (Performs a conversion)</div><div class="ttdef"><b>Definition:</b> Angle_inl.h:43</div></div>
<div class="ttc" id="aclassez_angle_htm_a824421cba6dd5ee07e2cb6ae76e6b2f6"><div class="ttname"><a href="../../db/d6f/classez_angle.htm#a824421cba6dd5ee07e2cb6ae76e6b2f6">ezAngle::RadToDegMultiplier</a></div><div class="ttdeci">constexpr static EZ_ALWAYS_INLINE Type RadToDegMultiplier()</div><div class="ttdoc">Returns the constant to multiply with an angle in degree to convert it to radians.</div></div>
<div class="ttc" id="aclassez_angle_htm_aaf43f3a575a7f84e269c5a8d9be03c33"><div class="ttname"><a href="../../db/d6f/classez_angle.htm#aaf43f3a575a7f84e269c5a8d9be03c33">ezAngle::IsEqualSimple</a></div><div class="ttdeci">bool IsEqualSimple(ezAngle rhs, ezAngle epsilon) const</div><div class="ttdoc">Equality check with epsilon. Simple check without normalization. 360 degree will equal 0 degree,...</div><div class="ttdef"><b>Definition:</b> Angle_inl.h:60</div></div>
<div class="ttc" id="aclassez_angle_htm_ab7d2199f073fc8e747e1c5865b90b0e7"><div class="ttname"><a href="../../db/d6f/classez_angle.htm#ab7d2199f073fc8e747e1c5865b90b0e7">ezAngle::NormalizeRange</a></div><div class="ttdeci">void NormalizeRange()</div><div class="ttdoc">Brings the angle into the range of 0 degree - 360 degree.</div><div class="ttdef"><b>Definition:</b> Math.cpp:223</div></div>
<div class="ttc" id="aclassez_angle_htm_aca668207b56de72f89bbd6aa4585544a"><div class="ttname"><a href="../../db/d6f/classez_angle.htm#aca668207b56de72f89bbd6aa4585544a">ezAngle::IsEqualNormalized</a></div><div class="ttdeci">bool IsEqualNormalized(ezAngle rhs, ezAngle epsilon) const</div><div class="ttdoc">Equality check with epsilon that uses normalized angles. Will recognize 720 degree == 0 degree.</div><div class="ttdef"><b>Definition:</b> Angle_inl.h:67</div></div>
<div class="ttc" id="aclassez_angle_htm_ad0abad83b3f0b0ff5427034dc99111d0"><div class="ttname"><a href="../../db/d6f/classez_angle.htm#ad0abad83b3f0b0ff5427034dc99111d0">ezAngle::GetRadian</a></div><div class="ttdeci">constexpr float GetRadian() const</div><div class="ttdoc">Returns the radian value. (No need for any conversion)</div><div class="ttdef"><b>Definition:</b> Angle_inl.h:48</div></div>
<div class="ttc" id="aclassez_angle_htm_adab2ede26eb53b905568e319e4ac1453"><div class="ttname"><a href="../../db/d6f/classez_angle.htm#adab2ede26eb53b905568e319e4ac1453">ezAngle::DegToRad</a></div><div class="ttdeci">constexpr static Type DegToRad(Type f)</div><div class="ttdoc">Converts an angle in degree to radians.</div></div>
<div class="ttc" id="aclassez_angle_htm_aee264ae3d78889dc28af8f249bfd1896"><div class="ttname"><a href="../../db/d6f/classez_angle.htm#aee264ae3d78889dc28af8f249bfd1896">ezAngle::DegToRadMultiplier</a></div><div class="ttdeci">constexpr static EZ_ALWAYS_INLINE Type DegToRadMultiplier()</div><div class="ttdoc">Returns the constant to multiply with an angle in degree to convert it to radians.</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_23fdee2f6995db16c755697cdf620cf4.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_035128dd2074b3ffa643fb93d2ba646f.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_b4afbf48febc82b6d8264e96ce32f252.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_b421fc8dbee4bf114051d293564697bb.htm">Math</a></li><li class="navelem"><a class="el" href="../../dir_7df9876b976cc75bc915cc1184bc6f86.htm">Implementation</a></li><li class="navelem"><b>Angle_inl.h</b></li>
    <li class="footer">Generated on Tue Jun 8 2021 14:33:52 for ezEngine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1 </li>
  </ul>
</div>
</body>
</html>
