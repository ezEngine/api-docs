<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: Todo List</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 21.10</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('dd/da0/todo.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="PageDoc"><div class="header">
  <div class="headertitle">
<div class="title">Todo List </div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><dl class="reflist">
<dt>Member <a class="el" href="../../db/d81/classez_application_file_system_config.htm#a4480ba23a312434e340c37602659009c">ezApplicationFileSystemConfig::Load</a>  (const char *szPath=":project/DataDirectories.ddl")</dt>
<dd><a class="anchor" id="_todo000033"></a>Temp fix for backwards compatibility  </dd>
<dt>Class <a class="el" href="../../d5/df3/structez_array_map_base_1_1_pair.htm">ezArrayMapBase&lt; KEY, VALUE &gt;::Pair</a>  </dt>
<dd><a class="anchor" id="_todo000040"></a>Custom comparer  </dd>
<dt>Member <a class="el" href="../../d2/d47/classez_asset_document.htm#a2a2464c8c0db896c67865b52822038f2">ezAssetDocument::InternalAfterSaveDocument</a>  () override</dt>
<dd><a class="anchor" id="_todo000002"></a>Should only be done for platform agnostic assets  </dd>
<dt>Member <a class="el" href="../../d2/d47/classez_asset_document.htm#a2b77341ebc0cf1c4027f2d7e0293075b">ezAssetDocument::SaveThumbnail</a>  (const <a class="el" href="../../d4/d43/classez_image.htm" title="A class containing image data and associated meta data.">ezImage</a> &amp;img, const <a class="el" href="../../d8/d5f/classez_asset_document_1_1_thumbnail_info.htm" title="The thumbnail info containing the hash of the file is appended to assets. The serialized size of this...">ThumbnailInfo</a> &amp;thumbnailInfo) const</dt>
<dd><a class="anchor" id="_todo000003"></a>A conversion to B8G8R8X8_UNORM currently fails  </dd>
<dt>Member <a class="el" href="../../dd/d96/classez_chunk_stream_writer.htm#a9517938b62d5be93e33aecb22f4443d6">ezChunkStreamWriter::EndChunk</a>  ()</dt>
<dd><a class="anchor" id="_todo000044"></a>Write Chunk CRC  </dd>
<dt>Class <a class="el" href="../../d7/d16/classez_color_animation_component.htm">ezColorAnimationComponent</a>  </dt>
<dd><p class="startdd"><a class="anchor" id="_todo000101"></a>Expose the <a class="el" href="../../de/d79/structez_set_color_mode.htm">ezSetColorMode</a> of the <a class="el" href="../../da/d92/structez_msg_set_color.htm">ezMsgSetColor</a> </p>
<p class="interdd">Add speed parameter </p>
<p class="interdd">Add loop mode (once, back-and-forth, loop) </p>
<p class="interdd">Add option to send message to whole sub-tree (SendMessageRecursive) </p>
<p class="enddd">Add on-finished (loop point) event  </p>
</dd>
<dt>Member <a class="el" href="../../db/d02/classez_color_gradient.htm#adb72a0ed9b43198b7942629d67932931">ezColorGradient::EvaluateAlpha</a>  (double x, ezUInt8 &amp;alpha) const</dt>
<dd><a class="anchor" id="_todo000097"></a>Use a midpoint interpolation  </dd>
<dt>Member <a class="el" href="../../db/d02/classez_color_gradient.htm#a1d569d7e23831bcc822fa0d92aa1c594">ezColorGradient::EvaluateColor</a>  (double x, <a class="el" href="../../dd/d01/classez_color.htm" title="ezColor represents and RGBA color in linear color space. Values are stored as float,...">ezColor</a> &amp;rgb) const</dt>
<dd><a class="anchor" id="_todo000096"></a>Use a midpoint interpolation  </dd>
<dt>Member <a class="el" href="../../db/d02/classez_color_gradient.htm#a49110ae2d4f94921fddccb020b426759">ezColorGradient::EvaluateIntensity</a>  (double x, float &amp;intensity) const</dt>
<dd><a class="anchor" id="_todo000098"></a>Use a midpoint interpolation  </dd>
<dt>Member <a class="el" href="../../d6/db4/classez_color_gradient_asset_data.htm#ac1028ae157facdd61676815d120802dc">ezColorGradientAssetData::TickFromTime</a>  (<a class="el" href="../../d3/d90/structez_time.htm" title="The time class encapsulates a double value storing the time in seconds.">ezTime</a> time)</dt>
<dd><a class="anchor" id="_todo000008"></a>Make this a property ?  </dd>
<dt>Member <a class="el" href="../../d3/d4d/classez_command_history.htm#a3604fafe80e120bb6ebcb2654213c8a7">ezCommandHistory::MergeLastTwoTransactions</a>  ()</dt>
<dd><a class="anchor" id="_todo000205"></a>This would not be necessary, if hierarchical transactions would not crash  </dd>
<dt>Member <a class="el" href="../../d3/d4d/classez_command_history.htm#a966c42f94578d21ec1d9251709461094">ezCommandHistory::StartTransaction</a>  (const <a class="el" href="../../d4/d2e/classez_format_string.htm" title="Implements formating of strings with placeholders and formatting options.">ezFormatString</a> &amp;sDisplayString)</dt>
<dd><a class="anchor" id="_todo000204"></a>Allow to have a limited transaction history and clean up transactions after a while  </dd>
<dt>Member <a class="el" href="../../d8/da1/classez_curve1_d.htm#aa21ecd3248b47183bdde92c83191db32">ezCurve1D::CreateLinearApproximation</a>  (double fMaxError=0.01, ezUInt8 uiMaxSubDivs=8)</dt>
<dd><a class="anchor" id="_todo000099"></a>Since we do this, we actually don't need the linear approximation anymore and could just evaluate the full curve  </dd>
<dt>Member <a class="el" href="../../de/dd7/structez_curve1_d_resource_descriptor.htm#a21c095887c89ebf24826c6178a1b935b">ezCurve1DResourceDescriptor::Load</a>  (<a class="el" href="../../d2/d19/classez_stream_reader.htm" title="Interface for binary in (read) streams.">ezStreamReader</a> &amp;stream)</dt>
<dd><a class="anchor" id="_todo000026"></a>We can do this on load, or somehow ensure this is always already correctly saved  </dd>
<dt>Member <a class="el" href="../../da/d49/classez_dds_file_format.htm#a568f3141e12111705313e4490373022e">ezDdsFileFormat::WriteImage</a>  (<a class="el" href="../../d6/dcc/classez_stream_writer.htm" title="Interface for binary out (write) streams.">ezStreamWriter</a> &amp;stream, const <a class="el" href="../../d2/d06/classez_image_view.htm" title="A class referencing image data and holding metadata about the image.">ezImageView</a> &amp;image, <a class="el" href="../../d2/d9e/classez_log_interface.htm" title="Base class for all logging classes.">ezLogInterface</a> *pLog, const char *szFileExtension) const override</dt>
<dd><a class="anchor" id="_todo000166"></a>sub-image size  </dd>
<dt>Member <a class="el" href="../../d2/dec/classez_decal_asset_document_generator.htm#a25e5ffcf71e8d6da2f2b0e641b6fdac8">ezDecalAssetDocumentGenerator::GetImportModes</a>  (const char *szParentDirRelativePath, <a class="el" href="../../d8/deb/classez_hybrid_array.htm">ezHybridArray&lt; ezAssetDocumentGenerator::Info, 4 &gt;</a> &amp;out_Modes) const override</dt>
<dd><a class="anchor" id="_todo000009"></a>Make this configurable  </dd>
<dt>Member <a class="el" href="../../d2/d53/classez_document_object.htm#a4c65872abdb9c159c81bc68f633b9098">ezDocumentObject::IsOnHeap</a>  () const</dt>
<dd><a class="anchor" id="_todo000207"></a>Christopher: This crashes when the pointer is nullptr, which appears to be possible It happened for me when duplicating (CTRL+D) 2 objects 2 times then moving them and finally undoing everything  </dd>
<dt>Member <a class="el" href="../../d4/d4b/classez_edit_action.htm#a83307f5ab0e5c07296854b8431bfafa3">ezEditAction::ezEditAction</a>  (const <a class="el" href="../../dc/dcc/structez_action_context.htm">ezActionContext</a> &amp;context, const char *szName, ButtonType button)</dt>
<dd><a class="anchor" id="_todo000200"></a>Icon  </dd>
<dt>Member <a class="el" href="../../dd/dc5/classez_editor_shape_icons_extractor.htm#a22c3be36cf0df82c1567f48a778e9e47">ezEditorShapeIconsExtractor::Extract</a>  (const <a class="el" href="../../d2/d23/classez_view.htm" title="Encapsulates a view on the given world through the given camera and rendered with the specified Rende...">ezView</a> &amp;view, const <a class="el" href="../../d2/d4f/classez_dynamic_array.htm">ezDynamicArray&lt; const ezGameObject * &gt;</a> &amp;visibleObjects, <a class="el" href="../../d6/d06/classez_extracted_render_data.htm">ezExtractedRenderData</a> &amp;extractedRenderData) override</dt>
<dd><a class="anchor" id="_todo000024"></a>Once we have a solution for objects that only have a shape icon we can switch this loop to use visibleObjects instead.  </dd>
<dt>Member <a class="el" href="../../d5/ddd/classez_fileserve_client.htm#ad401d7c599fbce25dac128d02ec1c27e">ezFileserveClient::EnsureConnected</a>  (<a class="el" href="../../d3/d90/structez_time.htm" title="The time class encapsulates a double value storing the time in seconds.">ezTime</a> timeout=<a class="el" href="../../d3/d90/structez_time.htm#a89ae1d4e0f52df54c2b2f344939662c2" title="Creates an instance of ezTime that was initialized from seconds.">ezTime::Seconds</a>(-5))</dt>
<dd><a class="anchor" id="_todo000167"></a>Somehow abstract this away ?  </dd>
<dt>Member <a class="el" href="../../d5/ddd/classez_fileserve_client.htm#ad4746ed7cce96b05fc26c48cbbcce4bd">ezFileserveClient::WaitForServerInfo</a>  (<a class="el" href="../../d3/d90/structez_time.htm" title="The time class encapsulates a double value storing the time in seconds.">ezTime</a> timeout=<a class="el" href="../../d3/d90/structez_time.htm#a89ae1d4e0f52df54c2b2f344939662c2" title="Creates an instance of ezTime that was initialized from seconds.">ezTime::Seconds</a>(60.0 *5))</dt>
<dd><a class="anchor" id="_todo000169"></a>Abstract this somehow ?  </dd>
<dt>Member <a class="el" href="../../d4/d6b/classez_file_system.htm#a0b824a11bad1c4c29fc5841a84a600e7">ezFileSystem::ResolvePath</a>  (const char *szPath, <a class="el" href="../../d3/d88/classez_string_builder.htm" title="ezStringBuilder is a class that is meant for creating and modifying strings.">ezStringBuilder</a> *out_sAbsolutePath, <a class="el" href="../../d3/d88/classez_string_builder.htm" title="ezStringBuilder is a class that is meant for creating and modifying strings.">ezStringBuilder</a> *out_sDataDirRelativePath, <a class="el" href="../../dc/de0/classez_data_directory_type.htm" title="The base class for all data directory types.">ezDataDirectoryType</a> **out_ppDataDir=nullptr)</dt>
<dd><p class="startdd"><a class="anchor" id="_todo000042"></a>We might also need the none-redirected path as an output </p>
<p class="enddd"><a class="anchor" id="_todo000043"></a>We might also need the none-redirected path as an output  </p>
</dd>
<dt>Member <a class="el" href="../../d8/d4f/classez_fmod_event_component.htm#abb098d43ee0a8dfbb71307086fa4620f">ezFmodEventComponent::SetPitch</a>  (float f)</dt>
<dd><a class="anchor" id="_todo000170"></a>Global pitch might better be a bus setting  </dd>
<dt>Member <a class="el" href="../../de/d3d/classez_g_a_l_command_encoder.htm#a13187501b01f0caad91fa18a28a84ad3">ezGALCommandEncoder::SetResourceView</a>  (ezGALShaderStage::Enum Stage, ezUInt32 uiSlot, <a class="el" href="../../de/d4f/classez_g_a_l_resource_view_handle.htm">ezGALResourceViewHandle</a> hResourceView)</dt>
<dd><a class="anchor" id="_todo000135"></a>Check if the device supports the stage / the slot index  </dd>
<dt>Member <a class="el" href="../../de/d3d/classez_g_a_l_command_encoder.htm#a9643bf069baece35832dc528b3013afc">ezGALCommandEncoder::SetShader</a>  (<a class="el" href="../../d1/d55/classez_g_a_l_shader_handle.htm">ezGALShaderHandle</a> hShader)</dt>
<dd><a class="anchor" id="_todo000134"></a>Assert for shader capabilities (supported shader stages etc.)  </dd>
<dt>Member <a class="el" href="../../de/d3d/classez_g_a_l_command_encoder.htm#a059fb19289d0c1c57c4c4842c8a7515b">ezGALCommandEncoder::SetUnorderedAccessView</a>  (ezUInt32 uiSlot, <a class="el" href="../../de/d82/classez_g_a_l_unordered_access_view_handle.htm">ezGALUnorderedAccessViewHandle</a> hUnorderedAccessView)</dt>
<dd><a class="anchor" id="_todo000136"></a>Check if the device supports the stage / the slot index  </dd>
<dt>Member <a class="el" href="../../d3/d58/classez_g_a_l_command_encoder_impl_d_x11.htm#ae3fb5b0b4f38da862aefd4e4ffe12cda">ezGALCommandEncoderImplDX11::ReadbackTexturePlatform</a>  (const <a class="el" href="../../d3/db1/classez_g_a_l_texture.htm">ezGALTexture</a> *pTexture) override</dt>
<dd><a class="anchor" id="_todo000128"></a>Other mip levels etc?  </dd>
<dt>Member <a class="el" href="../../d3/d58/classez_g_a_l_command_encoder_impl_d_x11.htm#afc0f6a830d33947f004c91cae5853ddd">ezGALCommandEncoderImplDX11::SetConstantBufferPlatform</a>  (ezUInt32 uiSlot, const <a class="el" href="../../d4/d5d/classez_g_a_l_buffer.htm">ezGALBuffer</a> *pBuffer) override</dt>
<dd><a class="anchor" id="_todo000126"></a>Check if the device supports the slot index?  </dd>
<dt>Member <a class="el" href="../../d3/d58/classez_g_a_l_command_encoder_impl_d_x11.htm#a62b4240e7843c8077cd69e43ccaab735">ezGALCommandEncoderImplDX11::SetSamplerStatePlatform</a>  (ezGALShaderStage::Enum Stage, ezUInt32 uiSlot, const <a class="el" href="../../dc/dda/classez_g_a_l_sampler_state.htm">ezGALSamplerState</a> *pSamplerState) override</dt>
<dd><a class="anchor" id="_todo000127"></a>Check if the device supports the stage / the slot index  </dd>
<dt>Member <a class="el" href="../../d7/d15/classez_g_a_l_compute_command_encoder.htm#a8177f9e3beb9ad0c32aca071ac38d7fa">ezGALComputeCommandEncoder::Dispatch</a>  (ezUInt32 uiThreadGroupCountX, ezUInt32 uiThreadGroupCountY, ezUInt32 uiThreadGroupCountZ)</dt>
<dd><a class="anchor" id="_todo000137"></a>Assert for compute  </dd>
<dt>Member <a class="el" href="../../d7/d15/classez_g_a_l_compute_command_encoder.htm#af9521cfc6c842b3cd94792962e48479d">ezGALComputeCommandEncoder::DispatchIndirect</a>  (<a class="el" href="../../d3/d59/classez_g_a_l_buffer_handle.htm">ezGALBufferHandle</a> hIndirectArgumentBuffer, ezUInt32 uiArgumentOffsetInBytes)</dt>
<dd><p class="startdd"><a class="anchor" id="_todo000138"></a>Assert for compute </p>
<p class="interdd"><a class="anchor" id="_todo000139"></a>Assert for indirect dispatch </p>
<p class="interdd"><a class="anchor" id="_todo000140"></a>Assert offset &lt; buffer size </p>
<p class="enddd"><a class="anchor" id="_todo000141"></a>Assert that the buffer can be used for indirect arguments (flag in desc)  </p>
</dd>
<dt>Member <a class="el" href="../../d2/d09/classez_g_a_l_device.htm#a868ca69f0e12cabbe44d18a9cb7b84fb">ezGALDevice::CreateBuffer</a>  (const <a class="el" href="../../d1/da8/structez_g_a_l_buffer_creation_description.htm">ezGALBufferCreationDescription</a> &amp;Description, <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt; const ezUInt8 &gt;</a> pInitialData=<a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt; const ezUInt8 &gt;()</a>)</dt>
<dd><a class="anchor" id="_todo000159"></a>Platform independent validation (buffer type supported)  </dd>
<dt>Member <a class="el" href="../../d2/d09/classez_g_a_l_device.htm#ab300bfe068ba68fa41d31476505cf4c5">ezGALDevice::CreateRenderTargetView</a>  (const <a class="el" href="../../d0/d43/structez_g_a_l_render_target_view_creation_description.htm">ezGALRenderTargetViewCreationDescription</a> &amp;Description)</dt>
<dd><a class="anchor" id="_todo000161"></a>Platform independent validation  </dd>
<dt>Member <a class="el" href="../../d2/d09/classez_g_a_l_device.htm#aeb37d97bfdc97e9dbaf7c2caea1eff91">ezGALDevice::CreateSamplerState</a>  (const <a class="el" href="../../de/d23/structez_g_a_l_sampler_state_creation_description.htm">ezGALSamplerStateCreationDescription</a> &amp;Description)</dt>
<dd><a class="anchor" id="_todo000158"></a>Platform independent validation  </dd>
<dt>Member <a class="el" href="../../d2/d09/classez_g_a_l_device.htm#a6f963939900f38af381a3bebffa63111">ezGALDevice::CreateSwapChain</a>  (const <a class="el" href="../../da/da0/structez_g_a_l_swap_chain_creation_description.htm">ezGALSwapChainCreationDescription</a> &amp;Description)</dt>
<dd><a class="anchor" id="_todo000162"></a>Platform independent validation  </dd>
<dt>Member <a class="el" href="../../d2/d09/classez_g_a_l_device.htm#a11b059a37c71dbbe04750208f818cdc6">ezGALDevice::CreateTexture</a>  (const <a class="el" href="../../da/dad/structez_g_a_l_texture_creation_description.htm">ezGALTextureCreationDescription</a> &amp;Description, <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt; ezGALSystemMemoryDescription &gt;</a> pInitialData=<a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt; ezGALSystemMemoryDescription &gt;()</a>)</dt>
<dd><a class="anchor" id="_todo000160"></a>Platform independent validation (desc width &amp; height &lt; platform maximum, format, etc.)  </dd>
<dt>Member <a class="el" href="../../d2/d09/classez_g_a_l_device.htm#af7655905263e88fd3742929bf365b679">ezGALDevice::CreateVertexDeclaration</a>  (const <a class="el" href="../../dd/d85/structez_g_a_l_vertex_declaration_creation_description.htm">ezGALVertexDeclarationCreationDescription</a> &amp;Description)</dt>
<dd><a class="anchor" id="_todo000163"></a>Platform independent validation  </dd>
<dt>Member <a class="el" href="../../d2/d09/classez_g_a_l_device.htm#a76e4c52e48ebe49f90702585d0560d93">ezGALDevice::Present</a>  (<a class="el" href="../../db/dae/classez_g_a_l_swap_chain_handle.htm">ezGALSwapChainHandle</a> hSwapChain, bool bVSync)</dt>
<dd><a class="anchor" id="_todo000157"></a>Map functions to save on memcpys  </dd>
<dt>Member <a class="el" href="../../d7/dcd/classez_g_a_l_render_command_encoder.htm#a5c70dc7deb37cd688ea424ee1bbfc436">ezGALRenderCommandEncoder::BeginStreamOut</a>  ()</dt>
<dd><a class="anchor" id="_todo000155"></a>Assert for streamout support  </dd>
<dt>Member <a class="el" href="../../d7/dcd/classez_g_a_l_render_command_encoder.htm#a6efe21b32c27f23b7e75a2df90890b89">ezGALRenderCommandEncoder::Draw</a>  (ezUInt32 uiVertexCount, ezUInt32 uiStartVertex)</dt>
<dd><a class="anchor" id="_todo000142"></a>If platform indicates that non-indexed rendering is not possible bind a helper index buffer which contains continuous indices (0, 1, 2, ..)  </dd>
<dt>Member <a class="el" href="../../d7/dcd/classez_g_a_l_render_command_encoder.htm#a256156726bb3aca19b9116ce2a3ad6c1">ezGALRenderCommandEncoder::DrawAuto</a>  ()</dt>
<dd><a class="anchor" id="_todo000154"></a>Assert for draw auto support  </dd>
<dt>Member <a class="el" href="../../d7/dcd/classez_g_a_l_render_command_encoder.htm#aed1f9dc5442e0f400f14620f0d11c26f">ezGALRenderCommandEncoder::DrawIndexedInstanced</a>  (ezUInt32 uiIndexCountPerInstance, ezUInt32 uiInstanceCount, ezUInt32 uiStartIndex)</dt>
<dd><a class="anchor" id="_todo000143"></a>Assert for instancing  </dd>
<dt>Member <a class="el" href="../../d7/dcd/classez_g_a_l_render_command_encoder.htm#a0388e6d835e71141e706b4e47a3f750c">ezGALRenderCommandEncoder::DrawIndexedInstancedIndirect</a>  (<a class="el" href="../../d3/d59/classez_g_a_l_buffer_handle.htm">ezGALBufferHandle</a> hIndirectArgumentBuffer, ezUInt32 uiArgumentOffsetInBytes)</dt>
<dd><p class="startdd"><a class="anchor" id="_todo000144"></a>Assert for instancing </p>
<p class="interdd"><a class="anchor" id="_todo000145"></a>Assert for indirect draw </p>
<p class="interdd"><a class="anchor" id="_todo000146"></a>Assert offset &lt; buffer size </p>
<p class="enddd"><a class="anchor" id="_todo000147"></a>Assert that the buffer can be used for indirect arguments (flag in desc)  </p>
</dd>
<dt>Member <a class="el" href="../../d7/dcd/classez_g_a_l_render_command_encoder.htm#a91be45491df45f7d2ad2f65708b35791">ezGALRenderCommandEncoder::DrawInstanced</a>  (ezUInt32 uiVertexCountPerInstance, ezUInt32 uiInstanceCount, ezUInt32 uiStartVertex)</dt>
<dd><p class="startdd"><a class="anchor" id="_todo000148"></a>Assert for instancing </p>
<p class="enddd"><a class="anchor" id="_todo000149"></a>If platform indicates that non-indexed rendering is not possible bind a helper index buffer which contains continuous indices (0, 1, 2, ..)  </p>
</dd>
<dt>Member <a class="el" href="../../d7/dcd/classez_g_a_l_render_command_encoder.htm#a3c326a9f18f6f634ea77ba1b58568a02">ezGALRenderCommandEncoder::DrawInstancedIndirect</a>  (<a class="el" href="../../d3/d59/classez_g_a_l_buffer_handle.htm">ezGALBufferHandle</a> hIndirectArgumentBuffer, ezUInt32 uiArgumentOffsetInBytes)</dt>
<dd><p class="startdd"><a class="anchor" id="_todo000150"></a>Assert for instancing </p>
<p class="interdd"><a class="anchor" id="_todo000151"></a>Assert for indirect draw </p>
<p class="interdd"><a class="anchor" id="_todo000152"></a>Assert offset &lt; buffer size </p>
<p class="enddd"><a class="anchor" id="_todo000153"></a>Assert that the buffer can be used for indirect arguments (flag in desc)  </p>
</dd>
<dt>Member <a class="el" href="../../d7/dcd/classez_g_a_l_render_command_encoder.htm#a720099044e251412ac7c77f9b2029125">ezGALRenderCommandEncoder::SetIndexBuffer</a>  (<a class="el" href="../../d3/d59/classez_g_a_l_buffer_handle.htm">ezGALBufferHandle</a> hIndexBuffer)</dt>
<dd><a class="anchor" id="_todo000156"></a>Assert on index buffer type (if non nullptr)  </dd>
<dt>Member <a class="el" href="../../da/dfe/structez_g_a_l_resource_format.htm#ad1d5a4e021c0f8da596c899d24d46489">ezGALResourceFormat::IsDepthFormat</a>  (ezGALResourceFormat::Enum format)</dt>
<dd><a class="anchor" id="_todo000164"></a>A combination of propertyflags, something like srgb, normalized, ...  </dd>
<dt>Member <a class="el" href="../../de/daf/classez_g_a_l_swap_chain_d_x11.htm#affa0bcb2bfbed49d2f6744edf02c0af4">ezGALSwapChainDX11::InitPlatform</a>  (<a class="el" href="../../d2/d09/classez_g_a_l_device.htm" title="The ezRenderDevice class is the primary interface for interactions with rendering APIs It contains a ...">ezGALDevice</a> *pDevice) override</dt>
<dd><p class="startdd"><a class="anchor" id="_todo000129"></a>The mode switch needs to be handled (ResizeBuffers + communication with engine) </p>
<p class="interdd"><a class="anchor" id="_todo000130"></a>Get from MSAA value of the m_Description </p>
<p class="enddd"><a class="anchor" id="_todo000131"></a>Get from enumeration of available modes  </p>
</dd>
<dt>Member <a class="el" href="../../d5/dca/classez_g_a_l_texture_d_x11.htm#a1175db02ff4796657060cef13deaa464">ezGALTextureDX11::InitPlatform</a>  (<a class="el" href="../../d2/d09/classez_g_a_l_device.htm" title="The ezRenderDevice class is the primary interface for interactions with rendering APIs It contains a ...">ezGALDevice</a> *pDevice, <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt; ezGALSystemMemoryDescription &gt;</a> pInitialData) override</dt>
<dd><a class="anchor" id="_todo000132"></a>Validation if interface of corresponding texture object exists  </dd>
<dt>Member <a class="el" href="../../d9/d0a/classez_g_a_l_texture_vulkan.htm#a4f141ad2f3ffb0c30195b69edda2b277">ezGALTextureVulkan::InitPlatform</a>  (<a class="el" href="../../d2/d09/classez_g_a_l_device.htm" title="The ezRenderDevice class is the primary interface for interactions with rendering APIs It contains a ...">ezGALDevice</a> *pDevice, <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt; ezGALSystemMemoryDescription &gt;</a> pInitialData) override</dt>
<dd><a class="anchor" id="_todo000165"></a>Validation if interface of corresponding texture object exists  </dd>
<dt>Member <a class="el" href="../../d7/de7/classez_g_a_l_vertex_declaration_d_x11.htm#a751d661d8e98e0a07252ec63209da06c">ezGALVertexDeclarationDX11::InitPlatform</a>  (<a class="el" href="../../d2/d09/classez_g_a_l_device.htm" title="The ezRenderDevice class is the primary interface for interactions with rendering APIs It contains a ...">ezGALDevice</a> *pDevice) override</dt>
<dd><a class="anchor" id="_todo000133"></a>Expose step rate?  </dd>
<dt>Member <a class="el" href="../../db/db6/classez_game_application.htm#a8d759f32b8cf8391725b73b92c7150d1">ezGameApplication::Init_SetupDefaultResources</a>  () override</dt>
<dd><a class="anchor" id="_todo000106"></a>Loading Cubemap Texture  </dd>
<dt>Member <a class="el" href="../../d0/d53/classez_game_object_document.htm#a94bb4ec7c526a2ce428238ead4f4376f">ezGameObjectDocument::InvalidateGlobalTransformValue</a>  (const <a class="el" href="../../d2/d53/classez_document_object.htm">ezDocumentObject</a> *pObject) const</dt>
<dd><a class="anchor" id="_todo000004"></a>If all parents are always inserted as well, we can stop once an object is found that is not in the list  </dd>
<dt>Member <a class="el" href="../../de/d89/classez_game_object_gizmo_edit_tool.htm#aa26a7b499ef4dd94e670a630e5790592">ezGameObjectGizmoEditTool::UpdateGizmoTransformation</a>  ()</dt>
<dd><a class="anchor" id="_todo000006"></a>Pivot point  </dd>
<dt>Class <a class="el" href="../../dd/d2a/structez_generic_id.htm">ezGenericId&lt; InstanceIndexBits, GenerationBits &gt;</a>  </dt>
<dd><a class="anchor" id="_todo000100"></a>Document this better.  </dd>
<dt>Member <a class="el" href="../../d3/d4c/classez_material_asset_document.htm#a5f5423f405960178854949539eb6ad8a">ezMaterialAssetDocument::InternalTransformAsset</a>  (const char *szTargetFile, const char *szOutputTag, const <a class="el" href="../../db/d29/classez_platform_profile.htm">ezPlatformProfile</a> *pAssetProfile, const <a class="el" href="../../de/d83/classez_asset_file_header.htm" title="Simple class to handle asset file headers (the very first bytes in all transformed asset files)">ezAssetFileHeader</a> &amp;AssetHeader, ezBitflags&lt; ezTransformFlags &gt; transformFlags) override</dt>
<dd><a class="anchor" id="_todo000010"></a>Rendering platform is currently hardcoded  </dd>
<dt>Member <a class="el" href="../../d3/d4c/classez_material_asset_document.htm#a90de3c93c913fe50f66a0ab248282ef2">ezMaterialAssetDocument::UpdateAssetDocumentInfo</a>  (<a class="el" href="../../d4/dc7/classez_asset_document_info.htm">ezAssetDocumentInfo</a> *pInfo) const override</dt>
<dd><a class="anchor" id="_todo000011"></a>The Visual Shader node configuration files would need to be a dependency of the auto-generated shader.  </dd>
<dt>Member <a class="el" href="../../d2/d6b/classez_mesh_resource_descriptor.htm#ad4be661b8cc10636b60029042de566b3">ezMeshResourceDescriptor::Load</a>  (<a class="el" href="../../d2/d19/classez_stream_reader.htm" title="Interface for binary in (read) streams.">ezStreamReader</a> &amp;stream)</dt>
<dd><p class="startdd"><a class="anchor" id="_todo000120"></a><a class="el" href="../../d3/d14/structez_mesh_resource_descriptor_1_1_material.htm">Material</a> Path (relative to mesh file) </p>
<p class="enddd"><a class="anchor" id="_todo000121"></a>load from file  </p>
</dd>
<dt>Member <a class="el" href="../../d2/d6b/classez_mesh_resource_descriptor.htm#ae87f425a57205affe8050448a396453a">ezMeshResourceDescriptor::Save</a>  (<a class="el" href="../../d6/dcc/classez_stream_writer.htm" title="Interface for binary out (write) streams.">ezStreamWriter</a> &amp;stream)</dt>
<dd><a class="anchor" id="_todo000119"></a><a class="el" href="../../d3/d14/structez_mesh_resource_descriptor_1_1_material.htm">Material</a> Path (relative to mesh file)  </dd>
<dt>Member <a class="el" href="../../d8/d21/classez_open_ddl_parser.htm#a1082b07190d2f2e55ca762f07e3b2e99">ezOpenDdlParser::OnPrimitiveBool</a>  (ezUInt32 count, const bool *pData, bool bThisIsAll)=0</dt>
<dd><a class="anchor" id="_todo000051"></a>Currently not supported  </dd>
<dt>Member <a class="el" href="../../de/d67/classez_particle_behavior___color_gradient.htm#a85f8d8a0a72927ee1fb1e3f52373d4ec">ezParticleBehavior_ColorGradient::Process</a>  (ezUInt64 uiNumElements) override</dt>
<dd><a class="anchor" id="_todo000171"></a>Use level of detail to reduce the update interval further up close, with a high interval, animations appear choppy, especially when fading stuff out at the end  </dd>
<dt>Member <a class="el" href="../../d8/dca/classez_particle_behavior___fade_out.htm#a314f2e503e9c78b835bb1c0ef7b6d144">ezParticleBehavior_FadeOut::Process</a>  (ezUInt64 uiNumElements) override</dt>
<dd><a class="anchor" id="_todo000172"></a>Use level of detail to reduce the update interval further up close, with a high interval, animations appear choppy, especially when fading stuff out at the end  </dd>
<dt>Member <a class="el" href="../../de/d19/classez_particle_behavior___raycast.htm#adb28999772b146830d19f74174f9477b">ezParticleBehavior_Raycast::Process</a>  (ezUInt64 uiNumElements) override</dt>
<dd><a class="anchor" id="_todo000173"></a>Get current element index from iterator ?  </dd>
<dt>Member <a class="el" href="../../da/d3d/classez_particle_component.htm#a3a395aa4455dfc29958eab82459d8485">ezParticleComponent::SerializeComponent</a>  (<a class="el" href="../../dc/dd8/classez_world_writer.htm" title="Stores an entire ezWorld in a stream.">ezWorldWriter</a> &amp;stream) const override</dt>
<dd><a class="anchor" id="_todo000174"></a>store effect state  </dd>
<dt>Member <a class="el" href="../../d4/de9/classez_particle_effect_resource.htm#adc8eeecf249eafee11fc2b37bf3b2fc3">ezParticleEffectResource::UnloadData</a>  (Unload WhatToUnload) override</dt>
<dd><a class="anchor" id="_todo000176"></a>Clear something  </dd>
<dt>Member <a class="el" href="../../d4/de9/classez_particle_effect_resource.htm#a76bf34e085004534e71211f988860190">ezParticleEffectResource::UpdateMemoryUsage</a>  (MemoryUsage &amp;out_NewMemoryUsage) override</dt>
<dd><a class="anchor" id="_todo000177"></a>Better statistics  </dd>
<dt>Member <a class="el" href="../../dc/d4a/classez_particle_finalizer___age.htm#a77bcba76bf735f1885397db8e499be67">ezParticleFinalizer_Age::Process</a>  (ezUInt64 uiNumElements) override</dt>
<dd><a class="anchor" id="_todo000175"></a>Get current element index from iterator ?  </dd>
<dt>Member <a class="el" href="../../d7/d0d/classez_particle_type_light.htm#a404279d4241edc28b1303ee3200adfd0">ezParticleTypeLight::CreateRequiredStreams</a>  () override</dt>
<dd><a class="anchor" id="_todo000178"></a>Initialize (instead of during extraction)  </dd>
<dt>Member <a class="el" href="../../d5/d22/classez_particle_type_trail.htm#a4a408f0e7062cb0c6d7f6bf0cafc7519">ezParticleTypeTrail::ExtractTypeRenderData</a>  (<a class="el" href="../../d8/dab/structez_msg_extract_render_data.htm">ezMsgExtractRenderData</a> &amp;msg, const ezTransform &amp;instanceTransform) const override</dt>
<dd><a class="anchor" id="_todo000179"></a>This loop could be done without a condition  </dd>
<dt>Member <a class="el" href="../../d5/d22/classez_particle_type_trail.htm#af58e91e207a4e59e0d9e8e06f2a33f24">ezParticleTypeTrail::GetMaxParticleRadius</a>  (float fParticleSize) const override</dt>
<dd><a class="anchor" id="_todo000180"></a>This is a hacky guess, one would actually need to inspect the trail positions  </dd>
<dt>Member <a class="el" href="../../d5/d22/classez_particle_type_trail.htm#a931e750cd420c31c197b2a127a437e27">ezParticleTypeTrail::m_TrailPoints64</a>  </dt>
<dd><a class="anchor" id="_todo000181"></a>Use a shared freelist across effects instead  </dd>
<dt>Member <a class="el" href="../../d7/d82/classez_phantom_rtti_manager.htm#a361693ea613883b675de7332fb5db27d">ezPhantomRttiManager::RegisterType</a>  (<a class="el" href="../../dc/de3/structez_reflected_type_descriptor.htm" title="Stores the description of a reflected type in a serializable form. Used by ezPhantomRttiManager to ad...">ezReflectedTypeDescriptor</a> &amp;desc)</dt>
<dd><a class="anchor" id="_todo000208"></a>Had to increase the recursion depth to allow registering phantom types that are based on actual types coming from the engine process  </dd>
<dt>Member <a class="el" href="../../d0/dc8/classez_phys_x_actions.htm#a6f28e353937f459ff9cbea38e6720e6a">ezPhysXActions::MapMenuActions</a>  ()</dt>
<dd><a class="anchor" id="_todo000019"></a>Is there a way to integrate into ALL document types in a specific menu (ie. project settings)  </dd>
<dt>Member <a class="el" href="../../d6/d22/classez_processing_stream.htm#a786e7719a992177651bf3f5e4411d6b7">ezProcessingStream::SetSize</a>  (ezUInt64 uiNumElements)</dt>
<dd><a class="anchor" id="_todo000041"></a>Allow to reuse memory from a pool ?  </dd>
<dt>Member <a class="el" href="../../dd/ddd/classez_property_anim_component.htm#abc3cf8241f079ee316e03841ec053008">ezPropertyAnimComponent::SerializeComponent</a>  (<a class="el" href="../../dc/dd8/classez_world_writer.htm" title="Stores an entire ezWorld in a stream.">ezWorldWriter</a> &amp;stream) const override</dt>
<dd><a class="anchor" id="_todo000102"></a>Somehow store the animation state (not necessary for new scenes, but for quicksaves)  </dd>
<dt>Member <a class="el" href="../../dc/def/classez_px_character_controller_component.htm#aa457186f824294ef6ea5c779e2143427">ezPxCharacterControllerComponent::Update</a>  ()</dt>
<dd><a class="anchor" id="_todo000182"></a>allow other gravity directions  </dd>
<dt>Member <a class="el" href="../../dc/dd0/classez_px_mesh_resource.htm#ae7b5a42e19efc49693d63f09a05c34f2">ezPxMeshResource::UnloadData</a>  (Unload WhatToUnload) override</dt>
<dd><a class="anchor" id="_todo000183"></a>Compute memory usage  </dd>
<dt>Member <a class="el" href="../../d5/d3b/classez_qt_color_gradient_widget.htm#a946f9baee1e70af0312abe2a18692214">ezQtColorGradientWidget::mouseMoveEvent</a>  (QMouseEvent *event) override</dt>
<dd><a class="anchor" id="_todo000203"></a>Why not += ?  </dd>
<dt>Member <a class="el" href="../../d6/dec/classez_qt_data_widget.htm#a583701adf3cfa9e4c02eae6905140bc6">ezQtDataWidget::ezQtDataWidget</a>  (QWidget *parent=0)</dt>
<dd><a class="anchor" id="_todo000197"></a>Improve Data Transfer UI  </dd>
<dt>Member <a class="el" href="../../d6/d12/classez_qt_duplicate_dlg.htm#a6647f1ea0c5d0851fd698f91c7ead079">ezQtDuplicateDlg::ezQtDuplicateDlg</a>  (QWidget *parent=nullptr)</dt>
<dd><p class="startdd"><a class="anchor" id="_todo000022"></a>Boundingbox helper not implemented yet (get bbox size from selection) </p>
<p class="enddd"><a class="anchor" id="_todo000023"></a>Grouping of duplicates not implemented yet  </p>
</dd>
<dt>Member <a class="el" href="../../d8/d3a/classez_qt_engine_view_widget.htm#a2c7d572bbd0f0c2d339d1c8f5070bdd9">ezQtEngineViewWidget::UpdateCameraInterpolation</a>  ()</dt>
<dd><a class="anchor" id="_todo000005"></a>Hard coded up vector  </dd>
<dt>Member <a class="el" href="../../d2/d9f/classez_qt_property_editor_tag_set_widget.htm#a56d008742d3405d54340c52091d98f77">ezQtPropertyEditorTagSetWidget::OnInit</a>  () override</dt>
<dd><a class="anchor" id="_todo000202"></a><a class="el" href="../../de/db8/structez_string_view.htm" title="ezStringView represent a read-only sub-string of a larger string, as it can store a dedicated string ...">ezStringView</a> is POD? -&gt; array&lt;stringview&gt;::Remove(stringview) fails, because of memcmp  </dd>
<dt>Member <a class="el" href="../../d7/d70/classez_qt_reflection_widget.htm#a38a61987035304b3a56448e11ca735cb">ezQtReflectionWidget::ProcessTelemetry</a>  (void *pUnuseed)</dt>
<dd><a class="anchor" id="_todo000198"></a>should read the message handlers here  </dd>
<dt>Member <a class="el" href="../../d7/d64/classez_qt_shortcut_editor_dlg.htm#ae8c0b5d240b7d006359af63f84c19848">ezQtShortcutEditorDlg::ezQtShortcutEditorDlg</a>  (QWidget *parent)</dt>
<dd><a class="anchor" id="_todo000201"></a>Instead of removing &amp;, replace it by underlined text (requires formatted text output)  </dd>
<dt>Member <a class="el" href="../../de/d9e/classez_random.htm#a518fc403487dbabce265b461c5636e94">ezRandom::DoubleMinMax</a>  (double fMinValue, double fMaxValue)</dt>
<dd><a class="anchor" id="_todo000052"></a>Probably not correct  </dd>
<dt>Member <a class="el" href="../../de/d9e/classez_random.htm#a8af14fc4e063019220c00c4eb04c67d6">ezRandom::DoubleVariance</a>  (double fValue, double fVariance)</dt>
<dd><a class="anchor" id="_todo000053"></a>Test whether this is actually correct  </dd>
<dt>Member <a class="el" href="../../de/d9e/classez_random.htm#aa4cc462a71c1f4e0e04362f511fcd3c2">ezRandom::DoubleVarianceAroundZero</a>  (double fAbsMaxValue)</dt>
<dd><a class="anchor" id="_todo000054"></a>Test whether this is actually correct  </dd>
<dt>Member <a class="el" href="../../d5/dd5/classez_rc_agent_component.htm#a5da41a423707144970b4d363bc00385b">ezRcAgentComponent::FindNavMeshPolyAt</a>  (const ezVec3 &amp;vPosition, dtPolyRef &amp;out_PolyRef, ezVec3 *out_vAdjustedPosition=nullptr, float fPlaneEpsilon=0.01f, float fHeightEpsilon=1.0f) const</dt>
<dd><a class="anchor" id="_todo000186"></a>Hard-coded filter  </dd>
<dt>Member <a class="el" href="../../d5/dd5/classez_rc_agent_component.htm#a3bde952bcb51472687038532d203fd68">ezRcAgentComponent::HasReachedPosition</a>  (const ezVec3 &amp;pos, float fMaxDistance) const</dt>
<dd><a class="anchor" id="_todo000189"></a>The comment below may not always be true  </dd>
<dt>Class <a class="el" href="../../d5/d37/classez_remote_message.htm">ezRemoteMessage</a>  </dt>
<dd><a class="anchor" id="_todo000037"></a>Add move semantics for <a class="el" href="../../d5/d37/classez_remote_message.htm" title="Encapsulates all the data that is transmitted when sending or receiving a message with ezRemoteInterf...">ezRemoteMessage</a>  </dd>
<dt>Member <a class="el" href="../../df/da1/structez_resource_flags.htm#a59e97090ee88970ad83f348cdf72784caecf97b2fec766fd30a936614213b0a8b">ezResourceFlags::ResourceHasFallback</a>  </dt>
<dd><a class="anchor" id="_todo000029"></a>implement NoFileAccessRequired  </dd>
<dt>Member <a class="el" href="../../db/d77/classez_rotor_component.htm#a0c4df045ec217e7044bad340b4aec1eb">ezRotorComponent::Update</a>  ()</dt>
<dd><p class="startdd"><a class="anchor" id="_todo000103"></a>Scripting integration </p>
<p class="interdd"><a class="anchor" id="_todo000104"></a>Scripting integration </p>
<p class="enddd"><a class="anchor" id="_todo000105"></a>This will probably give precision issues pretty quickly  </p>
</dd>
<dt>Member <a class="el" href="../../d3/dbc/classez_scene_actions.htm#a345a55617316f11b4eb0865a98f37959">ezSceneActions::MapToolbarActions</a>  (const char *szMapping)</dt>
<dd><a class="anchor" id="_todo000020"></a>This works incorrectly with value 6.0f -&gt; it places the action inside the snap category  </dd>
<dt>Member <a class="el" href="../../d6/d7b/classez_selection_context.htm#a89098d8c3560ae034784c2803e17dc68">ezSelectionContext::DoKeyPressEvent</a>  (QKeyEvent *e) override</dt>
<dd><a class="anchor" id="_todo000007"></a>Handle the current cursor (icon) across all active input contexts  </dd>
<dt>Member <a class="el" href="../../d2/dff/classez_shadow_pool.htm#ab801075103a3dccad0187209527118da">ezShadowPool::AddPointLight</a>  (const <a class="el" href="../../d4/d1c/classez_point_light_component.htm" title="The standard point light component. This component represents point lights with various properties (e...">ezPointLightComponent</a> *pPointLight, float fScreenSpaceSize, const <a class="el" href="../../d2/d23/classez_view.htm" title="Encapsulates a view on the given world through the given camera and rendered with the specified Rende...">ezView</a> *pReferenceView)</dt>
<dd><a class="anchor" id="_todo000116"></a>expose somewhere  </dd>
<dt>Member <a class="el" href="../../d2/dff/classez_shadow_pool.htm#a72bb5a7e9b0ede18400cb8fa1379199d">ezShadowPool::AddSpotLight</a>  (const <a class="el" href="../../d9/dfc/classez_spot_light_component.htm" title="The standard spot light component. This component represents spot lights with various properties (e....">ezSpotLightComponent</a> *pSpotLight, float fScreenSpaceSize, const <a class="el" href="../../d2/d23/classez_view.htm" title="Encapsulates a view on the given world through the given camera and rendered with the specified Rende...">ezView</a> *pReferenceView)</dt>
<dd><a class="anchor" id="_todo000117"></a>expose somewhere  </dd>
<dt>Member <a class="el" href="../../d2/d62/classez_simd_mat4f.htm#a9b74133932892c9cada72df5735aa808">ezSimdMat4f::Invert</a>  (const <a class="el" href="../../d2/d0c/classez_simd_float.htm">ezSimdFloat</a> &amp;fEpsilon=ezMath::SmallEpsilon&lt; float &gt;())</dt>
<dd><a class="anchor" id="_todo000057"></a>optimize  </dd>
<dt>Member <a class="el" href="../../dc/d8c/structez_simd_math.htm#accef2fab16044f90944d1709b87801f9">ezSimdMath::Sin</a>  (const <a class="el" href="../../db/d0d/classez_simd_vec4f.htm" title="A 4-component SIMD vector class.">ezSimdVec4f</a> &amp;f)</dt>
<dd><a class="anchor" id="_todo000058"></a>optimize these methods if needed  </dd>
<dt>Member <a class="el" href="../../d7/dc1/classez_simd_quat.htm#aa7f0bfea76189a48a4d4bf49407337d3">ezSimdQuat::GetRotationAxisAndAngle</a>  (<a class="el" href="../../db/d0d/classez_simd_vec4f.htm" title="A 4-component SIMD vector class.">ezSimdVec4f</a> &amp;vAxis, <a class="el" href="../../d2/d0c/classez_simd_float.htm">ezSimdFloat</a> &amp;angle, const <a class="el" href="../../d2/d0c/classez_simd_float.htm">ezSimdFloat</a> &amp;fEpsilon=ezMath::DefaultEpsilon&lt; float &gt;()) const</dt>
<dd><a class="anchor" id="_todo000061"></a>optimize  </dd>
<dt>Member <a class="el" href="../../d7/dc1/classez_simd_quat.htm#a523b8042befd1ecb01056c5b476f6ed6">ezSimdQuat::SetFromAxisAndAngle</a>  (const <a class="el" href="../../db/d0d/classez_simd_vec4f.htm" title="A 4-component SIMD vector class.">ezSimdVec4f</a> &amp;vRotationAxis, const <a class="el" href="../../d2/d0c/classez_simd_float.htm">ezSimdFloat</a> &amp;angle)</dt>
<dd><a class="anchor" id="_todo000060"></a>optimize  </dd>
<dt>Member <a class="el" href="../../d7/dc1/classez_simd_quat.htm#aca6a8fde81c096ef11973a81ce0fdc49">ezSimdQuat::SetShortestRotation</a>  (const <a class="el" href="../../db/d0d/classez_simd_vec4f.htm" title="A 4-component SIMD vector class.">ezSimdVec4f</a> &amp;vDirFrom, const <a class="el" href="../../db/d0d/classez_simd_vec4f.htm" title="A 4-component SIMD vector class.">ezSimdVec4f</a> &amp;vDirTo)</dt>
<dd><a class="anchor" id="_todo000059"></a>optimize these methods if needed  </dd>
<dt>Member <a class="el" href="../../dd/d65/classez_singleton_registry.htm#a6517fd647e5bda0b746412a39cc19bf5">ezSingletonRegistry::GetSingletonInstance</a>  ()</dt>
<dd><a class="anchor" id="_todo000039"></a>Events for new/deleted singletons -&gt; ezInspector integration  </dd>
<dt>Member <a class="el" href="../../d5/d04/classez_sound_bank_asset_document.htm#a7b4737282040ff09bd9c110221647f84">ezSoundBankAssetDocument::InternalTransformAsset</a>  (<a class="el" href="../../d6/dcc/classez_stream_writer.htm" title="Interface for binary out (write) streams.">ezStreamWriter</a> &amp;stream, const char *szOutputTag, const <a class="el" href="../../db/d29/classez_platform_profile.htm">ezPlatformProfile</a> *pAssetProfile, const <a class="el" href="../../de/d83/classez_asset_file_header.htm" title="Simple class to handle asset file headers (the very first bytes in all transformed asset files)">ezAssetFileHeader</a> &amp;AssetHeader, ezBitflags&lt; ezTransformFlags &gt; transformFlags) override</dt>
<dd><a class="anchor" id="_todo000017"></a>For platform specific sound banks, adjust the path to point to the correct file  </dd>
<dt>Member <a class="el" href="../../d1/d17/classez_surface_resource.htm#a269d517b8e83a77f5b64180c0acff311">ezSurfaceResource::InteractWithSurface</a>  (<a class="el" href="../../da/d3c/classez_world.htm" title="A world encapsulates a scene graph of game objects and various component managers and their component...">ezWorld</a> *pWorld, <a class="el" href="../../d6/d5c/structez_game_object_handle.htm" title="A handle to a game object.">ezGameObjectHandle</a> hObject, const ezVec3 &amp;vPosition, const ezVec3 &amp;vSurfaceNormal, const ezVec3 &amp;vIncomingDirection, const <a class="el" href="../../db/dcf/classez_temp_hashed_string.htm" title="A class to use together with ezHashedString for quick comparisons with temporary strings that need no...">ezTempHashedString</a> &amp;sInteraction, const ezUInt16 *pOverrideTeamID, float fImpulseSqr=0.0f)</dt>
<dd><a class="anchor" id="_todo000110"></a>do random deviation, make sure to clamp max deviation angle  </dd>
<dt>Class <a class="el" href="../../dd/daf/classez_telemetry.htm">ezTelemetry</a>  </dt>
<dd><a class="anchor" id="_todo000038"></a>document and test (and finish)  </dd>
<dt>Member <a class="el" href="../../d9/d66/classez_texture_cube_asset_document_generator.htm#a85930cd22864c2d5afd7f544858615e1">ezTextureCubeAssetDocumentGenerator::GetImportModes</a>  (const char *szParentDirRelativePath, <a class="el" href="../../d8/deb/classez_hybrid_array.htm">ezHybridArray&lt; ezAssetDocumentGenerator::Info, 4 &gt;</a> &amp;out_Modes) const override</dt>
<dd><a class="anchor" id="_todo000012"></a>Make this configurable  </dd>
<dt>Member <a class="el" href="../../d0/d43/classez_texture_resource_loader.htm#a27c10987c933702f9ba00e5a3c496fc5">ezTextureResourceLoader::OpenDataStream</a>  (const <a class="el" href="../../d3/d0a/classez_resource.htm" title="The base class for all resources.">ezResource</a> *pResource) override</dt>
<dd><a class="anchor" id="_todo000124"></a>A conversion to B8G8R8X8_UNORM currently fails  </dd>
<dt>Member <a class="el" href="../../d9/ddf/structez_texture_utils.htm#a50b9c22fc7f41d9b50eb4c763c9cb051">ezTextureUtils::ImageFormatToGalFormat</a>  (<a class="el" href="../../da/dfa/structez_image_format.htm#a1c595e37b9f96c35dd90570bfcd8f853" title="Enum describing the encoding format of the pixels of an image.">ezImageFormat::Enum</a> format, bool bSRGB)</dt>
<dd><a class="anchor" id="_todo000125"></a>Not supported by some GPUs ?  </dd>
<dt>Member <a class="el" href="../../d9/d39/classez_tokenizer.htm#a61fc02ebbd771698688a0c09ecf9dd87">ezTokenizer::GetNextLine</a>  (ezUInt32 &amp;uiFirstToken, <a class="el" href="../../d8/deb/classez_hybrid_array.htm">ezHybridArray&lt; const ezToken *, 32 &gt;</a> &amp;Tokens) const</dt>
<dd><a class="anchor" id="_todo000036"></a>Theoretically, if the line ends with an identifier, and the next directly starts with one again,  </dd>
<dt>Class <a class="el" href="../../d3/db1/classez_transform_template.htm">ezTransformTemplate&lt; Type &gt;</a>  </dt>
<dd><a class="anchor" id="_todo000055"></a>Fix docs and unit tests  </dd>
<dt>Member <a class="el" href="../../de/dea/classez_visual_script_component.htm#a92e77f47a98305b8bfc4a31784b4a6e4">ezVisualScriptComponent::DeserializeComponent</a>  (<a class="el" href="../../d9/dd6/classez_world_reader.htm" title="Reads a world description from a stream. Allows to instantiate that world multiple times in different...">ezWorldReader</a> &amp;stream) override</dt>
<dd><a class="anchor" id="_todo000112"></a>Read script state  </dd>
<dt>Member <a class="el" href="../../de/dea/classez_visual_script_component.htm#ae9f5a07e72907934408bbf859b783520">ezVisualScriptComponent::SerializeComponent</a>  (<a class="el" href="../../dc/dd8/classez_world_writer.htm" title="Stores an entire ezWorld in a stream.">ezWorldWriter</a> &amp;stream) const override</dt>
<dd><a class="anchor" id="_todo000111"></a>Store the current script state  </dd>
<dt>Member <a class="el" href="../../de/dea/classez_visual_script_component.htm#a099da83eb29d79a59f50e90b88e857ec">ezVisualScriptComponent::Update</a>  ()</dt>
<dd><a class="anchor" id="_todo000113"></a>Do we really need to tick scripts every frame?  </dd>
<dt>Member <a class="el" href="../../dd/d11/classez_visual_shader_node_manager.htm#a4c11f639e1f1bc7fb0b7afaba7b69dc8">ezVisualShaderNodeManager::InternalCanAdd</a>  (const <a class="el" href="../../dd/d19/classez_r_t_t_i.htm" title="This enumerable class holds information about reflected types. Each instance represents one type that...">ezRTTI</a> *pRtti, const <a class="el" href="../../d2/d53/classez_document_object.htm">ezDocumentObject</a> *pParent, const char *szParentProperty, const <a class="el" href="../../de/de6/classez_variant.htm" title="ezVariant is a class that can store different types of variables, which is useful in situations where...">ezVariant</a> &amp;index) const override</dt>
<dd><a class="anchor" id="_todo000016"></a>This is an arbitrary limit and it does not count how many nodes reference the same texture  </dd>
<dt>Member <a class="el" href="../../da/db5/classez_window.htm#a1e37cc0a8a6fbd77252d47832157d41b">ezWindow::Initialize</a>  ()</dt>
<dd><p class="startdd"><a class="anchor" id="_todo000031"></a>Expose icon functionality somehow </p>
<p class="enddd"><a class="anchor" id="_todo000032"></a>test &amp; support for multiple windows  </p>
</dd>
<dt>Member <a class="el" href="../../d1/df6/classez_window_output_target_g_a_l.htm#a2e0f61f85204e7f5ded581b5e9e1dd7a">ezWindowOutputTargetGAL::CaptureImage</a>  (<a class="el" href="../../d4/d43/classez_image.htm" title="A class containing image data and associated meta data.">ezImage</a> &amp;out_Image) override</dt>
<dd><a class="anchor" id="_todo000107"></a>Make this more efficient </dd>
</dl>
</div></div><!-- contents -->
</div><!-- PageDoc -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated on Mon Oct 18 2021 15:33:33 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
