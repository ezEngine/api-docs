<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: Todo List</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 24.09</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('dd/da0/todo.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="PageDoc"><div class="header">
  <div class="headertitle">
<div class="title">Todo List </div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><dl class="reflist">
<dt>Member <a class="el" href="../../da/d27/classez_ai_actions.htm#a476212bbb686872644c8391f23e12ad4">ezAiActions::MapMenuActions</a>  ()</dt>
<dd><a class="anchor" id="_todo000007"></a>Is there a way to integrate into ALL document types in a specific menu (ie. project settings)  </dd>
<dt>Member <a class="el" href="../../db/d81/classez_application_file_system_config.htm#a95264618a388f4cd377789fba3c4de26">ezApplicationFileSystemConfig::Load</a>  (<a class="el" href="../../d9/d18/classez_string_view.htm" title="ezStringView represent a read-only sub-string of a larger string, as it can store a dedicated string ...">ezStringView</a> sPath=s_sConfigFile)</dt>
<dd><a class="anchor" id="_todo000027"></a>Temp fix for backwards compatibility  </dd>
<dt>Class <a class="el" href="../../d5/df3/structez_array_map_base_1_1_pair.htm">ezArrayMapBase&lt; KEY, VALUE &gt;::Pair</a>  </dt>
<dd><a class="anchor" id="_todo000034"></a>Custom comparer  </dd>
<dt>Member <a class="el" href="../../d2/d47/classez_asset_document.htm#a2a2464c8c0db896c67865b52822038f2">ezAssetDocument::InternalAfterSaveDocument</a>  () override</dt>
<dd><a class="anchor" id="_todo000001"></a>Should only be done for platform agnostic assets  </dd>
<dt>Member <a class="el" href="../../d2/d47/classez_asset_document.htm#a2b77341ebc0cf1c4027f2d7e0293075b">ezAssetDocument::SaveThumbnail</a>  (const <a class="el" href="../../d4/d43/classez_image.htm" title="A class containing image data and associated meta data.">ezImage</a> &amp;img, const <a class="el" href="../../d8/d5f/classez_asset_document_1_1_thumbnail_info.htm" title="The thumbnail info containing the hash of the file is appended to assets. The serialized size of this...">ThumbnailInfo</a> &amp;thumbnailInfo) const</dt>
<dd><a class="anchor" id="_todo000002"></a>A conversion to B8G8R8X8_UNORM currently fails  </dd>
<dt>Member <a class="el" href="../../dd/d96/classez_chunk_stream_writer.htm#a9517938b62d5be93e33aecb22f4443d6">ezChunkStreamWriter::EndChunk</a>  ()</dt>
<dd><a class="anchor" id="_todo000038"></a>Write Chunk CRC  </dd>
<dt>Member <a class="el" href="../../db/d02/classez_color_gradient.htm#ab84eb812d91c5f6db52b0db110c409d0">ezColorGradient::EvaluateAlpha</a>  (double x, ezUInt8 &amp;ref_uiAlpha) const</dt>
<dd><a class="anchor" id="_todo000057"></a>Use a midpoint interpolation  </dd>
<dt>Member <a class="el" href="../../db/d02/classez_color_gradient.htm#aa6f1365c2410d5898764797f25553f47">ezColorGradient::EvaluateColor</a>  (double x, <a class="el" href="../../dd/d01/classez_color.htm" title="ezColor represents an RGBA color in linear color space. Values are stored as float,...">ezColor</a> &amp;ref_rgb) const</dt>
<dd><a class="anchor" id="_todo000056"></a>Use a midpoint interpolation  </dd>
<dt>Member <a class="el" href="../../db/d02/classez_color_gradient.htm#a9682a729628df809ce6ea1e1cb6b52ed">ezColorGradient::EvaluateIntensity</a>  (double x, float &amp;ref_fIntensity) const</dt>
<dd><a class="anchor" id="_todo000058"></a>Use a midpoint interpolation  </dd>
<dt>Member <a class="el" href="../../d6/db4/classez_color_gradient_asset_data.htm#ac1028ae157facdd61676815d120802dc">ezColorGradientAssetData::TickFromTime</a>  (<a class="el" href="../../d3/d90/structez_time.htm" title="The time class encapsulates a double value storing the time in seconds.">ezTime</a> time)</dt>
<dd><a class="anchor" id="_todo000008"></a>Make this a property ?  </dd>
<dt>Member <a class="el" href="../../d3/d4d/classez_command_history.htm#a3604fafe80e120bb6ebcb2654213c8a7">ezCommandHistory::MergeLastTwoTransactions</a>  ()</dt>
<dd><a class="anchor" id="_todo000135"></a>This would not be necessary, if hierarchical transactions would not crash  </dd>
<dt>Member <a class="el" href="../../d3/d4d/classez_command_history.htm#aa2dbc794009cef723bf1b75d169ac928">ezCommandHistory::StartTransaction</a>  (const <a class="el" href="../../d4/d2e/classez_format_string.htm" title="Implements formating of strings with placeholders and formatting options.">ezFormatString</a> &amp;displayString)</dt>
<dd><a class="anchor" id="_todo000134"></a>Allow to have a limited transaction history and clean up transactions after a while  </dd>
<dt>Member <a class="el" href="../../d8/da1/classez_curve1_d.htm#aa21ecd3248b47183bdde92c83191db32">ezCurve1D::CreateLinearApproximation</a>  (double fMaxError=0.01, ezUInt8 uiMaxSubDivs=8)</dt>
<dd><a class="anchor" id="_todo000059"></a>Since we do this, we actually don't need the linear approximation anymore and could just evaluate the full curve  </dd>
<dt>Member <a class="el" href="../../de/dd7/structez_curve1_d_resource_descriptor.htm#a9dc2186f6d29f2dc95212164ebaeae96">ezCurve1DResourceDescriptor::Load</a>  (<a class="el" href="../../d2/d19/classez_stream_reader.htm" title="Interface for binary in (read) streams.">ezStreamReader</a> &amp;inout_stream)</dt>
<dd><a class="anchor" id="_todo000021"></a>We can do this on load, or somehow ensure this is always already correctly saved  </dd>
<dt>Member <a class="el" href="../../da/d49/classez_dds_file_format.htm#ab7cb8746876e449268c8d9ad9a0af90b">ezDdsFileFormat::WriteImage</a>  (<a class="el" href="../../d6/dcc/classez_stream_writer.htm" title="Interface for binary out (write) streams.">ezStreamWriter</a> &amp;inout_stream, const <a class="el" href="../../d2/d06/classez_image_view.htm" title="A class referencing image data and holding metadata about the image.">ezImageView</a> &amp;image, <a class="el" href="../../d9/d18/classez_string_view.htm" title="ezStringView represent a read-only sub-string of a larger string, as it can store a dedicated string ...">ezStringView</a> sFileExtension) const override</dt>
<dd><a class="anchor" id="_todo000094"></a>sub-image size  </dd>
<dt>Member <a class="el" href="../../d2/d53/classez_document_object.htm#a4c65872abdb9c159c81bc68f633b9098">ezDocumentObject::IsOnHeap</a>  () const</dt>
<dd><a class="anchor" id="_todo000137"></a>Christopher: This crashes when the pointer is nullptr, which appears to be possible It happened for me when duplicating (CTRL+D) 2 objects 2 times then moving them and finally undoing everything  </dd>
<dt>Member <a class="el" href="../../d4/d4b/classez_edit_action.htm#a83307f5ab0e5c07296854b8431bfafa3">ezEditAction::ezEditAction</a>  (const <a class="el" href="../../dc/dcc/structez_action_context.htm">ezActionContext</a> &amp;context, const char *szName, ButtonType button)</dt>
<dd><a class="anchor" id="_todo000130"></a>Icon  </dd>
<dt>Member <a class="el" href="../../dd/dc5/classez_editor_shape_icons_extractor.htm#a1efc8be5b9c6e7d497a984fba4651603">ezEditorShapeIconsExtractor::Extract</a>  (const <a class="el" href="../../d2/d23/classez_view.htm" title="Encapsulates a view on the given world through the given camera and rendered with the specified Rende...">ezView</a> &amp;view, const <a class="el" href="../../d2/d4f/classez_dynamic_array.htm">ezDynamicArray&lt; const ezGameObject * &gt;</a> &amp;visibleObjects, <a class="el" href="../../d6/d06/classez_extracted_render_data.htm">ezExtractedRenderData</a> &amp;ref_extractedRenderData) override</dt>
<dd><a class="anchor" id="_todo000020"></a>Once we have a solution for objects that only have a shape icon we can switch this loop to use visibleObjects instead.  </dd>
<dt>Member <a class="el" href="../../d5/ddd/classez_fileserve_client.htm#a2670f6539aaeef85427037c1334ad5d2">ezFileserveClient::EnsureConnected</a>  (<a class="el" href="../../d3/d90/structez_time.htm" title="The time class encapsulates a double value storing the time in seconds.">ezTime</a> timeout=<a class="el" href="../../d3/d90/structez_time.htm#a7810d213329178ba8332dedc36d0166d" title="Creates an instance of ezTime that was initialized from seconds.">ezTime::MakeFromSeconds</a>(-5))</dt>
<dd><a class="anchor" id="_todo000095"></a>Somehow abstract this away ?  </dd>
<dt>Member <a class="el" href="../../d5/ddd/classez_fileserve_client.htm#a29fa08e2d81be37f51add386b0d2056a">ezFileserveClient::WaitForServerInfo</a>  (<a class="el" href="../../d3/d90/structez_time.htm" title="The time class encapsulates a double value storing the time in seconds.">ezTime</a> timeout=<a class="el" href="../../d3/d90/structez_time.htm#a7810d213329178ba8332dedc36d0166d" title="Creates an instance of ezTime that was initialized from seconds.">ezTime::MakeFromSeconds</a>(60.0 *5))</dt>
<dd><a class="anchor" id="_todo000097"></a>Abstract this somehow ?  </dd>
<dt>Member <a class="el" href="../../d4/d6b/classez_file_system.htm#a327a03558640ecc06252795f9fe68071">ezFileSystem::ResolvePath</a>  (<a class="el" href="../../d9/d18/classez_string_view.htm" title="ezStringView represent a read-only sub-string of a larger string, as it can store a dedicated string ...">ezStringView</a> sPath, <a class="el" href="../../d3/d88/classez_string_builder.htm" title="ezStringBuilder is a class that is meant for creating and modifying strings.">ezStringBuilder</a> *out_pAbsolutePath, <a class="el" href="../../d3/d88/classez_string_builder.htm" title="ezStringBuilder is a class that is meant for creating and modifying strings.">ezStringBuilder</a> *out_pDataDirRelativePath, const <a class="el" href="../../d0/d2a/structez_data_directory_info.htm">ezDataDirectoryInfo</a> **out_pDataDir=nullptr)</dt>
<dd><p class="startdd"><a class="anchor" id="_todo000036"></a>We might also need the none-redirected path as an output </p>
<p class="enddd"><a class="anchor" id="_todo000037"></a>We might also need the none-redirected path as an output  </p>
</dd>
<dt>Member <a class="el" href="../../de/d3d/classez_g_a_l_command_encoder.htm#aead022ecc4da4026d197549bc29f7f65">ezGALCommandEncoder::SetIndexBuffer</a>  (<a class="el" href="../../d3/d59/classez_g_a_l_buffer_handle.htm">ezGALBufferHandle</a> hIndexBuffer)</dt>
<dd><a class="anchor" id="_todo000085"></a>Assert on index buffer type (if non nullptr)  </dd>
<dt>Member <a class="el" href="../../de/d3d/classez_g_a_l_command_encoder.htm#a9643bf069baece35832dc528b3013afc">ezGALCommandEncoder::SetShader</a>  (<a class="el" href="../../d1/d55/classez_g_a_l_shader_handle.htm">ezGALShaderHandle</a> hShader)</dt>
<dd><a class="anchor" id="_todo000084"></a>Assert for shader capabilities (supported shader stages etc.)  </dd>
<dt>Member <a class="el" href="../../d3/d58/classez_g_a_l_command_encoder_impl_d_x11.htm#ae3fb5b0b4f38da862aefd4e4ffe12cda">ezGALCommandEncoderImplDX11::ReadbackTexturePlatform</a>  (const <a class="el" href="../../d3/db1/classez_g_a_l_texture.htm">ezGALTexture</a> *pTexture) override</dt>
<dd><a class="anchor" id="_todo000078"></a>Other mip levels etc?  </dd>
<dt>Member <a class="el" href="../../d2/d09/classez_g_a_l_device.htm#a3e9c491d43ff9f6db6d4ec0c43723f30">ezGALDevice::CreateBuffer</a>  (const <a class="el" href="../../d1/da8/structez_g_a_l_buffer_creation_description.htm">ezGALBufferCreationDescription</a> &amp;description, <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt; const ezUInt8 &gt;</a> initialData=<a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt; const ezUInt8 &gt;()</a>)</dt>
<dd><a class="anchor" id="_todo000088"></a>Platform independent validation (buffer type supported)  </dd>
<dt>Member <a class="el" href="../../d2/d09/classez_g_a_l_device.htm#a9f9812b446588b092e1b3ce3ed6b42fb">ezGALDevice::CreateRenderTargetView</a>  (const <a class="el" href="../../d0/d43/structez_g_a_l_render_target_view_creation_description.htm">ezGALRenderTargetViewCreationDescription</a> &amp;description)</dt>
<dd><a class="anchor" id="_todo000091"></a>Platform independent validation  </dd>
<dt>Member <a class="el" href="../../d2/d09/classez_g_a_l_device.htm#abd83b4085550ff4f469512f5b3138cad">ezGALDevice::CreateSamplerState</a>  (const <a class="el" href="../../de/d23/structez_g_a_l_sampler_state_creation_description.htm">ezGALSamplerStateCreationDescription</a> &amp;description)</dt>
<dd><a class="anchor" id="_todo000087"></a>Platform independent validation  </dd>
<dt>Member <a class="el" href="../../d2/d09/classez_g_a_l_device.htm#a57adc567c360e8bc964388252b8d6ce9">ezGALDevice::CreateSharedTexture</a>  (const <a class="el" href="../../da/dad/structez_g_a_l_texture_creation_description.htm">ezGALTextureCreationDescription</a> &amp;description, <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt; ezGALSystemMemoryDescription &gt;</a> initialData={})</dt>
<dd><a class="anchor" id="_todo000090"></a>Platform independent validation (desc width &amp; height &lt; platform maximum, format, etc.)  </dd>
<dt>Member <a class="el" href="../../d2/d09/classez_g_a_l_device.htm#a34b42664a4976f36641041dd3d80d084">ezGALDevice::CreateTexture</a>  (const <a class="el" href="../../da/dad/structez_g_a_l_texture_creation_description.htm">ezGALTextureCreationDescription</a> &amp;description, <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt; ezGALSystemMemoryDescription &gt;</a> initialData=<a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt; ezGALSystemMemoryDescription &gt;()</a>)</dt>
<dd><a class="anchor" id="_todo000089"></a>Platform independent validation (desc width &amp; height &lt; platform maximum, format, etc.)  </dd>
<dt>Member <a class="el" href="../../d2/d09/classez_g_a_l_device.htm#af86cc2e8b3da1f70c6922a4f31bab4ff">ezGALDevice::CreateVertexDeclaration</a>  (const <a class="el" href="../../dd/d85/structez_g_a_l_vertex_declaration_creation_description.htm">ezGALVertexDeclarationCreationDescription</a> &amp;description)</dt>
<dd><a class="anchor" id="_todo000092"></a>Platform independent validation  </dd>
<dt>Member <a class="el" href="../../d2/d09/classez_g_a_l_device.htm#ad79d2a93cf7815a5755ee50302189fd8">ezGALDevice::GetBackBufferTextureFromSwapChain</a>  (<a class="el" href="../../db/dae/classez_g_a_l_swap_chain_handle.htm">ezGALSwapChainHandle</a> hSwapChain)</dt>
<dd><a class="anchor" id="_todo000086"></a>Map functions to save on memcpys  </dd>
<dt>Member <a class="el" href="../../da/dfe/structez_g_a_l_resource_format.htm#ad1d5a4e021c0f8da596c899d24d46489">ezGALResourceFormat::IsDepthFormat</a>  (ezGALResourceFormat::Enum format)</dt>
<dd><a class="anchor" id="_todo000093"></a>A combination of propertyflags, something like srgb, normalized, ...  </dd>
<dt>Member <a class="el" href="../../de/daf/classez_g_a_l_swap_chain_d_x11.htm#affa0bcb2bfbed49d2f6744edf02c0af4">ezGALSwapChainDX11::InitPlatform</a>  (<a class="el" href="../../d2/d09/classez_g_a_l_device.htm" title="The ezRenderDevice class is the primary interface for interactions with rendering APIs It contains a ...">ezGALDevice</a> *pDevice) override</dt>
<dd><p class="startdd"><a class="anchor" id="_todo000079"></a>The mode switch needs to be handled (ResizeBuffers + communication with engine) </p>
<p class="interdd"><a class="anchor" id="_todo000080"></a>Get from MSAA value of the m_WindowDesc </p>
<p class="enddd"><a class="anchor" id="_todo000081"></a>Get from enumeration of available modes  </p>
</dd>
<dt>Member <a class="el" href="../../d5/dca/classez_g_a_l_texture_d_x11.htm#a33294c1055598fcf7ce42d8ec38ccd60">ezGALTextureDX11::InitFromNativeObject</a>  (<a class="el" href="../../d3/d78/classez_g_a_l_device_d_x11.htm" title="The DX11 device implementation of the graphics abstraction layer.">ezGALDeviceDX11</a> *pDXDevice)</dt>
<dd><a class="anchor" id="_todo000082"></a>Validation if interface of corresponding texture object exists  </dd>
<dt>Member <a class="el" href="../../d7/de7/classez_g_a_l_vertex_declaration_d_x11.htm#a751d661d8e98e0a07252ec63209da06c">ezGALVertexDeclarationDX11::InitPlatform</a>  (<a class="el" href="../../d2/d09/classez_g_a_l_device.htm" title="The ezRenderDevice class is the primary interface for interactions with rendering APIs It contains a ...">ezGALDevice</a> *pDevice) override</dt>
<dd><a class="anchor" id="_todo000083"></a>Expose step rate?  </dd>
<dt>Member <a class="el" href="../../db/db6/classez_game_application.htm#a8d759f32b8cf8391725b73b92c7150d1">ezGameApplication::Init_SetupDefaultResources</a>  () override</dt>
<dd><a class="anchor" id="_todo000065"></a>Loading Cubemap Texture  </dd>
<dt>Member <a class="el" href="../../d0/d53/classez_game_object_document.htm#a94bb4ec7c526a2ce428238ead4f4376f">ezGameObjectDocument::InvalidateGlobalTransformValue</a>  (const <a class="el" href="../../d2/d53/classez_document_object.htm">ezDocumentObject</a> *pObject) const</dt>
<dd><a class="anchor" id="_todo000003"></a>If all parents are always inserted as well, we can stop once an object is found that is not in the list  </dd>
<dt>Member <a class="el" href="../../de/d89/classez_game_object_gizmo_edit_tool.htm#aa26a7b499ef4dd94e670a630e5790592">ezGameObjectGizmoEditTool::UpdateGizmoTransformation</a>  ()</dt>
<dd><a class="anchor" id="_todo000005"></a>Pivot point  </dd>
<dt>Class <a class="el" href="../../dd/d2a/structez_generic_id.htm">ezGenericId&lt; InstanceIndexBits, GenerationBits &gt;</a>  </dt>
<dd><a class="anchor" id="_todo000060"></a>Document this better.  </dd>
<dt>Member <a class="el" href="../../d5/dc6/classez_jolt_actions.htm#ada187a26f1b5448dd3eb761cf37342de">ezJoltActions::MapMenuActions</a>  ()</dt>
<dd><a class="anchor" id="_todo000014"></a>Is there a way to integrate into ALL document types in a specific menu (ie. project settings)  </dd>
<dt>Member <a class="el" href="../../d7/d32/classez_jolt_mesh_resource.htm#a4bd2f1c67654d8f90725afaaec3dddbd">ezJoltMeshResource::UnloadData</a>  (Unload WhatToUnload) override</dt>
<dd><a class="anchor" id="_todo000100"></a>Compute memory usage  </dd>
<dt>Member <a class="el" href="../../d3/d4c/classez_material_asset_document.htm#aae30af7370c8c89c3e8e6aa87c8fde3e">ezMaterialAssetDocument::InternalTransformAsset</a>  (const char *szTargetFile, <a class="el" href="../../d9/d18/classez_string_view.htm" title="ezStringView represent a read-only sub-string of a larger string, as it can store a dedicated string ...">ezStringView</a> sOutputTag, const <a class="el" href="../../db/d29/classez_platform_profile.htm">ezPlatformProfile</a> *pAssetProfile, const <a class="el" href="../../de/d83/classez_asset_file_header.htm" title="Simple class to handle asset file headers (the very first bytes in all transformed asset files)">ezAssetFileHeader</a> &amp;AssetHeader, ezBitflags&lt; ezTransformFlags &gt; transformFlags) override</dt>
<dd><a class="anchor" id="_todo000009"></a>Rendering platform is currently hardcoded  </dd>
<dt>Member <a class="el" href="../../d3/d4c/classez_material_asset_document.htm#a90de3c93c913fe50f66a0ab248282ef2">ezMaterialAssetDocument::UpdateAssetDocumentInfo</a>  (<a class="el" href="../../d4/dc7/classez_asset_document_info.htm">ezAssetDocumentInfo</a> *pInfo) const override</dt>
<dd><a class="anchor" id="_todo000010"></a>The Visual Shader node configuration files would need to be a dependency of the auto-generated shader.  </dd>
<dt>Member <a class="el" href="../../d2/d6b/classez_mesh_resource_descriptor.htm#a7e3d1b6bb3ddc44093acfe6d719dc058">ezMeshResourceDescriptor::Load</a>  (<a class="el" href="../../d2/d19/classez_stream_reader.htm" title="Interface for binary in (read) streams.">ezStreamReader</a> &amp;inout_stream)</dt>
<dd><p class="startdd"><a class="anchor" id="_todo000072"></a><a class="el" href="../../d3/d14/structez_mesh_resource_descriptor_1_1_material.htm">Material</a> Path (relative to mesh file) </p>
<p class="enddd"><a class="anchor" id="_todo000073"></a>load from file  </p>
</dd>
<dt>Member <a class="el" href="../../d2/d6b/classez_mesh_resource_descriptor.htm#a5081417c171071102d5817f38b53e234">ezMeshResourceDescriptor::Save</a>  (<a class="el" href="../../d6/dcc/classez_stream_writer.htm" title="Interface for binary out (write) streams.">ezStreamWriter</a> &amp;inout_stream)</dt>
<dd><a class="anchor" id="_todo000071"></a><a class="el" href="../../d3/d14/structez_mesh_resource_descriptor_1_1_material.htm">Material</a> Path (relative to mesh file)  </dd>
<dt>Member <a class="el" href="../../d8/d21/classez_open_ddl_parser.htm#a1082b07190d2f2e55ca762f07e3b2e99">ezOpenDdlParser::OnPrimitiveBool</a>  (ezUInt32 count, const bool *pData, bool bThisIsAll)=0</dt>
<dd><a class="anchor" id="_todo000045"></a>Currently not supported  </dd>
<dt>Member <a class="el" href="../../de/d67/classez_particle_behavior___color_gradient.htm#a85f8d8a0a72927ee1fb1e3f52373d4ec">ezParticleBehavior_ColorGradient::Process</a>  (ezUInt64 uiNumElements) override</dt>
<dd><a class="anchor" id="_todo000101"></a>Use level of detail to reduce the update interval further up close, with a high interval, animations appear choppy, especially when fading stuff out at the end  </dd>
<dt>Member <a class="el" href="../../d8/dca/classez_particle_behavior___fade_out.htm#a314f2e503e9c78b835bb1c0ef7b6d144">ezParticleBehavior_FadeOut::Process</a>  (ezUInt64 uiNumElements) override</dt>
<dd><a class="anchor" id="_todo000102"></a>Use level of detail to reduce the update interval further up close, with a high interval, animations appear choppy, especially when fading stuff out at the end  </dd>
<dt>Member <a class="el" href="../../de/d19/classez_particle_behavior___raycast.htm#adb28999772b146830d19f74174f9477b">ezParticleBehavior_Raycast::Process</a>  (ezUInt64 uiNumElements) override</dt>
<dd><a class="anchor" id="_todo000103"></a>Get current element index from iterator ?  </dd>
<dt>Member <a class="el" href="../../da/d3d/classez_particle_component.htm#a2074b4bc1c5b09c6b9ecf661bc4f7758">ezParticleComponent::SerializeComponent</a>  (<a class="el" href="../../dc/dd8/classez_world_writer.htm" title="Stores an entire ezWorld in a stream.">ezWorldWriter</a> &amp;inout_stream) const override</dt>
<dd><a class="anchor" id="_todo000104"></a>store effect state  </dd>
<dt>Member <a class="el" href="../../d4/de9/classez_particle_effect_resource.htm#adc8eeecf249eafee11fc2b37bf3b2fc3">ezParticleEffectResource::UnloadData</a>  (Unload WhatToUnload) override</dt>
<dd><a class="anchor" id="_todo000106"></a>Clear something  </dd>
<dt>Member <a class="el" href="../../d4/de9/classez_particle_effect_resource.htm#a76bf34e085004534e71211f988860190">ezParticleEffectResource::UpdateMemoryUsage</a>  (MemoryUsage &amp;out_NewMemoryUsage) override</dt>
<dd><a class="anchor" id="_todo000107"></a>Better statistics  </dd>
<dt>Member <a class="el" href="../../dc/d4a/classez_particle_finalizer___age.htm#a77bcba76bf735f1885397db8e499be67">ezParticleFinalizer_Age::Process</a>  (ezUInt64 uiNumElements) override</dt>
<dd><a class="anchor" id="_todo000105"></a>Get current element index from iterator ?  </dd>
<dt>Member <a class="el" href="../../d7/d0d/classez_particle_type_light.htm#a404279d4241edc28b1303ee3200adfd0">ezParticleTypeLight::CreateRequiredStreams</a>  () override</dt>
<dd><a class="anchor" id="_todo000108"></a>Initialize (instead of during extraction)  </dd>
<dt>Member <a class="el" href="../../d5/d22/classez_particle_type_trail.htm#a110427ba7b3e578781a6119f73c6e8e4">ezParticleTypeTrail::ExtractTypeRenderData</a>  (<a class="el" href="../../d8/dab/structez_msg_extract_render_data.htm">ezMsgExtractRenderData</a> &amp;ref_msg, const ezTransform &amp;instanceTransform) const override</dt>
<dd><a class="anchor" id="_todo000109"></a>This loop could be done without a condition  </dd>
<dt>Member <a class="el" href="../../d5/d22/classez_particle_type_trail.htm#af58e91e207a4e59e0d9e8e06f2a33f24">ezParticleTypeTrail::GetMaxParticleRadius</a>  (float fParticleSize) const override</dt>
<dd><a class="anchor" id="_todo000110"></a>This is a hacky guess, one would actually need to inspect the trail positions  </dd>
<dt>Member <a class="el" href="../../d5/d22/classez_particle_type_trail.htm#a931e750cd420c31c197b2a127a437e27">ezParticleTypeTrail::m_TrailPoints64</a>  </dt>
<dd><a class="anchor" id="_todo000111"></a>Use a shared freelist across effects instead  </dd>
<dt>Member <a class="el" href="../../d7/d82/classez_phantom_rtti_manager.htm#a80119e1be0f02a9aa0dff31b1cde0b84">ezPhantomRttiManager::RegisterType</a>  (<a class="el" href="../../dc/de3/structez_reflected_type_descriptor.htm" title="Stores the description of a reflected type in a serializable form. Used by ezPhantomRttiManager to ad...">ezReflectedTypeDescriptor</a> &amp;ref_desc)</dt>
<dd><a class="anchor" id="_todo000138"></a>Had to increase the recursion depth to allow registering phantom types that are based on actual types coming from the engine process  </dd>
<dt>Member <a class="el" href="../../d0/dc8/classez_phys_x_actions.htm#a6f28e353937f459ff9cbea38e6720e6a">ezPhysXActions::MapMenuActions</a>  ()</dt>
<dd><a class="anchor" id="_todo000015"></a>Is there a way to integrate into ALL document types in a specific menu (ie. project settings)  </dd>
<dt>Member <a class="el" href="../../d6/d22/classez_processing_stream.htm#a786e7719a992177651bf3f5e4411d6b7">ezProcessingStream::SetSize</a>  (ezUInt64 uiNumElements)</dt>
<dd><a class="anchor" id="_todo000035"></a>Allow to reuse memory from a pool ?  </dd>
<dt>Member <a class="el" href="../../dd/ddd/classez_property_anim_component.htm#a009c749f1aa5dc95910e710636cc1961">ezPropertyAnimComponent::SerializeComponent</a>  (<a class="el" href="../../dc/dd8/classez_world_writer.htm" title="Stores an entire ezWorld in a stream.">ezWorldWriter</a> &amp;inout_stream) const override</dt>
<dd><a class="anchor" id="_todo000061"></a>Somehow store the animation state (not necessary for new scenes, but for quicksaves)  </dd>
<dt>Member <a class="el" href="../../dc/def/classez_px_character_controller_component.htm#aa457186f824294ef6ea5c779e2143427">ezPxCharacterControllerComponent::Update</a>  ()</dt>
<dd><a class="anchor" id="_todo000112"></a>allow other gravity directions  </dd>
<dt>Member <a class="el" href="../../dc/dd0/classez_px_mesh_resource.htm#ae7b5a42e19efc49693d63f09a05c34f2">ezPxMeshResource::UnloadData</a>  (Unload WhatToUnload) override</dt>
<dd><a class="anchor" id="_todo000113"></a>Compute memory usage  </dd>
<dt>Member <a class="el" href="../../d5/d3b/classez_qt_color_gradient_widget.htm#a946f9baee1e70af0312abe2a18692214">ezQtColorGradientWidget::mouseMoveEvent</a>  (QMouseEvent *event) override</dt>
<dd><a class="anchor" id="_todo000133"></a>Why not += ?  </dd>
<dt>Member <a class="el" href="../../d6/dec/classez_qt_data_widget.htm#a92d33850eed061e2b08b93f2b8289b32">ezQtDataWidget::ezQtDataWidget</a>  (QWidget *pParent=0)</dt>
<dd><a class="anchor" id="_todo000127"></a>Improve Data Transfer UI  </dd>
<dt>Member <a class="el" href="../../d6/d12/classez_qt_duplicate_dlg.htm#a04436f5afb83c4b2b8c8cbd8edb2f429">ezQtDuplicateDlg::ezQtDuplicateDlg</a>  (QWidget *pParent=nullptr)</dt>
<dd><p class="startdd"><a class="anchor" id="_todo000018"></a>Boundingbox helper not implemented yet (get bbox size from selection) </p>
<p class="enddd"><a class="anchor" id="_todo000019"></a>Grouping of duplicates not implemented yet  </p>
</dd>
<dt>Member <a class="el" href="../../d8/d3a/classez_qt_engine_view_widget.htm#a2c7d572bbd0f0c2d339d1c8f5070bdd9">ezQtEngineViewWidget::UpdateCameraInterpolation</a>  ()</dt>
<dd><a class="anchor" id="_todo000004"></a>Hard coded up vector  </dd>
<dt>Member <a class="el" href="../../d2/d9f/classez_qt_property_editor_tag_set_widget.htm#a56d008742d3405d54340c52091d98f77">ezQtPropertyEditorTagSetWidget::OnInit</a>  () override</dt>
<dd><a class="anchor" id="_todo000132"></a><a class="el" href="../../d9/d18/classez_string_view.htm" title="ezStringView represent a read-only sub-string of a larger string, as it can store a dedicated string ...">ezStringView</a> is POD? -&gt; array&lt;stringview&gt;::Remove(stringview) fails, because of memcmp  </dd>
<dt>Member <a class="el" href="../../d7/d70/classez_qt_reflection_widget.htm#a38a61987035304b3a56448e11ca735cb">ezQtReflectionWidget::ProcessTelemetry</a>  (void *pUnuseed)</dt>
<dd><a class="anchor" id="_todo000128"></a>should read the message handlers here  </dd>
<dt>Member <a class="el" href="../../d7/d64/classez_qt_shortcut_editor_dlg.htm#ab61b2f5a175970477a0d8c204f85f615">ezQtShortcutEditorDlg::ezQtShortcutEditorDlg</a>  (QWidget *pParent)</dt>
<dd><a class="anchor" id="_todo000131"></a>Instead of removing &amp;, replace it by underlined text (requires formatted text output)  </dd>
<dt>Member <a class="el" href="../../de/d9e/classez_random.htm#a518fc403487dbabce265b461c5636e94">ezRandom::DoubleMinMax</a>  (double fMinValue, double fMaxValue)</dt>
<dd><a class="anchor" id="_todo000046"></a>Probably not correct  </dd>
<dt>Member <a class="el" href="../../de/d9e/classez_random.htm#a8af14fc4e063019220c00c4eb04c67d6">ezRandom::DoubleVariance</a>  (double fValue, double fVariance)</dt>
<dd><a class="anchor" id="_todo000047"></a>Test whether this is actually correct  </dd>
<dt>Member <a class="el" href="../../de/d9e/classez_random.htm#aa4cc462a71c1f4e0e04362f511fcd3c2">ezRandom::DoubleVarianceAroundZero</a>  (double fAbsMaxValue)</dt>
<dd><a class="anchor" id="_todo000048"></a>Test whether this is actually correct  </dd>
<dt>Member <a class="el" href="../../d5/dd5/classez_rc_agent_component.htm#a0ab90d92824cd4f118903b7c27010edb">ezRcAgentComponent::FindNavMeshPolyAt</a>  (const ezVec3 &amp;vPosition, dtPolyRef &amp;out_polyRef, ezVec3 *out_pAdjustedPosition=nullptr, float fPlaneEpsilon=0.01f, float fHeightEpsilon=1.0f) const</dt>
<dd><a class="anchor" id="_todo000116"></a>Hard-coded filter  </dd>
<dt>Member <a class="el" href="../../d5/dd5/classez_rc_agent_component.htm#a776912221425f2efb10c82a812fd0042">ezRcAgentComponent::HasReachedPosition</a>  (const ezVec3 &amp;vPos, float fMaxDistance) const</dt>
<dd><a class="anchor" id="_todo000119"></a>The comment below may not always be true  </dd>
<dt>Class <a class="el" href="../../d5/d37/classez_remote_message.htm">ezRemoteMessage</a>  </dt>
<dd><a class="anchor" id="_todo000031"></a>Add move semantics for <a class="el" href="../../d5/d37/classez_remote_message.htm" title="Encapsulates all the data that is transmitted when sending or receiving a message with ezRemoteInterf...">ezRemoteMessage</a>  </dd>
<dt>Member <a class="el" href="../../df/da1/structez_resource_flags.htm#a59e97090ee88970ad83f348cdf72784caecf97b2fec766fd30a936614213b0a8b">ezResourceFlags::ResourceHasFallback</a>  </dt>
<dd><a class="anchor" id="_todo000023"></a>implement NoFileAccessRequired  </dd>
<dt>Member <a class="el" href="../../db/d77/classez_rotor_component.htm#a0c4df045ec217e7044bad340b4aec1eb">ezRotorComponent::Update</a>  ()</dt>
<dd><p class="startdd"><a class="anchor" id="_todo000062"></a>Scripting integration </p>
<p class="interdd"><a class="anchor" id="_todo000063"></a>Scripting integration </p>
<p class="enddd"><a class="anchor" id="_todo000064"></a>This will probably give precision issues pretty quickly  </p>
</dd>
<dt>Member <a class="el" href="../../d3/dbc/classez_scene_actions.htm#a6054180957f7896758a1905c417fb8d0">ezSceneActions::MapToolbarActions</a>  (<a class="el" href="../../d9/d18/classez_string_view.htm" title="ezStringView represent a read-only sub-string of a larger string, as it can store a dedicated string ...">ezStringView</a> sMapping)</dt>
<dd><a class="anchor" id="_todo000016"></a>This works incorrectly with value 6.0f -&gt; it places the action inside the snap category  </dd>
<dt>Member <a class="el" href="../../d6/d7b/classez_selection_context.htm#a89098d8c3560ae034784c2803e17dc68">ezSelectionContext::DoKeyPressEvent</a>  (QKeyEvent *e) override</dt>
<dd><a class="anchor" id="_todo000006"></a>Handle the current cursor (icon) across all active input contexts  </dd>
<dt>Member <a class="el" href="../../d2/dff/classez_shadow_pool.htm#ab801075103a3dccad0187209527118da">ezShadowPool::AddPointLight</a>  (const <a class="el" href="../../d4/d1c/classez_point_light_component.htm" title="Adds a dynamic point light to the scene, optionally casting shadows.">ezPointLightComponent</a> *pPointLight, float fScreenSpaceSize, const <a class="el" href="../../d2/d23/classez_view.htm" title="Encapsulates a view on the given world through the given camera and rendered with the specified Rende...">ezView</a> *pReferenceView)</dt>
<dd><a class="anchor" id="_todo000069"></a>expose somewhere  </dd>
<dt>Member <a class="el" href="../../d2/dff/classez_shadow_pool.htm#a72bb5a7e9b0ede18400cb8fa1379199d">ezShadowPool::AddSpotLight</a>  (const <a class="el" href="../../d9/dfc/classez_spot_light_component.htm" title="Adds a spotlight to the scene, optionally casting shadows.">ezSpotLightComponent</a> *pSpotLight, float fScreenSpaceSize, const <a class="el" href="../../d2/d23/classez_view.htm" title="Encapsulates a view on the given world through the given camera and rendered with the specified Rende...">ezView</a> *pReferenceView)</dt>
<dd><a class="anchor" id="_todo000070"></a>expose somewhere  </dd>
<dt>Member <a class="el" href="../../d2/d62/classez_simd_mat4f.htm#a9b74133932892c9cada72df5735aa808">ezSimdMat4f::Invert</a>  (const <a class="el" href="../../d2/d0c/classez_simd_float.htm">ezSimdFloat</a> &amp;fEpsilon=ezMath::SmallEpsilon&lt; float &gt;())</dt>
<dd><a class="anchor" id="_todo000052"></a>optimize  </dd>
<dt>Member <a class="el" href="../../dc/d8c/structez_simd_math.htm#adb7b0415a46fb21a49d8aa6816a8d3c8">ezSimdMath::Exp</a>  (const <a class="el" href="../../db/d0d/classez_simd_vec4f.htm" title="A 4-component SIMD vector class.">ezSimdVec4f</a> &amp;f)</dt>
<dd><a class="anchor" id="_todo000053"></a>optimize these methods if needed  </dd>
<dt>Member <a class="el" href="../../d7/dc1/classez_simd_quat.htm#ae594106f21bcbff34682703284fd7c29">ezSimdQuat::GetRotationAxisAndAngle</a>  (<a class="el" href="../../db/d0d/classez_simd_vec4f.htm" title="A 4-component SIMD vector class.">ezSimdVec4f</a> &amp;ref_vAxis, <a class="el" href="../../d2/d0c/classez_simd_float.htm">ezSimdFloat</a> &amp;ref_fAngle, const <a class="el" href="../../d2/d0c/classez_simd_float.htm">ezSimdFloat</a> &amp;fEpsilon=ezMath::DefaultEpsilon&lt; float &gt;()) const</dt>
<dd><a class="anchor" id="_todo000055"></a>optimize  </dd>
<dt>Member <a class="el" href="../../d7/dc1/classez_simd_quat.htm#ab0c380d8d41167fcfea828a833be45f6">ezSimdQuat::MakeFromAxisAndAngle</a>  (const <a class="el" href="../../db/d0d/classez_simd_vec4f.htm" title="A 4-component SIMD vector class.">ezSimdVec4f</a> &amp;vRotationAxis, const <a class="el" href="../../d2/d0c/classez_simd_float.htm">ezSimdFloat</a> &amp;fAngle)</dt>
<dd><a class="anchor" id="_todo000054"></a>optimize  </dd>
<dt>Member <a class="el" href="../../dd/d65/classez_singleton_registry.htm#a6517fd647e5bda0b746412a39cc19bf5">ezSingletonRegistry::GetSingletonInstance</a>  ()</dt>
<dd><a class="anchor" id="_todo000033"></a>Events for new/deleted singletons -&gt; ezInspector integration  </dd>
<dt>Member <a class="el" href="../../d5/d04/classez_sound_bank_asset_document.htm#aea132ded1db676bd485421e5f72b390a">ezSoundBankAssetDocument::InternalTransformAsset</a>  (<a class="el" href="../../d6/dcc/classez_stream_writer.htm" title="Interface for binary out (write) streams.">ezStreamWriter</a> &amp;stream, <a class="el" href="../../d9/d18/classez_string_view.htm" title="ezStringView represent a read-only sub-string of a larger string, as it can store a dedicated string ...">ezStringView</a> sOutputTag, const <a class="el" href="../../db/d29/classez_platform_profile.htm">ezPlatformProfile</a> *pAssetProfile, const <a class="el" href="../../de/d83/classez_asset_file_header.htm" title="Simple class to handle asset file headers (the very first bytes in all transformed asset files)">ezAssetFileHeader</a> &amp;AssetHeader, ezBitflags&lt; ezTransformFlags &gt; transformFlags) override</dt>
<dd><a class="anchor" id="_todo000012"></a>For platform specific sound banks, adjust the path to point to the correct file  </dd>
<dt>Member <a class="el" href="../../d1/d17/classez_surface_resource.htm#ac2cb2333375a1e63fddd04caed23934e">ezSurfaceResource::InteractWithSurface</a>  (<a class="el" href="../../da/d3c/classez_world.htm" title="A world encapsulates a scene graph of game objects and various component managers and their component...">ezWorld</a> *pWorld, <a class="el" href="../../d6/d5c/structez_game_object_handle.htm" title="A handle to a game object.">ezGameObjectHandle</a> hObject, const ezVec3 &amp;vPosition, const ezVec3 &amp;vSurfaceNormal, const ezVec3 &amp;vIncomingDirection, const <a class="el" href="../../db/dcf/classez_temp_hashed_string.htm" title="A class to use together with ezHashedString for quick comparisons with temporary strings that need no...">ezTempHashedString</a> &amp;sInteraction, const ezUInt16 *pOverrideTeamID, float fImpulseSqr=0.0f) const</dt>
<dd><a class="anchor" id="_todo000022"></a>do random deviation, make sure to clamp max deviation angle  </dd>
<dt>Class <a class="el" href="../../dd/daf/classez_telemetry.htm">ezTelemetry</a>  </dt>
<dd><a class="anchor" id="_todo000032"></a>document and test (and finish)  </dd>
<dt>Member <a class="el" href="../../d0/d43/classez_texture_resource_loader.htm#a27c10987c933702f9ba00e5a3c496fc5">ezTextureResourceLoader::OpenDataStream</a>  (const <a class="el" href="../../d3/d0a/classez_resource.htm" title="The base class for all resources.">ezResource</a> *pResource) override</dt>
<dd><a class="anchor" id="_todo000076"></a>A conversion to B8G8R8X8_UNORM currently fails  </dd>
<dt>Member <a class="el" href="../../d9/ddf/structez_texture_utils.htm#a50b9c22fc7f41d9b50eb4c763c9cb051">ezTextureUtils::ImageFormatToGalFormat</a>  (<a class="el" href="../../da/dfa/structez_image_format.htm#a1c595e37b9f96c35dd90570bfcd8f853" title="Enum describing the encoding format of the pixels of an image.">ezImageFormat::Enum</a> format, bool bSRGB)</dt>
<dd><a class="anchor" id="_todo000077"></a>Not supported by some GPUs ?  </dd>
<dt>Member <a class="el" href="../../d9/d39/classez_tokenizer.htm#ae23fa2b63098d0a368e0f244ea556919">ezTokenizer::GetNextLine</a>  (ezUInt32 &amp;ref_uiFirstToken, <a class="el" href="../../d8/deb/classez_hybrid_array.htm">ezHybridArray&lt; const ezToken *, 32 &gt;</a> &amp;ref_tokens) const</dt>
<dd><a class="anchor" id="_todo000030"></a>Theoretically, if the line ends with an identifier, and the next directly starts with one again,  </dd>
<dt>Class <a class="el" href="../../d3/db1/classez_transform_template.htm">ezTransformTemplate&lt; Type &gt;</a>  </dt>
<dd><a class="anchor" id="_todo000049"></a>Fix docs and unit tests  </dd>
<dt>Member <a class="el" href="../../dd/d11/classez_visual_shader_node_manager.htm#a9d5a2f6b320a5e5de8e3d89a5b07f621">ezVisualShaderNodeManager::InternalCanAdd</a>  (const <a class="el" href="../../dd/d19/classez_r_t_t_i.htm" title="This class holds information about reflected types. Each instance represents one type that is known t...">ezRTTI</a> *pRtti, const <a class="el" href="../../d2/d53/classez_document_object.htm">ezDocumentObject</a> *pParent, <a class="el" href="../../d9/d18/classez_string_view.htm" title="ezStringView represent a read-only sub-string of a larger string, as it can store a dedicated string ...">ezStringView</a> sParentProperty, const <a class="el" href="../../de/de6/classez_variant.htm" title="ezVariant is a class that can store different types of variables, which is useful in situations where...">ezVariant</a> &amp;index) const override</dt>
<dd><a class="anchor" id="_todo000011"></a>This is an arbitrary limit and it does not count how many nodes reference the same texture  </dd>
<dt>Member <a class="el" href="../../da/db5/classez_window.htm#a1e37cc0a8a6fbd77252d47832157d41b">ezWindow::Initialize</a>  ()</dt>
<dd><p class="startdd"><a class="anchor" id="_todo000025"></a>Expose icon functionality somehow (101 == IDI_ICON1, see resource.h) </p>
<p class="enddd"><a class="anchor" id="_todo000026"></a>test &amp; support for multiple windows  </p>
</dd>
<dt>Member <a class="el" href="../../d1/df6/classez_window_output_target_g_a_l.htm#ae2fdaa83e29031438df34cbb90c19895">ezWindowOutputTargetGAL::CaptureImage</a>  (<a class="el" href="../../d4/d43/classez_image.htm" title="A class containing image data and associated meta data.">ezImage</a> &amp;out_image) override</dt>
<dd><a class="anchor" id="_todo000066"></a>Make this more efficient </dd>
</dl>
</div></div><!-- contents -->
</div><!-- PageDoc -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated on Sun Aug 25 2024 13:06:25 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
