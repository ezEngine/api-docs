<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/EnginePlugins/VisualScriptPlugin/Runtime/VisualScript_inl.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 24.09</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('dd/dcd/_visual_script__inl_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">VisualScript_inl.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160; </div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// static</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, ezUInt32 Size&gt;</div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d8/df9/structez_visual_script_graph_description_1_1_embedded_array_or_pointer.htm">ezVisualScriptGraphDescription::EmbeddedArrayOrPointer&lt;T, Size&gt;::AddAdditionalDataSize</a>(<a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const T&gt;</a> a, ezUInt32&amp; inout_uiAdditionalDataSize)</div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;{</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;  <span class="keywordflow">if</span> (a.<a class="code" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>() &gt; Size)</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;  {</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;    inout_uiAdditionalDataSize = ezMemoryUtils::AlignSize&lt;ezUInt32&gt;(inout_uiAdditionalDataSize, EZ_ALIGNMENT_OF(T));</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;    inout_uiAdditionalDataSize += a.<a class="code" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>() * <span class="keyword">sizeof</span>(T);</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;  }</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;}</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160; </div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">// static</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, ezUInt32 Size&gt;</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d8/df9/structez_visual_script_graph_description_1_1_embedded_array_or_pointer.htm">ezVisualScriptGraphDescription::EmbeddedArrayOrPointer&lt;T, Size&gt;::AddAdditionalDataSize</a>(ezUInt32 uiSize, ezUInt32 uiAlignment, ezUInt32&amp; inout_uiAdditionalDataSize)</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;{</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;  <span class="keywordflow">if</span> (uiSize &gt; Size * <span class="keyword">sizeof</span>(T))</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;  {</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    inout_uiAdditionalDataSize = ezMemoryUtils::AlignSize&lt;ezUInt32&gt;(inout_uiAdditionalDataSize, uiAlignment);</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;    inout_uiAdditionalDataSize += uiSize;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;  }</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;}</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160; </div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, ezUInt32 Size&gt;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;T* <a class="code" href="../../d8/df9/structez_visual_script_graph_description_1_1_embedded_array_or_pointer.htm">ezVisualScriptGraphDescription::EmbeddedArrayOrPointer&lt;T, Size&gt;::Init</a>(ezUInt8 uiCount, ezUInt8*&amp; inout_pAdditionalData)</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;{</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;  <span class="keywordflow">if</span> (uiCount &lt;= Size)</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  {</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    <span class="keywordflow">return</span> m_Embedded;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;  }</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160; </div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;  inout_pAdditionalData = <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a3b8a00dbb82f1a12a0f05b9d94e4fffb">ezMemoryUtils::AlignForwards</a>(inout_pAdditionalData, EZ_ALIGNMENT_OF(T));</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;  m_Ptr = <span class="keyword">reinterpret_cast&lt;</span>T*<span class="keyword">&gt;</span>(inout_pAdditionalData);</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  inout_pAdditionalData += uiCount * <span class="keyword">sizeof</span>(T);</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;  <span class="keywordflow">return</span> m_Ptr;</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;}</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160; </div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, ezUInt32 Size&gt;</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code" href="../../d8/df9/structez_visual_script_graph_description_1_1_embedded_array_or_pointer.htm">ezVisualScriptGraphDescription::EmbeddedArrayOrPointer&lt;T, Size&gt;::ReadFromStream</a>(ezUInt8&amp; out_uiCount, <a class="code" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a>&amp; inout_stream, ezUInt8*&amp; inout_pAdditionalData)</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;{</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  ezUInt16 uiCount = 0;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;  inout_stream &gt;&gt; uiCount;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160; </div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  <span class="keywordflow">if</span> (uiCount &gt; ezMath::MaxValue&lt;ezUInt8&gt;())</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  {</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    <span class="keywordflow">return</span> EZ_FAILURE;</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;  }</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;  out_uiCount = <span class="keyword">static_cast&lt;</span>ezUInt8<span class="keyword">&gt;</span>(uiCount);</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160; </div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;  T* pTargetPtr = Init(out_uiCount, inout_pAdditionalData);</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;  <span class="keyword">const</span> ezUInt64 uiNumBytesToRead = uiCount * <span class="keyword">sizeof</span>(T);</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  <span class="keywordflow">if</span> (inout_stream.<a class="code" href="../../d2/d19/classez_stream_reader.htm#a9b8ce20de04610d28b4118ff23b42020">ReadBytes</a>(pTargetPtr, uiNumBytesToRead) != uiNumBytesToRead)</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;    <span class="keywordflow">return</span> EZ_FAILURE;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160; </div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;}</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160; </div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160; </div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;EZ_ALWAYS_INLINE ezUInt32 ezVisualScriptGraphDescription::Node::GetExecutionIndex(ezUInt32 uiSlot)<span class="keyword"> const</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;  <span class="keywordflow">if</span> (uiSlot &lt; m_NumExecutionIndices)</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  {</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;    <span class="keywordflow">return</span> m_NumExecutionIndices &lt;= EZ_ARRAY_SIZE(m_ExecutionIndices.m_Embedded) ? m_ExecutionIndices.m_Embedded[uiSlot] : m_ExecutionIndices.m_Ptr[uiSlot];</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;  }</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160; </div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;  <span class="keywordflow">return</span> ezInvalidIndex;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;}</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160; </div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;EZ_ALWAYS_INLINE <a class="code" href="../../da/dfe/structez_visual_script_data_description_1_1_data_offset.htm">ezVisualScriptGraphDescription::DataOffset</a> ezVisualScriptGraphDescription::Node::GetInputDataOffset(ezUInt32 uiSlot)<span class="keyword"> const</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;  <span class="keywordflow">if</span> (uiSlot &lt; m_NumInputDataOffsets)</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  {</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    <span class="keywordflow">return</span> m_NumInputDataOffsets &lt;= EZ_ARRAY_SIZE(m_InputDataOffsets.m_Embedded) ? m_InputDataOffsets.m_Embedded[uiSlot] : m_InputDataOffsets.m_Ptr[uiSlot];</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;  }</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160; </div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;  <span class="keywordflow">return</span> {};</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;}</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160; </div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;EZ_ALWAYS_INLINE <a class="code" href="../../da/dfe/structez_visual_script_data_description_1_1_data_offset.htm">ezVisualScriptGraphDescription::DataOffset</a> ezVisualScriptGraphDescription::Node::GetOutputDataOffset(ezUInt32 uiSlot)<span class="keyword"> const</span></div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;  <span class="keywordflow">if</span> (uiSlot &lt; m_NumOutputDataOffsets)</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;  {</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    <span class="keywordflow">return</span> m_NumOutputDataOffsets &lt;= EZ_ARRAY_SIZE(m_OutputDataOffsets.m_Embedded) ? m_OutputDataOffsets.m_Embedded[uiSlot] : m_OutputDataOffsets.m_Ptr[uiSlot];</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  }</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160; </div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;  <span class="keywordflow">return</span> {};</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;}</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160; </div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;EZ_ALWAYS_INLINE <span class="keyword">const</span> T&amp; ezVisualScriptGraphDescription::Node::GetUserData()<span class="keyword"> const</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  EZ_ASSERT_DEBUG(m_UserDataByteSize &gt;= <span class="keyword">sizeof</span>(T), <span class="stringliteral">&quot;Invalid data&quot;</span>);</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;  <span class="keywordflow">return</span> *<span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>T*<span class="keyword">&gt;</span>(m_UserDataByteSize &lt;= <span class="keyword">sizeof</span>(m_UserData.m_Embedded) ? m_UserData.m_Embedded : m_UserData.m_Ptr);</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;}</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160; </div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;T&amp; ezVisualScriptGraphDescription::Node::InitUserData(ezUInt8*&amp; inout_pAdditionalData, ezUInt32 uiByteSize <span class="comment">/*= sizeof(T)*/</span>)</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;{</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;  m_UserDataByteSize = uiByteSize;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;  <span class="keyword">const</span> ezUInt32 uiUserDataCount = uiByteSize / <span class="keyword">sizeof</span>(ezUInt32);</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;  EZ_ASSERT_DEBUG(uiUserDataCount &lt;= ezMath::MaxValue&lt;ezUInt8&gt;(), <span class="stringliteral">&quot;User data is too big&quot;</span>);</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  <span class="keyword">auto</span> pUserData = m_UserData.Init(<span class="keyword">static_cast&lt;</span>ezUInt8<span class="keyword">&gt;</span>(uiUserDataCount), inout_pAdditionalData);</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;  EZ_CHECK_ALIGNMENT(pUserData, EZ_ALIGNMENT_OF(T));</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;  <span class="keywordflow">return</span> *<span class="keyword">reinterpret_cast&lt;</span>T*<span class="keyword">&gt;</span>(pUserData);</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;}</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160; </div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160; </div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;EZ_ALWAYS_INLINE <span class="keyword">const</span> <a class="code" href="../../d5/d20/structez_visual_script_graph_description_1_1_node.htm">ezVisualScriptGraphDescription::Node</a>* ezVisualScriptGraphDescription::GetNode(ezUInt32 uiIndex)<span class="keyword"> const</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;  <span class="keywordflow">return</span> uiIndex &lt; m_Nodes.GetCount() ? &amp;m_Nodes.GetPtr()[uiIndex] : <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;}</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160; </div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> ezVisualScriptGraphDescription::IsCoroutine()<span class="keyword"> const</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;  <span class="keyword">auto</span> entryNodeType = GetNode(0)-&gt;m_Type;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;  <span class="keywordflow">return</span> entryNodeType == ezVisualScriptNodeDescription::Type::EntryCall_Coroutine || entryNodeType == ezVisualScriptNodeDescription::Type::MessageHandler_Coroutine;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;}</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160; </div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;EZ_ALWAYS_INLINE <span class="keyword">const</span> <a class="code" href="../../de/dc1/classez_shared_ptr.htm">ezSharedPtr&lt;const ezVisualScriptDataDescription&gt;</a>&amp; ezVisualScriptGraphDescription::GetLocalDataDesc()<span class="keyword"> const</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;  <span class="keywordflow">return</span> m_pLocalDataDesc;</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;}</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160; </div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160; </div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;EZ_FORCE_INLINE <span class="keyword">const</span> T&amp; ezVisualScriptExecutionContext::GetData(DataOffset dataOffset)<span class="keyword"> const</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;  <span class="keywordflow">return</span> m_DataStorage[dataOffset.m_uiSource]-&gt;GetData&lt;T&gt;(dataOffset);</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;}</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160; </div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;EZ_FORCE_INLINE T&amp; ezVisualScriptExecutionContext::GetWritableData(DataOffset dataOffset)</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;{</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;  EZ_ASSERT_DEBUG(dataOffset.IsConstant() == <span class="keyword">false</span>, <span class="stringliteral">&quot;Can&#39;t write to constant data&quot;</span>);</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;  <span class="keywordflow">return</span> m_DataStorage[dataOffset.m_uiSource]-&gt;GetWritableData&lt;T&gt;(dataOffset);</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;}</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160; </div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;EZ_FORCE_INLINE <span class="keywordtype">void</span> ezVisualScriptExecutionContext::SetData(DataOffset dataOffset, <span class="keyword">const</span> T&amp; value)</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;{</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;  EZ_ASSERT_DEBUG(dataOffset.IsConstant() == <span class="keyword">false</span>, <span class="stringliteral">&quot;Outputs can&#39;t set constant data&quot;</span>);</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;  <span class="keywordflow">return</span> m_DataStorage[dataOffset.m_uiSource]-&gt;SetData&lt;T&gt;(dataOffset, value);</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;}</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160; </div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;EZ_FORCE_INLINE <a class="code" href="../../d3/d1f/structez_typed_pointer.htm">ezTypedPointer</a> ezVisualScriptExecutionContext::GetPointerData(DataOffset dataOffset)</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;{</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;  EZ_ASSERT_DEBUG(dataOffset.IsConstant() == <span class="keyword">false</span>, <span class="stringliteral">&quot;Pointers can&#39;t be constant data&quot;</span>);</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;  <span class="keywordflow">return</span> m_DataStorage[dataOffset.m_uiSource]-&gt;GetPointerData(dataOffset, m_uiExecutionCounter);</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;}</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160; </div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;EZ_FORCE_INLINE <span class="keywordtype">void</span> ezVisualScriptExecutionContext::SetPointerData(DataOffset dataOffset, T ptr, <span class="keyword">const</span> <a class="code" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* pType)</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;{</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;  EZ_ASSERT_DEBUG(dataOffset.IsConstant() == <span class="keyword">false</span>, <span class="stringliteral">&quot;Pointers can&#39;t be constant data&quot;</span>);</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;  m_DataStorage[dataOffset.m_uiSource]-&gt;SetPointerData(dataOffset, ptr, pType, m_uiExecutionCounter);</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;}</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160; </div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;EZ_FORCE_INLINE <a class="code" href="../../de/de6/classez_variant.htm">ezVariant</a> ezVisualScriptExecutionContext::GetDataAsVariant(DataOffset dataOffset, <span class="keyword">const</span> <a class="code" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* pExpectedType)<span class="keyword"> const</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;  <span class="keywordflow">return</span> m_DataStorage[dataOffset.m_uiSource]-&gt;GetDataAsVariant(dataOffset, pExpectedType, m_uiExecutionCounter);</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;}</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160; </div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;EZ_FORCE_INLINE <span class="keywordtype">void</span> ezVisualScriptExecutionContext::SetDataFromVariant(DataOffset dataOffset, <span class="keyword">const</span> <a class="code" href="../../de/de6/classez_variant.htm">ezVariant</a>&amp; value)</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;{</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;  EZ_ASSERT_DEBUG(dataOffset.IsConstant() == <span class="keyword">false</span>, <span class="stringliteral">&quot;Outputs can&#39;t set constant data&quot;</span>);</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;  <span class="keywordflow">return</span> m_DataStorage[dataOffset.m_uiSource]-&gt;SetDataFromVariant(dataOffset, value, m_uiExecutionCounter);</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;}</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160; </div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">void</span> ezVisualScriptExecutionContext::SetCurrentCoroutine(<a class="code" href="../../d3/d37/classez_script_coroutine.htm">ezScriptCoroutine</a>* pCoroutine)</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;{</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;  m_pCurrentCoroutine = pCoroutine;</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;}</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160; </div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="keyword">inline</span> <a class="code" href="../../d3/d90/structez_time.htm">ezTime</a> ezVisualScriptExecutionContext::GetDeltaTimeSinceLastExecution()</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;{</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;  EZ_ASSERT_DEBUG(m_pDesc-&gt;IsCoroutine(), <span class="stringliteral">&quot;Delta time is only valid for coroutines&quot;</span>);</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;  <span class="keywordflow">return</span> m_DeltaTimeSinceLastExecution;</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;}</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="astructez_result_htm"><div class="ttname"><a href="../../d4/da9/structez_result.htm">ezResult</a></div><div class="ttdoc">Default enum for returning failure or success, instead of using a bool.</div><div class="ttdef"><b>Definition:</b> Types.h:53</div></div>
<div class="ttc" id="astructez_visual_script_graph_description_1_1_embedded_array_or_pointer_htm"><div class="ttname"><a href="../../d8/df9/structez_visual_script_graph_description_1_1_embedded_array_or_pointer.htm">ezVisualScriptGraphDescription::EmbeddedArrayOrPointer</a></div><div class="ttdef"><b>Definition:</b> VisualScript.h:141</div></div>
<div class="ttc" id="aclassez_shared_ptr_htm"><div class="ttname"><a href="../../de/dc1/classez_shared_ptr.htm">ezSharedPtr&lt; const ezVisualScriptDataDescription &gt;</a></div></div>
<div class="ttc" id="aclassez_r_t_t_i_htm"><div class="ttname"><a href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a></div><div class="ttdoc">This class holds information about reflected types. Each instance represents one type that is known t...</div><div class="ttdef"><b>Definition:</b> RTTI.h:29</div></div>
<div class="ttc" id="astructez_time_htm"><div class="ttname"><a href="../../d3/d90/structez_time.htm">ezTime</a></div><div class="ttdoc">The time class encapsulates a double value storing the time in seconds.</div><div class="ttdef"><b>Definition:</b> Time.h:11</div></div>
<div class="ttc" id="aclassez_stream_reader_htm"><div class="ttname"><a href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a></div><div class="ttdoc">Interface for binary in (read) streams.</div><div class="ttdef"><b>Definition:</b> Stream.h:21</div></div>
<div class="ttc" id="aclassez_array_ptr_htm"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a></div><div class="ttdoc">This class encapsulates an array and it's size. It is recommended to use this class instead of plain ...</div><div class="ttdef"><b>Definition:</b> ArrayPtr.h:36</div></div>
<div class="ttc" id="astructez_visual_script_graph_description_1_1_node_htm"><div class="ttname"><a href="../../d5/d20/structez_visual_script_graph_description_1_1_node.htm">ezVisualScriptGraphDescription::Node</a></div><div class="ttdef"><b>Definition:</b> VisualScript.h:186</div></div>
<div class="ttc" id="aclassez_memory_utils_htm_a3b8a00dbb82f1a12a0f05b9d94e4fffb"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm#a3b8a00dbb82f1a12a0f05b9d94e4fffb">ezMemoryUtils::AlignForwards</a></div><div class="ttdeci">static T * AlignForwards(T *pPtr, size_t uiAlignment)</div><div class="ttdoc">Aligns the pointer ptr by moving its address forwards to the next multiple of uiAlignment.</div></div>
<div class="ttc" id="aclassez_array_ptr_htm_a9f222695f57e4cf200e07135dbbd7edd"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">ezArrayPtr::GetCount</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezUInt32 GetCount() const</div><div class="ttdoc">Returns the number of elements in the array.</div><div class="ttdef"><b>Definition:</b> ArrayPtr.h:142</div></div>
<div class="ttc" id="aclassez_stream_reader_htm_a9b8ce20de04610d28b4118ff23b42020"><div class="ttname"><a href="../../d2/d19/classez_stream_reader.htm#a9b8ce20de04610d28b4118ff23b42020">ezStreamReader::ReadBytes</a></div><div class="ttdeci">virtual ezUInt64 ReadBytes(void *pReadBuffer, ezUInt64 uiBytesToRead)=0</div><div class="ttdoc">Reads a raw number of bytes into the read buffer, this is the only method which has to be implemented...</div></div>
<div class="ttc" id="aclassez_script_coroutine_htm"><div class="ttname"><a href="../../d3/d37/classez_script_coroutine.htm">ezScriptCoroutine</a></div><div class="ttdoc">Base class of script coroutines.</div><div class="ttdef"><b>Definition:</b> ScriptCoroutine.h:34</div></div>
<div class="ttc" id="astructez_typed_pointer_htm"><div class="ttname"><a href="../../d3/d1f/structez_typed_pointer.htm">ezTypedPointer</a></div><div class="ttdoc">A typed raw pointer.</div><div class="ttdef"><b>Definition:</b> TypedPointer.h:12</div></div>
<div class="ttc" id="aclassez_variant_htm"><div class="ttname"><a href="../../de/de6/classez_variant.htm">ezVariant</a></div><div class="ttdoc">ezVariant is a class that can store different types of variables, which is useful in situations where...</div><div class="ttdef"><b>Definition:</b> Variant.h:43</div></div>
<div class="ttc" id="astructez_visual_script_data_description_1_1_data_offset_htm"><div class="ttname"><a href="../../da/dfe/structez_visual_script_data_description_1_1_data_offset.htm">ezVisualScriptDataDescription::DataOffset</a></div><div class="ttdef"><b>Definition:</b> VisualScriptData.h:9</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_103378c88ff4c88de6bfabe12da9ec96.htm">EnginePlugins</a></li><li class="navelem"><a class="el" href="../../dir_fd6ca2c49d94c8469eba18ba47e441f3.htm">VisualScriptPlugin</a></li><li class="navelem"><a class="el" href="../../dir_a5717271583c0b9d0429740eb2ab8606.htm">Runtime</a></li><li class="navelem"><b>VisualScript_inl.h</b></li>
    <li class="footer">Generated on Sun Aug 25 2024 13:06:25 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
