<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: ezRTTI Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 22.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('dd/d19/classez_r_t_t_i.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="../../d7/d77/classez_r_t_t_i-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ezRTTI Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>This enumerable class holds information about reflected types. Each instance represents one type that is known to the reflection system.  
 <a href="../../dd/d19/classez_r_t_t_i.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../de/dd7/_r_t_t_i_8h_source.htm">RTTI.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for ezRTTI:</div>
<div class="dyncontent">
<div class="center"><img src="../../d0/dab/classez_r_t_t_i__inherit__graph.png" border="0" usemap="#ez_r_t_t_i_inherit__map" alt="Inheritance graph"/></div>
<map name="ez_r_t_t_i_inherit__map" id="ez_r_t_t_i_inherit__map">
<area shape="rect" title="This enumerable class holds information about reflected types. Each instance represents one type that..." alt="" coords="67,155,132,181"/>
<area shape="rect" href="../../dd/d98/classez_phantom_r_t_t_i.htm" title=" " alt="" coords="38,229,161,256"/>
<area shape="rect" href="../../d5/d0b/classez_enumerable.htm" title=" " alt="" coords="5,80,193,107"/>
<area shape="rect" href="../../d4/d02/classez_no_base.htm" title="Dummy type to pass to templates and macros that expect a base type for a class that has no base." alt="" coords="56,5,143,32"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a2da5a8c1da182a424a9fdb32e7cc6227"><td class="memItemLeft" align="right" valign="top"><a id="a2da5a8c1da182a424a9fdb32e7cc6227"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d19/classez_r_t_t_i.htm#a2da5a8c1da182a424a9fdb32e7cc6227">ezRTTI</a> (const char *szName, const <a class="el" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a> *pParentType, ezUInt32 uiTypeSize, ezUInt32 uiTypeVersion, ezUInt32 uiVariantType, <a class="el" href="../../d1/dec/structez_bitflags.htm">ezBitflags</a>&lt; <a class="el" href="../../da/dee/structez_type_flags.htm">ezTypeFlags</a> &gt; flags, <a class="el" href="../../db/df8/structez_r_t_t_i_allocator.htm">ezRTTIAllocator</a> *pAllocator, <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; <a class="el" href="../../d6/d81/classez_abstract_property.htm">ezAbstractProperty</a> * &gt; properties, <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; <a class="el" href="../../d6/d81/classez_abstract_property.htm">ezAbstractProperty</a> * &gt; functions, <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; <a class="el" href="../../d7/d48/classez_property_attribute.htm">ezPropertyAttribute</a> * &gt; attributes, <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; <a class="el" href="../../d5/d1b/classez_abstract_message_handler.htm">ezAbstractMessageHandler</a> * &gt; messageHandlers, <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; <a class="el" href="../../d9/d44/structez_message_sender_info.htm">ezMessageSenderInfo</a> &gt; messageSenders, const <a class="el" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a> *(*fnVerifyParent)())</td></tr>
<tr class="memdesc:a2da5a8c1da182a424a9fdb32e7cc6227"><td class="mdescLeft">&#160;</td><td class="mdescRight">The constructor requires all the information about the type that this object represents. <br /></td></tr>
<tr class="separator:a2da5a8c1da182a424a9fdb32e7cc6227"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a43da286be40a74f38bd0f2f72bb439"><td class="memItemLeft" align="right" valign="top"><a id="a7a43da286be40a74f38bd0f2f72bb439"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d19/classez_r_t_t_i.htm#a7a43da286be40a74f38bd0f2f72bb439">VerifyCorrectness</a> () const</td></tr>
<tr class="memdesc:a7a43da286be40a74f38bd0f2f72bb439"><td class="mdescLeft">&#160;</td><td class="mdescRight">Can be called in debug builds to check that all reflected objects are correctly set up. <br /></td></tr>
<tr class="separator:a7a43da286be40a74f38bd0f2f72bb439"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45969a3b7f012c33835a1138b5b29bf6"><td class="memItemLeft" align="right" valign="top"><a id="a45969a3b7f012c33835a1138b5b29bf6"></a>
const EZ_ALWAYS_INLINE char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d19/classez_r_t_t_i.htm#a45969a3b7f012c33835a1138b5b29bf6">GetTypeName</a> () const</td></tr>
<tr class="memdesc:a45969a3b7f012c33835a1138b5b29bf6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the name of this type. <br /></td></tr>
<tr class="separator:a45969a3b7f012c33835a1138b5b29bf6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad065abae73e88820f8bc9a7f87ec5860"><td class="memItemLeft" align="right" valign="top"><a id="ad065abae73e88820f8bc9a7f87ec5860"></a>
EZ_ALWAYS_INLINE ezUInt64&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d19/classez_r_t_t_i.htm#ad065abae73e88820f8bc9a7f87ec5860">GetTypeNameHash</a> () const</td></tr>
<tr class="memdesc:ad065abae73e88820f8bc9a7f87ec5860"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the hash of the name of this type. <br /></td></tr>
<tr class="separator:ad065abae73e88820f8bc9a7f87ec5860"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4887d66c7de28b4886359cb93d7efe5f"><td class="memItemLeft" align="right" valign="top"><a id="a4887d66c7de28b4886359cb93d7efe5f"></a>
const EZ_ALWAYS_INLINE <a class="el" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d19/classez_r_t_t_i.htm#a4887d66c7de28b4886359cb93d7efe5f">GetParentType</a> () const</td></tr>
<tr class="memdesc:a4887d66c7de28b4886359cb93d7efe5f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the type that is the base class of this type. May be nullptr if this type has no base class. <br /></td></tr>
<tr class="separator:a4887d66c7de28b4886359cb93d7efe5f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abbf81f248b97259ac66a7f6863475815"><td class="memItemLeft" align="right" valign="top"><a id="abbf81f248b97259ac66a7f6863475815"></a>
EZ_ALWAYS_INLINE <a class="el" href="../../da/d6c/structez_variant_type.htm#a91ecf53decb31d57981c71043fa30299">ezVariantType::Enum</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d19/classez_r_t_t_i.htm#abbf81f248b97259ac66a7f6863475815">GetVariantType</a> () const</td></tr>
<tr class="memdesc:abbf81f248b97259ac66a7f6863475815"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the corresponding variant type for this type or Invalid if there is none. <br /></td></tr>
<tr class="separator:abbf81f248b97259ac66a7f6863475815"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a19672c9984fefea00552f02dd010ae6e"><td class="memItemLeft" align="right" valign="top"><a id="a19672c9984fefea00552f02dd010ae6e"></a>
EZ_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d19/classez_r_t_t_i.htm#a19672c9984fefea00552f02dd010ae6e">IsDerivedFrom</a> (const <a class="el" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a> *pBaseType) const</td></tr>
<tr class="memdesc:a19672c9984fefea00552f02dd010ae6e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if this type is derived from the given type (or of the same type). <br /></td></tr>
<tr class="separator:a19672c9984fefea00552f02dd010ae6e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a27fdc49f927f74d2946a73975eb7accb"><td class="memTemplParams" colspan="2"><a id="a27fdc49f927f74d2946a73975eb7accb"></a>
template&lt;typename BASE &gt; </td></tr>
<tr class="memitem:a27fdc49f927f74d2946a73975eb7accb"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../dd/d19/classez_r_t_t_i.htm#a27fdc49f927f74d2946a73975eb7accb">IsDerivedFrom</a> () const</td></tr>
<tr class="memdesc:a27fdc49f927f74d2946a73975eb7accb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if this type is derived from or identical to the given type. <br /></td></tr>
<tr class="separator:a27fdc49f927f74d2946a73975eb7accb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee421c139ec5b1a076d6a3d1f130b4ec"><td class="memItemLeft" align="right" valign="top"><a id="aee421c139ec5b1a076d6a3d1f130b4ec"></a>
EZ_ALWAYS_INLINE <a class="el" href="../../db/df8/structez_r_t_t_i_allocator.htm">ezRTTIAllocator</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d19/classez_r_t_t_i.htm#aee421c139ec5b1a076d6a3d1f130b4ec">GetAllocator</a> () const</td></tr>
<tr class="memdesc:aee421c139ec5b1a076d6a3d1f130b4ec"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the object through which instances of this type can be allocated. <br /></td></tr>
<tr class="separator:aee421c139ec5b1a076d6a3d1f130b4ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b1e78c55d96c97ec0d0bc17e7ab187e"><td class="memItemLeft" align="right" valign="top"><a id="a6b1e78c55d96c97ec0d0bc17e7ab187e"></a>
const EZ_ALWAYS_INLINE <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; <a class="el" href="../../d6/d81/classez_abstract_property.htm">ezAbstractProperty</a> * &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d19/classez_r_t_t_i.htm#a6b1e78c55d96c97ec0d0bc17e7ab187e">GetProperties</a> () const</td></tr>
<tr class="memdesc:a6b1e78c55d96c97ec0d0bc17e7ab187e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the array of properties that this type has. Does NOT include properties from base classes. <br /></td></tr>
<tr class="separator:a6b1e78c55d96c97ec0d0bc17e7ab187e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a030542bb9c73c85388b67e0afa94b87a"><td class="memItemLeft" align="right" valign="top"><a id="a030542bb9c73c85388b67e0afa94b87a"></a>
const EZ_ALWAYS_INLINE <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; <a class="el" href="../../d3/d4c/classez_abstract_function_property.htm">ezAbstractFunctionProperty</a> * &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetFunctions</b> () const</td></tr>
<tr class="separator:a030542bb9c73c85388b67e0afa94b87a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9cebf2e7cb431b92e1865ed879a80e2a"><td class="memItemLeft" align="right" valign="top"><a id="a9cebf2e7cb431b92e1865ed879a80e2a"></a>
const EZ_ALWAYS_INLINE <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; <a class="el" href="../../d7/d48/classez_property_attribute.htm">ezPropertyAttribute</a> * &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetAttributes</b> () const</td></tr>
<tr class="separator:a9cebf2e7cb431b92e1865ed879a80e2a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a326c1f16bf61c2c3dc109626ece9ac5d"><td class="memTemplParams" colspan="2"><a id="a326c1f16bf61c2c3dc109626ece9ac5d"></a>
template&lt;typename Type &gt; </td></tr>
<tr class="memitem:a326c1f16bf61c2c3dc109626ece9ac5d"><td class="memTemplItemLeft" align="right" valign="top">const Type *&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../dd/d19/classez_r_t_t_i.htm#a326c1f16bf61c2c3dc109626ece9ac5d">GetAttributeByType</a> () const</td></tr>
<tr class="memdesc:a326c1f16bf61c2c3dc109626ece9ac5d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the first attribute that derives from the given type, or nullptr if nothing is found. <br /></td></tr>
<tr class="separator:a326c1f16bf61c2c3dc109626ece9ac5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f4b1d443f9108cb40add6c0f02e475c"><td class="memItemLeft" align="right" valign="top"><a id="a5f4b1d443f9108cb40add6c0f02e475c"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d19/classez_r_t_t_i.htm#a5f4b1d443f9108cb40add6c0f02e475c">GetAllProperties</a> (<a class="el" href="../../d8/deb/classez_hybrid_array.htm">ezHybridArray</a>&lt; <a class="el" href="../../d6/d81/classez_abstract_property.htm">ezAbstractProperty</a> *, 32 &gt; &amp;out_Properties) const</td></tr>
<tr class="memdesc:a5f4b1d443f9108cb40add6c0f02e475c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the list of properties that this type has, including derived properties from all base classes. <br /></td></tr>
<tr class="separator:a5f4b1d443f9108cb40add6c0f02e475c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae98b61a4ae143728cd4051692adad9e"><td class="memItemLeft" align="right" valign="top"><a id="aae98b61a4ae143728cd4051692adad9e"></a>
EZ_ALWAYS_INLINE ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d19/classez_r_t_t_i.htm#aae98b61a4ae143728cd4051692adad9e">GetTypeSize</a> () const</td></tr>
<tr class="memdesc:aae98b61a4ae143728cd4051692adad9e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the size (in bytes) of an instance of this type. <br /></td></tr>
<tr class="separator:aae98b61a4ae143728cd4051692adad9e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af080364f76236f0355e90a6ce52eb47c"><td class="memItemLeft" align="right" valign="top"><a id="af080364f76236f0355e90a6ce52eb47c"></a>
EZ_ALWAYS_INLINE ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d19/classez_r_t_t_i.htm#af080364f76236f0355e90a6ce52eb47c">GetTypeVersion</a> () const</td></tr>
<tr class="memdesc:af080364f76236f0355e90a6ce52eb47c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the version number of this type. <br /></td></tr>
<tr class="separator:af080364f76236f0355e90a6ce52eb47c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab16d8753fb79f298b60443b726924f63"><td class="memItemLeft" align="right" valign="top"><a id="ab16d8753fb79f298b60443b726924f63"></a>
const EZ_ALWAYS_INLINE <a class="el" href="../../d1/dec/structez_bitflags.htm">ezBitflags</a>&lt; <a class="el" href="../../da/dee/structez_type_flags.htm">ezTypeFlags</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d19/classez_r_t_t_i.htm#ab16d8753fb79f298b60443b726924f63">GetTypeFlags</a> () const</td></tr>
<tr class="memdesc:ab16d8753fb79f298b60443b726924f63"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the type flags. <br /></td></tr>
<tr class="separator:ab16d8753fb79f298b60443b726924f63"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af9c07f0b02b394ffc555f08039b7e127"><td class="memItemLeft" align="right" valign="top"><a id="af9c07f0b02b394ffc555f08039b7e127"></a>
<a class="el" href="../../d6/d81/classez_abstract_property.htm">ezAbstractProperty</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d19/classez_r_t_t_i.htm#af9c07f0b02b394ffc555f08039b7e127">FindPropertyByName</a> (const char *szName, bool bSearchBaseTypes=true) const</td></tr>
<tr class="memdesc:af9c07f0b02b394ffc555f08039b7e127"><td class="mdescLeft">&#160;</td><td class="mdescRight">Will iterate over all properties of this type and (optionally) the base types to search for a property with the given name. <br /></td></tr>
<tr class="separator:af9c07f0b02b394ffc555f08039b7e127"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac7b88d5908b173b0445d0057243be28a"><td class="memItemLeft" align="right" valign="top"><a id="ac7b88d5908b173b0445d0057243be28a"></a>
const EZ_ALWAYS_INLINE char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d19/classez_r_t_t_i.htm#ac7b88d5908b173b0445d0057243be28a">GetPluginName</a> () const</td></tr>
<tr class="memdesc:ac7b88d5908b173b0445d0057243be28a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the name of the plugin which this type is declared in. <br /></td></tr>
<tr class="separator:ac7b88d5908b173b0445d0057243be28a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae20531c5bfc4900cb9149d51f63cadb3"><td class="memItemLeft" align="right" valign="top"><a id="ae20531c5bfc4900cb9149d51f63cadb3"></a>
const EZ_ALWAYS_INLINE <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; <a class="el" href="../../d5/d1b/classez_abstract_message_handler.htm">ezAbstractMessageHandler</a> * &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d19/classez_r_t_t_i.htm#ae20531c5bfc4900cb9149d51f63cadb3">GetMessageHandlers</a> () const</td></tr>
<tr class="memdesc:ae20531c5bfc4900cb9149d51f63cadb3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the array of message handlers that this type has. <br /></td></tr>
<tr class="separator:ae20531c5bfc4900cb9149d51f63cadb3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac28f9ce3e86f1c63e402e0f30cff9698"><td class="memItemLeft" align="right" valign="top"><a id="ac28f9ce3e86f1c63e402e0f30cff9698"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d19/classez_r_t_t_i.htm#ac28f9ce3e86f1c63e402e0f30cff9698">DispatchMessage</a> (void *pInstance, <a class="el" href="../../dd/d22/classez_message.htm">ezMessage</a> &amp;msg) const</td></tr>
<tr class="memdesc:ac28f9ce3e86f1c63e402e0f30cff9698"><td class="mdescLeft">&#160;</td><td class="mdescRight">Dispatches the given message to the proper message handler, if there is one available. Returns true if so, false if no message handler for this type exists. <br /></td></tr>
<tr class="separator:ac28f9ce3e86f1c63e402e0f30cff9698"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a82b1413e8e0c4205ae7383e5e7c9c91d"><td class="memItemLeft" align="right" valign="top"><a id="a82b1413e8e0c4205ae7383e5e7c9c91d"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d19/classez_r_t_t_i.htm#a82b1413e8e0c4205ae7383e5e7c9c91d">DispatchMessage</a> (const void *pInstance, <a class="el" href="../../dd/d22/classez_message.htm">ezMessage</a> &amp;msg) const</td></tr>
<tr class="memdesc:a82b1413e8e0c4205ae7383e5e7c9c91d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Dispatches the given message to the proper message handler, if there is one available. Returns true if so, false if no message handler for this type exists. <br /></td></tr>
<tr class="separator:a82b1413e8e0c4205ae7383e5e7c9c91d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac62ddda33b64a09a59f0fdb636dc6d75"><td class="memTemplParams" colspan="2"><a id="ac62ddda33b64a09a59f0fdb636dc6d75"></a>
template&lt;typename MessageType &gt; </td></tr>
<tr class="memitem:ac62ddda33b64a09a59f0fdb636dc6d75"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../dd/d19/classez_r_t_t_i.htm#ac62ddda33b64a09a59f0fdb636dc6d75">CanHandleMessage</a> () const</td></tr>
<tr class="memdesc:ac62ddda33b64a09a59f0fdb636dc6d75"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether this type can handle the given message type. <br /></td></tr>
<tr class="separator:ac62ddda33b64a09a59f0fdb636dc6d75"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adafefbc0987a607b461846687acaa836"><td class="memItemLeft" align="right" valign="top"><a id="adafefbc0987a607b461846687acaa836"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d19/classez_r_t_t_i.htm#adafefbc0987a607b461846687acaa836">CanHandleMessage</a> (ezMessageId id) const</td></tr>
<tr class="memdesc:adafefbc0987a607b461846687acaa836"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether this type can handle the message type with the given id. <br /></td></tr>
<tr class="separator:adafefbc0987a607b461846687acaa836"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab0edf401eaf325cf1c8e93cc0d2e1d6b"><td class="memItemLeft" align="right" valign="top"><a id="ab0edf401eaf325cf1c8e93cc0d2e1d6b"></a>
const EZ_ALWAYS_INLINE <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; <a class="el" href="../../d9/d44/structez_message_sender_info.htm">ezMessageSenderInfo</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetMessageSender</b> () const</td></tr>
<tr class="separator:ab0edf401eaf325cf1c8e93cc0d2e1d6b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:ac9bac69084affe20bbaf00bd02ef2356"><td class="memItemLeft" align="right" valign="top"><a id="ac9bac69084affe20bbaf00bd02ef2356"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d19/classez_r_t_t_i.htm#ac9bac69084affe20bbaf00bd02ef2356">VerifyCorrectnessForAllTypes</a> ()</td></tr>
<tr class="memdesc:ac9bac69084affe20bbaf00bd02ef2356"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calls <a class="el" href="../../dd/d19/classez_r_t_t_i.htm#a7a43da286be40a74f38bd0f2f72bb439" title="Can be called in debug builds to check that all reflected objects are correctly set up.">VerifyCorrectness()</a> on all <a class="el" href="../../dd/d19/classez_r_t_t_i.htm" title="This enumerable class holds information about reflected types. Each instance represents one type that...">ezRTTI</a> objects. <br /></td></tr>
<tr class="separator:ac9bac69084affe20bbaf00bd02ef2356"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d7b108d56e0b4da4ac32a6d0748001f"><td class="memItemLeft" align="right" valign="top"><a id="a2d7b108d56e0b4da4ac32a6d0748001f"></a>
static <a class="el" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d19/classez_r_t_t_i.htm#a2d7b108d56e0b4da4ac32a6d0748001f">FindTypeByName</a> (const char *szName)</td></tr>
<tr class="memdesc:a2d7b108d56e0b4da4ac32a6d0748001f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Searches all <a class="el" href="../../dd/d19/classez_r_t_t_i.htm" title="This enumerable class holds information about reflected types. Each instance represents one type that...">ezRTTI</a> instances for the one with the given name, or nullptr if no such type exists. <br /></td></tr>
<tr class="separator:a2d7b108d56e0b4da4ac32a6d0748001f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad60f658c85396f5998d6973f65bea32c"><td class="memItemLeft" align="right" valign="top"><a id="ad60f658c85396f5998d6973f65bea32c"></a>
static <a class="el" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d19/classez_r_t_t_i.htm#ad60f658c85396f5998d6973f65bea32c">FindTypeByNameHash</a> (ezUInt64 uiNameHash)</td></tr>
<tr class="memdesc:ad60f658c85396f5998d6973f65bea32c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Searches all <a class="el" href="../../dd/d19/classez_r_t_t_i.htm" title="This enumerable class holds information about reflected types. Each instance represents one type that...">ezRTTI</a> instances for the one with the given hashed name, or nullptr if no such type exists. <br /></td></tr>
<tr class="separator:ad60f658c85396f5998d6973f65bea32c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a964033649df8dd3f6dba3362a3604e3a"><td class="memItemLeft" align="right" valign="top"><a id="a964033649df8dd3f6dba3362a3604e3a"></a>
static <a class="el" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>FindTypeByNameHash32</b> (ezUInt32 uiNameHash)</td></tr>
<tr class="separator:a964033649df8dd3f6dba3362a3604e3a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad89b0cc4f0d816dabbace824b6eeb452"><td class="memItemLeft" align="right" valign="top">static const <a class="el" href="../../d2/d4f/classez_dynamic_array.htm">ezDynamicArray</a>&lt; const <a class="el" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a> * &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d19/classez_r_t_t_i.htm#ad89b0cc4f0d816dabbace824b6eeb452">GetAllTypesDerivedFrom</a> (const <a class="el" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a> *pBaseType, <a class="el" href="../../d2/d4f/classez_dynamic_array.htm">ezDynamicArray</a>&lt; const <a class="el" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a> * &gt; &amp;out_DerivedTypes, bool bSortByName)</td></tr>
<tr class="memdesc:ad89b0cc4f0d816dabbace824b6eeb452"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes all types derived from <em>pBaseType</em> to the provided array. Optionally sorts the array by type name to yield a stable result.  <a href="../../dd/d19/classez_r_t_t_i.htm#ad89b0cc4f0d816dabbace824b6eeb452">More...</a><br /></td></tr>
<tr class="separator:ad89b0cc4f0d816dabbace824b6eeb452"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_methods_classez_no_base"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_classez_no_base')"><img src="../../closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="../../d4/d02/classez_no_base.htm">ezNoBase</a></td></tr>
<tr class="memitem:ad676281ced156eb886aa4f74a2a45d2f inherit pub_static_methods_classez_no_base"><td class="memItemLeft" align="right" valign="top"><a id="ad676281ced156eb886aa4f74a2a45d2f"></a>
static const <a class="el" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetStaticRTTI</b> ()</td></tr>
<tr class="separator:ad676281ced156eb886aa4f74a2a45d2f inherit pub_static_methods_classez_no_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:acac0007fd4e0a05b46f88c1fb08c35cf"><td class="memItemLeft" align="right" valign="top"><a id="acac0007fd4e0a05b46f88c1fb08c35cf"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>UpdateType</b> (const <a class="el" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a> *pParentType, ezUInt32 uiTypeSize, ezUInt32 uiTypeVersion, ezUInt32 uiVariantType, <a class="el" href="../../d1/dec/structez_bitflags.htm">ezBitflags</a>&lt; <a class="el" href="../../da/dee/structez_type_flags.htm">ezTypeFlags</a> &gt; flags)</td></tr>
<tr class="separator:acac0007fd4e0a05b46f88c1fb08c35cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ababeac755762f76e8d9f6a4a29aa0b5d"><td class="memItemLeft" align="right" valign="top"><a id="ababeac755762f76e8d9f6a4a29aa0b5d"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>RegisterType</b> ()</td></tr>
<tr class="separator:ababeac755762f76e8d9f6a4a29aa0b5d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2af5fc905888919ba7209a2e7db530ef"><td class="memItemLeft" align="right" valign="top"><a id="a2af5fc905888919ba7209a2e7db530ef"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>UnregisterType</b> ()</td></tr>
<tr class="separator:a2af5fc905888919ba7209a2e7db530ef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75029d796d2962a2a745f010950690f5"><td class="memItemLeft" align="right" valign="top"><a id="a75029d796d2962a2a745f010950690f5"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>GatherDynamicMessageHandlers</b> ()</td></tr>
<tr class="separator:a75029d796d2962a2a745f010950690f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a732da7ba7f3789027331b226c32b7a7b"><td class="memItemLeft" align="right" valign="top"><a id="a732da7ba7f3789027331b226c32b7a7b"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetupParentHierarchy</b> ()</td></tr>
<tr class="separator:a732da7ba7f3789027331b226c32b7a7b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a8dcb8ce7743a79efa66c51ebb2281eb0"><td class="memItemLeft" align="right" valign="top"><a id="a8dcb8ce7743a79efa66c51ebb2281eb0"></a>
const char *&#160;</td><td class="memItemRight" valign="bottom"><b>m_szPluginName</b></td></tr>
<tr class="separator:a8dcb8ce7743a79efa66c51ebb2281eb0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff121303a3e35b19f8dcf747ea53cde7"><td class="memItemLeft" align="right" valign="top"><a id="aff121303a3e35b19f8dcf747ea53cde7"></a>
const char *&#160;</td><td class="memItemRight" valign="bottom"><b>m_szTypeName</b></td></tr>
<tr class="separator:aff121303a3e35b19f8dcf747ea53cde7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acad213f485865605c31a0974de12d6d5"><td class="memItemLeft" align="right" valign="top"><a id="acad213f485865605c31a0974de12d6d5"></a>
<a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; <a class="el" href="../../d6/d81/classez_abstract_property.htm">ezAbstractProperty</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_Properties</b></td></tr>
<tr class="separator:acad213f485865605c31a0974de12d6d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2ee6cdb6b9a52aef8f9d71a3246cbef"><td class="memItemLeft" align="right" valign="top"><a id="ac2ee6cdb6b9a52aef8f9d71a3246cbef"></a>
<a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; <a class="el" href="../../d3/d4c/classez_abstract_function_property.htm">ezAbstractFunctionProperty</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_Functions</b></td></tr>
<tr class="separator:ac2ee6cdb6b9a52aef8f9d71a3246cbef"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e911036c6d9a2fc032f617607a09049"><td class="memItemLeft" align="right" valign="top"><a id="a9e911036c6d9a2fc032f617607a09049"></a>
<a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; <a class="el" href="../../d7/d48/classez_property_attribute.htm">ezPropertyAttribute</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_Attributes</b></td></tr>
<tr class="separator:a9e911036c6d9a2fc032f617607a09049"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43b2eacbb0a584534301f1a1fe0ee69c"><td class="memItemLeft" align="right" valign="top"><a id="a43b2eacbb0a584534301f1a1fe0ee69c"></a>
const <a class="el" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>m_pParentType</b></td></tr>
<tr class="separator:a43b2eacbb0a584534301f1a1fe0ee69c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d5485108b61ed2c5a072ccf79783a0f"><td class="memItemLeft" align="right" valign="top"><a id="a7d5485108b61ed2c5a072ccf79783a0f"></a>
<a class="el" href="../../db/df8/structez_r_t_t_i_allocator.htm">ezRTTIAllocator</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>m_pAllocator</b></td></tr>
<tr class="separator:a7d5485108b61ed2c5a072ccf79783a0f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c548946d1d3fdc940946bb91a08fdc0"><td class="memItemLeft" align="right" valign="top"><a id="a3c548946d1d3fdc940946bb91a08fdc0"></a>
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>m_uiVariantType</b></td></tr>
<tr class="separator:a3c548946d1d3fdc940946bb91a08fdc0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aabc6eed004a8044dfdb73520b0043186"><td class="memItemLeft" align="right" valign="top"><a id="aabc6eed004a8044dfdb73520b0043186"></a>
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>m_uiTypeSize</b></td></tr>
<tr class="separator:aabc6eed004a8044dfdb73520b0043186"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af59eec5db31e42848e81cb9072901946"><td class="memItemLeft" align="right" valign="top"><a id="af59eec5db31e42848e81cb9072901946"></a>
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>m_uiTypeVersion</b> = 0</td></tr>
<tr class="separator:af59eec5db31e42848e81cb9072901946"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0460589c5f25dad9c470f396ea39934d"><td class="memItemLeft" align="right" valign="top"><a id="a0460589c5f25dad9c470f396ea39934d"></a>
ezUInt64&#160;</td><td class="memItemRight" valign="bottom"><b>m_uiTypeNameHash</b> = 0</td></tr>
<tr class="separator:a0460589c5f25dad9c470f396ea39934d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae1000455d94a6394609d25676ace3143"><td class="memItemLeft" align="right" valign="top"><a id="ae1000455d94a6394609d25676ace3143"></a>
<a class="el" href="../../d1/dec/structez_bitflags.htm">ezBitflags</a>&lt; <a class="el" href="../../da/dee/structez_type_flags.htm">ezTypeFlags</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_TypeFlags</b></td></tr>
<tr class="separator:ae1000455d94a6394609d25676ace3143"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6b4b0dbb2032d5c8dc3949935919799"><td class="memItemLeft" align="right" valign="top"><a id="ac6b4b0dbb2032d5c8dc3949935919799"></a>
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>m_uiMsgIdOffset</b></td></tr>
<tr class="separator:ac6b4b0dbb2032d5c8dc3949935919799"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0be8ba6124d8df49c9dfc23422f85bcc"><td class="memItemLeft" align="right" valign="top"><a id="a0be8ba6124d8df49c9dfc23422f85bcc"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>m_bGatheredDynamicMessageHandlers</b></td></tr>
<tr class="separator:a0be8ba6124d8df49c9dfc23422f85bcc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a643d58890c1e8ca318442df8461d3ec8"><td class="memItemLeft" align="right" valign="top"><a id="a643d58890c1e8ca318442df8461d3ec8"></a>
const <a class="el" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a> *(*&#160;</td><td class="memItemRight" valign="bottom"><b>m_VerifyParent</b> )()</td></tr>
<tr class="separator:a643d58890c1e8ca318442df8461d3ec8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd9a484ad7e0d2062b567c3883b0b69a"><td class="memItemLeft" align="right" valign="top"><a id="afd9a484ad7e0d2062b567c3883b0b69a"></a>
<a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; <a class="el" href="../../d5/d1b/classez_abstract_message_handler.htm">ezAbstractMessageHandler</a> * &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_MessageHandlers</b></td></tr>
<tr class="separator:afd9a484ad7e0d2062b567c3883b0b69a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae588b69390a1ad158fc29603d9d78d28"><td class="memItemLeft" align="right" valign="top"><a id="ae588b69390a1ad158fc29603d9d78d28"></a>
<a class="el" href="../../d2/d4f/classez_dynamic_array.htm">ezDynamicArray</a>&lt; <a class="el" href="../../d5/d1b/classez_abstract_message_handler.htm">ezAbstractMessageHandler</a> *, <a class="el" href="../../d5/d90/structez_static_allocator_wrapper.htm">ezStaticAllocatorWrapper</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_DynamicMessageHandlers</b></td></tr>
<tr class="separator:ae588b69390a1ad158fc29603d9d78d28"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb93f0b342a614c4866e0edb881d34ed"><td class="memItemLeft" align="right" valign="top"><a id="acb93f0b342a614c4866e0edb881d34ed"></a>
<a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; <a class="el" href="../../d9/d44/structez_message_sender_info.htm">ezMessageSenderInfo</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_MessageSenders</b></td></tr>
<tr class="separator:acb93f0b342a614c4866e0edb881d34ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a89ff447e892bcc133d8eefe70e194140"><td class="memItemLeft" align="right" valign="top"><a id="a89ff447e892bcc133d8eefe70e194140"></a>
<a class="el" href="../../d8/deb/classez_hybrid_array.htm">ezHybridArray</a>&lt; const <a class="el" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a> *, 8 &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_ParentHierarchy</b></td></tr>
<tr class="separator:a89ff447e892bcc133d8eefe70e194140"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classez_enumerable"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classez_enumerable')"><img src="../../closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="../../d5/d0b/classez_enumerable.htm">ezEnumerable&lt; ezRTTI &gt;</a></td></tr>
<tr class="memitem:a6a9e0d84d59fb7c18b0600ec9a986098 inherit pro_attribs_classez_enumerable"><td class="memItemLeft" align="right" valign="top"><a id="a6a9e0d84d59fb7c18b0600ec9a986098"></a>
<a class="el" href="../../d5/d0b/classez_enumerable.htm">ezEnumerable</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>m_pNextInstance</b></td></tr>
<tr class="separator:a6a9e0d84d59fb7c18b0600ec9a986098 inherit pro_attribs_classez_enumerable"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>This enumerable class holds information about reflected types. Each instance represents one type that is known to the reflection system. </p>
<p>Instances of this class are typically created through the macros from the <a class="el" href="../../d2/d39/_static_r_t_t_i_8h_source.htm">StaticRTTI.h</a> header. Each instance represents one type. This class holds information about derivation hierarchies and exposed properties. You can thus find out whether a type is derived from some base class and what properties of which types are available. Properties can then be read and modified on instances of this type. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="ad89b0cc4f0d816dabbace824b6eeb452"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ad89b0cc4f0d816dabbace824b6eeb452">&#9670;&nbsp;</a></span>GetAllTypesDerivedFrom()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="../../d2/d4f/classez_dynamic_array.htm">ezDynamicArray</a>&lt; const <a class="el" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a> * &gt; &amp; ezRTTI::GetAllTypesDerivedFrom </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a> *&#160;</td>
          <td class="paramname"><em>pBaseType</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d2/d4f/classez_dynamic_array.htm">ezDynamicArray</a>&lt; const <a class="el" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a> * &gt; &amp;&#160;</td>
          <td class="paramname"><em>out_DerivedTypes</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bSortByName</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Writes all types derived from <em>pBaseType</em> to the provided array. Optionally sorts the array by type name to yield a stable result. </p>
<p>Returns the provided array, such that the function can be used in a foreach loop right away. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Reflection/Implementation/<a class="el" href="../../de/dd7/_r_t_t_i_8h_source.htm">RTTI.h</a></li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Reflection/Implementation/<a class="el" href="../../db/db5/_property_attributes_8h_source.htm">PropertyAttributes.h</a></li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Reflection/Implementation/RTTI.cpp</li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a></li>
    <li class="footer">Generated on Fri Nov 18 2022 14:48:11 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
