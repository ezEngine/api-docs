<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Platform/Android/Utils/AndroidJni.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 25.03</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('dd/de6/_android_jni_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">AndroidJni.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#if EZ_ENABLED(EZ_PLATFORM_ANDROID)</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160; </div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#  include &lt;Foundation/Logging/Log.h&gt;</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="preprocessor">#  include &lt;Foundation/Strings/StringBuilder.h&gt;</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#  include &lt;Foundation/Types/Delegate.h&gt;</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#  include &lt;Foundation/Types/Enum.h&gt;</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#  include &lt;jni.h&gt;</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160; </div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">class </span>ezJniObject;</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="keyword">class </span>ezJniClass;</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="keyword">class </span>ezJniString;</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160; </div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keyword">struct </span>ezJniError</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;{</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;  <span class="keyword">using</span> StorageType = ezUInt8;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;  <span class="keyword">enum</span> Enum</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;  {</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    SUCCESS = 0,</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160; </div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    PENDING_EXCEPTION,</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    NO_MATCHING_METHOD,</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160; </div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    AMBIGUOUS_CALL,</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160; </div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    NO_MATCHING_FIELD,</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160; </div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    CALL_ON_NULL_OBJECT,</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160; </div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    CLASS_NOT_FOUND,</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160; </div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    Default = SUCCESS</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;  };</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  EZ_ENUM_TO_STRING(SUCCESS, PENDING_EXCEPTION, NO_MATCHING_METHOD, AMBIGUOUS_CALL, NO_MATCHING_FIELD, CALL_ON_NULL_OBJECT, CLASS_NOT_FOUND);</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;};</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160; </div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keyword">using</span> ezJniErrorState = <a class="code" href="../../d6/dd9/structez_enum.htm">ezEnum&lt;ezJniError&gt;</a>;</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keyword">using</span> ezJniErrorHandler = <a class="code" href="../../d5/d68/structez_delegate.htm">ezDelegate</a>&lt;void(ezJniErrorState)&gt;;</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160; </div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;<span class="keyword">class </span>EZ_FOUNDATION_DLL ezJniAttachment</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;{</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;  ezJniAttachment();</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160; </div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;  ~ezJniAttachment();</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160; </div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;  <span class="keyword">static</span> ezJniObject GetActivity();</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160; </div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;  <span class="keyword">static</span> JNIEnv* GetEnv();</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160; </div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;  <span class="keyword">static</span> ezJniErrorState GetLastError();</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160; </div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> ClearLastError();</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160; </div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">bool</span> HasPendingException();</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160; </div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;  <span class="keyword">static</span> ezJniObject GetPendingException();</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160; </div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> ClearPendingException();</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160; </div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> SetLastError(ezJniErrorState state);</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160; </div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">bool</span> FailOnPendingErrorOrException();</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160; </div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;  <span class="keywordtype">void</span> InstallErrorHandler(ezJniErrorHandler onError);</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160; </div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;  <span class="keyword">static</span> thread_local JNIEnv* s_env;</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;  <span class="keyword">static</span> thread_local <span class="keywordtype">bool</span> s_ownsEnv;</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;  <span class="keyword">static</span> thread_local <span class="keywordtype">int</span> s_attachCount;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;  <span class="keyword">static</span> thread_local ezJniErrorState s_lastError;</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160; </div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;  ezJniAttachment(<span class="keyword">const</span> ezJniAttachment&amp;);</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;  ezJniAttachment&amp; operator=(<span class="keyword">const</span> ezJniAttachment&amp;);</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;};</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160; </div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;<span class="keyword">enum class</span> ezJniOwnerShip</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;{</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;  OWN,</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160; </div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;  COPY,</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160; </div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;  BORROW</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;};</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160; </div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="keyword">class </span>EZ_FOUNDATION_DLL ezJniObject</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;{</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;  ezJniObject();</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160; </div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;  <span class="keyword">inline</span> ezJniObject(jobject <span class="keywordtype">object</span>, ezJniOwnerShip ownerShip);</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160; </div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;  <span class="keyword">inline</span> ezJniObject(<span class="keyword">const</span> ezJniObject&amp; other);</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160; </div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;  <span class="keyword">inline</span> ezJniObject(ezJniObject&amp;&amp; other);</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160; </div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;  <span class="keyword">inline</span> ezJniObject&amp; operator=(<span class="keyword">const</span> ezJniObject&amp; other);</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160; </div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;  <span class="keyword">inline</span> ezJniObject&amp; operator=(ezJniObject&amp;&amp; other);</div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160; </div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;  <span class="keyword">inline</span> <span class="keyword">virtual</span> ~ezJniObject();</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160; </div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;  <span class="keyword">inline</span> <span class="keywordtype">bool</span> operator==(<span class="keyword">const</span> ezJniObject&amp; other) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160; </div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;  <span class="keyword">inline</span> <span class="keywordtype">bool</span> operator!=(<span class="keyword">const</span> ezJniObject&amp; other) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160; </div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;  <span class="keywordtype">bool</span> IsNull()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_object == <span class="keyword">nullptr</span>; }</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160; </div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;  jobject GetHandle() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160; </div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;  ezJniClass GetClass() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160; </div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;  ezJniString <a class="code" href="../../d7/d1a/namespaceez_conversion_utils.htm#aee7b9863241f562e0eb3aa7d360153b6">ToString</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160; </div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;  <span class="keywordtype">bool</span> IsInstanceOf(<span class="keyword">const</span> ezJniClass&amp; clazz) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160; </div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Ret = void, <span class="keyword">typename</span>... Args&gt;</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160;  Ret Call(<span class="keyword">const</span> <span class="keywordtype">char</span>* name, <span class="keyword">const</span> Args&amp;... args) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00337"></a><span class="lineno">  337</span>&#160; </div>
<div class="line"><a name="l00347"></a><span class="lineno">  347</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Ret&gt;</div>
<div class="line"><a name="l00348"></a><span class="lineno">  348</span>&#160;  Ret GetField(<span class="keyword">const</span> <span class="keywordtype">char</span>* name) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160; </div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;  <span class="keywordtype">void</span> SetField(<span class="keyword">const</span> <span class="keywordtype">char</span>* name, <span class="keyword">const</span> T&amp; arg) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160; </div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Ret, <span class="keyword">typename</span>... Args&gt;</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160;  Ret UnsafeCall(<span class="keyword">const</span> <span class="keywordtype">char</span>* name, <span class="keyword">const</span> <span class="keywordtype">char</span>* signature, <span class="keyword">const</span> Args&amp;... args) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160; </div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Ret&gt;</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;  Ret UnsafeGetField(<span class="keyword">const</span> <span class="keywordtype">char</span>* name, <span class="keyword">const</span> <span class="keywordtype">char</span>* signature) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160; </div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;  <span class="keywordtype">void</span> UnsafeSetField(<span class="keyword">const</span> <span class="keywordtype">char</span>* name, <span class="keyword">const</span> <span class="keywordtype">char</span>* signature, <span class="keyword">const</span> T&amp; arg) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160; </div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;  <span class="keyword">inline</span> <span class="keywordtype">void</span> Reset();</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160;  <span class="keyword">inline</span> jobject GetJObject() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160; </div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">void</span> DumpTypes(<span class="keyword">const</span> ezJniClass* inputTypes, <span class="keywordtype">int</span> N, <span class="keyword">const</span> ezJniClass* returnType);</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160; </div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">int</span> CompareMethodSpecificity(<span class="keyword">const</span> ezJniObject&amp; method1, <span class="keyword">const</span> ezJniObject&amp; method2);</div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">bool</span> IsMethodViable(<span class="keywordtype">bool</span> bStatic, <span class="keyword">const</span> ezJniObject&amp; candidateMethod, <span class="keyword">const</span> ezJniClass&amp; returnType, ezJniClass* inputTypes, <span class="keywordtype">int</span> N);</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;  <span class="keyword">static</span> ezJniObject FindMethod(<span class="keywordtype">bool</span> bStatic, <span class="keyword">const</span> <span class="keywordtype">char</span>* name, <span class="keyword">const</span> ezJniClass&amp; type, <span class="keyword">const</span> ezJniClass&amp; returnType, ezJniClass* inputTypes, <span class="keywordtype">int</span> N);</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160; </div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">int</span> CompareConstructorSpecificity(<span class="keyword">const</span> ezJniObject&amp; method1, <span class="keyword">const</span> ezJniObject&amp; method2);</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;  <span class="keyword">static</span> <span class="keywordtype">bool</span> IsConstructorViable(<span class="keyword">const</span> ezJniObject&amp; candidateMethod, ezJniClass* inputTypes, <span class="keywordtype">int</span> N);</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;  <span class="keyword">static</span> ezJniObject FindConstructor(<span class="keyword">const</span> ezJniClass&amp; type, ezJniClass* inputTypes, <span class="keywordtype">int</span> N);</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160; </div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;  jobject m_object;</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;  jclass m_class;</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;  <span class="keywordtype">bool</span> m_own;</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;};</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160; </div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;<span class="keyword">class </span>EZ_FOUNDATION_DLL ezJniString : <span class="keyword">public</span> ezJniObject</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;{</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;  ezJniString();</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160; </div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;  ezJniString(<span class="keyword">const</span> <span class="keywordtype">char</span>* str);</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160; </div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;  ezJniString(jstring <span class="keywordtype">string</span>, ezJniOwnerShip ownerShip);</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160; </div>
<div class="line"><a name="l00417"></a><span class="lineno">  417</span>&#160;  ezJniString(<span class="keyword">const</span> ezJniString&amp; other);</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160; </div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;  ezJniString(ezJniString&amp;&amp; other);</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160; </div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;  ezJniString&amp; operator=(<span class="keyword">const</span> ezJniString&amp; other);</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160; </div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;  ezJniString&amp; operator=(ezJniString&amp;&amp; other);</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160; </div>
<div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;  <span class="keyword">virtual</span> ~ezJniString();</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160; </div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span>* GetData() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160; </div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span>* m_utf;</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;};</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160; </div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;<span class="keyword">class </span>EZ_FOUNDATION_DLL ezJniClass : <span class="keyword">public</span> ezJniObject</div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160;{</div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;  ezJniClass();</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160; </div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;  ezJniClass(<span class="keyword">const</span> <span class="keywordtype">char</span>* className);</div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160; </div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;  ezJniClass(jclass clazz, ezJniOwnerShip ownerShip);</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160; </div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;  ezJniClass(<span class="keyword">const</span> ezJniClass&amp; other);</div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160; </div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;  ezJniClass(ezJniClass&amp;&amp; other);</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160; </div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;  ezJniClass&amp; operator=(<span class="keyword">const</span> ezJniClass&amp; other);</div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160; </div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;  ezJniClass&amp; operator=(ezJniClass&amp;&amp; other);</div>
<div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160; </div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;  jclass GetHandle() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160; </div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span>... Args&gt;</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;  ezJniObject CreateInstance(<span class="keyword">const</span> Args&amp;... args) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160; </div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;  <span class="keywordtype">bool</span> IsAssignableFrom(<span class="keyword">const</span> ezJniClass&amp; other) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160; </div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;  <span class="keywordtype">bool</span> IsPrimitive();</div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160; </div>
<div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Ret = void, <span class="keyword">typename</span>... Args&gt;</div>
<div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;  Ret CallStatic(<span class="keyword">const</span> <span class="keywordtype">char</span>* name, <span class="keyword">const</span> Args&amp;... args) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160; </div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Ret&gt;</div>
<div class="line"><a name="l00535"></a><span class="lineno">  535</span>&#160;  Ret GetStaticField(<span class="keyword">const</span> <span class="keywordtype">char</span>* name) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160; </div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;  <span class="keywordtype">void</span> SetStaticField(<span class="keyword">const</span> <span class="keywordtype">char</span>* name, <span class="keyword">const</span> T&amp; arg) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160; </div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Ret, <span class="keyword">typename</span>... Args&gt;</div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;  Ret UnsafeCallStatic(<span class="keyword">const</span> <span class="keywordtype">char</span>* name, <span class="keyword">const</span> <span class="keywordtype">char</span>* signature, <span class="keyword">const</span> Args&amp;... args) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160; </div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Ret&gt;</div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;  Ret UnsafeGetStaticField(<span class="keyword">const</span> <span class="keywordtype">char</span>* name, <span class="keyword">const</span> <span class="keywordtype">char</span>* signature) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160; </div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;  <span class="keywordtype">void</span> UnsafeSetStaticField(<span class="keyword">const</span> <span class="keywordtype">char</span>* name, <span class="keyword">const</span> <span class="keywordtype">char</span>* signature, <span class="keyword">const</span> T&amp; arg) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;};</div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160; </div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;<span class="keyword">class </span>EZ_FOUNDATION_DLL ezJniNullPtr</div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160;{</div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;  ezJniClass m_class;</div>
<div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160; </div>
<div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;  <span class="keyword">explicit</span> ezJniNullPtr(ezJniClass&amp; clazz);</div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160; </div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;  <span class="keyword">const</span> ezJniString GetTypeSignature() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;};</div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160; </div>
<div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;<span class="preprocessor">#  include &lt;Foundation/Platform/Android/Utils/AndroidJni.inl&gt;</span></div>
<div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160; </div>
<div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;<span class="preprocessor">#endif</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="astructez_delegate_htm"><div class="ttname"><a href="../../d5/d68/structez_delegate.htm">ezDelegate</a></div><div class="ttdoc">A generic delegate class which supports static functions and member functions.</div><div class="ttdef"><b>Definition:</b> Delegate.h:75</div></div>
<div class="ttc" id="astructez_enum_htm"><div class="ttname"><a href="../../d6/dd9/structez_enum.htm">ezEnum</a></div><div class="ttdoc">A custom enum implementation that allows to define the underlying storage type to control its memory ...</div><div class="ttdef"><b>Definition:</b> Enum.h:36</div></div>
<div class="ttc" id="anamespaceez_conversion_utils_htm_aee7b9863241f562e0eb3aa7d360153b6"><div class="ttname"><a href="../../d7/d1a/namespaceez_conversion_utils.htm#aee7b9863241f562e0eb3aa7d360153b6">ezConversionUtils::ToString</a></div><div class="ttdeci">const EZ_ALWAYS_INLINE ezStringBuilder &amp; ToString(bool value, ezStringBuilder &amp;out_sResult)</div><div class="ttdoc">Converts a bool to a string.</div><div class="ttdef"><b>Definition:</b> ConversionUtils.h:176</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_81a97b29d048515ed79592945c8b94b3.htm">Platform</a></li><li class="navelem"><a class="el" href="../../dir_c0497a307b3a715367aa84074a8b1708.htm">Android</a></li><li class="navelem"><a class="el" href="../../dir_9aa64486ec8c8cabd57ce7359358486a.htm">Utils</a></li><li class="navelem"><b>AndroidJni.h</b></li>
    <li class="footer">Generated on Mon Mar 3 2025 17:23:44 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
