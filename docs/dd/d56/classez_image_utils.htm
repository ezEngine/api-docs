<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: ezImageUtils Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 21.6</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('dd/d56/classez_image_utils.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="../../d7/da5/classez_image_utils-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ezImageUtils Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d74/structez_image_utils_1_1_mip_map_options.htm">MipMapOptions</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Mip map generation options.  <a href="../../dd/d74/structez_image_utils_1_1_mip_map_options.htm#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:abfce8e9d89c0ac1070635e11b594993f"><td class="memItemLeft" align="right" valign="top"><a id="abfce8e9d89c0ac1070635e11b594993f"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d56/classez_image_utils.htm#abfce8e9d89c0ac1070635e11b594993f">ComputeImageDifferenceABS</a> (const <a class="el" href="../../d2/d06/classez_image_view.htm">ezImageView</a> &amp;ImageA, const <a class="el" href="../../d2/d06/classez_image_view.htm">ezImageView</a> &amp;ImageB, <a class="el" href="../../d4/d43/classez_image.htm">ezImage</a> &amp;out_Difference)</td></tr>
<tr class="memdesc:abfce8e9d89c0ac1070635e11b594993f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the image with the difference (absolute values) between ImageA and ImageB. <br /></td></tr>
<tr class="separator:abfce8e9d89c0ac1070635e11b594993f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af9cad948f9dbdeb66df92e75e531b01c"><td class="memItemLeft" align="right" valign="top"><a id="af9cad948f9dbdeb66df92e75e531b01c"></a>
static ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d56/classez_image_utils.htm#af9cad948f9dbdeb66df92e75e531b01c">ComputeMeanSquareError</a> (const <a class="el" href="../../d2/d06/classez_image_view.htm">ezImageView</a> &amp;DifferenceImage, ezUInt8 uiBlockSize, ezUInt32 offsetx, ezUInt32 offsety)</td></tr>
<tr class="memdesc:af9cad948f9dbdeb66df92e75e531b01c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Computes the mean square error for the block at (offsetx, offsety) to (offsetx + uiBlockSize, offsety + uiBlockSize). DifferenceImage is expected to be an image that represents the difference between two images. <br /></td></tr>
<tr class="separator:af9cad948f9dbdeb66df92e75e531b01c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ea8b739bfd02ac47d21a2dfc4b85b6c"><td class="memItemLeft" align="right" valign="top"><a id="a4ea8b739bfd02ac47d21a2dfc4b85b6c"></a>
static ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d56/classez_image_utils.htm#a4ea8b739bfd02ac47d21a2dfc4b85b6c">ComputeMeanSquareError</a> (const <a class="el" href="../../d2/d06/classez_image_view.htm">ezImageView</a> &amp;DifferenceImage, ezUInt8 uiBlockSize)</td></tr>
<tr class="memdesc:a4ea8b739bfd02ac47d21a2dfc4b85b6c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Computes the mean square error of DifferenceImage, by computing the MSE for blocks of uiBlockSize and returning the maximum MSE that was found. <br /></td></tr>
<tr class="separator:a4ea8b739bfd02ac47d21a2dfc4b85b6c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a993fc77039706a138eaaac79b37878d4"><td class="memItemLeft" align="right" valign="top"><a id="a993fc77039706a138eaaac79b37878d4"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d56/classez_image_utils.htm#a993fc77039706a138eaaac79b37878d4">Normalize</a> (<a class="el" href="../../d4/d43/classez_image.htm">ezImage</a> &amp;image)</td></tr>
<tr class="memdesc:a993fc77039706a138eaaac79b37878d4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Rescales pixel values to use the full value range by scaling from [min, max] to [0, 255]. Computes combined min/max for RGB and separate min/max for alpha. <br /></td></tr>
<tr class="separator:a993fc77039706a138eaaac79b37878d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f8eeb435e6bde458669500b372ac088"><td class="memItemLeft" align="right" valign="top"><a id="a3f8eeb435e6bde458669500b372ac088"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><b>Normalize</b> (<a class="el" href="../../d4/d43/classez_image.htm">ezImage</a> &amp;image, ezUInt8 &amp;uiMinRgb, ezUInt8 &amp;uiMaxRgb, ezUInt8 &amp;uiMinAlpha, ezUInt8 &amp;uiMaxAlpha)</td></tr>
<tr class="separator:a3f8eeb435e6bde458669500b372ac088"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:add3cca60345b3973e739a6b9ad63a2c8"><td class="memItemLeft" align="right" valign="top"><a id="add3cca60345b3973e739a6b9ad63a2c8"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d56/classez_image_utils.htm#add3cca60345b3973e739a6b9ad63a2c8">ExtractAlphaChannel</a> (const <a class="el" href="../../d2/d06/classez_image_view.htm">ezImageView</a> &amp;inputImage, <a class="el" href="../../d4/d43/classez_image.htm">ezImage</a> &amp;outputImage)</td></tr>
<tr class="memdesc:add3cca60345b3973e739a6b9ad63a2c8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Extracts the alpha channel from 8bpp 4 channel images into a 8bpp single channel image. <br /></td></tr>
<tr class="separator:add3cca60345b3973e739a6b9ad63a2c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9791056fad551fca205dea6f154c6eb3"><td class="memItemLeft" align="right" valign="top"><a id="a9791056fad551fca205dea6f154c6eb3"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d56/classez_image_utils.htm#a9791056fad551fca205dea6f154c6eb3">CropImage</a> (const <a class="el" href="../../d2/d06/classez_image_view.htm">ezImageView</a> &amp;input, const <a class="el" href="../../d1/df8/classez_vec2_template.htm">ezVec2I32</a> &amp;offset, const <a class="el" href="../../d1/d2c/classez_size_template.htm">ezSizeU32</a> &amp;newsize, <a class="el" href="../../d4/d43/classez_image.htm">ezImage</a> &amp;output)</td></tr>
<tr class="memdesc:a9791056fad551fca205dea6f154c6eb3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the sub-image of <em>input</em> that starts at <em>offset</em> and has the size <em>newsize</em>. <br /></td></tr>
<tr class="separator:a9791056fad551fca205dea6f154c6eb3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aedffa9909318b573f5fa4cde465b24d3"><td class="memItemLeft" align="right" valign="top"><a id="aedffa9909318b573f5fa4cde465b24d3"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d56/classez_image_utils.htm#aedffa9909318b573f5fa4cde465b24d3">RotateSubImage180</a> (<a class="el" href="../../d4/d43/classez_image.htm">ezImage</a> &amp;image, ezUInt32 uiMipLevel=0, ezUInt32 uiFace=0, ezUInt32 uiArrayIndex=0)</td></tr>
<tr class="memdesc:aedffa9909318b573f5fa4cde465b24d3"><td class="mdescLeft">&#160;</td><td class="mdescRight">rotates a sub image by 180 degrees in place. Only works with uncompressed images. <br /></td></tr>
<tr class="separator:aedffa9909318b573f5fa4cde465b24d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af04b57d1a6fce4c74b80a8f8506b26cb"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="../../d4/da9/structez_result.htm">ezResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d56/classez_image_utils.htm#af04b57d1a6fce4c74b80a8f8506b26cb">Copy</a> (const <a class="el" href="../../d2/d06/classez_image_view.htm">ezImageView</a> &amp;srcImg, const <a class="el" href="../../de/dd8/classez_rect_template.htm">ezRectU32</a> &amp;srcRect, <a class="el" href="../../d4/d43/classez_image.htm">ezImage</a> &amp;dstImg, const <a class="el" href="../../d6/dbd/structez_vec3_template.htm">ezVec3U32</a> &amp;dstOffset, ezUInt32 uiDstMipLevel=0, ezUInt32 uiDstFace=0, ezUInt32 uiDstArrayIndex=0)</td></tr>
<tr class="memdesc:af04b57d1a6fce4c74b80a8f8506b26cb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the source image into the destination image at the specified location.  <a href="../../dd/d56/classez_image_utils.htm#af04b57d1a6fce4c74b80a8f8506b26cb">More...</a><br /></td></tr>
<tr class="separator:af04b57d1a6fce4c74b80a8f8506b26cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae420b1a1135b540008f6276977392084"><td class="memItemLeft" align="right" valign="top"><a id="ae420b1a1135b540008f6276977392084"></a>
static <a class="el" href="../../d4/da9/structez_result.htm">ezResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d56/classez_image_utils.htm#ae420b1a1135b540008f6276977392084">ExtractLowerMipChain</a> (const <a class="el" href="../../d2/d06/classez_image_view.htm">ezImageView</a> &amp;src, <a class="el" href="../../d4/d43/classez_image.htm">ezImage</a> &amp;dst, ezUInt32 uiNumMips)</td></tr>
<tr class="memdesc:ae420b1a1135b540008f6276977392084"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the lower uiNumMips data of a 2D image into another one. <br /></td></tr>
<tr class="separator:ae420b1a1135b540008f6276977392084"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af0c84bd346d8a7487b1ab77287d8454f"><td class="memItemLeft" align="right" valign="top"><a id="af0c84bd346d8a7487b1ab77287d8454f"></a>
static <a class="el" href="../../d4/da9/structez_result.htm">ezResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d56/classez_image_utils.htm#af0c84bd346d8a7487b1ab77287d8454f">Scale</a> (const <a class="el" href="../../d2/d06/classez_image_view.htm">ezImageView</a> &amp;source, <a class="el" href="../../d4/d43/classez_image.htm">ezImage</a> &amp;target, ezUInt32 width, ezUInt32 height, const <a class="el" href="../../d2/db6/classez_image_filter.htm">ezImageFilter</a> *filter=nullptr, ezImageAddressMode::Enum addressModeU=ezImageAddressMode::Clamp, ezImageAddressMode::Enum addressModeV=ezImageAddressMode::Clamp, const <a class="el" href="../../dd/d01/classez_color.htm">ezColor</a> &amp;borderColor=<a class="el" href="../../dd/d01/classez_color.htm#a43dc57a70163f540c60e47e531399106">ezColor::Black</a>)</td></tr>
<tr class="memdesc:af0c84bd346d8a7487b1ab77287d8454f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Scales the image. <br /></td></tr>
<tr class="separator:af0c84bd346d8a7487b1ab77287d8454f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6d9139fc8f9017b600637780e197fff0"><td class="memItemLeft" align="right" valign="top"><a id="a6d9139fc8f9017b600637780e197fff0"></a>
static <a class="el" href="../../d4/da9/structez_result.htm">ezResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d56/classez_image_utils.htm#a6d9139fc8f9017b600637780e197fff0">Scale3D</a> (const <a class="el" href="../../d2/d06/classez_image_view.htm">ezImageView</a> &amp;source, <a class="el" href="../../d4/d43/classez_image.htm">ezImage</a> &amp;target, ezUInt32 width, ezUInt32 height, ezUInt32 depth, const <a class="el" href="../../d2/db6/classez_image_filter.htm">ezImageFilter</a> *filter=nullptr, ezImageAddressMode::Enum addressModeU=ezImageAddressMode::Clamp, ezImageAddressMode::Enum addressModeV=ezImageAddressMode::Clamp, ezImageAddressMode::Enum addressModeW=ezImageAddressMode::Clamp, const <a class="el" href="../../dd/d01/classez_color.htm">ezColor</a> &amp;borderColor=<a class="el" href="../../dd/d01/classez_color.htm#a43dc57a70163f540c60e47e531399106">ezColor::Black</a>)</td></tr>
<tr class="memdesc:a6d9139fc8f9017b600637780e197fff0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Scales the image. <br /></td></tr>
<tr class="separator:a6d9139fc8f9017b600637780e197fff0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a96eb2954b3c416c81e988c4154fa7621"><td class="memItemLeft" align="right" valign="top"><a id="a96eb2954b3c416c81e988c4154fa7621"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d56/classez_image_utils.htm#a96eb2954b3c416c81e988c4154fa7621">GenerateMipMaps</a> (const <a class="el" href="../../d2/d06/classez_image_view.htm">ezImageView</a> &amp;source, <a class="el" href="../../d4/d43/classez_image.htm">ezImage</a> &amp;target, const <a class="el" href="../../dd/d74/structez_image_utils_1_1_mip_map_options.htm">MipMapOptions</a> &amp;options)</td></tr>
<tr class="memdesc:a96eb2954b3c416c81e988c4154fa7621"><td class="mdescLeft">&#160;</td><td class="mdescRight">Genererates the mip maps for the image. The input texture must be in ezImageFormat::R32_G32_B32_A32_FLOAT. <br /></td></tr>
<tr class="separator:a96eb2954b3c416c81e988c4154fa7621"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86bc4a52dd310ab80ef241e6a585802d"><td class="memItemLeft" align="right" valign="top"><a id="a86bc4a52dd310ab80ef241e6a585802d"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d56/classez_image_utils.htm#a86bc4a52dd310ab80ef241e6a585802d">ReconstructNormalZ</a> (<a class="el" href="../../d4/d43/classez_image.htm">ezImage</a> &amp;source)</td></tr>
<tr class="memdesc:a86bc4a52dd310ab80ef241e6a585802d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assumes that the Red and Green components of an image contain XY of an unit length normal and reconstructs the Z component into B. <br /></td></tr>
<tr class="separator:a86bc4a52dd310ab80ef241e6a585802d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aebd88a5cbd29952e017038edf5a8f299"><td class="memItemLeft" align="right" valign="top"><a id="aebd88a5cbd29952e017038edf5a8f299"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d56/classez_image_utils.htm#aebd88a5cbd29952e017038edf5a8f299">RenormalizeNormalMap</a> (<a class="el" href="../../d4/d43/classez_image.htm">ezImage</a> &amp;image)</td></tr>
<tr class="memdesc:aebd88a5cbd29952e017038edf5a8f299"><td class="mdescLeft">&#160;</td><td class="mdescRight">Renormalizes a normal map to unit length. <br /></td></tr>
<tr class="separator:aebd88a5cbd29952e017038edf5a8f299"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69564c113b6dc348f94286e781333562"><td class="memItemLeft" align="right" valign="top"><a id="a69564c113b6dc348f94286e781333562"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d56/classez_image_utils.htm#a69564c113b6dc348f94286e781333562">AdjustRoughness</a> (<a class="el" href="../../d4/d43/classez_image.htm">ezImage</a> &amp;roughnessMap, const <a class="el" href="../../d2/d06/classez_image_view.htm">ezImageView</a> &amp;normalMap)</td></tr>
<tr class="memdesc:a69564c113b6dc348f94286e781333562"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adjust the roughness in lower mip levels so it maintains the same look from all distances. <br /></td></tr>
<tr class="separator:a69564c113b6dc348f94286e781333562"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a65013c721986a0053d7136ef372dcbd0"><td class="memItemLeft" align="right" valign="top"><a id="a65013c721986a0053d7136ef372dcbd0"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d56/classez_image_utils.htm#a65013c721986a0053d7136ef372dcbd0">ChangeExposure</a> (<a class="el" href="../../d4/d43/classez_image.htm">ezImage</a> &amp;image, float bias)</td></tr>
<tr class="memdesc:a65013c721986a0053d7136ef372dcbd0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Changes the exposure of an HDR image by 2^bias. <br /></td></tr>
<tr class="separator:a65013c721986a0053d7136ef372dcbd0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a02d6630e6f0a103007664e08ad72ad"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="../../d4/da9/structez_result.htm">ezResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d56/classez_image_utils.htm#a2a02d6630e6f0a103007664e08ad72ad">CreateCubemapFromSingleFile</a> (<a class="el" href="../../d4/d43/classez_image.htm">ezImage</a> &amp;dstImg, const <a class="el" href="../../d2/d06/classez_image_view.htm">ezImageView</a> &amp;srcImg)</td></tr>
<tr class="memdesc:a2a02d6630e6f0a103007664e08ad72ad"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a cubemap from srcImg and stores it in dstImg.  <a href="../../dd/d56/classez_image_utils.htm#a2a02d6630e6f0a103007664e08ad72ad">More...</a><br /></td></tr>
<tr class="separator:a2a02d6630e6f0a103007664e08ad72ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5d70d4c5e3d1eb1446b61fd7b499e8d6"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="../../d4/da9/structez_result.htm">ezResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d56/classez_image_utils.htm#a5d70d4c5e3d1eb1446b61fd7b499e8d6">CreateCubemapFrom6Files</a> (<a class="el" href="../../d4/d43/classez_image.htm">ezImage</a> &amp;dstImg, const <a class="el" href="../../d2/d06/classez_image_view.htm">ezImageView</a> *pSourceImages)</td></tr>
<tr class="memdesc:a5d70d4c5e3d1eb1446b61fd7b499e8d6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the 6 given source images to the faces of dstImg.  <a href="../../dd/d56/classez_image_utils.htm#a5d70d4c5e3d1eb1446b61fd7b499e8d6">More...</a><br /></td></tr>
<tr class="separator:a5d70d4c5e3d1eb1446b61fd7b499e8d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a01f038cd104eec6c97c82f2ed0e939bf"><td class="memItemLeft" align="right" valign="top"><a id="a01f038cd104eec6c97c82f2ed0e939bf"></a>
static <a class="el" href="../../d4/da9/structez_result.htm">ezResult</a>&#160;</td><td class="memItemRight" valign="bottom"><b>CreateVolumeTextureFromSingleFile</b> (<a class="el" href="../../d4/d43/classez_image.htm">ezImage</a> &amp;dstImg, const <a class="el" href="../../d2/d06/classez_image_view.htm">ezImageView</a> &amp;srcImg)</td></tr>
<tr class="separator:a01f038cd104eec6c97c82f2ed0e939bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18b047c071d6fc0c701cbf04a0a889c0"><td class="memItemLeft" align="right" valign="top"><a id="a18b047c071d6fc0c701cbf04a0a889c0"></a>
static ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetSampleIndex</b> (ezUInt32 numTexels, ezInt32 index, ezImageAddressMode::Enum addressMode, bool &amp;outUseBorderColor)</td></tr>
<tr class="separator:a18b047c071d6fc0c701cbf04a0a889c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af3938427b323ee5b98e85c05b048c39d"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="../../dd/d01/classez_color.htm">ezColor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d56/classez_image_utils.htm#af3938427b323ee5b98e85c05b048c39d">BilinearSample</a> (const <a class="el" href="../../d2/d06/classez_image_view.htm">ezImageView</a> &amp;image, ezImageAddressMode::Enum addressMode, <a class="el" href="../../d1/df8/classez_vec2_template.htm">ezVec2</a> uv)</td></tr>
<tr class="memdesc:af3938427b323ee5b98e85c05b048c39d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Samples the image at the given uv coordinates with bilinear filtering.  <a href="../../dd/d56/classez_image_utils.htm#af3938427b323ee5b98e85c05b048c39d">More...</a><br /></td></tr>
<tr class="separator:af3938427b323ee5b98e85c05b048c39d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8a4efdc34d449d4ecb5ed0dd2f45d0f9"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="../../dd/d01/classez_color.htm">ezColor</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d56/classez_image_utils.htm#a8a4efdc34d449d4ecb5ed0dd2f45d0f9">BilinearSample</a> (const <a class="el" href="../../dd/d01/classez_color.htm">ezColor</a> *pPixelPointer, ezUInt32 uiWidth, ezUInt32 uiHeight, ezImageAddressMode::Enum addressMode, <a class="el" href="../../d1/df8/classez_vec2_template.htm">ezVec2</a> uv)</td></tr>
<tr class="memdesc:a8a4efdc34d449d4ecb5ed0dd2f45d0f9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Samples the image at the given uv coordinates with bilinear filtering.  <a href="../../dd/d56/classez_image_utils.htm#a8a4efdc34d449d4ecb5ed0dd2f45d0f9">More...</a><br /></td></tr>
<tr class="separator:a8a4efdc34d449d4ecb5ed0dd2f45d0f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae0bacb65a9e14c1e7d3234e7d8d5e750"><td class="memItemLeft" align="right" valign="top">static <a class="el" href="../../d4/da9/structez_result.htm">ezResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d56/classez_image_utils.htm#ae0bacb65a9e14c1e7d3234e7d8d5e750">CopyChannel</a> (<a class="el" href="../../d4/d43/classez_image.htm">ezImage</a> &amp;dstImg, ezUInt8 uiDstChannelIdx, const <a class="el" href="../../d4/d43/classez_image.htm">ezImage</a> &amp;srcImg, ezUInt8 uiSrcChannelIdx)</td></tr>
<tr class="memdesc:ae0bacb65a9e14c1e7d3234e7d8d5e750"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies channel 0, 1, 2 or 3 from srcImg into dstImg.  <a href="../../dd/d56/classez_image_utils.htm#ae0bacb65a9e14c1e7d3234e7d8d5e750">More...</a><br /></td></tr>
<tr class="separator:ae0bacb65a9e14c1e7d3234e7d8d5e750"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a8a4efdc34d449d4ecb5ed0dd2f45d0f9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8a4efdc34d449d4ecb5ed0dd2f45d0f9">&#9670;&nbsp;</a></span>BilinearSample() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../dd/d01/classez_color.htm">ezColor</a> ezImageUtils::BilinearSample </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../dd/d01/classez_color.htm">ezColor</a> *&#160;</td>
          <td class="paramname"><em>pPixelPointer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ezUInt32&#160;</td>
          <td class="paramname"><em>uiWidth</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ezUInt32&#160;</td>
          <td class="paramname"><em>uiHeight</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ezImageAddressMode::Enum&#160;</td>
          <td class="paramname"><em>addressMode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d1/df8/classez_vec2_template.htm">ezVec2</a>&#160;</td>
          <td class="paramname"><em>uv</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Samples the image at the given uv coordinates with bilinear filtering. </p>
<p>Prefer this function over the one that takes an <a class="el" href="../../d2/d06/classez_image_view.htm" title="A class referencing image data and holding metadata about the image.">ezImageView</a> when you need to sample the image very often, as it does away with internal validation that would be redundant. Also, the pixel pointer given to this function should be retrieved only once from the source image, as <a class="el" href="../../d4/d43/classez_image.htm#afa6d1f58c2e4dae49371975b0a264b0b" title="Returns a pointer to a given pixel or block contained in a sub-image.">ezImage::GetPixelPointer()</a> is rather slow due to validation overhead. </p>

</div>
</div>
<a id="af3938427b323ee5b98e85c05b048c39d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af3938427b323ee5b98e85c05b048c39d">&#9670;&nbsp;</a></span>BilinearSample() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../dd/d01/classez_color.htm">ezColor</a> ezImageUtils::BilinearSample </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d2/d06/classez_image_view.htm">ezImageView</a> &amp;&#160;</td>
          <td class="paramname"><em>image</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ezImageAddressMode::Enum&#160;</td>
          <td class="paramname"><em>addressMode</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d1/df8/classez_vec2_template.htm">ezVec2</a>&#160;</td>
          <td class="paramname"><em>uv</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Samples the image at the given uv coordinates with bilinear filtering. </p>
<p>This function has to validate that the image is of the right format, and has to query the pixel pointer, which is slow. If you need to sample the image very often, use the overload that takes a pixel pointer instead of an image. </p>

</div>
</div>
<a id="af04b57d1a6fce4c74b80a8f8506b26cb"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af04b57d1a6fce4c74b80a8f8506b26cb">&#9670;&nbsp;</a></span>Copy()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d4/da9/structez_result.htm">ezResult</a> ezImageUtils::Copy </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d2/d06/classez_image_view.htm">ezImageView</a> &amp;&#160;</td>
          <td class="paramname"><em>srcImg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../de/dd8/classez_rect_template.htm">ezRectU32</a> &amp;&#160;</td>
          <td class="paramname"><em>srcRect</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d4/d43/classez_image.htm">ezImage</a> &amp;&#160;</td>
          <td class="paramname"><em>dstImg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d6/dbd/structez_vec3_template.htm">ezVec3U32</a> &amp;&#160;</td>
          <td class="paramname"><em>dstOffset</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ezUInt32&#160;</td>
          <td class="paramname"><em>uiDstMipLevel</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ezUInt32&#160;</td>
          <td class="paramname"><em>uiDstFace</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ezUInt32&#160;</td>
          <td class="paramname"><em>uiDstArrayIndex</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Copies the source image into the destination image at the specified location. </p>
<p>The image must fit, no scaling or cropping is done. Image formats must be identical. Compressed formats are not supported. If the target location leaves not enough room for the source image to be copied, bad stuff will happen. </p>

</div>
</div>
<a id="ae0bacb65a9e14c1e7d3234e7d8d5e750"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae0bacb65a9e14c1e7d3234e7d8d5e750">&#9670;&nbsp;</a></span>CopyChannel()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d4/da9/structez_result.htm">ezResult</a> ezImageUtils::CopyChannel </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d4/d43/classez_image.htm">ezImage</a> &amp;&#160;</td>
          <td class="paramname"><em>dstImg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ezUInt8&#160;</td>
          <td class="paramname"><em>uiDstChannelIdx</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d4/d43/classez_image.htm">ezImage</a> &amp;&#160;</td>
          <td class="paramname"><em>srcImg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ezUInt8&#160;</td>
          <td class="paramname"><em>uiSrcChannelIdx</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Copies channel 0, 1, 2 or 3 from srcImg into dstImg. </p>
<p>Currently only supports images of format R32G32B32A32_FLOAT and with identical resolution. Returns failure if any of those requirements are not met. </p>

</div>
</div>
<a id="a5d70d4c5e3d1eb1446b61fd7b499e8d6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5d70d4c5e3d1eb1446b61fd7b499e8d6">&#9670;&nbsp;</a></span>CreateCubemapFrom6Files()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d4/da9/structez_result.htm">ezResult</a> ezImageUtils::CreateCubemapFrom6Files </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d4/d43/classez_image.htm">ezImage</a> &amp;&#160;</td>
          <td class="paramname"><em>dstImg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d2/d06/classez_image_view.htm">ezImageView</a> *&#160;</td>
          <td class="paramname"><em>pSourceImages</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Copies the 6 given source images to the faces of dstImg. </p>
<p>All input images must have the same square, power-of-two dimensions and mustn't be compressed. </p>

</div>
</div>
<a id="a2a02d6630e6f0a103007664e08ad72ad"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2a02d6630e6f0a103007664e08ad72ad">&#9670;&nbsp;</a></span>CreateCubemapFromSingleFile()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d4/da9/structez_result.htm">ezResult</a> ezImageUtils::CreateCubemapFromSingleFile </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d4/d43/classez_image.htm">ezImage</a> &amp;&#160;</td>
          <td class="paramname"><em>dstImg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d2/d06/classez_image_view.htm">ezImageView</a> &amp;&#160;</td>
          <td class="paramname"><em>srcImg</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Creates a cubemap from srcImg and stores it in dstImg. </p>
<p>If srcImg is already a cubemap, the data will be copied 1:1 to dstImg. If it is a 2D texture, it is analyzed and sub-images are copied to the proper faces of the output cubemap.</p>
<p>Supported input layouts are:</p><ul>
<li>Vertical Cross</li>
<li>Horizontal Cross</li>
<li>Spherical mapping </li>
</ul>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Texture/Image/<a class="el" href="../../d9/dfd/_image_utils_8h_source.htm">ImageUtils.h</a></li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Texture/Image/Implementation/ImageUtils.cpp</li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dd/d56/classez_image_utils.htm">ezImageUtils</a></li>
    <li class="footer">Generated on Tue Jun 8 2021 21:43:18 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
