<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Containers/Implementation/StaticRingBuffer_inl.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 21.6</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('dd/dcb/_static_ring_buffer__inl_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">StaticRingBuffer_inl.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, ezUInt32 C&gt;</div>
<div class="line"><a name="l00004"></a><span class="lineno"><a class="line" href="../../d2/dc3/classez_static_ring_buffer.htm#a6e9f5a49d579b52bf6d26ac8c07219b7">    4</a></span>&#160;<a class="code" href="../../d2/dc3/classez_static_ring_buffer.htm#a6e9f5a49d579b52bf6d26ac8c07219b7">ezStaticRingBuffer&lt;T, C&gt;::ezStaticRingBuffer</a>()</div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;{</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;  m_pElements = GetStaticArray();</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;  m_uiFirstElement = 0;</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;  m_uiCount = 0;</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;}</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160; </div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, ezUInt32 C&gt;</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<a class="code" href="../../d2/dc3/classez_static_ring_buffer.htm#a6e9f5a49d579b52bf6d26ac8c07219b7">ezStaticRingBuffer&lt;T, C&gt;::ezStaticRingBuffer</a>(<span class="keyword">const</span> <a class="code" href="../../d2/dc3/classez_static_ring_buffer.htm">ezStaticRingBuffer&lt;T, C&gt;</a>&amp; rhs)</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;{</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;  m_pElements = GetStaticArray();</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;  m_uiFirstElement = 0;</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;  m_uiCount = 0;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160; </div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;  *<span class="keyword">this</span> = rhs;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;}</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160; </div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, ezUInt32 C&gt;</div>
<div class="line"><a name="l00022"></a><span class="lineno"><a class="line" href="../../d2/dc3/classez_static_ring_buffer.htm#aed7c03216d20f4acdfae6279be068c0c">   22</a></span>&#160;<a class="code" href="../../d2/dc3/classez_static_ring_buffer.htm#aed7c03216d20f4acdfae6279be068c0c">ezStaticRingBuffer&lt;T, C&gt;::~ezStaticRingBuffer</a>()</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;{</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;  Clear();</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;}</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, ezUInt32 C&gt;</div>
<div class="line"><a name="l00028"></a><span class="lineno"><a class="line" href="../../d2/dc3/classez_static_ring_buffer.htm#a895a5ef77cc69cd941657c98516837ea">   28</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d2/dc3/classez_static_ring_buffer.htm#a895a5ef77cc69cd941657c98516837ea">ezStaticRingBuffer&lt;T, C&gt;::operator=</a>(<span class="keyword">const</span> <a class="code" href="../../d2/dc3/classez_static_ring_buffer.htm">ezStaticRingBuffer&lt;T, C&gt;</a>&amp; rhs)</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;{</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;  Clear();</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160; </div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;  <span class="keywordflow">for</span> (ezUInt32 i = 0; i &lt; rhs.<a class="code" href="../../d2/dc3/classez_static_ring_buffer.htm#a75aeaf529f144f803ed0117f75fe8d8b">GetCount</a>(); ++i)</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;    PushBack(rhs[i]);</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;}</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160; </div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, ezUInt32 C&gt;</div>
<div class="line"><a name="l00037"></a><span class="lineno"><a class="line" href="../../d2/dc3/classez_static_ring_buffer.htm#a5adc5768024a6a58be10e634bcf97565">   37</a></span>&#160;<span class="keywordtype">bool</span> <a class="code" href="../../d2/dc3/classez_static_ring_buffer.htm#a5adc5768024a6a58be10e634bcf97565">ezStaticRingBuffer&lt;T, C&gt;::operator==</a>(<span class="keyword">const</span> <a class="code" href="../../d2/dc3/classez_static_ring_buffer.htm">ezStaticRingBuffer&lt;T, C&gt;</a>&amp; rhs)<span class="keyword"> const</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;  <span class="keywordflow">if</span> (GetCount() != rhs.<a class="code" href="../../d2/dc3/classez_static_ring_buffer.htm#a75aeaf529f144f803ed0117f75fe8d8b">GetCount</a>())</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160; </div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;  <span class="keywordflow">for</span> (ezUInt32 i = 0; i &lt; m_uiCount; ++i)</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  {</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;    <span class="keywordflow">if</span> ((*<span class="keyword">this</span>)[i] != rhs[i])</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;  }</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160; </div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;}</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160; </div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, ezUInt32 C&gt;</div>
<div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="../../d2/dc3/classez_static_ring_buffer.htm#aab1e144751b15478f3de872de1e7482b">   52</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../d2/dc3/classez_static_ring_buffer.htm#aab1e144751b15478f3de872de1e7482b">ezStaticRingBuffer&lt;T, C&gt;::operator!=</a>(<span class="keyword">const</span> <a class="code" href="../../d2/dc3/classez_static_ring_buffer.htm">ezStaticRingBuffer&lt;T, C&gt;</a>&amp; rhs)<span class="keyword"> const</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;  <span class="keywordflow">return</span> !(*<span class="keyword">this</span> == rhs);</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;}</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160; </div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, ezUInt32 C&gt;</div>
<div class="line"><a name="l00058"></a><span class="lineno"><a class="line" href="../../d2/dc3/classez_static_ring_buffer.htm#a62c5ae16b401f8c5f4f15fe1cea8812b">   58</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d2/dc3/classez_static_ring_buffer.htm#a62c5ae16b401f8c5f4f15fe1cea8812b">ezStaticRingBuffer&lt;T, C&gt;::PushBack</a>(<span class="keyword">const</span> T&amp; element)</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;{</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;  EZ_ASSERT_DEV(CanAppend(), <span class="stringliteral">&quot;The ring-buffer is full, no elements can be appended before removing one.&quot;</span>);</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160; </div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;  <span class="keyword">const</span> ezUInt32 uiLastElement = (m_uiFirstElement + m_uiCount) % C;</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160; </div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  <a class="code" href="../../dc/d4d/classez_memory_utils.htm#ab768b24491ab1feb611b5036d37e39f2">ezMemoryUtils::CopyConstruct</a>(&amp;m_pElements[uiLastElement], element, 1);</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;  ++m_uiCount;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;}</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160; </div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, ezUInt32 C&gt;</div>
<div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="../../d2/dc3/classez_static_ring_buffer.htm#a432bd14dfdb5d89b623ad7753a468ee9">   69</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d2/dc3/classez_static_ring_buffer.htm#a62c5ae16b401f8c5f4f15fe1cea8812b">ezStaticRingBuffer&lt;T, C&gt;::PushBack</a>(T&amp;&amp; element)</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;{</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;  EZ_ASSERT_DEV(CanAppend(), <span class="stringliteral">&quot;The ring-buffer is full, no elements can be appended before removing one.&quot;</span>);</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160; </div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  <span class="keyword">const</span> ezUInt32 uiLastElement = (m_uiFirstElement + m_uiCount) % C;</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160; </div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;  <a class="code" href="../../dc/d4d/classez_memory_utils.htm#a945a697e081b8f264a7b9d4ec8f66ffe">ezMemoryUtils::MoveConstruct</a>(&amp;m_pElements[uiLastElement], std::move(element));</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  ++m_uiCount;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;}</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160; </div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, ezUInt32 C&gt;</div>
<div class="line"><a name="l00080"></a><span class="lineno"><a class="line" href="../../d2/dc3/classez_static_ring_buffer.htm#ad26beb6981607a8162264db1eb1143f4">   80</a></span>&#160;T&amp; <a class="code" href="../../d2/dc3/classez_static_ring_buffer.htm#ad26beb6981607a8162264db1eb1143f4">ezStaticRingBuffer&lt;T, C&gt;::PeekBack</a>()</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;{</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;  EZ_ASSERT_DEV(!IsEmpty(), <span class="stringliteral">&quot;The ring-buffer is empty, cannot peek at the last element.&quot;</span>);</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160; </div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;  <span class="keyword">const</span> ezUInt32 uiLastElement = (m_uiFirstElement + m_uiCount - 1) % C;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  <span class="keywordflow">return</span> m_pElements[uiLastElement];</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;}</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160; </div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, ezUInt32 C&gt;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;<span class="keyword">const</span> T&amp; <a class="code" href="../../d2/dc3/classez_static_ring_buffer.htm#ad26beb6981607a8162264db1eb1143f4">ezStaticRingBuffer&lt;T, C&gt;::PeekBack</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  EZ_ASSERT_DEV(!IsEmpty(), <span class="stringliteral">&quot;The ring-buffer is empty, cannot peek at the last element.&quot;</span>);</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160; </div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  <span class="keyword">const</span> ezUInt32 uiLastElement = (m_uiFirstElement + m_uiCount - 1) % C;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;  <span class="keywordflow">return</span> m_pElements[uiLastElement];</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;}</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160; </div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, ezUInt32 C&gt;</div>
<div class="line"><a name="l00098"></a><span class="lineno"><a class="line" href="../../d2/dc3/classez_static_ring_buffer.htm#acd1fea24ed2aed3a88c791ae43cd7176">   98</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d2/dc3/classez_static_ring_buffer.htm#acd1fea24ed2aed3a88c791ae43cd7176">ezStaticRingBuffer&lt;T, C&gt;::PopFront</a>(ezUInt32 uiElements)</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;{</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;  EZ_ASSERT_DEV(m_uiCount &gt;= uiElements, <span class="stringliteral">&quot;The ring-buffer contains {0} elements, cannot remove {1} elements from it.&quot;</span>, m_uiCount, uiElements);</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160; </div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;  <span class="keywordflow">while</span> (uiElements &gt; 0)</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  {</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    <a class="code" href="../../dc/d4d/classez_memory_utils.htm#aea6c4d3ce40c31abd9cc00fd94759c64">ezMemoryUtils::Destruct</a>(&amp;m_pElements[m_uiFirstElement], 1);</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    ++m_uiFirstElement;</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;    m_uiFirstElement %= C;</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    --m_uiCount;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160; </div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    --uiElements;</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;  }</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;}</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160; </div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, ezUInt32 C&gt;</div>
<div class="line"><a name="l00114"></a><span class="lineno"><a class="line" href="../../d2/dc3/classez_static_ring_buffer.htm#a5d4fd78ce4d7541bc0e232d0d345d42f">  114</a></span>&#160;EZ_FORCE_INLINE <span class="keyword">const</span> T&amp; <a class="code" href="../../d2/dc3/classez_static_ring_buffer.htm#a5d4fd78ce4d7541bc0e232d0d345d42f">ezStaticRingBuffer&lt;T, C&gt;::PeekFront</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;  EZ_ASSERT_DEV(!IsEmpty(), <span class="stringliteral">&quot;The ring-buffer is empty, cannot peek at the first element.&quot;</span>);</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160; </div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;  <span class="keywordflow">return</span> m_pElements[m_uiFirstElement];</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;}</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160; </div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, ezUInt32 C&gt;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;EZ_FORCE_INLINE T&amp; <a class="code" href="../../d2/dc3/classez_static_ring_buffer.htm#a5d4fd78ce4d7541bc0e232d0d345d42f">ezStaticRingBuffer&lt;T, C&gt;::PeekFront</a>()</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;{</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;  EZ_ASSERT_DEV(!IsEmpty(), <span class="stringliteral">&quot;The ring-buffer is empty, cannot peek at the first element.&quot;</span>);</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160; </div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;  <span class="keywordflow">return</span> m_pElements[m_uiFirstElement];</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;}</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160; </div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, ezUInt32 C&gt;</div>
<div class="line"><a name="l00130"></a><span class="lineno"><a class="line" href="../../d2/dc3/classez_static_ring_buffer.htm#a382b26cf0d73e00146955b0d412c6e3a">  130</a></span>&#160;EZ_FORCE_INLINE <span class="keyword">const</span> T&amp; <a class="code" href="../../d2/dc3/classez_static_ring_buffer.htm#a382b26cf0d73e00146955b0d412c6e3a">ezStaticRingBuffer&lt;T, C&gt;::operator[]</a>(ezUInt32 uiIndex)<span class="keyword"> const</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;  EZ_ASSERT_DEV(uiIndex &lt; m_uiCount, <span class="stringliteral">&quot;The ring-buffer only has {0} elements, cannot access element {1}.&quot;</span>, m_uiCount, uiIndex);</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160; </div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;  <span class="keywordflow">return</span> m_pElements[(m_uiFirstElement + uiIndex) % C];</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;}</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160; </div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, ezUInt32 C&gt;</div>
<div class="line"><a name="l00138"></a><span class="lineno"><a class="line" href="../../d2/dc3/classez_static_ring_buffer.htm#a8fabace6dfd8edd16eb718b6be2dc1fb">  138</a></span>&#160;EZ_FORCE_INLINE T&amp; <a class="code" href="../../d2/dc3/classez_static_ring_buffer.htm#a382b26cf0d73e00146955b0d412c6e3a">ezStaticRingBuffer&lt;T, C&gt;::operator[]</a>(ezUInt32 uiIndex)</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;{</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;  EZ_ASSERT_DEV(uiIndex &lt; m_uiCount, <span class="stringliteral">&quot;The ring-buffer only has {0} elements, cannot access element {1}.&quot;</span>, m_uiCount, uiIndex);</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160; </div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;  <span class="keywordflow">return</span> m_pElements[(m_uiFirstElement + uiIndex) % C];</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;}</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160; </div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, ezUInt32 C&gt;</div>
<div class="line"><a name="l00146"></a><span class="lineno"><a class="line" href="../../d2/dc3/classez_static_ring_buffer.htm#a75aeaf529f144f803ed0117f75fe8d8b">  146</a></span>&#160;EZ_ALWAYS_INLINE ezUInt32 <a class="code" href="../../d2/dc3/classez_static_ring_buffer.htm#a75aeaf529f144f803ed0117f75fe8d8b">ezStaticRingBuffer&lt;T, C&gt;::GetCount</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;  <span class="keywordflow">return</span> m_uiCount;</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;}</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160; </div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, ezUInt32 C&gt;</div>
<div class="line"><a name="l00152"></a><span class="lineno"><a class="line" href="../../d2/dc3/classez_static_ring_buffer.htm#a3768b2e8eb7f5e0de2ce2fb9eca47363">  152</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../d2/dc3/classez_static_ring_buffer.htm#a3768b2e8eb7f5e0de2ce2fb9eca47363">ezStaticRingBuffer&lt;T, C&gt;::IsEmpty</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;  <span class="keywordflow">return</span> m_uiCount == 0;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;}</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160; </div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, ezUInt32 C&gt;</div>
<div class="line"><a name="l00158"></a><span class="lineno"><a class="line" href="../../d2/dc3/classez_static_ring_buffer.htm#a882b3aafe0682c221b41638a196aeb4a">  158</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../d2/dc3/classez_static_ring_buffer.htm#a882b3aafe0682c221b41638a196aeb4a">ezStaticRingBuffer&lt;T, C&gt;::CanAppend</a>(ezUInt32 uiElements)</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;{</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;  <span class="keywordflow">return</span> (m_uiCount + uiElements) &lt;= C;</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;}</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160; </div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, ezUInt32 C&gt;</div>
<div class="line"><a name="l00164"></a><span class="lineno"><a class="line" href="../../d2/dc3/classez_static_ring_buffer.htm#a36fdb81685e4bac47c235f46300dc1ca">  164</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="../../d2/dc3/classez_static_ring_buffer.htm#a36fdb81685e4bac47c235f46300dc1ca">ezStaticRingBuffer&lt;T, C&gt;::Clear</a>()</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;{</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;  <span class="keywordflow">while</span> (!IsEmpty())</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;    PopFront();</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;}</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160; </div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, ezUInt32 C&gt;</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;EZ_ALWAYS_INLINE T* <a class="code" href="../../d2/dc3/classez_static_ring_buffer.htm">ezStaticRingBuffer&lt;T, C&gt;::GetStaticArray</a>()</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;{</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">reinterpret_cast&lt;</span>T*<span class="keyword">&gt;</span>(m_Data);</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;}</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassez_static_ring_buffer_htm_a382b26cf0d73e00146955b0d412c6e3a"><div class="ttname"><a href="../../d2/dc3/classez_static_ring_buffer.htm#a382b26cf0d73e00146955b0d412c6e3a">ezStaticRingBuffer::operator[]</a></div><div class="ttdeci">const T &amp; operator[](ezUInt32 uiIndex) const</div><div class="ttdoc">Accesses the n-th element in the ring-buffer.</div><div class="ttdef"><b>Definition:</b> StaticRingBuffer_inl.h:130</div></div>
<div class="ttc" id="aclassez_static_ring_buffer_htm_a3768b2e8eb7f5e0de2ce2fb9eca47363"><div class="ttname"><a href="../../d2/dc3/classez_static_ring_buffer.htm#a3768b2e8eb7f5e0de2ce2fb9eca47363">ezStaticRingBuffer::IsEmpty</a></div><div class="ttdeci">bool IsEmpty() const</div><div class="ttdoc">Returns true if the ring-buffer currently contains no elements.</div><div class="ttdef"><b>Definition:</b> StaticRingBuffer_inl.h:152</div></div>
<div class="ttc" id="aclassez_static_ring_buffer_htm_a882b3aafe0682c221b41638a196aeb4a"><div class="ttname"><a href="../../d2/dc3/classez_static_ring_buffer.htm#a882b3aafe0682c221b41638a196aeb4a">ezStaticRingBuffer::CanAppend</a></div><div class="ttdeci">bool CanAppend(ezUInt32 uiElements=1)</div><div class="ttdoc">Returns true, if the ring-buffer can store at least uiElements additional elements.</div><div class="ttdef"><b>Definition:</b> StaticRingBuffer_inl.h:158</div></div>
<div class="ttc" id="aclassez_static_ring_buffer_htm"><div class="ttname"><a href="../../d2/dc3/classez_static_ring_buffer.htm">ezStaticRingBuffer</a></div><div class="ttdoc">A ring-buffer container that will use a static array of a given capacity to cycle through elements.</div><div class="ttdef"><b>Definition:</b> StaticRingBuffer.h:9</div></div>
<div class="ttc" id="aclassez_static_ring_buffer_htm_a36fdb81685e4bac47c235f46300dc1ca"><div class="ttname"><a href="../../d2/dc3/classez_static_ring_buffer.htm#a36fdb81685e4bac47c235f46300dc1ca">ezStaticRingBuffer::Clear</a></div><div class="ttdeci">void Clear()</div><div class="ttdoc">Destructs all elements in the ring-buffer.</div><div class="ttdef"><b>Definition:</b> StaticRingBuffer_inl.h:164</div></div>
<div class="ttc" id="aclassez_static_ring_buffer_htm_aab1e144751b15478f3de872de1e7482b"><div class="ttname"><a href="../../d2/dc3/classez_static_ring_buffer.htm#aab1e144751b15478f3de872de1e7482b">ezStaticRingBuffer::operator!=</a></div><div class="ttdeci">bool operator!=(const ezStaticRingBuffer&lt; T, Capacity &gt; &amp;rhs) const</div><div class="ttdoc">Compares two ring-buffers for inequality.</div><div class="ttdef"><b>Definition:</b> StaticRingBuffer_inl.h:52</div></div>
<div class="ttc" id="aclassez_static_ring_buffer_htm_a6e9f5a49d579b52bf6d26ac8c07219b7"><div class="ttname"><a href="../../d2/dc3/classez_static_ring_buffer.htm#a6e9f5a49d579b52bf6d26ac8c07219b7">ezStaticRingBuffer::ezStaticRingBuffer</a></div><div class="ttdeci">ezStaticRingBuffer()</div><div class="ttdoc">Constructs an empty ring-buffer.</div><div class="ttdef"><b>Definition:</b> StaticRingBuffer_inl.h:4</div></div>
<div class="ttc" id="aclassez_memory_utils_htm_a945a697e081b8f264a7b9d4ec8f66ffe"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm#a945a697e081b8f264a7b9d4ec8f66ffe">ezMemoryUtils::MoveConstruct</a></div><div class="ttdeci">static void MoveConstruct(T *pDestination, T &amp;&amp;source)</div><div class="ttdoc">Constructs an object of type T in a raw buffer at pDestination, by using move construction from sourc...</div></div>
<div class="ttc" id="aclassez_static_ring_buffer_htm_a895a5ef77cc69cd941657c98516837ea"><div class="ttname"><a href="../../d2/dc3/classez_static_ring_buffer.htm#a895a5ef77cc69cd941657c98516837ea">ezStaticRingBuffer::operator=</a></div><div class="ttdeci">void operator=(const ezStaticRingBuffer&lt; T, Capacity &gt; &amp;rhs)</div><div class="ttdoc">Copies the content from rhs into this ring-buffer.</div><div class="ttdef"><b>Definition:</b> StaticRingBuffer_inl.h:28</div></div>
<div class="ttc" id="aclassez_static_ring_buffer_htm_acd1fea24ed2aed3a88c791ae43cd7176"><div class="ttname"><a href="../../d2/dc3/classez_static_ring_buffer.htm#acd1fea24ed2aed3a88c791ae43cd7176">ezStaticRingBuffer::PopFront</a></div><div class="ttdeci">void PopFront(ezUInt32 uiElements=1)</div><div class="ttdoc">Removes the oldest element from the ring-buffer.</div><div class="ttdef"><b>Definition:</b> StaticRingBuffer_inl.h:98</div></div>
<div class="ttc" id="aclassez_static_ring_buffer_htm_aed7c03216d20f4acdfae6279be068c0c"><div class="ttname"><a href="../../d2/dc3/classez_static_ring_buffer.htm#aed7c03216d20f4acdfae6279be068c0c">ezStaticRingBuffer::~ezStaticRingBuffer</a></div><div class="ttdeci">~ezStaticRingBuffer()</div><div class="ttdoc">Destructs all remaining elements.</div><div class="ttdef"><b>Definition:</b> StaticRingBuffer_inl.h:22</div></div>
<div class="ttc" id="aclassez_static_ring_buffer_htm_a75aeaf529f144f803ed0117f75fe8d8b"><div class="ttname"><a href="../../d2/dc3/classez_static_ring_buffer.htm#a75aeaf529f144f803ed0117f75fe8d8b">ezStaticRingBuffer::GetCount</a></div><div class="ttdeci">ezUInt32 GetCount() const</div><div class="ttdoc">Returns the number of elements that are currently in the ring-buffer.</div><div class="ttdef"><b>Definition:</b> StaticRingBuffer_inl.h:146</div></div>
<div class="ttc" id="aclassez_memory_utils_htm_ab768b24491ab1feb611b5036d37e39f2"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm#ab768b24491ab1feb611b5036d37e39f2">ezMemoryUtils::CopyConstruct</a></div><div class="ttdeci">static void CopyConstruct(Destination *pDestination, const Source &amp;copy, size_t uiCount)</div><div class="ttdoc">Constructs uiCount objects of type T in a raw buffer at pDestination, by creating uiCount copies of c...</div></div>
<div class="ttc" id="aclassez_memory_utils_htm_aea6c4d3ce40c31abd9cc00fd94759c64"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm#aea6c4d3ce40c31abd9cc00fd94759c64">ezMemoryUtils::Destruct</a></div><div class="ttdeci">static void Destruct(T *pDestination, size_t uiCount)</div><div class="ttdoc">Destructs uiCount objects of type T at pDestination.</div></div>
<div class="ttc" id="aclassez_static_ring_buffer_htm_ad26beb6981607a8162264db1eb1143f4"><div class="ttname"><a href="../../d2/dc3/classez_static_ring_buffer.htm#ad26beb6981607a8162264db1eb1143f4">ezStaticRingBuffer::PeekBack</a></div><div class="ttdeci">T &amp; PeekBack()</div><div class="ttdoc">Accesses the latest element in the ring-buffer.</div><div class="ttdef"><b>Definition:</b> StaticRingBuffer_inl.h:80</div></div>
<div class="ttc" id="aclassez_static_ring_buffer_htm_a62c5ae16b401f8c5f4f15fe1cea8812b"><div class="ttname"><a href="../../d2/dc3/classez_static_ring_buffer.htm#a62c5ae16b401f8c5f4f15fe1cea8812b">ezStaticRingBuffer::PushBack</a></div><div class="ttdeci">void PushBack(const T &amp;element)</div><div class="ttdoc">Appends an element at the end of the ring-buffer. Asserts that CanAppend() is true.</div><div class="ttdef"><b>Definition:</b> StaticRingBuffer_inl.h:58</div></div>
<div class="ttc" id="aclassez_static_ring_buffer_htm_a5d4fd78ce4d7541bc0e232d0d345d42f"><div class="ttname"><a href="../../d2/dc3/classez_static_ring_buffer.htm#a5d4fd78ce4d7541bc0e232d0d345d42f">ezStaticRingBuffer::PeekFront</a></div><div class="ttdeci">const T &amp; PeekFront() const</div><div class="ttdoc">Accesses the oldest element in the ring-buffer.</div><div class="ttdef"><b>Definition:</b> StaticRingBuffer_inl.h:114</div></div>
<div class="ttc" id="aclassez_static_ring_buffer_htm_a5adc5768024a6a58be10e634bcf97565"><div class="ttname"><a href="../../d2/dc3/classez_static_ring_buffer.htm#a5adc5768024a6a58be10e634bcf97565">ezStaticRingBuffer::operator==</a></div><div class="ttdeci">bool operator==(const ezStaticRingBuffer&lt; T, Capacity &gt; &amp;rhs) const</div><div class="ttdoc">Compares two ring-buffers for equality.</div><div class="ttdef"><b>Definition:</b> StaticRingBuffer_inl.h:37</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_6b567e6755824bd0b8ffd754b9d67ac0.htm">Containers</a></li><li class="navelem"><a class="el" href="../../dir_ab7c7fd106dde24a64865a60f78fe0d2.htm">Implementation</a></li><li class="navelem"><b>StaticRingBuffer_inl.h</b></li>
    <li class="footer">Generated on Mon Oct 18 2021 15:24:09 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
