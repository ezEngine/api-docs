<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/CodeUtils/Expression/ExpressionAST.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">ezEngine<span id="projectnumber">&#160;Release 25.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function() { init_codefold(1); });
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('dd/df9/_expression_a_s_t_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">ExpressionAST.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="preprocessor">#include &lt;Foundation/CodeUtils/Expression/ExpressionDeclarations.h&gt;</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="preprocessor">#include &lt;Foundation/Memory/LinearAllocator.h&gt;</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span> </div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="keyword">class </span><a class="code hl_class" href="../../d1/dd8/classez_d_g_m_l_graph.htm">ezDGMLGraph</a>;</div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span> </div>
<div class="foldopen" id="foldopen00008" data-start="{" data-end="};">
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno"><a class="line" href="../../d6/d10/classez_expression_a_s_t.htm">    8</a></span><span class="keyword">class </span>EZ_FOUNDATION_DLL <a class="code hl_class" href="../../d6/d10/classez_expression_a_s_t.htm">ezExpressionAST</a></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span>{</div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="keyword">public</span>:</div>
<div class="foldopen" id="foldopen00011" data-start="{" data-end="};">
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno"><a class="line" href="../../d2/d8f/structez_expression_a_s_t_1_1_node_type.htm">   11</a></span>  <span class="keyword">struct </span><a class="code hl_struct" href="../../d2/d8f/structez_expression_a_s_t_1_1_node_type.htm">NodeType</a></div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span>  {</div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span>    <span class="keyword">using </span>StorageType = ezUInt8;</div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span> </div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span>    <span class="keyword">enum</span> Enum</div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span>    {</div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span>      Invalid,</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span>      Default = Invalid,</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span> </div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span>      <span class="comment">// Unary</span></div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span>      FirstUnary,</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span>      Negate,</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span>      Absolute,</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span>      Saturate,</div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span>      Sqrt,</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span>      Exp,</div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span>      Ln,</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span>      Log2,</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span>      Log10,</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span>      Pow2,</div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span>      Sin,</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span>      Cos,</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>      Tan,</div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span>      ASin,</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>      ACos,</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span>      ATan,</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span>      RadToDeg,</div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>      DegToRad,</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span>      Round,</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span>      Floor,</div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>      Ceil,</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>      Trunc,</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span>      Frac,</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>      Length,</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>      Normalize,</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span>      BitwiseNot,</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span>      LogicalNot,</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>      All,</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span>      Any,</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span>      TypeConversion,</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>      LastUnary,</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span> </div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>      <span class="comment">// Binary</span></div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>      FirstBinary,</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>      Add,</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>      Subtract,</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>      Multiply,</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>      Divide,</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>      Modulo,</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span>      Log,</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>      Pow,</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>      Min,</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>      Max,</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span>      Dot,</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>      Cross,</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span>      Reflect,</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>      BitshiftLeft,</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>      BitshiftRight,</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>      BitwiseAnd,</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>      BitwiseXor,</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>      BitwiseOr,</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>      Equal,</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>      NotEqual,</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>      Less,</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>      LessEqual,</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>      Greater,</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>      GreaterEqual,</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>      LogicalAnd,</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>      LogicalOr,</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>      LastBinary,</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span> </div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span>      <span class="comment">// Ternary</span></div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>      FirstTernary,</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>      Clamp,</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>      Select,</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>      Lerp,</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>      SmoothStep,</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>      SmootherStep,</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>      LastTernary,</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span> </div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>      <a class="code hl_struct" href="../../d9/d4d/structez_expression_a_s_t_1_1_constant.htm">Constant</a>,</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>      <a class="code hl_struct" href="../../d7/d58/structez_expression_a_s_t_1_1_swizzle.htm">Swizzle</a>,</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>      <a class="code hl_struct" href="../../d4/d44/structez_expression_a_s_t_1_1_input.htm">Input</a>,</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span>      <a class="code hl_struct" href="../../d8/d08/structez_expression_a_s_t_1_1_output.htm">Output</a>,</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span> </div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>      <a class="code hl_struct" href="../../df/d2d/structez_expression_a_s_t_1_1_function_call.htm">FunctionCall</a>,</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span>      <a class="code hl_struct" href="../../df/d36/structez_expression_a_s_t_1_1_constructor_call.htm">ConstructorCall</a>,</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span> </div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>      Count</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>    };</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span> </div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>    <span class="keyword">static</span> <span class="keywordtype">bool</span> IsUnary(Enum nodeType);</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>    <span class="keyword">static</span> <span class="keywordtype">bool</span> IsBinary(Enum nodeType);</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>    <span class="keyword">static</span> <span class="keywordtype">bool</span> IsTernary(Enum nodeType);</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>    <span class="keyword">static</span> <span class="keywordtype">bool</span> IsConstant(Enum nodeType);</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>    <span class="keyword">static</span> <span class="keywordtype">bool</span> IsSwizzle(Enum nodeType);</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>    <span class="keyword">static</span> <span class="keywordtype">bool</span> IsInput(Enum nodeType);</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>    <span class="keyword">static</span> <span class="keywordtype">bool</span> IsOutput(Enum nodeType);</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>    <span class="keyword">static</span> <span class="keywordtype">bool</span> IsFunctionCall(Enum nodeType);</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span>    <span class="keyword">static</span> <span class="keywordtype">bool</span> IsConstructorCall(Enum nodeType);</div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span> </div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span>    <span class="keyword">static</span> <span class="keywordtype">bool</span> IsCommutative(Enum nodeType);</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>    <span class="keyword">static</span> <span class="keywordtype">bool</span> AlwaysReturnsSingleElement(Enum nodeType);</div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span> </div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span>    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* GetName(Enum nodeType);</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>  };</div>
</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span> </div>
<div class="foldopen" id="foldopen00118" data-start="{" data-end="};">
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno"><a class="line" href="../../d8/dba/structez_expression_a_s_t_1_1_data_type.htm">  118</a></span>  <span class="keyword">struct </span><a class="code hl_struct" href="../../d8/dba/structez_expression_a_s_t_1_1_data_type.htm">DataType</a></div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>  {</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>    <span class="keyword">using </span>StorageType = ezUInt8;</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span> </div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>    <span class="keyword">enum</span> Enum</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span>    {</div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span>      Unknown,</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span>      Unknown2,</div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span>      Unknown3,</div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span>      Unknown4,</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span> </div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span>      Bool,</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span>      Bool2,</div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span>      Bool3,</div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span>      Bool4,</div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span> </div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>      Int,</div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span>      Int2,</div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span>      Int3,</div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span>      Int4,</div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span> </div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span>      Float,</div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>      Float2,</div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span>      Float3,</div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>      Float4,</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span> </div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span>      Count,</div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span> </div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span>      Default = Unknown,</div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span>    };</div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span> </div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span>    <span class="keyword">static</span> <a class="code hl_enumeration" href="../../da/d6c/structez_variant_type.htm#a91ecf53decb31d57981c71043fa30299">ezVariantType::Enum</a> GetVariantType(Enum dataType);</div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span> </div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span>    <span class="keyword">static</span> Enum FromStreamType(<a class="code hl_enumeration" href="../../d6/d22/classez_processing_stream.htm#a27ae356e114f4668f714bb63dd775f17">ezProcessingStream::DataType</a> dataType);</div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span> </div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span>    EZ_ALWAYS_INLINE <span class="keyword">static</span> ezExpression::RegisterType::Enum GetRegisterType(Enum dataType)</div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span>    {</div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span>      <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span>ezExpression::RegisterType::Enum<span class="keyword">&gt;</span>(dataType &gt;&gt; 2);</div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span>    }</div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span> </div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span>    EZ_ALWAYS_INLINE <span class="keyword">static</span> Enum FromRegisterType(ezExpression::RegisterType::Enum registerType, ezUInt32 uiElementCount = 1)</div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span>    {</div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span>      <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span>ezExpressionAST::DataType::Enum<span class="keyword">&gt;</span>((registerType &lt;&lt; 2) + uiElementCount - 1);</div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span>    }</div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span> </div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span>    EZ_ALWAYS_INLINE <span class="keyword">static</span> ezUInt32 GetElementCount(Enum dataType) { <span class="keywordflow">return</span> (dataType &amp; 0x3) + 1; }</div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span> </div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span>    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* GetName(Enum dataType);</div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span>  };</div>
</div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span> </div>
<div class="foldopen" id="foldopen00168" data-start="{" data-end="};">
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno"><a class="line" href="../../d0/d43/structez_expression_a_s_t_1_1_vector_component.htm">  168</a></span>  <span class="keyword">struct </span><a class="code hl_struct" href="../../d0/d43/structez_expression_a_s_t_1_1_vector_component.htm">VectorComponent</a></div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span>  {</div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span>    <span class="keyword">using </span>StorageType = ezUInt8;</div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span> </div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span>    <span class="keyword">enum</span> Enum</div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span>    {</div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span>      X,</div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span>      Y,</div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span>      Z,</div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span>      W,</div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span> </div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span>      R = X,</div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span>      G = Y,</div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span>      B = Z,</div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span>      A = W,</div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno">  183</span> </div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span>      Count,</div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span> </div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span>      Default = X</div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span>    };</div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span> </div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span>    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* GetName(Enum vectorComponent);</div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span> </div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span>    <span class="keyword">static</span> Enum FromChar(ezUInt32 uiChar);</div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span>  };</div>
</div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span> </div>
<div class="foldopen" id="foldopen00194" data-start="{" data-end="};">
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno"><a class="line" href="../../d2/d95/structez_expression_a_s_t_1_1_node.htm">  194</a></span>  <span class="keyword">struct </span><a class="code hl_struct" href="../../d2/d95/structez_expression_a_s_t_1_1_node.htm">Node</a></div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span>  {</div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span>    <a class="code hl_struct" href="../../d6/dd9/structez_enum.htm">ezEnum&lt;NodeType&gt;</a> m_Type;</div>
<div class="line"><a id="l00197" name="l00197"></a><span class="lineno">  197</span>    <a class="code hl_struct" href="../../d6/dd9/structez_enum.htm">ezEnum&lt;DataType&gt;</a> m_ReturnType;</div>
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno">  198</span>    ezUInt8 m_uiOverloadIndex = 0xFF;</div>
<div class="line"><a id="l00199" name="l00199"></a><span class="lineno">  199</span>    ezUInt8 m_uiNumInputElements = 0;</div>
<div class="line"><a id="l00200" name="l00200"></a><span class="lineno">  200</span> </div>
<div class="line"><a id="l00201" name="l00201"></a><span class="lineno">  201</span>    ezUInt32 m_uiHash = 0;</div>
<div class="line"><a id="l00202" name="l00202"></a><span class="lineno">  202</span>  };</div>
</div>
<div class="line"><a id="l00203" name="l00203"></a><span class="lineno">  203</span> </div>
<div class="foldopen" id="foldopen00204" data-start="{" data-end="};">
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno"><a class="line" href="../../de/d35/structez_expression_a_s_t_1_1_unary_operator.htm">  204</a></span>  <span class="keyword">struct </span><a class="code hl_struct" href="../../de/d35/structez_expression_a_s_t_1_1_unary_operator.htm">UnaryOperator</a> : <span class="keyword">public</span> <a class="code hl_struct" href="../../d2/d95/structez_expression_a_s_t_1_1_node.htm">Node</a></div>
<div class="line"><a id="l00205" name="l00205"></a><span class="lineno">  205</span>  {</div>
<div class="line"><a id="l00206" name="l00206"></a><span class="lineno">  206</span>    <a class="code hl_struct" href="../../d2/d95/structez_expression_a_s_t_1_1_node.htm">Node</a>* m_pOperand = <span class="keyword">nullptr</span>;</div>
<div class="line"><a id="l00207" name="l00207"></a><span class="lineno">  207</span>  };</div>
</div>
<div class="line"><a id="l00208" name="l00208"></a><span class="lineno">  208</span> </div>
<div class="foldopen" id="foldopen00209" data-start="{" data-end="};">
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno"><a class="line" href="../../da/dcf/structez_expression_a_s_t_1_1_binary_operator.htm">  209</a></span>  <span class="keyword">struct </span><a class="code hl_struct" href="../../da/dcf/structez_expression_a_s_t_1_1_binary_operator.htm">BinaryOperator</a> : <span class="keyword">public</span> <a class="code hl_struct" href="../../d2/d95/structez_expression_a_s_t_1_1_node.htm">Node</a></div>
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno">  210</span>  {</div>
<div class="line"><a id="l00211" name="l00211"></a><span class="lineno">  211</span>    <a class="code hl_struct" href="../../d2/d95/structez_expression_a_s_t_1_1_node.htm">Node</a>* m_pLeftOperand = <span class="keyword">nullptr</span>;</div>
<div class="line"><a id="l00212" name="l00212"></a><span class="lineno">  212</span>    <a class="code hl_struct" href="../../d2/d95/structez_expression_a_s_t_1_1_node.htm">Node</a>* m_pRightOperand = <span class="keyword">nullptr</span>;</div>
<div class="line"><a id="l00213" name="l00213"></a><span class="lineno">  213</span>  };</div>
</div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno">  214</span> </div>
<div class="foldopen" id="foldopen00215" data-start="{" data-end="};">
<div class="line"><a id="l00215" name="l00215"></a><span class="lineno"><a class="line" href="../../d1/d0f/structez_expression_a_s_t_1_1_ternary_operator.htm">  215</a></span>  <span class="keyword">struct </span><a class="code hl_struct" href="../../d1/d0f/structez_expression_a_s_t_1_1_ternary_operator.htm">TernaryOperator</a> : <span class="keyword">public</span> <a class="code hl_struct" href="../../d2/d95/structez_expression_a_s_t_1_1_node.htm">Node</a></div>
<div class="line"><a id="l00216" name="l00216"></a><span class="lineno">  216</span>  {</div>
<div class="line"><a id="l00217" name="l00217"></a><span class="lineno">  217</span>    <a class="code hl_struct" href="../../d2/d95/structez_expression_a_s_t_1_1_node.htm">Node</a>* m_pFirstOperand = <span class="keyword">nullptr</span>;</div>
<div class="line"><a id="l00218" name="l00218"></a><span class="lineno">  218</span>    <a class="code hl_struct" href="../../d2/d95/structez_expression_a_s_t_1_1_node.htm">Node</a>* m_pSecondOperand = <span class="keyword">nullptr</span>;</div>
<div class="line"><a id="l00219" name="l00219"></a><span class="lineno">  219</span>    <a class="code hl_struct" href="../../d2/d95/structez_expression_a_s_t_1_1_node.htm">Node</a>* m_pThirdOperand = <span class="keyword">nullptr</span>;</div>
<div class="line"><a id="l00220" name="l00220"></a><span class="lineno">  220</span>  };</div>
</div>
<div class="line"><a id="l00221" name="l00221"></a><span class="lineno">  221</span> </div>
<div class="foldopen" id="foldopen00222" data-start="{" data-end="};">
<div class="line"><a id="l00222" name="l00222"></a><span class="lineno"><a class="line" href="../../d9/d4d/structez_expression_a_s_t_1_1_constant.htm">  222</a></span>  <span class="keyword">struct </span><a class="code hl_struct" href="../../d9/d4d/structez_expression_a_s_t_1_1_constant.htm">Constant</a> : <span class="keyword">public</span> <a class="code hl_struct" href="../../d2/d95/structez_expression_a_s_t_1_1_node.htm">Node</a></div>
<div class="line"><a id="l00223" name="l00223"></a><span class="lineno">  223</span>  {</div>
<div class="line"><a id="l00224" name="l00224"></a><span class="lineno">  224</span>    <a class="code hl_class" href="../../de/de6/classez_variant.htm">ezVariant</a> m_Value;</div>
<div class="line"><a id="l00225" name="l00225"></a><span class="lineno">  225</span>  };</div>
</div>
<div class="line"><a id="l00226" name="l00226"></a><span class="lineno">  226</span> </div>
<div class="foldopen" id="foldopen00227" data-start="{" data-end="};">
<div class="line"><a id="l00227" name="l00227"></a><span class="lineno"><a class="line" href="../../d7/d58/structez_expression_a_s_t_1_1_swizzle.htm">  227</a></span>  <span class="keyword">struct </span><a class="code hl_struct" href="../../d7/d58/structez_expression_a_s_t_1_1_swizzle.htm">Swizzle</a> : <span class="keyword">public</span> <a class="code hl_struct" href="../../d2/d95/structez_expression_a_s_t_1_1_node.htm">Node</a></div>
<div class="line"><a id="l00228" name="l00228"></a><span class="lineno">  228</span>  {</div>
<div class="line"><a id="l00229" name="l00229"></a><span class="lineno">  229</span>    <a class="code hl_struct" href="../../d6/dd9/structez_enum.htm">ezEnum&lt;VectorComponent&gt;</a> m_Components[4];</div>
<div class="line"><a id="l00230" name="l00230"></a><span class="lineno">  230</span>    ezUInt32 m_NumComponents = 0;</div>
<div class="line"><a id="l00231" name="l00231"></a><span class="lineno">  231</span>    <a class="code hl_struct" href="../../d2/d95/structez_expression_a_s_t_1_1_node.htm">Node</a>* m_pExpression = <span class="keyword">nullptr</span>;</div>
<div class="line"><a id="l00232" name="l00232"></a><span class="lineno">  232</span>  };</div>
</div>
<div class="line"><a id="l00233" name="l00233"></a><span class="lineno">  233</span> </div>
<div class="foldopen" id="foldopen00234" data-start="{" data-end="};">
<div class="line"><a id="l00234" name="l00234"></a><span class="lineno"><a class="line" href="../../d4/d44/structez_expression_a_s_t_1_1_input.htm">  234</a></span>  <span class="keyword">struct </span><a class="code hl_struct" href="../../d4/d44/structez_expression_a_s_t_1_1_input.htm">Input</a> : <span class="keyword">public</span> <a class="code hl_struct" href="../../d2/d95/structez_expression_a_s_t_1_1_node.htm">Node</a></div>
<div class="line"><a id="l00235" name="l00235"></a><span class="lineno">  235</span>  {</div>
<div class="line"><a id="l00236" name="l00236"></a><span class="lineno">  236</span>    <a class="code hl_struct" href="../../d2/d95/structez_expression_1_1_stream_desc.htm">ezExpression::StreamDesc</a> m_Desc;</div>
<div class="line"><a id="l00237" name="l00237"></a><span class="lineno">  237</span>  };</div>
</div>
<div class="line"><a id="l00238" name="l00238"></a><span class="lineno">  238</span> </div>
<div class="foldopen" id="foldopen00239" data-start="{" data-end="};">
<div class="line"><a id="l00239" name="l00239"></a><span class="lineno"><a class="line" href="../../d8/d08/structez_expression_a_s_t_1_1_output.htm">  239</a></span>  <span class="keyword">struct </span><a class="code hl_struct" href="../../d8/d08/structez_expression_a_s_t_1_1_output.htm">Output</a> : <span class="keyword">public</span> <a class="code hl_struct" href="../../d2/d95/structez_expression_a_s_t_1_1_node.htm">Node</a></div>
<div class="line"><a id="l00240" name="l00240"></a><span class="lineno">  240</span>  {</div>
<div class="line"><a id="l00241" name="l00241"></a><span class="lineno">  241</span>    <a class="code hl_struct" href="../../d2/d95/structez_expression_1_1_stream_desc.htm">ezExpression::StreamDesc</a> m_Desc;</div>
<div class="line"><a id="l00242" name="l00242"></a><span class="lineno">  242</span>    <a class="code hl_struct" href="../../d2/d95/structez_expression_a_s_t_1_1_node.htm">Node</a>* m_pExpression = <span class="keyword">nullptr</span>;</div>
<div class="line"><a id="l00243" name="l00243"></a><span class="lineno">  243</span>  };</div>
</div>
<div class="line"><a id="l00244" name="l00244"></a><span class="lineno">  244</span> </div>
<div class="foldopen" id="foldopen00245" data-start="{" data-end="};">
<div class="line"><a id="l00245" name="l00245"></a><span class="lineno"><a class="line" href="../../df/d2d/structez_expression_a_s_t_1_1_function_call.htm">  245</a></span>  <span class="keyword">struct </span><a class="code hl_struct" href="../../df/d2d/structez_expression_a_s_t_1_1_function_call.htm">FunctionCall</a> : <span class="keyword">public</span> <a class="code hl_struct" href="../../d2/d95/structez_expression_a_s_t_1_1_node.htm">Node</a></div>
<div class="line"><a id="l00246" name="l00246"></a><span class="lineno">  246</span>  {</div>
<div class="line"><a id="l00247" name="l00247"></a><span class="lineno">  247</span>    <a class="code hl_class" href="../../d0/d0c/classez_small_array.htm">ezSmallArray&lt;const ezExpression::FunctionDesc*, 1&gt;</a> m_Descs;</div>
<div class="line"><a id="l00248" name="l00248"></a><span class="lineno">  248</span>    <a class="code hl_class" href="../../d0/d0c/classez_small_array.htm">ezSmallArray&lt;Node*, 8&gt;</a> m_Arguments;</div>
<div class="line"><a id="l00249" name="l00249"></a><span class="lineno">  249</span>  };</div>
</div>
<div class="line"><a id="l00250" name="l00250"></a><span class="lineno">  250</span> </div>
<div class="foldopen" id="foldopen00251" data-start="{" data-end="};">
<div class="line"><a id="l00251" name="l00251"></a><span class="lineno"><a class="line" href="../../df/d36/structez_expression_a_s_t_1_1_constructor_call.htm">  251</a></span>  <span class="keyword">struct </span><a class="code hl_struct" href="../../df/d36/structez_expression_a_s_t_1_1_constructor_call.htm">ConstructorCall</a> : <span class="keyword">public</span> <a class="code hl_struct" href="../../d2/d95/structez_expression_a_s_t_1_1_node.htm">Node</a></div>
<div class="line"><a id="l00252" name="l00252"></a><span class="lineno">  252</span>  {</div>
<div class="line"><a id="l00253" name="l00253"></a><span class="lineno">  253</span>    <a class="code hl_class" href="../../d0/d0c/classez_small_array.htm">ezSmallArray&lt;Node*, 4&gt;</a> m_Arguments;</div>
<div class="line"><a id="l00254" name="l00254"></a><span class="lineno">  254</span>  };</div>
</div>
<div class="line"><a id="l00255" name="l00255"></a><span class="lineno">  255</span> </div>
<div class="line"><a id="l00256" name="l00256"></a><span class="lineno">  256</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00257" name="l00257"></a><span class="lineno">  257</span>  <a class="code hl_class" href="../../d6/d10/classez_expression_a_s_t.htm">ezExpressionAST</a>();</div>
<div class="line"><a id="l00258" name="l00258"></a><span class="lineno">  258</span>  <a class="code hl_class" href="../../d6/d10/classez_expression_a_s_t.htm">~ezExpressionAST</a>();</div>
<div class="line"><a id="l00259" name="l00259"></a><span class="lineno">  259</span> </div>
<div class="line"><a id="l00260" name="l00260"></a><span class="lineno">  260</span>  <a class="code hl_struct" href="../../de/d35/structez_expression_a_s_t_1_1_unary_operator.htm">UnaryOperator</a>* CreateUnaryOperator(NodeType::Enum type, <a class="code hl_struct" href="../../d2/d95/structez_expression_a_s_t_1_1_node.htm">Node</a>* pOperand, DataType::Enum returnType = DataType::Unknown);</div>
<div class="line"><a id="l00261" name="l00261"></a><span class="lineno">  261</span>  <a class="code hl_struct" href="../../da/dcf/structez_expression_a_s_t_1_1_binary_operator.htm">BinaryOperator</a>* CreateBinaryOperator(NodeType::Enum type, <a class="code hl_struct" href="../../d2/d95/structez_expression_a_s_t_1_1_node.htm">Node</a>* pLeftOperand, <a class="code hl_struct" href="../../d2/d95/structez_expression_a_s_t_1_1_node.htm">Node</a>* pRightOperand);</div>
<div class="line"><a id="l00262" name="l00262"></a><span class="lineno">  262</span>  <a class="code hl_struct" href="../../d1/d0f/structez_expression_a_s_t_1_1_ternary_operator.htm">TernaryOperator</a>* CreateTernaryOperator(NodeType::Enum type, <a class="code hl_struct" href="../../d2/d95/structez_expression_a_s_t_1_1_node.htm">Node</a>* pFirstOperand, <a class="code hl_struct" href="../../d2/d95/structez_expression_a_s_t_1_1_node.htm">Node</a>* pSecondOperand, <a class="code hl_struct" href="../../d2/d95/structez_expression_a_s_t_1_1_node.htm">Node</a>* pThirdOperand);</div>
<div class="line"><a id="l00263" name="l00263"></a><span class="lineno">  263</span>  <a class="code hl_struct" href="../../d9/d4d/structez_expression_a_s_t_1_1_constant.htm">Constant</a>* CreateConstant(<span class="keyword">const</span> <a class="code hl_class" href="../../de/de6/classez_variant.htm">ezVariant</a>&amp; value, DataType::Enum dataType = DataType::Float);</div>
<div class="line"><a id="l00264" name="l00264"></a><span class="lineno">  264</span>  <a class="code hl_struct" href="../../d7/d58/structez_expression_a_s_t_1_1_swizzle.htm">Swizzle</a>* CreateSwizzle(<a class="code hl_class" href="../../d9/d18/classez_string_view.htm">ezStringView</a> sSwizzle, <a class="code hl_struct" href="../../d2/d95/structez_expression_a_s_t_1_1_node.htm">Node</a>* pExpression);</div>
<div class="line"><a id="l00265" name="l00265"></a><span class="lineno">  265</span>  <a class="code hl_struct" href="../../d7/d58/structez_expression_a_s_t_1_1_swizzle.htm">Swizzle</a>* CreateSwizzle(<a class="code hl_struct" href="../../d6/dd9/structez_enum.htm">ezEnum&lt;VectorComponent&gt;</a> component, <a class="code hl_struct" href="../../d2/d95/structez_expression_a_s_t_1_1_node.htm">Node</a>* pExpression);</div>
<div class="line"><a id="l00266" name="l00266"></a><span class="lineno">  266</span>  <a class="code hl_struct" href="../../d7/d58/structez_expression_a_s_t_1_1_swizzle.htm">Swizzle</a>* CreateSwizzle(<a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt;<a class="code hl_struct" href="../../d6/dd9/structez_enum.htm">ezEnum&lt;VectorComponent&gt;</a>&gt; swizzle, <a class="code hl_struct" href="../../d2/d95/structez_expression_a_s_t_1_1_node.htm">Node</a>* pExpression);</div>
<div class="line"><a id="l00267" name="l00267"></a><span class="lineno">  267</span>  <a class="code hl_struct" href="../../d4/d44/structez_expression_a_s_t_1_1_input.htm">Input</a>* CreateInput(<span class="keyword">const</span> <a class="code hl_struct" href="../../d2/d95/structez_expression_1_1_stream_desc.htm">ezExpression::StreamDesc</a>&amp; desc);</div>
<div class="line"><a id="l00268" name="l00268"></a><span class="lineno">  268</span>  <a class="code hl_struct" href="../../d8/d08/structez_expression_a_s_t_1_1_output.htm">Output</a>* CreateOutput(<span class="keyword">const</span> <a class="code hl_struct" href="../../d2/d95/structez_expression_1_1_stream_desc.htm">ezExpression::StreamDesc</a>&amp; desc, <a class="code hl_struct" href="../../d2/d95/structez_expression_a_s_t_1_1_node.htm">Node</a>* pExpression);</div>
<div class="line"><a id="l00269" name="l00269"></a><span class="lineno">  269</span>  <a class="code hl_struct" href="../../df/d2d/structez_expression_a_s_t_1_1_function_call.htm">FunctionCall</a>* CreateFunctionCall(<span class="keyword">const</span> <a class="code hl_struct" href="../../d1/d06/structez_expression_1_1_function_desc.htm">ezExpression::FunctionDesc</a>&amp; desc, <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;Node*&gt;</a> arguments);</div>
<div class="line"><a id="l00270" name="l00270"></a><span class="lineno">  270</span>  <a class="code hl_struct" href="../../df/d2d/structez_expression_a_s_t_1_1_function_call.htm">FunctionCall</a>* CreateFunctionCall(<a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const ezExpression::FunctionDesc&gt;</a> descs, <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;Node*&gt;</a> arguments);</div>
<div class="line"><a id="l00271" name="l00271"></a><span class="lineno">  271</span>  <a class="code hl_struct" href="../../df/d36/structez_expression_a_s_t_1_1_constructor_call.htm">ConstructorCall</a>* CreateConstructorCall(DataType::Enum dataType, <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;Node*&gt;</a> arguments);</div>
<div class="line"><a id="l00272" name="l00272"></a><span class="lineno">  272</span>  <a class="code hl_struct" href="../../df/d36/structez_expression_a_s_t_1_1_constructor_call.htm">ConstructorCall</a>* CreateConstructorCall(<a class="code hl_struct" href="../../d2/d95/structez_expression_a_s_t_1_1_node.htm">Node</a>* pOldValue, <a class="code hl_struct" href="../../d2/d95/structez_expression_a_s_t_1_1_node.htm">Node</a>* pNewValue, <a class="code hl_class" href="../../d9/d18/classez_string_view.htm">ezStringView</a> sPartialAssignmentMask);</div>
<div class="line"><a id="l00273" name="l00273"></a><span class="lineno">  273</span> </div>
<div class="line"><a id="l00274" name="l00274"></a><span class="lineno">  274</span>  <span class="keyword">static</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;Node*&gt;</a> GetChildren(<a class="code hl_struct" href="../../d2/d95/structez_expression_a_s_t_1_1_node.htm">Node</a>* pNode);</div>
<div class="line"><a id="l00275" name="l00275"></a><span class="lineno">  275</span>  <span class="keyword">static</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const Node*&gt;</a> GetChildren(<span class="keyword">const</span> <a class="code hl_struct" href="../../d2/d95/structez_expression_a_s_t_1_1_node.htm">Node</a>* pNode);</div>
<div class="line"><a id="l00276" name="l00276"></a><span class="lineno">  276</span> </div>
<div class="line"><a id="l00277" name="l00277"></a><span class="lineno">  277</span>  <span class="keywordtype">void</span> PrintGraph(<a class="code hl_class" href="../../d1/dd8/classez_d_g_m_l_graph.htm">ezDGMLGraph</a>&amp; inout_graph) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00278" name="l00278"></a><span class="lineno">  278</span> </div>
<div class="line"><a id="l00279" name="l00279"></a><span class="lineno">  279</span>  <a class="code hl_class" href="../../d0/d0c/classez_small_array.htm">ezSmallArray&lt;Input*, 8&gt;</a> m_InputNodes;</div>
<div class="line"><a id="l00280" name="l00280"></a><span class="lineno">  280</span>  <a class="code hl_class" href="../../d0/d0c/classez_small_array.htm">ezSmallArray&lt;Output*, 8&gt;</a> m_OutputNodes;</div>
<div class="line"><a id="l00281" name="l00281"></a><span class="lineno">  281</span> </div>
<div class="line"><a id="l00282" name="l00282"></a><span class="lineno">  282</span>  <span class="comment">// Transforms</span></div>
<div class="line"><a id="l00283" name="l00283"></a><span class="lineno">  283</span>  <a class="code hl_struct" href="../../d2/d95/structez_expression_a_s_t_1_1_node.htm">Node</a>* TypeDeductionAndConversion(<a class="code hl_struct" href="../../d2/d95/structez_expression_a_s_t_1_1_node.htm">Node</a>* pNode);</div>
<div class="line"><a id="l00284" name="l00284"></a><span class="lineno">  284</span>  <a class="code hl_struct" href="../../d2/d95/structez_expression_a_s_t_1_1_node.htm">Node</a>* ReplaceVectorInstructions(<a class="code hl_struct" href="../../d2/d95/structez_expression_a_s_t_1_1_node.htm">Node</a>* pNode);</div>
<div class="line"><a id="l00285" name="l00285"></a><span class="lineno">  285</span>  <a class="code hl_struct" href="../../d2/d95/structez_expression_a_s_t_1_1_node.htm">Node</a>* ScalarizeVectorInstructions(<a class="code hl_struct" href="../../d2/d95/structez_expression_a_s_t_1_1_node.htm">Node</a>* pNode);</div>
<div class="line"><a id="l00286" name="l00286"></a><span class="lineno">  286</span>  <a class="code hl_struct" href="../../d2/d95/structez_expression_a_s_t_1_1_node.htm">Node</a>* ReplaceUnsupportedInstructions(<a class="code hl_struct" href="../../d2/d95/structez_expression_a_s_t_1_1_node.htm">Node</a>* pNode);</div>
<div class="line"><a id="l00287" name="l00287"></a><span class="lineno">  287</span>  <a class="code hl_struct" href="../../d2/d95/structez_expression_a_s_t_1_1_node.htm">Node</a>* FoldConstants(<a class="code hl_struct" href="../../d2/d95/structez_expression_a_s_t_1_1_node.htm">Node</a>* pNode);</div>
<div class="line"><a id="l00288" name="l00288"></a><span class="lineno">  288</span>  <a class="code hl_struct" href="../../d2/d95/structez_expression_a_s_t_1_1_node.htm">Node</a>* CommonSubexpressionElimination(<a class="code hl_struct" href="../../d2/d95/structez_expression_a_s_t_1_1_node.htm">Node</a>* pNode);</div>
<div class="line"><a id="l00289" name="l00289"></a><span class="lineno">  289</span>  <a class="code hl_struct" href="../../d2/d95/structez_expression_a_s_t_1_1_node.htm">Node</a>* Validate(<a class="code hl_struct" href="../../d2/d95/structez_expression_a_s_t_1_1_node.htm">Node</a>* pNode);</div>
<div class="line"><a id="l00290" name="l00290"></a><span class="lineno">  290</span> </div>
<div class="line"><a id="l00291" name="l00291"></a><span class="lineno">  291</span>  <a class="code hl_struct" href="../../d4/da9/structez_result.htm">ezResult</a> ScalarizeInputs();</div>
<div class="line"><a id="l00292" name="l00292"></a><span class="lineno">  292</span>  <a class="code hl_struct" href="../../d4/da9/structez_result.htm">ezResult</a> ScalarizeOutputs();</div>
<div class="line"><a id="l00293" name="l00293"></a><span class="lineno">  293</span> </div>
<div class="line"><a id="l00294" name="l00294"></a><span class="lineno">  294</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00295" name="l00295"></a><span class="lineno">  295</span>  <span class="keywordtype">void</span> ResolveOverloads(<a class="code hl_struct" href="../../d2/d95/structez_expression_a_s_t_1_1_node.htm">Node</a>* pNode);</div>
<div class="line"><a id="l00296" name="l00296"></a><span class="lineno">  296</span> </div>
<div class="line"><a id="l00297" name="l00297"></a><span class="lineno">  297</span>  <span class="keyword">static</span> DataType::Enum GetExpectedChildDataType(<span class="keyword">const</span> <a class="code hl_struct" href="../../d2/d95/structez_expression_a_s_t_1_1_node.htm">Node</a>* pNode, ezUInt32 uiChildIndex);</div>
<div class="line"><a id="l00298" name="l00298"></a><span class="lineno">  298</span> </div>
<div class="line"><a id="l00299" name="l00299"></a><span class="lineno">  299</span>  <span class="keyword">static</span> <span class="keywordtype">void</span> UpdateHash(<a class="code hl_struct" href="../../d2/d95/structez_expression_a_s_t_1_1_node.htm">Node</a>* pNode);</div>
<div class="line"><a id="l00300" name="l00300"></a><span class="lineno">  300</span>  <span class="keyword">static</span> <span class="keywordtype">bool</span> IsEqual(<span class="keyword">const</span> <a class="code hl_struct" href="../../d2/d95/structez_expression_a_s_t_1_1_node.htm">Node</a>* pNodeA, <span class="keyword">const</span> <a class="code hl_struct" href="../../d2/d95/structez_expression_a_s_t_1_1_node.htm">Node</a>* pNodeB);</div>
<div class="line"><a id="l00301" name="l00301"></a><span class="lineno">  301</span> </div>
<div class="line"><a id="l00302" name="l00302"></a><span class="lineno">  302</span>  <a class="code hl_class" href="../../d8/d6e/classez_linear_allocator.htm">ezLinearAllocator&lt;&gt;</a> m_Allocator;</div>
<div class="line"><a id="l00303" name="l00303"></a><span class="lineno">  303</span> </div>
<div class="line"><a id="l00304" name="l00304"></a><span class="lineno">  304</span>  <a class="code hl_class" href="../../d0/d90/classez_set.htm">ezSet&lt;ezExpression::FunctionDesc&gt;</a> m_FunctionDescs;</div>
<div class="line"><a id="l00305" name="l00305"></a><span class="lineno">  305</span> </div>
<div class="line"><a id="l00306" name="l00306"></a><span class="lineno">  306</span>  <a class="code hl_class" href="../../d8/d86/classez_hash_table.htm">ezHashTable&lt;ezUInt32, ezSmallArray&lt;Node*, 1&gt;</a>&gt; m_NodeDeduplicationTable;</div>
<div class="line"><a id="l00307" name="l00307"></a><span class="lineno">  307</span>};</div>
</div>
<div class="ttc" id="aclassez_array_ptr_htm"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a></div><div class="ttdoc">This class encapsulates an array and it's size. It is recommended to use this class instead of plain ...</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:41</div></div>
<div class="ttc" id="aclassez_d_g_m_l_graph_htm"><div class="ttname"><a href="../../d1/dd8/classez_d_g_m_l_graph.htm">ezDGMLGraph</a></div><div class="ttdoc">This class encapsulates building a DGML compatible graph.</div><div class="ttdef"><b>Definition</b> DGMLWriter.h:10</div></div>
<div class="ttc" id="aclassez_expression_a_s_t_htm"><div class="ttname"><a href="../../d6/d10/classez_expression_a_s_t.htm">ezExpressionAST</a></div><div class="ttdef"><b>Definition</b> ExpressionAST.h:9</div></div>
<div class="ttc" id="aclassez_hash_table_htm"><div class="ttname"><a href="../../d8/d86/classez_hash_table.htm">ezHashTable</a></div><div class="ttdef"><b>Definition</b> HashTable.h:335</div></div>
<div class="ttc" id="aclassez_linear_allocator_htm"><div class="ttname"><a href="../../d8/d6e/classez_linear_allocator.htm">ezLinearAllocator</a></div><div class="ttdef"><b>Definition</b> LinearAllocator.h:12</div></div>
<div class="ttc" id="aclassez_processing_stream_htm_a27ae356e114f4668f714bb63dd775f17"><div class="ttname"><a href="../../d6/d22/classez_processing_stream.htm#a27ae356e114f4668f714bb63dd775f17">ezProcessingStream::DataType</a></div><div class="ttdeci">DataType</div><div class="ttdoc">The data types which can be stored in the stream. When adding new data types the GetDataTypeSize() of...</div><div class="ttdef"><b>Definition</b> ProcessingStream.h:13</div></div>
<div class="ttc" id="aclassez_set_htm"><div class="ttname"><a href="../../d0/d90/classez_set.htm">ezSet</a></div><div class="ttdef"><b>Definition</b> Set.h:238</div></div>
<div class="ttc" id="aclassez_small_array_htm"><div class="ttname"><a href="../../d0/d0c/classez_small_array.htm">ezSmallArray</a></div><div class="ttdef"><b>Definition</b> SmallArray.h:224</div></div>
<div class="ttc" id="aclassez_string_view_htm"><div class="ttname"><a href="../../d9/d18/classez_string_view.htm">ezStringView</a></div><div class="ttdoc">ezStringView represent a read-only sub-string of a larger string, as it can store a dedicated string ...</div><div class="ttdef"><b>Definition</b> StringView.h:34</div></div>
<div class="ttc" id="aclassez_variant_htm"><div class="ttname"><a href="../../de/de6/classez_variant.htm">ezVariant</a></div><div class="ttdoc">ezVariant is a class that can store different types of variables, which is useful in situations where...</div><div class="ttdef"><b>Definition</b> Variant.h:44</div></div>
<div class="ttc" id="astructez_enum_htm"><div class="ttname"><a href="../../d6/dd9/structez_enum.htm">ezEnum</a></div><div class="ttdoc">A custom enum implementation that allows to define the underlying storage type to control its memory ...</div><div class="ttdef"><b>Definition</b> Enum.h:37</div></div>
<div class="ttc" id="astructez_expression_1_1_function_desc_htm"><div class="ttname"><a href="../../d1/d06/structez_expression_1_1_function_desc.htm">ezExpression::FunctionDesc</a></div><div class="ttdoc">Describes an expression function and its signature, e.g. how many input parameter it has and their ty...</div><div class="ttdef"><b>Definition</b> ExpressionDeclarations.h:72</div></div>
<div class="ttc" id="astructez_expression_1_1_stream_desc_htm"><div class="ttname"><a href="../../d2/d95/structez_expression_1_1_stream_desc.htm">ezExpression::StreamDesc</a></div><div class="ttdoc">Describes an input or output stream for a expression VM.</div><div class="ttdef"><b>Definition</b> ExpressionDeclarations.h:57</div></div>
<div class="ttc" id="astructez_expression_a_s_t_1_1_binary_operator_htm"><div class="ttname"><a href="../../da/dcf/structez_expression_a_s_t_1_1_binary_operator.htm">ezExpressionAST::BinaryOperator</a></div><div class="ttdef"><b>Definition</b> ExpressionAST.h:210</div></div>
<div class="ttc" id="astructez_expression_a_s_t_1_1_constant_htm"><div class="ttname"><a href="../../d9/d4d/structez_expression_a_s_t_1_1_constant.htm">ezExpressionAST::Constant</a></div><div class="ttdef"><b>Definition</b> ExpressionAST.h:223</div></div>
<div class="ttc" id="astructez_expression_a_s_t_1_1_constructor_call_htm"><div class="ttname"><a href="../../df/d36/structez_expression_a_s_t_1_1_constructor_call.htm">ezExpressionAST::ConstructorCall</a></div><div class="ttdef"><b>Definition</b> ExpressionAST.h:252</div></div>
<div class="ttc" id="astructez_expression_a_s_t_1_1_data_type_htm"><div class="ttname"><a href="../../d8/dba/structez_expression_a_s_t_1_1_data_type.htm">ezExpressionAST::DataType</a></div><div class="ttdef"><b>Definition</b> ExpressionAST.h:119</div></div>
<div class="ttc" id="astructez_expression_a_s_t_1_1_function_call_htm"><div class="ttname"><a href="../../df/d2d/structez_expression_a_s_t_1_1_function_call.htm">ezExpressionAST::FunctionCall</a></div><div class="ttdef"><b>Definition</b> ExpressionAST.h:246</div></div>
<div class="ttc" id="astructez_expression_a_s_t_1_1_input_htm"><div class="ttname"><a href="../../d4/d44/structez_expression_a_s_t_1_1_input.htm">ezExpressionAST::Input</a></div><div class="ttdef"><b>Definition</b> ExpressionAST.h:235</div></div>
<div class="ttc" id="astructez_expression_a_s_t_1_1_node_htm"><div class="ttname"><a href="../../d2/d95/structez_expression_a_s_t_1_1_node.htm">ezExpressionAST::Node</a></div><div class="ttdef"><b>Definition</b> ExpressionAST.h:195</div></div>
<div class="ttc" id="astructez_expression_a_s_t_1_1_node_type_htm"><div class="ttname"><a href="../../d2/d8f/structez_expression_a_s_t_1_1_node_type.htm">ezExpressionAST::NodeType</a></div><div class="ttdef"><b>Definition</b> ExpressionAST.h:12</div></div>
<div class="ttc" id="astructez_expression_a_s_t_1_1_output_htm"><div class="ttname"><a href="../../d8/d08/structez_expression_a_s_t_1_1_output.htm">ezExpressionAST::Output</a></div><div class="ttdef"><b>Definition</b> ExpressionAST.h:240</div></div>
<div class="ttc" id="astructez_expression_a_s_t_1_1_swizzle_htm"><div class="ttname"><a href="../../d7/d58/structez_expression_a_s_t_1_1_swizzle.htm">ezExpressionAST::Swizzle</a></div><div class="ttdef"><b>Definition</b> ExpressionAST.h:228</div></div>
<div class="ttc" id="astructez_expression_a_s_t_1_1_ternary_operator_htm"><div class="ttname"><a href="../../d1/d0f/structez_expression_a_s_t_1_1_ternary_operator.htm">ezExpressionAST::TernaryOperator</a></div><div class="ttdef"><b>Definition</b> ExpressionAST.h:216</div></div>
<div class="ttc" id="astructez_expression_a_s_t_1_1_unary_operator_htm"><div class="ttname"><a href="../../de/d35/structez_expression_a_s_t_1_1_unary_operator.htm">ezExpressionAST::UnaryOperator</a></div><div class="ttdef"><b>Definition</b> ExpressionAST.h:205</div></div>
<div class="ttc" id="astructez_expression_a_s_t_1_1_vector_component_htm"><div class="ttname"><a href="../../d0/d43/structez_expression_a_s_t_1_1_vector_component.htm">ezExpressionAST::VectorComponent</a></div><div class="ttdef"><b>Definition</b> ExpressionAST.h:169</div></div>
<div class="ttc" id="astructez_result_htm"><div class="ttname"><a href="../../d4/da9/structez_result.htm">ezResult</a></div><div class="ttdoc">Default enum for returning failure or success, instead of using a bool.</div><div class="ttdef"><b>Definition</b> Types.h:54</div></div>
<div class="ttc" id="astructez_variant_type_htm_a91ecf53decb31d57981c71043fa30299"><div class="ttname"><a href="../../da/d6c/structez_variant_type.htm#a91ecf53decb31d57981c71043fa30299">ezVariantType::Enum</a></div><div class="ttdeci">Enum</div><div class="ttdoc">This enum describes the type of data that is currently stored inside the variant. Note that changes t...</div><div class="ttdef"><b>Definition</b> VariantType.h:26</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_2c7b76dee074c0486b4059e88dfd18f0.htm">CodeUtils</a></li><li class="navelem"><a class="el" href="../../dir_8a03cd053a0d4b8ee4241c2a06b55d89.htm">Expression</a></li><li class="navelem"><b>ExpressionAST.h</b></li>
    <li class="footer">Generated on Fri Jul 11 2025 12:17:43 for ezEngine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
