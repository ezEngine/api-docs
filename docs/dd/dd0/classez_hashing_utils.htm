<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: ezHashingUtils Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 25.03</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('dd/dd0/classez_hashing_utils.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="../../d4/d68/classez_hashing_utils-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ezHashingUtils Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>This class provides implementations of different hashing algorithms.  
 <a href="../../dd/dd0/classez_hashing_utils.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d8/df9/_hashing_utils_8h_source.htm">HashingUtils.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a2802a30a55a50f50af5849c81da3e4d0"><td class="memTemplParams" colspan="2"><a id="a2802a30a55a50f50af5849c81da3e4d0"></a>
template&lt;size_t N&gt; </td></tr>
<tr class="memitem:a2802a30a55a50f50af5849c81da3e4d0"><td class="memTemplItemLeft" align="right" valign="top">constexpr EZ_ALWAYS_INLINE ezUInt32&#160;</td><td class="memTemplItemRight" valign="bottom"><b>MurmurHash32String</b> (const char(&amp;str)[N], ezUInt32 uiSeed)</td></tr>
<tr class="separator:a2802a30a55a50f50af5849c81da3e4d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a550b783ac9122260c8bd8a31e0e443b8"><td class="memTemplParams" colspan="2"><a id="a550b783ac9122260c8bd8a31e0e443b8"></a>
template&lt;size_t N&gt; </td></tr>
<tr class="memitem:a550b783ac9122260c8bd8a31e0e443b8"><td class="memTemplItemLeft" align="right" valign="top">constexpr EZ_ALWAYS_INLINE ezUInt64&#160;</td><td class="memTemplItemRight" valign="bottom"><b>StringHash</b> (const char(&amp;str)[N], ezUInt64 uiSeed)</td></tr>
<tr class="separator:a550b783ac9122260c8bd8a31e0e443b8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8da8ec4e392990d092290889b782c06d"><td class="memTemplParams" colspan="2"><a id="a8da8ec4e392990d092290889b782c06d"></a>
template&lt;size_t N&gt; </td></tr>
<tr class="memitem:a8da8ec4e392990d092290889b782c06d"><td class="memTemplItemLeft" align="right" valign="top">constexpr EZ_ALWAYS_INLINE ezUInt32&#160;</td><td class="memTemplItemRight" valign="bottom"><b>xxHash32String</b> (const char(&amp;str)[N], ezUInt32 uiSeed)</td></tr>
<tr class="separator:a8da8ec4e392990d092290889b782c06d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7c365cb63c900c4250fd45fcf950afb5"><td class="memTemplParams" colspan="2"><a id="a7c365cb63c900c4250fd45fcf950afb5"></a>
template&lt;size_t N&gt; </td></tr>
<tr class="memitem:a7c365cb63c900c4250fd45fcf950afb5"><td class="memTemplItemLeft" align="right" valign="top">constexpr EZ_ALWAYS_INLINE ezUInt64&#160;</td><td class="memTemplItemRight" valign="bottom"><b>xxHash64String</b> (const char(&amp;str)[N], ezUInt64 uiSeed)</td></tr>
<tr class="separator:a7c365cb63c900c4250fd45fcf950afb5"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:adc06e3af63b104ba7c652f884e227da2"><td class="memItemLeft" align="right" valign="top"><a id="adc06e3af63b104ba7c652f884e227da2"></a>
static ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/dd0/classez_hashing_utils.htm#adc06e3af63b104ba7c652f884e227da2">CRC32Hash</a> (const void *pKey, size_t uiSizeInBytes)</td></tr>
<tr class="memdesc:adc06e3af63b104ba7c652f884e227da2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the CRC32 checksum of the given key. <br /></td></tr>
<tr class="separator:adc06e3af63b104ba7c652f884e227da2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45a74facf41750468472de03fa2d02cf"><td class="memItemLeft" align="right" valign="top"><a id="a45a74facf41750468472de03fa2d02cf"></a>
static ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/dd0/classez_hashing_utils.htm#a45a74facf41750468472de03fa2d02cf">MurmurHash32</a> (const void *pKey, size_t uiSizeInByte, ezUInt32 uiSeed=0)</td></tr>
<tr class="memdesc:a45a74facf41750468472de03fa2d02cf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the 32bit murmur hash of the given key. <br /></td></tr>
<tr class="separator:a45a74facf41750468472de03fa2d02cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acfedefb1b8ef4d9a796494fb2cfee2ea"><td class="memItemLeft" align="right" valign="top"><a id="acfedefb1b8ef4d9a796494fb2cfee2ea"></a>
static ezUInt64&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/dd0/classez_hashing_utils.htm#acfedefb1b8ef4d9a796494fb2cfee2ea">MurmurHash64</a> (const void *pKey, size_t uiSizeInByte, ezUInt64 uiSeed=0)</td></tr>
<tr class="memdesc:acfedefb1b8ef4d9a796494fb2cfee2ea"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the 64bit murmur hash of the given key. <br /></td></tr>
<tr class="separator:acfedefb1b8ef4d9a796494fb2cfee2ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aadddb96b6307d3601b34f3b233b9680e"><td class="memTemplParams" colspan="2"><a id="aadddb96b6307d3601b34f3b233b9680e"></a>
template&lt;size_t N&gt; </td></tr>
<tr class="memitem:aadddb96b6307d3601b34f3b233b9680e"><td class="memTemplItemLeft" align="right" valign="top">constexpr static ezUInt32&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../dd/dd0/classez_hashing_utils.htm#aadddb96b6307d3601b34f3b233b9680e">MurmurHash32String</a> (const char(&amp;str)[N], ezUInt32 uiSeed=0)</td></tr>
<tr class="memdesc:aadddb96b6307d3601b34f3b233b9680e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the 32bit murmur hash of a string constant at compile time. Encoding does not matter here. <br /></td></tr>
<tr class="separator:aadddb96b6307d3601b34f3b233b9680e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a10bad8aef78e530f5086748308468c30"><td class="memItemLeft" align="right" valign="top">static ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/dd0/classez_hashing_utils.htm#a10bad8aef78e530f5086748308468c30">MurmurHash32String</a> (<a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a> sStr, ezUInt32 uiSeed=0)</td></tr>
<tr class="memdesc:a10bad8aef78e530f5086748308468c30"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the 32bit murmur hash of a string pointer during runtime. Encoding does not matter here.  <a href="../../dd/dd0/classez_hashing_utils.htm#a10bad8aef78e530f5086748308468c30">More...</a><br /></td></tr>
<tr class="separator:a10bad8aef78e530f5086748308468c30"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5c65d83450f2edff74c18d5b4f894ec8"><td class="memItemLeft" align="right" valign="top"><a id="a5c65d83450f2edff74c18d5b4f894ec8"></a>
static ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/dd0/classez_hashing_utils.htm#a5c65d83450f2edff74c18d5b4f894ec8">xxHash32</a> (const void *pKey, size_t uiSizeInByte, ezUInt32 uiSeed=0)</td></tr>
<tr class="memdesc:a5c65d83450f2edff74c18d5b4f894ec8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the 32bit xxHash of the given key. <br /></td></tr>
<tr class="separator:a5c65d83450f2edff74c18d5b4f894ec8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a66aa93081eb122cdbc70000b2f82f058"><td class="memItemLeft" align="right" valign="top"><a id="a66aa93081eb122cdbc70000b2f82f058"></a>
static ezUInt64&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/dd0/classez_hashing_utils.htm#a66aa93081eb122cdbc70000b2f82f058">xxHash64</a> (const void *pKey, size_t uiSizeInByte, ezUInt64 uiSeed=0)</td></tr>
<tr class="memdesc:a66aa93081eb122cdbc70000b2f82f058"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the 64bit xxHash of the given key. <br /></td></tr>
<tr class="separator:a66aa93081eb122cdbc70000b2f82f058"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a599ab11dcb317148f81d0bd6ba2e92a5"><td class="memTemplParams" colspan="2"><a id="a599ab11dcb317148f81d0bd6ba2e92a5"></a>
template&lt;size_t N&gt; </td></tr>
<tr class="memitem:a599ab11dcb317148f81d0bd6ba2e92a5"><td class="memTemplItemLeft" align="right" valign="top">constexpr static ezUInt32&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../dd/dd0/classez_hashing_utils.htm#a599ab11dcb317148f81d0bd6ba2e92a5">xxHash32String</a> (const char(&amp;str)[N], ezUInt32 uiSeed=0)</td></tr>
<tr class="memdesc:a599ab11dcb317148f81d0bd6ba2e92a5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the 32bit xxHash of the given string literal at compile time. <br /></td></tr>
<tr class="separator:a599ab11dcb317148f81d0bd6ba2e92a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afccea834f0d53f374e5931dc4a4ade12"><td class="memTemplParams" colspan="2"><a id="afccea834f0d53f374e5931dc4a4ade12"></a>
template&lt;size_t N&gt; </td></tr>
<tr class="memitem:afccea834f0d53f374e5931dc4a4ade12"><td class="memTemplItemLeft" align="right" valign="top">constexpr static ezUInt64&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../dd/dd0/classez_hashing_utils.htm#afccea834f0d53f374e5931dc4a4ade12">xxHash64String</a> (const char(&amp;str)[N], ezUInt64 uiSeed=0)</td></tr>
<tr class="memdesc:afccea834f0d53f374e5931dc4a4ade12"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the 64bit xxHash of the given string literal at compile time. <br /></td></tr>
<tr class="separator:afccea834f0d53f374e5931dc4a4ade12"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3a2e9e0e5b1f60c8b9061e87a8916ece"><td class="memItemLeft" align="right" valign="top">static ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/dd0/classez_hashing_utils.htm#a3a2e9e0e5b1f60c8b9061e87a8916ece">xxHash32String</a> (<a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a> sStr, ezUInt32 uiSeed=0)</td></tr>
<tr class="memdesc:a3a2e9e0e5b1f60c8b9061e87a8916ece"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the 32bit xxHash of a string pointer during runtime.  <a href="../../dd/dd0/classez_hashing_utils.htm#a3a2e9e0e5b1f60c8b9061e87a8916ece">More...</a><br /></td></tr>
<tr class="separator:a3a2e9e0e5b1f60c8b9061e87a8916ece"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a38f5c243890436103769162410d567fe"><td class="memItemLeft" align="right" valign="top">static ezUInt64&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/dd0/classez_hashing_utils.htm#a38f5c243890436103769162410d567fe">xxHash64String</a> (<a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a> sStr, ezUInt64 uiSeed=0)</td></tr>
<tr class="memdesc:a38f5c243890436103769162410d567fe"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the 64bit xxHash of a string pointer during runtime.  <a href="../../dd/dd0/classez_hashing_utils.htm#a38f5c243890436103769162410d567fe">More...</a><br /></td></tr>
<tr class="separator:a38f5c243890436103769162410d567fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e16b75eb7af455a7faf7eeb0b6b01ed"><td class="memTemplParams" colspan="2"><a id="a2e16b75eb7af455a7faf7eeb0b6b01ed"></a>
template&lt;size_t N&gt; </td></tr>
<tr class="memitem:a2e16b75eb7af455a7faf7eeb0b6b01ed"><td class="memTemplItemLeft" align="right" valign="top">constexpr static ezUInt64&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../dd/dd0/classez_hashing_utils.htm#a2e16b75eb7af455a7faf7eeb0b6b01ed">StringHash</a> (const char(&amp;str)[N], ezUInt64 uiSeed=0)</td></tr>
<tr class="memdesc:a2e16b75eb7af455a7faf7eeb0b6b01ed"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the hash of the given string literal at compile time. <br /></td></tr>
<tr class="separator:a2e16b75eb7af455a7faf7eeb0b6b01ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a696d523270d0a9649caa40f6056049bd"><td class="memItemLeft" align="right" valign="top">static ezUInt64&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/dd0/classez_hashing_utils.htm#a696d523270d0a9649caa40f6056049bd">StringHash</a> (<a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a> sStr, ezUInt64 uiSeed=0)</td></tr>
<tr class="memdesc:a696d523270d0a9649caa40f6056049bd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calculates the hash of a string pointer at runtime.  <a href="../../dd/dd0/classez_hashing_utils.htm#a696d523270d0a9649caa40f6056049bd">More...</a><br /></td></tr>
<tr class="separator:a696d523270d0a9649caa40f6056049bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afd95702d7001da8afc62d2e44cb08d7a"><td class="memItemLeft" align="right" valign="top">constexpr static ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/dd0/classez_hashing_utils.htm#afd95702d7001da8afc62d2e44cb08d7a">StringHashTo32</a> (ezUInt64 uiHash)</td></tr>
<tr class="memdesc:afd95702d7001da8afc62d2e44cb08d7a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Truncates a 64 bit string hash to 32 bit.  <a href="../../dd/dd0/classez_hashing_utils.htm#afd95702d7001da8afc62d2e44cb08d7a">More...</a><br /></td></tr>
<tr class="separator:afd95702d7001da8afc62d2e44cb08d7a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad64c0ab6d91bdeb1f4892dbf99890581"><td class="memItemLeft" align="right" valign="top"><a id="ad64c0ab6d91bdeb1f4892dbf99890581"></a>
constexpr static ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/dd0/classez_hashing_utils.htm#ad64c0ab6d91bdeb1f4892dbf99890581">CombineHashValues32</a> (ezUInt32 ui0, ezUInt32 ui1)</td></tr>
<tr class="memdesc:ad64c0ab6d91bdeb1f4892dbf99890581"><td class="mdescLeft">&#160;</td><td class="mdescRight">Combines two 32 bit hash values into one. <br /></td></tr>
<tr class="separator:ad64c0ab6d91bdeb1f4892dbf99890581"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>This class provides implementations of different hashing algorithms. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a10bad8aef78e530f5086748308468c30"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a10bad8aef78e530f5086748308468c30">&#9670;&nbsp;</a></span>MurmurHash32String()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">EZ_ALWAYS_INLINE ezUInt32 ezHashingUtils::MurmurHash32String </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a>&#160;</td>
          <td class="paramname"><em>sStr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ezUInt32&#160;</td>
          <td class="paramname"><em>uiSeed</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Calculates the 32bit murmur hash of a string pointer during runtime. Encoding does not matter here. </p>
<p>We cannot pass a string pointer directly since a string constant would be treated as pointer as well. </p>

</div>
</div>
<a id="a696d523270d0a9649caa40f6056049bd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a696d523270d0a9649caa40f6056049bd">&#9670;&nbsp;</a></span>StringHash()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">EZ_ALWAYS_INLINE ezUInt64 ezHashingUtils::StringHash </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a>&#160;</td>
          <td class="paramname"><em>sStr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ezUInt64&#160;</td>
          <td class="paramname"><em>uiSeed</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Calculates the hash of a string pointer at runtime. </p>
<p>We cannot pass a string pointer directly since a string constant would be treated as pointer as well. </p>

</div>
</div>
<a id="afd95702d7001da8afc62d2e44cb08d7a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afd95702d7001da8afc62d2e44cb08d7a">&#9670;&nbsp;</a></span>StringHashTo32()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">constexpr EZ_ALWAYS_INLINE ezUInt32 ezHashingUtils::StringHashTo32 </td>
          <td>(</td>
          <td class="paramtype">ezUInt64&#160;</td>
          <td class="paramname"><em>uiHash</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span><span class="mlabel">constexpr</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Truncates a 64 bit string hash to 32 bit. </p>
<p>This is necessary when a 64 bit string hash is used in a hash table (which only uses 32 bit indices). </p>

</div>
</div>
<a id="a3a2e9e0e5b1f60c8b9061e87a8916ece"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3a2e9e0e5b1f60c8b9061e87a8916ece">&#9670;&nbsp;</a></span>xxHash32String()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">EZ_ALWAYS_INLINE ezUInt32 ezHashingUtils::xxHash32String </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a>&#160;</td>
          <td class="paramname"><em>sStr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ezUInt32&#160;</td>
          <td class="paramname"><em>uiSeed</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Calculates the 32bit xxHash of a string pointer during runtime. </p>
<p>We cannot pass a string pointer directly since a string constant would be treated as pointer as well. </p>

</div>
</div>
<a id="a38f5c243890436103769162410d567fe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a38f5c243890436103769162410d567fe">&#9670;&nbsp;</a></span>xxHash64String()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">EZ_ALWAYS_INLINE ezUInt64 ezHashingUtils::xxHash64String </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a>&#160;</td>
          <td class="paramname"><em>sStr</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ezUInt64&#160;</td>
          <td class="paramname"><em>uiSeed</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Calculates the 64bit xxHash of a string pointer during runtime. </p>
<p>We cannot pass a string pointer directly since a string constant would be treated as pointer as well. </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Algorithm/<a class="el" href="../../d8/df9/_hashing_utils_8h_source.htm">HashingUtils.h</a></li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Algorithm/Implementation/<a class="el" href="../../d6/d19/_hashing_murmur__inl_8h_source.htm">HashingMurmur_inl.h</a></li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Algorithm/Implementation/HashingUtils.cpp</li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Algorithm/Implementation/<a class="el" href="../../d0/d46/_hashing_utils__inl_8h_source.htm">HashingUtils_inl.h</a></li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Algorithm/Implementation/<a class="el" href="../../db/dfb/_hashing_xx_hash__inl_8h_source.htm">HashingXxHash_inl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dd/dd0/classez_hashing_utils.htm">ezHashingUtils</a></li>
    <li class="footer">Generated on Mon Mar 3 2025 17:23:52 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
