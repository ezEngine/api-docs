<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Core/World/Implementation/WorldData_inl.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 25.03</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('dd/d87/_world_data__inl_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">WorldData_inl.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160; </div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="keyword">namespace </span>ezInternal</div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;{</div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;  <span class="comment">// static</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;  EZ_ALWAYS_INLINE WorldData::HierarchyType::Enum WorldData::GetHierarchyType(<span class="keywordtype">bool</span> bIsDynamic)</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;  {</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;    <span class="keywordflow">return</span> bIsDynamic ? HierarchyType::Dynamic : HierarchyType::Static;</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;  }</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160; </div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;  <span class="comment">// static</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> VISITOR&gt;</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;  EZ_FORCE_INLINE <a class="code" href="../../d6/d5e/structez_visitor_execution.htm#a4e76f4821e1b79df92f916823d5d51e8">ezVisitorExecution::Enum</a> WorldData::TraverseHierarchyLevel(Hierarchy::DataBlockArray&amp; blocks, <span class="keywordtype">void</span>* pUserData <span class="comment">/* = nullptr*/</span>)</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;  {</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;    <span class="keywordflow">for</span> (WorldData::Hierarchy::DataBlock&amp; block : blocks)</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;    {</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;      ezGameObject::TransformationData* pCurrentData = block.m_pData;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;      ezGameObject::TransformationData* pEndData = block.m_pData + block.m_uiCount;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160; </div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;      <span class="keywordflow">while</span> (pCurrentData &lt; pEndData)</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;      {</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;        <a class="code" href="../../d6/d5e/structez_visitor_execution.htm#a4e76f4821e1b79df92f916823d5d51e8">ezVisitorExecution::Enum</a> execution = VISITOR::Visit(pCurrentData, pUserData);</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;        <span class="keywordflow">if</span> (execution != <a class="code" href="../../d6/d5e/structez_visitor_execution.htm#a4e76f4821e1b79df92f916823d5d51e8a6993ade24cffb47d913e84e5fab18560">ezVisitorExecution::Continue</a>)</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;          <span class="keywordflow">return</span> execution;</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160; </div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;        ++pCurrentData;</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;      }</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    }</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160; </div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d6/d5e/structez_visitor_execution.htm#a4e76f4821e1b79df92f916823d5d51e8a6993ade24cffb47d913e84e5fab18560">ezVisitorExecution::Continue</a>;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;  }</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160; </div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;  <span class="comment">// static</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> VISITOR&gt;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  EZ_FORCE_INLINE <a class="code" href="../../d6/d5e/structez_visitor_execution.htm#a4e76f4821e1b79df92f916823d5d51e8">ezVisitorExecution::Enum</a> WorldData::TraverseHierarchyLevelMultiThreaded(</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    Hierarchy::DataBlockArray&amp; blocks, <span class="keywordtype">void</span>* pUserData <span class="comment">/* = nullptr*/</span>)</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;  {</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;    <a class="code" href="../../de/d73/structez_parallel_for_params.htm">ezParallelForParams</a> parallelForParams;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    parallelForParams.<a class="code" href="../../de/d73/structez_parallel_for_params.htm#af200f4da2e61469d1c1781e99faad2fe">m_uiBinSize</a> = 100;</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;    parallelForParams.<a class="code" href="../../de/d73/structez_parallel_for_params.htm#a4ec48205e556f76df03e5fae758e1db3">m_uiMaxTasksPerThread</a> = 2;</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    parallelForParams.<a class="code" href="../../de/d73/structez_parallel_for_params.htm#a91fbefe0ce3ab60827eaa49f788aa98e">m_pTaskAllocator</a> = m_StackAllocator.GetCurrentAllocator();</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160; </div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    <a class="code" href="../../d5/d52/classez_task_system.htm#a734d4d34c2044de9413b7d27285ebdb6">ezTaskSystem::ParallelFor</a>(</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;      blocks.GetArrayPtr(),</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;      [pUserData](<a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;WorldData::Hierarchy::DataBlock&gt;</a> blocksSlice)</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;      {</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;        for (WorldData::Hierarchy::DataBlock&amp; block : blocksSlice)</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;        {</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;          ezGameObject::TransformationData* pCurrentData = block.m_pData;</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;          ezGameObject::TransformationData* pEndData = block.m_pData + block.m_uiCount;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160; </div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;          while (pCurrentData &lt; pEndData)</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;          {</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;            VISITOR::Visit(pCurrentData, pUserData);</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;            ++pCurrentData;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;          }</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        }</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;      },</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;      <span class="stringliteral">&quot;World DataBlock Traversal Task&quot;</span>, parallelForParams);</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160; </div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;    <span class="keywordflow">return</span> <a class="code" href="../../d6/d5e/structez_visitor_execution.htm#a4e76f4821e1b79df92f916823d5d51e8a6993ade24cffb47d913e84e5fab18560">ezVisitorExecution::Continue</a>;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  }</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160; </div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;  <span class="comment">// static</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  EZ_FORCE_INLINE <span class="keywordtype">void</span> WorldData::UpdateGlobalTransform(ezGameObject::TransformationData* pData, ezUInt32 uiUpdateCounter)</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;  {</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;    pData-&gt;UpdateGlobalTransformWithoutParent(uiUpdateCounter);</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;    pData-&gt;UpdateGlobalBounds();</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;  }</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160; </div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  <span class="comment">// static</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;  EZ_FORCE_INLINE <span class="keywordtype">void</span> WorldData::UpdateGlobalTransformWithParent(ezGameObject::TransformationData* pData, ezUInt32 uiUpdateCounter)</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;  {</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;    pData-&gt;UpdateGlobalTransformWithParent(uiUpdateCounter);</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;    pData-&gt;UpdateGlobalBounds();</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;  }</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160; </div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;  <span class="comment">// static</span></div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;  EZ_FORCE_INLINE <span class="keywordtype">void</span> WorldData::UpdateGlobalTransformAndSpatialData(ezGameObject::TransformationData* pData, ezUInt32 uiUpdateCounter, <a class="code" href="../../d1/dc1/classez_spatial_system.htm">ezSpatialSystem</a>&amp; spatialSystem)</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  {</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    pData-&gt;UpdateGlobalTransformWithoutParent(uiUpdateCounter);</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;    pData-&gt;UpdateGlobalBoundsAndSpatialData(spatialSystem);</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;  }</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160; </div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;  <span class="comment">// static</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  EZ_FORCE_INLINE <span class="keywordtype">void</span> WorldData::UpdateGlobalTransformWithParentAndSpatialData(ezGameObject::TransformationData* pData, ezUInt32 uiUpdateCounter, <a class="code" href="../../d1/dc1/classez_spatial_system.htm">ezSpatialSystem</a>&amp; spatialSystem)</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;  {</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    pData-&gt;UpdateGlobalTransformWithParent(uiUpdateCounter);</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    pData-&gt;UpdateGlobalBoundsAndSpatialData(spatialSystem);</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;  }</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160; </div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160; </div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  EZ_ALWAYS_INLINE <span class="keyword">const</span> <a class="code" href="../../d6/d61/classez_game_object.htm">ezGameObject</a>&amp; WorldData::ConstObjectIterator::operator*()<span class="keyword"> const</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keywordflow">return</span> *m_Iterator;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;  }</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160; </div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  EZ_ALWAYS_INLINE <span class="keyword">const</span> <a class="code" href="../../d6/d61/classez_game_object.htm">ezGameObject</a>* WorldData::ConstObjectIterator::operator-&gt;()<span class="keyword"> const</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keywordflow">return</span> m_Iterator;</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;  }</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160; </div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  EZ_ALWAYS_INLINE WorldData::ConstObjectIterator::operator <span class="keyword">const</span> <a class="code" href="../../d6/d61/classez_game_object.htm">ezGameObject</a>*() <span class="keyword">const</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;  {</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="keywordflow">return</span> m_Iterator;</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;  }</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160; </div>
<div class="line"><a name="l00108"></a><span class="lineno"><a class="line" href="../../d6/de8/classez_internal_1_1_world_data_1_1_const_object_iterator.htm#ab272e2479d2d462f5da146df0e8c1751">  108</a></span>&#160;  EZ_ALWAYS_INLINE <span class="keywordtype">void</span> WorldData::ConstObjectIterator::Next()</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;  {</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;    m_Iterator.Next();</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160; </div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="keywordflow">while</span> (m_Iterator.IsValid() &amp;&amp; m_Iterator-&gt;GetHandle().IsInvalidated())</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    {</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;      m_Iterator.Next();</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    }</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;  }</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160; </div>
<div class="line"><a name="l00118"></a><span class="lineno"><a class="line" href="../../d6/de8/classez_internal_1_1_world_data_1_1_const_object_iterator.htm#aee80db43f5e27c65c4a25193f4fad333">  118</a></span>&#160;  EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> WorldData::ConstObjectIterator::IsValid()<span class="keyword"> const</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;    <span class="keywordflow">return</span> m_Iterator.IsValid();</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;  }</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160; </div>
<div class="line"><a name="l00123"></a><span class="lineno"><a class="line" href="../../d6/de8/classez_internal_1_1_world_data_1_1_const_object_iterator.htm#a8e939542485ddfbeed29743a4e7c1b85">  123</a></span>&#160;  EZ_ALWAYS_INLINE <span class="keywordtype">void</span> WorldData::ConstObjectIterator::operator++()</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;  {</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    Next();</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;  }</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160; </div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;  EZ_ALWAYS_INLINE WorldData::ConstObjectIterator::ConstObjectIterator(ObjectStorage::ConstIterator iterator)</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;    : m_Iterator(iterator)</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;  {</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;    <span class="keywordflow">while</span> (m_Iterator.IsValid() &amp;&amp; m_Iterator-&gt;GetHandle().IsInvalidated())</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;    {</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;      m_Iterator.Next();</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;    }</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;  }</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160; </div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160; </div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;  EZ_ALWAYS_INLINE <a class="code" href="../../d6/d61/classez_game_object.htm">ezGameObject</a>&amp; WorldData::ObjectIterator::operator*()</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;  {</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="keywordflow">return</span> *m_Iterator;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;  }</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160; </div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;  EZ_ALWAYS_INLINE <a class="code" href="../../d6/d61/classez_game_object.htm">ezGameObject</a>* WorldData::ObjectIterator::operator-&gt;()</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;  {</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    <span class="keywordflow">return</span> m_Iterator;</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;  }</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160; </div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;  EZ_ALWAYS_INLINE WorldData::ObjectIterator::operator <a class="code" href="../../d6/d61/classez_game_object.htm">ezGameObject</a>*()</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;  {</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    <span class="keywordflow">return</span> m_Iterator;</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;  }</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160; </div>
<div class="line"><a name="l00154"></a><span class="lineno"><a class="line" href="../../d4/d64/classez_internal_1_1_world_data_1_1_object_iterator.htm#a8cd43e25e6fe625579814d2991c2a36b">  154</a></span>&#160;  EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d4/d64/classez_internal_1_1_world_data_1_1_object_iterator.htm#a8cd43e25e6fe625579814d2991c2a36b">WorldData::ObjectIterator::Next</a>()</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;  {</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;    m_Iterator.Next();</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160; </div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;    <span class="keywordflow">while</span> (m_Iterator.IsValid() &amp;&amp; m_Iterator-&gt;GetHandle().IsInvalidated())</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    {</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;      m_Iterator.Next();</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;    }</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;  }</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160; </div>
<div class="line"><a name="l00164"></a><span class="lineno"><a class="line" href="../../d4/d64/classez_internal_1_1_world_data_1_1_object_iterator.htm#a6531ae9aba74e5956336017ecfafa61c">  164</a></span>&#160;  EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../d4/d64/classez_internal_1_1_world_data_1_1_object_iterator.htm#a6531ae9aba74e5956336017ecfafa61c">WorldData::ObjectIterator::IsValid</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;    <span class="keywordflow">return</span> m_Iterator.IsValid();</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;  }</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160; </div>
<div class="line"><a name="l00169"></a><span class="lineno"><a class="line" href="../../d4/d64/classez_internal_1_1_world_data_1_1_object_iterator.htm#a1d314592f63fbdb6df80b15efe49f0be">  169</a></span>&#160;  EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d4/d64/classez_internal_1_1_world_data_1_1_object_iterator.htm#a1d314592f63fbdb6df80b15efe49f0be">WorldData::ObjectIterator::operator++</a>()</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;  {</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;    Next();</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;  }</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160; </div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;  EZ_ALWAYS_INLINE WorldData::ObjectIterator::ObjectIterator(ObjectStorage::Iterator iterator)</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;    : m_Iterator(iterator)</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;  {</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <span class="keywordflow">while</span> (m_Iterator.IsValid() &amp;&amp; m_Iterator-&gt;GetHandle().IsInvalidated())</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;    {</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;      m_Iterator.Next();</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;    }</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;  }</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160; </div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160; </div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;  EZ_FORCE_INLINE WorldData::InitBatch::InitBatch(<a class="code" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a>* pAllocator, <a class="code" href="../../d9/d18/classez_string_view.htm">ezStringView</a> sName, <span class="keywordtype">bool</span> bMustFinishWithinOneFrame)</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;    : m_bMustFinishWithinOneFrame(bMustFinishWithinOneFrame)</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    , m_ComponentsToInitialize(pAllocator)</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    , m_ComponentsToStartSimulation(pAllocator)</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;  {</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    m_sName.Assign(sName);</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;  }</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160; </div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160; </div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;  EZ_FORCE_INLINE <span class="keywordtype">void</span> WorldData::RegisteredUpdateFunction::FillFromDesc(<span class="keyword">const</span> <a class="code" href="../../df/dfe/structez_world_module_1_1_update_function_desc.htm">ezWorldModule::UpdateFunctionDesc</a>&amp; desc)</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;  {</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;    m_Function = desc.m_Function;</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    m_sFunctionName = desc.m_sFunctionName;</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;    m_fPriority = desc.m_fPriority;</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;    m_uiGranularity = desc.m_uiGranularity;</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;    m_bOnlyUpdateWhenSimulating = desc.m_bOnlyUpdateWhenSimulating;</div>
<div class="line"><a name="l00202"></a><span class="lineno">  202</span>&#160;  }</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160; </div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;  EZ_FORCE_INLINE <span class="keywordtype">bool</span> WorldData::RegisteredUpdateFunction::operator&lt;(<span class="keyword">const</span> RegisteredUpdateFunction&amp; other)<span class="keyword"> const</span></div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;    <span class="comment">// higher priority comes first</span></div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;    <span class="keywordflow">if</span> (m_fPriority != other.m_fPriority)</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;      <span class="keywordflow">return</span> m_fPriority &gt; other.m_fPriority;</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160; </div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;    <span class="comment">// sort by function name to ensure determinism</span></div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;    ezInt32 iNameComp = <a class="code" href="../../de/df8/classez_string_utils.htm#acdb19aa3ae5704df01d8f7b3649ec8d7">ezStringUtils::Compare</a>(m_sFunctionName, other.m_sFunctionName);</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;    EZ_ASSERT_DEV(iNameComp != 0, <span class="stringliteral">&quot;An update function with the same name and same priority is already registered. This breaks determinism.&quot;</span>);</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;    <span class="keywordflow">return</span> iNameComp &lt; 0;</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;  }</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160; </div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160; </div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;  EZ_ALWAYS_INLINE WorldData::ReadMarker::ReadMarker(<span class="keyword">const</span> WorldData&amp; data)</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;    : m_Data(data)</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;  {</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;  }</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160; </div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;  EZ_FORCE_INLINE <span class="keywordtype">void</span> WorldData::ReadMarker::Lock()</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;  {</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;    EZ_ASSERT_DEV(m_Data.m_WriteThreadID == (ezThreadID)0 || m_Data.m_WriteThreadID == <a class="code" href="../../d4/d1d/classez_thread_utils.htm#af2f932c4402f29519a991da1d1915b7e">ezThreadUtils::GetCurrentThreadID</a>(),</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;      <span class="stringliteral">&quot;World &#39;{0}&#39; cannot be marked for reading because it is already marked for writing by another thread.&quot;</span>, m_Data.m_sName);</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;    m_Data.m_iReadCounter.Increment();</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;  }</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160; </div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;  EZ_ALWAYS_INLINE <span class="keywordtype">void</span> WorldData::ReadMarker::Unlock()</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;  {</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;    m_Data.m_iReadCounter.Decrement();</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;  }</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160; </div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160; </div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;  EZ_ALWAYS_INLINE WorldData::WriteMarker::WriteMarker(WorldData&amp; data)</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;    : m_Data(data)</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;  {</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;  }</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160; </div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;  EZ_FORCE_INLINE <span class="keywordtype">void</span> WorldData::WriteMarker::Lock()</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;  {</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    <span class="comment">// already locked by this thread?</span></div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;    <span class="keywordflow">if</span> (m_Data.m_WriteThreadID != <a class="code" href="../../d4/d1d/classez_thread_utils.htm#af2f932c4402f29519a991da1d1915b7e">ezThreadUtils::GetCurrentThreadID</a>())</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;    {</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;      EZ_ASSERT_DEV(m_Data.m_iReadCounter == 0, <span class="stringliteral">&quot;World &#39;{0}&#39; cannot be marked for writing because it is already marked for reading.&quot;</span>, m_Data.m_sName);</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;      EZ_ASSERT_DEV(m_Data.m_WriteThreadID == (ezThreadID)0,</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;        <span class="stringliteral">&quot;World &#39;{0}&#39; cannot be marked for writing because it is already marked for writing by another thread.&quot;</span>, m_Data.m_sName);</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160; </div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;      m_Data.m_WriteThreadID = <a class="code" href="../../d4/d1d/classez_thread_utils.htm#af2f932c4402f29519a991da1d1915b7e">ezThreadUtils::GetCurrentThreadID</a>();</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;      m_Data.m_iReadCounter.Increment(); <span class="comment">// allow reading as well</span></div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;    }</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160; </div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;    m_Data.m_iWriteCounter++;</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;  }</div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160; </div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;  EZ_FORCE_INLINE <span class="keywordtype">void</span> WorldData::WriteMarker::Unlock()</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;  {</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;    m_Data.m_iWriteCounter--;</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160; </div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;    <span class="keywordflow">if</span> (m_Data.m_iWriteCounter == 0)</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;    {</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;      m_Data.m_iReadCounter.Decrement();</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;      m_Data.m_WriteThreadID = (ezThreadID)0;</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;    }</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;  }</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;} <span class="comment">// namespace ezInternal</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="astructez_parallel_for_params_htm"><div class="ttname"><a href="../../de/d73/structez_parallel_for_params.htm">ezParallelForParams</a></div><div class="ttdoc">Settings for ezTaskSystem::ParallelFor invocations.</div><div class="ttdef"><b>Definition:</b> TaskSystemDeclarations.h:166</div></div>
<div class="ttc" id="aclassez_spatial_system_htm"><div class="ttname"><a href="../../d1/dc1/classez_spatial_system.htm">ezSpatialSystem</a></div><div class="ttdef"><b>Definition:</b> SpatialSystem.h:10</div></div>
<div class="ttc" id="astructez_parallel_for_params_htm_a91fbefe0ce3ab60827eaa49f788aa98e"><div class="ttname"><a href="../../de/d73/structez_parallel_for_params.htm#a91fbefe0ce3ab60827eaa49f788aa98e">ezParallelForParams::m_pTaskAllocator</a></div><div class="ttdeci">ezAllocator * m_pTaskAllocator</div><div class="ttdoc">The allocator used to for the tasks that the parallel-for uses internally. If null,...</div><div class="ttdef"><b>Definition:</b> TaskSystemDeclarations.h:186</div></div>
<div class="ttc" id="aclassez_internal_1_1_world_data_1_1_object_iterator_htm_a1d314592f63fbdb6df80b15efe49f0be"><div class="ttname"><a href="../../d4/d64/classez_internal_1_1_world_data_1_1_object_iterator.htm#a1d314592f63fbdb6df80b15efe49f0be">ezInternal::WorldData::ObjectIterator::operator++</a></div><div class="ttdeci">void operator++()</div><div class="ttdoc">Shorthand for 'Next'.</div><div class="ttdef"><b>Definition:</b> WorldData_inl.h:169</div></div>
<div class="ttc" id="aclassez_string_utils_htm_acdb19aa3ae5704df01d8f7b3649ec8d7"><div class="ttname"><a href="../../de/df8/classez_string_utils.htm#acdb19aa3ae5704df01d8f7b3649ec8d7">ezStringUtils::Compare</a></div><div class="ttdeci">static ezInt32 Compare(const char *pString1, const char *pString2, const char *pString1End=ezUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *pString2End=ezUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Compares two strings for equality.</div><div class="ttdef"><b>Definition:</b> StringUtils.cpp:218</div></div>
<div class="ttc" id="aclassez_array_ptr_htm"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a></div><div class="ttdoc">This class encapsulates an array and it's size. It is recommended to use this class instead of plain ...</div><div class="ttdef"><b>Definition:</b> ArrayPtr.h:40</div></div>
<div class="ttc" id="aclassez_task_system_htm_a734d4d34c2044de9413b7d27285ebdb6"><div class="ttname"><a href="../../d5/d52/classez_task_system.htm#a734d4d34c2044de9413b7d27285ebdb6">ezTaskSystem::ParallelFor</a></div><div class="ttdeci">static void ParallelFor(ezArrayPtr&lt; ElemType &gt; taskItems, Callback taskCallback, const char *szTaskName=nullptr, const ezParallelForParams &amp;params=ezParallelForParams())</div><div class="ttdef"><b>Definition:</b> ParallelFor_inl.h:73</div></div>
<div class="ttc" id="aclassez_thread_utils_htm_af2f932c4402f29519a991da1d1915b7e"><div class="ttname"><a href="../../d4/d1d/classez_thread_utils.htm#af2f932c4402f29519a991da1d1915b7e">ezThreadUtils::GetCurrentThreadID</a></div><div class="ttdeci">static ezThreadID GetCurrentThreadID()</div><div class="ttdoc">Returns an identifier for the currently running thread.</div><div class="ttdef"><b>Definition:</b> ThreadUtils_Posix.h:42</div></div>
<div class="ttc" id="aclassez_internal_1_1_world_data_1_1_object_iterator_htm_a6531ae9aba74e5956336017ecfafa61c"><div class="ttname"><a href="../../d4/d64/classez_internal_1_1_world_data_1_1_object_iterator.htm#a6531ae9aba74e5956336017ecfafa61c">ezInternal::WorldData::ObjectIterator::IsValid</a></div><div class="ttdeci">bool IsValid() const</div><div class="ttdoc">Checks whether this iterator points to a valid object.</div><div class="ttdef"><b>Definition:</b> WorldData_inl.h:164</div></div>
<div class="ttc" id="astructez_visitor_execution_htm_a4e76f4821e1b79df92f916823d5d51e8a6993ade24cffb47d913e84e5fab18560"><div class="ttname"><a href="../../d6/d5e/structez_visitor_execution.htm#a4e76f4821e1b79df92f916823d5d51e8a6993ade24cffb47d913e84e5fab18560">ezVisitorExecution::Continue</a></div><div class="ttdeci">@ Continue</div><div class="ttdoc">Continue regular iteration.</div><div class="ttdef"><b>Definition:</b> Declarations.h:383</div></div>
<div class="ttc" id="aclassez_game_object_htm"><div class="ttname"><a href="../../d6/d61/classez_game_object.htm">ezGameObject</a></div><div class="ttdoc">This class represents an object inside the world.</div><div class="ttdef"><b>Definition:</b> GameObject.h:46</div></div>
<div class="ttc" id="astructez_parallel_for_params_htm_a4ec48205e556f76df03e5fae758e1db3"><div class="ttname"><a href="../../de/d73/structez_parallel_for_params.htm#a4ec48205e556f76df03e5fae758e1db3">ezParallelForParams::m_uiMaxTasksPerThread</a></div><div class="ttdeci">ezUInt32 m_uiMaxTasksPerThread</div><div class="ttdef"><b>Definition:</b> TaskSystemDeclarations.h:181</div></div>
<div class="ttc" id="aclassez_internal_1_1_world_data_1_1_object_iterator_htm_a8cd43e25e6fe625579814d2991c2a36b"><div class="ttname"><a href="../../d4/d64/classez_internal_1_1_world_data_1_1_object_iterator.htm#a8cd43e25e6fe625579814d2991c2a36b">ezInternal::WorldData::ObjectIterator::Next</a></div><div class="ttdeci">void Next()</div><div class="ttdoc">Advances the iterator to the next object. The iterator will not be valid anymore, if the last object ...</div><div class="ttdef"><b>Definition:</b> WorldData_inl.h:154</div></div>
<div class="ttc" id="astructez_visitor_execution_htm_a4e76f4821e1b79df92f916823d5d51e8"><div class="ttname"><a href="../../d6/d5e/structez_visitor_execution.htm#a4e76f4821e1b79df92f916823d5d51e8">ezVisitorExecution::Enum</a></div><div class="ttdeci">Enum</div><div class="ttdef"><b>Definition:</b> Declarations.h:381</div></div>
<div class="ttc" id="aclassez_allocator_htm"><div class="ttname"><a href="../../d0/dbb/classez_allocator.htm">ezAllocator</a></div><div class="ttdoc">Base class for all memory allocators.</div><div class="ttdef"><b>Definition:</b> Allocator.h:22</div></div>
<div class="ttc" id="astructez_parallel_for_params_htm_af200f4da2e61469d1c1781e99faad2fe"><div class="ttname"><a href="../../de/d73/structez_parallel_for_params.htm#af200f4da2e61469d1c1781e99faad2fe">ezParallelForParams::m_uiBinSize</a></div><div class="ttdeci">ezUInt32 m_uiBinSize</div><div class="ttdef"><b>Definition:</b> TaskSystemDeclarations.h:173</div></div>
<div class="ttc" id="aclassez_string_view_htm"><div class="ttname"><a href="../../d9/d18/classez_string_view.htm">ezStringView</a></div><div class="ttdoc">ezStringView represent a read-only sub-string of a larger string, as it can store a dedicated string ...</div><div class="ttdef"><b>Definition:</b> StringView.h:33</div></div>
<div class="ttc" id="astructez_world_module_1_1_update_function_desc_htm"><div class="ttname"><a href="../../df/dfe/structez_world_module_1_1_update_function_desc.htm">ezWorldModule::UpdateFunctionDesc</a></div><div class="ttdoc">Description of an update function that can be registered at the world.</div><div class="ttdef"><b>Definition:</b> WorldModule.h:58</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_ac029bbb8a17b4d550e2f9d55d89a029.htm">Core</a></li><li class="navelem"><a class="el" href="../../dir_89e289b549b3db86cc2bc4f6ebaf52c6.htm">World</a></li><li class="navelem"><a class="el" href="../../dir_3d704a09795313d5bccc0f64a5fef83b.htm">Implementation</a></li><li class="navelem"><b>WorldData_inl.h</b></li>
    <li class="footer">Generated on Mon Mar 3 2025 17:23:39 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
