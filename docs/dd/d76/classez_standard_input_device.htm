<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: ezStandardInputDevice Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 22.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('dd/d76/classez_standard_input_device.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="../../d4/d90/classez_standard_input_device-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ezStandardInputDevice Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="dynheader">
Inheritance diagram for ezStandardInputDevice:</div>
<div class="dyncontent">
<div class="center"><img src="../../da/d02/classez_standard_input_device__inherit__graph.png" border="0" usemap="#ez_standard_input_device_inherit__map" alt="Inheritance graph"/></div>
<map name="ez_standard_input_device_inherit__map" id="ez_standard_input_device_inherit__map">
<area shape="rect" title=" " alt="" coords="32,393,205,420"/>
<area shape="rect" href="../../d2/db3/classez_input_device_mouse_keyboard.htm" title="This is the base class for all input devices that handle mouse and keyboard input." alt="" coords="9,319,228,345"/>
<area shape="rect" href="../../df/d18/classez_input_device.htm" title="The base class for all input device types." alt="" coords="61,244,176,271"/>
<area shape="rect" href="../../d5/d0b/classez_enumerable.htm" title=" " alt="" coords="5,155,232,196"/>
<area shape="rect" href="../../db/d45/classez_reflected_class.htm" title="All classes that should be dynamically reflectable, need to be derived from this base class." alt="" coords="52,80,185,107"/>
<area shape="rect" href="../../d4/d02/classez_no_base.htm" title="Dummy type to pass to templates and macros that expect a base type for a class that has no base." alt="" coords="75,5,162,32"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a146f9bf3263ba7cfc11021b6b0ce03d7"><td class="memItemLeft" align="right" valign="top"><a id="a146f9bf3263ba7cfc11021b6b0ce03d7"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>ezStandardInputDevice</b> (ezUInt32 uiWindowNumber, GLFWwindow *windowHandle)</td></tr>
<tr class="separator:a146f9bf3263ba7cfc11021b6b0ce03d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adcea19b1ebc60963589f78680cd8fbeb"><td class="memItemLeft" align="right" valign="top"><a id="adcea19b1ebc60963589f78680cd8fbeb"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d76/classez_standard_input_device.htm#adcea19b1ebc60963589f78680cd8fbeb">SetShowMouseCursor</a> (bool bShow) override</td></tr>
<tr class="memdesc:adcea19b1ebc60963589f78680cd8fbeb"><td class="mdescLeft">&#160;</td><td class="mdescRight">Shows or hides the mouse cursor inside the application window. <br /></td></tr>
<tr class="separator:adcea19b1ebc60963589f78680cd8fbeb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5df989ff64a3a986828f92da9989a7ea"><td class="memItemLeft" align="right" valign="top"><a id="a5df989ff64a3a986828f92da9989a7ea"></a>
virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d76/classez_standard_input_device.htm#a5df989ff64a3a986828f92da9989a7ea">GetShowMouseCursor</a> () const override</td></tr>
<tr class="memdesc:a5df989ff64a3a986828f92da9989a7ea"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the mouse cursor is shown. <br /></td></tr>
<tr class="separator:a5df989ff64a3a986828f92da9989a7ea"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a19e1bf9435566824ef063c270ef131a7"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d76/classez_standard_input_device.htm#a19e1bf9435566824ef063c270ef131a7">SetClipMouseCursor</a> (<a class="el" href="../../de/d43/structez_mouse_cursor_clip_mode.htm#aca2bf78cfea16819fa36e7d35a784849">ezMouseCursorClipMode::Enum</a> mode) override</td></tr>
<tr class="memdesc:a19e1bf9435566824ef063c270ef131a7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Will trap the mouse inside the application window. Should usually be enabled, to prevent accidental task switches.  <a href="../../dd/d76/classez_standard_input_device.htm#a19e1bf9435566824ef063c270ef131a7">More...</a><br /></td></tr>
<tr class="separator:a19e1bf9435566824ef063c270ef131a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d9744bdea2a43c38bc16ec7b80f4f8c"><td class="memItemLeft" align="right" valign="top"><a id="a4d9744bdea2a43c38bc16ec7b80f4f8c"></a>
virtual <a class="el" href="../../de/d43/structez_mouse_cursor_clip_mode.htm#aca2bf78cfea16819fa36e7d35a784849">ezMouseCursorClipMode::Enum</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d76/classez_standard_input_device.htm#a4d9744bdea2a43c38bc16ec7b80f4f8c">GetClipMouseCursor</a> () const override</td></tr>
<tr class="memdesc:a4d9744bdea2a43c38bc16ec7b80f4f8c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the mouse is confined to the application window or not. <br /></td></tr>
<tr class="separator:a4d9744bdea2a43c38bc16ec7b80f4f8c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6936b12cbf098989029eeb79da23080c"><td class="memItemLeft" align="right" valign="top"><a id="a6936b12cbf098989029eeb79da23080c"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>OnKey</b> (int key, int scancode, int action, int mods)</td></tr>
<tr class="separator:a6936b12cbf098989029eeb79da23080c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a60c5f9086d4044563e07b5afbfba71d8"><td class="memItemLeft" align="right" valign="top"><a id="a60c5f9086d4044563e07b5afbfba71d8"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>OnCharacter</b> (unsigned int codepoint)</td></tr>
<tr class="separator:a60c5f9086d4044563e07b5afbfba71d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4db62836680a67cdccd03c8905dee7f9"><td class="memItemLeft" align="right" valign="top"><a id="a4db62836680a67cdccd03c8905dee7f9"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>OnCursorPosition</b> (double xpos, double ypos)</td></tr>
<tr class="separator:a4db62836680a67cdccd03c8905dee7f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ac0ef28b8502ac9817cd66a6f563738"><td class="memItemLeft" align="right" valign="top"><a id="a0ac0ef28b8502ac9817cd66a6f563738"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>OnMouseButton</b> (int button, int action, int mods)</td></tr>
<tr class="separator:a0ac0ef28b8502ac9817cd66a6f563738"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a83198aee126ccc3f76ec21df2c808b7c"><td class="memItemLeft" align="right" valign="top"><a id="a83198aee126ccc3f76ec21df2c808b7c"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>OnScroll</b> (double xoffset, double yoffset)</td></tr>
<tr class="separator:a83198aee126ccc3f76ec21df2c808b7c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac3d108e5ad84a933a635956d83b8b1fe"><td class="memItemLeft" align="right" valign="top"><a id="ac3d108e5ad84a933a635956d83b8b1fe"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>ezStandardInputDevice</b> (ezUInt32 uiWindowNumber)</td></tr>
<tr class="separator:ac3d108e5ad84a933a635956d83b8b1fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2ee0aba89ee8ad5ff1e518699007f7c"><td class="memItemLeft" align="right" valign="top"><a id="ac2ee0aba89ee8ad5ff1e518699007f7c"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d76/classez_standard_input_device.htm#ac2ee0aba89ee8ad5ff1e518699007f7c">SetShowMouseCursor</a> (bool bShow) override</td></tr>
<tr class="memdesc:ac2ee0aba89ee8ad5ff1e518699007f7c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Shows or hides the mouse cursor inside the application window. <br /></td></tr>
<tr class="separator:ac2ee0aba89ee8ad5ff1e518699007f7c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6da64e674d8ed9fee0c7e94314a4c34c"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d76/classez_standard_input_device.htm#a6da64e674d8ed9fee0c7e94314a4c34c">SetClipMouseCursor</a> (<a class="el" href="../../de/d43/structez_mouse_cursor_clip_mode.htm#aca2bf78cfea16819fa36e7d35a784849">ezMouseCursorClipMode::Enum</a> mode) override</td></tr>
<tr class="memdesc:a6da64e674d8ed9fee0c7e94314a4c34c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Will trap the mouse inside the application window. Should usually be enabled, to prevent accidental task switches.  <a href="../../dd/d76/classez_standard_input_device.htm#a6da64e674d8ed9fee0c7e94314a4c34c">More...</a><br /></td></tr>
<tr class="separator:a6da64e674d8ed9fee0c7e94314a4c34c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37378137c8b89e4b143f3281fa7e87ee"><td class="memItemLeft" align="right" valign="top"><a id="a37378137c8b89e4b143f3281fa7e87ee"></a>
virtual <a class="el" href="../../de/d43/structez_mouse_cursor_clip_mode.htm#aca2bf78cfea16819fa36e7d35a784849">ezMouseCursorClipMode::Enum</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d76/classez_standard_input_device.htm#a37378137c8b89e4b143f3281fa7e87ee">GetClipMouseCursor</a> () const override</td></tr>
<tr class="memdesc:a37378137c8b89e4b143f3281fa7e87ee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the mouse is confined to the application window or not. <br /></td></tr>
<tr class="separator:a37378137c8b89e4b143f3281fa7e87ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af5e1b53279417b3728a3f294e9da57f5"><td class="memItemLeft" align="right" valign="top"><a id="af5e1b53279417b3728a3f294e9da57f5"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>ezStandardInputDevice</b> (ABI::Windows::UI::Core::ICoreWindow *coreWindow)</td></tr>
<tr class="separator:af5e1b53279417b3728a3f294e9da57f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6da64e674d8ed9fee0c7e94314a4c34c"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d76/classez_standard_input_device.htm#a6da64e674d8ed9fee0c7e94314a4c34c">SetClipMouseCursor</a> (<a class="el" href="../../de/d43/structez_mouse_cursor_clip_mode.htm#aca2bf78cfea16819fa36e7d35a784849">ezMouseCursorClipMode::Enum</a> mode) override</td></tr>
<tr class="memdesc:a6da64e674d8ed9fee0c7e94314a4c34c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Will trap the mouse inside the application window. Should usually be enabled, to prevent accidental task switches.  <a href="../../dd/d76/classez_standard_input_device.htm#a6da64e674d8ed9fee0c7e94314a4c34c">More...</a><br /></td></tr>
<tr class="separator:a6da64e674d8ed9fee0c7e94314a4c34c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37378137c8b89e4b143f3281fa7e87ee"><td class="memItemLeft" align="right" valign="top"><a id="a37378137c8b89e4b143f3281fa7e87ee"></a>
virtual <a class="el" href="../../de/d43/structez_mouse_cursor_clip_mode.htm#aca2bf78cfea16819fa36e7d35a784849">ezMouseCursorClipMode::Enum</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d76/classez_standard_input_device.htm#a37378137c8b89e4b143f3281fa7e87ee">GetClipMouseCursor</a> () const override</td></tr>
<tr class="memdesc:a37378137c8b89e4b143f3281fa7e87ee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the mouse is confined to the application window or not. <br /></td></tr>
<tr class="separator:a37378137c8b89e4b143f3281fa7e87ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2ee0aba89ee8ad5ff1e518699007f7c"><td class="memItemLeft" align="right" valign="top"><a id="ac2ee0aba89ee8ad5ff1e518699007f7c"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d76/classez_standard_input_device.htm#ac2ee0aba89ee8ad5ff1e518699007f7c">SetShowMouseCursor</a> (bool bShow) override</td></tr>
<tr class="memdesc:ac2ee0aba89ee8ad5ff1e518699007f7c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Shows or hides the mouse cursor inside the application window. <br /></td></tr>
<tr class="separator:ac2ee0aba89ee8ad5ff1e518699007f7c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a61feb058380b122acfc9bb33f1aaa3a4"><td class="memItemLeft" align="right" valign="top"><a id="a61feb058380b122acfc9bb33f1aaa3a4"></a>
virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d76/classez_standard_input_device.htm#a61feb058380b122acfc9bb33f1aaa3a4">GetShowMouseCursor</a> () const override</td></tr>
<tr class="memdesc:a61feb058380b122acfc9bb33f1aaa3a4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the mouse cursor is shown. <br /></td></tr>
<tr class="separator:a61feb058380b122acfc9bb33f1aaa3a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac3d108e5ad84a933a635956d83b8b1fe"><td class="memItemLeft" align="right" valign="top"><a id="ac3d108e5ad84a933a635956d83b8b1fe"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>ezStandardInputDevice</b> (ezUInt32 uiWindowNumber)</td></tr>
<tr class="separator:ac3d108e5ad84a933a635956d83b8b1fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc3a278a46063ad9075fbf434204091d"><td class="memItemLeft" align="right" valign="top"><a id="afc3a278a46063ad9075fbf434204091d"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d76/classez_standard_input_device.htm#afc3a278a46063ad9075fbf434204091d">WindowMessage</a> (ezMinWindows::HWND hWnd, ezMinWindows::UINT Msg, ezMinWindows::WPARAM wParam, ezMinWindows::LPARAM lParam)</td></tr>
<tr class="memdesc:afc3a278a46063ad9075fbf434204091d"><td class="mdescLeft">&#160;</td><td class="mdescRight">This function needs to be called by all Windows functions, to pass the input information through to this input device. <br /></td></tr>
<tr class="separator:afc3a278a46063ad9075fbf434204091d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6da64e674d8ed9fee0c7e94314a4c34c"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d76/classez_standard_input_device.htm#a6da64e674d8ed9fee0c7e94314a4c34c">SetClipMouseCursor</a> (<a class="el" href="../../de/d43/structez_mouse_cursor_clip_mode.htm#aca2bf78cfea16819fa36e7d35a784849">ezMouseCursorClipMode::Enum</a> mode) override</td></tr>
<tr class="memdesc:a6da64e674d8ed9fee0c7e94314a4c34c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Will trap the mouse inside the application window. Should usually be enabled, to prevent accidental task switches.  <a href="../../dd/d76/classez_standard_input_device.htm#a6da64e674d8ed9fee0c7e94314a4c34c">More...</a><br /></td></tr>
<tr class="separator:a6da64e674d8ed9fee0c7e94314a4c34c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37378137c8b89e4b143f3281fa7e87ee"><td class="memItemLeft" align="right" valign="top"><a id="a37378137c8b89e4b143f3281fa7e87ee"></a>
virtual <a class="el" href="../../de/d43/structez_mouse_cursor_clip_mode.htm#aca2bf78cfea16819fa36e7d35a784849">ezMouseCursorClipMode::Enum</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d76/classez_standard_input_device.htm#a37378137c8b89e4b143f3281fa7e87ee">GetClipMouseCursor</a> () const override</td></tr>
<tr class="memdesc:a37378137c8b89e4b143f3281fa7e87ee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the mouse is confined to the application window or not. <br /></td></tr>
<tr class="separator:a37378137c8b89e4b143f3281fa7e87ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2ee0aba89ee8ad5ff1e518699007f7c"><td class="memItemLeft" align="right" valign="top"><a id="ac2ee0aba89ee8ad5ff1e518699007f7c"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d76/classez_standard_input_device.htm#ac2ee0aba89ee8ad5ff1e518699007f7c">SetShowMouseCursor</a> (bool bShow) override</td></tr>
<tr class="memdesc:ac2ee0aba89ee8ad5ff1e518699007f7c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Shows or hides the mouse cursor inside the application window. <br /></td></tr>
<tr class="separator:ac2ee0aba89ee8ad5ff1e518699007f7c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a61feb058380b122acfc9bb33f1aaa3a4"><td class="memItemLeft" align="right" valign="top"><a id="a61feb058380b122acfc9bb33f1aaa3a4"></a>
virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d76/classez_standard_input_device.htm#a61feb058380b122acfc9bb33f1aaa3a4">GetShowMouseCursor</a> () const override</td></tr>
<tr class="memdesc:a61feb058380b122acfc9bb33f1aaa3a4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the mouse cursor is shown. <br /></td></tr>
<tr class="separator:a61feb058380b122acfc9bb33f1aaa3a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classez_input_device_mouse_keyboard"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classez_input_device_mouse_keyboard')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../d2/db3/classez_input_device_mouse_keyboard.htm">ezInputDeviceMouseKeyboard</a></td></tr>
<tr class="memitem:a7961910cdaf34b60c3db00c4470f4de6 inherit pub_methods_classez_input_device_mouse_keyboard"><td class="memItemLeft" align="right" valign="top"><a id="a7961910cdaf34b60c3db00c4470f4de6"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/db3/classez_input_device_mouse_keyboard.htm#a7961910cdaf34b60c3db00c4470f4de6">SetMouseSpeed</a> (const <a class="el" href="../../d1/df8/classez_vec2_template.htm">ezVec2</a> &amp;vScale)</td></tr>
<tr class="memdesc:a7961910cdaf34b60c3db00c4470f4de6 inherit pub_methods_classez_input_device_mouse_keyboard"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the scaling factor that is applied on all (relative) mouse input. <br /></td></tr>
<tr class="separator:a7961910cdaf34b60c3db00c4470f4de6 inherit pub_methods_classez_input_device_mouse_keyboard"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95c9e523c7f05b231a565b9e0223b28d inherit pub_methods_classez_input_device_mouse_keyboard"><td class="memItemLeft" align="right" valign="top"><a id="a95c9e523c7f05b231a565b9e0223b28d"></a>
<a class="el" href="../../d1/df8/classez_vec2_template.htm">ezVec2</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/db3/classez_input_device_mouse_keyboard.htm#a95c9e523c7f05b231a565b9e0223b28d">GetMouseSpeed</a> () const</td></tr>
<tr class="memdesc:a95c9e523c7f05b231a565b9e0223b28d inherit pub_methods_classez_input_device_mouse_keyboard"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the scaling factor that is applied on all (relative) mouse input. <br /></td></tr>
<tr class="separator:a95c9e523c7f05b231a565b9e0223b28d inherit pub_methods_classez_input_device_mouse_keyboard"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e39332261cf3e3b9b67b8cb950cd495 inherit pub_methods_classez_input_device_mouse_keyboard"><td class="memItemLeft" align="right" valign="top"><a id="a4e39332261cf3e3b9b67b8cb950cd495"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/db3/classez_input_device_mouse_keyboard.htm#a4e39332261cf3e3b9b67b8cb950cd495">IsFocused</a> ()</td></tr>
<tr class="memdesc:a4e39332261cf3e3b9b67b8cb950cd495 inherit pub_methods_classez_input_device_mouse_keyboard"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns if the associated <a class="el" href="../../da/db5/classez_window.htm" title="A simple abstraction for platform specific window creation.">ezWindow</a> has focus. <br /></td></tr>
<tr class="separator:a4e39332261cf3e3b9b67b8cb950cd495 inherit pub_methods_classez_input_device_mouse_keyboard"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classez_input_device"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classez_input_device')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../df/d18/classez_input_device.htm">ezInputDevice</a></td></tr>
<tr class="memitem:a7bcaa3d0b3cebf5b099362fc234e2966 inherit pub_methods_classez_input_device"><td class="memItemLeft" align="right" valign="top"><a id="a7bcaa3d0b3cebf5b099362fc234e2966"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d18/classez_input_device.htm#a7bcaa3d0b3cebf5b099362fc234e2966">ezInputDevice</a> ()</td></tr>
<tr class="memdesc:a7bcaa3d0b3cebf5b099362fc234e2966 inherit pub_methods_classez_input_device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default Constructor. <br /></td></tr>
<tr class="separator:a7bcaa3d0b3cebf5b099362fc234e2966 inherit pub_methods_classez_input_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a488142a253444bdc1bd64edbcfc59dd3 inherit pub_methods_classez_input_device"><td class="memItemLeft" align="right" valign="top"><a id="a488142a253444bdc1bd64edbcfc59dd3"></a>
float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d18/classez_input_device.htm#a488142a253444bdc1bd64edbcfc59dd3">GetInputSlotState</a> (const char *slot) const</td></tr>
<tr class="memdesc:a488142a253444bdc1bd64edbcfc59dd3 inherit pub_methods_classez_input_device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allows to query current input values for the given slot. <br /></td></tr>
<tr class="separator:a488142a253444bdc1bd64edbcfc59dd3 inherit pub_methods_classez_input_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c62c9e2595a1ff61a1fe6f970ba7592 inherit pub_methods_classez_input_device"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d18/classez_input_device.htm#a3c62c9e2595a1ff61a1fe6f970ba7592">HasDeviceBeenUsedLastFrame</a> () const</td></tr>
<tr class="memdesc:a3c62c9e2595a1ff61a1fe6f970ba7592 inherit pub_methods_classez_input_device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if the device was 'used' during the last frame, ie. when it generated input due to some user interaction.  <a href="../../df/d18/classez_input_device.htm#a3c62c9e2595a1ff61a1fe6f970ba7592">More...</a><br /></td></tr>
<tr class="separator:a3c62c9e2595a1ff61a1fe6f970ba7592 inherit pub_methods_classez_input_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classez_reflected_class"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classez_reflected_class')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../db/d45/classez_reflected_class.htm">ezReflectedClass</a></td></tr>
<tr class="memitem:a36b3c91f3b77fee7a0e4c7d262735a89 inherit pub_methods_classez_reflected_class"><td class="memItemLeft" align="right" valign="top"><a id="a36b3c91f3b77fee7a0e4c7d262735a89"></a>
virtual const <a class="el" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetDynamicRTTI</b> () const</td></tr>
<tr class="separator:a36b3c91f3b77fee7a0e4c7d262735a89 inherit pub_methods_classez_reflected_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab746c8e33a03b96c25b117ee04cf6f00 inherit pub_methods_classez_reflected_class"><td class="memItemLeft" align="right" valign="top"><a id="ab746c8e33a03b96c25b117ee04cf6f00"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d45/classez_reflected_class.htm#ab746c8e33a03b96c25b117ee04cf6f00">IsInstanceOf</a> (const <a class="el" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a> *pType) const</td></tr>
<tr class="memdesc:ab746c8e33a03b96c25b117ee04cf6f00 inherit pub_methods_classez_reflected_class"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the type of this instance is of the given type or derived from it. <br /></td></tr>
<tr class="separator:ab746c8e33a03b96c25b117ee04cf6f00 inherit pub_methods_classez_reflected_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86c6a804cc97a425928bce744607400a inherit pub_methods_classez_reflected_class"><td class="memTemplParams" colspan="2"><a id="a86c6a804cc97a425928bce744607400a"></a>
template&lt;typename T &gt; </td></tr>
<tr class="memitem:a86c6a804cc97a425928bce744607400a inherit pub_methods_classez_reflected_class"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../db/d45/classez_reflected_class.htm#a86c6a804cc97a425928bce744607400a">IsInstanceOf</a> () const</td></tr>
<tr class="memdesc:a86c6a804cc97a425928bce744607400a inherit pub_methods_classez_reflected_class"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the type of this instance is of the given type or derived from it. <br /></td></tr>
<tr class="separator:a86c6a804cc97a425928bce744607400a inherit pub_methods_classez_reflected_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a2840742d88394a8d88ec3332af8f814e"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d76/classez_standard_input_device.htm#a2840742d88394a8d88ec3332af8f814e">LocalizeButtonDisplayNames</a> ()</td></tr>
<tr class="memdesc:a2840742d88394a8d88ec3332af8f814e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calling this function will 'translate' most key names from English to the OS language, by querying that information from the OS.  <a href="../../dd/d76/classez_standard_input_device.htm#a2840742d88394a8d88ec3332af8f814e">More...</a><br /></td></tr>
<tr class="separator:a2840742d88394a8d88ec3332af8f814e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_methods_classez_input_device_mouse_keyboard"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_classez_input_device_mouse_keyboard')"><img src="../../closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="../../d2/db3/classez_input_device_mouse_keyboard.htm">ezInputDeviceMouseKeyboard</a></td></tr>
<tr class="memitem:a30912d2491f8b7fcb2124ec7ca8341f8 inherit pub_static_methods_classez_input_device_mouse_keyboard"><td class="memItemLeft" align="right" valign="top"><a id="a30912d2491f8b7fcb2124ec7ca8341f8"></a>
static ezInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/db3/classez_input_device_mouse_keyboard.htm#a30912d2491f8b7fcb2124ec7ca8341f8">GetWindowNumberMouseIsOver</a> ()</td></tr>
<tr class="memdesc:a30912d2491f8b7fcb2124ec7ca8341f8 inherit pub_static_methods_classez_input_device_mouse_keyboard"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of the <a class="el" href="../../da/db5/classez_window.htm" title="A simple abstraction for platform specific window creation.">ezWindow</a> over which the mouse moved last. <br /></td></tr>
<tr class="separator:a30912d2491f8b7fcb2124ec7ca8341f8 inherit pub_static_methods_classez_input_device_mouse_keyboard"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_static_methods_classez_no_base"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_classez_no_base')"><img src="../../closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="../../d4/d02/classez_no_base.htm">ezNoBase</a></td></tr>
<tr class="memitem:ad676281ced156eb886aa4f74a2a45d2f inherit pub_static_methods_classez_no_base"><td class="memItemLeft" align="right" valign="top"><a id="ad676281ced156eb886aa4f74a2a45d2f"></a>
static const <a class="el" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetStaticRTTI</b> ()</td></tr>
<tr class="separator:ad676281ced156eb886aa4f74a2a45d2f inherit pub_static_methods_classez_no_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a4a70384a87f78533338c5ee3e3618167"><td class="memItemLeft" align="right" valign="top"><a id="a4a70384a87f78533338c5ee3e3618167"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d76/classez_standard_input_device.htm#a4a70384a87f78533338c5ee3e3618167">InitializeDevice</a> () override</td></tr>
<tr class="memdesc:a4a70384a87f78533338c5ee3e3618167"><td class="mdescLeft">&#160;</td><td class="mdescRight">Override this if you need to do device specific initialization before the first use. <br /></td></tr>
<tr class="separator:a4a70384a87f78533338c5ee3e3618167"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a57ea8ada3f8c8568244dd7f892aa17"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d76/classez_standard_input_device.htm#a1a57ea8ada3f8c8568244dd7f892aa17">RegisterInputSlots</a> () override</td></tr>
<tr class="memdesc:a1a57ea8ada3f8c8568244dd7f892aa17"><td class="mdescLeft">&#160;</td><td class="mdescRight">Override this to register all the input slots that this device exposes.  <a href="../../dd/d76/classez_standard_input_device.htm#a1a57ea8ada3f8c8568244dd7f892aa17">More...</a><br /></td></tr>
<tr class="separator:a1a57ea8ada3f8c8568244dd7f892aa17"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a239c0be3ec7638508b014fa8517e90d7"><td class="memItemLeft" align="right" valign="top"><a id="a239c0be3ec7638508b014fa8517e90d7"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d76/classez_standard_input_device.htm#a239c0be3ec7638508b014fa8517e90d7">ResetInputSlotValues</a> () override</td></tr>
<tr class="memdesc:a239c0be3ec7638508b014fa8517e90d7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Override this, if you need to reset certain input slot values to zero, after the <a class="el" href="../../d8/d45/classez_input_manager.htm" title="The central class to set up and query the state of all input.">ezInputManager</a> is finished with the current frame update. <br /></td></tr>
<tr class="separator:a239c0be3ec7638508b014fa8517e90d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ace5f49dd821b3d00ba05c69c234f0c"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d76/classez_standard_input_device.htm#a5ace5f49dd821b3d00ba05c69c234f0c">UpdateInputSlotValues</a> () override</td></tr>
<tr class="memdesc:a5ace5f49dd821b3d00ba05c69c234f0c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Override this, if you need to query the state of the hardware to update the input slots.  <a href="../../dd/d76/classez_standard_input_device.htm#a5ace5f49dd821b3d00ba05c69c234f0c">More...</a><br /></td></tr>
<tr class="separator:a5ace5f49dd821b3d00ba05c69c234f0c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classez_input_device"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classez_input_device')"><img src="../../closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="../../df/d18/classez_input_device.htm">ezInputDevice</a></td></tr>
<tr class="memitem:ac56c8b35631ad7da84c901a2c64ac9f7 inherit pro_methods_classez_input_device"><td class="memItemLeft" align="right" valign="top"><a id="ac56c8b35631ad7da84c901a2c64ac9f7"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d18/classez_input_device.htm#ac56c8b35631ad7da84c901a2c64ac9f7">UpdateHardwareState</a> (<a class="el" href="../../d3/d90/structez_time.htm">ezTime</a> tTimeDifference)</td></tr>
<tr class="memdesc:ac56c8b35631ad7da84c901a2c64ac9f7 inherit pro_methods_classez_input_device"><td class="mdescLeft">&#160;</td><td class="mdescRight">This function is called once after <a class="el" href="../../d8/d45/classez_input_manager.htm#aeabab35c354ecb105150be7a40339ba0" title="Updates the state of the input manager. This should be called exactly once each frame.">ezInputManager::Update</a> with the same time delta value. It allows to update hardware state, such as the vibration of gamepad motors. <br /></td></tr>
<tr class="separator:ac56c8b35631ad7da84c901a2c64ac9f7 inherit pro_methods_classez_input_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:ac5372a9599241cadc0791a0795925b08"><td class="memItemLeft" align="right" valign="top"><a id="ac5372a9599241cadc0791a0795925b08"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d76/classez_standard_input_device.htm#ac5372a9599241cadc0791a0795925b08">InitializeDevice</a> () override</td></tr>
<tr class="memdesc:ac5372a9599241cadc0791a0795925b08"><td class="mdescLeft">&#160;</td><td class="mdescRight">Override this if you need to do device specific initialization before the first use. <br /></td></tr>
<tr class="separator:ac5372a9599241cadc0791a0795925b08"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adaad5d6f060ef014155ff2433f7db5fe"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d76/classez_standard_input_device.htm#adaad5d6f060ef014155ff2433f7db5fe">RegisterInputSlots</a> () override</td></tr>
<tr class="memdesc:adaad5d6f060ef014155ff2433f7db5fe"><td class="mdescLeft">&#160;</td><td class="mdescRight">Override this to register all the input slots that this device exposes.  <a href="../../dd/d76/classez_standard_input_device.htm#adaad5d6f060ef014155ff2433f7db5fe">More...</a><br /></td></tr>
<tr class="separator:adaad5d6f060ef014155ff2433f7db5fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afeea89c35e57fa61572c38085fed56c7"><td class="memItemLeft" align="right" valign="top"><a id="afeea89c35e57fa61572c38085fed56c7"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d76/classez_standard_input_device.htm#afeea89c35e57fa61572c38085fed56c7">ResetInputSlotValues</a> () override</td></tr>
<tr class="memdesc:afeea89c35e57fa61572c38085fed56c7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Override this, if you need to reset certain input slot values to zero, after the <a class="el" href="../../d8/d45/classez_input_manager.htm" title="The central class to set up and query the state of all input.">ezInputManager</a> is finished with the current frame update. <br /></td></tr>
<tr class="separator:afeea89c35e57fa61572c38085fed56c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4a70384a87f78533338c5ee3e3618167"><td class="memItemLeft" align="right" valign="top"><a id="a4a70384a87f78533338c5ee3e3618167"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d76/classez_standard_input_device.htm#a4a70384a87f78533338c5ee3e3618167">InitializeDevice</a> () override</td></tr>
<tr class="memdesc:a4a70384a87f78533338c5ee3e3618167"><td class="mdescLeft">&#160;</td><td class="mdescRight">Override this if you need to do device specific initialization before the first use. <br /></td></tr>
<tr class="separator:a4a70384a87f78533338c5ee3e3618167"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a57ea8ada3f8c8568244dd7f892aa17"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d76/classez_standard_input_device.htm#a1a57ea8ada3f8c8568244dd7f892aa17">RegisterInputSlots</a> () override</td></tr>
<tr class="memdesc:a1a57ea8ada3f8c8568244dd7f892aa17"><td class="mdescLeft">&#160;</td><td class="mdescRight">Override this to register all the input slots that this device exposes.  <a href="../../dd/d76/classez_standard_input_device.htm#a1a57ea8ada3f8c8568244dd7f892aa17">More...</a><br /></td></tr>
<tr class="separator:a1a57ea8ada3f8c8568244dd7f892aa17"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4a70384a87f78533338c5ee3e3618167"><td class="memItemLeft" align="right" valign="top"><a id="a4a70384a87f78533338c5ee3e3618167"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d76/classez_standard_input_device.htm#a4a70384a87f78533338c5ee3e3618167">InitializeDevice</a> () override</td></tr>
<tr class="memdesc:a4a70384a87f78533338c5ee3e3618167"><td class="mdescLeft">&#160;</td><td class="mdescRight">Override this if you need to do device specific initialization before the first use. <br /></td></tr>
<tr class="separator:a4a70384a87f78533338c5ee3e3618167"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1a57ea8ada3f8c8568244dd7f892aa17"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d76/classez_standard_input_device.htm#a1a57ea8ada3f8c8568244dd7f892aa17">RegisterInputSlots</a> () override</td></tr>
<tr class="memdesc:a1a57ea8ada3f8c8568244dd7f892aa17"><td class="mdescLeft">&#160;</td><td class="mdescRight">Override this to register all the input slots that this device exposes.  <a href="../../dd/d76/classez_standard_input_device.htm#a1a57ea8ada3f8c8568244dd7f892aa17">More...</a><br /></td></tr>
<tr class="separator:a1a57ea8ada3f8c8568244dd7f892aa17"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a239c0be3ec7638508b014fa8517e90d7"><td class="memItemLeft" align="right" valign="top"><a id="a239c0be3ec7638508b014fa8517e90d7"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dd/d76/classez_standard_input_device.htm#a239c0be3ec7638508b014fa8517e90d7">ResetInputSlotValues</a> () override</td></tr>
<tr class="memdesc:a239c0be3ec7638508b014fa8517e90d7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Override this, if you need to reset certain input slot values to zero, after the <a class="el" href="../../d8/d45/classez_input_manager.htm" title="The central class to set up and query the state of all input.">ezInputManager</a> is finished with the current frame update. <br /></td></tr>
<tr class="separator:a239c0be3ec7638508b014fa8517e90d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pro_static_methods_classez_input_device"><td colspan="2" onclick="javascript:toggleInherit('pro_static_methods_classez_input_device')"><img src="../../closed.png" alt="-"/>&#160;Static Protected Member Functions inherited from <a class="el" href="../../df/d18/classez_input_device.htm">ezInputDevice</a></td></tr>
<tr class="memitem:a504b39eb54d144d61594a2e88fa3cdde inherit pro_static_methods_classez_input_device"><td class="memItemLeft" align="right" valign="top"><a id="a504b39eb54d144d61594a2e88fa3cdde"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d18/classez_input_device.htm#a504b39eb54d144d61594a2e88fa3cdde">RegisterInputSlot</a> (const char *szName, const char *szDefaultDisplayName, <a class="el" href="../../d1/dec/structez_bitflags.htm">ezBitflags</a>&lt; <a class="el" href="../../df/d72/structez_input_slot_flags.htm">ezInputSlotFlags</a> &gt; SlotFlags)</td></tr>
<tr class="memdesc:a504b39eb54d144d61594a2e88fa3cdde inherit pro_static_methods_classez_input_device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calls <a class="el" href="../../df/d18/classez_input_device.htm#a504b39eb54d144d61594a2e88fa3cdde" title="Calls RegisterInputSlot() on the ezInputManager and passes the parameters through.">RegisterInputSlot()</a> on the <a class="el" href="../../d8/d45/classez_input_manager.htm" title="The central class to set up and query the state of all input.">ezInputManager</a> and passes the parameters through. <br /></td></tr>
<tr class="separator:a504b39eb54d144d61594a2e88fa3cdde inherit pro_static_methods_classez_input_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classez_input_device_mouse_keyboard"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classez_input_device_mouse_keyboard')"><img src="../../closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="../../d2/db3/classez_input_device_mouse_keyboard.htm">ezInputDeviceMouseKeyboard</a></td></tr>
<tr class="memitem:a20236ae991133da65ba6d39a4d7f714b inherit pro_attribs_classez_input_device_mouse_keyboard"><td class="memItemLeft" align="right" valign="top"><a id="a20236ae991133da65ba6d39a4d7f714b"></a>
<a class="el" href="../../d3/d90/structez_time.htm">ezTime</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_DoubleClickTime</b> = <a class="el" href="../../d3/d90/structez_time.htm#a3061c9851afc84d16a45aa129566b3ae">ezTime::Milliseconds</a>(500)</td></tr>
<tr class="separator:a20236ae991133da65ba6d39a4d7f714b inherit pro_attribs_classez_input_device_mouse_keyboard"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classez_input_device"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classez_input_device')"><img src="../../closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="../../df/d18/classez_input_device.htm">ezInputDevice</a></td></tr>
<tr class="memitem:aa020904d039e3c7ee81829b22d6919ff inherit pro_attribs_classez_input_device"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d1/d79/classez_map.htm">ezMap</a>&lt; <a class="el" href="../../d4/d53/structez_hybrid_string.htm">ezString</a>, float &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d18/classez_input_device.htm#aa020904d039e3c7ee81829b22d6919ff">m_InputSlotValues</a></td></tr>
<tr class="memdesc:aa020904d039e3c7ee81829b22d6919ff inherit pro_attribs_classez_input_device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stores all the values for all input slots that this device handles.  <a href="../../df/d18/classez_input_device.htm#aa020904d039e3c7ee81829b22d6919ff">More...</a><br /></td></tr>
<tr class="separator:aa020904d039e3c7ee81829b22d6919ff inherit pro_attribs_classez_input_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a053bacaca498574994f6013e1fe72dc4 inherit pro_attribs_classez_input_device"><td class="memItemLeft" align="right" valign="top"><a id="a053bacaca498574994f6013e1fe72dc4"></a>
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d18/classez_input_device.htm#a053bacaca498574994f6013e1fe72dc4">m_uiLastCharacter</a></td></tr>
<tr class="memdesc:a053bacaca498574994f6013e1fe72dc4 inherit pro_attribs_classez_input_device"><td class="mdescLeft">&#160;</td><td class="mdescRight">If this input device type handles character input, it should write the last typed character into this variable. The <a class="el" href="../../d8/d45/classez_input_manager.htm" title="The central class to set up and query the state of all input.">ezInputManager</a> calls RetrieveLastCharacter() to query what the user typed last. <br /></td></tr>
<tr class="separator:a053bacaca498574994f6013e1fe72dc4 inherit pro_attribs_classez_input_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classez_enumerable"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classez_enumerable')"><img src="../../closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="../../d5/d0b/classez_enumerable.htm">ezEnumerable&lt; ezInputDevice, ezReflectedClass &gt;</a></td></tr>
<tr class="memitem:a6a9e0d84d59fb7c18b0600ec9a986098 inherit pro_attribs_classez_enumerable"><td class="memItemLeft" align="right" valign="top"><a id="a6a9e0d84d59fb7c18b0600ec9a986098"></a>
<a class="el" href="../../d5/d0b/classez_enumerable.htm">ezEnumerable</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>m_pNextInstance</b></td></tr>
<tr class="separator:a6a9e0d84d59fb7c18b0600ec9a986098 inherit pro_attribs_classez_enumerable"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_static_attribs_classez_input_device_mouse_keyboard"><td colspan="2" onclick="javascript:toggleInherit('pro_static_attribs_classez_input_device_mouse_keyboard')"><img src="../../closed.png" alt="-"/>&#160;Static Protected Attributes inherited from <a class="el" href="../../d2/db3/classez_input_device_mouse_keyboard.htm">ezInputDeviceMouseKeyboard</a></td></tr>
<tr class="memitem:a9d79ebdc9cb4d9883858c3e0a725eabb inherit pro_static_attribs_classez_input_device_mouse_keyboard"><td class="memItemLeft" align="right" valign="top"><a id="a9d79ebdc9cb4d9883858c3e0a725eabb"></a>
static ezInt32&#160;</td><td class="memItemRight" valign="bottom"><b>s_iMouseIsOverWindowNumber</b> = -1</td></tr>
<tr class="separator:a9d79ebdc9cb4d9883858c3e0a725eabb inherit pro_static_attribs_classez_input_device_mouse_keyboard"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a2840742d88394a8d88ec3332af8f814e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2840742d88394a8d88ec3332af8f814e">&#9670;&nbsp;</a></span>LocalizeButtonDisplayNames()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ezStandardInputDevice::LocalizeButtonDisplayNames </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Calling this function will 'translate' most key names from English to the OS language, by querying that information from the OS. </p>
<p>The OS translation might not always be perfect for all keys. The translation can change when the user changes the keyboard layout. So if he switches from an English layout to a German layout, <a class="el" href="../../dd/d76/classez_standard_input_device.htm#a2840742d88394a8d88ec3332af8f814e" title="Calling this function will &#39;translate&#39; most key names from English to the OS language,...">LocalizeButtonDisplayNames()</a> should be called again, to update the display names, if that is required. </p>

</div>
</div>
<a id="a1a57ea8ada3f8c8568244dd7f892aa17"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1a57ea8ada3f8c8568244dd7f892aa17">&#9670;&nbsp;</a></span>RegisterInputSlots() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void ezStandardInputDevice::RegisterInputSlots </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">private</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Override this to register all the input slots that this device exposes. </p>
<p>This is called once during initialization. It needs to call <a class="el" href="../../df/d18/classez_input_device.htm#a504b39eb54d144d61594a2e88fa3cdde" title="Calls RegisterInputSlot() on the ezInputManager and passes the parameters through.">RegisterInputSlot()</a> once for every input slot that this device exposes to the system. </p>

<p>Implements <a class="el" href="../../df/d18/classez_input_device.htm#ad70250d056a9db8e4de9195bc229ecfc">ezInputDevice</a>.</p>

</div>
</div>
<a id="a1a57ea8ada3f8c8568244dd7f892aa17"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1a57ea8ada3f8c8568244dd7f892aa17">&#9670;&nbsp;</a></span>RegisterInputSlots() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void ezStandardInputDevice::RegisterInputSlots </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Override this to register all the input slots that this device exposes. </p>
<p>This is called once during initialization. It needs to call <a class="el" href="../../df/d18/classez_input_device.htm#a504b39eb54d144d61594a2e88fa3cdde" title="Calls RegisterInputSlot() on the ezInputManager and passes the parameters through.">RegisterInputSlot()</a> once for every input slot that this device exposes to the system. </p>

<p>Implements <a class="el" href="../../df/d18/classez_input_device.htm#ad70250d056a9db8e4de9195bc229ecfc">ezInputDevice</a>.</p>

</div>
</div>
<a id="a1a57ea8ada3f8c8568244dd7f892aa17"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1a57ea8ada3f8c8568244dd7f892aa17">&#9670;&nbsp;</a></span>RegisterInputSlots() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void ezStandardInputDevice::RegisterInputSlots </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">private</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Override this to register all the input slots that this device exposes. </p>
<p>This is called once during initialization. It needs to call <a class="el" href="../../df/d18/classez_input_device.htm#a504b39eb54d144d61594a2e88fa3cdde" title="Calls RegisterInputSlot() on the ezInputManager and passes the parameters through.">RegisterInputSlot()</a> once for every input slot that this device exposes to the system. </p>

<p>Implements <a class="el" href="../../df/d18/classez_input_device.htm#ad70250d056a9db8e4de9195bc229ecfc">ezInputDevice</a>.</p>

</div>
</div>
<a id="adaad5d6f060ef014155ff2433f7db5fe"></a>
<h2 class="memtitle"><span class="permalink"><a href="#adaad5d6f060ef014155ff2433f7db5fe">&#9670;&nbsp;</a></span>RegisterInputSlots() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ezStandardInputDevice::RegisterInputSlots </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">private</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Override this to register all the input slots that this device exposes. </p>
<p>This is called once during initialization. It needs to call <a class="el" href="../../df/d18/classez_input_device.htm#a504b39eb54d144d61594a2e88fa3cdde" title="Calls RegisterInputSlot() on the ezInputManager and passes the parameters through.">RegisterInputSlot()</a> once for every input slot that this device exposes to the system. </p>

<p>Implements <a class="el" href="../../df/d18/classez_input_device.htm#ad70250d056a9db8e4de9195bc229ecfc">ezInputDevice</a>.</p>

</div>
</div>
<a id="a6da64e674d8ed9fee0c7e94314a4c34c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6da64e674d8ed9fee0c7e94314a4c34c">&#9670;&nbsp;</a></span>SetClipMouseCursor() <span class="overload">[1/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void ezStandardInputDevice::SetClipMouseCursor </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../de/d43/structez_mouse_cursor_clip_mode.htm#aca2bf78cfea16819fa36e7d35a784849">ezMouseCursorClipMode::Enum</a>&#160;</td>
          <td class="paramname"><em>mode</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Will trap the mouse inside the application window. Should usually be enabled, to prevent accidental task switches. </p>
<p>Especially on multi-monitor systems, the mouse can easily leave the application window (even in fullscreen mode). Do NOT use this function when you have multiple windows and require absolute mouse positions.</p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="../../de/d43/structez_mouse_cursor_clip_mode.htm" title="Specifies how to restrict movement of the Operating System mouse.">ezMouseCursorClipMode</a> </dd></dl>

<p>Implements <a class="el" href="../../d2/db3/classez_input_device_mouse_keyboard.htm#a7bf38324186c002deaa420a3fd15aa7d">ezInputDeviceMouseKeyboard</a>.</p>

</div>
</div>
<a id="a6da64e674d8ed9fee0c7e94314a4c34c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6da64e674d8ed9fee0c7e94314a4c34c">&#9670;&nbsp;</a></span>SetClipMouseCursor() <span class="overload">[2/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void ezStandardInputDevice::SetClipMouseCursor </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../de/d43/structez_mouse_cursor_clip_mode.htm#aca2bf78cfea16819fa36e7d35a784849">ezMouseCursorClipMode::Enum</a>&#160;</td>
          <td class="paramname"><em>mode</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Will trap the mouse inside the application window. Should usually be enabled, to prevent accidental task switches. </p>
<p>Especially on multi-monitor systems, the mouse can easily leave the application window (even in fullscreen mode). Do NOT use this function when you have multiple windows and require absolute mouse positions.</p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="../../de/d43/structez_mouse_cursor_clip_mode.htm" title="Specifies how to restrict movement of the Operating System mouse.">ezMouseCursorClipMode</a> </dd></dl>

<p>Implements <a class="el" href="../../d2/db3/classez_input_device_mouse_keyboard.htm#a7bf38324186c002deaa420a3fd15aa7d">ezInputDeviceMouseKeyboard</a>.</p>

</div>
</div>
<a id="a19e1bf9435566824ef063c270ef131a7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a19e1bf9435566824ef063c270ef131a7">&#9670;&nbsp;</a></span>SetClipMouseCursor() <span class="overload">[3/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ezStandardInputDevice::SetClipMouseCursor </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../de/d43/structez_mouse_cursor_clip_mode.htm#aca2bf78cfea16819fa36e7d35a784849">ezMouseCursorClipMode::Enum</a>&#160;</td>
          <td class="paramname"><em>mode</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Will trap the mouse inside the application window. Should usually be enabled, to prevent accidental task switches. </p>
<p>Especially on multi-monitor systems, the mouse can easily leave the application window (even in fullscreen mode). Do NOT use this function when you have multiple windows and require absolute mouse positions.</p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="../../de/d43/structez_mouse_cursor_clip_mode.htm" title="Specifies how to restrict movement of the Operating System mouse.">ezMouseCursorClipMode</a> </dd></dl>

<p>Implements <a class="el" href="../../d2/db3/classez_input_device_mouse_keyboard.htm#a7bf38324186c002deaa420a3fd15aa7d">ezInputDeviceMouseKeyboard</a>.</p>

</div>
</div>
<a id="a6da64e674d8ed9fee0c7e94314a4c34c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6da64e674d8ed9fee0c7e94314a4c34c">&#9670;&nbsp;</a></span>SetClipMouseCursor() <span class="overload">[4/4]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void ezStandardInputDevice::SetClipMouseCursor </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../de/d43/structez_mouse_cursor_clip_mode.htm#aca2bf78cfea16819fa36e7d35a784849">ezMouseCursorClipMode::Enum</a>&#160;</td>
          <td class="paramname"><em>mode</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Will trap the mouse inside the application window. Should usually be enabled, to prevent accidental task switches. </p>
<p>Especially on multi-monitor systems, the mouse can easily leave the application window (even in fullscreen mode). Do NOT use this function when you have multiple windows and require absolute mouse positions.</p>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="../../de/d43/structez_mouse_cursor_clip_mode.htm" title="Specifies how to restrict movement of the Operating System mouse.">ezMouseCursorClipMode</a> </dd></dl>

<p>Implements <a class="el" href="../../d2/db3/classez_input_device_mouse_keyboard.htm#a7bf38324186c002deaa420a3fd15aa7d">ezInputDeviceMouseKeyboard</a>.</p>

</div>
</div>
<a id="a5ace5f49dd821b3d00ba05c69c234f0c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5ace5f49dd821b3d00ba05c69c234f0c">&#9670;&nbsp;</a></span>UpdateInputSlotValues()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ezStandardInputDevice::UpdateInputSlotValues </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">protected</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Override this, if you need to query the state of the hardware to update the input slots. </p>
<dl class="section note"><dt>Note</dt><dd>This function might be called multiple times before <a class="el" href="../../dd/d76/classez_standard_input_device.htm#afeea89c35e57fa61572c38085fed56c7" title="Override this, if you need to reset certain input slot values to zero, after the ezInputManager is fi...">ResetInputSlotValues()</a> is called. This will be the case when <a class="el" href="../../d8/d45/classez_input_manager.htm#a5da4de03391ce691ec6aa07514f01b99" title="Makes sure that hardware input is processed at this moment, which allows to do this more often than U...">ezInputManager::PollHardware</a> is used to make more frequent hardware updates than input is actually processed. Just make sure to always accumulate delta values (such as mouse move values) and don't expect <a class="el" href="../../dd/d76/classez_standard_input_device.htm#afeea89c35e57fa61572c38085fed56c7" title="Override this, if you need to reset certain input slot values to zero, after the ezInputManager is fi...">ResetInputSlotValues()</a> to be called in tandem with this function and it will be fine. </dd></dl>

<p>Reimplemented from <a class="el" href="../../d2/db3/classez_input_device_mouse_keyboard.htm#ac63f586d1bb21a095e8a442af2b7b58d">ezInputDeviceMouseKeyboard</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Core/System/Implementation/glfw/<a class="el" href="../../df/d5f/_input_device__glfw_8h_source.htm">InputDevice_glfw.h</a></li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Core/System/Implementation/uwp/<a class="el" href="../../d4/d85/_input_device__uwp_8h_source.htm">InputDevice_uwp.h</a></li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Core/System/Implementation/Win/<a class="el" href="../../d4/dfe/_input_device__win32_8h_source.htm">InputDevice_win32.h</a></li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Core/System/Implementation/null/<a class="el" href="../../d9/deb/_input_device__null_8h_source.htm">InputDevice_null.h</a></li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Core/System/Implementation/glfw/InputDevice_glfw.inl</li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Core/System/Implementation/null/InputDevice_null.inl</li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Core/System/Implementation/uwp/InputDevice_uwp.inl</li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Core/System/Implementation/Win/InputDevice_win32.inl</li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dd/d76/classez_standard_input_device.htm">ezStandardInputDevice</a></li>
    <li class="footer">Generated on Fri Nov 18 2022 14:48:11 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
