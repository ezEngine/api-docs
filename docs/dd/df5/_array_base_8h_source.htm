<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Containers/ArrayBase.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 25.03</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('dd/df5/_array_base_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ArrayBase.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;Foundation/Algorithm/Sorting.h&gt;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;Foundation/Math/Math.h&gt;</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;Foundation/Types/ArrayPtr.h&gt;</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160; </div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#if EZ_ENABLED(EZ_INTEROP_STL_SPAN)</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#  include &lt;span&gt;</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160; </div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#ifndef ezInvalidIndex</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#  define ezInvalidIndex 0xFFFFFFFF</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160; </div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00018"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm">   18</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../dc/d59/classez_array_base.htm">ezArrayBase</a></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;{</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;  <a class="code" href="../../dc/d59/classez_array_base.htm#a0f03847a20991108666c982066d651bc">ezArrayBase</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160; </div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;  <a class="code" href="../../dc/d59/classez_array_base.htm#a8001e2991c2675e975efca088795fa6a">~ezArrayBase</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../dc/d59/classez_array_base.htm#a6da9ac91524c489b32ed8e390c52b402">operator=</a>(<span class="keyword">const</span> <a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const T&gt;</a>&amp; rhs); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160; </div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  <span class="keyword">operator</span> <a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const T&gt;</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160; </div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  <span class="keyword">operator</span> <a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;T&gt;</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160; </div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../dc/d59/classez_array_base.htm#abad0e3ab22424c246c7d9125d2e57d31">operator==</a>(<span class="keyword">const</span> <a class="code" href="../../dc/d59/classez_array_base.htm">ezArrayBase&lt;T, Derived&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  EZ_ADD_DEFAULT_OPERATOR_NOTEQUAL(<span class="keyword">const</span> <a class="code" href="../../dc/d59/classez_array_base.htm">ezArrayBase&lt;T, Derived&gt;</a>&amp;);</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160; </div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../dc/d59/classez_array_base.htm#ab56eb09097a99c105cb05eb8a6fb59f4">operator&lt;</a>(<span class="keyword">const</span> <a class="code" href="../../dc/d59/classez_array_base.htm">ezArrayBase&lt;T, Derived&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160; </div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="preprocessor">#if EZ_DISABLED(EZ_USE_CPP20_OPERATORS)</span></div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../dc/d59/classez_array_base.htm#abad0e3ab22424c246c7d9125d2e57d31">operator==</a>(<span class="keyword">const</span> <a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const T&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;  EZ_ADD_DEFAULT_OPERATOR_NOTEQUAL(<span class="keyword">const</span> <a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const T&gt;</a>&amp;);</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160; </div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../dc/d59/classez_array_base.htm#ab56eb09097a99c105cb05eb8a6fb59f4">operator&lt;</a>(<span class="keyword">const</span> <a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const T&gt;</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160; </div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;  <span class="keyword">const</span> T&amp; <a class="code" href="../../dc/d59/classez_array_base.htm#a91380f3689d557bfa2c8fa3c37e175a8">operator[]</a>(ezUInt32 uiIndex) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160; </div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;  T&amp; <a class="code" href="../../dc/d59/classez_array_base.htm#a91380f3689d557bfa2c8fa3c37e175a8">operator[]</a>(ezUInt32 uiIndex); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160; </div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../dc/d59/classez_array_base.htm#acb1665da46f44fab7a676561cc1d611c">SetCount</a>(ezUInt32 uiCount); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160; </div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../dc/d59/classez_array_base.htm#acb1665da46f44fab7a676561cc1d611c">SetCount</a>(ezUInt32 uiCount, <span class="keyword">const</span> T&amp; fillValue); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160; </div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> = <span class="keywordtype">void</span>&gt;                    <span class="comment">// Template is used to only conditionally compile this function in when it is actually used.</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../dc/d59/classez_array_base.htm#aa42fdcea580029c35b32658bd6d9fd50">SetCountUninitialized</a>(ezUInt32 uiCount); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160; </div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../dc/d59/classez_array_base.htm#ad74465b5a0c6474b1611bbb462f635ef">EnsureCount</a>(ezUInt32 uiCount); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160; </div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  ezUInt32 <a class="code" href="../../dc/d59/classez_array_base.htm#a51ba61fcbd2350ae8850754a41acbaa1">GetCount</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160; </div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../dc/d59/classez_array_base.htm#a35630a870ec53cf3b022653232a31c60">IsEmpty</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160; </div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../dc/d59/classez_array_base.htm#a74099c2d7681df345aedf8cfe24f0bc4">Clear</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160; </div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../dc/d59/classez_array_base.htm#a78392f27dfa795763aebdb43e4a75289">Contains</a>(<span class="keyword">const</span> T&amp; value) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160; </div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../dc/d59/classez_array_base.htm#afabace0a2eabdf350c81203eed1c7984">InsertAt</a>(ezUInt32 uiIndex, <span class="keyword">const</span> T&amp; value); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160; </div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../dc/d59/classez_array_base.htm#afabace0a2eabdf350c81203eed1c7984">InsertAt</a>(ezUInt32 uiIndex, T&amp;&amp; value); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160; </div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../dc/d59/classez_array_base.htm#a581b2d3a780af145c7f6333655807711">InsertRangeAt</a>(ezUInt32 uiIndex, <span class="keyword">const</span> <a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const T&gt;</a>&amp; range); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160; </div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../dc/d59/classez_array_base.htm#af19f26ca6dc39c04caad024913a2f2ec">RemoveAndCopy</a>(<span class="keyword">const</span> T&amp; value); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160; </div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../dc/d59/classez_array_base.htm#aacea05b6f0ec519a663156dd0cc82309">RemoveAndSwap</a>(<span class="keyword">const</span> T&amp; value); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160; </div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../dc/d59/classez_array_base.htm#a29dfedb3f609d9a698f9becb213b697c">RemoveAtAndCopy</a>(ezUInt32 uiIndex, ezUInt32 uiNumElements = 1); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160; </div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../dc/d59/classez_array_base.htm#ae29e85a3ce212cb78d31d032b4225f28">RemoveAtAndSwap</a>(ezUInt32 uiIndex, ezUInt32 uiNumElements = 1); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160; </div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;  ezUInt32 <a class="code" href="../../dc/d59/classez_array_base.htm#ad0b2297aad995f6b5b6c83318f1deec4">IndexOf</a>(<span class="keyword">const</span> T&amp; value, ezUInt32 uiStartIndex = 0) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160; </div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;  ezUInt32 <a class="code" href="../../dc/d59/classez_array_base.htm#a394c5310d1f8bc5907014761f72a4884">LastIndexOf</a>(<span class="keyword">const</span> T&amp; value, ezUInt32 uiStartIndex = ezInvalidIndex) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160; </div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;  T&amp; <a class="code" href="../../dc/d59/classez_array_base.htm#a0f0562f5239ac1e43a81764086de2e25">ExpandAndGetRef</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160; </div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;  T* <a class="code" href="../../dc/d59/classez_array_base.htm#a5e4ed197f4dc1545fddef9e031fe0226">ExpandBy</a>(ezUInt32 uiNumNewItems);</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160; </div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../dc/d59/classez_array_base.htm#abc514bdf8b2de7b5b220ffdbd862e830">PushBack</a>(<span class="keyword">const</span> T&amp; value); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160; </div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../dc/d59/classez_array_base.htm#abc514bdf8b2de7b5b220ffdbd862e830">PushBack</a>(T&amp;&amp; value); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160; </div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../dc/d59/classez_array_base.htm#a6db54827aba606bd753936dd0becbd54">PushBackUnchecked</a>(<span class="keyword">const</span> T&amp; value); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160; </div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../dc/d59/classez_array_base.htm#a6db54827aba606bd753936dd0becbd54">PushBackUnchecked</a>(T&amp;&amp; value); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160; </div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../dc/d59/classez_array_base.htm#ac6223c492c021ef85253fb486dfd6434">PushBackRange</a>(<span class="keyword">const</span> <a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const T&gt;</a>&amp; range); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160; </div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../dc/d59/classez_array_base.htm#aa48856c14d2870761e22ac1e000c32fd">PopBack</a>(ezUInt32 uiCountToRemove = 1); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160; </div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;  T&amp; <a class="code" href="../../dc/d59/classez_array_base.htm#a96092a83818db3f1b5d62a182fd38c8e">PeekBack</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160; </div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;  <span class="keyword">const</span> T&amp; <a class="code" href="../../dc/d59/classez_array_base.htm#a96092a83818db3f1b5d62a182fd38c8e">PeekBack</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160; </div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Comparer&gt;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../dc/d59/classez_array_base.htm#ae111f173c0e5c067d7b5fae92e755c25">Sort</a>(<span class="keyword">const</span> Comparer&amp; comparer); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160; </div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../dc/d59/classez_array_base.htm#ae111f173c0e5c067d7b5fae92e755c25">Sort</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160; </div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;  T* <a class="code" href="../../dc/d59/classez_array_base.htm#ac84ae40d109f1c6473e8349a88717634">GetData</a>();</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160; </div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;  <span class="keyword">const</span> T* <a class="code" href="../../dc/d59/classez_array_base.htm#ac84ae40d109f1c6473e8349a88717634">GetData</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160; </div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;  <a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;T&gt;</a> <a class="code" href="../../dc/d59/classez_array_base.htm#a44e03a9168d3860a6df71b16da2e3e82">GetArrayPtr</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160; </div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;  <a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const T&gt;</a> <a class="code" href="../../dc/d59/classez_array_base.htm#a44e03a9168d3860a6df71b16da2e3e82">GetArrayPtr</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160; </div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;  <a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;typename ezArrayPtr&lt;T&gt;::ByteType</a>&gt; <a class="code" href="../../dc/d59/classez_array_base.htm#a69ce04b9d7424160568357814e4de851">GetByteArrayPtr</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160; </div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;  <a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;typename ezArrayPtr&lt;const T&gt;::ByteType</a>&gt; <a class="code" href="../../dc/d59/classez_array_base.htm#a69ce04b9d7424160568357814e4de851">GetByteArrayPtr</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160; </div>
<div class="line"><a name="l00167"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#a0dae037b4e2abdb7e7376776d2144851">  167</a></span>&#160;  ezUInt32 <a class="code" href="../../dc/d59/classez_array_base.htm#a0dae037b4e2abdb7e7376776d2144851">GetCapacity</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="../../dc/d59/classez_array_base.htm#aab4e32e79a0c17b99c3555d6ae8d0542">m_uiCapacity</a>; }</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160; </div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;  <span class="keyword">using</span> const_iterator = <span class="keyword">const</span> T*;</div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160;  <span class="keyword">using</span> const_reverse_iterator = <a class="code" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">const_reverse_pointer_iterator&lt;T&gt;</a>;</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;  <span class="keyword">using</span> iterator = T*;</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;  <span class="keyword">using</span> reverse_iterator = <a class="code" href="../../d3/df2/structreverse__pointer__iterator.htm">reverse_pointer_iterator&lt;T&gt;</a>;</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160; </div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;<span class="preprocessor">#if EZ_ENABLED(EZ_INTEROP_STL_SPAN)</span></div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;  <span class="keyword">operator</span> std::span&lt;const T&gt;()<span class="keyword"> const</span></div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <span class="keywordflow">return</span> std::span(<a class="code" href="../../dc/d59/classez_array_base.htm#ac84ae40d109f1c6473e8349a88717634">GetData</a>(), <span class="keyword">static_cast&lt;</span><span class="keywordtype">size_t</span><span class="keyword">&gt;</span>(<a class="code" href="../../dc/d59/classez_array_base.htm#a51ba61fcbd2350ae8850754a41acbaa1">GetCount</a>()));</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;  }</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160; </div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;  <span class="keyword">operator</span> std::span&lt;T&gt;()</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;  {</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;    <span class="keywordflow">return</span> std::span(<a class="code" href="../../dc/d59/classez_array_base.htm#ac84ae40d109f1c6473e8349a88717634">GetData</a>(), <span class="keyword">static_cast&lt;</span><span class="keywordtype">size_t</span><span class="keyword">&gt;</span>(<a class="code" href="../../dc/d59/classez_array_base.htm#a51ba61fcbd2350ae8850754a41acbaa1">GetCount</a>()));</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;  }</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160; </div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;  std::span&lt;T&gt; GetSpan()</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;  {</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    <span class="keywordflow">return</span> std::span(<a class="code" href="../../dc/d59/classez_array_base.htm#ac84ae40d109f1c6473e8349a88717634">GetData</a>(), <span class="keyword">static_cast&lt;</span><span class="keywordtype">size_t</span><span class="keyword">&gt;</span>(<a class="code" href="../../dc/d59/classez_array_base.htm#a51ba61fcbd2350ae8850754a41acbaa1">GetCount</a>()));</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;  }</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160; </div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;  std::span&lt;const T&gt; GetSpan()<span class="keyword"> const</span></div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    <span class="keywordflow">return</span> std::span(<a class="code" href="../../dc/d59/classez_array_base.htm#ac84ae40d109f1c6473e8349a88717634">GetData</a>(), <span class="keyword">static_cast&lt;</span><span class="keywordtype">size_t</span><span class="keyword">&gt;</span>(<a class="code" href="../../dc/d59/classez_array_base.htm#a51ba61fcbd2350ae8850754a41acbaa1">GetCount</a>()));</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;  }</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160; </div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;  <span class="keywordtype">void</span> DoSwap(<a class="code" href="../../dc/d59/classez_array_base.htm">ezArrayBase&lt;T, Derived&gt;</a>&amp; other);</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160; </div>
<div class="line"><a name="l00200"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#a11fdadf058dc71d62867f690b832f5f2">  200</a></span>&#160;  T* <a class="code" href="../../dc/d59/classez_array_base.htm#a11fdadf058dc71d62867f690b832f5f2">m_pElements</a> = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160; </div>
<div class="line"><a name="l00203"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#a1d6fd346fa2effc9fe7a5617f616ac82">  203</a></span>&#160;  ezUInt32 <a class="code" href="../../dc/d59/classez_array_base.htm#a1d6fd346fa2effc9fe7a5617f616ac82">m_uiCount</a> = 0;</div>
<div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160; </div>
<div class="line"><a name="l00206"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#aab4e32e79a0c17b99c3555d6ae8d0542">  206</a></span>&#160;  ezUInt32 <a class="code" href="../../dc/d59/classez_array_base.htm#aab4e32e79a0c17b99c3555d6ae8d0542">m_uiCapacity</a> = 0;</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;};</div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160; </div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;<span class="keyword">typename</span> ezArrayBase&lt;T, Derived&gt;::iterator begin(<a class="code" href="../../dc/d59/classez_array_base.htm">ezArrayBase&lt;T, Derived&gt;</a>&amp; ref_container)</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;{</div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;  <span class="keywordflow">return</span> ref_container.<a class="code" href="../../dc/d59/classez_array_base.htm#ac84ae40d109f1c6473e8349a88717634">GetData</a>();</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;}</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160; </div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;<span class="keyword">typename</span> ezArrayBase&lt;T, Derived&gt;::const_iterator begin(<span class="keyword">const</span> <a class="code" href="../../dc/d59/classez_array_base.htm">ezArrayBase&lt;T, Derived&gt;</a>&amp; container)</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;{</div>
<div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;  <span class="keywordflow">return</span> container.<a class="code" href="../../dc/d59/classez_array_base.htm#ac84ae40d109f1c6473e8349a88717634">GetData</a>();</div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;}</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160; </div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="keyword">typename</span> ezArrayBase&lt;T, Derived&gt;::const_iterator cbegin(<span class="keyword">const</span> <a class="code" href="../../dc/d59/classez_array_base.htm">ezArrayBase&lt;T, Derived&gt;</a>&amp; container)</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;{</div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;  <span class="keywordflow">return</span> container.<a class="code" href="../../dc/d59/classez_array_base.htm#ac84ae40d109f1c6473e8349a88717634">GetData</a>();</div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;}</div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160; </div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;<span class="keyword">typename</span> <a class="code" href="../../d3/df2/structreverse__pointer__iterator.htm">ezArrayBase&lt;T, Derived&gt;::reverse_iterator</a> rbegin(<a class="code" href="../../dc/d59/classez_array_base.htm">ezArrayBase&lt;T, Derived&gt;</a>&amp; ref_container)</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;{</div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">typename</span> <a class="code" href="../../d3/df2/structreverse__pointer__iterator.htm">ezArrayBase&lt;T, Derived&gt;::reverse_iterator</a>(ref_container.<a class="code" href="../../dc/d59/classez_array_base.htm#ac84ae40d109f1c6473e8349a88717634">GetData</a>() + ref_container.<a class="code" href="../../dc/d59/classez_array_base.htm#a51ba61fcbd2350ae8850754a41acbaa1">GetCount</a>() - 1);</div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;}</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160; </div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="keyword">typename</span> <a class="code" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">ezArrayBase&lt;T, Derived&gt;::const_reverse_iterator</a> rbegin(<span class="keyword">const</span> <a class="code" href="../../dc/d59/classez_array_base.htm">ezArrayBase&lt;T, Derived&gt;</a>&amp; container)</div>
<div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;{</div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">typename</span> <a class="code" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">ezArrayBase&lt;T, Derived&gt;::const_reverse_iterator</a>(container.<a class="code" href="../../dc/d59/classez_array_base.htm#ac84ae40d109f1c6473e8349a88717634">GetData</a>() + container.<a class="code" href="../../dc/d59/classez_array_base.htm#a51ba61fcbd2350ae8850754a41acbaa1">GetCount</a>() - 1);</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;}</div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160; </div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="keyword">typename</span> <a class="code" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">ezArrayBase&lt;T, Derived&gt;::const_reverse_iterator</a> crbegin(<span class="keyword">const</span> <a class="code" href="../../dc/d59/classez_array_base.htm">ezArrayBase&lt;T, Derived&gt;</a>&amp; container)</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;{</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">typename</span> <a class="code" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">ezArrayBase&lt;T, Derived&gt;::const_reverse_iterator</a>(container.<a class="code" href="../../dc/d59/classez_array_base.htm#ac84ae40d109f1c6473e8349a88717634">GetData</a>() + container.<a class="code" href="../../dc/d59/classez_array_base.htm#a51ba61fcbd2350ae8850754a41acbaa1">GetCount</a>() - 1);</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;}</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160; </div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;<span class="keyword">typename</span> ezArrayBase&lt;T, Derived&gt;::iterator end(<a class="code" href="../../dc/d59/classez_array_base.htm">ezArrayBase&lt;T, Derived&gt;</a>&amp; ref_container)</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;{</div>
<div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;  <span class="keywordflow">return</span> ref_container.<a class="code" href="../../dc/d59/classez_array_base.htm#ac84ae40d109f1c6473e8349a88717634">GetData</a>() + ref_container.<a class="code" href="../../dc/d59/classez_array_base.htm#a51ba61fcbd2350ae8850754a41acbaa1">GetCount</a>();</div>
<div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;}</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160; </div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="keyword">typename</span> ezArrayBase&lt;T, Derived&gt;::const_iterator end(<span class="keyword">const</span> <a class="code" href="../../dc/d59/classez_array_base.htm">ezArrayBase&lt;T, Derived&gt;</a>&amp; container)</div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;{</div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;  <span class="keywordflow">return</span> container.<a class="code" href="../../dc/d59/classez_array_base.htm#ac84ae40d109f1c6473e8349a88717634">GetData</a>() + container.<a class="code" href="../../dc/d59/classez_array_base.htm#a51ba61fcbd2350ae8850754a41acbaa1">GetCount</a>();</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;}</div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160; </div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="keyword">typename</span> ezArrayBase&lt;T, Derived&gt;::const_iterator cend(<span class="keyword">const</span> <a class="code" href="../../dc/d59/classez_array_base.htm">ezArrayBase&lt;T, Derived&gt;</a>&amp; container)</div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;{</div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160;  <span class="keywordflow">return</span> container.<a class="code" href="../../dc/d59/classez_array_base.htm#ac84ae40d109f1c6473e8349a88717634">GetData</a>() + container.<a class="code" href="../../dc/d59/classez_array_base.htm#a51ba61fcbd2350ae8850754a41acbaa1">GetCount</a>();</div>
<div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;}</div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160; </div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="keyword">typename</span> <a class="code" href="../../d3/df2/structreverse__pointer__iterator.htm">ezArrayBase&lt;T, Derived&gt;::reverse_iterator</a> rend(<a class="code" href="../../dc/d59/classez_array_base.htm">ezArrayBase&lt;T, Derived&gt;</a>&amp; ref_container)</div>
<div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;{</div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">typename</span> <a class="code" href="../../d3/df2/structreverse__pointer__iterator.htm">ezArrayBase&lt;T, Derived&gt;::reverse_iterator</a>(ref_container.<a class="code" href="../../dc/d59/classez_array_base.htm#ac84ae40d109f1c6473e8349a88717634">GetData</a>() - 1);</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;}</div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160; </div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;<span class="keyword">typename</span> <a class="code" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">ezArrayBase&lt;T, Derived&gt;::const_reverse_iterator</a> rend(<span class="keyword">const</span> <a class="code" href="../../dc/d59/classez_array_base.htm">ezArrayBase&lt;T, Derived&gt;</a>&amp; container)</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;{</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">typename</span> <a class="code" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">ezArrayBase&lt;T, Derived&gt;::const_reverse_iterator</a>(container.<a class="code" href="../../dc/d59/classez_array_base.htm#ac84ae40d109f1c6473e8349a88717634">GetData</a>() - 1);</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;}</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160; </div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="keyword">typename</span> <a class="code" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">ezArrayBase&lt;T, Derived&gt;::const_reverse_iterator</a> crend(<span class="keyword">const</span> <a class="code" href="../../dc/d59/classez_array_base.htm">ezArrayBase&lt;T, Derived&gt;</a>&amp; container)</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;{</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">typename</span> <a class="code" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">ezArrayBase&lt;T, Derived&gt;::const_reverse_iterator</a>(container.<a class="code" href="../../dc/d59/classez_array_base.htm#ac84ae40d109f1c6473e8349a88717634">GetData</a>() - 1);</div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;}</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160; </div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="preprocessor">#include &lt;Foundation/Containers/Implementation/ArrayBase_inl.h&gt;</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassez_array_base_htm_a11fdadf058dc71d62867f690b832f5f2"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a11fdadf058dc71d62867f690b832f5f2">ezArrayBase::m_pElements</a></div><div class="ttdeci">T * m_pElements</div><div class="ttdoc">Element-type access to m_Data.</div><div class="ttdef"><b>Definition:</b> ArrayBase.h:200</div></div>
<div class="ttc" id="aclassez_array_base_htm_ac84ae40d109f1c6473e8349a88717634"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#ac84ae40d109f1c6473e8349a88717634">ezArrayBase::GetData</a></div><div class="ttdeci">T * GetData()</div><div class="ttdoc">Returns a pointer to the array data, or nullptr if the array is empty.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:423</div></div>
<div class="ttc" id="aclassez_array_base_htm_afabace0a2eabdf350c81203eed1c7984"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#afabace0a2eabdf350c81203eed1c7984">ezArrayBase::InsertAt</a></div><div class="ttdeci">void InsertAt(ezUInt32 uiIndex, const T &amp;value)</div><div class="ttdoc">Inserts value at index by shifting all following elements.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:197</div></div>
<div class="ttc" id="aclassez_array_base_htm_a394c5310d1f8bc5907014761f72a4884"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a394c5310d1f8bc5907014761f72a4884">ezArrayBase::LastIndexOf</a></div><div class="ttdeci">ezUInt32 LastIndexOf(const T &amp;value, ezUInt32 uiStartIndex=ezInvalidIndex) const</div><div class="ttdoc">Searches for the last occurrence of the given value and returns its index or ezInvalidIndex if not fo...</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:297</div></div>
<div class="ttc" id="aclassez_array_base_htm_a0dae037b4e2abdb7e7376776d2144851"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a0dae037b4e2abdb7e7376776d2144851">ezArrayBase::GetCapacity</a></div><div class="ttdeci">ezUInt32 GetCapacity() const</div><div class="ttdoc">Returns the reserved number of elements that the array can hold without reallocating.</div><div class="ttdef"><b>Definition:</b> ArrayBase.h:167</div></div>
<div class="ttc" id="aclassez_array_base_htm_abc514bdf8b2de7b5b220ffdbd862e830"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#abc514bdf8b2de7b5b220ffdbd862e830">ezArrayBase::PushBack</a></div><div class="ttdeci">void PushBack(const T &amp;value)</div><div class="ttdoc">Pushes value at the end of the array.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:333</div></div>
<div class="ttc" id="aclassez_array_base_htm_a44e03a9168d3860a6df71b16da2e3e82"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a44e03a9168d3860a6df71b16da2e3e82">ezArrayBase::GetArrayPtr</a></div><div class="ttdeci">ezArrayPtr&lt; T &gt; GetArrayPtr()</div><div class="ttdoc">Returns an array pointer to the array data, or an empty array pointer if the array is empty.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:441</div></div>
<div class="ttc" id="aclassez_array_ptr_htm"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a></div><div class="ttdoc">This class encapsulates an array and it's size. It is recommended to use this class instead of plain ...</div><div class="ttdef"><b>Definition:</b> ArrayPtr.h:40</div></div>
<div class="ttc" id="aclassez_array_base_htm_ad74465b5a0c6474b1611bbb462f635ef"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#ad74465b5a0c6474b1611bbb462f635ef">ezArrayBase::EnsureCount</a></div><div class="ttdeci">void EnsureCount(ezUInt32 uiCount)</div><div class="ttdoc">Ensures the container has at least uiCount elements. Ie. calls SetCount() if the container has fewer ...</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:144</div></div>
<div class="ttc" id="aclassez_array_base_htm_a78392f27dfa795763aebdb43e4a75289"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a78392f27dfa795763aebdb43e4a75289">ezArrayBase::Contains</a></div><div class="ttdeci">bool Contains(const T &amp;value) const</div><div class="ttdoc">Checks whether the given value can be found in the array. O(n) complexity.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:191</div></div>
<div class="ttc" id="aclassez_array_base_htm_a5e4ed197f4dc1545fddef9e031fe0226"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a5e4ed197f4dc1545fddef9e031fe0226">ezArrayBase::ExpandBy</a></div><div class="ttdeci">T * ExpandBy(ezUInt32 uiNumNewItems)</div><div class="ttdoc">Expands the array by N new items and returns a pointer to the first new one.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:326</div></div>
<div class="ttc" id="aclassez_array_base_htm_a69ce04b9d7424160568357814e4de851"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a69ce04b9d7424160568357814e4de851">ezArrayBase::GetByteArrayPtr</a></div><div class="ttdeci">ezArrayPtr&lt; typename ezArrayPtr&lt; T &gt;::ByteType &gt; GetByteArrayPtr()</div><div class="ttdoc">Returns a byte array pointer to the array data, or an empty array pointer if the array is empty.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:453</div></div>
<div class="ttc" id="astructconst__reverse__pointer__iterator_htm"><div class="ttname"><a href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">const_reverse_pointer_iterator</a></div><div class="ttdoc">Base class for Pointer like reverse iterators.</div><div class="ttdef"><b>Definition:</b> ArrayIterator.h:151</div></div>
<div class="ttc" id="aclassez_array_base_htm_aa42fdcea580029c35b32658bd6d9fd50"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#aa42fdcea580029c35b32658bd6d9fd50">ezArrayBase::SetCountUninitialized</a></div><div class="ttdeci">void SetCountUninitialized(ezUInt32 uiCount)</div><div class="ttdoc">Resizes the array to have exactly uiCount elements. Extra elements might be uninitialized.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:155</div></div>
<div class="ttc" id="aclassez_array_base_htm_aab4e32e79a0c17b99c3555d6ae8d0542"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#aab4e32e79a0c17b99c3555d6ae8d0542">ezArrayBase::m_uiCapacity</a></div><div class="ttdeci">ezUInt32 m_uiCapacity</div><div class="ttdoc">The number of elements which can be stored in the array without re-allocating.</div><div class="ttdef"><b>Definition:</b> ArrayBase.h:206</div></div>
<div class="ttc" id="aclassez_array_base_htm_a35630a870ec53cf3b022653232a31c60"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a35630a870ec53cf3b022653232a31c60">ezArrayBase::IsEmpty</a></div><div class="ttdeci">bool IsEmpty() const</div><div class="ttdoc">Returns true, if the array does not contain any elements.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:178</div></div>
<div class="ttc" id="aclassez_array_base_htm_a51ba61fcbd2350ae8850754a41acbaa1"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a51ba61fcbd2350ae8850754a41acbaa1">ezArrayBase::GetCount</a></div><div class="ttdeci">ezUInt32 GetCount() const</div><div class="ttdoc">Returns the number of active elements in the array.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:172</div></div>
<div class="ttc" id="aclassez_array_base_htm_ac6223c492c021ef85253fb486dfd6434"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#ac6223c492c021ef85253fb486dfd6434">ezArrayBase::PushBackRange</a></div><div class="ttdeci">void PushBackRange(const ezArrayPtr&lt; const T &gt; &amp;range)</div><div class="ttdoc">Pushes all elements in range at the end of the array. Increases the capacity if necessary.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:369</div></div>
<div class="ttc" id="aclassez_array_base_htm_a581b2d3a780af145c7f6333655807711"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a581b2d3a780af145c7f6333655807711">ezArrayBase::InsertRangeAt</a></div><div class="ttdeci">void InsertRangeAt(ezUInt32 uiIndex, const ezArrayPtr&lt; const T &gt; &amp;range)</div><div class="ttdoc">Inserts all elements in the range starting at the given index, shifting the elements after the index.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:219</div></div>
<div class="ttc" id="aclassez_array_base_htm_ad0b2297aad995f6b5b6c83318f1deec4"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#ad0b2297aad995f6b5b6c83318f1deec4">ezArrayBase::IndexOf</a></div><div class="ttdeci">ezUInt32 IndexOf(const T &amp;value, ezUInt32 uiStartIndex=0) const</div><div class="ttdoc">Searches for the first occurrence of the given value and returns its index or ezInvalidIndex if not f...</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:284</div></div>
<div class="ttc" id="aclassez_array_base_htm_aa48856c14d2870761e22ac1e000c32fd"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#aa48856c14d2870761e22ac1e000c32fd">ezArrayBase::PopBack</a></div><div class="ttdeci">void PopBack(ezUInt32 uiCountToRemove=1)</div><div class="ttdoc">Removes count elements from the end of the array.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:379</div></div>
<div class="ttc" id="aclassez_array_base_htm_a0f03847a20991108666c982066d651bc"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a0f03847a20991108666c982066d651bc">ezArrayBase::ezArrayBase</a></div><div class="ttdeci">ezArrayBase()</div><div class="ttdoc">Constructor.</div></div>
<div class="ttc" id="aclassez_array_base_htm_abad0e3ab22424c246c7d9125d2e57d31"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#abad0e3ab22424c246c7d9125d2e57d31">ezArrayBase::operator==</a></div><div class="ttdeci">bool operator==(const ezArrayBase&lt; T, Derived &gt; &amp;rhs) const</div><div class="ttdoc">Compares this array to another contiguous array type.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:60</div></div>
<div class="ttc" id="aclassez_array_base_htm_a96092a83818db3f1b5d62a182fd38c8e"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a96092a83818db3f1b5d62a182fd38c8e">ezArrayBase::PeekBack</a></div><div class="ttdeci">T &amp; PeekBack()</div><div class="ttdoc">Returns the last element of the array.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:388</div></div>
<div class="ttc" id="aclassez_array_base_htm"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm">ezArrayBase</a></div><div class="ttdoc">Base class for all array containers. Implements all the basic functionality that only requires a poin...</div><div class="ttdef"><b>Definition:</b> ArrayBase.h:18</div></div>
<div class="ttc" id="aclassez_array_base_htm_a6db54827aba606bd753936dd0becbd54"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a6db54827aba606bd753936dd0becbd54">ezArrayBase::PushBackUnchecked</a></div><div class="ttdeci">void PushBackUnchecked(const T &amp;value)</div><div class="ttdoc">Pushes value at the end of the array. Does NOT ensure capacity.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:351</div></div>
<div class="ttc" id="astructreverse__pointer__iterator_htm"><div class="ttname"><a href="../../d3/df2/structreverse__pointer__iterator.htm">reverse_pointer_iterator</a></div><div class="ttdoc">Non-Const class for Pointer like reverse iterators.</div><div class="ttdef"><b>Definition:</b> ArrayIterator.h:215</div></div>
<div class="ttc" id="aclassez_array_base_htm_ae111f173c0e5c067d7b5fae92e755c25"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#ae111f173c0e5c067d7b5fae92e755c25">ezArrayBase::Sort</a></div><div class="ttdeci">void Sort()</div><div class="ttdoc">Sort with default comparer.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:413</div></div>
<div class="ttc" id="aclassez_array_base_htm_a0f0562f5239ac1e43a81764086de2e25"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a0f0562f5239ac1e43a81764086de2e25">ezArrayBase::ExpandAndGetRef</a></div><div class="ttdeci">T &amp; ExpandAndGetRef()</div><div class="ttdoc">Grows the array by one element and returns a reference to the newly created element.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:310</div></div>
<div class="ttc" id="aclassez_array_base_htm_a1d6fd346fa2effc9fe7a5617f616ac82"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a1d6fd346fa2effc9fe7a5617f616ac82">ezArrayBase::m_uiCount</a></div><div class="ttdeci">ezUInt32 m_uiCount</div><div class="ttdoc">The number of elements used from the array.</div><div class="ttdef"><b>Definition:</b> ArrayBase.h:203</div></div>
<div class="ttc" id="aclassez_array_base_htm_af19f26ca6dc39c04caad024913a2f2ec"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#af19f26ca6dc39c04caad024913a2f2ec">ezArrayBase::RemoveAndCopy</a></div><div class="ttdeci">bool RemoveAndCopy(const T &amp;value)</div><div class="ttdoc">Removes the first occurrence of value and fills the gap by shifting all following elements.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:229</div></div>
<div class="ttc" id="aclassez_array_base_htm_ae29e85a3ce212cb78d31d032b4225f28"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#ae29e85a3ce212cb78d31d032b4225f28">ezArrayBase::RemoveAtAndSwap</a></div><div class="ttdeci">void RemoveAtAndSwap(ezUInt32 uiIndex, ezUInt32 uiNumElements=1)</div><div class="ttdoc">Removes the element at index and fills the gap by swapping in the last element.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:264</div></div>
<div class="ttc" id="aclassez_array_base_htm_a74099c2d7681df345aedf8cfe24f0bc4"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a74099c2d7681df345aedf8cfe24f0bc4">ezArrayBase::Clear</a></div><div class="ttdeci">void Clear()</div><div class="ttdoc">Clears the array.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:184</div></div>
<div class="ttc" id="aclassez_array_base_htm_aacea05b6f0ec519a663156dd0cc82309"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#aacea05b6f0ec519a663156dd0cc82309">ezArrayBase::RemoveAndSwap</a></div><div class="ttdeci">bool RemoveAndSwap(const T &amp;value)</div><div class="ttdoc">Removes the first occurrence of value and fills the gap by swapping in the last element.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:241</div></div>
<div class="ttc" id="aclassez_array_base_htm_a8001e2991c2675e975efca088795fa6a"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a8001e2991c2675e975efca088795fa6a">ezArrayBase::~ezArrayBase</a></div><div class="ttdeci">~ezArrayBase()</div><div class="ttdoc">Destructor.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:6</div></div>
<div class="ttc" id="aclassez_array_base_htm_a91380f3689d557bfa2c8fa3c37e175a8"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a91380f3689d557bfa2c8fa3c37e175a8">ezArrayBase::operator[]</a></div><div class="ttdeci">const T &amp; operator[](ezUInt32 uiIndex) const</div><div class="ttdoc">Returns the element at the given index. Does bounds checks in debug builds.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:92</div></div>
<div class="ttc" id="aclassez_array_base_htm_ab56eb09097a99c105cb05eb8a6fb59f4"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#ab56eb09097a99c105cb05eb8a6fb59f4">ezArrayBase::operator&lt;</a></div><div class="ttdeci">bool operator&lt;(const ezArrayBase&lt; T, Derived &gt; &amp;rhs) const</div><div class="ttdoc">Compares this array to another contiguous array type.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:69</div></div>
<div class="ttc" id="aclassez_array_base_htm_a6da9ac91524c489b32ed8e390c52b402"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a6da9ac91524c489b32ed8e390c52b402">ezArrayBase::operator=</a></div><div class="ttdeci">void operator=(const ezArrayPtr&lt; const T &gt; &amp;rhs)</div><div class="ttdoc">Copies the data from some other contiguous array into this one.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:13</div></div>
<div class="ttc" id="aclassez_array_base_htm_acb1665da46f44fab7a676561cc1d611c"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#acb1665da46f44fab7a676561cc1d611c">ezArrayBase::SetCount</a></div><div class="ttdeci">void SetCount(ezUInt32 uiCount)</div><div class="ttdoc">Resizes the array to have exactly uiCount elements. Default constructs extra elements if the array is...</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:106</div></div>
<div class="ttc" id="aclassez_array_base_htm_a29dfedb3f609d9a698f9becb213b697c"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a29dfedb3f609d9a698f9becb213b697c">ezArrayBase::RemoveAtAndCopy</a></div><div class="ttdeci">void RemoveAtAndCopy(ezUInt32 uiIndex, ezUInt32 uiNumElements=1)</div><div class="ttdoc">Removes the element at index and fills the gap by shifting all following elements.</div><div class="ttdef"><b>Definition:</b> ArrayBase_inl.h:253</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_6b567e6755824bd0b8ffd754b9d67ac0.htm">Containers</a></li><li class="navelem"><b>ArrayBase.h</b></li>
    <li class="footer">Generated on Mon Mar 3 2025 17:23:39 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
