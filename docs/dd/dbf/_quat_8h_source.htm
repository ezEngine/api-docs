<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: Code/Engine/Foundation/Math/Quat.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 21.6</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search','.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('dd/dbf/_quat_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">Quat.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;Foundation/Math/Vec3.h&gt;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160; </div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00018"></a><span class="lineno"><a class="line" href="../../de/d15/classez_quat_template.htm">   18</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../de/d15/classez_quat_template.htm">ezQuatTemplate</a></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;{</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;  <span class="comment">// Means this object can be copied using memcpy instead of copy construction.</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;  EZ_DECLARE_POD_TYPE();</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160; </div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;  <span class="keyword">using</span> ComponentType = Type;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160; </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;  <span class="comment">// *** Data ***</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  <a class="code" href="../../d6/dbd/structez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> v;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;  Type w;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160; </div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  <span class="comment">// *** Constructors ***</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;  <a class="code" href="../../de/d15/classez_quat_template.htm">ezQuatTemplate</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160; </div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;  <a class="code" href="../../de/d15/classez_quat_template.htm">ezQuatTemplate</a>(Type X, Type Y, Type Z, Type W); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160; </div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="preprocessor">#if EZ_ENABLED(EZ_MATH_CHECK_FOR_NAN)</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;  <span class="keywordtype">void</span> AssertNotNaN()<span class="keyword"> const</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">  </span>{</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    EZ_ASSERT_ALWAYS(!<a class="code" href="../../de/d15/classez_quat_template.htm#a38ff450723058f4d3ff03651a9454fd3">IsNaN</a>(), <span class="stringliteral">&quot;This object contains NaN values. This can happen when you forgot to initialize it before using it. Please check that &quot;</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;                               <span class="stringliteral">&quot;all code-paths properly initialize this object.&quot;</span>);</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  }</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160; </div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;  <span class="keyword">static</span> <span class="keyword">const</span> <a class="code" href="../../de/d15/classez_quat_template.htm">ezQuatTemplate&lt;Type&gt;</a> <a class="code" href="../../de/d15/classez_quat_template.htm#aae8fd9ec3d9dcb49d9c688ec2c565a6b">IdentityQuaternion</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160; </div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;  <span class="comment">// *** Functions to create a quaternion ***</span></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../de/d15/classez_quat_template.htm#afa71082d9221e638fa1fbf3f1f4da3c9">SetIdentity</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160; </div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../de/d15/classez_quat_template.htm#aa09ee1dac045f013c5edb97589002c44">SetElements</a>(Type X, Type Y, Type Z, Type W); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160; </div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../de/d15/classez_quat_template.htm#af0494cf29e9d89bf1e891ccdcee3a987">SetFromAxisAndAngle</a>(<span class="keyword">const</span> <a class="code" href="../../d6/dbd/structez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vRotationAxis, <a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a> angle); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160; </div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../de/d15/classez_quat_template.htm#a10aebc74018c75e0bc56644553ebd308">SetShortestRotation</a>(<span class="keyword">const</span> <a class="code" href="../../d6/dbd/structez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vDirFrom, <span class="keyword">const</span> <a class="code" href="../../d6/dbd/structez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vDirTo); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160; </div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../de/d15/classez_quat_template.htm#a362594ad5e5b9854564b247044047cf5">SetFromMat3</a>(<span class="keyword">const</span> <a class="code" href="../../db/daf/classez_mat3_template.htm">ezMat3Template&lt;Type&gt;</a>&amp; m); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160; </div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../de/d15/classez_quat_template.htm#a228a95eff6e913b8f402708c288efd31">SetSlerp</a>(<span class="keyword">const</span> <a class="code" href="../../de/d15/classez_quat_template.htm">ezQuatTemplate</a>&amp; qFrom, <span class="keyword">const</span> <a class="code" href="../../de/d15/classez_quat_template.htm">ezQuatTemplate</a>&amp; qTo, Type t); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160; </div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;  <span class="comment">// *** Common Functions ***</span></div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../de/d15/classez_quat_template.htm#a4f36bda405ca0b23e5b24f7b4650d923">Normalize</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160; </div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;  <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code" href="../../de/d15/classez_quat_template.htm#a9841dc2d8912ae12ed7fa1de01582366">GetRotationAxisAndAngle</a>(<a class="code" href="../../d6/dbd/structez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vAxis, <a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a>&amp; angle, <span class="keywordtype">float</span> fEpsilon = ezMath::DefaultEpsilon&lt;Type&gt;()) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160; </div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../db/daf/classez_mat3_template.htm">ezMat3Template&lt;Type&gt;</a> <a class="code" href="../../de/d15/classez_quat_template.htm#a6643b21b3f4055b8977927705080ecda">GetAsMat3</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160; </div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d7/d9b/classez_mat4_template.htm">ezMat4Template&lt;Type&gt;</a> <a class="code" href="../../de/d15/classez_quat_template.htm#a96023dc43f9d97bfc70e7dfc174b0f6f">GetAsMat4</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160; </div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../de/d15/classez_quat_template.htm#a98a9dacef7a763f9d73f993a4fba7014">IsValid</a>(Type fEpsilon = ezMath::DefaultEpsilon&lt;Type&gt;()) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160; </div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../de/d15/classez_quat_template.htm#a38ff450723058f4d3ff03651a9454fd3">IsNaN</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160; </div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;  <span class="keywordtype">bool</span> <a class="code" href="../../de/d15/classez_quat_template.htm#ab123a28f131b1c55564be6d1c8e5ccba">IsEqualRotation</a>(<span class="keyword">const</span> <a class="code" href="../../de/d15/classez_quat_template.htm">ezQuatTemplate</a>&amp; qOther, <span class="keywordtype">float</span> fEpsilon) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160; </div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;  <span class="comment">// *** Operators ***</span></div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../de/d15/classez_quat_template.htm">ezQuatTemplate</a> <a class="code" href="../../de/d15/classez_quat_template.htm#a11362af76e4a27670f9c46e7c6cab558">operator-</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160; </div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;  <span class="comment">// *** Common Quaternion operations ***</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;  Type <a class="code" href="../../de/d15/classez_quat_template.htm#af88ebc7b874c59247f8373809dbc3660">Dot</a>(<span class="keyword">const</span> <a class="code" href="../../de/d15/classez_quat_template.htm">ezQuatTemplate</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160; </div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;  <span class="comment">// *** Euler Angle Conversions ***</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../de/d15/classez_quat_template.htm#a5ef43d275286d8cc7aacde969310ec42">GetAsEulerAngles</a>(<a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a>&amp; out_x, <a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a>&amp; out_y, <a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a>&amp; out_z) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160; </div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;  <span class="keywordtype">void</span> <a class="code" href="../../de/d15/classez_quat_template.htm#aec6aed93014f09a7162808111f9872c0">SetFromEulerAngles</a>(<span class="keyword">const</span> <a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a>&amp; x, <span class="keyword">const</span> <a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a>&amp; y, <span class="keyword">const</span> <a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a>&amp; z);</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;};</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160; </div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="keyword">const</span> <a class="code" href="../../d6/dbd/structez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> operator*(<span class="keyword">const</span> <a class="code" href="../../de/d15/classez_quat_template.htm">ezQuatTemplate&lt;Type&gt;</a>&amp; q, <span class="keyword">const</span> <a class="code" href="../../d6/dbd/structez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; v); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160; </div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="keyword">const</span> <a class="code" href="../../de/d15/classez_quat_template.htm">ezQuatTemplate&lt;Type&gt;</a> operator*(<span class="keyword">const</span> <a class="code" href="../../de/d15/classez_quat_template.htm">ezQuatTemplate&lt;Type&gt;</a>&amp; q1, <span class="keyword">const</span> <a class="code" href="../../de/d15/classez_quat_template.htm">ezQuatTemplate&lt;Type&gt;</a>&amp; q2); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160; </div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="keywordtype">bool</span> operator==(<span class="keyword">const</span> <a class="code" href="../../de/d15/classez_quat_template.htm">ezQuatTemplate&lt;Type&gt;</a>&amp; q1, <span class="keyword">const</span> <a class="code" href="../../de/d15/classez_quat_template.htm">ezQuatTemplate&lt;Type&gt;</a>&amp; q2); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160; </div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="keywordtype">bool</span> operator!=(<span class="keyword">const</span> <a class="code" href="../../de/d15/classez_quat_template.htm">ezQuatTemplate&lt;Type&gt;</a>&amp; q1, <span class="keyword">const</span> <a class="code" href="../../de/d15/classez_quat_template.htm">ezQuatTemplate&lt;Type&gt;</a>&amp; q2); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160; </div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;<span class="preprocessor">#include &lt;Foundation/Math/Implementation/Quat_inl.h&gt;</span></div>
<div class="ttc" id="aclassez_angle_htm"><div class="ttname"><a href="../../db/d6f/classez_angle.htm">ezAngle</a></div><div class="ttdoc">Float wrapper struct for a safe usage and conversions of angles.</div><div class="ttdef"><b>Definition:</b> Angle.h:10</div></div>
<div class="ttc" id="aclassez_mat3_template_htm"><div class="ttname"><a href="../../db/daf/classez_mat3_template.htm">ezMat3Template</a></div><div class="ttdoc">A 3x3 component matrix class.</div><div class="ttdef"><b>Definition:</b> Mat3.h:9</div></div>
<div class="ttc" id="aclassez_mat4_template_htm"><div class="ttname"><a href="../../d7/d9b/classez_mat4_template.htm">ezMat4Template</a></div><div class="ttdoc">A 4x4 component matrix class.</div><div class="ttdef"><b>Definition:</b> Mat4.h:11</div></div>
<div class="ttc" id="aclassez_quat_template_htm"><div class="ttname"><a href="../../de/d15/classez_quat_template.htm">ezQuatTemplate</a></div><div class="ttdoc">Quaternions can be used to represent rotations in 3D space.</div><div class="ttdef"><b>Definition:</b> Quat.h:19</div></div>
<div class="ttc" id="aclassez_quat_template_htm_a10aebc74018c75e0bc56644553ebd308"><div class="ttname"><a href="../../de/d15/classez_quat_template.htm#a10aebc74018c75e0bc56644553ebd308">ezQuatTemplate::SetShortestRotation</a></div><div class="ttdeci">void SetShortestRotation(const ezVec3Template&lt; Type &gt; &amp;vDirFrom, const ezVec3Template&lt; Type &gt; &amp;vDirTo)</div><div class="ttdoc">Creates a quaternion, that rotates through the shortest arc from &quot;vDirFrom&quot; to &quot;vDirTo&quot;.</div><div class="ttdef"><b>Definition:</b> Quat_inl.h:294</div></div>
<div class="ttc" id="aclassez_quat_template_htm_a11362af76e4a27670f9c46e7c6cab558"><div class="ttname"><a href="../../de/d15/classez_quat_template.htm#a11362af76e4a27670f9c46e7c6cab558">ezQuatTemplate::operator-</a></div><div class="ttdeci">const ezQuatTemplate operator-() const</div><div class="ttdoc">Returns a Quaternion that represents the negative / inverted rotation.</div><div class="ttdef"><b>Definition:</b> Quat_inl.h:88</div></div>
<div class="ttc" id="aclassez_quat_template_htm_a228a95eff6e913b8f402708c288efd31"><div class="ttname"><a href="../../de/d15/classez_quat_template.htm#a228a95eff6e913b8f402708c288efd31">ezQuatTemplate::SetSlerp</a></div><div class="ttdeci">void SetSlerp(const ezQuatTemplate &amp;qFrom, const ezQuatTemplate &amp;qTo, Type t)</div><div class="ttdoc">Sets this quaternion to be the spherical linear interpolation of the other two.</div><div class="ttdef"><b>Definition:</b> Quat_inl.h:333</div></div>
<div class="ttc" id="aclassez_quat_template_htm_a362594ad5e5b9854564b247044047cf5"><div class="ttname"><a href="../../de/d15/classez_quat_template.htm#a362594ad5e5b9854564b247044047cf5">ezQuatTemplate::SetFromMat3</a></div><div class="ttdeci">void SetFromMat3(const ezMat3Template&lt; Type &gt; &amp;m)</div><div class="ttdoc">Creates a quaternion from the given matrix.</div><div class="ttdef"><b>Definition:</b> Quat_inl.h:238</div></div>
<div class="ttc" id="aclassez_quat_template_htm_a38ff450723058f4d3ff03651a9454fd3"><div class="ttname"><a href="../../de/d15/classez_quat_template.htm#a38ff450723058f4d3ff03651a9454fd3">ezQuatTemplate::IsNaN</a></div><div class="ttdeci">bool IsNaN() const</div><div class="ttdoc">Checks whether any component is NaN.</div><div class="ttdef"><b>Definition:</b> Quat_inl.h:136</div></div>
<div class="ttc" id="aclassez_quat_template_htm_a4f36bda405ca0b23e5b24f7b4650d923"><div class="ttname"><a href="../../de/d15/classez_quat_template.htm#a4f36bda405ca0b23e5b24f7b4650d923">ezQuatTemplate::Normalize</a></div><div class="ttdeci">void Normalize()</div><div class="ttdoc">Normalizes the quaternion to unit length. ALL rotation-quaternions should be normalized at all times ...</div><div class="ttdef"><b>Definition:</b> Quat_inl.h:53</div></div>
<div class="ttc" id="aclassez_quat_template_htm_a5ef43d275286d8cc7aacde969310ec42"><div class="ttname"><a href="../../de/d15/classez_quat_template.htm#a5ef43d275286d8cc7aacde969310ec42">ezQuatTemplate::GetAsEulerAngles</a></div><div class="ttdeci">void GetAsEulerAngles(ezAngle &amp;out_x, ezAngle &amp;out_y, ezAngle &amp;out_z) const</div><div class="ttdoc">Converts the quaternion to Euler angles.</div><div class="ttdef"><b>Definition:</b> Quat_inl.h:403</div></div>
<div class="ttc" id="aclassez_quat_template_htm_a6643b21b3f4055b8977927705080ecda"><div class="ttname"><a href="../../de/d15/classez_quat_template.htm#a6643b21b3f4055b8977927705080ecda">ezQuatTemplate::GetAsMat3</a></div><div class="ttdeci">const ezMat3Template&lt; Type &gt; GetAsMat3() const</div><div class="ttdoc">Returns the Quaternion as a matrix.</div><div class="ttdef"><b>Definition:</b> Quat_inl.h:167</div></div>
<div class="ttc" id="aclassez_quat_template_htm_a96023dc43f9d97bfc70e7dfc174b0f6f"><div class="ttname"><a href="../../de/d15/classez_quat_template.htm#a96023dc43f9d97bfc70e7dfc174b0f6f">ezQuatTemplate::GetAsMat4</a></div><div class="ttdeci">const ezMat4Template&lt; Type &gt; GetAsMat4() const</div><div class="ttdoc">Returns the Quaternion as a matrix.</div><div class="ttdef"><b>Definition:</b> Quat_inl.h:199</div></div>
<div class="ttc" id="aclassez_quat_template_htm_a9841dc2d8912ae12ed7fa1de01582366"><div class="ttname"><a href="../../de/d15/classez_quat_template.htm#a9841dc2d8912ae12ed7fa1de01582366">ezQuatTemplate::GetRotationAxisAndAngle</a></div><div class="ttdeci">ezResult GetRotationAxisAndAngle(ezVec3Template&lt; Type &gt; &amp;vAxis, ezAngle &amp;angle, float fEpsilon=ezMath::DefaultEpsilon&lt; Type &gt;()) const</div><div class="ttdoc">Returns the rotation-axis and angle, that this quaternion rotates around.</div><div class="ttdef"><b>Definition:</b> Quat_inl.h:66</div></div>
<div class="ttc" id="aclassez_quat_template_htm_a98a9dacef7a763f9d73f993a4fba7014"><div class="ttname"><a href="../../de/d15/classez_quat_template.htm#a98a9dacef7a763f9d73f993a4fba7014">ezQuatTemplate::IsValid</a></div><div class="ttdeci">bool IsValid(Type fEpsilon=ezMath::DefaultEpsilon&lt; Type &gt;()) const</div><div class="ttdoc">Checks whether all components are neither NaN nor infinite and that the quaternion is normalized.</div><div class="ttdef"><b>Definition:</b> Quat_inl.h:123</div></div>
<div class="ttc" id="aclassez_quat_template_htm_aa09ee1dac045f013c5edb97589002c44"><div class="ttname"><a href="../../de/d15/classez_quat_template.htm#aa09ee1dac045f013c5edb97589002c44">ezQuatTemplate::SetElements</a></div><div class="ttdeci">void SetElements(Type X, Type Y, Type Z, Type W)</div><div class="ttdoc">Sets the individual elements of the quaternion directly. Note that x,y,z do NOT represent a rotation ...</div><div class="ttdef"><b>Definition:</b> Quat_inl.h:30</div></div>
<div class="ttc" id="aclassez_quat_template_htm_aae8fd9ec3d9dcb49d9c688ec2c565a6b"><div class="ttname"><a href="../../de/d15/classez_quat_template.htm#aae8fd9ec3d9dcb49d9c688ec2c565a6b">ezQuatTemplate::IdentityQuaternion</a></div><div class="ttdeci">static const ezQuatTemplate&lt; Type &gt; IdentityQuaternion()</div><div class="ttdoc">Static function that returns a quaternion that represents the identity rotation (none).</div><div class="ttdef"><b>Definition:</b> Quat_inl.h:24</div></div>
<div class="ttc" id="aclassez_quat_template_htm_ab123a28f131b1c55564be6d1c8e5ccba"><div class="ttname"><a href="../../de/d15/classez_quat_template.htm#ab123a28f131b1c55564be6d1c8e5ccba">ezQuatTemplate::IsEqualRotation</a></div><div class="ttdeci">bool IsEqualRotation(const ezQuatTemplate &amp;qOther, float fEpsilon) const</div><div class="ttdoc">Determines whether this and qOther represent the same rotation. This is a rather slow operation.</div><div class="ttdef"><b>Definition:</b> Quat_inl.h:142</div></div>
<div class="ttc" id="aclassez_quat_template_htm_aec6aed93014f09a7162808111f9872c0"><div class="ttname"><a href="../../de/d15/classez_quat_template.htm#aec6aed93014f09a7162808111f9872c0">ezQuatTemplate::SetFromEulerAngles</a></div><div class="ttdeci">void SetFromEulerAngles(const ezAngle &amp;x, const ezAngle &amp;y, const ezAngle &amp;z)</div><div class="ttdoc">Sets the quaternion from Euler angles.</div><div class="ttdef"><b>Definition:</b> Quat_inl.h:431</div></div>
<div class="ttc" id="aclassez_quat_template_htm_af0494cf29e9d89bf1e891ccdcee3a987"><div class="ttname"><a href="../../de/d15/classez_quat_template.htm#af0494cf29e9d89bf1e891ccdcee3a987">ezQuatTemplate::SetFromAxisAndAngle</a></div><div class="ttdeci">void SetFromAxisAndAngle(const ezVec3Template&lt; Type &gt; &amp;vRotationAxis, ezAngle angle)</div><div class="ttdoc">Creates a quaternion from a rotation-axis and an angle.</div><div class="ttdef"><b>Definition:</b> Quat_inl.h:44</div></div>
<div class="ttc" id="aclassez_quat_template_htm_af88ebc7b874c59247f8373809dbc3660"><div class="ttname"><a href="../../de/d15/classez_quat_template.htm#af88ebc7b874c59247f8373809dbc3660">ezQuatTemplate::Dot</a></div><div class="ttdeci">Type Dot(const ezQuatTemplate &amp;rhs) const</div><div class="ttdoc">Returns the dot-product of the two quaternions (commutative, order does not matter).</div><div class="ttdef"><b>Definition:</b> Quat_inl.h:96</div></div>
<div class="ttc" id="aclassez_quat_template_htm_afa71082d9221e638fa1fbf3f1f4da3c9"><div class="ttname"><a href="../../de/d15/classez_quat_template.htm#afa71082d9221e638fa1fbf3f1f4da3c9">ezQuatTemplate::SetIdentity</a></div><div class="ttdeci">void SetIdentity()</div><div class="ttdoc">Sets the Quaternion to the identity.</div><div class="ttdef"><b>Definition:</b> Quat_inl.h:37</div></div>
<div class="ttc" id="astructez_result_htm"><div class="ttname"><a href="../../d4/da9/structez_result.htm">ezResult</a></div><div class="ttdoc">Default enum for returning failure or success, instead of using a bool.</div><div class="ttdef"><b>Definition:</b> Types.h:51</div></div>
<div class="ttc" id="astructez_vec3_template_htm"><div class="ttname"><a href="../../d6/dbd/structez_vec3_template.htm">ezVec3Template</a></div><div class="ttdoc">A 3-component vector class.</div><div class="ttdef"><b>Definition:</b> Vec3.h:9</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_23fdee2f6995db16c755697cdf620cf4.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_035128dd2074b3ffa643fb93d2ba646f.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_b4afbf48febc82b6d8264e96ce32f252.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_b421fc8dbee4bf114051d293564697bb.htm">Math</a></li><li class="navelem"><b>Quat.h</b></li>
    <li class="footer">Generated on Tue Jun 8 2021 14:33:52 for ezEngine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1 </li>
  </ul>
</div>
</body>
</html>
