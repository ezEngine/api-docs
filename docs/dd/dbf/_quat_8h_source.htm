<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Math/Quat.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">ezEngine<span id="projectnumber">&#160;Release 25.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function() { init_codefold(1); });
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('dd/dbf/_quat_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">Quat.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="preprocessor">#include &lt;Foundation/Math/Vec3.h&gt;</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span> </div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00018" data-start="{" data-end="};">
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno"><a class="line" href="../../de/d15/classez_quat_template.htm">   18</a></span><span class="keyword">class </span><a class="code hl_class" href="../../de/d15/classez_quat_template.htm">ezQuatTemplate</a></div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span>{</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span>  <span class="comment">// Means this object can be copied using memcpy instead of copy construction.</span></div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span>  EZ_DECLARE_POD_TYPE();</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span> </div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span>  <span class="keyword">using </span>ComponentType = Type;</div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span> </div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span>  <span class="comment">// *** Data ***</span></div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span>  Type x;</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span>  Type y;</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span>  Type z;</div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span>  Type w;</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span> </div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>  <span class="comment">// *** Constructors ***</span></div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>  <a class="code hl_class" href="../../de/d15/classez_quat_template.htm">ezQuatTemplate</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span> </div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>  <a class="code hl_class" href="../../de/d15/classez_quat_template.htm">ezQuatTemplate</a>(Type x, Type y, Type z, Type w); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span> </div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span><span class="preprocessor">#if EZ_ENABLED(EZ_MATH_CHECK_FOR_NAN)</span></div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>  <span class="keywordtype">void</span> AssertNotNaN()<span class="keyword"> const</span></div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span><span class="keyword">  </span>{</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span>    EZ_ASSERT_ALWAYS(!<a class="code hl_function" href="../../de/d15/classez_quat_template.htm#a38ff450723058f4d3ff03651a9454fd3">IsNaN</a>(), <span class="stringliteral">&quot;This object contains NaN values. This can happen when you forgot to initialize it before using it. Please check that &quot;</span></div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>                               <span class="stringliteral">&quot;all code-paths properly initialize this object.&quot;</span>);</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>  }</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span> </div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span>  [[nodiscard]] <span class="keyword">static</span> <span class="keyword">const</span> <a class="code hl_class" href="../../de/d15/classez_quat_template.htm">ezQuatTemplate&lt;Type&gt;</a> <a class="code hl_function" href="../../de/d15/classez_quat_template.htm#a25b3a41f31f889a90e4efbd712c83a64">MakeIdentity</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span> </div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>  <span class="comment">// *** Functions to create a quaternion ***</span></div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../de/d15/classez_quat_template.htm#afa71082d9221e638fa1fbf3f1f4da3c9">SetIdentity</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span> </div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span>  [[nodiscard]] <span class="keyword">static</span> <a class="code hl_class" href="../../de/d15/classez_quat_template.htm">ezQuatTemplate&lt;Type&gt;</a> <a class="code hl_function" href="../../de/d15/classez_quat_template.htm#a8deda301c35142c262ae4e33953dbb31">MakeFromElements</a>(Type x, Type y, Type z, Type w); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span> </div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>  [[nodiscard]] <span class="keyword">static</span> <a class="code hl_class" href="../../de/d15/classez_quat_template.htm">ezQuatTemplate&lt;Type&gt;</a> <a class="code hl_function" href="../../de/d15/classez_quat_template.htm#a60dce04a697cde564f53d8be72f7e073">MakeFromAxisAndAngle</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vRotationAxis, <a class="code hl_class" href="../../db/d6f/classez_angle.htm">ezAngle</a> angle); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span> </div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span>  [[nodiscard]] <span class="keyword">static</span> <a class="code hl_class" href="../../de/d15/classez_quat_template.htm">ezQuatTemplate&lt;Type&gt;</a> <a class="code hl_function" href="../../de/d15/classez_quat_template.htm#a1cd655d27e7a2e7f32863a1c70c01eaf">MakeShortestRotation</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vDirFrom, <span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; vDirTo); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span> </div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>  [[nodiscard]] <span class="keyword">static</span> <a class="code hl_class" href="../../de/d15/classez_quat_template.htm">ezQuatTemplate&lt;Type&gt;</a> <a class="code hl_function" href="../../de/d15/classez_quat_template.htm#a6aa7a9a17b23c8421d79b90b66da2172">MakeFromMat3</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../db/daf/classez_mat3_template.htm">ezMat3Template&lt;Type&gt;</a>&amp; m); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span> </div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../de/d15/classez_quat_template.htm#a3502fa3d0cf0e2bc7e2aa6ee4d698627">ReconstructFromMat3</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../db/daf/classez_mat3_template.htm">ezMat3Template&lt;Type&gt;</a>&amp; m);</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span> </div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../de/d15/classez_quat_template.htm#a7793ac8c01677e4da7ce9ae1321efbb5">ReconstructFromMat4</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../d7/d9b/classez_mat4_template.htm">ezMat4Template&lt;Type&gt;</a>&amp; m);</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span> </div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>  [[nodiscard]] <span class="keyword">static</span> <a class="code hl_class" href="../../de/d15/classez_quat_template.htm">ezQuatTemplate&lt;Type&gt;</a> <a class="code hl_function" href="../../de/d15/classez_quat_template.htm#a0967f971238078ebb29a4aeffa0e095a">MakeSlerp</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../de/d15/classez_quat_template.htm">ezQuatTemplate</a>&amp; qFrom, <span class="keyword">const</span> <a class="code hl_class" href="../../de/d15/classez_quat_template.htm">ezQuatTemplate</a>&amp; qTo, Type t); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span> </div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>  <span class="comment">// *** Common Functions ***</span></div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../de/d15/classez_quat_template.htm#a4f36bda405ca0b23e5b24f7b4650d923">Normalize</a>(); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span> </div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno"><a class="line" href="../../de/d15/classez_quat_template.htm#aba378fbf5485e41d8698ea4f547b5b6a">   93</a></span>  <span class="keyword">const</span> Type* <a class="code hl_function" href="../../de/d15/classez_quat_template.htm#aba378fbf5485e41d8698ea4f547b5b6a">GetData</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> &amp;x; }</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span> </div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno"><a class="line" href="../../de/d15/classez_quat_template.htm#a80e34049ba1e7e42e2e2877ea0c55535">   96</a></span>  Type* <a class="code hl_function" href="../../de/d15/classez_quat_template.htm#a80e34049ba1e7e42e2e2877ea0c55535">GetData</a>() { <span class="keywordflow">return</span> &amp;x; }</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span> </div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../de/d15/classez_quat_template.htm#ac8f2d8389734520d9431b40b40170fd1">GetRotationAxisAndAngle</a>(<a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; out_vAxis, <a class="code hl_class" href="../../db/d6f/classez_angle.htm">ezAngle</a>&amp; out_angle, Type fEpsilon = ezMath::DefaultEpsilon&lt;Type&gt;()) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span> </div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno"><a class="line" href="../../de/d15/classez_quat_template.htm#aa820588783cc06d061a10bebf9c974d8">  102</a></span>  <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../de/d15/classez_quat_template.htm#aa820588783cc06d061a10bebf9c974d8">GetVectorPart</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>(x, y, z); }</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span> </div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../db/daf/classez_mat3_template.htm">ezMat3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../de/d15/classez_quat_template.htm#a6643b21b3f4055b8977927705080ecda">GetAsMat3</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span> </div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../d7/d9b/classez_mat4_template.htm">ezMat4Template&lt;Type&gt;</a> <a class="code hl_function" href="../../de/d15/classez_quat_template.htm#a96023dc43f9d97bfc70e7dfc174b0f6f">GetAsMat4</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span> </div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="../../de/d15/classez_quat_template.htm#a98a9dacef7a763f9d73f993a4fba7014">IsValid</a>(Type fEpsilon = ezMath::DefaultEpsilon&lt;Type&gt;()) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span> </div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="../../de/d15/classez_quat_template.htm#a38ff450723058f4d3ff03651a9454fd3">IsNaN</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span> </div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span>  <span class="keywordtype">bool</span> <a class="code hl_function" href="../../de/d15/classez_quat_template.htm#a96ff933447dd277c3426cc6b04366e5d">IsEqualRotation</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../de/d15/classez_quat_template.htm">ezQuatTemplate</a>&amp; qOther, Type fEpsilon) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span> </div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../de/d15/classez_quat_template.htm#a8486505da9d6e070c728cd8d71e23e17">Invert</a>();</div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span> </div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../de/d15/classez_quat_template.htm">ezQuatTemplate&lt;Type&gt;</a> <a class="code hl_function" href="../../de/d15/classez_quat_template.htm#a133c1ab4469d37a1e4d08034cb9615e7">GetInverse</a>() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span> </div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../de/d15/classez_quat_template.htm">ezQuatTemplate&lt;Type&gt;</a> <a class="code hl_function" href="../../de/d15/classez_quat_template.htm#ac3b1f323a9c5e6e91749ece2065ed998">GetNegated</a>() <span class="keyword">const</span>;</div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span> </div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span>  Type <a class="code hl_function" href="../../de/d15/classez_quat_template.htm#af88ebc7b874c59247f8373809dbc3660">Dot</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../de/d15/classez_quat_template.htm">ezQuatTemplate</a>&amp; rhs) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span> </div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span>  <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> <a class="code hl_function" href="../../de/d15/classez_quat_template.htm#a9a1df9303ab03d359ac33442d075d222">Rotate</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; v) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span> </div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>  <span class="comment">// *** Euler Angle Conversions ***</span></div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span>  <span class="keywordtype">void</span> <a class="code hl_function" href="../../de/d15/classez_quat_template.htm#a5ef43d275286d8cc7aacde969310ec42">GetAsEulerAngles</a>(<a class="code hl_class" href="../../db/d6f/classez_angle.htm">ezAngle</a>&amp; out_x, <a class="code hl_class" href="../../db/d6f/classez_angle.htm">ezAngle</a>&amp; out_y, <a class="code hl_class" href="../../db/d6f/classez_angle.htm">ezAngle</a>&amp; out_z) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span> </div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span>  [[nodiscard]] <span class="keyword">static</span> <a class="code hl_class" href="../../de/d15/classez_quat_template.htm">ezQuatTemplate&lt;Type&gt;</a> <a class="code hl_function" href="../../de/d15/classez_quat_template.htm#a46c7b564c4cb14e0c8d09aee7c973637">MakeFromEulerAngles</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../db/d6f/classez_angle.htm">ezAngle</a>&amp; x, <span class="keyword">const</span> <a class="code hl_class" href="../../db/d6f/classez_angle.htm">ezAngle</a>&amp; y, <span class="keyword">const</span> <a class="code hl_class" href="../../db/d6f/classez_angle.htm">ezAngle</a>&amp; z); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span>};</div>
</div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span> </div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span><span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a> operator*(<span class="keyword">const</span> <a class="code hl_class" href="../../de/d15/classez_quat_template.htm">ezQuatTemplate&lt;Type&gt;</a>&amp; q, <span class="keyword">const</span> <a class="code hl_class" href="../../da/df1/classez_vec3_template.htm">ezVec3Template&lt;Type&gt;</a>&amp; v); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span> </div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span><span class="keyword">const</span> <a class="code hl_class" href="../../de/d15/classez_quat_template.htm">ezQuatTemplate&lt;Type&gt;</a> operator*(<span class="keyword">const</span> <a class="code hl_class" href="../../de/d15/classez_quat_template.htm">ezQuatTemplate&lt;Type&gt;</a>&amp; q1, <span class="keyword">const</span> <a class="code hl_class" href="../../de/d15/classez_quat_template.htm">ezQuatTemplate&lt;Type&gt;</a>&amp; q2); <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span> </div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span><span class="keywordtype">bool</span> operator==(<span class="keyword">const</span> <a class="code hl_class" href="../../de/d15/classez_quat_template.htm">ezQuatTemplate&lt;Type&gt;</a>&amp; q1, <span class="keyword">const</span> <a class="code hl_class" href="../../de/d15/classez_quat_template.htm">ezQuatTemplate&lt;Type&gt;</a>&amp; q2);                      <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span> </div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span><span class="keywordtype">bool</span> operator!=(<span class="keyword">const</span> <a class="code hl_class" href="../../de/d15/classez_quat_template.htm">ezQuatTemplate&lt;Type&gt;</a>&amp; q1, <span class="keyword">const</span> <a class="code hl_class" href="../../de/d15/classez_quat_template.htm">ezQuatTemplate&lt;Type&gt;</a>&amp; q2);                      <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span> </div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span><span class="preprocessor">#include &lt;Foundation/Math/Implementation/Quat_inl.h&gt;</span></div>
<div class="ttc" id="aclassez_angle_htm"><div class="ttname"><a href="../../db/d6f/classez_angle.htm">ezAngle</a></div><div class="ttdoc">Float wrapper struct for a safe usage and conversions of angles.</div><div class="ttdef"><b>Definition</b> Angle.h:10</div></div>
<div class="ttc" id="aclassez_mat3_template_htm"><div class="ttname"><a href="../../db/daf/classez_mat3_template.htm">ezMat3Template</a></div><div class="ttdoc">A 3x3 component matrix class.</div><div class="ttdef"><b>Definition</b> Mat3.h:9</div></div>
<div class="ttc" id="aclassez_mat4_template_htm"><div class="ttname"><a href="../../d7/d9b/classez_mat4_template.htm">ezMat4Template</a></div><div class="ttdoc">A 4x4 component matrix class.</div><div class="ttdef"><b>Definition</b> Mat4.h:11</div></div>
<div class="ttc" id="aclassez_quat_template_htm"><div class="ttname"><a href="../../de/d15/classez_quat_template.htm">ezQuatTemplate</a></div><div class="ttdoc">Quaternions can be used to represent rotations in 3D space.</div><div class="ttdef"><b>Definition</b> Quat.h:19</div></div>
<div class="ttc" id="aclassez_quat_template_htm_a0967f971238078ebb29a4aeffa0e095a"><div class="ttname"><a href="../../de/d15/classez_quat_template.htm#a0967f971238078ebb29a4aeffa0e095a">ezQuatTemplate::MakeSlerp</a></div><div class="ttdeci">static ezQuatTemplate&lt; Type &gt; MakeSlerp(const ezQuatTemplate &amp;qFrom, const ezQuatTemplate &amp;qTo, Type t)</div><div class="ttdoc">Returns a quaternion that is the spherical linear interpolation of the other two.</div><div class="ttdef"><b>Definition</b> Quat_inl.h:403</div></div>
<div class="ttc" id="aclassez_quat_template_htm_a133c1ab4469d37a1e4d08034cb9615e7"><div class="ttname"><a href="../../de/d15/classez_quat_template.htm#a133c1ab4469d37a1e4d08034cb9615e7">ezQuatTemplate::GetInverse</a></div><div class="ttdeci">const ezQuatTemplate&lt; Type &gt; GetInverse() const</div><div class="ttdoc">Returns a quaternion that represents the negative / inverted rotation. E.g. the one that would rotate...</div><div class="ttdef"><b>Definition</b> Quat_inl.h:106</div></div>
<div class="ttc" id="aclassez_quat_template_htm_a1cd655d27e7a2e7f32863a1c70c01eaf"><div class="ttname"><a href="../../de/d15/classez_quat_template.htm#a1cd655d27e7a2e7f32863a1c70c01eaf">ezQuatTemplate::MakeShortestRotation</a></div><div class="ttdeci">static ezQuatTemplate&lt; Type &gt; MakeShortestRotation(const ezVec3Template&lt; Type &gt; &amp;vDirFrom, const ezVec3Template&lt; Type &gt; &amp;vDirTo)</div><div class="ttdoc">Creates a quaternion, that rotates through the shortest arc from &quot;vDirFrom&quot; to &quot;vDirTo&quot;.</div><div class="ttdef"><b>Definition</b> Quat_inl.h:363</div></div>
<div class="ttc" id="aclassez_quat_template_htm_a25b3a41f31f889a90e4efbd712c83a64"><div class="ttname"><a href="../../de/d15/classez_quat_template.htm#a25b3a41f31f889a90e4efbd712c83a64">ezQuatTemplate::MakeIdentity</a></div><div class="ttdeci">static const ezQuatTemplate&lt; Type &gt; MakeIdentity()</div><div class="ttdoc">Static function that returns a quaternion that represents the identity rotation (none).</div><div class="ttdef"><b>Definition</b> Quat_inl.h:29</div></div>
<div class="ttc" id="aclassez_quat_template_htm_a3502fa3d0cf0e2bc7e2aa6ee4d698627"><div class="ttname"><a href="../../de/d15/classez_quat_template.htm#a3502fa3d0cf0e2bc7e2aa6ee4d698627">ezQuatTemplate::ReconstructFromMat3</a></div><div class="ttdeci">void ReconstructFromMat3(const ezMat3Template&lt; Type &gt; &amp;m)</div><div class="ttdoc">Reconstructs a rotation quaternion from a matrix that may contain scaling and mirroring.</div><div class="ttdef"><b>Definition</b> Quat_inl.h:327</div></div>
<div class="ttc" id="aclassez_quat_template_htm_a38ff450723058f4d3ff03651a9454fd3"><div class="ttname"><a href="../../de/d15/classez_quat_template.htm#a38ff450723058f4d3ff03651a9454fd3">ezQuatTemplate::IsNaN</a></div><div class="ttdeci">bool IsNaN() const</div><div class="ttdoc">Checks whether any component is NaN.</div><div class="ttdef"><b>Definition</b> Quat_inl.h:175</div></div>
<div class="ttc" id="aclassez_quat_template_htm_a46c7b564c4cb14e0c8d09aee7c973637"><div class="ttname"><a href="../../de/d15/classez_quat_template.htm#a46c7b564c4cb14e0c8d09aee7c973637">ezQuatTemplate::MakeFromEulerAngles</a></div><div class="ttdeci">static ezQuatTemplate&lt; Type &gt; MakeFromEulerAngles(const ezAngle &amp;x, const ezAngle &amp;y, const ezAngle &amp;z)</div><div class="ttdoc">Sets the quaternion from Euler angles.</div><div class="ttdef"><b>Definition</b> Quat_inl.h:520</div></div>
<div class="ttc" id="aclassez_quat_template_htm_a4f36bda405ca0b23e5b24f7b4650d923"><div class="ttname"><a href="../../de/d15/classez_quat_template.htm#a4f36bda405ca0b23e5b24f7b4650d923">ezQuatTemplate::Normalize</a></div><div class="ttdeci">void Normalize()</div><div class="ttdoc">Normalizes the quaternion to unit length. ALL rotation-quaternions should be normalized at all times ...</div><div class="ttdef"><b>Definition</b> Quat_inl.h:61</div></div>
<div class="ttc" id="aclassez_quat_template_htm_a5ef43d275286d8cc7aacde969310ec42"><div class="ttname"><a href="../../de/d15/classez_quat_template.htm#a5ef43d275286d8cc7aacde969310ec42">ezQuatTemplate::GetAsEulerAngles</a></div><div class="ttdeci">void GetAsEulerAngles(ezAngle &amp;out_x, ezAngle &amp;out_y, ezAngle &amp;out_z) const</div><div class="ttdoc">Converts the quaternion to Euler angles.</div><div class="ttdef"><b>Definition</b> Quat_inl.h:477</div></div>
<div class="ttc" id="aclassez_quat_template_htm_a60dce04a697cde564f53d8be72f7e073"><div class="ttname"><a href="../../de/d15/classez_quat_template.htm#a60dce04a697cde564f53d8be72f7e073">ezQuatTemplate::MakeFromAxisAndAngle</a></div><div class="ttdeci">static ezQuatTemplate&lt; Type &gt; MakeFromAxisAndAngle(const ezVec3Template&lt; Type &gt; &amp;vRotationAxis, ezAngle angle)</div><div class="ttdoc">Creates a quaternion from a rotation-axis and an angle.</div><div class="ttdef"><b>Definition</b> Quat_inl.h:50</div></div>
<div class="ttc" id="aclassez_quat_template_htm_a6643b21b3f4055b8977927705080ecda"><div class="ttname"><a href="../../de/d15/classez_quat_template.htm#a6643b21b3f4055b8977927705080ecda">ezQuatTemplate::GetAsMat3</a></div><div class="ttdeci">const ezMat3Template&lt; Type &gt; GetAsMat3() const</div><div class="ttdoc">Returns the Quaternion as a matrix.</div><div class="ttdef"><b>Definition</b> Quat_inl.h:204</div></div>
<div class="ttc" id="aclassez_quat_template_htm_a6aa7a9a17b23c8421d79b90b66da2172"><div class="ttname"><a href="../../de/d15/classez_quat_template.htm#a6aa7a9a17b23c8421d79b90b66da2172">ezQuatTemplate::MakeFromMat3</a></div><div class="ttdeci">static ezQuatTemplate&lt; Type &gt; MakeFromMat3(const ezMat3Template&lt; Type &gt; &amp;m)</div><div class="ttdoc">Creates a quaternion from the given matrix.</div><div class="ttdef"><b>Definition</b> Quat_inl.h:275</div></div>
<div class="ttc" id="aclassez_quat_template_htm_a7793ac8c01677e4da7ce9ae1321efbb5"><div class="ttname"><a href="../../de/d15/classez_quat_template.htm#a7793ac8c01677e4da7ce9ae1321efbb5">ezQuatTemplate::ReconstructFromMat4</a></div><div class="ttdeci">void ReconstructFromMat4(const ezMat4Template&lt; Type &gt; &amp;m)</div><div class="ttdoc">Reconstructs a rotation quaternion from a matrix that may contain scaling and mirroring.</div><div class="ttdef"><b>Definition</b> Quat_inl.h:342</div></div>
<div class="ttc" id="aclassez_quat_template_htm_a80e34049ba1e7e42e2e2877ea0c55535"><div class="ttname"><a href="../../de/d15/classez_quat_template.htm#a80e34049ba1e7e42e2e2877ea0c55535">ezQuatTemplate::GetData</a></div><div class="ttdeci">Type * GetData()</div><div class="ttdoc">Returns the data as an array.</div><div class="ttdef"><b>Definition</b> Quat.h:96</div></div>
<div class="ttc" id="aclassez_quat_template_htm_a8486505da9d6e070c728cd8d71e23e17"><div class="ttname"><a href="../../de/d15/classez_quat_template.htm#a8486505da9d6e070c728cd8d71e23e17">ezQuatTemplate::Invert</a></div><div class="ttdeci">void Invert()</div><div class="ttdoc">Inverts the rotation, so instead of rotating N degrees around an axis, the quaternion will rotate -N ...</div><div class="ttdef"><b>Definition</b> Quat_inl.h:98</div></div>
<div class="ttc" id="aclassez_quat_template_htm_a8deda301c35142c262ae4e33953dbb31"><div class="ttname"><a href="../../de/d15/classez_quat_template.htm#a8deda301c35142c262ae4e33953dbb31">ezQuatTemplate::MakeFromElements</a></div><div class="ttdeci">static ezQuatTemplate&lt; Type &gt; MakeFromElements(Type x, Type y, Type z, Type w)</div><div class="ttdoc">Sets the individual elements of the quaternion directly. Note that x,y,z do NOT represent a rotation ...</div><div class="ttdef"><b>Definition</b> Quat_inl.h:35</div></div>
<div class="ttc" id="aclassez_quat_template_htm_a96023dc43f9d97bfc70e7dfc174b0f6f"><div class="ttname"><a href="../../de/d15/classez_quat_template.htm#a96023dc43f9d97bfc70e7dfc174b0f6f">ezQuatTemplate::GetAsMat4</a></div><div class="ttdeci">const ezMat4Template&lt; Type &gt; GetAsMat4() const</div><div class="ttdoc">Returns the Quaternion as a matrix.</div><div class="ttdef"><b>Definition</b> Quat_inl.h:236</div></div>
<div class="ttc" id="aclassez_quat_template_htm_a96ff933447dd277c3426cc6b04366e5d"><div class="ttname"><a href="../../de/d15/classez_quat_template.htm#a96ff933447dd277c3426cc6b04366e5d">ezQuatTemplate::IsEqualRotation</a></div><div class="ttdeci">bool IsEqualRotation(const ezQuatTemplate &amp;qOther, Type fEpsilon) const</div><div class="ttdoc">Determines whether this and qOther represent the same rotation. This is a rather slow operation.</div><div class="ttdef"><b>Definition</b> Quat_inl.h:181</div></div>
<div class="ttc" id="aclassez_quat_template_htm_a98a9dacef7a763f9d73f993a4fba7014"><div class="ttname"><a href="../../de/d15/classez_quat_template.htm#a98a9dacef7a763f9d73f993a4fba7014">ezQuatTemplate::IsValid</a></div><div class="ttdeci">bool IsValid(Type fEpsilon=ezMath::DefaultEpsilon&lt; Type &gt;()) const</div><div class="ttdoc">Checks whether all components are neither NaN nor infinite and that the quaternion is normalized.</div><div class="ttdef"><b>Definition</b> Quat_inl.h:162</div></div>
<div class="ttc" id="aclassez_quat_template_htm_a9a1df9303ab03d359ac33442d075d222"><div class="ttname"><a href="../../de/d15/classez_quat_template.htm#a9a1df9303ab03d359ac33442d075d222">ezQuatTemplate::Rotate</a></div><div class="ttdeci">ezVec3Template&lt; Type &gt; Rotate(const ezVec3Template&lt; Type &gt; &amp;v) const</div><div class="ttdoc">Returns v rotated by the quaternion. Same as operator*.</div><div class="ttdef"><b>Definition</b> Quat_inl.h:131</div></div>
<div class="ttc" id="aclassez_quat_template_htm_aa820588783cc06d061a10bebf9c974d8"><div class="ttname"><a href="../../de/d15/classez_quat_template.htm#aa820588783cc06d061a10bebf9c974d8">ezQuatTemplate::GetVectorPart</a></div><div class="ttdeci">ezVec3Template&lt; Type &gt; GetVectorPart() const</div><div class="ttdoc">Returns the x,y,z components as a vector.</div><div class="ttdef"><b>Definition</b> Quat.h:102</div></div>
<div class="ttc" id="aclassez_quat_template_htm_aba378fbf5485e41d8698ea4f547b5b6a"><div class="ttname"><a href="../../de/d15/classez_quat_template.htm#aba378fbf5485e41d8698ea4f547b5b6a">ezQuatTemplate::GetData</a></div><div class="ttdeci">const Type * GetData() const</div><div class="ttdoc">Returns the data as an array.</div><div class="ttdef"><b>Definition</b> Quat.h:93</div></div>
<div class="ttc" id="aclassez_quat_template_htm_ac3b1f323a9c5e6e91749ece2065ed998"><div class="ttname"><a href="../../de/d15/classez_quat_template.htm#ac3b1f323a9c5e6e91749ece2065ed998">ezQuatTemplate::GetNegated</a></div><div class="ttdeci">const ezQuatTemplate&lt; Type &gt; GetNegated() const</div><div class="ttdoc">Returns the Quaternion with all 4 components negated. This is not the same as the inverted rotation!</div><div class="ttdef"><b>Definition</b> Quat_inl.h:114</div></div>
<div class="ttc" id="aclassez_quat_template_htm_ac8f2d8389734520d9431b40b40170fd1"><div class="ttname"><a href="../../de/d15/classez_quat_template.htm#ac8f2d8389734520d9431b40b40170fd1">ezQuatTemplate::GetRotationAxisAndAngle</a></div><div class="ttdeci">void GetRotationAxisAndAngle(ezVec3Template&lt; Type &gt; &amp;out_vAxis, ezAngle &amp;out_angle, Type fEpsilon=ezMath::DefaultEpsilon&lt; Type &gt;()) const</div><div class="ttdoc">Returns the rotation-axis and angle, that this quaternion rotates around.</div><div class="ttdef"><b>Definition</b> Quat_inl.h:76</div></div>
<div class="ttc" id="aclassez_quat_template_htm_af88ebc7b874c59247f8373809dbc3660"><div class="ttname"><a href="../../de/d15/classez_quat_template.htm#af88ebc7b874c59247f8373809dbc3660">ezQuatTemplate::Dot</a></div><div class="ttdeci">Type Dot(const ezQuatTemplate &amp;rhs) const</div><div class="ttdoc">Returns the dot-product of the two quaternions (commutative, order does not matter).</div><div class="ttdef"><b>Definition</b> Quat_inl.h:122</div></div>
<div class="ttc" id="aclassez_quat_template_htm_afa71082d9221e638fa1fbf3f1f4da3c9"><div class="ttname"><a href="../../de/d15/classez_quat_template.htm#afa71082d9221e638fa1fbf3f1f4da3c9">ezQuatTemplate::SetIdentity</a></div><div class="ttdeci">void SetIdentity()</div><div class="ttdoc">Sets the Quaternion to the identity.</div><div class="ttdef"><b>Definition</b> Quat_inl.h:41</div></div>
<div class="ttc" id="aclassez_vec3_template_htm"><div class="ttname"><a href="../../da/df1/classez_vec3_template.htm">ezVec3Template</a></div><div class="ttdoc">A 3-component vector class.</div><div class="ttdef"><b>Definition</b> Vec3.h:9</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_4ad0f5fbee83b30173e7fecedeea26f0.htm">Math</a></li><li class="navelem"><b>Quat.h</b></li>
    <li class="footer">Generated on Fri Jul 11 2025 12:17:52 for ezEngine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
