<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: ezOpenDdlWriter Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 21.6</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d0/ddb/classez_open_ddl_writer.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-types">Protected Types</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="../../db/d67/classez_open_ddl_writer-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ezOpenDdlWriter Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>The base class for OpenDDL writers.  
 <a href="../../d0/ddb/classez_open_ddl_writer.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d3/d29/_open_ddl_writer_8h_source.htm">OpenDdlWriter.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d22/structez_open_ddl_writer_1_1_ddl_state.htm">DdlState</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:ac979ff3b3595bc87506be39e55b0c5d2"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#ac979ff3b3595bc87506be39e55b0c5d2">TypeStringMode</a> { <a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#ac979ff3b3595bc87506be39e55b0c5d2a952358fc53c0167a1ea7354f338ed5af">TypeStringMode::Compliant</a>, 
<a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#ac979ff3b3595bc87506be39e55b0c5d2a5b3571429e97357bc5cd927384ed2d10">TypeStringMode::ShortenedUnsignedInt</a>, 
<a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#ac979ff3b3595bc87506be39e55b0c5d2ace42b65744e60ed9b32e7d4f750a66a5">TypeStringMode::Shortest</a>
 }</td></tr>
<tr class="separator:ac979ff3b3595bc87506be39e55b0c5d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a84e5b5178414d764add6a840a0bedeaa"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#a84e5b5178414d764add6a840a0bedeaa">FloatPrecisionMode</a> { <a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#a84e5b5178414d764add6a840a0bedeaaa4b8123df4e2b3456270c11394adf7607">FloatPrecisionMode::Readable</a>, 
<a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#a84e5b5178414d764add6a840a0bedeaaa1649aed298f99d587e2eb30c1db5946b">FloatPrecisionMode::Exact</a>
 }</td></tr>
<tr class="separator:a84e5b5178414d764add6a840a0bedeaa"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:af05d914df74e11c77c92b63b96034489"><td class="memItemLeft" align="right" valign="top"><a id="af05d914df74e11c77c92b63b96034489"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#af05d914df74e11c77c92b63b96034489">ezOpenDdlWriter</a> ()</td></tr>
<tr class="memdesc:af05d914df74e11c77c92b63b96034489"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor. <br /></td></tr>
<tr class="separator:af05d914df74e11c77c92b63b96034489"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e94d3ebe2ded7ee6ee684343fdb787a"><td class="memItemLeft" align="right" valign="top"><a id="a3e94d3ebe2ded7ee6ee684343fdb787a"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#a3e94d3ebe2ded7ee6ee684343fdb787a">SetOutputStream</a> (<a class="el" href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a> *pOutput)</td></tr>
<tr class="memdesc:a3e94d3ebe2ded7ee6ee684343fdb787a"><td class="mdescLeft">&#160;</td><td class="mdescRight">All output is written to this binary stream. <br /></td></tr>
<tr class="separator:a3e94d3ebe2ded7ee6ee684343fdb787a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aabcbc3751bd685c00192557340801853"><td class="memItemLeft" align="right" valign="top"><a id="aabcbc3751bd685c00192557340801853"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#aabcbc3751bd685c00192557340801853">SetCompactMode</a> (bool compact)</td></tr>
<tr class="memdesc:aabcbc3751bd685c00192557340801853"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configures how much whitespace is output. <br /></td></tr>
<tr class="separator:aabcbc3751bd685c00192557340801853"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae057460ea99c7db36bdd803064b89aff"><td class="memItemLeft" align="right" valign="top"><a id="ae057460ea99c7db36bdd803064b89aff"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#ae057460ea99c7db36bdd803064b89aff">SetPrimitiveTypeStringMode</a> (<a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#ac979ff3b3595bc87506be39e55b0c5d2">TypeStringMode</a> mode)</td></tr>
<tr class="memdesc:ae057460ea99c7db36bdd803064b89aff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configures how verbose the type strings are going to be written. <br /></td></tr>
<tr class="separator:ae057460ea99c7db36bdd803064b89aff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f69f2dfc0192439b1a1839599a3d26c"><td class="memItemLeft" align="right" valign="top"><a id="a5f69f2dfc0192439b1a1839599a3d26c"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#a5f69f2dfc0192439b1a1839599a3d26c">SetFloatPrecisionMode</a> (<a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#a84e5b5178414d764add6a840a0bedeaa">FloatPrecisionMode</a> mode)</td></tr>
<tr class="memdesc:a5f69f2dfc0192439b1a1839599a3d26c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Configures how float values are output. <br /></td></tr>
<tr class="separator:a5f69f2dfc0192439b1a1839599a3d26c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a09cf82bc0c2e3035a75180235b597189"><td class="memItemLeft" align="right" valign="top"><a id="a09cf82bc0c2e3035a75180235b597189"></a>
<a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#a84e5b5178414d764add6a840a0bedeaa">FloatPrecisionMode</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#a09cf82bc0c2e3035a75180235b597189">GetFloatPrecisionMode</a> () const</td></tr>
<tr class="memdesc:a09cf82bc0c2e3035a75180235b597189"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns how float values are output. <br /></td></tr>
<tr class="separator:a09cf82bc0c2e3035a75180235b597189"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad503564c8d45134785bbf70802938578"><td class="memItemLeft" align="right" valign="top"><a id="ad503564c8d45134785bbf70802938578"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#ad503564c8d45134785bbf70802938578">SetIndentation</a> (ezInt8 iIndentation)</td></tr>
<tr class="memdesc:ad503564c8d45134785bbf70802938578"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allows to set the indentation. Negative values are possible. This makes it possible to set the indentation e.g. to -2, thus the output will only have indentation after a level of 3 has been reached. <br /></td></tr>
<tr class="separator:ad503564c8d45134785bbf70802938578"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c05d81fa940b52ca4ac4f2278aabb26"><td class="memItemLeft" align="right" valign="top"><a id="a1c05d81fa940b52ca4ac4f2278aabb26"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#a1c05d81fa940b52ca4ac4f2278aabb26">BeginObject</a> (const char *szType, const char *szName=nullptr, bool bGlobalName=false, bool bSingleLine=false)</td></tr>
<tr class="memdesc:a1c05d81fa940b52ca4ac4f2278aabb26"><td class="mdescLeft">&#160;</td><td class="mdescRight">Begins outputting an object. <br /></td></tr>
<tr class="separator:a1c05d81fa940b52ca4ac4f2278aabb26"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a895fa100db4b66c9e8b3331e8a280c7e"><td class="memItemLeft" align="right" valign="top"><a id="a895fa100db4b66c9e8b3331e8a280c7e"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#a895fa100db4b66c9e8b3331e8a280c7e">EndObject</a> ()</td></tr>
<tr class="memdesc:a895fa100db4b66c9e8b3331e8a280c7e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Ends outputting an object. <br /></td></tr>
<tr class="separator:a895fa100db4b66c9e8b3331e8a280c7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac952ef4d1a48fcd5a88e276d4657277b"><td class="memItemLeft" align="right" valign="top"><a id="ac952ef4d1a48fcd5a88e276d4657277b"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#ac952ef4d1a48fcd5a88e276d4657277b">BeginPrimitiveList</a> (ezOpenDdlPrimitiveType type, const char *szName=nullptr, bool bGlobalName=false)</td></tr>
<tr class="memdesc:ac952ef4d1a48fcd5a88e276d4657277b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Begins outputting a list of primitives of the given type. <br /></td></tr>
<tr class="separator:ac952ef4d1a48fcd5a88e276d4657277b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd40a751eaf59ed7635649a9d4a6fe22"><td class="memItemLeft" align="right" valign="top"><a id="acd40a751eaf59ed7635649a9d4a6fe22"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#acd40a751eaf59ed7635649a9d4a6fe22">EndPrimitiveList</a> ()</td></tr>
<tr class="memdesc:acd40a751eaf59ed7635649a9d4a6fe22"><td class="mdescLeft">&#160;</td><td class="mdescRight">Ends outputting the list of primitives. <br /></td></tr>
<tr class="separator:acd40a751eaf59ed7635649a9d4a6fe22"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4699405bb5dec5fba3192a3fbb148aaa"><td class="memItemLeft" align="right" valign="top"><a id="a4699405bb5dec5fba3192a3fbb148aaa"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#a4699405bb5dec5fba3192a3fbb148aaa">WriteBool</a> (const bool *pValues, ezUInt32 count=1)</td></tr>
<tr class="memdesc:a4699405bb5dec5fba3192a3fbb148aaa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes a number of values to the primitive list. Can be called multiple times between <a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#ac952ef4d1a48fcd5a88e276d4657277b" title="Begins outputting a list of primitives of the given type.">BeginPrimitiveList()</a> / <a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#acd40a751eaf59ed7635649a9d4a6fe22" title="Ends outputting the list of primitives.">EndPrimitiveList()</a>. <br /></td></tr>
<tr class="separator:a4699405bb5dec5fba3192a3fbb148aaa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a889f9fd2e554ff4f9f44866853a0da2f"><td class="memItemLeft" align="right" valign="top"><a id="a889f9fd2e554ff4f9f44866853a0da2f"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#a889f9fd2e554ff4f9f44866853a0da2f">WriteInt8</a> (const ezInt8 *pValues, ezUInt32 count=1)</td></tr>
<tr class="memdesc:a889f9fd2e554ff4f9f44866853a0da2f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes a number of values to the primitive list. Can be called multiple times between <a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#ac952ef4d1a48fcd5a88e276d4657277b" title="Begins outputting a list of primitives of the given type.">BeginPrimitiveList()</a> / <a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#acd40a751eaf59ed7635649a9d4a6fe22" title="Ends outputting the list of primitives.">EndPrimitiveList()</a>. <br /></td></tr>
<tr class="separator:a889f9fd2e554ff4f9f44866853a0da2f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a834efa8d24b11772563be137571924e6"><td class="memItemLeft" align="right" valign="top"><a id="a834efa8d24b11772563be137571924e6"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#a834efa8d24b11772563be137571924e6">WriteInt16</a> (const ezInt16 *pValues, ezUInt32 count=1)</td></tr>
<tr class="memdesc:a834efa8d24b11772563be137571924e6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes a number of values to the primitive list. Can be called multiple times between <a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#ac952ef4d1a48fcd5a88e276d4657277b" title="Begins outputting a list of primitives of the given type.">BeginPrimitiveList()</a> / <a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#acd40a751eaf59ed7635649a9d4a6fe22" title="Ends outputting the list of primitives.">EndPrimitiveList()</a>. <br /></td></tr>
<tr class="separator:a834efa8d24b11772563be137571924e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b78212310478a273bc4dd213a114367"><td class="memItemLeft" align="right" valign="top"><a id="a3b78212310478a273bc4dd213a114367"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#a3b78212310478a273bc4dd213a114367">WriteInt32</a> (const ezInt32 *pValues, ezUInt32 count=1)</td></tr>
<tr class="memdesc:a3b78212310478a273bc4dd213a114367"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes a number of values to the primitive list. Can be called multiple times between <a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#ac952ef4d1a48fcd5a88e276d4657277b" title="Begins outputting a list of primitives of the given type.">BeginPrimitiveList()</a> / <a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#acd40a751eaf59ed7635649a9d4a6fe22" title="Ends outputting the list of primitives.">EndPrimitiveList()</a>. <br /></td></tr>
<tr class="separator:a3b78212310478a273bc4dd213a114367"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae83c358f91dd6e02ff319d826ac5f623"><td class="memItemLeft" align="right" valign="top"><a id="ae83c358f91dd6e02ff319d826ac5f623"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#ae83c358f91dd6e02ff319d826ac5f623">WriteInt64</a> (const ezInt64 *pValues, ezUInt32 count=1)</td></tr>
<tr class="memdesc:ae83c358f91dd6e02ff319d826ac5f623"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes a number of values to the primitive list. Can be called multiple times between <a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#ac952ef4d1a48fcd5a88e276d4657277b" title="Begins outputting a list of primitives of the given type.">BeginPrimitiveList()</a> / <a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#acd40a751eaf59ed7635649a9d4a6fe22" title="Ends outputting the list of primitives.">EndPrimitiveList()</a>. <br /></td></tr>
<tr class="separator:ae83c358f91dd6e02ff319d826ac5f623"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76c1b04e2fd9ac6f778ac8b516a634be"><td class="memItemLeft" align="right" valign="top"><a id="a76c1b04e2fd9ac6f778ac8b516a634be"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#a76c1b04e2fd9ac6f778ac8b516a634be">WriteUInt8</a> (const ezUInt8 *pValues, ezUInt32 count=1)</td></tr>
<tr class="memdesc:a76c1b04e2fd9ac6f778ac8b516a634be"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes a number of values to the primitive list. Can be called multiple times between <a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#ac952ef4d1a48fcd5a88e276d4657277b" title="Begins outputting a list of primitives of the given type.">BeginPrimitiveList()</a> / <a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#acd40a751eaf59ed7635649a9d4a6fe22" title="Ends outputting the list of primitives.">EndPrimitiveList()</a>. <br /></td></tr>
<tr class="separator:a76c1b04e2fd9ac6f778ac8b516a634be"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a774c17f4cf271de42362c3d3b2540403"><td class="memItemLeft" align="right" valign="top"><a id="a774c17f4cf271de42362c3d3b2540403"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#a774c17f4cf271de42362c3d3b2540403">WriteUInt16</a> (const ezUInt16 *pValues, ezUInt32 count=1)</td></tr>
<tr class="memdesc:a774c17f4cf271de42362c3d3b2540403"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes a number of values to the primitive list. Can be called multiple times between <a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#ac952ef4d1a48fcd5a88e276d4657277b" title="Begins outputting a list of primitives of the given type.">BeginPrimitiveList()</a> / <a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#acd40a751eaf59ed7635649a9d4a6fe22" title="Ends outputting the list of primitives.">EndPrimitiveList()</a>. <br /></td></tr>
<tr class="separator:a774c17f4cf271de42362c3d3b2540403"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a621d2ce904201c8f5bfcc2cf73b383e7"><td class="memItemLeft" align="right" valign="top"><a id="a621d2ce904201c8f5bfcc2cf73b383e7"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#a621d2ce904201c8f5bfcc2cf73b383e7">WriteUInt32</a> (const ezUInt32 *pValues, ezUInt32 count=1)</td></tr>
<tr class="memdesc:a621d2ce904201c8f5bfcc2cf73b383e7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes a number of values to the primitive list. Can be called multiple times between <a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#ac952ef4d1a48fcd5a88e276d4657277b" title="Begins outputting a list of primitives of the given type.">BeginPrimitiveList()</a> / <a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#acd40a751eaf59ed7635649a9d4a6fe22" title="Ends outputting the list of primitives.">EndPrimitiveList()</a>. <br /></td></tr>
<tr class="separator:a621d2ce904201c8f5bfcc2cf73b383e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa18c08556a7c54131426f0cf40d90033"><td class="memItemLeft" align="right" valign="top"><a id="aa18c08556a7c54131426f0cf40d90033"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#aa18c08556a7c54131426f0cf40d90033">WriteUInt64</a> (const ezUInt64 *pValues, ezUInt32 count=1)</td></tr>
<tr class="memdesc:aa18c08556a7c54131426f0cf40d90033"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes a number of values to the primitive list. Can be called multiple times between <a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#ac952ef4d1a48fcd5a88e276d4657277b" title="Begins outputting a list of primitives of the given type.">BeginPrimitiveList()</a> / <a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#acd40a751eaf59ed7635649a9d4a6fe22" title="Ends outputting the list of primitives.">EndPrimitiveList()</a>. <br /></td></tr>
<tr class="separator:aa18c08556a7c54131426f0cf40d90033"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04289a768b5dfcc470b1247456a5d116"><td class="memItemLeft" align="right" valign="top"><a id="a04289a768b5dfcc470b1247456a5d116"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#a04289a768b5dfcc470b1247456a5d116">WriteFloat</a> (const float *pValues, ezUInt32 count=1)</td></tr>
<tr class="memdesc:a04289a768b5dfcc470b1247456a5d116"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes a number of values to the primitive list. Can be called multiple times between <a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#ac952ef4d1a48fcd5a88e276d4657277b" title="Begins outputting a list of primitives of the given type.">BeginPrimitiveList()</a> / <a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#acd40a751eaf59ed7635649a9d4a6fe22" title="Ends outputting the list of primitives.">EndPrimitiveList()</a>. <br /></td></tr>
<tr class="separator:a04289a768b5dfcc470b1247456a5d116"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4327e58a4673895a870e641a0b2e698e"><td class="memItemLeft" align="right" valign="top"><a id="a4327e58a4673895a870e641a0b2e698e"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#a4327e58a4673895a870e641a0b2e698e">WriteDouble</a> (const double *pValues, ezUInt32 count=1)</td></tr>
<tr class="memdesc:a4327e58a4673895a870e641a0b2e698e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes a number of values to the primitive list. Can be called multiple times between <a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#ac952ef4d1a48fcd5a88e276d4657277b" title="Begins outputting a list of primitives of the given type.">BeginPrimitiveList()</a> / <a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#acd40a751eaf59ed7635649a9d4a6fe22" title="Ends outputting the list of primitives.">EndPrimitiveList()</a>. <br /></td></tr>
<tr class="separator:a4327e58a4673895a870e641a0b2e698e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b09766bbc18e2d372a107e38bbead48"><td class="memItemLeft" align="right" valign="top"><a id="a8b09766bbc18e2d372a107e38bbead48"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#a8b09766bbc18e2d372a107e38bbead48">WriteString</a> (const <a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a> &amp;string)</td></tr>
<tr class="memdesc:a8b09766bbc18e2d372a107e38bbead48"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes a single string to the primitive list. Can be called multiple times between <a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#ac952ef4d1a48fcd5a88e276d4657277b" title="Begins outputting a list of primitives of the given type.">BeginPrimitiveList()</a> / <a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#acd40a751eaf59ed7635649a9d4a6fe22" title="Ends outputting the list of primitives.">EndPrimitiveList()</a>. <br /></td></tr>
<tr class="separator:a8b09766bbc18e2d372a107e38bbead48"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f5e3cf8301cdd4f671ad3b059c326e6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#a9f5e3cf8301cdd4f671ad3b059c326e6">WriteBinaryAsString</a> (const void *pData, ezUInt32 uiBytes)</td></tr>
<tr class="memdesc:a9f5e3cf8301cdd4f671ad3b059c326e6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes a single string to the primitive list, but the value is a HEX representation of the given binary data.  <a href="../../d0/ddb/classez_open_ddl_writer.htm#a9f5e3cf8301cdd4f671ad3b059c326e6">More...</a><br /></td></tr>
<tr class="separator:a9f5e3cf8301cdd4f671ad3b059c326e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-types"></a>
Protected Types</h2></td></tr>
<tr class="memitem:a2086fb479be1734cc052404db0be133a"><td class="memItemLeft" align="right" valign="top"><a id="a2086fb479be1734cc052404db0be133a"></a>enum &#160;</td><td class="memItemRight" valign="bottom"><b>State</b> { <br />
&#160;&#160;<b>Invalid</b> = -5, 
<b>Empty</b> = -4, 
<b>ObjectSingleLine</b> = -3, 
<b>ObjectMultiLine</b> = -2, 
<br />
&#160;&#160;<b>ObjectStart</b> = -1, 
<b>PrimitivesBool</b> = 0, 
<b>PrimitivesInt8</b>, 
<b>PrimitivesInt16</b>, 
<br />
&#160;&#160;<b>PrimitivesInt32</b>, 
<b>PrimitivesInt64</b>, 
<b>PrimitivesUInt8</b>, 
<b>PrimitivesUInt16</b>, 
<br />
&#160;&#160;<b>PrimitivesUInt32</b>, 
<b>PrimitivesUInt64</b>, 
<b>PrimitivesFloat</b>, 
<b>PrimitivesDouble</b>, 
<br />
&#160;&#160;<b>PrimitivesString</b>
<br />
 }</td></tr>
<tr class="separator:a2086fb479be1734cc052404db0be133a"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:aa09d6a567ca7c5614e582e5c1d99af26"><td class="memItemLeft" align="right" valign="top"><a id="aa09d6a567ca7c5614e582e5c1d99af26"></a>
EZ_ALWAYS_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><b>OutputString</b> (const char *sz)</td></tr>
<tr class="separator:aa09d6a567ca7c5614e582e5c1d99af26"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa67a3837f1a4ac23a4edc6b7a44ab058"><td class="memItemLeft" align="right" valign="top"><a id="aa67a3837f1a4ac23a4edc6b7a44ab058"></a>
EZ_ALWAYS_INLINE void&#160;</td><td class="memItemRight" valign="bottom"><b>OutputString</b> (const char *sz, ezUInt32 uiElementCount)</td></tr>
<tr class="separator:aa67a3837f1a4ac23a4edc6b7a44ab058"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b598665069e9f761b957aca229592a7"><td class="memItemLeft" align="right" valign="top"><a id="a0b598665069e9f761b957aca229592a7"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>OutputEscapedString</b> (const <a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a> &amp;string)</td></tr>
<tr class="separator:a0b598665069e9f761b957aca229592a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abfcc335ad92fd7e78899a26bd6b04880"><td class="memItemLeft" align="right" valign="top"><a id="abfcc335ad92fd7e78899a26bd6b04880"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>OutputIndentation</b> ()</td></tr>
<tr class="separator:abfcc335ad92fd7e78899a26bd6b04880"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80eae925184fa507403c4116bf1c5f3e"><td class="memItemLeft" align="right" valign="top"><a id="a80eae925184fa507403c4116bf1c5f3e"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>OutputPrimitiveTypeNameCompliant</b> (ezOpenDdlPrimitiveType type)</td></tr>
<tr class="separator:a80eae925184fa507403c4116bf1c5f3e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a23a63c2c2bf7685db06451ff9c5b521d"><td class="memItemLeft" align="right" valign="top"><a id="a23a63c2c2bf7685db06451ff9c5b521d"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>OutputPrimitiveTypeNameShort</b> (ezOpenDdlPrimitiveType type)</td></tr>
<tr class="separator:a23a63c2c2bf7685db06451ff9c5b521d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a14c520b5011624df3d45ece2f58c82a1"><td class="memItemLeft" align="right" valign="top"><a id="a14c520b5011624df3d45ece2f58c82a1"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>OutputPrimitiveTypeNameShortest</b> (ezOpenDdlPrimitiveType type)</td></tr>
<tr class="separator:a14c520b5011624df3d45ece2f58c82a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aff6b1ad754daff5bb40081d34e5d2e89"><td class="memItemLeft" align="right" valign="top"><a id="aff6b1ad754daff5bb40081d34e5d2e89"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>WritePrimitiveType</b> (ezOpenDdlWriter::State exp)</td></tr>
<tr class="separator:aff6b1ad754daff5bb40081d34e5d2e89"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aefdf5ba66dfbf21a3eaffd62a18cf5e5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#aefdf5ba66dfbf21a3eaffd62a18cf5e5">OutputObjectName</a> (const char *szName, bool bGlobalName)</td></tr>
<tr class="separator:aefdf5ba66dfbf21a3eaffd62a18cf5e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aedccea3f01f19b2ac31cb00b546ae3fa"><td class="memItemLeft" align="right" valign="top"><a id="aedccea3f01f19b2ac31cb00b546ae3fa"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>WriteBinaryAsHex</b> (const void *pData, ezUInt32 uiBytes)</td></tr>
<tr class="separator:aedccea3f01f19b2ac31cb00b546ae3fa"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa8b819f772b95975ee6d7a8598d529d3"><td class="memItemLeft" align="right" valign="top"><a id="aa8b819f772b95975ee6d7a8598d529d3"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>OutputObjectBeginning</b> ()</td></tr>
<tr class="separator:aa8b819f772b95975ee6d7a8598d529d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a33fb0b18a1966fed6d5bf8ac44e11f32"><td class="memItemLeft" align="right" valign="top"><a id="a33fb0b18a1966fed6d5bf8ac44e11f32"></a>
ezInt32&#160;</td><td class="memItemRight" valign="bottom"><b>m_iIndentation</b></td></tr>
<tr class="separator:a33fb0b18a1966fed6d5bf8ac44e11f32"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a04c2ea2466c6ae19900205d3861a8e31"><td class="memItemLeft" align="right" valign="top"><a id="a04c2ea2466c6ae19900205d3861a8e31"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>m_bCompactMode</b></td></tr>
<tr class="separator:a04c2ea2466c6ae19900205d3861a8e31"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e4b152fab7ecd0e3de4ed010d2f849f"><td class="memItemLeft" align="right" valign="top"><a id="a9e4b152fab7ecd0e3de4ed010d2f849f"></a>
<a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#ac979ff3b3595bc87506be39e55b0c5d2">TypeStringMode</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_TypeStringMode</b></td></tr>
<tr class="separator:a9e4b152fab7ecd0e3de4ed010d2f849f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a93acd02d621ad4b583aa83509d6d2dd6"><td class="memItemLeft" align="right" valign="top"><a id="a93acd02d621ad4b583aa83509d6d2dd6"></a>
<a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#a84e5b5178414d764add6a840a0bedeaa">FloatPrecisionMode</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_FloatPrecisionMode</b></td></tr>
<tr class="separator:a93acd02d621ad4b583aa83509d6d2dd6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aadd4868e8d3905a3ebb9a8b7d1c9d02a"><td class="memItemLeft" align="right" valign="top"><a id="aadd4868e8d3905a3ebb9a8b7d1c9d02a"></a>
<a class="el" href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>m_pOutput</b></td></tr>
<tr class="separator:aadd4868e8d3905a3ebb9a8b7d1c9d02a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a111c86dadac71374f7408b232bd7c2d2"><td class="memItemLeft" align="right" valign="top"><a id="a111c86dadac71374f7408b232bd7c2d2"></a>
<a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_Temp</b></td></tr>
<tr class="separator:a111c86dadac71374f7408b232bd7c2d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a521e7a1fe23951a6a290fced01278892"><td class="memItemLeft" align="right" valign="top"><a id="a521e7a1fe23951a6a290fced01278892"></a>
<a class="el" href="../../d8/deb/classez_hybrid_array.htm">ezHybridArray</a>&lt; <a class="el" href="../../d3/d22/structez_open_ddl_writer_1_1_ddl_state.htm">DdlState</a>, 16 &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_StateStack</b></td></tr>
<tr class="separator:a521e7a1fe23951a6a290fced01278892"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>The base class for OpenDDL writers. </p>
<p>Declares a common interface for writing OpenDDL files. </p>
</div><h2 class="groupheader">Member Enumeration Documentation</h2>
<a id="a84e5b5178414d764add6a840a0bedeaa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a84e5b5178414d764add6a840a0bedeaa">&#9670;&nbsp;</a></span>FloatPrecisionMode</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#a84e5b5178414d764add6a840a0bedeaa">ezOpenDdlWriter::FloatPrecisionMode</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a84e5b5178414d764add6a840a0bedeaaa4b8123df4e2b3456270c11394adf7607"></a>Readable&#160;</td><td class="fielddoc"><p>Float values are printed as readable numbers. Precision might get lost though. </p>
</td></tr>
<tr><td class="fieldname"><a id="a84e5b5178414d764add6a840a0bedeaaa1649aed298f99d587e2eb30c1db5946b"></a>Exact&#160;</td><td class="fielddoc"><p>Float values are printed as HEX, representing the exact binary data. </p>
</td></tr>
</table>

</div>
</div>
<a id="ac979ff3b3595bc87506be39e55b0c5d2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac979ff3b3595bc87506be39e55b0c5d2">&#9670;&nbsp;</a></span>TypeStringMode</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#ac979ff3b3595bc87506be39e55b0c5d2">ezOpenDdlWriter::TypeStringMode</a></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">strong</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="ac979ff3b3595bc87506be39e55b0c5d2a952358fc53c0167a1ea7354f338ed5af"></a>Compliant&#160;</td><td class="fielddoc"><p>All primitive types are written as the OpenDDL standard defines them (very verbose) </p>
</td></tr>
<tr><td class="fieldname"><a id="ac979ff3b3595bc87506be39e55b0c5d2a5b3571429e97357bc5cd927384ed2d10"></a>ShortenedUnsignedInt&#160;</td><td class="fielddoc"><p>unsigned_intX is shortened to uintX </p>
</td></tr>
<tr><td class="fieldname"><a id="ac979ff3b3595bc87506be39e55b0c5d2ace42b65744e60ed9b32e7d4f750a66a5"></a>Shortest&#160;</td><td class="fielddoc"><p>All primitive type names are shortened to one or two characters: i1, i2, i3, i4, u1, u2, u3, u4, b, s, f, d (int, uint, bool, string, float, double) </p>
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="aefdf5ba66dfbf21a3eaffd62a18cf5e5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aefdf5ba66dfbf21a3eaffd62a18cf5e5">&#9670;&nbsp;</a></span>OutputObjectName()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ezOpenDdlWriter::OutputObjectName </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>szName</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bGlobalName</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="test"><dt><b><a class="el" href="../../d4/df6/test.htm#_test000015">Test:</a></b></dt><dd>This code path is untested </dd></dl>

</div>
</div>
<a id="a9f5e3cf8301cdd4f671ad3b059c326e6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9f5e3cf8301cdd4f671ad3b059c326e6">&#9670;&nbsp;</a></span>WriteBinaryAsString()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ezOpenDdlWriter::WriteBinaryAsString </td>
          <td>(</td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>pData</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ezUInt32&#160;</td>
          <td class="paramname"><em>uiBytes</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Writes a single string to the primitive list, but the value is a HEX representation of the given binary data. </p>
<dl class="test"><dt><b><a class="el" href="../../d4/df6/test.htm#_test000016">Test:</a></b></dt><dd><a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm#a9f5e3cf8301cdd4f671ad3b059c326e6" title="Writes a single string to the primitive list, but the value is a HEX representation of the given bina...">ezOpenDdlWriter::WriteBinaryAsString</a> </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/IO/<a class="el" href="../../d3/d29/_open_ddl_writer_8h_source.htm">OpenDdlWriter.h</a></li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/IO/Implementation/OpenDdlWriter.cpp</li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d0/ddb/classez_open_ddl_writer.htm">ezOpenDdlWriter</a></li>
    <li class="footer">Generated on Mon Oct 18 2021 15:24:19 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
