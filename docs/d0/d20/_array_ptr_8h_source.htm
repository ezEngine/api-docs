<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Types/ArrayPtr.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">ezEngine<span id="projectnumber">&#160;Release 25.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function() { init_codefold(1); });
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('d0/d20/_array_ptr_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">ArrayPtr.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="preprocessor">#include &lt;Foundation/Memory/MemoryUtils.h&gt;</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span> </div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="preprocessor">#include &lt;Foundation/Containers/Implementation/ArrayIterator.h&gt;</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span> </div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="comment">// This #include is quite vital, do not remove it!</span></div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="preprocessor">#include &lt;Foundation/Strings/FormatString.h&gt;</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span> </div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span><span class="preprocessor">#include &lt;Foundation/Math/Math.h&gt;</span></div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span> </div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span><span class="preprocessor">#if EZ_ENABLED(EZ_INTEROP_STL_SPAN)</span></div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span><span class="preprocessor">#  include &lt;span&gt;</span></div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span> </div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span><span class="preprocessor">#ifndef ezInvalidIndex</span></div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span><span class="preprocessor">#  define ezInvalidIndex 0xFFFFFFFF</span></div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span> </div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span><span class="keyword">namespace </span>ezArrayPtrDetail</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span>{</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div>
<div class="foldopen" id="foldopen00024" data-start="{" data-end="};">
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno"><a class="line" href="../../d6/dbd/structez_array_ptr_detail_1_1_byte_type_helper.htm">   24</a></span>  <span class="keyword">struct </span><a class="code hl_struct" href="../../d6/dbd/structez_array_ptr_detail_1_1_byte_type_helper.htm">ByteTypeHelper</a></div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span>  {</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span>    <span class="keyword">using </span>type = ezUInt8;</div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span>  };</div>
</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span> </div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div>
<div class="foldopen" id="foldopen00030" data-start="{" data-end="};">
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno"><a class="line" href="../../de/d3c/structez_array_ptr_detail_1_1_byte_type_helper_3_01const_01_u_01_4.htm">   30</a></span>  <span class="keyword">struct </span><a class="code hl_struct" href="../../d6/dbd/structez_array_ptr_detail_1_1_byte_type_helper.htm">ByteTypeHelper</a>&lt;const U&gt;</div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span>  {</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span>    <span class="keyword">using </span>type = <span class="keyword">const</span> ezUInt8;</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>  };</div>
</div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span>} <span class="comment">// namespace ezArrayPtrDetail</span></div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span> </div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="foldopen" id="foldopen00040" data-start="{" data-end="};">
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno"><a class="line" href="../../dc/dae/classez_array_ptr.htm">   40</a></span><span class="keyword">class </span><a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a></div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>{</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span>  <span class="keyword">friend</span> <span class="keyword">class </span><a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>;</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span> </div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span>  EZ_DECLARE_POD_TYPE();</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span> </div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>  <span class="keyword">static_assert</span>(!std::is_same_v&lt;T, void&gt;, <span class="stringliteral">&quot;ezArrayPtr&lt;void&gt; is not allowed (anymore)&quot;</span>);</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span>  <span class="keyword">static_assert</span>(!std::is_same_v&lt;T, const void&gt;, <span class="stringliteral">&quot;ezArrayPtr&lt;void&gt; is not allowed (anymore)&quot;</span>);</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span> </div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>  <span class="keyword">using </span>ByteType = <span class="keyword">typename</span> ezArrayPtrDetail::ByteTypeHelper&lt;T&gt;::type;</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>  <span class="keyword">using </span>ValueType = T;</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>  <span class="keyword">using </span>PointerType = T*;</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span> </div>
<div class="foldopen" id="foldopen00056" data-start="{" data-end="}">
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno"><a class="line" href="../../dc/dae/classez_array_ptr.htm#a7fda1bd42cdec0e38ae46d99c9d0d0e4">   56</a></span>  EZ_ALWAYS_INLINE <a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a7fda1bd42cdec0e38ae46d99c9d0d0e4">ezArrayPtr</a>() <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>    : m_pPtr(nullptr)</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>    , m_uiCount(0u)</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>  {</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span>  }</div>
</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span> </div>
<div class="foldopen" id="foldopen00063" data-start="{" data-end="}">
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno"><a class="line" href="../../dc/dae/classez_array_ptr.htm#aee1fa89ad26b5a256d428fba6ef04d30">   63</a></span>  EZ_ALWAYS_INLINE <a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#aee1fa89ad26b5a256d428fba6ef04d30">ezArrayPtr</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;T&gt;</a>&amp; other) <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span>  {</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>    m_pPtr = other.m_pPtr;</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span>    m_uiCount = other.m_uiCount;</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>  }</div>
</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span> </div>
<div class="foldopen" id="foldopen00070" data-start="{" data-end="}">
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno"><a class="line" href="../../dc/dae/classez_array_ptr.htm#ae86bcb67eb6955c4bcb78a0f5296afa5">   70</a></span>  <span class="keyword">inline</span> <a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#ae86bcb67eb6955c4bcb78a0f5296afa5">ezArrayPtr</a>(T* pPtr, ezUInt32 uiCount) <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>    : m_pPtr(pPtr)</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>    , m_uiCount(uiCount)</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>  {</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>    <span class="comment">// If any of the arguments is invalid, we invalidate ourself.</span></div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>    <span class="keywordflow">if</span> (m_pPtr == <span class="keyword">nullptr</span> || m_uiCount == 0)</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>    {</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>      m_pPtr = <span class="keyword">nullptr</span>;</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>      m_uiCount = 0;</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span>    }</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>  }</div>
</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span> </div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>  <span class="keyword">template</span> &lt;<span class="keywordtype">size_t</span> N&gt;</div>
<div class="foldopen" id="foldopen00084" data-start="{" data-end="}">
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno"><a class="line" href="../../dc/dae/classez_array_ptr.htm#a72340e400182aa95d15bd67fa8a5e3cd">   84</a></span>  EZ_ALWAYS_INLINE <a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a72340e400182aa95d15bd67fa8a5e3cd">ezArrayPtr</a>(T (&amp;staticArray)[N]) <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>    : m_pPtr(staticArray)</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>    , m_uiCount(static_cast&lt;ezUInt32&gt;(N))</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span>  {</div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>  }</div>
</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span> </div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div>
<div class="foldopen" id="foldopen00092" data-start="{" data-end="}">
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno"><a class="line" href="../../dc/dae/classez_array_ptr.htm#a2a60e59db75a5101abb471a146c340db">   92</a></span>  EZ_ALWAYS_INLINE <a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a2a60e59db75a5101abb471a146c340db">ezArrayPtr</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;U&gt;</a>&amp; other) <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>    : m_pPtr(other.m_pPtr)</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span>    , m_uiCount(other.m_uiCount)</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>  {</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>  }</div>
</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span> </div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span><span class="preprocessor">#if EZ_ENABLED(EZ_INTEROP_STL_SPAN)</span></div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>  EZ_ALWAYS_INLINE <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>(<span class="keyword">const</span> std::span&lt;U&gt;&amp; other)</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>    : m_pPtr(other.data())</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>    , m_uiCount((ezUInt32)other.size())</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>  {</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>  }</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span> </div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>  <span class="keyword">operator</span> std::span&lt;const T&gt;()<span class="keyword"> const</span></div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span><span class="keyword">  </span>{</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>    <span class="keywordflow">return</span> std::span(<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#aba4e7585190f337c6428f2fe25828b8a">GetPtr</a>(), <span class="keyword">static_cast&lt;</span><span class="keywordtype">size_t</span><span class="keyword">&gt;</span>(<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>()));</div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>  }</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span> </div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span>  <span class="keyword">operator</span> std::span&lt;T&gt;()</div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span>  {</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>    <span class="keywordflow">return</span> std::span(<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#aba4e7585190f337c6428f2fe25828b8a">GetPtr</a>(), <span class="keyword">static_cast&lt;</span><span class="keywordtype">size_t</span><span class="keyword">&gt;</span>(<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>()));</div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span>  }</div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span> </div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>  std::span&lt;T&gt; GetSpan()</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>  {</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span>    <span class="keywordflow">return</span> std::span(<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#aba4e7585190f337c6428f2fe25828b8a">GetPtr</a>(), <span class="keyword">static_cast&lt;</span><span class="keywordtype">size_t</span><span class="keyword">&gt;</span>(<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>()));</div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>  }</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span> </div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span>  std::span&lt;const T&gt; GetSpan()<span class="keyword"> const</span></div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span><span class="keyword">  </span>{</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span>    <span class="keywordflow">return</span> std::span(<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#aba4e7585190f337c6428f2fe25828b8a">GetPtr</a>(), <span class="keyword">static_cast&lt;</span><span class="keywordtype">size_t</span><span class="keyword">&gt;</span>(<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>()));</div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span>  }</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span> </div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno"><a class="line" href="../../dc/dae/classez_array_ptr.htm#acf661424131b05cb44aad430236c5041">  128</a></span>  <span class="keyword">operator</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const T&gt;</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const T&gt;</a>(<span class="keyword">static_cast&lt;</span><span class="keyword">const </span>T*<span class="keyword">&gt;</span>(<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#aba4e7585190f337c6428f2fe25828b8a">GetPtr</a>()), <a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>()); } <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span> </div>
<div class="foldopen" id="foldopen00131" data-start="{" data-end="}">
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno"><a class="line" href="../../dc/dae/classez_array_ptr.htm#ae7011299cdaa4c40c9af60ff0c605d16">  131</a></span>  EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#ae7011299cdaa4c40c9af60ff0c605d16">operator=</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;T&gt;</a>&amp; other) <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span>  {</div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span>    m_pPtr = other.m_pPtr;</div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>    m_uiCount = other.m_uiCount;</div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span>  }</div>
</div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span> </div>
<div class="foldopen" id="foldopen00138" data-start="{" data-end="}">
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno"><a class="line" href="../../dc/dae/classez_array_ptr.htm#aaa30da6efd86b458a82760b8a775abd4">  138</a></span>  EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#aaa30da6efd86b458a82760b8a775abd4">Clear</a>()</div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span>  {</div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>    m_pPtr = <span class="keyword">nullptr</span>;</div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span>    m_uiCount = 0;</div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>  }</div>
</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span> </div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span>  EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#ae7011299cdaa4c40c9af60ff0c605d16">operator=</a>(std::nullptr_t) <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span>  {</div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span>    m_pPtr = <span class="keyword">nullptr</span>;</div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span>    m_uiCount = 0;</div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span>  }</div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span> </div>
<div class="foldopen" id="foldopen00151" data-start="{" data-end="}">
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno"><a class="line" href="../../dc/dae/classez_array_ptr.htm#aba4e7585190f337c6428f2fe25828b8a">  151</a></span>  EZ_ALWAYS_INLINE PointerType <a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#aba4e7585190f337c6428f2fe25828b8a">GetPtr</a>() const <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span>  {</div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span>    <span class="keywordflow">return</span> m_pPtr;</div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span>  }</div>
</div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span> </div>
<div class="foldopen" id="foldopen00157" data-start="{" data-end="}">
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno"><a class="line" href="../../dc/dae/classez_array_ptr.htm#a77b8c958db61eb57fa9b7d1478588dc9">  157</a></span>  EZ_ALWAYS_INLINE PointerType <a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a77b8c958db61eb57fa9b7d1478588dc9">GetPtr</a>() <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span>  {</div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span>    <span class="keywordflow">return</span> m_pPtr;</div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span>  }</div>
</div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span> </div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno"><a class="line" href="../../dc/dae/classez_array_ptr.htm#ac55bb208683087dce2b5b00ea7ffd9ff">  163</a></span>  EZ_ALWAYS_INLINE PointerType <a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#ac55bb208683087dce2b5b00ea7ffd9ff">GetEndPtr</a>() { <span class="keywordflow">return</span> m_pPtr + m_uiCount; }</div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span> </div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno"><a class="line" href="../../dc/dae/classez_array_ptr.htm#a4d370cc1835edb7de263534115bf0972">  166</a></span>  EZ_ALWAYS_INLINE PointerType <a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a4d370cc1835edb7de263534115bf0972">GetEndPtr</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_pPtr + m_uiCount; }</div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span> </div>
<div class="foldopen" id="foldopen00169" data-start="{" data-end="}">
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno"><a class="line" href="../../dc/dae/classez_array_ptr.htm#a0c22c58557948f308334f512fda9e0d8">  169</a></span>  EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a0c22c58557948f308334f512fda9e0d8">IsEmpty</a>() const <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span>  {</div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span>    <span class="keywordflow">return</span> <a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>() == 0;</div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span>  }</div>
</div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span> </div>
<div class="foldopen" id="foldopen00175" data-start="{" data-end="}">
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno"><a class="line" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">  175</a></span>  EZ_ALWAYS_INLINE ezUInt32 <a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>() const <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span>  {</div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span>    <span class="keywordflow">return</span> m_uiCount;</div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span>  }</div>
</div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span> </div>
<div class="foldopen" id="foldopen00181" data-start="{" data-end="}">
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno"><a class="line" href="../../dc/dae/classez_array_ptr.htm#a839c0c038a82368f263414ac040f647f">  181</a></span>  EZ_FORCE_INLINE <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;T&gt;</a> <a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a839c0c038a82368f263414ac040f647f">GetSubArray</a>(ezUInt32 uiStart, ezUInt32 uiCount) <span class="keyword">const</span> <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span>  {</div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno">  183</span>    <span class="comment">// the first check is necessary to also detect errors when uiStart+uiCount would overflow</span></div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span>    EZ_ASSERT_DEV(uiStart &lt;= <a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>() &amp;&amp; uiStart + uiCount &lt;= <a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>(), <span class="stringliteral">&quot;uiStart+uiCount ({0}) has to be smaller or equal than the count ({1}).&quot;</span>,</div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span>      uiStart + uiCount, <a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>());</div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span>    <span class="keywordflow">return</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;T&gt;</a>(<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#aba4e7585190f337c6428f2fe25828b8a">GetPtr</a>() + uiStart, uiCount);</div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span>  }</div>
</div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span> </div>
<div class="foldopen" id="foldopen00191" data-start="{" data-end="}">
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno"><a class="line" href="../../dc/dae/classez_array_ptr.htm#a908aab214cf50364fe5705a37ca6f127">  191</a></span>  EZ_FORCE_INLINE <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;T&gt;</a> <a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a908aab214cf50364fe5705a37ca6f127">GetSubArray</a>(ezUInt32 uiStart) <span class="keyword">const</span> <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span>  {</div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span>    EZ_ASSERT_DEV(uiStart &lt;= <a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>(), <span class="stringliteral">&quot;uiStart ({0}) has to be smaller or equal than the count ({1}).&quot;</span>, uiStart, <a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>());</div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span>    <span class="keywordflow">return</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;T&gt;</a>(<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#aba4e7585190f337c6428f2fe25828b8a">GetPtr</a>() + uiStart, <a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>() - uiStart);</div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span>  }</div>
</div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span> </div>
<div class="foldopen" id="foldopen00198" data-start="{" data-end="}">
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno"><a class="line" href="../../dc/dae/classez_array_ptr.htm#a269689cbd5471d18dc7b23d450701a10">  198</a></span>  EZ_ALWAYS_INLINE <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const ByteType&gt;</a> <a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a269689cbd5471d18dc7b23d450701a10">ToByteArray</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00199" name="l00199"></a><span class="lineno">  199</span><span class="keyword">  </span>{</div>
<div class="line"><a id="l00200" name="l00200"></a><span class="lineno">  200</span>    <span class="keywordflow">return</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const ByteType&gt;</a>(<span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>ByteType*<span class="keyword">&gt;</span>(<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#aba4e7585190f337c6428f2fe25828b8a">GetPtr</a>()), <a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>() * <span class="keyword">sizeof</span>(T));</div>
<div class="line"><a id="l00201" name="l00201"></a><span class="lineno">  201</span>  }</div>
</div>
<div class="line"><a id="l00202" name="l00202"></a><span class="lineno">  202</span> </div>
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno"><a class="line" href="../../dc/dae/classez_array_ptr.htm#a529e706877f2481e6ec6a90a5b0ebd0d">  204</a></span>  EZ_ALWAYS_INLINE <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;ByteType&gt;</a> <a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a529e706877f2481e6ec6a90a5b0ebd0d">ToByteArray</a>() { <span class="keywordflow">return</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;ByteType&gt;</a>(<span class="keyword">reinterpret_cast&lt;</span>ByteType*<span class="keyword">&gt;</span>(<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#aba4e7585190f337c6428f2fe25828b8a">GetPtr</a>()), <a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>() * <span class="keyword">sizeof</span>(T)); }</div>
<div class="line"><a id="l00205" name="l00205"></a><span class="lineno">  205</span> </div>
<div class="line"><a id="l00206" name="l00206"></a><span class="lineno">  206</span> </div>
<div class="line"><a id="l00208" name="l00208"></a><span class="lineno">  208</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div>
<div class="foldopen" id="foldopen00209" data-start="{" data-end="}">
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno"><a class="line" href="../../dc/dae/classez_array_ptr.htm#a1ef40b2cc4506522ef994ba7aa290f4a">  209</a></span>  EZ_ALWAYS_INLINE <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;U&gt;</a> <a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a1ef40b2cc4506522ef994ba7aa290f4a">Cast</a>()</div>
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno">  210</span>  {</div>
<div class="line"><a id="l00211" name="l00211"></a><span class="lineno">  211</span>    <span class="keyword">static_assert</span>(<span class="keyword">sizeof</span>(T) == <span class="keyword">sizeof</span>(U), <span class="stringliteral">&quot;Can only cast with equivalent element size.&quot;</span>);</div>
<div class="line"><a id="l00212" name="l00212"></a><span class="lineno">  212</span>    <span class="keywordflow">return</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;U&gt;</a>(<span class="keyword">reinterpret_cast&lt;</span>U*<span class="keyword">&gt;</span>(<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#aba4e7585190f337c6428f2fe25828b8a">GetPtr</a>()), <a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>());</div>
<div class="line"><a id="l00213" name="l00213"></a><span class="lineno">  213</span>  }</div>
</div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno">  214</span> </div>
<div class="line"><a id="l00216" name="l00216"></a><span class="lineno">  216</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div>
<div class="foldopen" id="foldopen00217" data-start="{" data-end="}">
<div class="line"><a id="l00217" name="l00217"></a><span class="lineno"><a class="line" href="../../dc/dae/classez_array_ptr.htm#a92aa806acaac29171ea8dc0404306f12">  217</a></span>  EZ_ALWAYS_INLINE <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const U&gt;</a> <a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a92aa806acaac29171ea8dc0404306f12">Cast</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00218" name="l00218"></a><span class="lineno">  218</span><span class="keyword">  </span>{</div>
<div class="line"><a id="l00219" name="l00219"></a><span class="lineno">  219</span>    <span class="keyword">static_assert</span>(<span class="keyword">sizeof</span>(T) == <span class="keyword">sizeof</span>(U), <span class="stringliteral">&quot;Can only cast with equivalent element size.&quot;</span>);</div>
<div class="line"><a id="l00220" name="l00220"></a><span class="lineno">  220</span>    <span class="keywordflow">return</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const U&gt;</a>(<span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span>U*<span class="keyword">&gt;</span>(<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#aba4e7585190f337c6428f2fe25828b8a">GetPtr</a>()), <a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>());</div>
<div class="line"><a id="l00221" name="l00221"></a><span class="lineno">  221</span>  }</div>
</div>
<div class="line"><a id="l00222" name="l00222"></a><span class="lineno">  222</span> </div>
<div class="foldopen" id="foldopen00224" data-start="{" data-end="}">
<div class="line"><a id="l00224" name="l00224"></a><span class="lineno"><a class="line" href="../../dc/dae/classez_array_ptr.htm#a8cea97c00a9c6c8d43690ddf596f72fa">  224</a></span>  EZ_FORCE_INLINE <span class="keyword">const</span> ValueType&amp; <a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a8cea97c00a9c6c8d43690ddf596f72fa">operator[]</a>(ezUInt32 uiIndex) <span class="keyword">const</span> <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00225" name="l00225"></a><span class="lineno">  225</span>  {</div>
<div class="line"><a id="l00226" name="l00226"></a><span class="lineno">  226</span>    EZ_ASSERT_DEBUG(uiIndex &lt; <a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>(), <span class="stringliteral">&quot;Cannot access element {0}, the array only holds {1} elements.&quot;</span>, uiIndex, <a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>());</div>
<div class="line"><a id="l00227" name="l00227"></a><span class="lineno">  227</span>    <span class="keywordflow">return</span> *<span class="keyword">static_cast&lt;</span><span class="keyword">const </span>ValueType*<span class="keyword">&gt;</span>(<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#aba4e7585190f337c6428f2fe25828b8a">GetPtr</a>() + uiIndex);</div>
<div class="line"><a id="l00228" name="l00228"></a><span class="lineno">  228</span>  }</div>
</div>
<div class="line"><a id="l00229" name="l00229"></a><span class="lineno">  229</span> </div>
<div class="foldopen" id="foldopen00231" data-start="{" data-end="}">
<div class="line"><a id="l00231" name="l00231"></a><span class="lineno"><a class="line" href="../../dc/dae/classez_array_ptr.htm#afd79e6696c2f1ef806a36b51507c7bc0">  231</a></span>  EZ_FORCE_INLINE ValueType&amp; <a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#afd79e6696c2f1ef806a36b51507c7bc0">operator[]</a>(ezUInt32 uiIndex) <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00232" name="l00232"></a><span class="lineno">  232</span>  {</div>
<div class="line"><a id="l00233" name="l00233"></a><span class="lineno">  233</span>    EZ_ASSERT_DEBUG(uiIndex &lt; <a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>(), <span class="stringliteral">&quot;Cannot access element {0}, the array only holds {1} elements.&quot;</span>, uiIndex, <a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>());</div>
<div class="line"><a id="l00234" name="l00234"></a><span class="lineno">  234</span>    <span class="keywordflow">return</span> *<span class="keyword">static_cast&lt;</span>ValueType*<span class="keyword">&gt;</span>(<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#aba4e7585190f337c6428f2fe25828b8a">GetPtr</a>() + uiIndex);</div>
<div class="line"><a id="l00235" name="l00235"></a><span class="lineno">  235</span>  }</div>
</div>
<div class="line"><a id="l00236" name="l00236"></a><span class="lineno">  236</span> </div>
<div class="line"><a id="l00238" name="l00238"></a><span class="lineno">  238</span>  template &lt;typename = typename std::enable_if&lt;std::is_const&lt;T&gt;::value == <span class="keyword">false</span>&gt;&gt;</div>
<div class="foldopen" id="foldopen00239" data-start="{" data-end="}">
<div class="line"><a id="l00239" name="l00239"></a><span class="lineno"><a class="line" href="../../dc/dae/classez_array_ptr.htm#adb9c3c11f987d32596525d427d77da51">  239</a></span>  <span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#adb9c3c11f987d32596525d427d77da51">operator==</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const T&gt;</a>&amp; other) <span class="keyword">const</span> <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00240" name="l00240"></a><span class="lineno">  240</span>  {</div>
<div class="line"><a id="l00241" name="l00241"></a><span class="lineno">  241</span>    <span class="keywordflow">if</span> (<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>() != other.GetCount())</div>
<div class="line"><a id="l00242" name="l00242"></a><span class="lineno">  242</span>      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00243" name="l00243"></a><span class="lineno">  243</span> </div>
<div class="line"><a id="l00244" name="l00244"></a><span class="lineno">  244</span>    <span class="keywordflow">if</span> (<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#aba4e7585190f337c6428f2fe25828b8a">GetPtr</a>() == other.GetPtr())</div>
<div class="line"><a id="l00245" name="l00245"></a><span class="lineno">  245</span>      <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a id="l00246" name="l00246"></a><span class="lineno">  246</span> </div>
<div class="line"><a id="l00247" name="l00247"></a><span class="lineno">  247</span>    <span class="keywordflow">return</span> <a class="code hl_function" href="../../dc/d4d/classez_memory_utils.htm#a744d60b4b000c61f2dd3819a12410595">ezMemoryUtils::IsEqual</a>(<span class="keyword">static_cast&lt;</span><span class="keyword">const </span>ValueType*<span class="keyword">&gt;</span>(<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#aba4e7585190f337c6428f2fe25828b8a">GetPtr</a>()), <span class="keyword">static_cast&lt;</span><span class="keyword">const </span>ValueType*<span class="keyword">&gt;</span>(other.GetPtr()), <a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>());</div>
<div class="line"><a id="l00248" name="l00248"></a><span class="lineno">  248</span>  }</div>
</div>
<div class="line"><a id="l00249" name="l00249"></a><span class="lineno">  249</span> </div>
<div class="line"><a id="l00250" name="l00250"></a><span class="lineno">  250</span><span class="preprocessor">#if EZ_DISABLED(EZ_USE_CPP20_OPERATORS)</span></div>
<div class="line"><a id="l00251" name="l00251"></a><span class="lineno">  251</span>  template &lt;typename = typename std::enable_if&lt;std::is_const&lt;T&gt;::value == <span class="keyword">false</span>&gt;&gt;</div>
<div class="line"><a id="l00252" name="l00252"></a><span class="lineno">  252</span>  <span class="keyword">inline</span> <span class="keywordtype">bool</span> operator!=(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const T&gt;</a>&amp; other) <span class="keyword">const</span> <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00253" name="l00253"></a><span class="lineno">  253</span>  {</div>
<div class="line"><a id="l00254" name="l00254"></a><span class="lineno">  254</span>    <span class="keywordflow">return</span> !(*<span class="keyword">this</span> == other);</div>
<div class="line"><a id="l00255" name="l00255"></a><span class="lineno">  255</span>  }</div>
<div class="line"><a id="l00256" name="l00256"></a><span class="lineno">  256</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00257" name="l00257"></a><span class="lineno">  257</span> </div>
<div class="foldopen" id="foldopen00259" data-start="{" data-end="}">
<div class="line"><a id="l00259" name="l00259"></a><span class="lineno"><a class="line" href="../../dc/dae/classez_array_ptr.htm#a20fd4a63ebe29d4b53bee74dbab9818b">  259</a></span>  <span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a20fd4a63ebe29d4b53bee74dbab9818b">operator==</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;T&gt;</a>&amp; other) <span class="keyword">const</span> <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00260" name="l00260"></a><span class="lineno">  260</span>  {</div>
<div class="line"><a id="l00261" name="l00261"></a><span class="lineno">  261</span>    <span class="keywordflow">if</span> (<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>() != other.GetCount())</div>
<div class="line"><a id="l00262" name="l00262"></a><span class="lineno">  262</span>      <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00263" name="l00263"></a><span class="lineno">  263</span> </div>
<div class="line"><a id="l00264" name="l00264"></a><span class="lineno">  264</span>    <span class="keywordflow">if</span> (<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#aba4e7585190f337c6428f2fe25828b8a">GetPtr</a>() == other.GetPtr())</div>
<div class="line"><a id="l00265" name="l00265"></a><span class="lineno">  265</span>      <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a id="l00266" name="l00266"></a><span class="lineno">  266</span> </div>
<div class="line"><a id="l00267" name="l00267"></a><span class="lineno">  267</span>    <span class="keywordflow">return</span> <a class="code hl_function" href="../../dc/d4d/classez_memory_utils.htm#a744d60b4b000c61f2dd3819a12410595">ezMemoryUtils::IsEqual</a>(<span class="keyword">static_cast&lt;</span><span class="keyword">const </span>ValueType*<span class="keyword">&gt;</span>(<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#aba4e7585190f337c6428f2fe25828b8a">GetPtr</a>()), <span class="keyword">static_cast&lt;</span><span class="keyword">const </span>ValueType*<span class="keyword">&gt;</span>(other.GetPtr()), <a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>());</div>
<div class="line"><a id="l00268" name="l00268"></a><span class="lineno">  268</span>  }</div>
</div>
<div class="line"><a id="l00269" name="l00269"></a><span class="lineno">  269</span>  EZ_ADD_DEFAULT_OPERATOR_NOTEQUAL(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;T&gt;</a>&amp;);</div>
<div class="line"><a id="l00270" name="l00270"></a><span class="lineno">  270</span> </div>
<div class="foldopen" id="foldopen00272" data-start="{" data-end="}">
<div class="line"><a id="l00272" name="l00272"></a><span class="lineno"><a class="line" href="../../dc/dae/classez_array_ptr.htm#a6966f3eb34ead18fa2c57528fd7308bf">  272</a></span>  <span class="keyword">inline</span> <span class="keywordtype">bool</span> <a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a6966f3eb34ead18fa2c57528fd7308bf">operator&lt;</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const T&gt;</a>&amp; other) <span class="keyword">const</span> <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00273" name="l00273"></a><span class="lineno">  273</span>  {</div>
<div class="line"><a id="l00274" name="l00274"></a><span class="lineno">  274</span>    <span class="keywordflow">if</span> (<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>() != other.GetCount())</div>
<div class="line"><a id="l00275" name="l00275"></a><span class="lineno">  275</span>      <span class="keywordflow">return</span> <a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>() &lt; other.GetCount();</div>
<div class="line"><a id="l00276" name="l00276"></a><span class="lineno">  276</span> </div>
<div class="line"><a id="l00277" name="l00277"></a><span class="lineno">  277</span>    <span class="keywordflow">for</span> (ezUInt32 i = 0; i &lt; <a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>(); ++i)</div>
<div class="line"><a id="l00278" name="l00278"></a><span class="lineno">  278</span>    {</div>
<div class="line"><a id="l00279" name="l00279"></a><span class="lineno">  279</span>      <span class="keywordflow">if</span> (<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#aba4e7585190f337c6428f2fe25828b8a">GetPtr</a>()[i] &lt; other.GetPtr()[i])</div>
<div class="line"><a id="l00280" name="l00280"></a><span class="lineno">  280</span>        <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a id="l00281" name="l00281"></a><span class="lineno">  281</span> </div>
<div class="line"><a id="l00282" name="l00282"></a><span class="lineno">  282</span>      <span class="keywordflow">if</span> (other.GetPtr()[i] &lt; <a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#aba4e7585190f337c6428f2fe25828b8a">GetPtr</a>()[i])</div>
<div class="line"><a id="l00283" name="l00283"></a><span class="lineno">  283</span>        <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00284" name="l00284"></a><span class="lineno">  284</span>    }</div>
<div class="line"><a id="l00285" name="l00285"></a><span class="lineno">  285</span> </div>
<div class="line"><a id="l00286" name="l00286"></a><span class="lineno">  286</span>    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00287" name="l00287"></a><span class="lineno">  287</span>  }</div>
</div>
<div class="line"><a id="l00288" name="l00288"></a><span class="lineno">  288</span> </div>
<div class="foldopen" id="foldopen00290" data-start="{" data-end="}">
<div class="line"><a id="l00290" name="l00290"></a><span class="lineno"><a class="line" href="../../dc/dae/classez_array_ptr.htm#a6f9c67ad2a0f43986e8bbc35dc5f2ab3">  290</a></span>  <span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a6f9c67ad2a0f43986e8bbc35dc5f2ab3">CopyFrom</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const T&gt;</a>&amp; other) <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00291" name="l00291"></a><span class="lineno">  291</span>  {</div>
<div class="line"><a id="l00292" name="l00292"></a><span class="lineno">  292</span>    EZ_ASSERT_DEV(<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>() == other.<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>(), <span class="stringliteral">&quot;Count for copy does not match. Target has {0} elements, source {1} elements&quot;</span>, <a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>(), other.<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>());</div>
<div class="line"><a id="l00293" name="l00293"></a><span class="lineno">  293</span> </div>
<div class="line"><a id="l00294" name="l00294"></a><span class="lineno">  294</span>    <a class="code hl_function" href="../../dc/d4d/classez_memory_utils.htm#a87c41811a95fa63da651f6779931d9cf">ezMemoryUtils::Copy</a>(<span class="keyword">static_cast&lt;</span>ValueType*<span class="keyword">&gt;</span>(<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#aba4e7585190f337c6428f2fe25828b8a">GetPtr</a>()), <span class="keyword">static_cast&lt;</span><span class="keyword">const </span>ValueType*<span class="keyword">&gt;</span>(other.<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#aba4e7585190f337c6428f2fe25828b8a">GetPtr</a>()), <a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>());</div>
<div class="line"><a id="l00295" name="l00295"></a><span class="lineno">  295</span>  }</div>
</div>
<div class="line"><a id="l00296" name="l00296"></a><span class="lineno">  296</span> </div>
<div class="line"><a id="l00297" name="l00297"></a><span class="lineno">  297</span>  EZ_ALWAYS_INLINE <span class="keywordtype">void</span> Swap(<a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;T&gt;</a>&amp; other)</div>
<div class="line"><a id="l00298" name="l00298"></a><span class="lineno">  298</span>  {</div>
<div class="line"><a id="l00299" name="l00299"></a><span class="lineno">  299</span>    <a class="code hl_function" href="../../db/d78/namespaceez_math.htm#a0cd624055a97c96719b925cb11e6a08e">::ezMath::Swap</a>(m_pPtr, other.m_pPtr);</div>
<div class="line"><a id="l00300" name="l00300"></a><span class="lineno">  300</span>    <a class="code hl_function" href="../../db/d78/namespaceez_math.htm#a0cd624055a97c96719b925cb11e6a08e">::ezMath::Swap</a>(m_uiCount, other.m_uiCount);</div>
<div class="line"><a id="l00301" name="l00301"></a><span class="lineno">  301</span>  }</div>
<div class="line"><a id="l00302" name="l00302"></a><span class="lineno">  302</span> </div>
<div class="foldopen" id="foldopen00304" data-start="{" data-end="}">
<div class="line"><a id="l00304" name="l00304"></a><span class="lineno"><a class="line" href="../../dc/dae/classez_array_ptr.htm#a821667d4a33df54cd05e328df2a822e1">  304</a></span>  EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a821667d4a33df54cd05e328df2a822e1">Contains</a>(<span class="keyword">const</span> T&amp; value) <span class="keyword">const</span> <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00305" name="l00305"></a><span class="lineno">  305</span>  {</div>
<div class="line"><a id="l00306" name="l00306"></a><span class="lineno">  306</span>    <span class="keywordflow">return</span> <a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a68cc9ff010e3fa4ced3a59ab76f3f460">IndexOf</a>(value) != ezInvalidIndex;</div>
<div class="line"><a id="l00307" name="l00307"></a><span class="lineno">  307</span>  }</div>
</div>
<div class="line"><a id="l00308" name="l00308"></a><span class="lineno">  308</span> </div>
<div class="foldopen" id="foldopen00310" data-start="{" data-end="}">
<div class="line"><a id="l00310" name="l00310"></a><span class="lineno"><a class="line" href="../../dc/dae/classez_array_ptr.htm#a68cc9ff010e3fa4ced3a59ab76f3f460">  310</a></span>  <span class="keyword">inline</span> ezUInt32 <a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a68cc9ff010e3fa4ced3a59ab76f3f460">IndexOf</a>(<span class="keyword">const</span> T&amp; value, ezUInt32 uiStartIndex = 0) const <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00311" name="l00311"></a><span class="lineno">  311</span>  {</div>
<div class="line"><a id="l00312" name="l00312"></a><span class="lineno">  312</span>    <span class="keywordflow">for</span> (ezUInt32 i = uiStartIndex; i &lt; m_uiCount; ++i)</div>
<div class="line"><a id="l00313" name="l00313"></a><span class="lineno">  313</span>    {</div>
<div class="line"><a id="l00314" name="l00314"></a><span class="lineno">  314</span>      <span class="keywordflow">if</span> (<a class="code hl_function" href="../../dc/d4d/classez_memory_utils.htm#a744d60b4b000c61f2dd3819a12410595">ezMemoryUtils::IsEqual</a>(m_pPtr + i, &amp;value))</div>
<div class="line"><a id="l00315" name="l00315"></a><span class="lineno">  315</span>        <span class="keywordflow">return</span> i;</div>
<div class="line"><a id="l00316" name="l00316"></a><span class="lineno">  316</span>    }</div>
<div class="line"><a id="l00317" name="l00317"></a><span class="lineno">  317</span> </div>
<div class="line"><a id="l00318" name="l00318"></a><span class="lineno">  318</span>    <span class="keywordflow">return</span> ezInvalidIndex;</div>
<div class="line"><a id="l00319" name="l00319"></a><span class="lineno">  319</span>  }</div>
</div>
<div class="line"><a id="l00320" name="l00320"></a><span class="lineno">  320</span> </div>
<div class="foldopen" id="foldopen00322" data-start="{" data-end="}">
<div class="line"><a id="l00322" name="l00322"></a><span class="lineno"><a class="line" href="../../dc/dae/classez_array_ptr.htm#a655dfb1bf410d067ee9410d6986012fe">  322</a></span>  <span class="keyword">inline</span> ezUInt32 <a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a655dfb1bf410d067ee9410d6986012fe">LastIndexOf</a>(<span class="keyword">const</span> T&amp; value, ezUInt32 uiStartIndex = ezInvalidIndex) <span class="keyword">const</span> <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00323" name="l00323"></a><span class="lineno">  323</span>  {</div>
<div class="line"><a id="l00324" name="l00324"></a><span class="lineno">  324</span>    <span class="keywordflow">for</span> (ezUInt32 i = <a class="code hl_function" href="../../db/d78/namespaceez_math.htm#ad8009b4da9cb427658d71e30576f209e">::ezMath::Min</a>(uiStartIndex, m_uiCount); i-- &gt; 0;)</div>
<div class="line"><a id="l00325" name="l00325"></a><span class="lineno">  325</span>    {</div>
<div class="line"><a id="l00326" name="l00326"></a><span class="lineno">  326</span>      <span class="keywordflow">if</span> (<a class="code hl_function" href="../../dc/d4d/classez_memory_utils.htm#a744d60b4b000c61f2dd3819a12410595">ezMemoryUtils::IsEqual</a>(m_pPtr + i, &amp;value))</div>
<div class="line"><a id="l00327" name="l00327"></a><span class="lineno">  327</span>        <span class="keywordflow">return</span> i;</div>
<div class="line"><a id="l00328" name="l00328"></a><span class="lineno">  328</span>    }</div>
<div class="line"><a id="l00329" name="l00329"></a><span class="lineno">  329</span>    <span class="keywordflow">return</span> ezInvalidIndex;</div>
<div class="line"><a id="l00330" name="l00330"></a><span class="lineno">  330</span>  }</div>
</div>
<div class="line"><a id="l00331" name="l00331"></a><span class="lineno">  331</span> </div>
<div class="line"><a id="l00332" name="l00332"></a><span class="lineno">  332</span>  <span class="keyword">using </span>const_iterator = <span class="keyword">const</span> T*;</div>
<div class="line"><a id="l00333" name="l00333"></a><span class="lineno">  333</span>  <span class="keyword">using </span>const_reverse_iterator = <a class="code hl_struct" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">const_reverse_pointer_iterator&lt;T&gt;</a>;</div>
<div class="line"><a id="l00334" name="l00334"></a><span class="lineno">  334</span>  <span class="keyword">using </span>iterator = T*;</div>
<div class="line"><a id="l00335" name="l00335"></a><span class="lineno">  335</span>  <span class="keyword">using </span>reverse_iterator = <a class="code hl_struct" href="../../d3/df2/structreverse__pointer__iterator.htm">reverse_pointer_iterator&lt;T&gt;</a>;</div>
<div class="line"><a id="l00336" name="l00336"></a><span class="lineno">  336</span> </div>
<div class="line"><a id="l00337" name="l00337"></a><span class="lineno">  337</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00338" name="l00338"></a><span class="lineno">  338</span>  PointerType m_pPtr;</div>
<div class="line"><a id="l00339" name="l00339"></a><span class="lineno">  339</span>  ezUInt32 m_uiCount;</div>
<div class="line"><a id="l00340" name="l00340"></a><span class="lineno">  340</span>};</div>
</div>
<div class="line"><a id="l00341" name="l00341"></a><span class="lineno">  341</span> </div>
<div class="line"><a id="l00343" name="l00343"></a><span class="lineno">  343</span> </div>
<div class="line"><a id="l00344" name="l00344"></a><span class="lineno">  344</span><span class="keyword">using </span><a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezByteArrayPtr</a> = <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;ezUInt8&gt;</a>;</div>
<div class="line"><a id="l00345" name="l00345"></a><span class="lineno">  345</span><span class="keyword">using </span><a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezConstByteArrayPtr</a> = <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const ezUInt8&gt;</a>;</div>
<div class="line"><a id="l00346" name="l00346"></a><span class="lineno">  346</span> </div>
<div class="line"><a id="l00348" name="l00348"></a><span class="lineno">  348</span> </div>
<div class="line"><a id="l00350" name="l00350"></a><span class="lineno">  350</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00351" name="l00351"></a><span class="lineno">  351</span>EZ_ALWAYS_INLINE <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;T&gt;</a> ezMakeArrayPtr(T* pPtr, ezUInt32 uiCount)</div>
<div class="line"><a id="l00352" name="l00352"></a><span class="lineno">  352</span>{</div>
<div class="line"><a id="l00353" name="l00353"></a><span class="lineno">  353</span>  <span class="keywordflow">return</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;T&gt;</a>(pPtr, uiCount);</div>
<div class="line"><a id="l00354" name="l00354"></a><span class="lineno">  354</span>}</div>
<div class="line"><a id="l00355" name="l00355"></a><span class="lineno">  355</span> </div>
<div class="line"><a id="l00357" name="l00357"></a><span class="lineno">  357</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, ezUInt32 N&gt;</div>
<div class="line"><a id="l00358" name="l00358"></a><span class="lineno">  358</span>EZ_ALWAYS_INLINE <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;T&gt;</a> ezMakeArrayPtr(T (&amp;staticArray)[N])</div>
<div class="line"><a id="l00359" name="l00359"></a><span class="lineno">  359</span>{</div>
<div class="line"><a id="l00360" name="l00360"></a><span class="lineno">  360</span>  <span class="keywordflow">return</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;T&gt;</a>(staticArray);</div>
<div class="line"><a id="l00361" name="l00361"></a><span class="lineno">  361</span>}</div>
<div class="line"><a id="l00362" name="l00362"></a><span class="lineno">  362</span> </div>
<div class="line"><a id="l00364" name="l00364"></a><span class="lineno">  364</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00365" name="l00365"></a><span class="lineno">  365</span>EZ_ALWAYS_INLINE <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezConstByteArrayPtr</a> ezMakeByteArrayPtr(<span class="keyword">const</span> T* pPtr, ezUInt32 uiCount)</div>
<div class="line"><a id="l00366" name="l00366"></a><span class="lineno">  366</span>{</div>
<div class="line"><a id="l00367" name="l00367"></a><span class="lineno">  367</span>  <span class="keywordflow">return</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezConstByteArrayPtr</a>(<span class="keyword">static_cast&lt;</span><span class="keyword">const </span>ezUInt8*<span class="keyword">&gt;</span>(pPtr), uiCount * <span class="keyword">sizeof</span>(T));</div>
<div class="line"><a id="l00368" name="l00368"></a><span class="lineno">  368</span>}</div>
<div class="line"><a id="l00369" name="l00369"></a><span class="lineno">  369</span> </div>
<div class="line"><a id="l00371" name="l00371"></a><span class="lineno">  371</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00372" name="l00372"></a><span class="lineno">  372</span>EZ_ALWAYS_INLINE <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezByteArrayPtr</a> ezMakeByteArrayPtr(T* pPtr, ezUInt32 uiCount)</div>
<div class="line"><a id="l00373" name="l00373"></a><span class="lineno">  373</span>{</div>
<div class="line"><a id="l00374" name="l00374"></a><span class="lineno">  374</span>  <span class="keywordflow">return</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezByteArrayPtr</a>(<span class="keyword">reinterpret_cast&lt;</span>ezUInt8*<span class="keyword">&gt;</span>(pPtr), uiCount * <span class="keyword">sizeof</span>(T));</div>
<div class="line"><a id="l00375" name="l00375"></a><span class="lineno">  375</span>}</div>
<div class="line"><a id="l00376" name="l00376"></a><span class="lineno">  376</span> </div>
<div class="line"><a id="l00378" name="l00378"></a><span class="lineno">  378</span>EZ_ALWAYS_INLINE <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezByteArrayPtr</a> ezMakeByteArrayPtr(<span class="keywordtype">void</span>* pPtr, ezUInt32 uiBytes)</div>
<div class="line"><a id="l00379" name="l00379"></a><span class="lineno">  379</span>{</div>
<div class="line"><a id="l00380" name="l00380"></a><span class="lineno">  380</span>  <span class="keywordflow">return</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezByteArrayPtr</a>(<span class="keyword">reinterpret_cast&lt;</span>ezUInt8*<span class="keyword">&gt;</span>(pPtr), uiBytes);</div>
<div class="line"><a id="l00381" name="l00381"></a><span class="lineno">  381</span>}</div>
<div class="line"><a id="l00382" name="l00382"></a><span class="lineno">  382</span> </div>
<div class="line"><a id="l00384" name="l00384"></a><span class="lineno">  384</span>EZ_ALWAYS_INLINE <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezConstByteArrayPtr</a> ezMakeByteArrayPtr(<span class="keyword">const</span> <span class="keywordtype">void</span>* pPtr, ezUInt32 uiBytes)</div>
<div class="line"><a id="l00385" name="l00385"></a><span class="lineno">  385</span>{</div>
<div class="line"><a id="l00386" name="l00386"></a><span class="lineno">  386</span>  <span class="keywordflow">return</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezConstByteArrayPtr</a>(<span class="keyword">static_cast&lt;</span><span class="keyword">const </span>ezUInt8*<span class="keyword">&gt;</span>(pPtr), uiBytes);</div>
<div class="line"><a id="l00387" name="l00387"></a><span class="lineno">  387</span>}</div>
<div class="line"><a id="l00388" name="l00388"></a><span class="lineno">  388</span> </div>
<div class="line"><a id="l00390" name="l00390"></a><span class="lineno">  390</span> </div>
<div class="line"><a id="l00391" name="l00391"></a><span class="lineno">  391</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00392" name="l00392"></a><span class="lineno">  392</span><span class="keyword">typename</span> ezArrayPtr&lt;T&gt;::iterator begin(<a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;T&gt;</a>&amp; ref_container)</div>
<div class="line"><a id="l00393" name="l00393"></a><span class="lineno">  393</span>{</div>
<div class="line"><a id="l00394" name="l00394"></a><span class="lineno">  394</span>  <span class="keywordflow">return</span> ref_container.<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#aba4e7585190f337c6428f2fe25828b8a">GetPtr</a>();</div>
<div class="line"><a id="l00395" name="l00395"></a><span class="lineno">  395</span>}</div>
<div class="line"><a id="l00396" name="l00396"></a><span class="lineno">  396</span> </div>
<div class="line"><a id="l00397" name="l00397"></a><span class="lineno">  397</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00398" name="l00398"></a><span class="lineno">  398</span><span class="keyword">typename</span> ezArrayPtr&lt;T&gt;::const_iterator begin(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;T&gt;</a>&amp; container)</div>
<div class="line"><a id="l00399" name="l00399"></a><span class="lineno">  399</span>{</div>
<div class="line"><a id="l00400" name="l00400"></a><span class="lineno">  400</span>  <span class="keywordflow">return</span> container.<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#aba4e7585190f337c6428f2fe25828b8a">GetPtr</a>();</div>
<div class="line"><a id="l00401" name="l00401"></a><span class="lineno">  401</span>}</div>
<div class="line"><a id="l00402" name="l00402"></a><span class="lineno">  402</span> </div>
<div class="line"><a id="l00403" name="l00403"></a><span class="lineno">  403</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00404" name="l00404"></a><span class="lineno">  404</span><span class="keyword">typename</span> ezArrayPtr&lt;T&gt;::const_iterator cbegin(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;T&gt;</a>&amp; container)</div>
<div class="line"><a id="l00405" name="l00405"></a><span class="lineno">  405</span>{</div>
<div class="line"><a id="l00406" name="l00406"></a><span class="lineno">  406</span>  <span class="keywordflow">return</span> container.<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#aba4e7585190f337c6428f2fe25828b8a">GetPtr</a>();</div>
<div class="line"><a id="l00407" name="l00407"></a><span class="lineno">  407</span>}</div>
<div class="line"><a id="l00408" name="l00408"></a><span class="lineno">  408</span> </div>
<div class="line"><a id="l00409" name="l00409"></a><span class="lineno">  409</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00410" name="l00410"></a><span class="lineno">  410</span><span class="keyword">typename</span> <a class="code hl_struct" href="../../d3/df2/structreverse__pointer__iterator.htm">ezArrayPtr&lt;T&gt;::reverse_iterator</a> rbegin(<a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;T&gt;</a>&amp; ref_container)</div>
<div class="line"><a id="l00411" name="l00411"></a><span class="lineno">  411</span>{</div>
<div class="line"><a id="l00412" name="l00412"></a><span class="lineno">  412</span>  <span class="keywordflow">return</span> <span class="keyword">typename</span> <a class="code hl_struct" href="../../d3/df2/structreverse__pointer__iterator.htm">ezArrayPtr&lt;T&gt;::reverse_iterator</a>(ref_container.<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#aba4e7585190f337c6428f2fe25828b8a">GetPtr</a>() + ref_container.<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>() - 1);</div>
<div class="line"><a id="l00413" name="l00413"></a><span class="lineno">  413</span>}</div>
<div class="line"><a id="l00414" name="l00414"></a><span class="lineno">  414</span> </div>
<div class="line"><a id="l00415" name="l00415"></a><span class="lineno">  415</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00416" name="l00416"></a><span class="lineno">  416</span><span class="keyword">typename</span> <a class="code hl_struct" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">ezArrayPtr&lt;T&gt;::const_reverse_iterator</a> rbegin(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;T&gt;</a>&amp; container)</div>
<div class="line"><a id="l00417" name="l00417"></a><span class="lineno">  417</span>{</div>
<div class="line"><a id="l00418" name="l00418"></a><span class="lineno">  418</span>  <span class="keywordflow">return</span> <span class="keyword">typename</span> <a class="code hl_struct" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">ezArrayPtr&lt;T&gt;::const_reverse_iterator</a>(container.<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#aba4e7585190f337c6428f2fe25828b8a">GetPtr</a>() + container.<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>() - 1);</div>
<div class="line"><a id="l00419" name="l00419"></a><span class="lineno">  419</span>}</div>
<div class="line"><a id="l00420" name="l00420"></a><span class="lineno">  420</span> </div>
<div class="line"><a id="l00421" name="l00421"></a><span class="lineno">  421</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00422" name="l00422"></a><span class="lineno">  422</span><span class="keyword">typename</span> <a class="code hl_struct" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">ezArrayPtr&lt;T&gt;::const_reverse_iterator</a> crbegin(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;T&gt;</a>&amp; container)</div>
<div class="line"><a id="l00423" name="l00423"></a><span class="lineno">  423</span>{</div>
<div class="line"><a id="l00424" name="l00424"></a><span class="lineno">  424</span>  <span class="keywordflow">return</span> <span class="keyword">typename</span> <a class="code hl_struct" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">ezArrayPtr&lt;T&gt;::const_reverse_iterator</a>(container.<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#aba4e7585190f337c6428f2fe25828b8a">GetPtr</a>() + container.<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>() - 1);</div>
<div class="line"><a id="l00425" name="l00425"></a><span class="lineno">  425</span>}</div>
<div class="line"><a id="l00426" name="l00426"></a><span class="lineno">  426</span> </div>
<div class="line"><a id="l00427" name="l00427"></a><span class="lineno">  427</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00428" name="l00428"></a><span class="lineno">  428</span><span class="keyword">typename</span> ezArrayPtr&lt;T&gt;::iterator end(<a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;T&gt;</a>&amp; ref_container)</div>
<div class="line"><a id="l00429" name="l00429"></a><span class="lineno">  429</span>{</div>
<div class="line"><a id="l00430" name="l00430"></a><span class="lineno">  430</span>  <span class="keywordflow">return</span> ref_container.<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#aba4e7585190f337c6428f2fe25828b8a">GetPtr</a>() + ref_container.<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>();</div>
<div class="line"><a id="l00431" name="l00431"></a><span class="lineno">  431</span>}</div>
<div class="line"><a id="l00432" name="l00432"></a><span class="lineno">  432</span> </div>
<div class="line"><a id="l00433" name="l00433"></a><span class="lineno">  433</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00434" name="l00434"></a><span class="lineno">  434</span><span class="keyword">typename</span> ezArrayPtr&lt;T&gt;::const_iterator end(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;T&gt;</a>&amp; container)</div>
<div class="line"><a id="l00435" name="l00435"></a><span class="lineno">  435</span>{</div>
<div class="line"><a id="l00436" name="l00436"></a><span class="lineno">  436</span>  <span class="keywordflow">return</span> container.<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#aba4e7585190f337c6428f2fe25828b8a">GetPtr</a>() + container.<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>();</div>
<div class="line"><a id="l00437" name="l00437"></a><span class="lineno">  437</span>}</div>
<div class="line"><a id="l00438" name="l00438"></a><span class="lineno">  438</span> </div>
<div class="line"><a id="l00439" name="l00439"></a><span class="lineno">  439</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00440" name="l00440"></a><span class="lineno">  440</span><span class="keyword">typename</span> ezArrayPtr&lt;T&gt;::const_iterator cend(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;T&gt;</a>&amp; container)</div>
<div class="line"><a id="l00441" name="l00441"></a><span class="lineno">  441</span>{</div>
<div class="line"><a id="l00442" name="l00442"></a><span class="lineno">  442</span>  <span class="keywordflow">return</span> container.<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#aba4e7585190f337c6428f2fe25828b8a">GetPtr</a>() + container.<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>();</div>
<div class="line"><a id="l00443" name="l00443"></a><span class="lineno">  443</span>}</div>
<div class="line"><a id="l00444" name="l00444"></a><span class="lineno">  444</span> </div>
<div class="line"><a id="l00445" name="l00445"></a><span class="lineno">  445</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00446" name="l00446"></a><span class="lineno">  446</span><span class="keyword">typename</span> <a class="code hl_struct" href="../../d3/df2/structreverse__pointer__iterator.htm">ezArrayPtr&lt;T&gt;::reverse_iterator</a> rend(<a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;T&gt;</a>&amp; ref_container)</div>
<div class="line"><a id="l00447" name="l00447"></a><span class="lineno">  447</span>{</div>
<div class="line"><a id="l00448" name="l00448"></a><span class="lineno">  448</span>  <span class="keywordflow">return</span> <span class="keyword">typename</span> <a class="code hl_struct" href="../../d3/df2/structreverse__pointer__iterator.htm">ezArrayPtr&lt;T&gt;::reverse_iterator</a>(ref_container.<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#aba4e7585190f337c6428f2fe25828b8a">GetPtr</a>() - 1);</div>
<div class="line"><a id="l00449" name="l00449"></a><span class="lineno">  449</span>}</div>
<div class="line"><a id="l00450" name="l00450"></a><span class="lineno">  450</span> </div>
<div class="line"><a id="l00451" name="l00451"></a><span class="lineno">  451</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00452" name="l00452"></a><span class="lineno">  452</span><span class="keyword">typename</span> <a class="code hl_struct" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">ezArrayPtr&lt;T&gt;::const_reverse_iterator</a> rend(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;T&gt;</a>&amp; container)</div>
<div class="line"><a id="l00453" name="l00453"></a><span class="lineno">  453</span>{</div>
<div class="line"><a id="l00454" name="l00454"></a><span class="lineno">  454</span>  <span class="keywordflow">return</span> <span class="keyword">typename</span> <a class="code hl_struct" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">ezArrayPtr&lt;T&gt;::const_reverse_iterator</a>(container.<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#aba4e7585190f337c6428f2fe25828b8a">GetPtr</a>() - 1);</div>
<div class="line"><a id="l00455" name="l00455"></a><span class="lineno">  455</span>}</div>
<div class="line"><a id="l00456" name="l00456"></a><span class="lineno">  456</span> </div>
<div class="line"><a id="l00457" name="l00457"></a><span class="lineno">  457</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00458" name="l00458"></a><span class="lineno">  458</span><span class="keyword">typename</span> <a class="code hl_struct" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">ezArrayPtr&lt;T&gt;::const_reverse_iterator</a> crend(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;T&gt;</a>&amp; container)</div>
<div class="line"><a id="l00459" name="l00459"></a><span class="lineno">  459</span>{</div>
<div class="line"><a id="l00460" name="l00460"></a><span class="lineno">  460</span>  <span class="keywordflow">return</span> <span class="keyword">typename</span> <a class="code hl_struct" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">ezArrayPtr&lt;T&gt;::const_reverse_iterator</a>(container.<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#aba4e7585190f337c6428f2fe25828b8a">GetPtr</a>() - 1);</div>
<div class="line"><a id="l00461" name="l00461"></a><span class="lineno">  461</span>}</div>
<div class="ttc" id="aclassez_array_ptr_htm"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a></div><div class="ttdoc">This class encapsulates an array and it's size. It is recommended to use this class instead of plain ...</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:41</div></div>
<div class="ttc" id="aclassez_array_ptr_htm_a0c22c58557948f308334f512fda9e0d8"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm#a0c22c58557948f308334f512fda9e0d8">ezArrayPtr::IsEmpty</a></div><div class="ttdeci">EZ_ALWAYS_INLINE bool IsEmpty() const</div><div class="ttdoc">Returns whether the array is empty.</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:169</div></div>
<div class="ttc" id="aclassez_array_ptr_htm_a1ef40b2cc4506522ef994ba7aa290f4a"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm#a1ef40b2cc4506522ef994ba7aa290f4a">ezArrayPtr::Cast</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezArrayPtr&lt; U &gt; Cast()</div><div class="ttdoc">Cast an ArrayPtr to an ArrayPtr to a different, but same size, type.</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:209</div></div>
<div class="ttc" id="aclassez_array_ptr_htm_a20fd4a63ebe29d4b53bee74dbab9818b"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm#a20fd4a63ebe29d4b53bee74dbab9818b">ezArrayPtr::operator==</a></div><div class="ttdeci">bool operator==(const ezArrayPtr&lt; T &gt; &amp;other) const</div><div class="ttdoc">Compares the two arrays for equality.</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:259</div></div>
<div class="ttc" id="aclassez_array_ptr_htm_a269689cbd5471d18dc7b23d450701a10"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm#a269689cbd5471d18dc7b23d450701a10">ezArrayPtr::ToByteArray</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezArrayPtr&lt; const ByteType &gt; ToByteArray() const</div><div class="ttdoc">Reinterprets this array as a byte array.</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:198</div></div>
<div class="ttc" id="aclassez_array_ptr_htm_a2a60e59db75a5101abb471a146c340db"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm#a2a60e59db75a5101abb471a146c340db">ezArrayPtr::ezArrayPtr</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezArrayPtr(const ezArrayPtr&lt; U &gt; &amp;other)</div><div class="ttdoc">Initializes the ezArrayPtr to be a copy of other. No memory is allocated or copied.</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:92</div></div>
<div class="ttc" id="aclassez_array_ptr_htm_a4d370cc1835edb7de263534115bf0972"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm#a4d370cc1835edb7de263534115bf0972">ezArrayPtr::GetEndPtr</a></div><div class="ttdeci">EZ_ALWAYS_INLINE PointerType GetEndPtr() const</div><div class="ttdoc">Returns the pointer behind the last element of the array.</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:166</div></div>
<div class="ttc" id="aclassez_array_ptr_htm_a529e706877f2481e6ec6a90a5b0ebd0d"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm#a529e706877f2481e6ec6a90a5b0ebd0d">ezArrayPtr::ToByteArray</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezArrayPtr&lt; ByteType &gt; ToByteArray()</div><div class="ttdoc">Reinterprets this array as a byte array.</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:204</div></div>
<div class="ttc" id="aclassez_array_ptr_htm_a655dfb1bf410d067ee9410d6986012fe"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm#a655dfb1bf410d067ee9410d6986012fe">ezArrayPtr::LastIndexOf</a></div><div class="ttdeci">ezUInt32 LastIndexOf(const T &amp;value, ezUInt32 uiStartIndex=ezInvalidIndex) const</div><div class="ttdoc">Searches for the last occurrence of the given value and returns its index or ezInvalidIndex if not fo...</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:322</div></div>
<div class="ttc" id="aclassez_array_ptr_htm_a68cc9ff010e3fa4ced3a59ab76f3f460"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm#a68cc9ff010e3fa4ced3a59ab76f3f460">ezArrayPtr::IndexOf</a></div><div class="ttdeci">ezUInt32 IndexOf(const T &amp;value, ezUInt32 uiStartIndex=0) const</div><div class="ttdoc">Searches for the first occurrence of the given value and returns its index or ezInvalidIndex if not f...</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:310</div></div>
<div class="ttc" id="aclassez_array_ptr_htm_a6966f3eb34ead18fa2c57528fd7308bf"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm#a6966f3eb34ead18fa2c57528fd7308bf">ezArrayPtr::operator&lt;</a></div><div class="ttdeci">bool operator&lt;(const ezArrayPtr&lt; const T &gt; &amp;other) const</div><div class="ttdoc">Compares the two arrays for less.</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:272</div></div>
<div class="ttc" id="aclassez_array_ptr_htm_a6f9c67ad2a0f43986e8bbc35dc5f2ab3"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm#a6f9c67ad2a0f43986e8bbc35dc5f2ab3">ezArrayPtr::CopyFrom</a></div><div class="ttdeci">void CopyFrom(const ezArrayPtr&lt; const T &gt; &amp;other)</div><div class="ttdoc">Copies the data from other into this array. The arrays must have the exact same size.</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:290</div></div>
<div class="ttc" id="aclassez_array_ptr_htm_a72340e400182aa95d15bd67fa8a5e3cd"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm#a72340e400182aa95d15bd67fa8a5e3cd">ezArrayPtr::ezArrayPtr</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezArrayPtr(T(&amp;staticArray)[N])</div><div class="ttdoc">Initializes the ezArrayPtr to encapsulate the given array.</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:84</div></div>
<div class="ttc" id="aclassez_array_ptr_htm_a77b8c958db61eb57fa9b7d1478588dc9"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm#a77b8c958db61eb57fa9b7d1478588dc9">ezArrayPtr::GetPtr</a></div><div class="ttdeci">EZ_ALWAYS_INLINE PointerType GetPtr()</div><div class="ttdoc">Returns the pointer to the array.</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:157</div></div>
<div class="ttc" id="aclassez_array_ptr_htm_a7fda1bd42cdec0e38ae46d99c9d0d0e4"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm#a7fda1bd42cdec0e38ae46d99c9d0d0e4">ezArrayPtr::ezArrayPtr</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezArrayPtr()</div><div class="ttdoc">Initializes the ezArrayPtr to be empty.</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:56</div></div>
<div class="ttc" id="aclassez_array_ptr_htm_a821667d4a33df54cd05e328df2a822e1"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm#a821667d4a33df54cd05e328df2a822e1">ezArrayPtr::Contains</a></div><div class="ttdeci">EZ_ALWAYS_INLINE bool Contains(const T &amp;value) const</div><div class="ttdoc">Checks whether the given value can be found in the array. O(n) complexity.</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:304</div></div>
<div class="ttc" id="aclassez_array_ptr_htm_a839c0c038a82368f263414ac040f647f"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm#a839c0c038a82368f263414ac040f647f">ezArrayPtr::GetSubArray</a></div><div class="ttdeci">EZ_FORCE_INLINE ezArrayPtr&lt; T &gt; GetSubArray(ezUInt32 uiStart, ezUInt32 uiCount) const</div><div class="ttdoc">Creates a sub-array from this array.</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:181</div></div>
<div class="ttc" id="aclassez_array_ptr_htm_a8cea97c00a9c6c8d43690ddf596f72fa"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm#a8cea97c00a9c6c8d43690ddf596f72fa">ezArrayPtr::operator[]</a></div><div class="ttdeci">EZ_FORCE_INLINE const ValueType &amp; operator[](ezUInt32 uiIndex) const</div><div class="ttdoc">Index access.</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:224</div></div>
<div class="ttc" id="aclassez_array_ptr_htm_a908aab214cf50364fe5705a37ca6f127"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm#a908aab214cf50364fe5705a37ca6f127">ezArrayPtr::GetSubArray</a></div><div class="ttdeci">EZ_FORCE_INLINE ezArrayPtr&lt; T &gt; GetSubArray(ezUInt32 uiStart) const</div><div class="ttdoc">Creates a sub-array from this array.</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:191</div></div>
<div class="ttc" id="aclassez_array_ptr_htm_a92aa806acaac29171ea8dc0404306f12"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm#a92aa806acaac29171ea8dc0404306f12">ezArrayPtr::Cast</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezArrayPtr&lt; const U &gt; Cast() const</div><div class="ttdoc">Cast an ArrayPtr to an ArrayPtr to a different, but same size, type.</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:217</div></div>
<div class="ttc" id="aclassez_array_ptr_htm_a9f222695f57e4cf200e07135dbbd7edd"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">ezArrayPtr::GetCount</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezUInt32 GetCount() const</div><div class="ttdoc">Returns the number of elements in the array.</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:175</div></div>
<div class="ttc" id="aclassez_array_ptr_htm_aaa30da6efd86b458a82760b8a775abd4"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm#aaa30da6efd86b458a82760b8a775abd4">ezArrayPtr::Clear</a></div><div class="ttdeci">EZ_ALWAYS_INLINE void Clear()</div><div class="ttdoc">Clears the array.</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:138</div></div>
<div class="ttc" id="aclassez_array_ptr_htm_aba4e7585190f337c6428f2fe25828b8a"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm#aba4e7585190f337c6428f2fe25828b8a">ezArrayPtr::GetPtr</a></div><div class="ttdeci">EZ_ALWAYS_INLINE PointerType GetPtr() const</div><div class="ttdoc">Returns the pointer to the array.</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:151</div></div>
<div class="ttc" id="aclassez_array_ptr_htm_ac55bb208683087dce2b5b00ea7ffd9ff"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm#ac55bb208683087dce2b5b00ea7ffd9ff">ezArrayPtr::GetEndPtr</a></div><div class="ttdeci">EZ_ALWAYS_INLINE PointerType GetEndPtr()</div><div class="ttdoc">Returns the pointer behind the last element of the array.</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:163</div></div>
<div class="ttc" id="aclassez_array_ptr_htm_adb9c3c11f987d32596525d427d77da51"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm#adb9c3c11f987d32596525d427d77da51">ezArrayPtr::operator==</a></div><div class="ttdeci">bool operator==(const ezArrayPtr&lt; const T &gt; &amp;other) const</div><div class="ttdoc">Compares the two arrays for equality.</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:239</div></div>
<div class="ttc" id="aclassez_array_ptr_htm_ae7011299cdaa4c40c9af60ff0c605d16"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm#ae7011299cdaa4c40c9af60ff0c605d16">ezArrayPtr::operator=</a></div><div class="ttdeci">EZ_ALWAYS_INLINE void operator=(const ezArrayPtr&lt; T &gt; &amp;other)</div><div class="ttdoc">Copies the pointer and size of /a other. Does not allocate any data.</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:131</div></div>
<div class="ttc" id="aclassez_array_ptr_htm_ae86bcb67eb6955c4bcb78a0f5296afa5"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm#ae86bcb67eb6955c4bcb78a0f5296afa5">ezArrayPtr::ezArrayPtr</a></div><div class="ttdeci">ezArrayPtr(T *pPtr, ezUInt32 uiCount)</div><div class="ttdoc">Initializes the ezArrayPtr with the given pointer and number of elements. No memory is allocated or c...</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:70</div></div>
<div class="ttc" id="aclassez_array_ptr_htm_aee1fa89ad26b5a256d428fba6ef04d30"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm#aee1fa89ad26b5a256d428fba6ef04d30">ezArrayPtr::ezArrayPtr</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezArrayPtr(const ezArrayPtr&lt; T &gt; &amp;other)</div><div class="ttdoc">Copies the pointer and size of /a other. Does not allocate any data.</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:63</div></div>
<div class="ttc" id="aclassez_array_ptr_htm_afd79e6696c2f1ef806a36b51507c7bc0"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm#afd79e6696c2f1ef806a36b51507c7bc0">ezArrayPtr::operator[]</a></div><div class="ttdeci">EZ_FORCE_INLINE ValueType &amp; operator[](ezUInt32 uiIndex)</div><div class="ttdoc">Index access.</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:231</div></div>
<div class="ttc" id="aclassez_memory_utils_htm_a744d60b4b000c61f2dd3819a12410595"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm#a744d60b4b000c61f2dd3819a12410595">ezMemoryUtils::IsEqual</a></div><div class="ttdeci">static bool IsEqual(const T *a, const T *b, size_t uiCount=1)</div><div class="ttdoc">Tests if objects of type T from pSource and pDestination are equal.</div></div>
<div class="ttc" id="aclassez_memory_utils_htm_a87c41811a95fa63da651f6779931d9cf"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm#a87c41811a95fa63da651f6779931d9cf">ezMemoryUtils::Copy</a></div><div class="ttdeci">static void Copy(T *pDestination, const T *pSource, size_t uiCount=1)</div><div class="ttdoc">Copies objects of type T from pSource to pDestination.</div></div>
<div class="ttc" id="anamespaceez_math_htm_a0cd624055a97c96719b925cb11e6a08e"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a0cd624055a97c96719b925cb11e6a08e">ezMath::Swap</a></div><div class="ttdeci">EZ_ALWAYS_INLINE void Swap(T &amp;ref_f1, T &amp;ref_f2)</div><div class="ttdoc">Swaps the values in the two variables f1 and f2.</div><div class="ttdef"><b>Definition</b> Math_inl.h:224</div></div>
<div class="ttc" id="anamespaceez_math_htm_ad8009b4da9cb427658d71e30576f209e"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#ad8009b4da9cb427658d71e30576f209e">ezMath::Min</a></div><div class="ttdeci">constexpr EZ_ALWAYS_INLINE T Min(T f1, T f2)</div><div class="ttdoc">Returns the smaller value, f1 or f2.</div><div class="ttdef"><b>Definition</b> Math_inl.h:27</div></div>
<div class="ttc" id="astructconst__reverse__pointer__iterator_htm"><div class="ttname"><a href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">const_reverse_pointer_iterator</a></div><div class="ttdoc">Base class for Pointer like reverse iterators.</div><div class="ttdef"><b>Definition</b> ArrayIterator.h:152</div></div>
<div class="ttc" id="astructez_array_ptr_detail_1_1_byte_type_helper_htm"><div class="ttname"><a href="../../d6/dbd/structez_array_ptr_detail_1_1_byte_type_helper.htm">ezArrayPtrDetail::ByteTypeHelper</a></div><div class="ttdef"><b>Definition</b> ArrayPtr.h:25</div></div>
<div class="ttc" id="astructreverse__pointer__iterator_htm"><div class="ttname"><a href="../../d3/df2/structreverse__pointer__iterator.htm">reverse_pointer_iterator</a></div><div class="ttdoc">Non-Const class for Pointer like reverse iterators.</div><div class="ttdef"><b>Definition</b> ArrayIterator.h:216</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_f95f7c440efc771b227d40e9293549bd.htm">Types</a></li><li class="navelem"><b>ArrayPtr.h</b></li>
    <li class="footer">Generated on Fri Jul 11 2025 12:17:53 for ezEngine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
