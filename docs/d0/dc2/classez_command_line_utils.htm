<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: ezCommandLineUtils Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 23.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d0/dc2/classez_command_line_utils.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="../../d3/d49/classez_command_line_utils-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ezCommandLineUtils Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>This is a helper class to parse command lines.  
 <a href="../../d0/dc2/classez_command_line_utils.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../dd/d6e/_command_line_utils_8h_source.htm">CommandLineUtils.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a14d1f89aa920f099f4cc902455098bb2"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/dc2/classez_command_line_utils.htm#a14d1f89aa920f099f4cc902455098bb2">ArgMode</a> { <a class="el" href="../../d0/dc2/classez_command_line_utils.htm#a14d1f89aa920f099f4cc902455098bb2a7a7f4852d6e1f0fef79bce0a4098b9df">UseArgcArgv</a>, 
<a class="el" href="../../d0/dc2/classez_command_line_utils.htm#a14d1f89aa920f099f4cc902455098bb2ad72667d24737fe879bf8286b6e121936">PreferOsArgs</a>
 }</td></tr>
<tr class="separator:a14d1f89aa920f099f4cc902455098bb2"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ad7783b833293ba9cf65cdee74e0e764e"><td class="memItemLeft" align="right" valign="top"><a id="ad7783b833293ba9cf65cdee74e0e764e"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/dc2/classez_command_line_utils.htm#ad7783b833293ba9cf65cdee74e0e764e">SetCommandLine</a> (ezUInt32 uiArgc, const char **pArgv, <a class="el" href="../../d0/dc2/classez_command_line_utils.htm#a14d1f89aa920f099f4cc902455098bb2">ArgMode</a> mode=<a class="el" href="../../d0/dc2/classez_command_line_utils.htm#a14d1f89aa920f099f4cc902455098bb2a7a7f4852d6e1f0fef79bce0a4098b9df">UseArgcArgv</a>)</td></tr>
<tr class="memdesc:ad7783b833293ba9cf65cdee74e0e764e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes <a class="el" href="../../d0/dc2/classez_command_line_utils.htm" title="This is a helper class to parse command lines.">ezCommandLineUtils</a> from the parameter arguments that were passed to the application. <br /></td></tr>
<tr class="separator:ad7783b833293ba9cf65cdee74e0e764e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae00f2b76921058dcf736f7787b504661"><td class="memItemLeft" align="right" valign="top"><a id="ae00f2b76921058dcf736f7787b504661"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/dc2/classez_command_line_utils.htm#ae00f2b76921058dcf736f7787b504661">SetCommandLine</a> (<a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; <a class="el" href="../../d4/d53/structez_hybrid_string.htm">ezString</a> &gt; commands)</td></tr>
<tr class="memdesc:ae00f2b76921058dcf736f7787b504661"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes <a class="el" href="../../d0/dc2/classez_command_line_utils.htm" title="This is a helper class to parse command lines.">ezCommandLineUtils</a> from a list of already split up commands. <br /></td></tr>
<tr class="separator:ae00f2b76921058dcf736f7787b504661"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9d95c50026b1f90891ae036c10ad446b"><td class="memItemLeft" align="right" valign="top"><a id="a9d95c50026b1f90891ae036c10ad446b"></a>
const <a class="el" href="../../d2/d4f/classez_dynamic_array.htm">ezDynamicArray</a>&lt; <a class="el" href="../../d4/d53/structez_hybrid_string.htm">ezString</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/dc2/classez_command_line_utils.htm#a9d95c50026b1f90891ae036c10ad446b">GetCommandLineArray</a> () const</td></tr>
<tr class="memdesc:a9d95c50026b1f90891ae036c10ad446b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the split up command line. <br /></td></tr>
<tr class="separator:a9d95c50026b1f90891ae036c10ad446b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca0f2f11c5fe0731d1c31fd382362bf6"><td class="memItemLeft" align="right" valign="top"><a id="aca0f2f11c5fe0731d1c31fd382362bf6"></a>
<a class="el" href="../../d4/d53/structez_hybrid_string.htm">ezString</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/dc2/classez_command_line_utils.htm#aca0f2f11c5fe0731d1c31fd382362bf6">GetCommandLineString</a> () const</td></tr>
<tr class="memdesc:aca0f2f11c5fe0731d1c31fd382362bf6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assembles the original command line from the split up string representation. <br /></td></tr>
<tr class="separator:aca0f2f11c5fe0731d1c31fd382362bf6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a142f449d961b4883df3741f359add974"><td class="memItemLeft" align="right" valign="top"><a id="a142f449d961b4883df3741f359add974"></a>
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/dc2/classez_command_line_utils.htm#a142f449d961b4883df3741f359add974">GetParameterCount</a> () const</td></tr>
<tr class="memdesc:a142f449d961b4883df3741f359add974"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the total number of command line parameters (excluding the program path, which is often passed as the first parameter). <br /></td></tr>
<tr class="separator:a142f449d961b4883df3741f359add974"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3aefb53237ebf029d5cfef1be82bf9e0"><td class="memItemLeft" align="right" valign="top"><a id="a3aefb53237ebf029d5cfef1be82bf9e0"></a>
const <a class="el" href="../../d4/d53/structez_hybrid_string.htm">ezString</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/dc2/classez_command_line_utils.htm#a3aefb53237ebf029d5cfef1be82bf9e0">GetParameter</a> (ezUInt32 uiParam) const</td></tr>
<tr class="memdesc:a3aefb53237ebf029d5cfef1be82bf9e0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the n-th parameter string that was passed to the application. <br /></td></tr>
<tr class="separator:a3aefb53237ebf029d5cfef1be82bf9e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a15c2f8886f2e007a28ef42976a2b8c04"><td class="memItemLeft" align="right" valign="top">ezInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/dc2/classez_command_line_utils.htm#a15c2f8886f2e007a28ef42976a2b8c04">GetOptionIndex</a> (<a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a> sOption, bool bCaseSensitive=false) const</td></tr>
<tr class="memdesc:a15c2f8886f2e007a28ef42976a2b8c04"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the index at which the given option string can be found in the parameter list.  <a href="../../d0/dc2/classez_command_line_utils.htm#a15c2f8886f2e007a28ef42976a2b8c04">More...</a><br /></td></tr>
<tr class="separator:a15c2f8886f2e007a28ef42976a2b8c04"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a20b99bbde0debd8cbc42949a885f2bf9"><td class="memItemLeft" align="right" valign="top"><a id="a20b99bbde0debd8cbc42949a885f2bf9"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/dc2/classez_command_line_utils.htm#a20b99bbde0debd8cbc42949a885f2bf9">HasOption</a> (<a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a> sOption, bool bCaseSensitive=false) const</td></tr>
<tr class="memdesc:a20b99bbde0debd8cbc42949a885f2bf9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the requested option is specified, at all. <br /></td></tr>
<tr class="separator:a20b99bbde0debd8cbc42949a885f2bf9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a59140457941baed64dd0207e5b6f2310"><td class="memItemLeft" align="right" valign="top">ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/dc2/classez_command_line_utils.htm#a59140457941baed64dd0207e5b6f2310">GetStringOptionArguments</a> (<a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a> sOption, bool bCaseSensitive=false) const</td></tr>
<tr class="memdesc:a59140457941baed64dd0207e5b6f2310"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns how many arguments follow behind the option with the name <em>szOption</em>.  <a href="../../d0/dc2/classez_command_line_utils.htm#a59140457941baed64dd0207e5b6f2310">More...</a><br /></td></tr>
<tr class="separator:a59140457941baed64dd0207e5b6f2310"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae3eabc619e1f2e615a33c95b392e46f4"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/dc2/classez_command_line_utils.htm#ae3eabc619e1f2e615a33c95b392e46f4">GetStringOption</a> (<a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a> sOption, ezUInt32 uiArgument=0, <a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a> sDefault={}, bool bCaseSensitive=false) const</td></tr>
<tr class="memdesc:ae3eabc619e1f2e615a33c95b392e46f4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the n-th parameter to the command line option with the name <em>szOption</em>.  <a href="../../d0/dc2/classez_command_line_utils.htm#ae3eabc619e1f2e615a33c95b392e46f4">More...</a><br /></td></tr>
<tr class="separator:ae3eabc619e1f2e615a33c95b392e46f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa4f9600b5efdfd22f3c2490e33ca00f0"><td class="memItemLeft" align="right" valign="top">const <a class="el" href="../../d4/d53/structez_hybrid_string.htm">ezString</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/dc2/classez_command_line_utils.htm#aa4f9600b5efdfd22f3c2490e33ca00f0">GetAbsolutePathOption</a> (<a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a> sOption, ezUInt32 uiArgument=0, <a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a> sDefault={}, bool bCaseSensitive=false) const</td></tr>
<tr class="memdesc:aa4f9600b5efdfd22f3c2490e33ca00f0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Similar to <a class="el" href="../../d0/dc2/classez_command_line_utils.htm#ae3eabc619e1f2e615a33c95b392e46f4" title="Returns the n-th parameter to the command line option with the name szOption.">GetStringOption()</a> but assumes that the strings represent paths and concatenates the current working directory if a relative path is given.  <a href="../../d0/dc2/classez_command_line_utils.htm#aa4f9600b5efdfd22f3c2490e33ca00f0">More...</a><br /></td></tr>
<tr class="separator:aa4f9600b5efdfd22f3c2490e33ca00f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a16366371c0a5a1a7dd0a7fd87d1f1351"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/dc2/classez_command_line_utils.htm#a16366371c0a5a1a7dd0a7fd87d1f1351">GetBoolOption</a> (<a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a> sOption, bool bDefault=false, bool bCaseSensitive=false) const</td></tr>
<tr class="memdesc:a16366371c0a5a1a7dd0a7fd87d1f1351"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a boolean interpretation of the option <em>szOption</em> or bDefault if it cannot be found.  <a href="../../d0/dc2/classez_command_line_utils.htm#a16366371c0a5a1a7dd0a7fd87d1f1351">More...</a><br /></td></tr>
<tr class="separator:a16366371c0a5a1a7dd0a7fd87d1f1351"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a099df6e40e072ed0c288bfa9568b8809"><td class="memItemLeft" align="right" valign="top">ezInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/dc2/classez_command_line_utils.htm#a099df6e40e072ed0c288bfa9568b8809">GetIntOption</a> (<a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a> sOption, ezInt32 iDefault=0, bool bCaseSensitive=false) const</td></tr>
<tr class="memdesc:a099df6e40e072ed0c288bfa9568b8809"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an integer interpretation of the option <em>szOption</em> or iDefault if it cannot be found.  <a href="../../d0/dc2/classez_command_line_utils.htm#a099df6e40e072ed0c288bfa9568b8809">More...</a><br /></td></tr>
<tr class="separator:a099df6e40e072ed0c288bfa9568b8809"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9950096da64dc1eda6a1cf6616b6a27e"><td class="memItemLeft" align="right" valign="top"><a id="a9950096da64dc1eda6a1cf6616b6a27e"></a>
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/dc2/classez_command_line_utils.htm#a9950096da64dc1eda6a1cf6616b6a27e">GetUIntOption</a> (<a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a> sOption, ezUInt32 uiDefault=0, bool bCaseSensitive=false) const</td></tr>
<tr class="memdesc:a9950096da64dc1eda6a1cf6616b6a27e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as <a class="el" href="../../d0/dc2/classez_command_line_utils.htm#a099df6e40e072ed0c288bfa9568b8809" title="Returns an integer interpretation of the option szOption or iDefault if it cannot be found.">GetIntOption()</a> but assumes the value is a uint32. <br /></td></tr>
<tr class="separator:a9950096da64dc1eda6a1cf6616b6a27e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0552434b0fc221e04d97736d371d49d2"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/dc2/classez_command_line_utils.htm#a0552434b0fc221e04d97736d371d49d2">GetFloatOption</a> (<a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a> sOption, double fDefault=0.0, bool bCaseSensitive=false) const</td></tr>
<tr class="memdesc:a0552434b0fc221e04d97736d371d49d2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a float interpretation of the option <em>szOption</em> or fDefault if it cannot be found.  <a href="../../d0/dc2/classez_command_line_utils.htm#a0552434b0fc221e04d97736d371d49d2">More...</a><br /></td></tr>
<tr class="separator:a0552434b0fc221e04d97736d371d49d2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a922c61528f768ef07b43e9cfe05dce37"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/dc2/classez_command_line_utils.htm#a922c61528f768ef07b43e9cfe05dce37">InjectCustomArgument</a> (<a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a> sArgument)</td></tr>
<tr class="memdesc:a922c61528f768ef07b43e9cfe05dce37"><td class="mdescLeft">&#160;</td><td class="mdescRight">This allows to append an argument programmatically, that wasn't actually set through the command line.  <a href="../../d0/dc2/classez_command_line_utils.htm#a922c61528f768ef07b43e9cfe05dce37">More...</a><br /></td></tr>
<tr class="separator:a922c61528f768ef07b43e9cfe05dce37"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:afebfede9ab7bb5f29685025c77706f7f"><td class="memItemLeft" align="right" valign="top"><a id="afebfede9ab7bb5f29685025c77706f7f"></a>
static <a class="el" href="../../d0/dc2/classez_command_line_utils.htm">ezCommandLineUtils</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/dc2/classez_command_line_utils.htm#afebfede9ab7bb5f29685025c77706f7f">GetGlobalInstance</a> ()</td></tr>
<tr class="memdesc:afebfede9ab7bb5f29685025c77706f7f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns one global instance of <a class="el" href="../../d0/dc2/classez_command_line_utils.htm" title="This is a helper class to parse command lines.">ezCommandLineUtils</a>. <br /></td></tr>
<tr class="separator:afebfede9ab7bb5f29685025c77706f7f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abdbfcbb6aead5b744429bf8899fabcfa"><td class="memItemLeft" align="right" valign="top">static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/dc2/classez_command_line_utils.htm#abdbfcbb6aead5b744429bf8899fabcfa">SplitCommandLineString</a> (const char *szCommandString, bool bAddExecutableDir, <a class="el" href="../../d2/d4f/classez_dynamic_array.htm">ezDynamicArray</a>&lt; <a class="el" href="../../d4/d53/structez_hybrid_string.htm">ezString</a> &gt; &amp;out_args, <a class="el" href="../../d2/d4f/classez_dynamic_array.htm">ezDynamicArray</a>&lt; const char * &gt; &amp;out_argsV)</td></tr>
<tr class="memdesc:abdbfcbb6aead5b744429bf8899fabcfa"><td class="mdescLeft">&#160;</td><td class="mdescRight">Splits a string into the classic argc/argv string.  <a href="../../d0/dc2/classez_command_line_utils.htm#abdbfcbb6aead5b744429bf8899fabcfa">More...</a><br /></td></tr>
<tr class="separator:abdbfcbb6aead5b744429bf8899fabcfa"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>This is a helper class to parse command lines. </p>
<p>Initialize it using <a class="el" href="../../d0/dc2/classez_command_line_utils.htm#ad7783b833293ba9cf65cdee74e0e764e" title="Initializes ezCommandLineUtils from the parameter arguments that were passed to the application.">SetCommandLine()</a>. Then query for command line options using <a class="el" href="../../d0/dc2/classez_command_line_utils.htm#ae3eabc619e1f2e615a33c95b392e46f4" title="Returns the n-th parameter to the command line option with the name szOption.">GetStringOption()</a>, <a class="el" href="../../d0/dc2/classez_command_line_utils.htm#a16366371c0a5a1a7dd0a7fd87d1f1351" title="Returns a boolean interpretation of the option szOption or bDefault if it cannot be found.">GetBoolOption()</a>, <a class="el" href="../../d0/dc2/classez_command_line_utils.htm#a099df6e40e072ed0c288bfa9568b8809" title="Returns an integer interpretation of the option szOption or iDefault if it cannot be found.">GetIntOption()</a> or <a class="el" href="../../d0/dc2/classez_command_line_utils.htm#a0552434b0fc221e04d97736d371d49d2" title="Returns a float interpretation of the option szOption or fDefault if it cannot be found.">GetFloatOption()</a> </p>
</div><h2 class="groupheader">Member Enumeration Documentation</h2>
<a id="a14d1f89aa920f099f4cc902455098bb2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a14d1f89aa920f099f4cc902455098bb2">&#9670;&nbsp;</a></span>ArgMode</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="../../d0/dc2/classez_command_line_utils.htm#a14d1f89aa920f099f4cc902455098bb2">ezCommandLineUtils::ArgMode</a></td>
        </tr>
      </table>
</div><div class="memdoc">
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a14d1f89aa920f099f4cc902455098bb2a7a7f4852d6e1f0fef79bce0a4098b9df"></a>UseArgcArgv&#160;</td><td class="fielddoc"><p>Use the passed in argc/argv values as they are passed in. </p>
</td></tr>
<tr><td class="fieldname"><a id="a14d1f89aa920f099f4cc902455098bb2ad72667d24737fe879bf8286b6e121936"></a>PreferOsArgs&#160;</td><td class="fielddoc"><p>On Windows, ignore argc/argv and instead query the global arguments from the OS. Necessary to properly support Unicode strings in arguments. </p>
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="aa4f9600b5efdfd22f3c2490e33ca00f0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aa4f9600b5efdfd22f3c2490e33ca00f0">&#9670;&nbsp;</a></span>GetAbsolutePathOption()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="../../d4/d53/structez_hybrid_string.htm">ezString</a> ezCommandLineUtils::GetAbsolutePathOption </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a>&#160;</td>
          <td class="paramname"><em>sOption</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ezUInt32&#160;</td>
          <td class="paramname"><em>uiArgument</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a>&#160;</td>
          <td class="paramname"><em>sDefault</em> = <code>{}</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bCaseSensitive</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Similar to <a class="el" href="../../d0/dc2/classez_command_line_utils.htm#ae3eabc619e1f2e615a33c95b392e46f4" title="Returns the n-th parameter to the command line option with the name szOption.">GetStringOption()</a> but assumes that the strings represent paths and concatenates the current working directory if a relative path is given. </p>
<p>To check how many arguments are available, use <a class="el" href="../../d0/dc2/classez_command_line_utils.htm#a59140457941baed64dd0207e5b6f2310" title="Returns how many arguments follow behind the option with the name szOption.">GetStringOptionArguments()</a>. </p><dl class="section note"><dt>Note</dt><dd>This function always returns absolute or rooted paths, never relative ones. If relative paths are supposed to be allowed, use <a class="el" href="../../d0/dc2/classez_command_line_utils.htm#ae3eabc619e1f2e615a33c95b392e46f4" title="Returns the n-th parameter to the command line option with the name szOption.">GetStringOption()</a> instead.</dd></dl>
<p>If szDefault is empty and the user did not provide this option, then the result will also be the empty string. If szDefault is a relative path, it will be concatenated with the CWD just as any user provided option would. </p>

</div>
</div>
<a id="a16366371c0a5a1a7dd0a7fd87d1f1351"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a16366371c0a5a1a7dd0a7fd87d1f1351">&#9670;&nbsp;</a></span>GetBoolOption()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool ezCommandLineUtils::GetBoolOption </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a>&#160;</td>
          <td class="paramname"><em>sOption</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bDefault</em> = <code>false</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bCaseSensitive</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns a boolean interpretation of the option <em>szOption</em> or bDefault if it cannot be found. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">szOption</td><td>The name of the option to search for. All option-names must start with a hyphen.</td></tr>
    <tr><td class="paramname">bDefault</td><td>The default value to use when no other value can be derived.</td></tr>
    <tr><td class="paramname">bCaseSensitive</td><td>Whether it should be searched case-sensitive for the option with name <em>szOption</em>.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>If an option with the name <em>szOption</em> can be found, which has no parameters, it is interpreted as 'true'. If there is one parameter following, it is interpreted using <a class="el" href="../../d7/d1a/namespaceez_conversion_utils.htm#afc69646a27f2173f467f91b7b3a3cf6d" title="Parses szString and checks that the first word it finds starts with a phrase that can be interpreted ...">ezConversionUtils::StringToBool()</a>. If that conversion fails, bDefault is returned. </dd></dl>

</div>
</div>
<a id="a0552434b0fc221e04d97736d371d49d2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0552434b0fc221e04d97736d371d49d2">&#9670;&nbsp;</a></span>GetFloatOption()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double ezCommandLineUtils::GetFloatOption </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a>&#160;</td>
          <td class="paramname"><em>sOption</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>fDefault</em> = <code>0.0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bCaseSensitive</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns a float interpretation of the option <em>szOption</em> or fDefault if it cannot be found. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">szOption</td><td>The name of the option to search for. All option-names must start with a hyphen.</td></tr>
    <tr><td class="paramname">fDefault</td><td>The default value to use when no other value can be derived.</td></tr>
    <tr><td class="paramname">bCaseSensitive</td><td>Whether it should be searched case-sensitive for the option with name <em>szOption</em>.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>If an option with the name <em>szOption</em> can be found, and there is one parameter following, it is interpreted using <a class="el" href="../../d7/d1a/namespaceez_conversion_utils.htm#a01a12c39c8f33c7bff894a65f22c6e60" title="Parses szString and converts it to a double value. Returns EZ_FAILURE if the string contains no parse...">ezConversionUtils::StringToFloat()</a>. If that conversion fails or there is no such option or no parameter follows it, fDefault is returned. </dd></dl>

</div>
</div>
<a id="a099df6e40e072ed0c288bfa9568b8809"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a099df6e40e072ed0c288bfa9568b8809">&#9670;&nbsp;</a></span>GetIntOption()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ezInt32 ezCommandLineUtils::GetIntOption </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a>&#160;</td>
          <td class="paramname"><em>sOption</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ezInt32&#160;</td>
          <td class="paramname"><em>iDefault</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bCaseSensitive</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns an integer interpretation of the option <em>szOption</em> or iDefault if it cannot be found. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">szOption</td><td>The name of the option to search for. All option-names must start with a hyphen.</td></tr>
    <tr><td class="paramname">iDefault</td><td>The default value to use when no other value can be derived.</td></tr>
    <tr><td class="paramname">bCaseSensitive</td><td>Whether it should be searched case-sensitive for the option with name <em>szOption</em>.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>If an option with the name <em>szOption</em> can be found, and there is one parameter following, it is interpreted using <a class="el" href="../../d7/d1a/namespaceez_conversion_utils.htm#a3a38597ac8c8fda6f5a89d74c9f13e85" title="Parses szString and converts it to an integer value. Returns EZ_FAILURE if the string contains no par...">ezConversionUtils::StringToInt()</a>. If that conversion fails or there is no such option or no parameter follows it, iDefault is returned. </dd></dl>

</div>
</div>
<a id="a15c2f8886f2e007a28ef42976a2b8c04"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a15c2f8886f2e007a28ef42976a2b8c04">&#9670;&nbsp;</a></span>GetOptionIndex()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ezInt32 ezCommandLineUtils::GetOptionIndex </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a>&#160;</td>
          <td class="paramname"><em>sOption</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bCaseSensitive</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the index at which the given option string can be found in the parameter list. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">szOption</td><td>The name of the command line option. Must start with a hyphen (-) </td></tr>
    <tr><td class="paramname">bCaseSensitive</td><td>Whether the option name szOption shall be searched case sensitive.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>-1 When no option with the given name is found. Otherwise the index at which the option can be found. This can be passed to <a class="el" href="../../d0/dc2/classez_command_line_utils.htm#a3aefb53237ebf029d5cfef1be82bf9e0" title="Returns the n-th parameter string that was passed to the application.">GetParameter()</a> or <a class="el" href="../../d0/dc2/classez_command_line_utils.htm#a59140457941baed64dd0207e5b6f2310" title="Returns how many arguments follow behind the option with the name szOption.">GetStringOptionArguments()</a>. </dd></dl>

</div>
</div>
<a id="ae3eabc619e1f2e615a33c95b392e46f4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae3eabc619e1f2e615a33c95b392e46f4">&#9670;&nbsp;</a></span>GetStringOption()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a> ezCommandLineUtils::GetStringOption </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a>&#160;</td>
          <td class="paramname"><em>sOption</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">ezUInt32&#160;</td>
          <td class="paramname"><em>uiArgument</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a>&#160;</td>
          <td class="paramname"><em>sDefault</em> = <code>{}</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bCaseSensitive</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the n-th parameter to the command line option with the name <em>szOption</em>. </p>
<p>If the option does not exist or does not have that many parameters, <em>szDefault</em> is returned. </p>

</div>
</div>
<a id="a59140457941baed64dd0207e5b6f2310"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a59140457941baed64dd0207e5b6f2310">&#9670;&nbsp;</a></span>GetStringOptionArguments()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ezUInt32 ezCommandLineUtils::GetStringOptionArguments </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a>&#160;</td>
          <td class="paramname"><em>sOption</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bCaseSensitive</em> = <code>false</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns how many arguments follow behind the option with the name <em>szOption</em>. </p>
<p>Everything that does not start with a hyphen is considered to be an additional parameter for the option. </p>

</div>
</div>
<a id="a922c61528f768ef07b43e9cfe05dce37"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a922c61528f768ef07b43e9cfe05dce37">&#9670;&nbsp;</a></span>InjectCustomArgument()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ezCommandLineUtils::InjectCustomArgument </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../de/db8/structez_string_view.htm">ezStringView</a>&#160;</td>
          <td class="paramname"><em>sArgument</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This allows to append an argument programmatically, that wasn't actually set through the command line. </p>
<p>This can be useful when the command-line is a method to configure something, which might be hidden away in a plugin, and we have no other easy way to configure it.</p>
<p>Be aware that each call to this function is like one command line argument. Therefore to add "-arg test", call it two times, once with "-arg", once with "test". To add a string with spaces, call it once, but do not wrap the string in artificial quotes. </p>

</div>
</div>
<a id="abdbfcbb6aead5b744429bf8899fabcfa"></a>
<h2 class="memtitle"><span class="permalink"><a href="#abdbfcbb6aead5b744429bf8899fabcfa">&#9670;&nbsp;</a></span>SplitCommandLineString()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ezCommandLineUtils::SplitCommandLineString </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>szCommandString</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bAddExecutableDir</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d2/d4f/classez_dynamic_array.htm">ezDynamicArray</a>&lt; <a class="el" href="../../d4/d53/structez_hybrid_string.htm">ezString</a> &gt; &amp;&#160;</td>
          <td class="paramname"><em>out_args</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d2/d4f/classez_dynamic_array.htm">ezDynamicArray</a>&lt; const char * &gt; &amp;&#160;</td>
          <td class="paramname"><em>out_argsV</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">static</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Splits a string into the classic argc/argv string. </p>
<p>Useful for platforms where command line args come in as a single string. </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">addExecutableDir</td><td>Adds executable path as first parameter (just as it would normally be in 'int main(argc, argv)'). </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Utilities/<a class="el" href="../../dd/d6e/_command_line_utils_8h_source.htm">CommandLineUtils.h</a></li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Utilities/Implementation/CommandLineUtils.cpp</li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d0/dc2/classez_command_line_utils.htm">ezCommandLineUtils</a></li>
    <li class="footer">Generated on Sat Nov 11 2023 17:04:25 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
