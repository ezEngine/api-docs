<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Types/Implementation/TagSet_inl.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">ezEngine<span id="projectnumber">&#160;Release 25.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function() { init_codefold(1); });
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('d0/db7/_tag_set__inl_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">TagSet_inl.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="preprocessor">#include &lt;Foundation/IO/Stream.h&gt;</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="preprocessor">#include &lt;Foundation/Strings/HashedString.h&gt;</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="preprocessor">#include &lt;Foundation/Types/Tag.h&gt;</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span> </div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span> </div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="comment">// Template specialization to be able to use ezTagSet properties as EZ_SET_MEMBER_PROPERTY.</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="foldopen" id="foldopen00010" data-start="{" data-end="};">
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno"><a class="line" href="../../db/d30/structez_container_sub_type_resolver_3_01ez_tag_set_template_3_01_t_01_4_01_4.htm">   10</a></span><span class="keyword">struct </span><a class="code hl_struct" href="../../d7/db6/structez_container_sub_type_resolver.htm">ezContainerSubTypeResolver</a>&lt;<a class="code hl_class" href="../../df/d2d/classez_tag_set_template.htm">ezTagSetTemplate</a>&lt;T&gt;&gt;</div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span>{</div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span>  <span class="keyword">using </span>Type = <span class="keyword">const</span> <span class="keywordtype">char</span>*;</div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span>};</div>
</div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span> </div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span><span class="comment">// Template specialization to be able to use ezTagSet properties as EZ_SET_MEMBER_PROPERTY.</span></div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Class&gt;</div>
<div class="foldopen" id="foldopen00017" data-start="{" data-end="};">
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno"><a class="line" href="../../db/d02/classez_member_set_property_3_01_class_00_01ez_tag_set_00_01const_01char_01_5_01_4.htm">   17</a></span><span class="keyword">class </span><a class="code hl_class" href="../../dd/db3/classez_member_set_property.htm">ezMemberSetProperty</a>&lt;Class, <a class="code hl_class" href="../../df/d2d/classez_tag_set_template.htm">ezTagSet</a>, const char*&gt; : <span class="keyword">public</span> <a class="code hl_class" href="../../d4/d93/classez_typed_set_property.htm">ezTypedSetProperty&lt;typename ezTypeTraits&lt;const char*&gt;::NonConstReferenceType</a>&gt;</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span>{</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span>  <span class="keyword">using </span><a class="code hl_class" href="../../df/d2d/classez_tag_set_template.htm">Container</a> = <a class="code hl_class" href="../../df/d2d/classez_tag_set_template.htm">ezTagSet</a>;</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span>  <span class="keyword">using </span>Type = ezConstCharPtr;</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span>  <span class="keyword">using </span>RealType = <span class="keyword">typename</span> <a class="code hl_typedef" href="../../d1/d32/structez_type_traits.htm#af2051eb05a731b9618b107540f8f46f8">ezTypeTraits&lt;Type&gt;::NonConstReferenceType</a>;</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span>  <span class="keyword">using </span>GetConstContainerFunc = <span class="keyword">const</span> <a class="code hl_class" href="../../df/d2d/classez_tag_set_template.htm">Container</a>&amp; (*)(<span class="keyword">const</span> Class*);</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span>  <span class="keyword">using </span>GetContainerFunc = <a class="code hl_class" href="../../df/d2d/classez_tag_set_template.htm">Container</a>&amp; (*)(Class*);</div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span> </div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span>  <a class="code hl_class" href="../../dd/db3/classez_member_set_property.htm">ezMemberSetProperty</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szPropertyName, GetConstContainerFunc constGetter, GetContainerFunc getter)</div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span>    : <a class="code hl_class" href="../../d4/d93/classez_typed_set_property.htm">ezTypedSetProperty&lt;RealType&gt;</a>(szPropertyName)</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span>  {</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span>    EZ_ASSERT_DEBUG(constGetter != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;The const get count function of an set property cannot be nullptr.&quot;</span>);</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span> </div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span>    m_ConstGetter = constGetter;</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span>    m_Getter = getter;</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span> </div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span>    <span class="keywordflow">if</span> (m_Getter == <span class="keyword">nullptr</span>)</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>      ezAbstractSetProperty::m_Flags.<a class="code hl_function" href="../../d1/dec/structez_bitflags.htm#aaa83c1e77b70d0b549604a64c20f8a83">Add</a>(<a class="code hl_enumvalue" href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852fa2a82793a685c6bbcabb465e870c36c8a">ezPropertyFlags::ReadOnly</a>);</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span>  }</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span> </div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno"><a class="line" href="../../db/d02/classez_member_set_property_3_01_class_00_01ez_tag_set_00_01const_01char_01_5_01_4.htm#a36387fa2e67b44ee5d75d5211d7b595e">   38</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code hl_function" href="../../db/d02/classez_member_set_property_3_01_class_00_01ez_tag_set_00_01const_01char_01_5_01_4.htm#a36387fa2e67b44ee5d75d5211d7b595e">IsEmpty</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance)<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> m_ConstGetter(<span class="keyword">static_cast&lt;</span><span class="keyword">const </span>Class*<span class="keyword">&gt;</span>(pInstance)).IsEmpty(); }</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span> </div>
<div class="foldopen" id="foldopen00040" data-start="{" data-end="}">
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno"><a class="line" href="../../db/d02/classez_member_set_property_3_01_class_00_01ez_tag_set_00_01const_01char_01_5_01_4.htm#a61749ee2051a0f800bee083553ca4fde">   40</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../db/d02/classez_member_set_property_3_01_class_00_01ez_tag_set_00_01const_01char_01_5_01_4.htm#a61749ee2051a0f800bee083553ca4fde">Clear</a>(<span class="keywordtype">void</span>* pInstance)<span class="keyword"> const override</span></div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span><span class="keyword">  </span>{</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>    EZ_ASSERT_DEBUG(m_Getter != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;The property &#39;{0}&#39; has no non-const set accessor function, thus it is read-only.&quot;</span>, <a class="code hl_function" href="../../d6/d81/classez_abstract_property.htm#aa9de7a38815952c004c7d2cca9360133">ezAbstractProperty::GetPropertyName</a>());</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span>    m_Getter(<span class="keyword">static_cast&lt;</span>Class*<span class="keyword">&gt;</span>(pInstance)).Clear();</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>  }</div>
</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span> </div>
<div class="foldopen" id="foldopen00046" data-start="{" data-end="}">
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno"><a class="line" href="../../db/d02/classez_member_set_property_3_01_class_00_01ez_tag_set_00_01const_01char_01_5_01_4.htm#aec815a58f8ee9afcf18cdffcc144a741">   46</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../db/d02/classez_member_set_property_3_01_class_00_01ez_tag_set_00_01const_01char_01_5_01_4.htm#aec815a58f8ee9afcf18cdffcc144a741">Insert</a>(<span class="keywordtype">void</span>* pInstance, <span class="keyword">const</span> <span class="keywordtype">void</span>* pObject)<span class="keyword"> const override</span></div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span><span class="keyword">  </span>{</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>    EZ_ASSERT_DEBUG(m_Getter != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;The property &#39;{0}&#39; has no non-const set accessor function, thus it is read-only.&quot;</span>, <a class="code hl_function" href="../../d6/d81/classez_abstract_property.htm#aa9de7a38815952c004c7d2cca9360133">ezAbstractProperty::GetPropertyName</a>());</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span>    m_Getter(<span class="keyword">static_cast&lt;</span>Class*<span class="keyword">&gt;</span>(pInstance)).SetByName(*<span class="keyword">static_cast&lt;</span><span class="keyword">const </span>RealType*<span class="keyword">&gt;</span>(pObject));</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span>  }</div>
</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span> </div>
<div class="foldopen" id="foldopen00052" data-start="{" data-end="}">
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno"><a class="line" href="../../db/d02/classez_member_set_property_3_01_class_00_01ez_tag_set_00_01const_01char_01_5_01_4.htm#aeb941f2e49f1107172361f3399525448">   52</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../db/d02/classez_member_set_property_3_01_class_00_01ez_tag_set_00_01const_01char_01_5_01_4.htm#aeb941f2e49f1107172361f3399525448">Remove</a>(<span class="keywordtype">void</span>* pInstance, <span class="keyword">const</span> <span class="keywordtype">void</span>* pObject)<span class="keyword"> const override</span></div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span><span class="keyword">  </span>{</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>    EZ_ASSERT_DEBUG(m_Getter != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;The property &#39;{0}&#39; has no non-const set accessor function, thus it is read-only.&quot;</span>, <a class="code hl_function" href="../../d6/d81/classez_abstract_property.htm#aa9de7a38815952c004c7d2cca9360133">ezAbstractProperty::GetPropertyName</a>());</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>    m_Getter(<span class="keyword">static_cast&lt;</span>Class*<span class="keyword">&gt;</span>(pInstance)).RemoveByName(*<span class="keyword">static_cast&lt;</span><span class="keyword">const </span>RealType*<span class="keyword">&gt;</span>(pObject));</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span>  }</div>
</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span> </div>
<div class="foldopen" id="foldopen00058" data-start="{" data-end="}">
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno"><a class="line" href="../../db/d02/classez_member_set_property_3_01_class_00_01ez_tag_set_00_01const_01char_01_5_01_4.htm#ab088f2acd72a88e6c10dc4246a4dbdae">   58</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code hl_function" href="../../db/d02/classez_member_set_property_3_01_class_00_01ez_tag_set_00_01const_01char_01_5_01_4.htm#ab088f2acd72a88e6c10dc4246a4dbdae">Contains</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance, <span class="keyword">const</span> <span class="keywordtype">void</span>* pObject)<span class="keyword"> const override</span></div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span><span class="keyword">  </span>{</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span>    <span class="keywordflow">return</span> m_ConstGetter(<span class="keyword">static_cast&lt;</span><span class="keyword">const </span>Class*<span class="keyword">&gt;</span>(pInstance)).IsSetByName(*<span class="keyword">static_cast&lt;</span><span class="keyword">const </span>RealType*<span class="keyword">&gt;</span>(pObject));</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>  }</div>
</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span> </div>
<div class="foldopen" id="foldopen00063" data-start="{" data-end="}">
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno"><a class="line" href="../../db/d02/classez_member_set_property_3_01_class_00_01ez_tag_set_00_01const_01char_01_5_01_4.htm#a2a64262c1ecd8a150c65db3a314c49e1">   63</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../db/d02/classez_member_set_property_3_01_class_00_01ez_tag_set_00_01const_01char_01_5_01_4.htm#a2a64262c1ecd8a150c65db3a314c49e1">GetValues</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance, <a class="code hl_class" href="../../d2/d4f/classez_dynamic_array.htm">ezDynamicArray&lt;ezVariant&gt;</a>&amp; out_keys)<span class="keyword"> const override</span></div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span><span class="keyword">  </span>{</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>    out_keys.<a class="code hl_function" href="../../dc/d59/classez_array_base.htm#a74099c2d7681df345aedf8cfe24f0bc4">Clear</a>();</div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span>    <span class="keywordflow">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span>&amp; value : m_ConstGetter(<span class="keyword">static_cast&lt;</span><span class="keyword">const </span>Class*<span class="keyword">&gt;</span>(pInstance)))</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>    {</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>      out_keys.<a class="code hl_function" href="../../dc/d59/classez_array_base.htm#abc514bdf8b2de7b5b220ffdbd862e830">PushBack</a>(<a class="code hl_class" href="../../de/de6/classez_variant.htm">ezVariant</a>(value.GetTagString()));</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>    }</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>  }</div>
</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span> </div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>  GetConstContainerFunc m_ConstGetter;</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>  GetContainerFunc m_Getter;</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>};</div>
</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span> </div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span><span class="comment">// Template specialization to be able to use ezTagSet properties as EZ_SET_ACCESSOR_PROPERTY.</span></div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Class&gt;</div>
<div class="foldopen" id="foldopen00079" data-start="{" data-end="};">
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno"><a class="line" href="../../dd/df1/classez_accessor_set_property_3_01_class_00_01const_01char_01_5_00_01const_01ez_tag_set_01_6_01_4.htm">   79</a></span><span class="keyword">class </span><a class="code hl_class" href="../../d0/d0a/classez_accessor_set_property.htm">ezAccessorSetProperty</a>&lt;Class, const char*, <span class="keyword">const</span> <a class="code hl_class" href="../../df/d2d/classez_tag_set_template.htm">ezTagSet</a>&amp;&gt; : <span class="keyword">public</span> <a class="code hl_class" href="../../d4/d93/classez_typed_set_property.htm">ezTypedSetProperty&lt;const char*&gt;</a></div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>{</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span>  <span class="keyword">using </span><a class="code hl_class" href="../../df/d2d/classez_tag_set_template.htm">Container</a> = <span class="keyword">const</span> <a class="code hl_class" href="../../df/d2d/classez_tag_set_template.htm">ezTagSet</a>&amp;;</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>  <span class="keyword">using </span>Type = ezConstCharPtr;</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span> </div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>  <span class="keyword">using </span>ContainerType = <span class="keyword">typename</span> <a class="code hl_typedef" href="../../d1/d32/structez_type_traits.htm#af2051eb05a731b9618b107540f8f46f8">ezTypeTraits&lt;Container&gt;::NonConstReferenceType</a>;</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>  <span class="keyword">using </span>RealType = <span class="keyword">typename</span> <a class="code hl_typedef" href="../../d1/d32/structez_type_traits.htm#af2051eb05a731b9618b107540f8f46f8">ezTypeTraits&lt;Type&gt;::NonConstReferenceType</a>;</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span> </div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>  <span class="keyword">using </span>InsertFunc = void (Class::*)(Type value);</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>  <span class="keyword">using </span>RemoveFunc = void (Class::*)(Type value);</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>  <span class="keyword">using </span>GetValuesFunc = <a class="code hl_class" href="../../df/d2d/classez_tag_set_template.htm">Container</a> (Class::*)() <span class="keyword">const</span>;</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span> </div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>  <a class="code hl_class" href="../../d0/d0a/classez_accessor_set_property.htm">ezAccessorSetProperty</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szPropertyName, GetValuesFunc getValues, InsertFunc insert, RemoveFunc remove)</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>    : <a class="code hl_class" href="../../d4/d93/classez_typed_set_property.htm">ezTypedSetProperty&lt;Type&gt;</a>(szPropertyName)</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span>  {</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>    EZ_ASSERT_DEBUG(getValues != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;The get values function of an set property cannot be nullptr.&quot;</span>);</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span> </div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span>    m_GetValues = getValues;</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span>    m_Insert = insert;</div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>    m_Remove = remove;</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span> </div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>    <span class="keywordflow">if</span> (m_Insert == <span class="keyword">nullptr</span> || m_Remove == <span class="keyword">nullptr</span>)</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>      ezAbstractSetProperty::m_Flags.<a class="code hl_function" href="../../d1/dec/structez_bitflags.htm#aaa83c1e77b70d0b549604a64c20f8a83">Add</a>(<a class="code hl_enumvalue" href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852fa2a82793a685c6bbcabb465e870c36c8a">ezPropertyFlags::ReadOnly</a>);</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>  }</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span> </div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span> </div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno"><a class="line" href="../../dd/df1/classez_accessor_set_property_3_01_class_00_01const_01char_01_5_00_01const_01ez_tag_set_01_6_01_4.htm#ab2bf1efd7912a977228e34bac0339df7">  106</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code hl_function" href="../../dd/df1/classez_accessor_set_property_3_01_class_00_01const_01char_01_5_00_01const_01ez_tag_set_01_6_01_4.htm#ab2bf1efd7912a977228e34bac0339df7">IsEmpty</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance)<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> (<span class="keyword">static_cast&lt;</span><span class="keyword">const </span>Class*<span class="keyword">&gt;</span>(pInstance)-&gt;*m_GetValues)().<a class="code hl_function" href="../../dd/df1/classez_accessor_set_property_3_01_class_00_01const_01char_01_5_00_01const_01ez_tag_set_01_6_01_4.htm#ab2bf1efd7912a977228e34bac0339df7">IsEmpty</a>(); }</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span> </div>
<div class="foldopen" id="foldopen00108" data-start="{" data-end="}">
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno"><a class="line" href="../../dd/df1/classez_accessor_set_property_3_01_class_00_01const_01char_01_5_00_01const_01ez_tag_set_01_6_01_4.htm#a63d55b7ec7f143ee35c59071d54e61f5">  108</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../dd/df1/classez_accessor_set_property_3_01_class_00_01const_01char_01_5_00_01const_01ez_tag_set_01_6_01_4.htm#a63d55b7ec7f143ee35c59071d54e61f5">Clear</a>(<span class="keywordtype">void</span>* pInstance)<span class="keyword"> const override</span></div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span><span class="keyword">  </span>{</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span>    EZ_ASSERT_DEBUG(m_Insert != <span class="keyword">nullptr</span> &amp;&amp; m_Remove != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;The property &#39;{0}&#39; has no remove and insert function, thus it is read-only&quot;</span>,</div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span>      <a class="code hl_function" href="../../d6/d81/classez_abstract_property.htm#aa9de7a38815952c004c7d2cca9360133">ezAbstractProperty::GetPropertyName</a>());</div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span> </div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>    <span class="comment">// We must not cache the container c here as the Remove can make it invalid</span></div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span>    <span class="comment">// e.g. ezArrayPtr by value.</span></div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span>    <span class="keywordflow">while</span> (!<a class="code hl_function" href="../../d0/d0a/classez_accessor_set_property.htm#ab56508fa2b9148fbe37e1a5eae09832c">IsEmpty</a>(pInstance))</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>    {</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>      <span class="comment">// this should be decltype(auto) c = ...; but MSVC 16 is too dumb for that (MSVC 15 works fine)</span></div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span>      <span class="keyword">decltype</span>((<span class="keyword">static_cast&lt;</span><span class="keyword">const </span>Class*<span class="keyword">&gt;</span>(pInstance)-&gt;*m_GetValues)()) c = (<span class="keyword">static_cast&lt;</span><span class="keyword">const </span>Class*<span class="keyword">&gt;</span>(pInstance)-&gt;*m_GetValues)();</div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>      <span class="keyword">auto</span> it = cbegin(c);</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span>      <span class="keyword">const</span> <a class="code hl_class" href="../../db/db8/classez_tag.htm">ezTag</a>&amp; value = *it;</div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span>      <a class="code hl_function" href="../../d0/d0a/classez_accessor_set_property.htm#a0fc103a97c8664415576c220aa9f7843">Remove</a>(pInstance, value.GetTagString().<a class="code hl_function" href="../../d6/d43/structez_hybrid_string_base.htm#a98fb76791e36685a3d4dc2303c50f854">GetData</a>());</div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>    }</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span>  }</div>
</div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span> </div>
<div class="foldopen" id="foldopen00125" data-start="{" data-end="}">
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno"><a class="line" href="../../dd/df1/classez_accessor_set_property_3_01_class_00_01const_01char_01_5_00_01const_01ez_tag_set_01_6_01_4.htm#a2c67db74b2133af7bcfd1d30f2fa1a72">  125</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../dd/df1/classez_accessor_set_property_3_01_class_00_01const_01char_01_5_00_01const_01ez_tag_set_01_6_01_4.htm#a2c67db74b2133af7bcfd1d30f2fa1a72">Insert</a>(<span class="keywordtype">void</span>* pInstance, <span class="keyword">const</span> <span class="keywordtype">void</span>* pObject)<span class="keyword"> const override</span></div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span><span class="keyword">  </span>{</div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span>    EZ_ASSERT_DEBUG(m_Insert != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;The property &#39;{0}&#39; has no insert function, thus it is read-only.&quot;</span>, <a class="code hl_function" href="../../d6/d81/classez_abstract_property.htm#aa9de7a38815952c004c7d2cca9360133">ezAbstractProperty::GetPropertyName</a>());</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span>    (<span class="keyword">static_cast&lt;</span>Class*<span class="keyword">&gt;</span>(pInstance)-&gt;*m_Insert)(*<span class="keyword">static_cast&lt;</span><span class="keyword">const </span>RealType*<span class="keyword">&gt;</span>(pObject));</div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span>  }</div>
</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span> </div>
<div class="foldopen" id="foldopen00131" data-start="{" data-end="}">
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno"><a class="line" href="../../dd/df1/classez_accessor_set_property_3_01_class_00_01const_01char_01_5_00_01const_01ez_tag_set_01_6_01_4.htm#a335a4f8ebf7ab28d34830af3d60f6318">  131</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../dd/df1/classez_accessor_set_property_3_01_class_00_01const_01char_01_5_00_01const_01ez_tag_set_01_6_01_4.htm#a335a4f8ebf7ab28d34830af3d60f6318">Remove</a>(<span class="keywordtype">void</span>* pInstance, <span class="keyword">const</span> <span class="keywordtype">void</span>* pObject)<span class="keyword"> const override</span></div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span><span class="keyword">  </span>{</div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span>    EZ_ASSERT_DEBUG(m_Remove != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;The property &#39;{0}&#39; has no setter function, thus it is read-only.&quot;</span>, <a class="code hl_function" href="../../d6/d81/classez_abstract_property.htm#aa9de7a38815952c004c7d2cca9360133">ezAbstractProperty::GetPropertyName</a>());</div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>    (<span class="keyword">static_cast&lt;</span>Class*<span class="keyword">&gt;</span>(pInstance)-&gt;*m_Remove)(*<span class="keyword">static_cast&lt;</span><span class="keyword">const </span>RealType*<span class="keyword">&gt;</span>(pObject));</div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span>  }</div>
</div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span> </div>
<div class="foldopen" id="foldopen00137" data-start="{" data-end="}">
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno"><a class="line" href="../../dd/df1/classez_accessor_set_property_3_01_class_00_01const_01char_01_5_00_01const_01ez_tag_set_01_6_01_4.htm#ab37906955e55c434b40d40866f80dbba">  137</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code hl_function" href="../../dd/df1/classez_accessor_set_property_3_01_class_00_01const_01char_01_5_00_01const_01ez_tag_set_01_6_01_4.htm#ab37906955e55c434b40d40866f80dbba">Contains</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance, <span class="keyword">const</span> <span class="keywordtype">void</span>* pObject)<span class="keyword"> const override</span></div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span><span class="keyword">  </span>{</div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span>    <span class="keywordflow">return</span> (<span class="keyword">static_cast&lt;</span><span class="keyword">const </span>Class*<span class="keyword">&gt;</span>(pInstance)-&gt;*m_GetValues)().IsSetByName(*<span class="keyword">static_cast&lt;</span><span class="keyword">const </span>RealType*<span class="keyword">&gt;</span>(pObject));</div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>  }</div>
</div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span> </div>
<div class="foldopen" id="foldopen00142" data-start="{" data-end="}">
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno"><a class="line" href="../../dd/df1/classez_accessor_set_property_3_01_class_00_01const_01char_01_5_00_01const_01ez_tag_set_01_6_01_4.htm#a8cf09a29721f4fb01e3e526fbd0d51ae">  142</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../dd/df1/classez_accessor_set_property_3_01_class_00_01const_01char_01_5_00_01const_01ez_tag_set_01_6_01_4.htm#a8cf09a29721f4fb01e3e526fbd0d51ae">GetValues</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance, <a class="code hl_class" href="../../d2/d4f/classez_dynamic_array.htm">ezDynamicArray&lt;ezVariant&gt;</a>&amp; out_keys)<span class="keyword"> const override</span></div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span><span class="keyword">  </span>{</div>
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno">  144</span>    out_keys.<a class="code hl_function" href="../../dc/d59/classez_array_base.htm#a74099c2d7681df345aedf8cfe24f0bc4">Clear</a>();</div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span>    <span class="keywordflow">for</span> (<span class="keyword">const</span> <span class="keyword">auto</span>&amp; value : (<span class="keyword">static_cast&lt;</span><span class="keyword">const </span>Class*<span class="keyword">&gt;</span>(pInstance)-&gt;*m_GetValues)())</div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span>    {</div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span>      out_keys.<a class="code hl_function" href="../../dc/d59/classez_array_base.htm#abc514bdf8b2de7b5b220ffdbd862e830">PushBack</a>(<a class="code hl_class" href="../../de/de6/classez_variant.htm">ezVariant</a>(value.GetTagString()));</div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span>    }</div>
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno">  149</span>  }</div>
</div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span> </div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno">  152</span>  GetValuesFunc m_GetValues;</div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span>  InsertFunc m_Insert;</div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span>  RemoveFunc m_Remove;</div>
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno">  155</span>};</div>
</div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span> </div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span> </div>
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno">  158</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> BlockStorageAllocator&gt;</div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span><a class="code hl_class" href="../../df/d2d/classez_tag_set_template.htm">ezTagSetTemplate&lt;BlockStorageAllocator&gt;::Iterator::Iterator</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../df/d2d/classez_tag_set_template.htm">ezTagSetTemplate&lt;BlockStorageAllocator&gt;</a>* pSet, <span class="keywordtype">bool</span> bEnd)</div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span>  : m_pTagSet(pSet)</div>
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno">  161</span> </div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span>{</div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span>  <span class="keywordflow">if</span> (!bEnd)</div>
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno">  164</span>  {</div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span>    m_uiIndex = m_pTagSet-&gt;GetTagBlockStart() * (<span class="keyword">sizeof</span>(ezTagSetBlockStorage) * 8);</div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span> </div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span>    <span class="keywordflow">if</span> (m_pTagSet-&gt;IsEmpty())</div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span>      m_uiIndex = 0xFFFFFFFF;</div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span>    <span class="keywordflow">else</span></div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span>    {</div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span>      <span class="keywordflow">if</span> (!IsBitSet())</div>
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno">  172</span>        <span class="keyword">operator</span>++();</div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span>    }</div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span>  }</div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span>  <span class="keywordflow">else</span></div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span>    m_uiIndex = 0xFFFFFFFF;</div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span>}</div>
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno">  178</span> </div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> BlockStorageAllocator&gt;</div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span><span class="keywordtype">bool</span> <a class="code hl_class" href="../../df/d2d/classez_tag_set_template.htm">ezTagSetTemplate&lt;BlockStorageAllocator&gt;::Iterator::IsBitSet</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span>  <a class="code hl_class" href="../../db/db8/classez_tag.htm">ezTag</a> TempTag;</div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno">  183</span>  TempTag.m_uiBlockIndex = m_uiIndex / (<span class="keyword">sizeof</span>(ezTagSetBlockStorage) * 8);</div>
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno">  184</span>  TempTag.m_uiBitIndex = m_uiIndex - (TempTag.m_uiBlockIndex * <span class="keyword">sizeof</span>(ezTagSetBlockStorage) * 8);</div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span> </div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span>  <span class="keywordflow">return</span> m_pTagSet-&gt;<a class="code hl_function" href="../../df/d2d/classez_tag_set_template.htm#a8c0b707f9f94e30f547468908e717e69">IsSet</a>(TempTag);</div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span>}</div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span> </div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> BlockStorageAllocator&gt;</div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span><span class="keywordtype">void</span> <a class="code hl_function" href="../../db/db7/classez_tag_set_template_1_1_iterator.htm#a0b42d129970f9c52172317bbca88c390">ezTagSetTemplate&lt;BlockStorageAllocator&gt;::Iterator::operator++</a>()</div>
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno">  191</span>{</div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span>  <span class="keyword">const</span> ezUInt32 uiMax = m_pTagSet-&gt;GetTagBlockEnd() * (<span class="keyword">sizeof</span>(ezTagSetBlockStorage) * 8);</div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span> </div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span>  <span class="keywordflow">do</span></div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span>  {</div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span>    ++m_uiIndex;</div>
<div class="line"><a id="l00197" name="l00197"></a><span class="lineno">  197</span>  } <span class="keywordflow">while</span> (m_uiIndex &lt; uiMax &amp;&amp; !IsBitSet());</div>
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno">  198</span> </div>
<div class="line"><a id="l00199" name="l00199"></a><span class="lineno">  199</span>  <span class="keywordflow">if</span> (m_uiIndex &gt;= uiMax)</div>
<div class="line"><a id="l00200" name="l00200"></a><span class="lineno">  200</span>    m_uiIndex = 0xFFFFFFFF;</div>
<div class="line"><a id="l00201" name="l00201"></a><span class="lineno">  201</span>}</div>
<div class="line"><a id="l00202" name="l00202"></a><span class="lineno">  202</span> </div>
<div class="line"><a id="l00203" name="l00203"></a><span class="lineno">  203</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> BlockStorageAllocator&gt;</div>
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno">  204</span><span class="keyword">const</span> <a class="code hl_class" href="../../db/db8/classez_tag.htm">ezTag</a>&amp; <a class="code hl_function" href="../../db/db7/classez_tag_set_template_1_1_iterator.htm#adebcca06142ead073c1c71f6b4775761">ezTagSetTemplate&lt;BlockStorageAllocator&gt;::Iterator::operator*</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00205" name="l00205"></a><span class="lineno">  205</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00206" name="l00206"></a><span class="lineno">  206</span>  <span class="keywordflow">return</span> *ezTagRegistry::GetGlobalRegistry().<a class="code hl_function" href="../../d4/d71/classez_tag_registry.htm#ad81ab2b3433c333d2643dad5fea7d856">GetTagByIndex</a>(m_uiIndex);</div>
<div class="line"><a id="l00207" name="l00207"></a><span class="lineno">  207</span>}</div>
<div class="line"><a id="l00208" name="l00208"></a><span class="lineno">  208</span> </div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno">  209</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> BlockStorageAllocator&gt;</div>
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno">  210</span><span class="keyword">const</span> <a class="code hl_class" href="../../db/db8/classez_tag.htm">ezTag</a>* <a class="code hl_function" href="../../db/db7/classez_tag_set_template_1_1_iterator.htm#a670e4f2a0d9f0bbb22061db549fe1611">ezTagSetTemplate&lt;BlockStorageAllocator&gt;::Iterator::operator-&gt;</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00211" name="l00211"></a><span class="lineno">  211</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00212" name="l00212"></a><span class="lineno">  212</span>  <span class="keywordflow">return</span> ezTagRegistry::GetGlobalRegistry().<a class="code hl_function" href="../../d4/d71/classez_tag_registry.htm#ad81ab2b3433c333d2643dad5fea7d856">GetTagByIndex</a>(m_uiIndex);</div>
<div class="line"><a id="l00213" name="l00213"></a><span class="lineno">  213</span>}</div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno">  214</span> </div>
<div class="line"><a id="l00215" name="l00215"></a><span class="lineno">  215</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> BlockStorageAllocator&gt;</div>
<div class="line"><a id="l00216" name="l00216"></a><span class="lineno">  216</span><a class="code hl_class" href="../../df/d2d/classez_tag_set_template.htm">ezTagSetTemplate&lt;BlockStorageAllocator&gt;::ezTagSetTemplate</a>()</div>
<div class="line"><a id="l00217" name="l00217"></a><span class="lineno">  217</span>{</div>
<div class="line"><a id="l00218" name="l00218"></a><span class="lineno">  218</span>  SetTagBlockStart(ezSmallInvalidIndex);</div>
<div class="line"><a id="l00219" name="l00219"></a><span class="lineno">  219</span>  SetTagCount(0);</div>
<div class="line"><a id="l00220" name="l00220"></a><span class="lineno">  220</span>}</div>
<div class="line"><a id="l00221" name="l00221"></a><span class="lineno">  221</span> </div>
<div class="line"><a id="l00222" name="l00222"></a><span class="lineno">  222</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> BlockStorageAllocator&gt;</div>
<div class="line"><a id="l00223" name="l00223"></a><span class="lineno">  223</span><span class="keywordtype">bool</span> <a class="code hl_class" href="../../df/d2d/classez_tag_set_template.htm">ezTagSetTemplate&lt;BlockStorageAllocator&gt;::operator==</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../df/d2d/classez_tag_set_template.htm">ezTagSetTemplate</a>&amp; other)<span class="keyword"> const</span></div>
<div class="line"><a id="l00224" name="l00224"></a><span class="lineno">  224</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00225" name="l00225"></a><span class="lineno">  225</span>  <span class="keywordflow">return</span> m_TagBlocks == other.m_TagBlocks &amp;&amp; m_TagBlocks.template GetUserData&lt;ezUInt32&gt;() == other.m_TagBlocks.template GetUserData&lt;ezUInt32&gt;();</div>
<div class="line"><a id="l00226" name="l00226"></a><span class="lineno">  226</span>}</div>
<div class="line"><a id="l00227" name="l00227"></a><span class="lineno">  227</span> </div>
<div class="line"><a id="l00228" name="l00228"></a><span class="lineno">  228</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> BlockStorageAllocator&gt;</div>
<div class="line"><a id="l00229" name="l00229"></a><span class="lineno">  229</span><span class="keywordtype">bool</span> <a class="code hl_class" href="../../df/d2d/classez_tag_set_template.htm">ezTagSetTemplate&lt;BlockStorageAllocator&gt;::operator!=</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../df/d2d/classez_tag_set_template.htm">ezTagSetTemplate</a>&amp; other)<span class="keyword"> const</span></div>
<div class="line"><a id="l00230" name="l00230"></a><span class="lineno">  230</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00231" name="l00231"></a><span class="lineno">  231</span>  <span class="keywordflow">return</span> !(*<span class="keyword">this</span> == other);</div>
<div class="line"><a id="l00232" name="l00232"></a><span class="lineno">  232</span>}</div>
<div class="line"><a id="l00233" name="l00233"></a><span class="lineno">  233</span> </div>
<div class="line"><a id="l00234" name="l00234"></a><span class="lineno">  234</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> BlockStorageAllocator&gt;</div>
<div class="line"><a id="l00235" name="l00235"></a><span class="lineno">  235</span><span class="keywordtype">void</span> <a class="code hl_function" href="../../df/d2d/classez_tag_set_template.htm#a516919ed07be40ca871a8e63b1b274fc">ezTagSetTemplate&lt;BlockStorageAllocator&gt;::Set</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../db/db8/classez_tag.htm">ezTag</a>&amp; tag)</div>
<div class="line"><a id="l00236" name="l00236"></a><span class="lineno">  236</span>{</div>
<div class="line"><a id="l00237" name="l00237"></a><span class="lineno">  237</span>  EZ_ASSERT_DEV(tag.IsValid(), <span class="stringliteral">&quot;Only valid tags can be set in a tag set!&quot;</span>);</div>
<div class="line"><a id="l00238" name="l00238"></a><span class="lineno">  238</span> </div>
<div class="line"><a id="l00239" name="l00239"></a><span class="lineno">  239</span>  <span class="keywordflow">if</span> (m_TagBlocks.<a class="code hl_function" href="../../d4/d0b/classez_small_array_base.htm#a0b66ce1a35b2f1659ba61c534969dae4">IsEmpty</a>())</div>
<div class="line"><a id="l00240" name="l00240"></a><span class="lineno">  240</span>  {</div>
<div class="line"><a id="l00241" name="l00241"></a><span class="lineno">  241</span>    Reallocate(tag.m_uiBlockIndex, tag.m_uiBlockIndex);</div>
<div class="line"><a id="l00242" name="l00242"></a><span class="lineno">  242</span>  }</div>
<div class="line"><a id="l00243" name="l00243"></a><span class="lineno">  243</span>  <span class="keywordflow">else</span> <span class="keywordflow">if</span> (IsTagInAllocatedRange(tag) == <span class="keyword">false</span>)</div>
<div class="line"><a id="l00244" name="l00244"></a><span class="lineno">  244</span>  {</div>
<div class="line"><a id="l00245" name="l00245"></a><span class="lineno">  245</span>    <span class="keyword">const</span> ezUInt32 uiNewBlockStart = ezMath::Min&lt;ezUInt32&gt;(tag.m_uiBlockIndex, GetTagBlockStart());</div>
<div class="line"><a id="l00246" name="l00246"></a><span class="lineno">  246</span>    <span class="keyword">const</span> ezUInt32 uiNewBlockEnd = ezMath::Max&lt;ezUInt32&gt;(tag.m_uiBlockIndex, GetTagBlockEnd());</div>
<div class="line"><a id="l00247" name="l00247"></a><span class="lineno">  247</span> </div>
<div class="line"><a id="l00248" name="l00248"></a><span class="lineno">  248</span>    Reallocate(uiNewBlockStart, uiNewBlockEnd);</div>
<div class="line"><a id="l00249" name="l00249"></a><span class="lineno">  249</span>  }</div>
<div class="line"><a id="l00250" name="l00250"></a><span class="lineno">  250</span> </div>
<div class="line"><a id="l00251" name="l00251"></a><span class="lineno">  251</span>  ezUInt64&amp; tagBlock = m_TagBlocks[tag.m_uiBlockIndex - GetTagBlockStart()];</div>
<div class="line"><a id="l00252" name="l00252"></a><span class="lineno">  252</span> </div>
<div class="line"><a id="l00253" name="l00253"></a><span class="lineno">  253</span>  <span class="keyword">const</span> ezUInt64 bitMask = EZ_BIT(tag.m_uiBitIndex);</div>
<div class="line"><a id="l00254" name="l00254"></a><span class="lineno">  254</span>  <span class="keyword">const</span> <span class="keywordtype">bool</span> bBitWasSet = ((tagBlock &amp; bitMask) != 0);</div>
<div class="line"><a id="l00255" name="l00255"></a><span class="lineno">  255</span> </div>
<div class="line"><a id="l00256" name="l00256"></a><span class="lineno">  256</span>  tagBlock |= bitMask;</div>
<div class="line"><a id="l00257" name="l00257"></a><span class="lineno">  257</span> </div>
<div class="line"><a id="l00258" name="l00258"></a><span class="lineno">  258</span>  <span class="keywordflow">if</span> (!bBitWasSet)</div>
<div class="line"><a id="l00259" name="l00259"></a><span class="lineno">  259</span>  {</div>
<div class="line"><a id="l00260" name="l00260"></a><span class="lineno">  260</span>    IncreaseTagCount();</div>
<div class="line"><a id="l00261" name="l00261"></a><span class="lineno">  261</span>  }</div>
<div class="line"><a id="l00262" name="l00262"></a><span class="lineno">  262</span>}</div>
<div class="line"><a id="l00263" name="l00263"></a><span class="lineno">  263</span> </div>
<div class="line"><a id="l00264" name="l00264"></a><span class="lineno">  264</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> BlockStorageAllocator&gt;</div>
<div class="line"><a id="l00265" name="l00265"></a><span class="lineno">  265</span><span class="keywordtype">void</span> <a class="code hl_function" href="../../df/d2d/classez_tag_set_template.htm#aec2dd63289541a8e4e23405e84413a1d">ezTagSetTemplate&lt;BlockStorageAllocator&gt;::Remove</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../db/db8/classez_tag.htm">ezTag</a>&amp; tag)</div>
<div class="line"><a id="l00266" name="l00266"></a><span class="lineno">  266</span>{</div>
<div class="line"><a id="l00267" name="l00267"></a><span class="lineno">  267</span>  EZ_ASSERT_DEV(tag.IsValid(), <span class="stringliteral">&quot;Only valid tags can be cleared from a tag set!&quot;</span>);</div>
<div class="line"><a id="l00268" name="l00268"></a><span class="lineno">  268</span> </div>
<div class="line"><a id="l00269" name="l00269"></a><span class="lineno">  269</span>  <span class="keywordflow">if</span> (IsTagInAllocatedRange(tag))</div>
<div class="line"><a id="l00270" name="l00270"></a><span class="lineno">  270</span>  {</div>
<div class="line"><a id="l00271" name="l00271"></a><span class="lineno">  271</span>    ezUInt64&amp; tagBlock = m_TagBlocks[tag.m_uiBlockIndex - GetTagBlockStart()];</div>
<div class="line"><a id="l00272" name="l00272"></a><span class="lineno">  272</span> </div>
<div class="line"><a id="l00273" name="l00273"></a><span class="lineno">  273</span>    <span class="keyword">const</span> ezUInt64 bitMask = EZ_BIT(tag.m_uiBitIndex);</div>
<div class="line"><a id="l00274" name="l00274"></a><span class="lineno">  274</span>    <span class="keyword">const</span> <span class="keywordtype">bool</span> bBitWasSet = ((tagBlock &amp; bitMask) != 0);</div>
<div class="line"><a id="l00275" name="l00275"></a><span class="lineno">  275</span> </div>
<div class="line"><a id="l00276" name="l00276"></a><span class="lineno">  276</span>    tagBlock &amp;= ~bitMask;</div>
<div class="line"><a id="l00277" name="l00277"></a><span class="lineno">  277</span> </div>
<div class="line"><a id="l00278" name="l00278"></a><span class="lineno">  278</span>    <span class="keywordflow">if</span> (bBitWasSet)</div>
<div class="line"><a id="l00279" name="l00279"></a><span class="lineno">  279</span>    {</div>
<div class="line"><a id="l00280" name="l00280"></a><span class="lineno">  280</span>      DecreaseTagCount();</div>
<div class="line"><a id="l00281" name="l00281"></a><span class="lineno">  281</span>    }</div>
<div class="line"><a id="l00282" name="l00282"></a><span class="lineno">  282</span>  }</div>
<div class="line"><a id="l00283" name="l00283"></a><span class="lineno">  283</span>}</div>
<div class="line"><a id="l00284" name="l00284"></a><span class="lineno">  284</span> </div>
<div class="line"><a id="l00285" name="l00285"></a><span class="lineno">  285</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> BlockStorageAllocator&gt;</div>
<div class="line"><a id="l00286" name="l00286"></a><span class="lineno">  286</span><span class="keywordtype">bool</span> <a class="code hl_function" href="../../df/d2d/classez_tag_set_template.htm#a8c0b707f9f94e30f547468908e717e69">ezTagSetTemplate&lt;BlockStorageAllocator&gt;::IsSet</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../db/db8/classez_tag.htm">ezTag</a>&amp; tag)<span class="keyword"> const</span></div>
<div class="line"><a id="l00287" name="l00287"></a><span class="lineno">  287</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00288" name="l00288"></a><span class="lineno">  288</span>  EZ_ASSERT_DEV(tag.IsValid(), <span class="stringliteral">&quot;Only valid tags can be checked!&quot;</span>);</div>
<div class="line"><a id="l00289" name="l00289"></a><span class="lineno">  289</span> </div>
<div class="line"><a id="l00290" name="l00290"></a><span class="lineno">  290</span>  <span class="keywordflow">if</span> (IsTagInAllocatedRange(tag))</div>
<div class="line"><a id="l00291" name="l00291"></a><span class="lineno">  291</span>  {</div>
<div class="line"><a id="l00292" name="l00292"></a><span class="lineno">  292</span>    <span class="keywordflow">return</span> (m_TagBlocks[tag.m_uiBlockIndex - GetTagBlockStart()] &amp; EZ_BIT(tag.m_uiBitIndex)) != 0;</div>
<div class="line"><a id="l00293" name="l00293"></a><span class="lineno">  293</span>  }</div>
<div class="line"><a id="l00294" name="l00294"></a><span class="lineno">  294</span>  <span class="keywordflow">else</span></div>
<div class="line"><a id="l00295" name="l00295"></a><span class="lineno">  295</span>  {</div>
<div class="line"><a id="l00296" name="l00296"></a><span class="lineno">  296</span>    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00297" name="l00297"></a><span class="lineno">  297</span>  }</div>
<div class="line"><a id="l00298" name="l00298"></a><span class="lineno">  298</span>}</div>
<div class="line"><a id="l00299" name="l00299"></a><span class="lineno">  299</span> </div>
<div class="line"><a id="l00300" name="l00300"></a><span class="lineno">  300</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> BlockStorageAllocator&gt;</div>
<div class="line"><a id="l00301" name="l00301"></a><span class="lineno">  301</span><span class="keywordtype">bool</span> <a class="code hl_function" href="../../df/d2d/classez_tag_set_template.htm#a9a3214c81e485934ff59c298b4cdd61c">ezTagSetTemplate&lt;BlockStorageAllocator&gt;::IsAnySet</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../df/d2d/classez_tag_set_template.htm">ezTagSetTemplate</a>&amp; otherSet)<span class="keyword"> const</span></div>
<div class="line"><a id="l00302" name="l00302"></a><span class="lineno">  302</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00303" name="l00303"></a><span class="lineno">  303</span>  <span class="comment">// If any of the sets is empty nothing can match</span></div>
<div class="line"><a id="l00304" name="l00304"></a><span class="lineno">  304</span>  <span class="keywordflow">if</span> (<a class="code hl_function" href="../../df/d2d/classez_tag_set_template.htm#a99b27819e3b53cda54d1431131270ba0">IsEmpty</a>() || otherSet.<a class="code hl_function" href="../../df/d2d/classez_tag_set_template.htm#a99b27819e3b53cda54d1431131270ba0">IsEmpty</a>())</div>
<div class="line"><a id="l00305" name="l00305"></a><span class="lineno">  305</span>    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00306" name="l00306"></a><span class="lineno">  306</span> </div>
<div class="line"><a id="l00307" name="l00307"></a><span class="lineno">  307</span>  <span class="comment">// Calculate range to compare</span></div>
<div class="line"><a id="l00308" name="l00308"></a><span class="lineno">  308</span>  <span class="keyword">const</span> ezUInt32 uiMaxBlockStart = <a class="code hl_function" href="../../db/d78/namespaceez_math.htm#a6f7ee19d0f8e81ff6ae5f394075e3a56">ezMath::Max</a>(GetTagBlockStart(), otherSet.GetTagBlockStart());</div>
<div class="line"><a id="l00309" name="l00309"></a><span class="lineno">  309</span>  <span class="keyword">const</span> ezUInt32 uiMinBlockEnd = <a class="code hl_function" href="../../db/d78/namespaceez_math.htm#ad8009b4da9cb427658d71e30576f209e">ezMath::Min</a>(GetTagBlockEnd(), otherSet.GetTagBlockEnd());</div>
<div class="line"><a id="l00310" name="l00310"></a><span class="lineno">  310</span> </div>
<div class="line"><a id="l00311" name="l00311"></a><span class="lineno">  311</span>  <span class="keywordflow">if</span> (uiMaxBlockStart &gt; uiMinBlockEnd)</div>
<div class="line"><a id="l00312" name="l00312"></a><span class="lineno">  312</span>    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00313" name="l00313"></a><span class="lineno">  313</span> </div>
<div class="line"><a id="l00314" name="l00314"></a><span class="lineno">  314</span>  <span class="keywordflow">for</span> (ezUInt32 i = uiMaxBlockStart; i &lt; uiMinBlockEnd; ++i)</div>
<div class="line"><a id="l00315" name="l00315"></a><span class="lineno">  315</span>  {</div>
<div class="line"><a id="l00316" name="l00316"></a><span class="lineno">  316</span>    <span class="keyword">const</span> ezUInt32 uiThisBlockStorageIndex = i - GetTagBlockStart();</div>
<div class="line"><a id="l00317" name="l00317"></a><span class="lineno">  317</span>    <span class="keyword">const</span> ezUInt32 uiOtherBlockStorageIndex = i - otherSet.GetTagBlockStart();</div>
<div class="line"><a id="l00318" name="l00318"></a><span class="lineno">  318</span> </div>
<div class="line"><a id="l00319" name="l00319"></a><span class="lineno">  319</span>    <span class="keywordflow">if</span> ((m_TagBlocks[uiThisBlockStorageIndex] &amp; otherSet.m_TagBlocks[uiOtherBlockStorageIndex]) != 0)</div>
<div class="line"><a id="l00320" name="l00320"></a><span class="lineno">  320</span>    {</div>
<div class="line"><a id="l00321" name="l00321"></a><span class="lineno">  321</span>      <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a id="l00322" name="l00322"></a><span class="lineno">  322</span>    }</div>
<div class="line"><a id="l00323" name="l00323"></a><span class="lineno">  323</span>  }</div>
<div class="line"><a id="l00324" name="l00324"></a><span class="lineno">  324</span> </div>
<div class="line"><a id="l00325" name="l00325"></a><span class="lineno">  325</span>  <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00326" name="l00326"></a><span class="lineno">  326</span>}</div>
<div class="line"><a id="l00327" name="l00327"></a><span class="lineno">  327</span> </div>
<div class="line"><a id="l00328" name="l00328"></a><span class="lineno">  328</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> BlockStorageAllocator <span class="comment">/*= ezDefaultAllocatorWrapper*/</span>&gt;</div>
<div class="line"><a id="l00329" name="l00329"></a><span class="lineno">  329</span>EZ_ALWAYS_INLINE ezUInt32 <a class="code hl_function" href="../../df/d2d/classez_tag_set_template.htm#a86b80aa50a162f14199bf61dc3429b4c">ezTagSetTemplate&lt;BlockStorageAllocator&gt;::GetNumTagsSet</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00330" name="l00330"></a><span class="lineno">  330</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00331" name="l00331"></a><span class="lineno">  331</span>  <span class="keywordflow">return</span> GetTagCount();</div>
<div class="line"><a id="l00332" name="l00332"></a><span class="lineno">  332</span>}</div>
<div class="line"><a id="l00333" name="l00333"></a><span class="lineno">  333</span> </div>
<div class="line"><a id="l00334" name="l00334"></a><span class="lineno">  334</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> BlockStorageAllocator&gt;</div>
<div class="line"><a id="l00335" name="l00335"></a><span class="lineno">  335</span>EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code hl_function" href="../../df/d2d/classez_tag_set_template.htm#a99b27819e3b53cda54d1431131270ba0">ezTagSetTemplate&lt;BlockStorageAllocator&gt;::IsEmpty</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00336" name="l00336"></a><span class="lineno">  336</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00337" name="l00337"></a><span class="lineno">  337</span>  <span class="keywordflow">return</span> GetTagCount() == 0;</div>
<div class="line"><a id="l00338" name="l00338"></a><span class="lineno">  338</span>}</div>
<div class="line"><a id="l00339" name="l00339"></a><span class="lineno">  339</span> </div>
<div class="line"><a id="l00340" name="l00340"></a><span class="lineno">  340</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> BlockStorageAllocator&gt;</div>
<div class="line"><a id="l00341" name="l00341"></a><span class="lineno">  341</span><span class="keywordtype">void</span> <a class="code hl_function" href="../../df/d2d/classez_tag_set_template.htm#a62d21771b5790554058e25d6256dff8b">ezTagSetTemplate&lt;BlockStorageAllocator&gt;::Clear</a>()</div>
<div class="line"><a id="l00342" name="l00342"></a><span class="lineno">  342</span>{</div>
<div class="line"><a id="l00343" name="l00343"></a><span class="lineno">  343</span>  m_TagBlocks.<a class="code hl_function" href="../../d4/d0b/classez_small_array_base.htm#a5787f727bd1a20181e3e2150c7d37fc2">Clear</a>();</div>
<div class="line"><a id="l00344" name="l00344"></a><span class="lineno">  344</span>  SetTagBlockStart(ezSmallInvalidIndex);</div>
<div class="line"><a id="l00345" name="l00345"></a><span class="lineno">  345</span>  SetTagCount(0);</div>
<div class="line"><a id="l00346" name="l00346"></a><span class="lineno">  346</span>}</div>
<div class="line"><a id="l00347" name="l00347"></a><span class="lineno">  347</span> </div>
<div class="line"><a id="l00348" name="l00348"></a><span class="lineno">  348</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> BlockStorageAllocator&gt;</div>
<div class="line"><a id="l00349" name="l00349"></a><span class="lineno">  349</span><span class="keywordtype">void</span> <a class="code hl_function" href="../../df/d2d/classez_tag_set_template.htm#aa3510deb7eb1847eca40cfd405dd85ad">ezTagSetTemplate&lt;BlockStorageAllocator&gt;::SetByName</a>(<a class="code hl_class" href="../../d9/d18/classez_string_view.htm">ezStringView</a> sTag)</div>
<div class="line"><a id="l00350" name="l00350"></a><span class="lineno">  350</span>{</div>
<div class="line"><a id="l00351" name="l00351"></a><span class="lineno">  351</span>  <span class="keyword">const</span> <a class="code hl_class" href="../../db/db8/classez_tag.htm">ezTag</a>&amp; tag = ezTagRegistry::GetGlobalRegistry().<a class="code hl_function" href="../../d4/d71/classez_tag_registry.htm#a80a632811d45a8e0b8e6ac4c80297c7a">RegisterTag</a>(sTag);</div>
<div class="line"><a id="l00352" name="l00352"></a><span class="lineno">  352</span>  <a class="code hl_function" href="../../df/d2d/classez_tag_set_template.htm#a516919ed07be40ca871a8e63b1b274fc">Set</a>(tag);</div>
<div class="line"><a id="l00353" name="l00353"></a><span class="lineno">  353</span>}</div>
<div class="line"><a id="l00354" name="l00354"></a><span class="lineno">  354</span> </div>
<div class="line"><a id="l00355" name="l00355"></a><span class="lineno">  355</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> BlockStorageAllocator&gt;</div>
<div class="line"><a id="l00356" name="l00356"></a><span class="lineno">  356</span><span class="keywordtype">void</span> <a class="code hl_function" href="../../df/d2d/classez_tag_set_template.htm#a6653127de812aa3f83d25fbe453d58ee">ezTagSetTemplate&lt;BlockStorageAllocator&gt;::RemoveByName</a>(<a class="code hl_class" href="../../d9/d18/classez_string_view.htm">ezStringView</a> sTag)</div>
<div class="line"><a id="l00357" name="l00357"></a><span class="lineno">  357</span>{</div>
<div class="line"><a id="l00358" name="l00358"></a><span class="lineno">  358</span>  <span class="keywordflow">if</span> (<span class="keyword">const</span> <a class="code hl_class" href="../../db/db8/classez_tag.htm">ezTag</a>* tag = ezTagRegistry::GetGlobalRegistry().GetTagByName(<a class="code hl_class" href="../../db/dcf/classez_temp_hashed_string.htm">ezTempHashedString</a>(sTag)))</div>
<div class="line"><a id="l00359" name="l00359"></a><span class="lineno">  359</span>  {</div>
<div class="line"><a id="l00360" name="l00360"></a><span class="lineno">  360</span>    <a class="code hl_function" href="../../df/d2d/classez_tag_set_template.htm#aec2dd63289541a8e4e23405e84413a1d">Remove</a>(*tag);</div>
<div class="line"><a id="l00361" name="l00361"></a><span class="lineno">  361</span>  }</div>
<div class="line"><a id="l00362" name="l00362"></a><span class="lineno">  362</span>}</div>
<div class="line"><a id="l00363" name="l00363"></a><span class="lineno">  363</span> </div>
<div class="line"><a id="l00364" name="l00364"></a><span class="lineno">  364</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> BlockStorageAllocator&gt;</div>
<div class="line"><a id="l00365" name="l00365"></a><span class="lineno">  365</span><span class="keywordtype">bool</span> <a class="code hl_function" href="../../df/d2d/classez_tag_set_template.htm#a5433fab2d5c66350938661589ebee457">ezTagSetTemplate&lt;BlockStorageAllocator&gt;::IsSetByName</a>(<a class="code hl_class" href="../../d9/d18/classez_string_view.htm">ezStringView</a> sTag)<span class="keyword"> const</span></div>
<div class="line"><a id="l00366" name="l00366"></a><span class="lineno">  366</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00367" name="l00367"></a><span class="lineno">  367</span>  <span class="keywordflow">if</span> (<span class="keyword">const</span> <a class="code hl_class" href="../../db/db8/classez_tag.htm">ezTag</a>* tag = ezTagRegistry::GetGlobalRegistry().GetTagByName(<a class="code hl_class" href="../../db/dcf/classez_temp_hashed_string.htm">ezTempHashedString</a>(sTag)))</div>
<div class="line"><a id="l00368" name="l00368"></a><span class="lineno">  368</span>  {</div>
<div class="line"><a id="l00369" name="l00369"></a><span class="lineno">  369</span>    <span class="keywordflow">return</span> <a class="code hl_function" href="../../df/d2d/classez_tag_set_template.htm#a8c0b707f9f94e30f547468908e717e69">IsSet</a>(*tag);</div>
<div class="line"><a id="l00370" name="l00370"></a><span class="lineno">  370</span>  }</div>
<div class="line"><a id="l00371" name="l00371"></a><span class="lineno">  371</span> </div>
<div class="line"><a id="l00372" name="l00372"></a><span class="lineno">  372</span>  <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00373" name="l00373"></a><span class="lineno">  373</span>}</div>
<div class="line"><a id="l00374" name="l00374"></a><span class="lineno">  374</span> </div>
<div class="line"><a id="l00375" name="l00375"></a><span class="lineno">  375</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> BlockStorageAllocator <span class="comment">/*= ezDefaultAllocatorWrapper*/</span>&gt;</div>
<div class="line"><a id="l00376" name="l00376"></a><span class="lineno">  376</span><span class="keywordtype">bool</span> <a class="code hl_function" href="../../df/d2d/classez_tag_set_template.htm#a5433fab2d5c66350938661589ebee457">ezTagSetTemplate&lt;BlockStorageAllocator&gt;::IsSetByName</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../db/dcf/classez_temp_hashed_string.htm">ezTempHashedString</a>&amp; sTag)<span class="keyword"> const</span></div>
<div class="line"><a id="l00377" name="l00377"></a><span class="lineno">  377</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00378" name="l00378"></a><span class="lineno">  378</span>  <span class="keywordflow">if</span> (<span class="keyword">const</span> <a class="code hl_class" href="../../db/db8/classez_tag.htm">ezTag</a>* tag = ezTagRegistry::GetGlobalRegistry().GetTagByName(sTag))</div>
<div class="line"><a id="l00379" name="l00379"></a><span class="lineno">  379</span>  {</div>
<div class="line"><a id="l00380" name="l00380"></a><span class="lineno">  380</span>    <span class="keywordflow">return</span> <a class="code hl_function" href="../../df/d2d/classez_tag_set_template.htm#a8c0b707f9f94e30f547468908e717e69">IsSet</a>(*tag);</div>
<div class="line"><a id="l00381" name="l00381"></a><span class="lineno">  381</span>  }</div>
<div class="line"><a id="l00382" name="l00382"></a><span class="lineno">  382</span> </div>
<div class="line"><a id="l00383" name="l00383"></a><span class="lineno">  383</span>  <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00384" name="l00384"></a><span class="lineno">  384</span>}</div>
<div class="line"><a id="l00385" name="l00385"></a><span class="lineno">  385</span> </div>
<div class="line"><a id="l00386" name="l00386"></a><span class="lineno">  386</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> BlockStorageAllocator&gt;</div>
<div class="line"><a id="l00387" name="l00387"></a><span class="lineno">  387</span>EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code hl_class" href="../../df/d2d/classez_tag_set_template.htm">ezTagSetTemplate&lt;BlockStorageAllocator&gt;::IsTagInAllocatedRange</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../db/db8/classez_tag.htm">ezTag</a>&amp; Tag)<span class="keyword"> const</span></div>
<div class="line"><a id="l00388" name="l00388"></a><span class="lineno">  388</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00389" name="l00389"></a><span class="lineno">  389</span>  <span class="keywordflow">return</span> Tag.m_uiBlockIndex &gt;= GetTagBlockStart() &amp;&amp; Tag.m_uiBlockIndex &lt; GetTagBlockEnd();</div>
<div class="line"><a id="l00390" name="l00390"></a><span class="lineno">  390</span>}</div>
<div class="line"><a id="l00391" name="l00391"></a><span class="lineno">  391</span> </div>
<div class="line"><a id="l00392" name="l00392"></a><span class="lineno">  392</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> BlockStorageAllocator&gt;</div>
<div class="line"><a id="l00393" name="l00393"></a><span class="lineno">  393</span><span class="keywordtype">void</span> <a class="code hl_class" href="../../df/d2d/classez_tag_set_template.htm">ezTagSetTemplate&lt;BlockStorageAllocator&gt;::Reallocate</a>(ezUInt32 uiNewTagBlockStart, ezUInt32 uiNewMaxBlockIndex)</div>
<div class="line"><a id="l00394" name="l00394"></a><span class="lineno">  394</span>{</div>
<div class="line"><a id="l00395" name="l00395"></a><span class="lineno">  395</span>  EZ_ASSERT_DEV(uiNewTagBlockStart &lt; ezSmallInvalidIndex, <span class="stringliteral">&quot;Tag block start is too big&quot;</span>);</div>
<div class="line"><a id="l00396" name="l00396"></a><span class="lineno">  396</span>  <span class="keyword">const</span> ezUInt16 uiNewBlockArraySize = <span class="keyword">static_cast&lt;</span>ezUInt16<span class="keyword">&gt;</span>((uiNewMaxBlockIndex - uiNewTagBlockStart) + 1);</div>
<div class="line"><a id="l00397" name="l00397"></a><span class="lineno">  397</span> </div>
<div class="line"><a id="l00398" name="l00398"></a><span class="lineno">  398</span>  <span class="comment">// Early out for non-filled tag sets</span></div>
<div class="line"><a id="l00399" name="l00399"></a><span class="lineno">  399</span>  <span class="keywordflow">if</span> (m_TagBlocks.<a class="code hl_function" href="../../d4/d0b/classez_small_array_base.htm#a0b66ce1a35b2f1659ba61c534969dae4">IsEmpty</a>())</div>
<div class="line"><a id="l00400" name="l00400"></a><span class="lineno">  400</span>  {</div>
<div class="line"><a id="l00401" name="l00401"></a><span class="lineno">  401</span>    m_TagBlocks.SetCount(uiNewBlockArraySize);</div>
<div class="line"><a id="l00402" name="l00402"></a><span class="lineno">  402</span>    SetTagBlockStart(<span class="keyword">static_cast&lt;</span>ezUInt16<span class="keyword">&gt;</span>(uiNewTagBlockStart));</div>
<div class="line"><a id="l00403" name="l00403"></a><span class="lineno">  403</span> </div>
<div class="line"><a id="l00404" name="l00404"></a><span class="lineno">  404</span>    <span class="keywordflow">return</span>;</div>
<div class="line"><a id="l00405" name="l00405"></a><span class="lineno">  405</span>  }</div>
<div class="line"><a id="l00406" name="l00406"></a><span class="lineno">  406</span> </div>
<div class="line"><a id="l00407" name="l00407"></a><span class="lineno">  407</span>  EZ_ASSERT_DEBUG(uiNewTagBlockStart &lt;= GetTagBlockStart(), <span class="stringliteral">&quot;New block start must be smaller or equal to current block start!&quot;</span>);</div>
<div class="line"><a id="l00408" name="l00408"></a><span class="lineno">  408</span> </div>
<div class="line"><a id="l00409" name="l00409"></a><span class="lineno">  409</span>  <a class="code hl_class" href="../../d0/d0c/classez_small_array.htm">ezSmallArray&lt;ezUInt64, 32, BlockStorageAllocator&gt;</a> helperArray;</div>
<div class="line"><a id="l00410" name="l00410"></a><span class="lineno">  410</span>  helperArray.SetCount(uiNewBlockArraySize);</div>
<div class="line"><a id="l00411" name="l00411"></a><span class="lineno">  411</span> </div>
<div class="line"><a id="l00412" name="l00412"></a><span class="lineno">  412</span>  <span class="keyword">const</span> ezUInt32 uiOldBlockStartOffset = GetTagBlockStart() - uiNewTagBlockStart;</div>
<div class="line"><a id="l00413" name="l00413"></a><span class="lineno">  413</span> </div>
<div class="line"><a id="l00414" name="l00414"></a><span class="lineno">  414</span>  <span class="comment">// Copy old data to the new array</span></div>
<div class="line"><a id="l00415" name="l00415"></a><span class="lineno">  415</span>  <a class="code hl_function" href="../../dc/d4d/classez_memory_utils.htm#a87c41811a95fa63da651f6779931d9cf">ezMemoryUtils::Copy</a>(helperArray.<a class="code hl_function" href="../../d4/d0b/classez_small_array_base.htm#aaa9d377e69c087d2be3c4897ecce0471">GetData</a>() + uiOldBlockStartOffset, m_TagBlocks.<a class="code hl_function" href="../../d4/d0b/classez_small_array_base.htm#aaa9d377e69c087d2be3c4897ecce0471">GetData</a>(), m_TagBlocks.<a class="code hl_function" href="../../d4/d0b/classez_small_array_base.htm#ac13be38fb1e58b0b94c405db9318792a">GetCount</a>());</div>
<div class="line"><a id="l00416" name="l00416"></a><span class="lineno">  416</span> </div>
<div class="line"><a id="l00417" name="l00417"></a><span class="lineno">  417</span>  <span class="comment">// Use array ptr copy assignment so it doesn&#39;t modify the user data in m_TagBlocks</span></div>
<div class="line"><a id="l00418" name="l00418"></a><span class="lineno">  418</span>  m_TagBlocks = helperArray.<a class="code hl_function" href="../../d4/d0b/classez_small_array_base.htm#a27bc30d0e06cb01d8d5278245a6483f6">GetArrayPtr</a>();</div>
<div class="line"><a id="l00419" name="l00419"></a><span class="lineno">  419</span>  SetTagBlockStart(<span class="keyword">static_cast&lt;</span>ezUInt16<span class="keyword">&gt;</span>(uiNewTagBlockStart));</div>
<div class="line"><a id="l00420" name="l00420"></a><span class="lineno">  420</span>}</div>
<div class="line"><a id="l00421" name="l00421"></a><span class="lineno">  421</span> </div>
<div class="line"><a id="l00422" name="l00422"></a><span class="lineno">  422</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> BlockStorageAllocator <span class="comment">/*= ezDefaultAllocatorWrapper*/</span>&gt;</div>
<div class="line"><a id="l00423" name="l00423"></a><span class="lineno">  423</span>EZ_ALWAYS_INLINE ezUInt16 <a class="code hl_class" href="../../df/d2d/classez_tag_set_template.htm">ezTagSetTemplate&lt;BlockStorageAllocator&gt;::GetTagBlockStart</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00424" name="l00424"></a><span class="lineno">  424</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00425" name="l00425"></a><span class="lineno">  425</span>  <span class="keywordflow">return</span> m_TagBlocks.template GetUserData&lt;UserData&gt;().m_uiTagBlockStart;</div>
<div class="line"><a id="l00426" name="l00426"></a><span class="lineno">  426</span>}</div>
<div class="line"><a id="l00427" name="l00427"></a><span class="lineno">  427</span> </div>
<div class="line"><a id="l00428" name="l00428"></a><span class="lineno">  428</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> BlockStorageAllocator <span class="comment">/*= ezDefaultAllocatorWrapper*/</span>&gt;</div>
<div class="line"><a id="l00429" name="l00429"></a><span class="lineno">  429</span>EZ_ALWAYS_INLINE ezUInt16 <a class="code hl_class" href="../../df/d2d/classez_tag_set_template.htm">ezTagSetTemplate&lt;BlockStorageAllocator&gt;::GetTagBlockEnd</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00430" name="l00430"></a><span class="lineno">  430</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00431" name="l00431"></a><span class="lineno">  431</span>  <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span>ezUInt16<span class="keyword">&gt;</span>(GetTagBlockStart() + m_TagBlocks.<a class="code hl_function" href="../../d4/d0b/classez_small_array_base.htm#ac13be38fb1e58b0b94c405db9318792a">GetCount</a>());</div>
<div class="line"><a id="l00432" name="l00432"></a><span class="lineno">  432</span>}</div>
<div class="line"><a id="l00433" name="l00433"></a><span class="lineno">  433</span> </div>
<div class="line"><a id="l00434" name="l00434"></a><span class="lineno">  434</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> BlockStorageAllocator <span class="comment">/*= ezDefaultAllocatorWrapper*/</span>&gt;</div>
<div class="line"><a id="l00435" name="l00435"></a><span class="lineno">  435</span>EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code hl_class" href="../../df/d2d/classez_tag_set_template.htm">ezTagSetTemplate&lt;BlockStorageAllocator&gt;::SetTagBlockStart</a>(ezUInt16 uiTagBlockStart)</div>
<div class="line"><a id="l00436" name="l00436"></a><span class="lineno">  436</span>{</div>
<div class="line"><a id="l00437" name="l00437"></a><span class="lineno">  437</span>  m_TagBlocks.template GetUserData&lt;UserData&gt;().m_uiTagBlockStart = uiTagBlockStart;</div>
<div class="line"><a id="l00438" name="l00438"></a><span class="lineno">  438</span>}</div>
<div class="line"><a id="l00439" name="l00439"></a><span class="lineno">  439</span> </div>
<div class="line"><a id="l00440" name="l00440"></a><span class="lineno">  440</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> BlockStorageAllocator <span class="comment">/*= ezDefaultAllocatorWrapper*/</span>&gt;</div>
<div class="line"><a id="l00441" name="l00441"></a><span class="lineno">  441</span>EZ_ALWAYS_INLINE ezUInt16 <a class="code hl_class" href="../../df/d2d/classez_tag_set_template.htm">ezTagSetTemplate&lt;BlockStorageAllocator&gt;::GetTagCount</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00442" name="l00442"></a><span class="lineno">  442</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00443" name="l00443"></a><span class="lineno">  443</span>  <span class="keywordflow">return</span> m_TagBlocks.template GetUserData&lt;UserData&gt;().m_uiTagCount;</div>
<div class="line"><a id="l00444" name="l00444"></a><span class="lineno">  444</span>}</div>
<div class="line"><a id="l00445" name="l00445"></a><span class="lineno">  445</span> </div>
<div class="line"><a id="l00446" name="l00446"></a><span class="lineno">  446</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> BlockStorageAllocator <span class="comment">/*= ezDefaultAllocatorWrapper*/</span>&gt;</div>
<div class="line"><a id="l00447" name="l00447"></a><span class="lineno">  447</span>EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code hl_class" href="../../df/d2d/classez_tag_set_template.htm">ezTagSetTemplate&lt;BlockStorageAllocator&gt;::SetTagCount</a>(ezUInt16 uiTagCount)</div>
<div class="line"><a id="l00448" name="l00448"></a><span class="lineno">  448</span>{</div>
<div class="line"><a id="l00449" name="l00449"></a><span class="lineno">  449</span>  m_TagBlocks.template GetUserData&lt;UserData&gt;().m_uiTagCount = uiTagCount;</div>
<div class="line"><a id="l00450" name="l00450"></a><span class="lineno">  450</span>}</div>
<div class="line"><a id="l00451" name="l00451"></a><span class="lineno">  451</span> </div>
<div class="line"><a id="l00452" name="l00452"></a><span class="lineno">  452</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> BlockStorageAllocator <span class="comment">/*= ezDefaultAllocatorWrapper*/</span>&gt;</div>
<div class="line"><a id="l00453" name="l00453"></a><span class="lineno">  453</span>EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code hl_class" href="../../df/d2d/classez_tag_set_template.htm">ezTagSetTemplate&lt;BlockStorageAllocator&gt;::IncreaseTagCount</a>()</div>
<div class="line"><a id="l00454" name="l00454"></a><span class="lineno">  454</span>{</div>
<div class="line"><a id="l00455" name="l00455"></a><span class="lineno">  455</span>  m_TagBlocks.template GetUserData&lt;UserData&gt;().m_uiTagCount++;</div>
<div class="line"><a id="l00456" name="l00456"></a><span class="lineno">  456</span>}</div>
<div class="line"><a id="l00457" name="l00457"></a><span class="lineno">  457</span> </div>
<div class="line"><a id="l00458" name="l00458"></a><span class="lineno">  458</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> BlockStorageAllocator <span class="comment">/*= ezDefaultAllocatorWrapper*/</span>&gt;</div>
<div class="line"><a id="l00459" name="l00459"></a><span class="lineno">  459</span>EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code hl_class" href="../../df/d2d/classez_tag_set_template.htm">ezTagSetTemplate&lt;BlockStorageAllocator&gt;::DecreaseTagCount</a>()</div>
<div class="line"><a id="l00460" name="l00460"></a><span class="lineno">  460</span>{</div>
<div class="line"><a id="l00461" name="l00461"></a><span class="lineno">  461</span>  m_TagBlocks.template GetUserData&lt;UserData&gt;().m_uiTagCount--;</div>
<div class="line"><a id="l00462" name="l00462"></a><span class="lineno">  462</span>}</div>
<div class="line"><a id="l00463" name="l00463"></a><span class="lineno">  463</span> </div>
<div class="line"><a id="l00464" name="l00464"></a><span class="lineno">  464</span><span class="keyword">static</span> ezTypeVersion s_TagSetVersion = 1;</div>
<div class="line"><a id="l00465" name="l00465"></a><span class="lineno">  465</span> </div>
<div class="line"><a id="l00466" name="l00466"></a><span class="lineno">  466</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> BlockStorageAllocator <span class="comment">/*= ezDefaultAllocatorWrapper*/</span>&gt;</div>
<div class="line"><a id="l00467" name="l00467"></a><span class="lineno">  467</span><span class="keywordtype">void</span> <a class="code hl_function" href="../../df/d2d/classez_tag_set_template.htm#adcb11a0052f4510160815f59b2f1075e">ezTagSetTemplate&lt;BlockStorageAllocator&gt;::Save</a>(<a class="code hl_class" href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a>&amp; inout_stream)<span class="keyword"> const</span></div>
<div class="line"><a id="l00468" name="l00468"></a><span class="lineno">  468</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00469" name="l00469"></a><span class="lineno">  469</span>  <span class="keyword">const</span> ezUInt16 uiNumTags = <span class="keyword">static_cast&lt;</span>ezUInt16<span class="keyword">&gt;</span>(<a class="code hl_function" href="../../df/d2d/classez_tag_set_template.htm#a86b80aa50a162f14199bf61dc3429b4c">GetNumTagsSet</a>());</div>
<div class="line"><a id="l00470" name="l00470"></a><span class="lineno">  470</span>  inout_stream &lt;&lt; uiNumTags;</div>
<div class="line"><a id="l00471" name="l00471"></a><span class="lineno">  471</span> </div>
<div class="line"><a id="l00472" name="l00472"></a><span class="lineno">  472</span>  inout_stream.<a class="code hl_function" href="../../d6/dcc/classez_stream_writer.htm#af0f04420ac6163d305babf9147b20e60">WriteVersion</a>(s_TagSetVersion);</div>
<div class="line"><a id="l00473" name="l00473"></a><span class="lineno">  473</span> </div>
<div class="line"><a id="l00474" name="l00474"></a><span class="lineno">  474</span>  <span class="keywordflow">for</span> (Iterator it = <a class="code hl_function" href="../../df/d2d/classez_tag_set_template.htm#a8f30f764119dbe32537cdbd0ae1c50f5">GetIterator</a>(); it.<a class="code hl_function" href="../../db/db7/classez_tag_set_template_1_1_iterator.htm#a27524a084f85fae4f656c2a3eb895014">IsValid</a>(); ++it)</div>
<div class="line"><a id="l00475" name="l00475"></a><span class="lineno">  475</span>  {</div>
<div class="line"><a id="l00476" name="l00476"></a><span class="lineno">  476</span>    <span class="keyword">const</span> <a class="code hl_class" href="../../db/db8/classez_tag.htm">ezTag</a>&amp; tag = *it;</div>
<div class="line"><a id="l00477" name="l00477"></a><span class="lineno">  477</span> </div>
<div class="line"><a id="l00478" name="l00478"></a><span class="lineno">  478</span>    inout_stream &lt;&lt; tag.m_sTagString;</div>
<div class="line"><a id="l00479" name="l00479"></a><span class="lineno">  479</span>  }</div>
<div class="line"><a id="l00480" name="l00480"></a><span class="lineno">  480</span>}</div>
<div class="line"><a id="l00481" name="l00481"></a><span class="lineno">  481</span> </div>
<div class="line"><a id="l00482" name="l00482"></a><span class="lineno">  482</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> BlockStorageAllocator <span class="comment">/*= ezDefaultAllocatorWrapper*/</span>&gt;</div>
<div class="line"><a id="l00483" name="l00483"></a><span class="lineno">  483</span><span class="keywordtype">void</span> <a class="code hl_function" href="../../df/d2d/classez_tag_set_template.htm#a8c7aea7e10915798747312655a9f3dff">ezTagSetTemplate&lt;BlockStorageAllocator&gt;::Load</a>(<a class="code hl_class" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a>&amp; inout_stream, <a class="code hl_class" href="../../d4/d71/classez_tag_registry.htm">ezTagRegistry</a>&amp; inout_registry)</div>
<div class="line"><a id="l00484" name="l00484"></a><span class="lineno">  484</span>{</div>
<div class="line"><a id="l00485" name="l00485"></a><span class="lineno">  485</span>  ezUInt16 uiNumTags = 0;</div>
<div class="line"><a id="l00486" name="l00486"></a><span class="lineno">  486</span>  inout_stream &gt;&gt; uiNumTags;</div>
<div class="line"><a id="l00487" name="l00487"></a><span class="lineno">  487</span> </div>
<div class="line"><a id="l00488" name="l00488"></a><span class="lineno">  488</span>  <span class="comment">// Manually read version value since 0 can be a valid version here</span></div>
<div class="line"><a id="l00489" name="l00489"></a><span class="lineno">  489</span>  ezTypeVersion version;</div>
<div class="line"><a id="l00490" name="l00490"></a><span class="lineno">  490</span>  inout_stream.<a class="code hl_function" href="../../d2/d19/classez_stream_reader.htm#a3b27188b834171b325c22eaffda3b6a0">ReadWordValue</a>(&amp;version).<a class="code hl_function" href="../../d4/da9/structez_result.htm#acb0bb72646ee6d5966edd5b4108fb670">IgnoreResult</a>();</div>
<div class="line"><a id="l00491" name="l00491"></a><span class="lineno">  491</span> </div>
<div class="line"><a id="l00492" name="l00492"></a><span class="lineno">  492</span>  <span class="keywordflow">if</span> (version == 0)</div>
<div class="line"><a id="l00493" name="l00493"></a><span class="lineno">  493</span>  {</div>
<div class="line"><a id="l00494" name="l00494"></a><span class="lineno">  494</span>    <span class="keywordflow">for</span> (ezUInt32 i = 0; i &lt; uiNumTags; ++i)</div>
<div class="line"><a id="l00495" name="l00495"></a><span class="lineno">  495</span>    {</div>
<div class="line"><a id="l00496" name="l00496"></a><span class="lineno">  496</span>      ezUInt32 uiTagMurmurHash = 0;</div>
<div class="line"><a id="l00497" name="l00497"></a><span class="lineno">  497</span>      inout_stream &gt;&gt; uiTagMurmurHash;</div>
<div class="line"><a id="l00498" name="l00498"></a><span class="lineno">  498</span> </div>
<div class="line"><a id="l00499" name="l00499"></a><span class="lineno">  499</span>      <span class="keywordflow">if</span> (<span class="keyword">const</span> <a class="code hl_class" href="../../db/db8/classez_tag.htm">ezTag</a>* pTag = inout_registry.<a class="code hl_function" href="../../d4/d71/classez_tag_registry.htm#abed28fbe05617c9f2235cf54775f88b8">GetTagByMurmurHash</a>(uiTagMurmurHash))</div>
<div class="line"><a id="l00500" name="l00500"></a><span class="lineno">  500</span>      {</div>
<div class="line"><a id="l00501" name="l00501"></a><span class="lineno">  501</span>        <a class="code hl_function" href="../../df/d2d/classez_tag_set_template.htm#a516919ed07be40ca871a8e63b1b274fc">Set</a>(*pTag);</div>
<div class="line"><a id="l00502" name="l00502"></a><span class="lineno">  502</span>      }</div>
<div class="line"><a id="l00503" name="l00503"></a><span class="lineno">  503</span>    }</div>
<div class="line"><a id="l00504" name="l00504"></a><span class="lineno">  504</span>  }</div>
<div class="line"><a id="l00505" name="l00505"></a><span class="lineno">  505</span>  <span class="keywordflow">else</span></div>
<div class="line"><a id="l00506" name="l00506"></a><span class="lineno">  506</span>  {</div>
<div class="line"><a id="l00507" name="l00507"></a><span class="lineno">  507</span>    <span class="keywordflow">for</span> (ezUInt32 i = 0; i &lt; uiNumTags; ++i)</div>
<div class="line"><a id="l00508" name="l00508"></a><span class="lineno">  508</span>    {</div>
<div class="line"><a id="l00509" name="l00509"></a><span class="lineno">  509</span>      <a class="code hl_class" href="../../de/dce/classez_hashed_string.htm">ezHashedString</a> tagString;</div>
<div class="line"><a id="l00510" name="l00510"></a><span class="lineno">  510</span>      inout_stream &gt;&gt; tagString;</div>
<div class="line"><a id="l00511" name="l00511"></a><span class="lineno">  511</span> </div>
<div class="line"><a id="l00512" name="l00512"></a><span class="lineno">  512</span>      <span class="keyword">const</span> <a class="code hl_class" href="../../db/db8/classez_tag.htm">ezTag</a>&amp; tag = inout_registry.<a class="code hl_function" href="../../d4/d71/classez_tag_registry.htm#a80a632811d45a8e0b8e6ac4c80297c7a">RegisterTag</a>(tagString);</div>
<div class="line"><a id="l00513" name="l00513"></a><span class="lineno">  513</span>      <a class="code hl_function" href="../../df/d2d/classez_tag_set_template.htm#a516919ed07be40ca871a8e63b1b274fc">Set</a>(tag);</div>
<div class="line"><a id="l00514" name="l00514"></a><span class="lineno">  514</span>    }</div>
<div class="line"><a id="l00515" name="l00515"></a><span class="lineno">  515</span>  }</div>
<div class="line"><a id="l00516" name="l00516"></a><span class="lineno">  516</span>}</div>
<div class="ttc" id="aclassez_abstract_property_htm_aa9de7a38815952c004c7d2cca9360133"><div class="ttname"><a href="../../d6/d81/classez_abstract_property.htm#aa9de7a38815952c004c7d2cca9360133">ezAbstractProperty::GetPropertyName</a></div><div class="ttdeci">const char * GetPropertyName() const</div><div class="ttdoc">Returns the name of the property.</div><div class="ttdef"><b>Definition</b> AbstractProperty.h:160</div></div>
<div class="ttc" id="aclassez_accessor_set_property_3_01_class_00_01const_01char_01_5_00_01const_01ez_tag_set_01_6_01_4_htm_a2c67db74b2133af7bcfd1d30f2fa1a72"><div class="ttname"><a href="../../dd/df1/classez_accessor_set_property_3_01_class_00_01const_01char_01_5_00_01const_01ez_tag_set_01_6_01_4.htm#a2c67db74b2133af7bcfd1d30f2fa1a72">ezAccessorSetProperty&lt; Class, const char *, const ezTagSet &amp; &gt;::Insert</a></div><div class="ttdeci">virtual void Insert(void *pInstance, const void *pObject) const override</div><div class="ttdoc">Inserts the target of pObject into the set.</div><div class="ttdef"><b>Definition</b> TagSet_inl.h:125</div></div>
<div class="ttc" id="aclassez_accessor_set_property_3_01_class_00_01const_01char_01_5_00_01const_01ez_tag_set_01_6_01_4_htm_a335a4f8ebf7ab28d34830af3d60f6318"><div class="ttname"><a href="../../dd/df1/classez_accessor_set_property_3_01_class_00_01const_01char_01_5_00_01const_01ez_tag_set_01_6_01_4.htm#a335a4f8ebf7ab28d34830af3d60f6318">ezAccessorSetProperty&lt; Class, const char *, const ezTagSet &amp; &gt;::Remove</a></div><div class="ttdeci">virtual void Remove(void *pInstance, const void *pObject) const override</div><div class="ttdoc">Removes the target of pObject from the set.</div><div class="ttdef"><b>Definition</b> TagSet_inl.h:131</div></div>
<div class="ttc" id="aclassez_accessor_set_property_3_01_class_00_01const_01char_01_5_00_01const_01ez_tag_set_01_6_01_4_htm_a63d55b7ec7f143ee35c59071d54e61f5"><div class="ttname"><a href="../../dd/df1/classez_accessor_set_property_3_01_class_00_01const_01char_01_5_00_01const_01ez_tag_set_01_6_01_4.htm#a63d55b7ec7f143ee35c59071d54e61f5">ezAccessorSetProperty&lt; Class, const char *, const ezTagSet &amp; &gt;::Clear</a></div><div class="ttdeci">virtual void Clear(void *pInstance) const override</div><div class="ttdoc">Clears the set.</div><div class="ttdef"><b>Definition</b> TagSet_inl.h:108</div></div>
<div class="ttc" id="aclassez_accessor_set_property_3_01_class_00_01const_01char_01_5_00_01const_01ez_tag_set_01_6_01_4_htm_a8cf09a29721f4fb01e3e526fbd0d51ae"><div class="ttname"><a href="../../dd/df1/classez_accessor_set_property_3_01_class_00_01const_01char_01_5_00_01const_01ez_tag_set_01_6_01_4.htm#a8cf09a29721f4fb01e3e526fbd0d51ae">ezAccessorSetProperty&lt; Class, const char *, const ezTagSet &amp; &gt;::GetValues</a></div><div class="ttdeci">virtual void GetValues(const void *pInstance, ezDynamicArray&lt; ezVariant &gt; &amp;out_keys) const override</div><div class="ttdoc">Writes the content of the set to out_keys.</div><div class="ttdef"><b>Definition</b> TagSet_inl.h:142</div></div>
<div class="ttc" id="aclassez_accessor_set_property_3_01_class_00_01const_01char_01_5_00_01const_01ez_tag_set_01_6_01_4_htm_ab2bf1efd7912a977228e34bac0339df7"><div class="ttname"><a href="../../dd/df1/classez_accessor_set_property_3_01_class_00_01const_01char_01_5_00_01const_01ez_tag_set_01_6_01_4.htm#ab2bf1efd7912a977228e34bac0339df7">ezAccessorSetProperty&lt; Class, const char *, const ezTagSet &amp; &gt;::IsEmpty</a></div><div class="ttdeci">virtual bool IsEmpty(const void *pInstance) const override</div><div class="ttdoc">Returns whether the set is empty.</div><div class="ttdef"><b>Definition</b> TagSet_inl.h:106</div></div>
<div class="ttc" id="aclassez_accessor_set_property_3_01_class_00_01const_01char_01_5_00_01const_01ez_tag_set_01_6_01_4_htm_ab37906955e55c434b40d40866f80dbba"><div class="ttname"><a href="../../dd/df1/classez_accessor_set_property_3_01_class_00_01const_01char_01_5_00_01const_01ez_tag_set_01_6_01_4.htm#ab37906955e55c434b40d40866f80dbba">ezAccessorSetProperty&lt; Class, const char *, const ezTagSet &amp; &gt;::Contains</a></div><div class="ttdeci">virtual bool Contains(const void *pInstance, const void *pObject) const override</div><div class="ttdoc">Returns whether the target of pObject is in the set.</div><div class="ttdef"><b>Definition</b> TagSet_inl.h:137</div></div>
<div class="ttc" id="aclassez_accessor_set_property_htm"><div class="ttname"><a href="../../d0/d0a/classez_accessor_set_property.htm">ezAccessorSetProperty</a></div><div class="ttdef"><b>Definition</b> SetProperty.h:38</div></div>
<div class="ttc" id="aclassez_accessor_set_property_htm_a0fc103a97c8664415576c220aa9f7843"><div class="ttname"><a href="../../d0/d0a/classez_accessor_set_property.htm#a0fc103a97c8664415576c220aa9f7843">ezAccessorSetProperty::Remove</a></div><div class="ttdeci">virtual void Remove(void *pInstance, const void *pObject) const override</div><div class="ttdoc">Removes the target of pObject from the set.</div><div class="ttdef"><b>Definition</b> SetProperty.h:86</div></div>
<div class="ttc" id="aclassez_accessor_set_property_htm_ab56508fa2b9148fbe37e1a5eae09832c"><div class="ttname"><a href="../../d0/d0a/classez_accessor_set_property.htm#ab56508fa2b9148fbe37e1a5eae09832c">ezAccessorSetProperty::IsEmpty</a></div><div class="ttdeci">virtual bool IsEmpty(const void *pInstance) const override</div><div class="ttdoc">Returns whether the set is empty.</div><div class="ttdef"><b>Definition</b> SetProperty.h:61</div></div>
<div class="ttc" id="aclassez_array_base_htm_a74099c2d7681df345aedf8cfe24f0bc4"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a74099c2d7681df345aedf8cfe24f0bc4">ezArrayBase::Clear</a></div><div class="ttdeci">void Clear()</div><div class="ttdoc">Clears the array.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:184</div></div>
<div class="ttc" id="aclassez_array_base_htm_abc514bdf8b2de7b5b220ffdbd862e830"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#abc514bdf8b2de7b5b220ffdbd862e830">ezArrayBase::PushBack</a></div><div class="ttdeci">void PushBack(const T &amp;value)</div><div class="ttdoc">Pushes value at the end of the array.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:333</div></div>
<div class="ttc" id="aclassez_dynamic_array_htm"><div class="ttname"><a href="../../d2/d4f/classez_dynamic_array.htm">ezDynamicArray</a></div><div class="ttdef"><b>Definition</b> DynamicArray.h:81</div></div>
<div class="ttc" id="aclassez_hashed_string_htm"><div class="ttname"><a href="../../de/dce/classez_hashed_string.htm">ezHashedString</a></div><div class="ttdoc">This class is optimized to take nearly no memory (sizeof(void*)) and to allow very fast checks whethe...</div><div class="ttdef"><b>Definition</b> HashedString.h:25</div></div>
<div class="ttc" id="aclassez_member_set_property_3_01_class_00_01ez_tag_set_00_01const_01char_01_5_01_4_htm_a2a64262c1ecd8a150c65db3a314c49e1"><div class="ttname"><a href="../../db/d02/classez_member_set_property_3_01_class_00_01ez_tag_set_00_01const_01char_01_5_01_4.htm#a2a64262c1ecd8a150c65db3a314c49e1">ezMemberSetProperty&lt; Class, ezTagSet, const char * &gt;::GetValues</a></div><div class="ttdeci">virtual void GetValues(const void *pInstance, ezDynamicArray&lt; ezVariant &gt; &amp;out_keys) const override</div><div class="ttdoc">Writes the content of the set to out_keys.</div><div class="ttdef"><b>Definition</b> TagSet_inl.h:63</div></div>
<div class="ttc" id="aclassez_member_set_property_3_01_class_00_01ez_tag_set_00_01const_01char_01_5_01_4_htm_a36387fa2e67b44ee5d75d5211d7b595e"><div class="ttname"><a href="../../db/d02/classez_member_set_property_3_01_class_00_01ez_tag_set_00_01const_01char_01_5_01_4.htm#a36387fa2e67b44ee5d75d5211d7b595e">ezMemberSetProperty&lt; Class, ezTagSet, const char * &gt;::IsEmpty</a></div><div class="ttdeci">virtual bool IsEmpty(const void *pInstance) const override</div><div class="ttdoc">Returns whether the set is empty.</div><div class="ttdef"><b>Definition</b> TagSet_inl.h:38</div></div>
<div class="ttc" id="aclassez_member_set_property_3_01_class_00_01ez_tag_set_00_01const_01char_01_5_01_4_htm_a61749ee2051a0f800bee083553ca4fde"><div class="ttname"><a href="../../db/d02/classez_member_set_property_3_01_class_00_01ez_tag_set_00_01const_01char_01_5_01_4.htm#a61749ee2051a0f800bee083553ca4fde">ezMemberSetProperty&lt; Class, ezTagSet, const char * &gt;::Clear</a></div><div class="ttdeci">virtual void Clear(void *pInstance) const override</div><div class="ttdoc">Clears the set.</div><div class="ttdef"><b>Definition</b> TagSet_inl.h:40</div></div>
<div class="ttc" id="aclassez_member_set_property_3_01_class_00_01ez_tag_set_00_01const_01char_01_5_01_4_htm_ab088f2acd72a88e6c10dc4246a4dbdae"><div class="ttname"><a href="../../db/d02/classez_member_set_property_3_01_class_00_01ez_tag_set_00_01const_01char_01_5_01_4.htm#ab088f2acd72a88e6c10dc4246a4dbdae">ezMemberSetProperty&lt; Class, ezTagSet, const char * &gt;::Contains</a></div><div class="ttdeci">virtual bool Contains(const void *pInstance, const void *pObject) const override</div><div class="ttdoc">Returns whether the target of pObject is in the set.</div><div class="ttdef"><b>Definition</b> TagSet_inl.h:58</div></div>
<div class="ttc" id="aclassez_member_set_property_3_01_class_00_01ez_tag_set_00_01const_01char_01_5_01_4_htm_aeb941f2e49f1107172361f3399525448"><div class="ttname"><a href="../../db/d02/classez_member_set_property_3_01_class_00_01ez_tag_set_00_01const_01char_01_5_01_4.htm#aeb941f2e49f1107172361f3399525448">ezMemberSetProperty&lt; Class, ezTagSet, const char * &gt;::Remove</a></div><div class="ttdeci">virtual void Remove(void *pInstance, const void *pObject) const override</div><div class="ttdoc">Removes the target of pObject from the set.</div><div class="ttdef"><b>Definition</b> TagSet_inl.h:52</div></div>
<div class="ttc" id="aclassez_member_set_property_3_01_class_00_01ez_tag_set_00_01const_01char_01_5_01_4_htm_aec815a58f8ee9afcf18cdffcc144a741"><div class="ttname"><a href="../../db/d02/classez_member_set_property_3_01_class_00_01ez_tag_set_00_01const_01char_01_5_01_4.htm#aec815a58f8ee9afcf18cdffcc144a741">ezMemberSetProperty&lt; Class, ezTagSet, const char * &gt;::Insert</a></div><div class="ttdeci">virtual void Insert(void *pInstance, const void *pObject) const override</div><div class="ttdoc">Inserts the target of pObject into the set.</div><div class="ttdef"><b>Definition</b> TagSet_inl.h:46</div></div>
<div class="ttc" id="aclassez_member_set_property_htm"><div class="ttname"><a href="../../dd/db3/classez_member_set_property.htm">ezMemberSetProperty</a></div><div class="ttdef"><b>Definition</b> SetProperty.h:133</div></div>
<div class="ttc" id="aclassez_memory_utils_htm_a87c41811a95fa63da651f6779931d9cf"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm#a87c41811a95fa63da651f6779931d9cf">ezMemoryUtils::Copy</a></div><div class="ttdeci">static void Copy(T *pDestination, const T *pSource, size_t uiCount=1)</div><div class="ttdoc">Copies objects of type T from pSource to pDestination.</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_a0b66ce1a35b2f1659ba61c534969dae4"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#a0b66ce1a35b2f1659ba61c534969dae4">ezSmallArrayBase::IsEmpty</a></div><div class="ttdeci">bool IsEmpty() const</div><div class="ttdoc">Returns true, if the array does not contain any elements.</div><div class="ttdef"><b>Definition</b> SmallArray_inl.h:228</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_a27bc30d0e06cb01d8d5278245a6483f6"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#a27bc30d0e06cb01d8d5278245a6483f6">ezSmallArrayBase::GetArrayPtr</a></div><div class="ttdeci">ezArrayPtr&lt; T &gt; GetArrayPtr()</div><div class="ttdoc">Returns an array pointer to the array data, or an empty array pointer if the array is empty.</div><div class="ttdef"><b>Definition</b> SmallArray_inl.h:474</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_a5787f727bd1a20181e3e2150c7d37fc2"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#a5787f727bd1a20181e3e2150c7d37fc2">ezSmallArrayBase::Clear</a></div><div class="ttdeci">void Clear()</div><div class="ttdoc">Clears the array.</div><div class="ttdef"><b>Definition</b> SmallArray_inl.h:234</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_aaa9d377e69c087d2be3c4897ecce0471"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#aaa9d377e69c087d2be3c4897ecce0471">ezSmallArrayBase::GetData</a></div><div class="ttdeci">T * GetData()</div><div class="ttdoc">Returns a pointer to the array data, or nullptr if the array is empty.</div><div class="ttdef"><b>Definition</b> SmallArray_inl.h:456</div></div>
<div class="ttc" id="aclassez_small_array_base_htm_ac13be38fb1e58b0b94c405db9318792a"><div class="ttname"><a href="../../d4/d0b/classez_small_array_base.htm#ac13be38fb1e58b0b94c405db9318792a">ezSmallArrayBase::GetCount</a></div><div class="ttdeci">ezUInt32 GetCount() const</div><div class="ttdoc">Returns the number of active elements in the array.</div><div class="ttdef"><b>Definition</b> SmallArray_inl.h:222</div></div>
<div class="ttc" id="aclassez_small_array_htm"><div class="ttname"><a href="../../d0/d0c/classez_small_array.htm">ezSmallArray</a></div><div class="ttdef"><b>Definition</b> SmallArray.h:224</div></div>
<div class="ttc" id="aclassez_stream_reader_htm"><div class="ttname"><a href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a></div><div class="ttdoc">Interface for binary in (read) streams.</div><div class="ttdef"><b>Definition</b> Stream.h:22</div></div>
<div class="ttc" id="aclassez_stream_reader_htm_a3b27188b834171b325c22eaffda3b6a0"><div class="ttname"><a href="../../d2/d19/classez_stream_reader.htm#a3b27188b834171b325c22eaffda3b6a0">ezStreamReader::ReadWordValue</a></div><div class="ttdeci">ezResult ReadWordValue(T *pWordValue)</div><div class="ttdoc">Helper method to read a word value correctly (copes with potentially different endianess)</div><div class="ttdef"><b>Definition</b> Stream_inl.h:85</div></div>
<div class="ttc" id="aclassez_stream_writer_htm"><div class="ttname"><a href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a></div><div class="ttdoc">Interface for binary out (write) streams.</div><div class="ttdef"><b>Definition</b> Stream.h:107</div></div>
<div class="ttc" id="aclassez_stream_writer_htm_af0f04420ac6163d305babf9147b20e60"><div class="ttname"><a href="../../d6/dcc/classez_stream_writer.htm#af0f04420ac6163d305babf9147b20e60">ezStreamWriter::WriteVersion</a></div><div class="ttdeci">EZ_ALWAYS_INLINE void WriteVersion(ezTypeVersion version)</div><div class="ttdoc">Writes a type version to the stream.</div><div class="ttdef"><b>Definition</b> Stream_inl.h:154</div></div>
<div class="ttc" id="aclassez_string_view_htm"><div class="ttname"><a href="../../d9/d18/classez_string_view.htm">ezStringView</a></div><div class="ttdoc">ezStringView represent a read-only sub-string of a larger string, as it can store a dedicated string ...</div><div class="ttdef"><b>Definition</b> StringView.h:34</div></div>
<div class="ttc" id="aclassez_tag_htm"><div class="ttname"><a href="../../db/db8/classez_tag.htm">ezTag</a></div><div class="ttdoc">The tag class stores the necessary lookup information for a single tag which can be used in conjuncti...</div><div class="ttdef"><b>Definition</b> Tag.h:16</div></div>
<div class="ttc" id="aclassez_tag_registry_htm"><div class="ttname"><a href="../../d4/d71/classez_tag_registry.htm">ezTagRegistry</a></div><div class="ttdoc">The tag registry for tags in tag sets.</div><div class="ttdef"><b>Definition</b> TagRegistry.h:22</div></div>
<div class="ttc" id="aclassez_tag_registry_htm_a80a632811d45a8e0b8e6ac4c80297c7a"><div class="ttname"><a href="../../d4/d71/classez_tag_registry.htm#a80a632811d45a8e0b8e6ac4c80297c7a">ezTagRegistry::RegisterTag</a></div><div class="ttdeci">const ezTag &amp; RegisterTag(ezStringView sTagString)</div><div class="ttdoc">Ensures the tag with the given name exists and returns a pointer to it.</div><div class="ttdef"><b>Definition</b> TagRegistry.cpp:16</div></div>
<div class="ttc" id="aclassez_tag_registry_htm_abed28fbe05617c9f2235cf54775f88b8"><div class="ttname"><a href="../../d4/d71/classez_tag_registry.htm#abed28fbe05617c9f2235cf54775f88b8">ezTagRegistry::GetTagByMurmurHash</a></div><div class="ttdeci">const ezTag * GetTagByMurmurHash(ezUInt32 uiMurmurHash) const</div><div class="ttdoc">Searches for a tag with the given murmur hash. This function is only for backwards compatibility.</div><div class="ttdef"><b>Definition</b> TagRegistry.cpp:64</div></div>
<div class="ttc" id="aclassez_tag_registry_htm_ad81ab2b3433c333d2643dad5fea7d856"><div class="ttname"><a href="../../d4/d71/classez_tag_registry.htm#ad81ab2b3433c333d2643dad5fea7d856">ezTagRegistry::GetTagByIndex</a></div><div class="ttdeci">const ezTag * GetTagByIndex(ezUInt32 uiIndex) const</div><div class="ttdoc">Returns the tag with the given index.</div><div class="ttdef"><b>Definition</b> TagRegistry.cpp:79</div></div>
<div class="ttc" id="aclassez_tag_set_template_1_1_iterator_htm_a0b42d129970f9c52172317bbca88c390"><div class="ttname"><a href="../../db/db7/classez_tag_set_template_1_1_iterator.htm#a0b42d129970f9c52172317bbca88c390">ezTagSetTemplate::Iterator::operator++</a></div><div class="ttdeci">void operator++()</div><div class="ttdoc">Advances the iterator to the next item.</div></div>
<div class="ttc" id="aclassez_tag_set_template_1_1_iterator_htm_a27524a084f85fae4f656c2a3eb895014"><div class="ttname"><a href="../../db/db7/classez_tag_set_template_1_1_iterator.htm#a27524a084f85fae4f656c2a3eb895014">ezTagSetTemplate::Iterator::IsValid</a></div><div class="ttdeci">EZ_ALWAYS_INLINE bool IsValid() const</div><div class="ttdoc">Returns whether the iterator is still pointing to a valid item.</div><div class="ttdef"><b>Definition</b> TagSet.h:76</div></div>
<div class="ttc" id="aclassez_tag_set_template_1_1_iterator_htm_a670e4f2a0d9f0bbb22061db549fe1611"><div class="ttname"><a href="../../db/db7/classez_tag_set_template_1_1_iterator.htm#a670e4f2a0d9f0bbb22061db549fe1611">ezTagSetTemplate::Iterator::operator-&gt;</a></div><div class="ttdeci">const ezTag * operator-&gt;() const</div><div class="ttdoc">Returns a pointer to the current tag.</div></div>
<div class="ttc" id="aclassez_tag_set_template_1_1_iterator_htm_adebcca06142ead073c1c71f6b4775761"><div class="ttname"><a href="../../db/db7/classez_tag_set_template_1_1_iterator.htm#adebcca06142ead073c1c71f6b4775761">ezTagSetTemplate::Iterator::operator*</a></div><div class="ttdeci">const ezTag &amp; operator*() const</div><div class="ttdoc">Returns a reference to the current tag.</div></div>
<div class="ttc" id="aclassez_tag_set_template_htm"><div class="ttname"><a href="../../df/d2d/classez_tag_set_template.htm">ezTagSetTemplate</a></div><div class="ttdoc">A dynamic collection of tags featuring fast lookups.</div><div class="ttdef"><b>Definition</b> TagSet.h:23</div></div>
<div class="ttc" id="aclassez_tag_set_template_htm_a516919ed07be40ca871a8e63b1b274fc"><div class="ttname"><a href="../../df/d2d/classez_tag_set_template.htm#a516919ed07be40ca871a8e63b1b274fc">ezTagSetTemplate::Set</a></div><div class="ttdeci">void Set(const ezTag &amp;tag)</div><div class="ttdoc">Adds the given tag to the set.</div></div>
<div class="ttc" id="aclassez_tag_set_template_htm_a5433fab2d5c66350938661589ebee457"><div class="ttname"><a href="../../df/d2d/classez_tag_set_template.htm#a5433fab2d5c66350938661589ebee457">ezTagSetTemplate::IsSetByName</a></div><div class="ttdeci">bool IsSetByName(ezStringView sTag) const</div><div class="ttdoc">Checks whether the named tag is part of this set. Returns false if the tag does not exist.</div></div>
<div class="ttc" id="aclassez_tag_set_template_htm_a62d21771b5790554058e25d6256dff8b"><div class="ttname"><a href="../../df/d2d/classez_tag_set_template.htm#a62d21771b5790554058e25d6256dff8b">ezTagSetTemplate::Clear</a></div><div class="ttdeci">void Clear()</div><div class="ttdoc">Removes all tags from the set.</div></div>
<div class="ttc" id="aclassez_tag_set_template_htm_a6653127de812aa3f83d25fbe453d58ee"><div class="ttname"><a href="../../df/d2d/classez_tag_set_template.htm#a6653127de812aa3f83d25fbe453d58ee">ezTagSetTemplate::RemoveByName</a></div><div class="ttdeci">void RemoveByName(ezStringView sTag)</div><div class="ttdoc">Removes the given tag. If it doesn't exist, nothing happens.</div></div>
<div class="ttc" id="aclassez_tag_set_template_htm_a86b80aa50a162f14199bf61dc3429b4c"><div class="ttname"><a href="../../df/d2d/classez_tag_set_template.htm#a86b80aa50a162f14199bf61dc3429b4c">ezTagSetTemplate::GetNumTagsSet</a></div><div class="ttdeci">ezUInt32 GetNumTagsSet() const</div><div class="ttdoc">Returns how many tags are in this set.</div></div>
<div class="ttc" id="aclassez_tag_set_template_htm_a8c0b707f9f94e30f547468908e717e69"><div class="ttname"><a href="../../df/d2d/classez_tag_set_template.htm#a8c0b707f9f94e30f547468908e717e69">ezTagSetTemplate::IsSet</a></div><div class="ttdeci">bool IsSet(const ezTag &amp;tag) const</div><div class="ttdoc">Returns true, if the given tag is in the set.</div></div>
<div class="ttc" id="aclassez_tag_set_template_htm_a8c7aea7e10915798747312655a9f3dff"><div class="ttname"><a href="../../df/d2d/classez_tag_set_template.htm#a8c7aea7e10915798747312655a9f3dff">ezTagSetTemplate::Load</a></div><div class="ttdeci">void Load(ezStreamReader &amp;inout_stream, ezTagRegistry &amp;inout_registry)</div><div class="ttdoc">Reads the tag set state from a stream and registers the tags with the given registry.</div></div>
<div class="ttc" id="aclassez_tag_set_template_htm_a8f30f764119dbe32537cdbd0ae1c50f5"><div class="ttname"><a href="../../df/d2d/classez_tag_set_template.htm#a8f30f764119dbe32537cdbd0ae1c50f5">ezTagSetTemplate::GetIterator</a></div><div class="ttdeci">Iterator GetIterator() const</div><div class="ttdoc">Returns an iterator to list all tags in this set.</div><div class="ttdef"><b>Definition</b> TagSet.h:91</div></div>
<div class="ttc" id="aclassez_tag_set_template_htm_a99b27819e3b53cda54d1431131270ba0"><div class="ttname"><a href="../../df/d2d/classez_tag_set_template.htm#a99b27819e3b53cda54d1431131270ba0">ezTagSetTemplate::IsEmpty</a></div><div class="ttdeci">bool IsEmpty() const</div><div class="ttdoc">True if the tag set never contained any tag or was cleared.</div></div>
<div class="ttc" id="aclassez_tag_set_template_htm_a9a3214c81e485934ff59c298b4cdd61c"><div class="ttname"><a href="../../df/d2d/classez_tag_set_template.htm#a9a3214c81e485934ff59c298b4cdd61c">ezTagSetTemplate::IsAnySet</a></div><div class="ttdeci">bool IsAnySet(const ezTagSetTemplate &amp;otherSet) const</div><div class="ttdoc">Returns true if this tag set contains any tag set in the given other tag set.</div></div>
<div class="ttc" id="aclassez_tag_set_template_htm_aa3510deb7eb1847eca40cfd405dd85ad"><div class="ttname"><a href="../../df/d2d/classez_tag_set_template.htm#aa3510deb7eb1847eca40cfd405dd85ad">ezTagSetTemplate::SetByName</a></div><div class="ttdeci">void SetByName(ezStringView sTag)</div><div class="ttdoc">Adds the tag with the given name. If the tag does not exist, it will be registered.</div></div>
<div class="ttc" id="aclassez_tag_set_template_htm_adcb11a0052f4510160815f59b2f1075e"><div class="ttname"><a href="../../df/d2d/classez_tag_set_template.htm#adcb11a0052f4510160815f59b2f1075e">ezTagSetTemplate::Save</a></div><div class="ttdeci">void Save(ezStreamWriter &amp;inout_stream) const</div><div class="ttdoc">Writes the tag set state to a stream. Tags itself are serialized as strings.</div></div>
<div class="ttc" id="aclassez_tag_set_template_htm_aec2dd63289541a8e4e23405e84413a1d"><div class="ttname"><a href="../../df/d2d/classez_tag_set_template.htm#aec2dd63289541a8e4e23405e84413a1d">ezTagSetTemplate::Remove</a></div><div class="ttdeci">void Remove(const ezTag &amp;tag)</div><div class="ttdoc">Removes the given tag.</div></div>
<div class="ttc" id="aclassez_temp_hashed_string_htm"><div class="ttname"><a href="../../db/dcf/classez_temp_hashed_string.htm">ezTempHashedString</a></div><div class="ttdoc">A class to use together with ezHashedString for quick comparisons with temporary strings that need no...</div><div class="ttdef"><b>Definition</b> HashedString.h:175</div></div>
<div class="ttc" id="aclassez_typed_set_property_htm"><div class="ttname"><a href="../../d4/d93/classez_typed_set_property.htm">ezTypedSetProperty</a></div><div class="ttdoc">Do not cast into this class or any of its derived classes, use ezAbstractSetProperty instead.</div><div class="ttdef"><b>Definition</b> SetProperty.h:10</div></div>
<div class="ttc" id="aclassez_variant_htm"><div class="ttname"><a href="../../de/de6/classez_variant.htm">ezVariant</a></div><div class="ttdoc">ezVariant is a class that can store different types of variables, which is useful in situations where...</div><div class="ttdef"><b>Definition</b> Variant.h:44</div></div>
<div class="ttc" id="anamespaceez_math_htm_a6f7ee19d0f8e81ff6ae5f394075e3a56"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a6f7ee19d0f8e81ff6ae5f394075e3a56">ezMath::Max</a></div><div class="ttdeci">constexpr EZ_ALWAYS_INLINE T Max(T f1, T f2)</div><div class="ttdoc">Returns the greater value, f1 or f2.</div><div class="ttdef"><b>Definition</b> Math_inl.h:39</div></div>
<div class="ttc" id="anamespaceez_math_htm_ad8009b4da9cb427658d71e30576f209e"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#ad8009b4da9cb427658d71e30576f209e">ezMath::Min</a></div><div class="ttdeci">constexpr EZ_ALWAYS_INLINE T Min(T f1, T f2)</div><div class="ttdoc">Returns the smaller value, f1 or f2.</div><div class="ttdef"><b>Definition</b> Math_inl.h:27</div></div>
<div class="ttc" id="astructez_bitflags_htm_aaa83c1e77b70d0b549604a64c20f8a83"><div class="ttname"><a href="../../d1/dec/structez_bitflags.htm#aaa83c1e77b70d0b549604a64c20f8a83">ezBitflags::Add</a></div><div class="ttdeci">EZ_ALWAYS_INLINE void Add(const ezBitflags&lt; T &gt; &amp;rhs)</div><div class="ttdoc">Sets the given flag.</div><div class="ttdef"><b>Definition</b> Bitflags.h:151</div></div>
<div class="ttc" id="astructez_container_sub_type_resolver_htm"><div class="ttname"><a href="../../d7/db6/structez_container_sub_type_resolver.htm">ezContainerSubTypeResolver</a></div><div class="ttdoc">Template that allows to probe a container for its element type.</div><div class="ttdef"><b>Definition</b> AbstractProperty.h:462</div></div>
<div class="ttc" id="astructez_hybrid_string_base_htm_a98fb76791e36685a3d4dc2303c50f854"><div class="ttname"><a href="../../d6/d43/structez_hybrid_string_base.htm#a98fb76791e36685a3d4dc2303c50f854">ezHybridStringBase::GetData</a></div><div class="ttdeci">const char * GetData() const</div><div class="ttdoc">Returns a pointer to the internal Utf8 string.</div><div class="ttdef"><b>Definition</b> String_inl.h:56</div></div>
<div class="ttc" id="astructez_property_flags_htm_a3c2cffe365eb84e9e31c93491fcf852fa2a82793a685c6bbcabb465e870c36c8a"><div class="ttname"><a href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852fa2a82793a685c6bbcabb465e870c36c8a">ezPropertyFlags::ReadOnly</a></div><div class="ttdeci">@ ReadOnly</div><div class="ttdoc">Can only be read but not modified.</div><div class="ttdef"><b>Definition</b> AbstractProperty.h:63</div></div>
<div class="ttc" id="astructez_result_htm_acb0bb72646ee6d5966edd5b4108fb670"><div class="ttname"><a href="../../d4/da9/structez_result.htm#acb0bb72646ee6d5966edd5b4108fb670">ezResult::IgnoreResult</a></div><div class="ttdeci">EZ_ALWAYS_INLINE void IgnoreResult()</div><div class="ttdoc">Used to silence compiler warnings, when success or failure doesn't matter.</div><div class="ttdef"><b>Definition</b> Types.h:69</div></div>
<div class="ttc" id="astructez_type_traits_htm_af2051eb05a731b9618b107540f8f46f8"><div class="ttname"><a href="../../d1/d32/structez_type_traits.htm#af2051eb05a731b9618b107540f8f46f8">ezTypeTraits::NonConstReferenceType</a></div><div class="ttdeci">typename std::remove_const&lt; typename std::remove_reference&lt; T &gt;::type &gt;::type NonConstReferenceType</div><div class="ttdoc">removes reference and const qualifier</div><div class="ttdef"><b>Definition</b> TypeTraits.h:218</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_f95f7c440efc771b227d40e9293549bd.htm">Types</a></li><li class="navelem"><a class="el" href="../../dir_81708b2bf5e0f7f3d10c3c7a8700c5a1.htm">Implementation</a></li><li class="navelem"><b>TagSet_inl.h</b></li>
    <li class="footer">Generated on Fri Jul 11 2025 12:17:54 for ezEngine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
