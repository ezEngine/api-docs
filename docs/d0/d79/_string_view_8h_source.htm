<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Strings/StringView.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 23.04</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d0/d79/_string_view_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">StringView.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#include &lt;Foundation/Strings/Implementation/StringIterator.h&gt;</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160; </div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;type_traits&gt;</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160; </div>
<div class="line"><a name="l00008"></a><span class="lineno"><a class="line" href="../../d8/d9a/structez_this_is_a_string.htm">    8</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../d8/d9a/structez_this_is_a_string.htm">ezThisIsAString</a></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;{</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;};</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160; </div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="keyword">class </span><a class="code" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>;</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160; </div>
<div class="line"><a name="l00023"></a><span class="lineno"><a class="line" href="../../de/db8/structez_string_view.htm">   23</a></span>&#160;<span class="keyword">struct </span>EZ_FOUNDATION_DLL <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> : <span class="keyword">public</span> <a class="code" href="../../d8/d9a/structez_this_is_a_string.htm">ezThisIsAString</a></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;{</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;  EZ_DECLARE_POD_TYPE();</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160; </div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  <span class="keyword">using</span> <a class="code" href="../../d4/ddc/structez_string_iterator.htm">iterator</a> = <a class="code" href="../../d4/ddc/structez_string_iterator.htm">ezStringIterator</a>;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;  <span class="keyword">using</span> <a class="code" href="../../d4/ddc/structez_string_iterator.htm">const_iterator</a> = <a class="code" href="../../d4/ddc/structez_string_iterator.htm">ezStringIterator</a>;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;  <span class="keyword">using</span> <a class="code" href="../../d6/d6b/structez_string_reverse_iterator.htm">reverse_iterator</a> = <a class="code" href="../../d6/d6b/structez_string_reverse_iterator.htm">ezStringReverseIterator</a>;</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  <span class="keyword">using</span> <a class="code" href="../../d6/d6b/structez_string_reverse_iterator.htm">const_reverse_iterator</a> = <a class="code" href="../../d6/d6b/structez_string_reverse_iterator.htm">ezStringReverseIterator</a>;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160; </div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  constexpr <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a>();</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160; </div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;  <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a>(<span class="keywordtype">char</span>* pStart);</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160; </div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;                                                                                           <span class="comment">// T is always const char*</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  constexpr <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a>(T pStart, <span class="keyword">typename</span> std::enable_if&lt;std::is_same&lt;T, const char*&gt;::value, <span class="keywordtype">int</span>&gt;::type* = 0); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160; </div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  EZ_ALWAYS_INLINE <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a>(<span class="keyword">const</span> T&amp;&amp; str, <span class="keyword">typename</span> std::enable_if&lt;std::is_same&lt;T, const char*&gt;::value == <span class="keyword">false</span> &amp;&amp; std::is_convertible&lt;T, const char*&gt;::value, <span class="keywordtype">int</span>&gt;::type* = 0); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160; </div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;  <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* pStart, <span class="keyword">const</span> <span class="keywordtype">char</span>* pEnd); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160; </div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;  constexpr <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* pStart, ezUInt32 uiLength);</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160; </div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;  <span class="keyword">template</span> &lt;<span class="keywordtype">size_t</span> N&gt;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> (&amp;str)[N]);</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160; </div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  <span class="keyword">template</span> &lt;<span class="keywordtype">size_t</span> N&gt;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;  <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a>(<span class="keywordtype">char</span> (&amp;str)[N]);</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160; </div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;  <span class="keywordtype">void</span> operator++(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160; </div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;  <span class="keywordtype">void</span> operator+=(ezUInt32 d); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160; </div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;  ezUInt32 GetCharacter() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160; </div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;  <span class="keywordtype">bool</span> IsValid() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160; </div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span>* GetData(<a class="code" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>&amp; ref_sTempStorage) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160; </div>
<div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="../../de/db8/structez_string_view.htm#a64dec920b26c9df50ea139826fcdd448">   83</a></span>&#160;  ezUInt32 <a class="code" href="../../de/db8/structez_string_view.htm#a64dec920b26c9df50ea139826fcdd448">GetElementCount</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> (ezUInt32)(m_pEnd - m_pStart); } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160; </div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;  <span class="keywordtype">void</span> SetStartPosition(<span class="keyword">const</span> <span class="keywordtype">char</span>* szCurPos); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160; </div>
<div class="line"><a name="l00092"></a><span class="lineno"><a class="line" href="../../de/db8/structez_string_view.htm#a7e6ab4aebc721857871d822321935d5f">   92</a></span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="../../de/db8/structez_string_view.htm#a7e6ab4aebc721857871d822321935d5f">GetStartPointer</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_pStart; } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160; </div>
<div class="line"><a name="l00098"></a><span class="lineno"><a class="line" href="../../de/db8/structez_string_view.htm#aeb4fee979aa7e71f8c3596fb342ad2bc">   98</a></span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="../../de/db8/structez_string_view.htm#aeb4fee979aa7e71f8c3596fb342ad2bc">GetEndPointer</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_pEnd; } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160; </div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;  <span class="keywordtype">bool</span> IsEmpty() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160; </div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;  <span class="keywordtype">bool</span> IsEqual(<a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sOther) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160; </div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;  <span class="keywordtype">bool</span> IsEqual_NoCase(<a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sOther) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160; </div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;  <span class="keywordtype">bool</span> IsEqualN(<a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sOther, ezUInt32 uiCharsToCompare) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160; </div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;  <span class="keywordtype">bool</span> IsEqualN_NoCase(<a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sOther, ezUInt32 uiCharsToCompare) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160; </div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;  ezInt32 Compare(<a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sOther) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160; </div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;  ezInt32 CompareN(<a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sOther, ezUInt32 uiCharsToCompare) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160; </div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;  ezInt32 Compare_NoCase(<a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sOther) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160; </div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;  ezInt32 CompareN_NoCase(<a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sOther, ezUInt32 uiCharsToCompare) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160; </div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;  <span class="keywordtype">bool</span> StartsWith(<a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sStartsWith) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160; </div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;  <span class="keywordtype">bool</span> StartsWith_NoCase(<a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sStartsWith) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160; </div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;  <span class="keywordtype">bool</span> EndsWith(<a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sEndsWith) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160; </div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;  <span class="keywordtype">bool</span> EndsWith_NoCase(<a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sEndsWith) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160; </div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span>* ComputeCharacterPosition(ezUInt32 uiCharacterIndex) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160; </div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span>* FindSubString(<a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sStringToFind, <span class="keyword">const</span> <span class="keywordtype">char</span>* szStartSearchAt = <span class="keyword">nullptr</span>) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160; </div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span>* FindSubString_NoCase(<a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sStringToFind, <span class="keyword">const</span> <span class="keywordtype">char</span>* szStartSearchAt = <span class="keyword">nullptr</span>) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160; </div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span>* FindLastSubString(<a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sStringToFind, <span class="keyword">const</span> <span class="keywordtype">char</span>* szStartSearchAt = <span class="keyword">nullptr</span>) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160; </div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span>* FindLastSubString_NoCase(<a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sStringToFind, <span class="keyword">const</span> <span class="keywordtype">char</span>* szStartSearchAt = <span class="keyword">nullptr</span>) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160; </div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span>* FindWholeWord(<span class="keyword">const</span> <span class="keywordtype">char</span>* szSearchFor, <a class="code" href="../../de/df8/classez_string_utils.htm#a30a256e58c74618a988775c15bdd3d8e">ezStringUtils::EZ_CHARACTER_FILTER</a> isDelimiterCB, <span class="keyword">const</span> <span class="keywordtype">char</span>* szStartSearchAt = <span class="keyword">nullptr</span>) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160; </div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span>* FindWholeWord_NoCase(<span class="keyword">const</span> <span class="keywordtype">char</span>* szSearchFor, <a class="code" href="../../de/df8/classez_string_utils.htm#a30a256e58c74618a988775c15bdd3d8e">ezStringUtils::EZ_CHARACTER_FILTER</a> isDelimiterCB, <span class="keyword">const</span> <span class="keywordtype">char</span>* szStartSearchAt = <span class="keyword">nullptr</span>) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160; </div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160; </div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;  <span class="keywordtype">void</span> Shrink(ezUInt32 uiShrinkCharsFront, ezUInt32 uiShrinkCharsBack); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160; </div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;  <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> GetShrunk(ezUInt32 uiShrinkCharsFront, ezUInt32 uiShrinkCharsBack = 0) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160; </div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;  <span class="keywordtype">void</span> ChopAwayFirstCharacterUtf8(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160; </div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;  <span class="keywordtype">void</span> ChopAwayFirstCharacterAscii(); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160; </div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;  <span class="keywordtype">void</span> Trim(<span class="keyword">const</span> <span class="keywordtype">char</span>* szTrimChars); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160; </div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;  <span class="keywordtype">void</span> Trim(<span class="keyword">const</span> <span class="keywordtype">char</span>* szTrimCharsStart, <span class="keyword">const</span> <span class="keywordtype">char</span>* szTrimCharsEnd); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160; </div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;  <span class="keywordtype">bool</span> TrimWordStart(<a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sWord1, <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sWord2 = {}, <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sWord3 = {}, <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sWord4 = {}, <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sWord5 = {}); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160; </div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;  <span class="keywordtype">bool</span> TrimWordEnd(<a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sWord1, <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sWord2 = {}, <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sWord3 = {}, <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sWord4 = {}, <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sWord5 = {}); <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160; </div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Container&gt;</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;  <span class="keywordtype">void</span> Split(<span class="keywordtype">bool</span> bReturnEmptyStrings, Container&amp; ref_output, <span class="keyword">const</span> <span class="keywordtype">char</span>* szSeparator1, <span class="keyword">const</span> <span class="keywordtype">char</span>* szSeparator2 = <span class="keyword">nullptr</span>, <span class="keyword">const</span> <span class="keywordtype">char</span>* szSeparator3 = <span class="keyword">nullptr</span>, <span class="keyword">const</span> <span class="keywordtype">char</span>* szSeparator4 = <span class="keyword">nullptr</span>, <span class="keyword">const</span> <span class="keywordtype">char</span>* szSeparator5 = <span class="keyword">nullptr</span>, <span class="keyword">const</span> <span class="keywordtype">char</span>* szSeparator6 = <span class="keyword">nullptr</span>) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160; </div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160;  iterator GetIteratorFront() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160; </div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;  reverse_iterator GetIteratorBack() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160; </div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;  <span class="comment">// ******* Path Functions ********</span></div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160; </div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;  <span class="keywordtype">bool</span> HasAnyExtension() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160; </div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;  <span class="keywordtype">bool</span> HasExtension(<a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sExtension) <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160; </div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;  <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> GetFileExtension() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160; </div>
<div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;  <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> GetFileName() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160; </div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;  <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> GetFileNameAndExtension() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160; </div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;  <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> GetFileDirectory() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160; </div>
<div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;  <span class="keywordtype">bool</span> IsAbsolutePath() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160; </div>
<div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;  <span class="keywordtype">bool</span> IsRelativePath() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160; </div>
<div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;  <span class="keywordtype">bool</span> IsRootedPath() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00260"></a><span class="lineno">  260</span>&#160; </div>
<div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;  <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> GetRootedPathRootName() <span class="keyword">const</span>; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160; </div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span>* m_pStart = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span>* m_pEnd = <span class="keyword">nullptr</span>;</div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;};</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160; </div>
<div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;constexpr <a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> <span class="keyword">operator</span><span class="stringliteral">&quot;&quot;</span> _ezsv(<span class="keyword">const</span> <span class="keywordtype">char</span>* pString, <span class="keywordtype">size_t</span> uiLen);</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160; </div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;EZ_ALWAYS_INLINE <span class="keyword">typename</span> <a class="code" href="../../d4/ddc/structez_string_iterator.htm">ezStringView::iterator</a> begin(<a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sContainer)</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;{</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">typename</span> <a class="code" href="../../d4/ddc/structez_string_iterator.htm">ezStringView::iterator</a>(sContainer.<a class="code" href="../../de/db8/structez_string_view.htm#a7e6ab4aebc721857871d822321935d5f">GetStartPointer</a>(), sContainer.<a class="code" href="../../de/db8/structez_string_view.htm#aeb4fee979aa7e71f8c3596fb342ad2bc">GetEndPointer</a>(), sContainer.<a class="code" href="../../de/db8/structez_string_view.htm#a7e6ab4aebc721857871d822321935d5f">GetStartPointer</a>());</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160;}</div>
<div class="line"><a name="l00285"></a><span class="lineno">  285</span>&#160; </div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;EZ_ALWAYS_INLINE <span class="keyword">typename</span> <a class="code" href="../../d4/ddc/structez_string_iterator.htm">ezStringView::const_iterator</a> cbegin(<a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sContainer)</div>
<div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;{</div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">typename</span> <a class="code" href="../../d4/ddc/structez_string_iterator.htm">ezStringView::const_iterator</a>(sContainer.<a class="code" href="../../de/db8/structez_string_view.htm#a7e6ab4aebc721857871d822321935d5f">GetStartPointer</a>(), sContainer.<a class="code" href="../../de/db8/structez_string_view.htm#aeb4fee979aa7e71f8c3596fb342ad2bc">GetEndPointer</a>(), sContainer.<a class="code" href="../../de/db8/structez_string_view.htm#a7e6ab4aebc721857871d822321935d5f">GetStartPointer</a>());</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;}</div>
<div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160; </div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;EZ_ALWAYS_INLINE <span class="keyword">typename</span> <a class="code" href="../../d4/ddc/structez_string_iterator.htm">ezStringView::iterator</a> end(<a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sContainer)</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;{</div>
<div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">typename</span> <a class="code" href="../../d4/ddc/structez_string_iterator.htm">ezStringView::iterator</a>(sContainer.<a class="code" href="../../de/db8/structez_string_view.htm#a7e6ab4aebc721857871d822321935d5f">GetStartPointer</a>(), sContainer.<a class="code" href="../../de/db8/structez_string_view.htm#aeb4fee979aa7e71f8c3596fb342ad2bc">GetEndPointer</a>(), sContainer.<a class="code" href="../../de/db8/structez_string_view.htm#aeb4fee979aa7e71f8c3596fb342ad2bc">GetEndPointer</a>());</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;}</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160; </div>
<div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;EZ_ALWAYS_INLINE <span class="keyword">typename</span> <a class="code" href="../../d4/ddc/structez_string_iterator.htm">ezStringView::const_iterator</a> cend(<a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sContainer)</div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;{</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">typename</span> <a class="code" href="../../d4/ddc/structez_string_iterator.htm">ezStringView::const_iterator</a>(sContainer.<a class="code" href="../../de/db8/structez_string_view.htm#a7e6ab4aebc721857871d822321935d5f">GetStartPointer</a>(), sContainer.<a class="code" href="../../de/db8/structez_string_view.htm#aeb4fee979aa7e71f8c3596fb342ad2bc">GetEndPointer</a>(), sContainer.<a class="code" href="../../de/db8/structez_string_view.htm#aeb4fee979aa7e71f8c3596fb342ad2bc">GetEndPointer</a>());</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;}</div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160; </div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160; </div>
<div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;EZ_ALWAYS_INLINE <span class="keyword">typename</span> <a class="code" href="../../d6/d6b/structez_string_reverse_iterator.htm">ezStringView::reverse_iterator</a> rbegin(<a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sContainer)</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;{</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">typename</span> <a class="code" href="../../d6/d6b/structez_string_reverse_iterator.htm">ezStringView::reverse_iterator</a>(sContainer.<a class="code" href="../../de/db8/structez_string_view.htm#a7e6ab4aebc721857871d822321935d5f">GetStartPointer</a>(), sContainer.<a class="code" href="../../de/db8/structez_string_view.htm#aeb4fee979aa7e71f8c3596fb342ad2bc">GetEndPointer</a>(), sContainer.<a class="code" href="../../de/db8/structez_string_view.htm#aeb4fee979aa7e71f8c3596fb342ad2bc">GetEndPointer</a>());</div>
<div class="line"><a name="l00305"></a><span class="lineno">  305</span>&#160;}</div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160; </div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;EZ_ALWAYS_INLINE <span class="keyword">typename</span> <a class="code" href="../../d6/d6b/structez_string_reverse_iterator.htm">ezStringView::const_reverse_iterator</a> crbegin(<a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sContainer)</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160;{</div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">typename</span> <a class="code" href="../../d6/d6b/structez_string_reverse_iterator.htm">ezStringView::const_reverse_iterator</a>(sContainer.<a class="code" href="../../de/db8/structez_string_view.htm#a7e6ab4aebc721857871d822321935d5f">GetStartPointer</a>(), sContainer.<a class="code" href="../../de/db8/structez_string_view.htm#aeb4fee979aa7e71f8c3596fb342ad2bc">GetEndPointer</a>(), sContainer.<a class="code" href="../../de/db8/structez_string_view.htm#aeb4fee979aa7e71f8c3596fb342ad2bc">GetEndPointer</a>());</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160;}</div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160; </div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;EZ_ALWAYS_INLINE <span class="keyword">typename</span> <a class="code" href="../../d6/d6b/structez_string_reverse_iterator.htm">ezStringView::reverse_iterator</a> rend(<a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sContainer)</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;{</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">typename</span> <a class="code" href="../../d6/d6b/structez_string_reverse_iterator.htm">ezStringView::reverse_iterator</a>(sContainer.<a class="code" href="../../de/db8/structez_string_view.htm#a7e6ab4aebc721857871d822321935d5f">GetStartPointer</a>(), sContainer.<a class="code" href="../../de/db8/structez_string_view.htm#aeb4fee979aa7e71f8c3596fb342ad2bc">GetEndPointer</a>(), <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;}</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160; </div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;EZ_ALWAYS_INLINE <span class="keyword">typename</span> <a class="code" href="../../d6/d6b/structez_string_reverse_iterator.htm">ezStringView::const_reverse_iterator</a> crend(<a class="code" href="../../de/db8/structez_string_view.htm">ezStringView</a> sContainer)</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;{</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">typename</span> <a class="code" href="../../d6/d6b/structez_string_reverse_iterator.htm">ezStringView::const_reverse_iterator</a>(sContainer.<a class="code" href="../../de/db8/structez_string_view.htm#a7e6ab4aebc721857871d822321935d5f">GetStartPointer</a>(), sContainer.<a class="code" href="../../de/db8/structez_string_view.htm#aeb4fee979aa7e71f8c3596fb342ad2bc">GetEndPointer</a>(), <span class="keyword">nullptr</span>);</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;}</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160; </div>
<div class="line"><a name="l00322"></a><span class="lineno">  322</span>&#160;<span class="preprocessor">#include &lt;Foundation/Strings/Implementation/StringView_inl.h&gt;</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="astructez_string_iterator_htm"><div class="ttname"><a href="../../d4/ddc/structez_string_iterator.htm">ezStringIterator</a></div><div class="ttdoc">STL forward iterator used by all string classes. Iterates over unicode characters....</div><div class="ttdef"><b>Definition:</b> StringIterator.h:7</div></div>
<div class="ttc" id="astructez_this_is_a_string_htm"><div class="ttname"><a href="../../d8/d9a/structez_this_is_a_string.htm">ezThisIsAString</a></div><div class="ttdoc">Base class which marks a class as containing string data.</div><div class="ttdef"><b>Definition:</b> StringView.h:8</div></div>
<div class="ttc" id="aclassez_string_utils_htm_a30a256e58c74618a988775c15bdd3d8e"><div class="ttname"><a href="../../de/df8/classez_string_utils.htm#a30a256e58c74618a988775c15bdd3d8e">ezStringUtils::EZ_CHARACTER_FILTER</a></div><div class="ttdeci">bool(*)(ezUInt32 uiChar) EZ_CHARACTER_FILTER</div><div class="ttdoc">Function Definition for a function that determines whether a (Utf32) character belongs to a certain c...</div><div class="ttdef"><b>Definition:</b> StringUtils.h:228</div></div>
<div class="ttc" id="astructez_string_reverse_iterator_htm"><div class="ttname"><a href="../../d6/d6b/structez_string_reverse_iterator.htm">ezStringReverseIterator</a></div><div class="ttdoc">STL reverse iterator used by all string classes. Iterates over unicode characters....</div><div class="ttdef"><b>Definition:</b> StringIterator.h:162</div></div>
<div class="ttc" id="astructez_string_view_htm_aeb4fee979aa7e71f8c3596fb342ad2bc"><div class="ttname"><a href="../../de/db8/structez_string_view.htm#aeb4fee979aa7e71f8c3596fb342ad2bc">ezStringView::GetEndPointer</a></div><div class="ttdeci">const char * GetEndPointer() const</div><div class="ttdoc">Returns the end of the view range. This will point to the byte AFTER the last character.</div><div class="ttdef"><b>Definition:</b> StringView.h:98</div></div>
<div class="ttc" id="astructez_string_view_htm"><div class="ttname"><a href="../../de/db8/structez_string_view.htm">ezStringView</a></div><div class="ttdoc">ezStringView represent a read-only sub-string of a larger string, as it can store a dedicated string ...</div><div class="ttdef"><b>Definition:</b> StringView.h:23</div></div>
<div class="ttc" id="astructez_string_view_htm_a7e6ab4aebc721857871d822321935d5f"><div class="ttname"><a href="../../de/db8/structez_string_view.htm#a7e6ab4aebc721857871d822321935d5f">ezStringView::GetStartPointer</a></div><div class="ttdeci">const char * GetStartPointer() const</div><div class="ttdoc">Returns the start of the view range.</div><div class="ttdef"><b>Definition:</b> StringView.h:92</div></div>
<div class="ttc" id="astructez_string_view_htm_a64dec920b26c9df50ea139826fcdd448"><div class="ttname"><a href="../../de/db8/structez_string_view.htm#a64dec920b26c9df50ea139826fcdd448">ezStringView::GetElementCount</a></div><div class="ttdeci">ezUInt32 GetElementCount() const</div><div class="ttdoc">Returns the number of bytes from the start position up to its end.</div><div class="ttdef"><b>Definition:</b> StringView.h:83</div></div>
<div class="ttc" id="aclassez_string_builder_htm"><div class="ttname"><a href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></div><div class="ttdoc">ezStringBuilder is a class that is meant for creating and modifying strings.</div><div class="ttdef"><b>Definition:</b> StringBuilder.h:34</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_b52479c911fe9a42767226b3387b3a02.htm">Strings</a></li><li class="navelem"><b>StringView.h</b></li>
    <li class="footer">Generated on Sat Mar 25 2023 19:21:57 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
