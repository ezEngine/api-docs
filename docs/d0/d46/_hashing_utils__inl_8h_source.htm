<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Algorithm/Implementation/HashingUtils_inl.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">ezEngine<span id="projectnumber">&#160;Release 25.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function() { init_codefold(1); });
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('d0/d46/_hashing_utils__inl_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">HashingUtils_inl.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#include &lt;Foundation/Strings/Implementation/StringBase.h&gt;</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="keyword">namespace </span>ezInternal</div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span>{</div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keywordtype">bool</span> isString&gt;</div>
<div class="foldopen" id="foldopen00006" data-start="{" data-end="};">
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno"><a class="line" href="../../d3/d67/structez_internal_1_1_hash_helper_impl.htm">    6</a></span>  <span class="keyword">struct </span><a class="code hl_struct" href="../../d3/d67/structez_internal_1_1_hash_helper_impl.htm">HashHelperImpl</a></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span>  {</div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span>    <span class="keyword">static</span> ezUInt32 Hash(<span class="keyword">const</span> T&amp; value);</div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span>  };</div>
</div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span> </div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="foldopen" id="foldopen00012" data-start="{" data-end="};">
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno"><a class="line" href="../../da/dd5/structez_internal_1_1_hash_helper_impl_3_01_t_00_01true_01_4.htm">   12</a></span>  <span class="keyword">struct </span><a class="code hl_struct" href="../../d3/d67/structez_internal_1_1_hash_helper_impl.htm">HashHelperImpl</a>&lt;T, true&gt;</div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span>  {</div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span>    EZ_ALWAYS_INLINE <span class="keyword">static</span> ezUInt32 Hash(<a class="code hl_class" href="../../d9/d18/classez_string_view.htm">ezStringView</a> sString)</div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span>    {</div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span>      <span class="keywordflow">return</span> <a class="code hl_function" href="../../dd/dd0/classez_hashing_utils.htm#afd95702d7001da8afc62d2e44cb08d7a">ezHashingUtils::StringHashTo32</a>(<a class="code hl_function" href="../../dd/dd0/classez_hashing_utils.htm#a5b9e298197f90cd999ac54734a2d872c">ezHashingUtils::StringHash</a>(sString));</div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span>    }</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span>  };</div>
</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span> </div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span>  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keywordtype">bool</span> isString&gt;</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span>  EZ_ALWAYS_INLINE ezUInt32 <a class="code hl_struct" href="../../d3/d67/structez_internal_1_1_hash_helper_impl.htm">HashHelperImpl&lt;T, isString&gt;::Hash</a>(<span class="keyword">const</span> T&amp; value)</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span>  {</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span>    <span class="keyword">static_assert</span>(isString, <span class="stringliteral">&quot;ezHashHelper is not implemented for the given type.&quot;</span>);</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span>    <span class="keywordflow">return</span> 0;</div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span>  }</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span>} <span class="comment">// namespace ezInternal</span></div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span> </div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span>EZ_ALWAYS_INLINE ezUInt32 <a class="code hl_struct" href="../../dc/d65/structez_hash_helper.htm">ezHashHelper&lt;T&gt;::Hash</a>(<span class="keyword">const</span> U&amp; value)</div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span>{</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span>  <span class="keywordflow">return</span> <a class="code hl_struct" href="../../d3/d67/structez_internal_1_1_hash_helper_impl.htm">ezInternal::HashHelperImpl</a>&lt;T, EZ_IS_DERIVED_FROM_STATIC(<a class="code hl_struct" href="../../d8/d9a/structez_this_is_a_string.htm">ezThisIsAString</a>, T)&gt;::Hash(value);</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>}</div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span> </div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> U&gt;</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span>EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code hl_struct" href="../../dc/d65/structez_hash_helper.htm">ezHashHelper&lt;T&gt;::Equal</a>(<span class="keyword">const</span> T&amp; a, <span class="keyword">const</span> U&amp; b)</div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>{</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span>  <span class="keywordflow">return</span> a == b;</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span>}</div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span> </div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span> </div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span> </div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span><span class="keyword">template</span> &lt;&gt;</div>
<div class="foldopen" id="foldopen00045" data-start="{" data-end="};">
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno"><a class="line" href="../../d0/d54/structez_hash_helper_3_01ez_u_int32_01_4.htm">   45</a></span><span class="keyword">struct </span><a class="code hl_struct" href="../../dc/d65/structez_hash_helper.htm">ezHashHelper</a>&lt;ezUInt32&gt;</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span>{</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span>  EZ_ALWAYS_INLINE <span class="keyword">static</span> ezUInt32 Hash(ezUInt32 value)</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>  {</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span>    <span class="comment">// Knuth: multiplication by the golden ratio will minimize gaps in the hash space.</span></div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span>    <span class="comment">// 2654435761U: prime close to 2^32/phi with phi = golden ratio (sqrt(5) - 1) / 2</span></div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>    <span class="keywordflow">return</span> value * 2654435761U;</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>  }</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span> </div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>  EZ_ALWAYS_INLINE <span class="keyword">static</span> <span class="keywordtype">bool</span> Equal(ezUInt32 a, ezUInt32 b) { <span class="keywordflow">return</span> a == b; }</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>};</div>
</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span> </div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span><span class="keyword">template</span> &lt;&gt;</div>
<div class="foldopen" id="foldopen00058" data-start="{" data-end="};">
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno"><a class="line" href="../../dd/d8d/structez_hash_helper_3_01ez_int32_01_4.htm">   58</a></span><span class="keyword">struct </span><a class="code hl_struct" href="../../dc/d65/structez_hash_helper.htm">ezHashHelper</a>&lt;ezInt32&gt;</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>{</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span>  EZ_ALWAYS_INLINE <span class="keyword">static</span> ezUInt32 Hash(ezInt32 value) { <span class="keywordflow">return</span> <a class="code hl_struct" href="../../dc/d65/structez_hash_helper.htm">ezHashHelper&lt;ezUInt32&gt;::Hash</a>(ezUInt32(value)); }</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span> </div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>  EZ_ALWAYS_INLINE <span class="keyword">static</span> <span class="keywordtype">bool</span> Equal(ezInt32 a, ezInt32 b) { <span class="keywordflow">return</span> a == b; }</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>};</div>
</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span> </div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span><span class="keyword">template</span> &lt;&gt;</div>
<div class="foldopen" id="foldopen00066" data-start="{" data-end="};">
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno"><a class="line" href="../../d4/dfb/structez_hash_helper_3_01ez_u_int64_01_4.htm">   66</a></span><span class="keyword">struct </span><a class="code hl_struct" href="../../dc/d65/structez_hash_helper.htm">ezHashHelper</a>&lt;ezUInt64&gt;</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>{</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>  EZ_ALWAYS_INLINE <span class="keyword">static</span> ezUInt32 Hash(ezUInt64 value)</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>  {</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>    <span class="comment">// boost::hash_combine.</span></div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>    ezUInt32 a = ezUInt32(value &gt;&gt; 32);</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>    ezUInt32 b = ezUInt32(value);</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>    <span class="keywordflow">return</span> a ^ (b + 0x9e3779b9 + (a &lt;&lt; 6) + (b &gt;&gt; 2));</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>  }</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span> </div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>  EZ_ALWAYS_INLINE <span class="keyword">static</span> <span class="keywordtype">bool</span> Equal(ezUInt64 a, ezUInt64 b) { <span class="keywordflow">return</span> a == b; }</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>};</div>
</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span> </div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span><span class="keyword">template</span> &lt;&gt;</div>
<div class="foldopen" id="foldopen00080" data-start="{" data-end="};">
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno"><a class="line" href="../../dc/df8/structez_hash_helper_3_01ez_int64_01_4.htm">   80</a></span><span class="keyword">struct </span><a class="code hl_struct" href="../../dc/d65/structez_hash_helper.htm">ezHashHelper</a>&lt;ezInt64&gt;</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>{</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span>  EZ_ALWAYS_INLINE <span class="keyword">static</span> ezUInt32 Hash(ezInt64 value) { <span class="keywordflow">return</span> <a class="code hl_struct" href="../../dc/d65/structez_hash_helper.htm">ezHashHelper&lt;ezUInt64&gt;::Hash</a>(ezUInt64(value)); }</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span> </div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>  EZ_ALWAYS_INLINE <span class="keyword">static</span> <span class="keywordtype">bool</span> Equal(ezInt64 a, ezInt64 b) { <span class="keywordflow">return</span> a == b; }</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>};</div>
</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span> </div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span><span class="keyword">template</span> &lt;&gt;</div>
<div class="foldopen" id="foldopen00088" data-start="{" data-end="};">
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno"><a class="line" href="../../d6/d2d/structez_hash_helper_3_01const_01char_01_5_01_4.htm">   88</a></span><span class="keyword">struct </span><a class="code hl_struct" href="../../dc/d65/structez_hash_helper.htm">ezHashHelper</a>&lt;const char*&gt;</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>{</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>  EZ_ALWAYS_INLINE <span class="keyword">static</span> ezUInt32 Hash(<span class="keyword">const</span> <span class="keywordtype">char</span>* szValue)</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>  {</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>    <span class="keywordflow">return</span> <a class="code hl_function" href="../../dd/dd0/classez_hashing_utils.htm#afd95702d7001da8afc62d2e44cb08d7a">ezHashingUtils::StringHashTo32</a>(<a class="code hl_function" href="../../dd/dd0/classez_hashing_utils.htm#a5b9e298197f90cd999ac54734a2d872c">ezHashingUtils::StringHash</a>(szValue));</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>  }</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span> </div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>  EZ_ALWAYS_INLINE <span class="keyword">static</span> <span class="keywordtype">bool</span> Equal(<span class="keyword">const</span> <span class="keywordtype">char</span>* a, <span class="keyword">const</span> <span class="keywordtype">char</span>* b) { <span class="keywordflow">return</span> <a class="code hl_function" href="../../de/df8/classez_string_utils.htm#aa1b8c125ced33a6a904f741597ecc673">ezStringUtils::IsEqual</a>(a, b); }</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>};</div>
</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span> </div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span><span class="keyword">template</span> &lt;&gt;</div>
<div class="foldopen" id="foldopen00099" data-start="{" data-end="};">
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno"><a class="line" href="../../d0/d01/structez_hash_helper_3_01ez_string_view_01_4.htm">   99</a></span><span class="keyword">struct </span><a class="code hl_struct" href="../../dc/d65/structez_hash_helper.htm">ezHashHelper</a>&lt;<a class="code hl_class" href="../../d9/d18/classez_string_view.htm">ezStringView</a>&gt;</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>{</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>  EZ_ALWAYS_INLINE <span class="keyword">static</span> ezUInt32 Hash(<a class="code hl_class" href="../../d9/d18/classez_string_view.htm">ezStringView</a> sValue)</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>  {</div>
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno">  103</span>    <span class="keywordflow">return</span> <a class="code hl_function" href="../../dd/dd0/classez_hashing_utils.htm#afd95702d7001da8afc62d2e44cb08d7a">ezHashingUtils::StringHashTo32</a>(<a class="code hl_function" href="../../dd/dd0/classez_hashing_utils.htm#a5b9e298197f90cd999ac54734a2d872c">ezHashingUtils::StringHash</a>(sValue));</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>  }</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span> </div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span>  EZ_ALWAYS_INLINE <span class="keyword">static</span> <span class="keywordtype">bool</span> Equal(<a class="code hl_class" href="../../d9/d18/classez_string_view.htm">ezStringView</a> a, <a class="code hl_class" href="../../d9/d18/classez_string_view.htm">ezStringView</a> b) { <span class="keywordflow">return</span> a == b; }</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>};</div>
</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span> </div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="foldopen" id="foldopen00110" data-start="{" data-end="};">
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno"><a class="line" href="../../de/d77/structez_hash_helper_3_01_t_01_5_01_4.htm">  110</a></span><span class="keyword">struct </span><a class="code hl_struct" href="../../dc/d65/structez_hash_helper.htm">ezHashHelper</a>&lt;T*&gt;</div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span>{</div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span>  EZ_ALWAYS_INLINE <span class="keyword">static</span> ezUInt32 Hash(T* value)</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>  {</div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span><span class="preprocessor">#if EZ_ENABLED(EZ_PLATFORM_64BIT)</span></div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span>    <span class="keywordflow">return</span> <a class="code hl_struct" href="../../dc/d65/structez_hash_helper.htm">ezHashHelper&lt;ezUInt64&gt;::Hash</a>(<span class="keyword">reinterpret_cast&lt;</span>ezUInt64<span class="keyword">&gt;</span>(value) &gt;&gt; 4);</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span><span class="preprocessor">#else</span></div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>    <span class="keywordflow">return</span> <a class="code hl_struct" href="../../dc/d65/structez_hash_helper.htm">ezHashHelper&lt;ezUInt32&gt;::Hash</a>(<span class="keyword">reinterpret_cast&lt;</span>ezUInt32<span class="keyword">&gt;</span>(value) &gt;&gt; 4);</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>  }</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span> </div>
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno">  121</span>  EZ_ALWAYS_INLINE <span class="keyword">static</span> <span class="keywordtype">bool</span> Equal(T* a, T* b)</div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>  {</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span>    <span class="keywordflow">return</span> a == b;</div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span>  }</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span>};</div>
</div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span> </div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span><span class="keyword">template</span> &lt;<span class="keywordtype">size_t</span> N&gt;</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span><span class="keyword">constexpr</span> EZ_ALWAYS_INLINE ezUInt64 <a class="code hl_function" href="../../dd/dd0/classez_hashing_utils.htm#a5b9e298197f90cd999ac54734a2d872c">ezHashingUtils::StringHash</a>(<span class="keyword">const</span> <span class="keywordtype">char</span> (&amp;str)[N], ezUInt64 uiSeed)</div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span>{</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span>  <span class="keywordflow">return</span> <a class="code hl_function" href="../../dd/dd0/classez_hashing_utils.htm#afefc92bdd0a999896892a8e9894c543b">xxHash64String</a>(str, uiSeed);</div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span>}</div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span> </div>
<div class="foldopen" id="foldopen00133" data-start="{" data-end="}">
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno"><a class="line" href="../../dd/dd0/classez_hashing_utils.htm#a696d523270d0a9649caa40f6056049bd">  133</a></span>EZ_ALWAYS_INLINE ezUInt64 <a class="code hl_function" href="../../dd/dd0/classez_hashing_utils.htm#a5b9e298197f90cd999ac54734a2d872c">ezHashingUtils::StringHash</a>(<a class="code hl_class" href="../../d9/d18/classez_string_view.htm">ezStringView</a> sStr, ezUInt64 uiSeed)</div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>{</div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span>  <span class="keywordflow">return</span> <a class="code hl_function" href="../../dd/dd0/classez_hashing_utils.htm#afefc92bdd0a999896892a8e9894c543b">xxHash64String</a>(sStr, uiSeed);</div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span>}</div>
</div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span> </div>
<div class="foldopen" id="foldopen00138" data-start="{" data-end="}">
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno"><a class="line" href="../../dd/dd0/classez_hashing_utils.htm#afd95702d7001da8afc62d2e44cb08d7a">  138</a></span><span class="keyword">constexpr</span> EZ_ALWAYS_INLINE ezUInt32 <a class="code hl_function" href="../../dd/dd0/classez_hashing_utils.htm#afd95702d7001da8afc62d2e44cb08d7a">ezHashingUtils::StringHashTo32</a>(ezUInt64 uiHash)</div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span>{</div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>  <span class="comment">// just throw away the upper bits</span></div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span>  <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span>ezUInt32<span class="keyword">&gt;</span>(uiHash);</div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span>}</div>
</div>
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno">  143</span> </div>
<div class="foldopen" id="foldopen00144" data-start="{" data-end="}">
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno"><a class="line" href="../../dd/dd0/classez_hashing_utils.htm#ad64c0ab6d91bdeb1f4892dbf99890581">  144</a></span><span class="keyword">constexpr</span> EZ_ALWAYS_INLINE ezUInt32 <a class="code hl_function" href="../../dd/dd0/classez_hashing_utils.htm#ad64c0ab6d91bdeb1f4892dbf99890581">ezHashingUtils::CombineHashValues32</a>(ezUInt32 ui0, ezUInt32 ui1)</div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span>{</div>
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno">  146</span>  <span class="comment">// See boost::hash_combine</span></div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span>  <span class="keywordflow">return</span> ui0 ^ (ui1 + 0x9e3779b9 + (ui0 &lt;&lt; 6) + (ui1 &gt;&gt; 2));</div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span>}</div>
</div>
<div class="ttc" id="aclassez_hashing_utils_htm_a5b9e298197f90cd999ac54734a2d872c"><div class="ttname"><a href="../../dd/dd0/classez_hashing_utils.htm#a5b9e298197f90cd999ac54734a2d872c">ezHashingUtils::StringHash</a></div><div class="ttdeci">static constexpr ezUInt64 StringHash(const char(&amp;str)[N], ezUInt64 uiSeed=0)</div><div class="ttdoc">Calculates the hash of the given string literal at compile time.</div></div>
<div class="ttc" id="aclassez_hashing_utils_htm_ad64c0ab6d91bdeb1f4892dbf99890581"><div class="ttname"><a href="../../dd/dd0/classez_hashing_utils.htm#ad64c0ab6d91bdeb1f4892dbf99890581">ezHashingUtils::CombineHashValues32</a></div><div class="ttdeci">static constexpr ezUInt32 CombineHashValues32(ezUInt32 ui0, ezUInt32 ui1)</div><div class="ttdoc">Combines two 32 bit hash values into one.</div><div class="ttdef"><b>Definition</b> HashingUtils_inl.h:144</div></div>
<div class="ttc" id="aclassez_hashing_utils_htm_afd95702d7001da8afc62d2e44cb08d7a"><div class="ttname"><a href="../../dd/dd0/classez_hashing_utils.htm#afd95702d7001da8afc62d2e44cb08d7a">ezHashingUtils::StringHashTo32</a></div><div class="ttdeci">static constexpr ezUInt32 StringHashTo32(ezUInt64 uiHash)</div><div class="ttdoc">Truncates a 64 bit string hash to 32 bit.</div><div class="ttdef"><b>Definition</b> HashingUtils_inl.h:138</div></div>
<div class="ttc" id="aclassez_hashing_utils_htm_afefc92bdd0a999896892a8e9894c543b"><div class="ttname"><a href="../../dd/dd0/classez_hashing_utils.htm#afefc92bdd0a999896892a8e9894c543b">ezHashingUtils::xxHash64String</a></div><div class="ttdeci">static constexpr ezUInt64 xxHash64String(const char(&amp;str)[N], ezUInt64 uiSeed=0)</div><div class="ttdoc">Calculates the 64bit xxHash of the given string literal at compile time.</div></div>
<div class="ttc" id="aclassez_string_utils_htm_aa1b8c125ced33a6a904f741597ecc673"><div class="ttname"><a href="../../de/df8/classez_string_utils.htm#aa1b8c125ced33a6a904f741597ecc673">ezStringUtils::IsEqual</a></div><div class="ttdeci">static bool IsEqual(const char *pString1, const char *pString2, const char *pString1End=ezUnicodeUtils::GetMaxStringEnd&lt; char &gt;(), const char *pString2End=ezUnicodeUtils::GetMaxStringEnd&lt; char &gt;())</div><div class="ttdoc">Returns true, if the two given strings are identical (bitwise).</div><div class="ttdef"><b>Definition</b> StringUtils_inl.h:125</div></div>
<div class="ttc" id="aclassez_string_view_htm"><div class="ttname"><a href="../../d9/d18/classez_string_view.htm">ezStringView</a></div><div class="ttdoc">ezStringView represent a read-only sub-string of a larger string, as it can store a dedicated string ...</div><div class="ttdef"><b>Definition</b> StringView.h:34</div></div>
<div class="ttc" id="astructez_hash_helper_htm"><div class="ttname"><a href="../../dc/d65/structez_hash_helper.htm">ezHashHelper</a></div><div class="ttdoc">Helper struct to calculate the Hash of different types.</div><div class="ttdef"><b>Definition</b> HashingUtils.h:75</div></div>
<div class="ttc" id="astructez_internal_1_1_hash_helper_impl_htm"><div class="ttname"><a href="../../d3/d67/structez_internal_1_1_hash_helper_impl.htm">ezInternal::HashHelperImpl</a></div><div class="ttdef"><b>Definition</b> HashingUtils_inl.h:7</div></div>
<div class="ttc" id="astructez_this_is_a_string_htm"><div class="ttname"><a href="../../d8/d9a/structez_this_is_a_string.htm">ezThisIsAString</a></div><div class="ttdoc">Base class which marks a class as containing string data.</div><div class="ttdef"><b>Definition</b> StringView.h:19</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_cbf2a2ed1ea35b4af8265ff960a67fbe.htm">Algorithm</a></li><li class="navelem"><a class="el" href="../../dir_f080d51ed4627ba1afc4852adfe2255f.htm">Implementation</a></li><li class="navelem"><b>HashingUtils_inl.h</b></li>
    <li class="footer">Generated on Fri Jul 11 2025 12:17:43 for ezEngine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
