<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Containers/Implementation/ArrayBase_inl.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">ezEngine<span id="projectnumber">&#160;Release 25.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function() { init_codefold(1); });
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('d0/d5a/_array_base__inl_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">ArrayBase_inl.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span> </div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><a class="code hl_function" href="../../dc/d59/classez_array_base.htm#a0f03847a20991108666c982066d651bc">ezArrayBase&lt;T, Derived&gt;::ezArrayBase</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span> </div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00006" data-start="{" data-end="}">
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#a8001e2991c2675e975efca088795fa6a">    6</a></span><a class="code hl_function" href="../../dc/d59/classez_array_base.htm#a8001e2991c2675e975efca088795fa6a">ezArrayBase&lt;T, Derived&gt;::~ezArrayBase</a>()</div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span>{</div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span>  EZ_ASSERT_DEBUG(m_uiCount == 0, <span class="stringliteral">&quot;The derived class did not destruct all objects. Count is {0}.&quot;</span>, m_uiCount);</div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span>  EZ_ASSERT_DEBUG(m_pElements == <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;The derived class did not free its memory.&quot;</span>);</div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span>}</div>
</div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span> </div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00013" data-start="{" data-end="}">
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#a6da9ac91524c489b32ed8e390c52b402">   13</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../dc/d59/classez_array_base.htm#a6da9ac91524c489b32ed8e390c52b402">ezArrayBase&lt;T, Derived&gt;::operator=</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const T&gt;</a>&amp; rhs)</div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span>{</div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span>  <span class="keywordflow">if</span> (this-&gt;GetData() == rhs.<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#aba4e7585190f337c6428f2fe25828b8a">GetPtr</a>())</div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span>  {</div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span>    <span class="keywordflow">if</span> (m_uiCount == rhs.<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>())</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span>      <span class="keywordflow">return</span>;</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span> </div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span>    EZ_ASSERT_DEV(m_uiCount &gt; rhs.<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>(), <span class="stringliteral">&quot;Dangling array pointer. The given array pointer points to invalid memory.&quot;</span>);</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span>    T* pElements = <span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr();</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span>    <a class="code hl_function" href="../../dc/d4d/classez_memory_utils.htm#add65b87c39dade4ee7b0671c16b10a39">ezMemoryUtils::Destruct</a>(pElements + rhs.<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>(), m_uiCount - rhs.<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>());</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span>    m_uiCount = rhs.<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>();</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span>    <span class="keywordflow">return</span>;</div>
<div class="foldopen" id="foldopen00025" data-start="{" data-end="}">
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#a8001e2991c2675e975efca088795fa6a">   25</a></span>  }</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span> </div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span>  <span class="keyword">const</span> ezUInt32 uiOldCount = m_uiCount;</div>
<div class="foldopen" id="foldopen00028" data-start="{" data-end="}">
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#a6da9ac91524c489b32ed8e390c52b402">   28</a></span>  <span class="keyword">const</span> ezUInt32 uiNewCount = rhs.<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>();</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span> </div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span>  <span class="keywordflow">if</span> (uiNewCount &gt; uiOldCount)</div>
<div class="foldopen" id="foldopen00031" data-start="{" data-end="}">
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#a6f3159683169130e19c955855dd0d854">   31</a></span>  {</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span>    <span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;Reserve(uiNewCount);</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>    T* pElements = <span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr();</div>
<div class="foldopen" id="foldopen00034" data-start="{" data-end="}">
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#ab9b31378a3f8bc9df6ad9fe4187bcef1">   34</a></span>    <a class="code hl_function" href="../../dc/d4d/classez_memory_utils.htm#a87c41811a95fa63da651f6779931d9cf">ezMemoryUtils::Copy</a>(pElements, rhs.<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#aba4e7585190f337c6428f2fe25828b8a">GetPtr</a>(), uiOldCount);</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>    <a class="code hl_function" href="../../dc/d4d/classez_memory_utils.htm#a4c12c5af647ec366b7a99b15cca9386b">ezMemoryUtils::CopyConstructArray</a>(pElements + uiOldCount, rhs.<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#aba4e7585190f337c6428f2fe25828b8a">GetPtr</a>() + uiOldCount, uiNewCount - uiOldCount);</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span>  }</div>
<div class="foldopen" id="foldopen00037" data-start="{" data-end="}">
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#abad0e3ab22424c246c7d9125d2e57d31">   37</a></span>  <span class="keywordflow">else</span></div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>  {</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span>    T* pElements = <span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr();</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span>    <a class="code hl_function" href="../../dc/d4d/classez_memory_utils.htm#a87c41811a95fa63da651f6779931d9cf">ezMemoryUtils::Copy</a>(pElements, rhs.<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#aba4e7585190f337c6428f2fe25828b8a">GetPtr</a>(), uiNewCount);</div>
<div class="foldopen" id="foldopen00041" data-start="{" data-end="}">
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#ab56eb09097a99c105cb05eb8a6fb59f4">   41</a></span>    <a class="code hl_function" href="../../dc/d4d/classez_memory_utils.htm#add65b87c39dade4ee7b0671c16b10a39">ezMemoryUtils::Destruct</a>(pElements + uiNewCount, uiOldCount - uiNewCount);</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>  }</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span> </div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>  m_uiCount = uiNewCount;</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>}</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span> </div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00048" data-start="{" data-end="}">
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#a6f3159683169130e19c955855dd0d854">   48</a></span>EZ_ALWAYS_INLINE <a class="code hl_class" href="../../dc/d59/classez_array_base.htm">ezArrayBase&lt;T, Derived&gt;::operator</a> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const T&gt;</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span><span class="keyword"></span>{</div>
<div class="foldopen" id="foldopen00050" data-start="{" data-end="}">
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#aa642cb0d0cdf68484c854098d4493129">   50</a></span>  <span class="keywordflow">return</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const T&gt;</a>(<span class="keyword">static_cast&lt;</span><span class="keyword">const </span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr(), m_uiCount);</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>}</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span> </div>
<div class="foldopen" id="foldopen00053" data-start="{" data-end="}">
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#abc510e19e3e30cab9c5c7310ef5ffd68">   53</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00054" data-start="{" data-end="}">
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#ab9b31378a3f8bc9df6ad9fe4187bcef1">   54</a></span>EZ_ALWAYS_INLINE <a class="code hl_class" href="../../dc/d59/classez_array_base.htm">ezArrayBase&lt;T, Derived&gt;::operator</a> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;T&gt;</a>()</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>{</div>
<div class="foldopen" id="foldopen00056" data-start="{" data-end="}">
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#a5203f6eabcda79429422f4d1e14b7920">   56</a></span>  <span class="keywordflow">return</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;T&gt;</a>(<span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr(), m_uiCount);</div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>}</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span> </div>
<div class="foldopen" id="foldopen00059" data-start="{" data-end="}">
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#acb1665da46f44fab7a676561cc1d611c">   59</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00060" data-start="{" data-end="}">
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#abad0e3ab22424c246c7d9125d2e57d31">   60</a></span><span class="keywordtype">bool</span> <a class="code hl_function" href="../../dc/d59/classez_array_base.htm#abad0e3ab22424c246c7d9125d2e57d31">ezArrayBase&lt;T, Derived&gt;::operator==</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/d59/classez_array_base.htm">ezArrayBase&lt;T, Derived&gt;</a>&amp; rhs)<span class="keyword"> const</span></div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span><span class="keyword"></span>{</div>
<div class="foldopen" id="foldopen00062" data-start="{" data-end="}">
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#acc383d296b37437415626a4209380659">   62</a></span>  <span class="keywordflow">if</span> (m_uiCount != rhs.<a class="code hl_function" href="../../dc/d59/classez_array_base.htm#a51ba61fcbd2350ae8850754a41acbaa1">GetCount</a>())</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span> </div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span>  <span class="keywordflow">return</span> <a class="code hl_function" href="../../dc/d4d/classez_memory_utils.htm#a744d60b4b000c61f2dd3819a12410595">ezMemoryUtils::IsEqual</a>(<span class="keyword">static_cast&lt;</span><span class="keyword">const </span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr(), rhs.<a class="code hl_function" href="../../dc/d59/classez_array_base.htm#a170f421d9abdce1695e55b84212c59b0">GetData</a>(), m_uiCount);</div>
<div class="foldopen" id="foldopen00066" data-start="{" data-end="}">
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#aa42fdcea580029c35b32658bd6d9fd50">   66</a></span>}</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span> </div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00069" data-start="{" data-end="}">
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#ab56eb09097a99c105cb05eb8a6fb59f4">   69</a></span>EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code hl_function" href="../../dc/d59/classez_array_base.htm#ab56eb09097a99c105cb05eb8a6fb59f4">ezArrayBase&lt;T, Derived&gt;::operator&lt;</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/d59/classez_array_base.htm">ezArrayBase&lt;T, Derived&gt;</a>&amp; rhs)<span class="keyword"> const</span></div>
<div class="foldopen" id="foldopen00070" data-start="{" data-end="}">
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#ad74465b5a0c6474b1611bbb462f635ef">   70</a></span><span class="keyword"></span>{</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span>  <span class="keywordflow">return</span> GetArrayPtr() &lt; rhs.<a class="code hl_function" href="../../dc/d59/classez_array_base.htm#ad668df6ff81bdcac0bc118666d5817cf">GetArrayPtr</a>();</div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>}</div>
<div class="foldopen" id="foldopen00073" data-start="{" data-end="}">
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#a51ba61fcbd2350ae8850754a41acbaa1">   73</a></span> </div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span><span class="preprocessor">#if EZ_DISABLED(EZ_USE_CPP20_OPERATORS)</span></div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00076" data-start="{" data-end="}">
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#a35630a870ec53cf3b022653232a31c60">   76</a></span><span class="keywordtype">bool</span> <a class="code hl_function" href="../../dc/d59/classez_array_base.htm#abad0e3ab22424c246c7d9125d2e57d31">ezArrayBase&lt;T, Derived&gt;::operator==</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const T&gt;</a>&amp; rhs)<span class="keyword"> const</span></div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>  <span class="keywordflow">if</span> (m_uiCount != rhs.<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>())</div>
<div class="foldopen" id="foldopen00079" data-start="{" data-end="}">
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#a74099c2d7681df345aedf8cfe24f0bc4">   79</a></span>    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span> </div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span>  <span class="keywordflow">return</span> <a class="code hl_function" href="../../dc/d4d/classez_memory_utils.htm#a744d60b4b000c61f2dd3819a12410595">ezMemoryUtils::IsEqual</a>(<span class="keyword">static_cast&lt;</span><span class="keyword">const </span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr(), rhs.<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#aba4e7585190f337c6428f2fe25828b8a">GetPtr</a>(), m_uiCount);</div>
<div class="foldopen" id="foldopen00082" data-start="{" data-end="}">
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#a78392f27dfa795763aebdb43e4a75289">   82</a></span>}</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span><span class="preprocessor">#endif</span></div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span> </div>
<div class="foldopen" id="foldopen00085" data-start="{" data-end="}">
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#afabace0a2eabdf350c81203eed1c7984">   85</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00086" data-start="{" data-end="}">
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#aa642cb0d0cdf68484c854098d4493129">   86</a></span>EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code hl_function" href="../../dc/d59/classez_array_base.htm#ab56eb09097a99c105cb05eb8a6fb59f4">ezArrayBase&lt;T, Derived&gt;::operator&lt;</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const T&gt;</a>&amp; rhs)<span class="keyword"> const</span></div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span><span class="keyword"></span>{</div>
<div class="foldopen" id="foldopen00088" data-start="{" data-end="}">
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#a2e895667f6052199d90a7d703c69a91e">   88</a></span>  <span class="keywordflow">return</span> GetArrayPtr() &lt; rhs;</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>}</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span> </div>
<div class="foldopen" id="foldopen00091" data-start="{" data-end="}">
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#a581b2d3a780af145c7f6333655807711">   91</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00092" data-start="{" data-end="}">
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#abc510e19e3e30cab9c5c7310ef5ffd68">   92</a></span>EZ_ALWAYS_INLINE <span class="keyword">const</span> T&amp; <a class="code hl_function" href="../../dc/d59/classez_array_base.htm#abc510e19e3e30cab9c5c7310ef5ffd68">ezArrayBase&lt;T, Derived&gt;::operator[]</a>(<span class="keyword">const</span> ezUInt32 uiIndex)<span class="keyword"> const</span></div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span><span class="keyword"></span>{</div>
<div class="foldopen" id="foldopen00094" data-start="{" data-end="}">
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#af19f26ca6dc39c04caad024913a2f2ec">   94</a></span>  EZ_ASSERT_DEBUG(uiIndex &lt; m_uiCount, <span class="stringliteral">&quot;Out of bounds access. Array has {0} elements, trying to access element at index {1}.&quot;</span>, m_uiCount, uiIndex);</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span>  <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><span class="keyword">const </span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr()[uiIndex];</div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>}</div>
<div class="foldopen" id="foldopen00097" data-start="{" data-end="}">
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#aacea05b6f0ec519a663156dd0cc82309">   97</a></span> </div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00099" data-start="{" data-end="}">
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#a5203f6eabcda79429422f4d1e14b7920">   99</a></span>EZ_ALWAYS_INLINE T&amp; <a class="code hl_function" href="../../dc/d59/classez_array_base.htm#abc510e19e3e30cab9c5c7310ef5ffd68">ezArrayBase&lt;T, Derived&gt;::operator[]</a>(<span class="keyword">const</span> ezUInt32 uiIndex)</div>
<div class="foldopen" id="foldopen00100" data-start="{" data-end="}">
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#a29dfedb3f609d9a698f9becb213b697c">  100</a></span>{</div>
<div class="line"><a id="l00101" name="l00101"></a><span class="lineno">  101</span>  EZ_ASSERT_DEBUG(uiIndex &lt; m_uiCount, <span class="stringliteral">&quot;Out of bounds access. Array has {0} elements, trying to access element at index {1}.&quot;</span>, m_uiCount, uiIndex);</div>
<div class="line"><a id="l00102" name="l00102"></a><span class="lineno">  102</span>  <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr()[uiIndex];</div>
<div class="foldopen" id="foldopen00103" data-start="{" data-end="}">
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#ae29e85a3ce212cb78d31d032b4225f28">  103</a></span>}</div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span> </div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00106" data-start="{" data-end="}">
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#ad0b2297aad995f6b5b6c83318f1deec4">  106</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../dc/d59/classez_array_base.htm#acb1665da46f44fab7a676561cc1d611c">ezArrayBase&lt;T, Derived&gt;::SetCount</a>(ezUInt32 uiCount)</div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>{</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span>  <span class="keyword">const</span> ezUInt32 uiOldCount = m_uiCount;</div>
<div class="foldopen" id="foldopen00109" data-start="{" data-end="}">
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#a394c5310d1f8bc5907014761f72a4884">  109</a></span>  <span class="keyword">const</span> ezUInt32 uiNewCount = uiCount;</div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span> </div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span>  <span class="keywordflow">if</span> (uiNewCount &gt; uiOldCount)</div>
<div class="foldopen" id="foldopen00112" data-start="{" data-end="}">
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#a0f0562f5239ac1e43a81764086de2e25">  112</a></span>  {</div>
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno">  113</span>    <span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;Reserve(uiNewCount);</div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span>    ezMemoryUtils::Construct&lt;ConstructAll&gt;(<span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr() + uiOldCount, uiNewCount - uiOldCount);</div>
<div class="foldopen" id="foldopen00115" data-start="{" data-end="}">
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#a5e4ed197f4dc1545fddef9e031fe0226">  115</a></span>  }</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>  <span class="keywordflow">else</span> <span class="keywordflow">if</span> (uiNewCount &lt; uiOldCount)</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>  {</div>
<div class="foldopen" id="foldopen00118" data-start="{" data-end="}">
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#abc514bdf8b2de7b5b220ffdbd862e830">  118</a></span>    <a class="code hl_function" href="../../dc/d4d/classez_memory_utils.htm#add65b87c39dade4ee7b0671c16b10a39">ezMemoryUtils::Destruct</a>(<span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr() + uiNewCount, uiOldCount - uiNewCount);</div>
<div class="line"><a id="l00119" name="l00119"></a><span class="lineno">  119</span>  }</div>
<div class="line"><a id="l00120" name="l00120"></a><span class="lineno">  120</span> </div>
<div class="foldopen" id="foldopen00121" data-start="{" data-end="}">
<div class="line"><a id="l00121" name="l00121"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#a90fe79a4a545a67e31bf047bef3e5371">  121</a></span>  m_uiCount = uiCount;</div>
<div class="line"><a id="l00122" name="l00122"></a><span class="lineno">  122</span>}</div>
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno">  123</span> </div>
<div class="foldopen" id="foldopen00124" data-start="{" data-end="}">
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#a6db54827aba606bd753936dd0becbd54">  124</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00125" data-start="{" data-end="}">
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#acc383d296b37437415626a4209380659">  125</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../dc/d59/classez_array_base.htm#acb1665da46f44fab7a676561cc1d611c">ezArrayBase&lt;T, Derived&gt;::SetCount</a>(ezUInt32 uiCount, <span class="keyword">const</span> T&amp; fillValue)</div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span>{</div>
<div class="foldopen" id="foldopen00127" data-start="{" data-end="}">
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#a5bd43f6f7c9946b6b1a936b1381374bb">  127</a></span>  <span class="keyword">const</span> ezUInt32 uiOldCount = m_uiCount;</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span>  <span class="keyword">const</span> ezUInt32 uiNewCount = uiCount;</div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span> </div>
<div class="foldopen" id="foldopen00130" data-start="{" data-end="}">
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#ac6223c492c021ef85253fb486dfd6434">  130</a></span>  <span class="keywordflow">if</span> (uiNewCount &gt; uiOldCount)</div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span>  {</div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span>    <span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;Reserve(uiNewCount);</div>
<div class="foldopen" id="foldopen00133" data-start="{" data-end="}">
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#aa48856c14d2870761e22ac1e000c32fd">  133</a></span>    <a class="code hl_function" href="../../dc/d4d/classez_memory_utils.htm#a9a615b84872b968b7f8523c6f7b0a25b">ezMemoryUtils::CopyConstruct</a>(<span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr() + uiOldCount, fillValue, uiNewCount - uiOldCount);</div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span>  }</div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span>  <span class="keywordflow">else</span> <span class="keywordflow">if</span> (uiNewCount &lt; uiOldCount)</div>
<div class="foldopen" id="foldopen00136" data-start="{" data-end="}">
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#ae5b5afca8aa70c69f07360eecd7171bc">  136</a></span>  {</div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span>    <a class="code hl_function" href="../../dc/d4d/classez_memory_utils.htm#add65b87c39dade4ee7b0671c16b10a39">ezMemoryUtils::Destruct</a>(<span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr() + uiNewCount, uiOldCount - uiNewCount);</div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span>  }</div>
<div class="foldopen" id="foldopen00139" data-start="{" data-end="}">
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#a3eb031c276e814889dce6b7bd5e398ff">  139</a></span> </div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>  m_uiCount = uiCount;</div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span>}</div>
<div class="line"><a id="l00142" name="l00142"></a><span class="lineno">  142</span> </div>
<div class="foldopen" id="foldopen00143" data-start="{" data-end="}">
<div class="line"><a id="l00143" name="l00143"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#a318047b04f505092c25d6c115ec5f72c">  143</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00144" data-start="{" data-end="}">
<div class="line"><a id="l00144" name="l00144"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#ad74465b5a0c6474b1611bbb462f635ef">  144</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../dc/d59/classez_array_base.htm#ad74465b5a0c6474b1611bbb462f635ef">ezArrayBase&lt;T, Derived&gt;::EnsureCount</a>(ezUInt32 uiCount)</div>
<div class="line"><a id="l00145" name="l00145"></a><span class="lineno">  145</span>{</div>
<div class="foldopen" id="foldopen00146" data-start="{" data-end="}">
<div class="line"><a id="l00146" name="l00146"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#ae111f173c0e5c067d7b5fae92e755c25">  146</a></span>  <span class="keywordflow">if</span> (uiCount &gt; m_uiCount)</div>
<div class="line"><a id="l00147" name="l00147"></a><span class="lineno">  147</span>  {</div>
<div class="line"><a id="l00148" name="l00148"></a><span class="lineno">  148</span>    SetCount(uiCount);</div>
<div class="foldopen" id="foldopen00149" data-start="{" data-end="}">
<div class="line"><a id="l00149" name="l00149"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#a170f421d9abdce1695e55b84212c59b0">  149</a></span>  }</div>
<div class="line"><a id="l00150" name="l00150"></a><span class="lineno">  150</span>}</div>
<div class="line"><a id="l00151" name="l00151"></a><span class="lineno">  151</span> </div>
<div class="foldopen" id="foldopen00152" data-start="{" data-end="}">
<div class="line"><a id="l00152" name="l00152"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#ac2501c98f4cb3feeb4c0dbb688977274">  152</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a id="l00153" name="l00153"></a><span class="lineno">  153</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span>&gt; <span class="comment">// Second template needed so that the compiler does only instantiate it when called. Otherwise the static_assert would trigger</span></div>
<div class="line"><a id="l00154" name="l00154"></a><span class="lineno">  154</span><span class="comment">// early.</span></div>
<div class="foldopen" id="foldopen00155" data-start="{" data-end="}">
<div class="line"><a id="l00155" name="l00155"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#ad668df6ff81bdcac0bc118666d5817cf">  155</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../dc/d59/classez_array_base.htm#aa42fdcea580029c35b32658bd6d9fd50">ezArrayBase&lt;T, Derived&gt;::SetCountUninitialized</a>(ezUInt32 uiCount)</div>
<div class="line"><a id="l00156" name="l00156"></a><span class="lineno">  156</span>{</div>
<div class="line"><a id="l00157" name="l00157"></a><span class="lineno">  157</span>  <span class="keyword">static_assert</span>(<a class="code hl_struct" href="../../dc/dbe/structez_is_pod_type.htm">ezIsPodType&lt;T&gt;::value</a> == ezTypeIsPod::value, <span class="stringliteral">&quot;SetCountUninitialized is only supported for POD types.&quot;</span>);</div>
<div class="foldopen" id="foldopen00158" data-start="{" data-end="}">
<div class="line"><a id="l00158" name="l00158"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#af264c6192b46155871e4c5e85c9c1114">  158</a></span>  <span class="keyword">const</span> ezUInt32 uiOldCount = m_uiCount;</div>
<div class="line"><a id="l00159" name="l00159"></a><span class="lineno">  159</span>  <span class="keyword">const</span> ezUInt32 uiNewCount = uiCount;</div>
<div class="line"><a id="l00160" name="l00160"></a><span class="lineno">  160</span> </div>
<div class="foldopen" id="foldopen00161" data-start="{" data-end="}">
<div class="line"><a id="l00161" name="l00161"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#a05b276d26b66885700fc8f36dd8efc50">  161</a></span>  <span class="keywordflow">if</span> (uiNewCount &gt; uiOldCount)</div>
<div class="line"><a id="l00162" name="l00162"></a><span class="lineno">  162</span>  {</div>
<div class="line"><a id="l00163" name="l00163"></a><span class="lineno">  163</span>    <span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;Reserve(uiNewCount);</div>
<div class="foldopen" id="foldopen00164" data-start="{" data-end="}">
<div class="line"><a id="l00164" name="l00164"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#a88dd290606aab5e0382d469241ab0c17">  164</a></span>    <span class="comment">// we already assert above that T is a POD type</span></div>
<div class="line"><a id="l00165" name="l00165"></a><span class="lineno">  165</span>    <span class="comment">// don&#39;t construct anything, leave the memory untouched</span></div>
<div class="line"><a id="l00166" name="l00166"></a><span class="lineno">  166</span>  }</div>
<div class="line"><a id="l00167" name="l00167"></a><span class="lineno">  167</span> </div>
<div class="line"><a id="l00168" name="l00168"></a><span class="lineno">  168</span>  m_uiCount = uiCount;</div>
<div class="line"><a id="l00169" name="l00169"></a><span class="lineno">  169</span>}</div>
<div class="line"><a id="l00170" name="l00170"></a><span class="lineno">  170</span> </div>
<div class="line"><a id="l00171" name="l00171"></a><span class="lineno">  171</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00172" data-start="{" data-end="}">
<div class="line"><a id="l00172" name="l00172"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#a51ba61fcbd2350ae8850754a41acbaa1">  172</a></span>EZ_ALWAYS_INLINE ezUInt32 <a class="code hl_function" href="../../dc/d59/classez_array_base.htm#a51ba61fcbd2350ae8850754a41acbaa1">ezArrayBase&lt;T, Derived&gt;::GetCount</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00173" name="l00173"></a><span class="lineno">  173</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00174" name="l00174"></a><span class="lineno">  174</span>  <span class="keywordflow">return</span> m_uiCount;</div>
<div class="line"><a id="l00175" name="l00175"></a><span class="lineno">  175</span>}</div>
</div>
<div class="line"><a id="l00176" name="l00176"></a><span class="lineno">  176</span> </div>
<div class="line"><a id="l00177" name="l00177"></a><span class="lineno">  177</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00178" data-start="{" data-end="}">
<div class="line"><a id="l00178" name="l00178"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#a35630a870ec53cf3b022653232a31c60">  178</a></span>EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code hl_function" href="../../dc/d59/classez_array_base.htm#a35630a870ec53cf3b022653232a31c60">ezArrayBase&lt;T, Derived&gt;::IsEmpty</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00179" name="l00179"></a><span class="lineno">  179</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00180" name="l00180"></a><span class="lineno">  180</span>  <span class="keywordflow">return</span> m_uiCount == 0;</div>
<div class="line"><a id="l00181" name="l00181"></a><span class="lineno">  181</span>}</div>
</div>
<div class="line"><a id="l00182" name="l00182"></a><span class="lineno">  182</span> </div>
<div class="line"><a id="l00183" name="l00183"></a><span class="lineno">  183</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00184" data-start="{" data-end="}">
<div class="line"><a id="l00184" name="l00184"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#a74099c2d7681df345aedf8cfe24f0bc4">  184</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../dc/d59/classez_array_base.htm#a74099c2d7681df345aedf8cfe24f0bc4">ezArrayBase&lt;T, Derived&gt;::Clear</a>()</div>
<div class="line"><a id="l00185" name="l00185"></a><span class="lineno">  185</span>{</div>
<div class="line"><a id="l00186" name="l00186"></a><span class="lineno">  186</span>  <a class="code hl_function" href="../../dc/d4d/classez_memory_utils.htm#add65b87c39dade4ee7b0671c16b10a39">ezMemoryUtils::Destruct</a>(<span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr(), m_uiCount);</div>
<div class="line"><a id="l00187" name="l00187"></a><span class="lineno">  187</span>  m_uiCount = 0;</div>
<div class="line"><a id="l00188" name="l00188"></a><span class="lineno">  188</span>}</div>
</div>
<div class="line"><a id="l00189" name="l00189"></a><span class="lineno">  189</span> </div>
<div class="line"><a id="l00190" name="l00190"></a><span class="lineno">  190</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00191" data-start="{" data-end="}">
<div class="line"><a id="l00191" name="l00191"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#a78392f27dfa795763aebdb43e4a75289">  191</a></span><span class="keywordtype">bool</span> <a class="code hl_function" href="../../dc/d59/classez_array_base.htm#a78392f27dfa795763aebdb43e4a75289">ezArrayBase&lt;T, Derived&gt;::Contains</a>(<span class="keyword">const</span> T&amp; value)<span class="keyword"> const</span></div>
<div class="line"><a id="l00192" name="l00192"></a><span class="lineno">  192</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00193" name="l00193"></a><span class="lineno">  193</span>  <span class="keywordflow">return</span> IndexOf(value) != ezInvalidIndex;</div>
<div class="line"><a id="l00194" name="l00194"></a><span class="lineno">  194</span>}</div>
</div>
<div class="line"><a id="l00195" name="l00195"></a><span class="lineno">  195</span> </div>
<div class="line"><a id="l00196" name="l00196"></a><span class="lineno">  196</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00197" data-start="{" data-end="}">
<div class="line"><a id="l00197" name="l00197"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#afabace0a2eabdf350c81203eed1c7984">  197</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../dc/d59/classez_array_base.htm#afabace0a2eabdf350c81203eed1c7984">ezArrayBase&lt;T, Derived&gt;::InsertAt</a>(ezUInt32 uiIndex, <span class="keyword">const</span> T&amp; value)</div>
<div class="line"><a id="l00198" name="l00198"></a><span class="lineno">  198</span>{</div>
<div class="line"><a id="l00199" name="l00199"></a><span class="lineno">  199</span>  EZ_ASSERT_DEV(uiIndex &lt;= m_uiCount, <span class="stringliteral">&quot;Invalid index. Array has {0} elements, trying to insert element at index {1}.&quot;</span>, m_uiCount, uiIndex);</div>
<div class="line"><a id="l00200" name="l00200"></a><span class="lineno">  200</span> </div>
<div class="line"><a id="l00201" name="l00201"></a><span class="lineno">  201</span>  <span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;Reserve(m_uiCount + 1);</div>
<div class="line"><a id="l00202" name="l00202"></a><span class="lineno">  202</span> </div>
<div class="line"><a id="l00203" name="l00203"></a><span class="lineno">  203</span>  <a class="code hl_function" href="../../dc/d4d/classez_memory_utils.htm#a9fd0a49960e146262101081c5ae0feeb">ezMemoryUtils::Prepend</a>(<span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr() + uiIndex, value, m_uiCount - uiIndex);</div>
<div class="line"><a id="l00204" name="l00204"></a><span class="lineno">  204</span>  m_uiCount++;</div>
<div class="line"><a id="l00205" name="l00205"></a><span class="lineno">  205</span>}</div>
</div>
<div class="line"><a id="l00206" name="l00206"></a><span class="lineno">  206</span> </div>
<div class="line"><a id="l00207" name="l00207"></a><span class="lineno">  207</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00208" data-start="{" data-end="}">
<div class="line"><a id="l00208" name="l00208"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#a2e895667f6052199d90a7d703c69a91e">  208</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../dc/d59/classez_array_base.htm#afabace0a2eabdf350c81203eed1c7984">ezArrayBase&lt;T, Derived&gt;::InsertAt</a>(ezUInt32 uiIndex, T&amp;&amp; value)</div>
<div class="line"><a id="l00209" name="l00209"></a><span class="lineno">  209</span>{</div>
<div class="line"><a id="l00210" name="l00210"></a><span class="lineno">  210</span>  EZ_ASSERT_DEV(uiIndex &lt;= m_uiCount, <span class="stringliteral">&quot;Invalid index. Array has {0} elements, trying to insert element at index {1}.&quot;</span>, m_uiCount, uiIndex);</div>
<div class="line"><a id="l00211" name="l00211"></a><span class="lineno">  211</span> </div>
<div class="line"><a id="l00212" name="l00212"></a><span class="lineno">  212</span>  <span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;Reserve(m_uiCount + 1);</div>
<div class="line"><a id="l00213" name="l00213"></a><span class="lineno">  213</span> </div>
<div class="line"><a id="l00214" name="l00214"></a><span class="lineno">  214</span>  <a class="code hl_function" href="../../dc/d4d/classez_memory_utils.htm#a9fd0a49960e146262101081c5ae0feeb">ezMemoryUtils::Prepend</a>(<span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr() + uiIndex, std::move(value), m_uiCount - uiIndex);</div>
<div class="line"><a id="l00215" name="l00215"></a><span class="lineno">  215</span>  m_uiCount++;</div>
<div class="line"><a id="l00216" name="l00216"></a><span class="lineno">  216</span>}</div>
</div>
<div class="line"><a id="l00217" name="l00217"></a><span class="lineno">  217</span> </div>
<div class="line"><a id="l00218" name="l00218"></a><span class="lineno">  218</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00219" data-start="{" data-end="}">
<div class="line"><a id="l00219" name="l00219"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#a581b2d3a780af145c7f6333655807711">  219</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../dc/d59/classez_array_base.htm#a581b2d3a780af145c7f6333655807711">ezArrayBase&lt;T, Derived&gt;::InsertRangeAt</a>(ezUInt32 uiIndex, <span class="keyword">const</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const T&gt;</a>&amp; range)</div>
<div class="line"><a id="l00220" name="l00220"></a><span class="lineno">  220</span>{</div>
<div class="line"><a id="l00221" name="l00221"></a><span class="lineno">  221</span>  <span class="keyword">const</span> ezUInt32 uiRangeCount = range.<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>();</div>
<div class="line"><a id="l00222" name="l00222"></a><span class="lineno">  222</span>  <span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;Reserve(m_uiCount + uiRangeCount);</div>
<div class="line"><a id="l00223" name="l00223"></a><span class="lineno">  223</span> </div>
<div class="line"><a id="l00224" name="l00224"></a><span class="lineno">  224</span>  <a class="code hl_function" href="../../dc/d4d/classez_memory_utils.htm#a9fd0a49960e146262101081c5ae0feeb">ezMemoryUtils::Prepend</a>(<span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr() + uiIndex, range.<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#aba4e7585190f337c6428f2fe25828b8a">GetPtr</a>(), uiRangeCount, m_uiCount - uiIndex);</div>
<div class="line"><a id="l00225" name="l00225"></a><span class="lineno">  225</span>  m_uiCount += uiRangeCount;</div>
<div class="line"><a id="l00226" name="l00226"></a><span class="lineno">  226</span>}</div>
</div>
<div class="line"><a id="l00227" name="l00227"></a><span class="lineno">  227</span> </div>
<div class="line"><a id="l00228" name="l00228"></a><span class="lineno">  228</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00229" data-start="{" data-end="}">
<div class="line"><a id="l00229" name="l00229"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#af19f26ca6dc39c04caad024913a2f2ec">  229</a></span><span class="keywordtype">bool</span> <a class="code hl_function" href="../../dc/d59/classez_array_base.htm#af19f26ca6dc39c04caad024913a2f2ec">ezArrayBase&lt;T, Derived&gt;::RemoveAndCopy</a>(<span class="keyword">const</span> T&amp; value)</div>
<div class="line"><a id="l00230" name="l00230"></a><span class="lineno">  230</span>{</div>
<div class="line"><a id="l00231" name="l00231"></a><span class="lineno">  231</span>  ezUInt32 uiIndex = IndexOf(value);</div>
<div class="line"><a id="l00232" name="l00232"></a><span class="lineno">  232</span> </div>
<div class="line"><a id="l00233" name="l00233"></a><span class="lineno">  233</span>  <span class="keywordflow">if</span> (uiIndex == ezInvalidIndex)</div>
<div class="line"><a id="l00234" name="l00234"></a><span class="lineno">  234</span>    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00235" name="l00235"></a><span class="lineno">  235</span> </div>
<div class="line"><a id="l00236" name="l00236"></a><span class="lineno">  236</span>  RemoveAtAndCopy(uiIndex);</div>
<div class="line"><a id="l00237" name="l00237"></a><span class="lineno">  237</span>  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a id="l00238" name="l00238"></a><span class="lineno">  238</span>}</div>
</div>
<div class="line"><a id="l00239" name="l00239"></a><span class="lineno">  239</span> </div>
<div class="line"><a id="l00240" name="l00240"></a><span class="lineno">  240</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00241" data-start="{" data-end="}">
<div class="line"><a id="l00241" name="l00241"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#aacea05b6f0ec519a663156dd0cc82309">  241</a></span><span class="keywordtype">bool</span> <a class="code hl_function" href="../../dc/d59/classez_array_base.htm#aacea05b6f0ec519a663156dd0cc82309">ezArrayBase&lt;T, Derived&gt;::RemoveAndSwap</a>(<span class="keyword">const</span> T&amp; value)</div>
<div class="line"><a id="l00242" name="l00242"></a><span class="lineno">  242</span>{</div>
<div class="line"><a id="l00243" name="l00243"></a><span class="lineno">  243</span>  ezUInt32 uiIndex = IndexOf(value);</div>
<div class="line"><a id="l00244" name="l00244"></a><span class="lineno">  244</span> </div>
<div class="line"><a id="l00245" name="l00245"></a><span class="lineno">  245</span>  <span class="keywordflow">if</span> (uiIndex == ezInvalidIndex)</div>
<div class="line"><a id="l00246" name="l00246"></a><span class="lineno">  246</span>    <span class="keywordflow">return</span> <span class="keyword">false</span>;</div>
<div class="line"><a id="l00247" name="l00247"></a><span class="lineno">  247</span> </div>
<div class="line"><a id="l00248" name="l00248"></a><span class="lineno">  248</span>  RemoveAtAndSwap(uiIndex);</div>
<div class="line"><a id="l00249" name="l00249"></a><span class="lineno">  249</span>  <span class="keywordflow">return</span> <span class="keyword">true</span>;</div>
<div class="line"><a id="l00250" name="l00250"></a><span class="lineno">  250</span>}</div>
</div>
<div class="line"><a id="l00251" name="l00251"></a><span class="lineno">  251</span> </div>
<div class="line"><a id="l00252" name="l00252"></a><span class="lineno">  252</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00253" data-start="{" data-end="}">
<div class="line"><a id="l00253" name="l00253"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#a29dfedb3f609d9a698f9becb213b697c">  253</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../dc/d59/classez_array_base.htm#a29dfedb3f609d9a698f9becb213b697c">ezArrayBase&lt;T, Derived&gt;::RemoveAtAndCopy</a>(ezUInt32 uiIndex, ezUInt32 uiNumElements <span class="comment">/*= 1*/</span>)</div>
<div class="line"><a id="l00254" name="l00254"></a><span class="lineno">  254</span>{</div>
<div class="line"><a id="l00255" name="l00255"></a><span class="lineno">  255</span>  EZ_ASSERT_DEV(uiIndex + uiNumElements &lt;= m_uiCount, <span class="stringliteral">&quot;Out of bounds access. Array has {0} elements, trying to remove element at index {1}.&quot;</span>, m_uiCount, uiIndex + uiNumElements - 1);</div>
<div class="line"><a id="l00256" name="l00256"></a><span class="lineno">  256</span> </div>
<div class="line"><a id="l00257" name="l00257"></a><span class="lineno">  257</span>  T* pElements = <span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr();</div>
<div class="line"><a id="l00258" name="l00258"></a><span class="lineno">  258</span> </div>
<div class="line"><a id="l00259" name="l00259"></a><span class="lineno">  259</span>  m_uiCount -= uiNumElements;</div>
<div class="line"><a id="l00260" name="l00260"></a><span class="lineno">  260</span>  <a class="code hl_function" href="../../dc/d4d/classez_memory_utils.htm#ab83313c90ad3022c34e7d71c5d1a3fbd">ezMemoryUtils::RelocateOverlapped</a>(pElements + uiIndex, pElements + uiIndex + uiNumElements, m_uiCount - uiIndex);</div>
<div class="line"><a id="l00261" name="l00261"></a><span class="lineno">  261</span>}</div>
</div>
<div class="line"><a id="l00262" name="l00262"></a><span class="lineno">  262</span> </div>
<div class="line"><a id="l00263" name="l00263"></a><span class="lineno">  263</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00264" data-start="{" data-end="}">
<div class="line"><a id="l00264" name="l00264"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#ae29e85a3ce212cb78d31d032b4225f28">  264</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../dc/d59/classez_array_base.htm#ae29e85a3ce212cb78d31d032b4225f28">ezArrayBase&lt;T, Derived&gt;::RemoveAtAndSwap</a>(ezUInt32 uiIndex, ezUInt32 uiNumElements <span class="comment">/*= 1*/</span>)</div>
<div class="line"><a id="l00265" name="l00265"></a><span class="lineno">  265</span>{</div>
<div class="line"><a id="l00266" name="l00266"></a><span class="lineno">  266</span>  EZ_ASSERT_DEV(uiIndex + uiNumElements &lt;= m_uiCount, <span class="stringliteral">&quot;Out of bounds access. Array has {0} elements, trying to remove element at index {1}.&quot;</span>, m_uiCount, uiIndex + uiNumElements - 1);</div>
<div class="line"><a id="l00267" name="l00267"></a><span class="lineno">  267</span> </div>
<div class="line"><a id="l00268" name="l00268"></a><span class="lineno">  268</span>  T* pElements = <span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr();</div>
<div class="line"><a id="l00269" name="l00269"></a><span class="lineno">  269</span> </div>
<div class="line"><a id="l00270" name="l00270"></a><span class="lineno">  270</span>  <span class="keywordflow">for</span> (ezUInt32 i = 0; i &lt; uiNumElements; ++i)</div>
<div class="line"><a id="l00271" name="l00271"></a><span class="lineno">  271</span>  {</div>
<div class="line"><a id="l00272" name="l00272"></a><span class="lineno">  272</span>    m_uiCount--;</div>
<div class="line"><a id="l00273" name="l00273"></a><span class="lineno">  273</span> </div>
<div class="line"><a id="l00274" name="l00274"></a><span class="lineno">  274</span>    <span class="keywordflow">if</span> (m_uiCount != uiIndex)</div>
<div class="line"><a id="l00275" name="l00275"></a><span class="lineno">  275</span>    {</div>
<div class="line"><a id="l00276" name="l00276"></a><span class="lineno">  276</span>      pElements[uiIndex] = std::move(pElements[m_uiCount]);</div>
<div class="line"><a id="l00277" name="l00277"></a><span class="lineno">  277</span>    }</div>
<div class="line"><a id="l00278" name="l00278"></a><span class="lineno">  278</span>    <a class="code hl_function" href="../../dc/d4d/classez_memory_utils.htm#add65b87c39dade4ee7b0671c16b10a39">ezMemoryUtils::Destruct</a>(pElements + m_uiCount, 1);</div>
<div class="line"><a id="l00279" name="l00279"></a><span class="lineno">  279</span>    ++uiIndex;</div>
<div class="line"><a id="l00280" name="l00280"></a><span class="lineno">  280</span>  }</div>
<div class="line"><a id="l00281" name="l00281"></a><span class="lineno">  281</span>}</div>
</div>
<div class="line"><a id="l00282" name="l00282"></a><span class="lineno">  282</span> </div>
<div class="line"><a id="l00283" name="l00283"></a><span class="lineno">  283</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00284" data-start="{" data-end="}">
<div class="line"><a id="l00284" name="l00284"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#ad0b2297aad995f6b5b6c83318f1deec4">  284</a></span>ezUInt32 <a class="code hl_function" href="../../dc/d59/classez_array_base.htm#ad0b2297aad995f6b5b6c83318f1deec4">ezArrayBase&lt;T, Derived&gt;::IndexOf</a>(<span class="keyword">const</span> T&amp; value, ezUInt32 uiStartIndex)<span class="keyword"> const</span></div>
<div class="line"><a id="l00285" name="l00285"></a><span class="lineno">  285</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00286" name="l00286"></a><span class="lineno">  286</span>  <span class="keyword">const</span> T* pElements = <span class="keyword">static_cast&lt;</span><span class="keyword">const </span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr();</div>
<div class="line"><a id="l00287" name="l00287"></a><span class="lineno">  287</span> </div>
<div class="line"><a id="l00288" name="l00288"></a><span class="lineno">  288</span>  <span class="keywordflow">for</span> (ezUInt32 i = uiStartIndex; i &lt; m_uiCount; i++)</div>
<div class="line"><a id="l00289" name="l00289"></a><span class="lineno">  289</span>  {</div>
<div class="line"><a id="l00290" name="l00290"></a><span class="lineno">  290</span>    <span class="keywordflow">if</span> (<a class="code hl_function" href="../../dc/d4d/classez_memory_utils.htm#a744d60b4b000c61f2dd3819a12410595">ezMemoryUtils::IsEqual</a>(pElements + i, &amp;value))</div>
<div class="line"><a id="l00291" name="l00291"></a><span class="lineno">  291</span>      <span class="keywordflow">return</span> i;</div>
<div class="line"><a id="l00292" name="l00292"></a><span class="lineno">  292</span>  }</div>
<div class="line"><a id="l00293" name="l00293"></a><span class="lineno">  293</span>  <span class="keywordflow">return</span> ezInvalidIndex;</div>
<div class="line"><a id="l00294" name="l00294"></a><span class="lineno">  294</span>}</div>
</div>
<div class="line"><a id="l00295" name="l00295"></a><span class="lineno">  295</span> </div>
<div class="line"><a id="l00296" name="l00296"></a><span class="lineno">  296</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00297" data-start="{" data-end="}">
<div class="line"><a id="l00297" name="l00297"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#a394c5310d1f8bc5907014761f72a4884">  297</a></span>ezUInt32 <a class="code hl_function" href="../../dc/d59/classez_array_base.htm#a394c5310d1f8bc5907014761f72a4884">ezArrayBase&lt;T, Derived&gt;::LastIndexOf</a>(<span class="keyword">const</span> T&amp; value, ezUInt32 uiStartIndex)<span class="keyword"> const</span></div>
<div class="line"><a id="l00298" name="l00298"></a><span class="lineno">  298</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00299" name="l00299"></a><span class="lineno">  299</span>  <span class="keyword">const</span> T* pElements = <span class="keyword">static_cast&lt;</span><span class="keyword">const </span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr();</div>
<div class="line"><a id="l00300" name="l00300"></a><span class="lineno">  300</span> </div>
<div class="line"><a id="l00301" name="l00301"></a><span class="lineno">  301</span>  <span class="keywordflow">for</span> (ezUInt32 i = <a class="code hl_function" href="../../db/d78/namespaceez_math.htm#ad8009b4da9cb427658d71e30576f209e">ezMath::Min</a>(uiStartIndex, m_uiCount); i-- &gt; 0;)</div>
<div class="line"><a id="l00302" name="l00302"></a><span class="lineno">  302</span>  {</div>
<div class="line"><a id="l00303" name="l00303"></a><span class="lineno">  303</span>    <span class="keywordflow">if</span> (<a class="code hl_function" href="../../dc/d4d/classez_memory_utils.htm#a744d60b4b000c61f2dd3819a12410595">ezMemoryUtils::IsEqual</a>(pElements + i, &amp;value))</div>
<div class="line"><a id="l00304" name="l00304"></a><span class="lineno">  304</span>      <span class="keywordflow">return</span> i;</div>
<div class="line"><a id="l00305" name="l00305"></a><span class="lineno">  305</span>  }</div>
<div class="line"><a id="l00306" name="l00306"></a><span class="lineno">  306</span>  <span class="keywordflow">return</span> ezInvalidIndex;</div>
<div class="line"><a id="l00307" name="l00307"></a><span class="lineno">  307</span>}</div>
</div>
<div class="line"><a id="l00308" name="l00308"></a><span class="lineno">  308</span> </div>
<div class="line"><a id="l00309" name="l00309"></a><span class="lineno">  309</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00310" data-start="{" data-end="}">
<div class="line"><a id="l00310" name="l00310"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#a0f0562f5239ac1e43a81764086de2e25">  310</a></span>T&amp; <a class="code hl_function" href="../../dc/d59/classez_array_base.htm#a0f0562f5239ac1e43a81764086de2e25">ezArrayBase&lt;T, Derived&gt;::ExpandAndGetRef</a>()</div>
<div class="line"><a id="l00311" name="l00311"></a><span class="lineno">  311</span>{</div>
<div class="line"><a id="l00312" name="l00312"></a><span class="lineno">  312</span>  <span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;Reserve(m_uiCount + 1);</div>
<div class="line"><a id="l00313" name="l00313"></a><span class="lineno">  313</span> </div>
<div class="line"><a id="l00314" name="l00314"></a><span class="lineno">  314</span>  T* pElements = <span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr();</div>
<div class="line"><a id="l00315" name="l00315"></a><span class="lineno">  315</span> </div>
<div class="line"><a id="l00316" name="l00316"></a><span class="lineno">  316</span>  ezMemoryUtils::Construct&lt;SkipTrivialTypes&gt;(pElements + m_uiCount, 1);</div>
<div class="line"><a id="l00317" name="l00317"></a><span class="lineno">  317</span> </div>
<div class="line"><a id="l00318" name="l00318"></a><span class="lineno">  318</span>  T&amp; ReturnRef = *(pElements + m_uiCount);</div>
<div class="line"><a id="l00319" name="l00319"></a><span class="lineno">  319</span> </div>
<div class="line"><a id="l00320" name="l00320"></a><span class="lineno">  320</span>  m_uiCount++;</div>
<div class="line"><a id="l00321" name="l00321"></a><span class="lineno">  321</span> </div>
<div class="line"><a id="l00322" name="l00322"></a><span class="lineno">  322</span>  <span class="keywordflow">return</span> ReturnRef;</div>
<div class="line"><a id="l00323" name="l00323"></a><span class="lineno">  323</span>}</div>
</div>
<div class="line"><a id="l00324" name="l00324"></a><span class="lineno">  324</span> </div>
<div class="line"><a id="l00325" name="l00325"></a><span class="lineno">  325</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00326" data-start="{" data-end="}">
<div class="line"><a id="l00326" name="l00326"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#a5e4ed197f4dc1545fddef9e031fe0226">  326</a></span>T* <a class="code hl_function" href="../../dc/d59/classez_array_base.htm#a5e4ed197f4dc1545fddef9e031fe0226">ezArrayBase&lt;T, Derived&gt;::ExpandBy</a>(ezUInt32 uiNumNewItems)</div>
<div class="line"><a id="l00327" name="l00327"></a><span class="lineno">  327</span>{</div>
<div class="line"><a id="l00328" name="l00328"></a><span class="lineno">  328</span>  this-&gt;SetCount(this-&gt;GetCount() + uiNumNewItems);</div>
<div class="line"><a id="l00329" name="l00329"></a><span class="lineno">  329</span>  <span class="keywordflow">return</span> GetArrayPtr().GetEndPtr() - uiNumNewItems;</div>
<div class="line"><a id="l00330" name="l00330"></a><span class="lineno">  330</span>}</div>
</div>
<div class="line"><a id="l00331" name="l00331"></a><span class="lineno">  331</span> </div>
<div class="line"><a id="l00332" name="l00332"></a><span class="lineno">  332</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00333" data-start="{" data-end="}">
<div class="line"><a id="l00333" name="l00333"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#abc514bdf8b2de7b5b220ffdbd862e830">  333</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../dc/d59/classez_array_base.htm#abc514bdf8b2de7b5b220ffdbd862e830">ezArrayBase&lt;T, Derived&gt;::PushBack</a>(<span class="keyword">const</span> T&amp; value)</div>
<div class="line"><a id="l00334" name="l00334"></a><span class="lineno">  334</span>{</div>
<div class="line"><a id="l00335" name="l00335"></a><span class="lineno">  335</span>  <span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;Reserve(m_uiCount + 1);</div>
<div class="line"><a id="l00336" name="l00336"></a><span class="lineno">  336</span> </div>
<div class="line"><a id="l00337" name="l00337"></a><span class="lineno">  337</span>  <a class="code hl_function" href="../../dc/d4d/classez_memory_utils.htm#a9a615b84872b968b7f8523c6f7b0a25b">ezMemoryUtils::CopyConstruct</a>(<span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr() + m_uiCount, value, 1);</div>
<div class="line"><a id="l00338" name="l00338"></a><span class="lineno">  338</span>  m_uiCount++;</div>
<div class="line"><a id="l00339" name="l00339"></a><span class="lineno">  339</span>}</div>
</div>
<div class="line"><a id="l00340" name="l00340"></a><span class="lineno">  340</span> </div>
<div class="line"><a id="l00341" name="l00341"></a><span class="lineno">  341</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00342" data-start="{" data-end="}">
<div class="line"><a id="l00342" name="l00342"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#a90fe79a4a545a67e31bf047bef3e5371">  342</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../dc/d59/classez_array_base.htm#abc514bdf8b2de7b5b220ffdbd862e830">ezArrayBase&lt;T, Derived&gt;::PushBack</a>(T&amp;&amp; value)</div>
<div class="line"><a id="l00343" name="l00343"></a><span class="lineno">  343</span>{</div>
<div class="line"><a id="l00344" name="l00344"></a><span class="lineno">  344</span>  <span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;Reserve(m_uiCount + 1);</div>
<div class="line"><a id="l00345" name="l00345"></a><span class="lineno">  345</span> </div>
<div class="line"><a id="l00346" name="l00346"></a><span class="lineno">  346</span>  ezMemoryUtils::MoveConstruct&lt;T&gt;(<span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr() + m_uiCount, std::move(value));</div>
<div class="line"><a id="l00347" name="l00347"></a><span class="lineno">  347</span>  m_uiCount++;</div>
<div class="line"><a id="l00348" name="l00348"></a><span class="lineno">  348</span>}</div>
</div>
<div class="line"><a id="l00349" name="l00349"></a><span class="lineno">  349</span> </div>
<div class="line"><a id="l00350" name="l00350"></a><span class="lineno">  350</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00351" data-start="{" data-end="}">
<div class="line"><a id="l00351" name="l00351"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#a6db54827aba606bd753936dd0becbd54">  351</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../dc/d59/classez_array_base.htm#a6db54827aba606bd753936dd0becbd54">ezArrayBase&lt;T, Derived&gt;::PushBackUnchecked</a>(<span class="keyword">const</span> T&amp; value)</div>
<div class="line"><a id="l00352" name="l00352"></a><span class="lineno">  352</span>{</div>
<div class="line"><a id="l00353" name="l00353"></a><span class="lineno">  353</span>  EZ_ASSERT_DEBUG(m_uiCount &lt; m_uiCapacity, <span class="stringliteral">&quot;Appending unchecked to array with insufficient capacity.&quot;</span>);</div>
<div class="line"><a id="l00354" name="l00354"></a><span class="lineno">  354</span> </div>
<div class="line"><a id="l00355" name="l00355"></a><span class="lineno">  355</span>  <a class="code hl_function" href="../../dc/d4d/classez_memory_utils.htm#a9a615b84872b968b7f8523c6f7b0a25b">ezMemoryUtils::CopyConstruct</a>(<span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr() + m_uiCount, value, 1);</div>
<div class="line"><a id="l00356" name="l00356"></a><span class="lineno">  356</span>  m_uiCount++;</div>
<div class="line"><a id="l00357" name="l00357"></a><span class="lineno">  357</span>}</div>
</div>
<div class="line"><a id="l00358" name="l00358"></a><span class="lineno">  358</span> </div>
<div class="line"><a id="l00359" name="l00359"></a><span class="lineno">  359</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00360" data-start="{" data-end="}">
<div class="line"><a id="l00360" name="l00360"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#a5bd43f6f7c9946b6b1a936b1381374bb">  360</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../dc/d59/classez_array_base.htm#a6db54827aba606bd753936dd0becbd54">ezArrayBase&lt;T, Derived&gt;::PushBackUnchecked</a>(T&amp;&amp; value)</div>
<div class="line"><a id="l00361" name="l00361"></a><span class="lineno">  361</span>{</div>
<div class="line"><a id="l00362" name="l00362"></a><span class="lineno">  362</span>  EZ_ASSERT_DEBUG(m_uiCount &lt; m_uiCapacity, <span class="stringliteral">&quot;Appending unchecked to array with insufficient capacity.&quot;</span>);</div>
<div class="line"><a id="l00363" name="l00363"></a><span class="lineno">  363</span> </div>
<div class="line"><a id="l00364" name="l00364"></a><span class="lineno">  364</span>  ezMemoryUtils::MoveConstruct&lt;T&gt;(<span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr() + m_uiCount, std::move(value));</div>
<div class="line"><a id="l00365" name="l00365"></a><span class="lineno">  365</span>  m_uiCount++;</div>
<div class="line"><a id="l00366" name="l00366"></a><span class="lineno">  366</span>}</div>
</div>
<div class="line"><a id="l00367" name="l00367"></a><span class="lineno">  367</span> </div>
<div class="line"><a id="l00368" name="l00368"></a><span class="lineno">  368</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00369" data-start="{" data-end="}">
<div class="line"><a id="l00369" name="l00369"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#ac6223c492c021ef85253fb486dfd6434">  369</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../dc/d59/classez_array_base.htm#ac6223c492c021ef85253fb486dfd6434">ezArrayBase&lt;T, Derived&gt;::PushBackRange</a>(<span class="keyword">const</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const T&gt;</a>&amp; range)</div>
<div class="line"><a id="l00370" name="l00370"></a><span class="lineno">  370</span>{</div>
<div class="line"><a id="l00371" name="l00371"></a><span class="lineno">  371</span>  <span class="keyword">const</span> ezUInt32 uiRangeCount = range.<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">GetCount</a>();</div>
<div class="line"><a id="l00372" name="l00372"></a><span class="lineno">  372</span>  <span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;Reserve(m_uiCount + uiRangeCount);</div>
<div class="line"><a id="l00373" name="l00373"></a><span class="lineno">  373</span> </div>
<div class="line"><a id="l00374" name="l00374"></a><span class="lineno">  374</span>  <a class="code hl_function" href="../../dc/d4d/classez_memory_utils.htm#a4c12c5af647ec366b7a99b15cca9386b">ezMemoryUtils::CopyConstructArray</a>(<span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr() + m_uiCount, range.<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#aba4e7585190f337c6428f2fe25828b8a">GetPtr</a>(), uiRangeCount);</div>
<div class="line"><a id="l00375" name="l00375"></a><span class="lineno">  375</span>  m_uiCount += uiRangeCount;</div>
<div class="line"><a id="l00376" name="l00376"></a><span class="lineno">  376</span>}</div>
</div>
<div class="line"><a id="l00377" name="l00377"></a><span class="lineno">  377</span> </div>
<div class="line"><a id="l00378" name="l00378"></a><span class="lineno">  378</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00379" data-start="{" data-end="}">
<div class="line"><a id="l00379" name="l00379"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#aa48856c14d2870761e22ac1e000c32fd">  379</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../dc/d59/classez_array_base.htm#aa48856c14d2870761e22ac1e000c32fd">ezArrayBase&lt;T, Derived&gt;::PopBack</a>(ezUInt32 uiCountToRemove <span class="comment">/* = 1 */</span>)</div>
<div class="line"><a id="l00380" name="l00380"></a><span class="lineno">  380</span>{</div>
<div class="line"><a id="l00381" name="l00381"></a><span class="lineno">  381</span>  EZ_ASSERT_DEV(m_uiCount &gt;= uiCountToRemove, <span class="stringliteral">&quot;Out of bounds access. Array has {0} elements, trying to pop {1} elements.&quot;</span>, m_uiCount, uiCountToRemove);</div>
<div class="line"><a id="l00382" name="l00382"></a><span class="lineno">  382</span> </div>
<div class="line"><a id="l00383" name="l00383"></a><span class="lineno">  383</span>  m_uiCount -= uiCountToRemove;</div>
<div class="line"><a id="l00384" name="l00384"></a><span class="lineno">  384</span>  <a class="code hl_function" href="../../dc/d4d/classez_memory_utils.htm#add65b87c39dade4ee7b0671c16b10a39">ezMemoryUtils::Destruct</a>(<span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr() + m_uiCount, uiCountToRemove);</div>
<div class="line"><a id="l00385" name="l00385"></a><span class="lineno">  385</span>}</div>
</div>
<div class="line"><a id="l00386" name="l00386"></a><span class="lineno">  386</span> </div>
<div class="line"><a id="l00387" name="l00387"></a><span class="lineno">  387</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00388" data-start="{" data-end="}">
<div class="line"><a id="l00388" name="l00388"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#ae5b5afca8aa70c69f07360eecd7171bc">  388</a></span>EZ_FORCE_INLINE T&amp; <a class="code hl_function" href="../../dc/d59/classez_array_base.htm#ae5b5afca8aa70c69f07360eecd7171bc">ezArrayBase&lt;T, Derived&gt;::PeekBack</a>()</div>
<div class="line"><a id="l00389" name="l00389"></a><span class="lineno">  389</span>{</div>
<div class="line"><a id="l00390" name="l00390"></a><span class="lineno">  390</span>  EZ_ASSERT_DEBUG(m_uiCount &gt; 0, <span class="stringliteral">&quot;Out of bounds access. Trying to peek into an empty array.&quot;</span>);</div>
<div class="line"><a id="l00391" name="l00391"></a><span class="lineno">  391</span>  <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr()[m_uiCount - 1];</div>
<div class="line"><a id="l00392" name="l00392"></a><span class="lineno">  392</span>}</div>
</div>
<div class="line"><a id="l00393" name="l00393"></a><span class="lineno">  393</span> </div>
<div class="line"><a id="l00394" name="l00394"></a><span class="lineno">  394</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00395" data-start="{" data-end="}">
<div class="line"><a id="l00395" name="l00395"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#a3eb031c276e814889dce6b7bd5e398ff">  395</a></span>EZ_FORCE_INLINE <span class="keyword">const</span> T&amp; <a class="code hl_function" href="../../dc/d59/classez_array_base.htm#ae5b5afca8aa70c69f07360eecd7171bc">ezArrayBase&lt;T, Derived&gt;::PeekBack</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00396" name="l00396"></a><span class="lineno">  396</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00397" name="l00397"></a><span class="lineno">  397</span>  EZ_ASSERT_DEBUG(m_uiCount &gt; 0, <span class="stringliteral">&quot;Out of bounds access. Trying to peek into an empty array.&quot;</span>);</div>
<div class="line"><a id="l00398" name="l00398"></a><span class="lineno">  398</span>  <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><span class="keyword">const </span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr()[m_uiCount - 1];</div>
<div class="line"><a id="l00399" name="l00399"></a><span class="lineno">  399</span>}</div>
</div>
<div class="line"><a id="l00400" name="l00400"></a><span class="lineno">  400</span> </div>
<div class="line"><a id="l00401" name="l00401"></a><span class="lineno">  401</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a id="l00402" name="l00402"></a><span class="lineno">  402</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Comparer&gt;</div>
<div class="foldopen" id="foldopen00403" data-start="{" data-end="}">
<div class="line"><a id="l00403" name="l00403"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#a318047b04f505092c25d6c115ec5f72c">  403</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../dc/d59/classez_array_base.htm#ae111f173c0e5c067d7b5fae92e755c25">ezArrayBase&lt;T, Derived&gt;::Sort</a>(<span class="keyword">const</span> Comparer&amp; comparer)</div>
<div class="line"><a id="l00404" name="l00404"></a><span class="lineno">  404</span>{</div>
<div class="line"><a id="l00405" name="l00405"></a><span class="lineno">  405</span>  <span class="keywordflow">if</span> (m_uiCount &gt; 1)</div>
<div class="line"><a id="l00406" name="l00406"></a><span class="lineno">  406</span>  {</div>
<div class="line"><a id="l00407" name="l00407"></a><span class="lineno">  407</span>    <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;T&gt;</a> ar = *<span class="keyword">this</span>;</div>
<div class="line"><a id="l00408" name="l00408"></a><span class="lineno">  408</span>    <a class="code hl_function" href="../../d5/d95/classez_sorting.htm#a3663e52430292736a1f756b9a56a460a">ezSorting::QuickSort</a>(ar, comparer);</div>
<div class="line"><a id="l00409" name="l00409"></a><span class="lineno">  409</span>  }</div>
<div class="line"><a id="l00410" name="l00410"></a><span class="lineno">  410</span>}</div>
</div>
<div class="line"><a id="l00411" name="l00411"></a><span class="lineno">  411</span> </div>
<div class="line"><a id="l00412" name="l00412"></a><span class="lineno">  412</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00413" data-start="{" data-end="}">
<div class="line"><a id="l00413" name="l00413"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#ae111f173c0e5c067d7b5fae92e755c25">  413</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="../../dc/d59/classez_array_base.htm#ae111f173c0e5c067d7b5fae92e755c25">ezArrayBase&lt;T, Derived&gt;::Sort</a>()</div>
<div class="line"><a id="l00414" name="l00414"></a><span class="lineno">  414</span>{</div>
<div class="line"><a id="l00415" name="l00415"></a><span class="lineno">  415</span>  <span class="keywordflow">if</span> (m_uiCount &gt; 1)</div>
<div class="line"><a id="l00416" name="l00416"></a><span class="lineno">  416</span>  {</div>
<div class="line"><a id="l00417" name="l00417"></a><span class="lineno">  417</span>    <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;T&gt;</a> ar = *<span class="keyword">this</span>;</div>
<div class="line"><a id="l00418" name="l00418"></a><span class="lineno">  418</span>    <a class="code hl_function" href="../../d5/d95/classez_sorting.htm#a3663e52430292736a1f756b9a56a460a">ezSorting::QuickSort</a>(ar, <a class="code hl_struct" href="../../df/d11/structez_compare_helper.htm">ezCompareHelper&lt;T&gt;</a>());</div>
<div class="line"><a id="l00419" name="l00419"></a><span class="lineno">  419</span>  }</div>
<div class="line"><a id="l00420" name="l00420"></a><span class="lineno">  420</span>}</div>
</div>
<div class="line"><a id="l00421" name="l00421"></a><span class="lineno">  421</span> </div>
<div class="line"><a id="l00422" name="l00422"></a><span class="lineno">  422</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00423" data-start="{" data-end="}">
<div class="line"><a id="l00423" name="l00423"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#a170f421d9abdce1695e55b84212c59b0">  423</a></span>EZ_ALWAYS_INLINE T* <a class="code hl_function" href="../../dc/d59/classez_array_base.htm#a170f421d9abdce1695e55b84212c59b0">ezArrayBase&lt;T, Derived&gt;::GetData</a>()</div>
<div class="line"><a id="l00424" name="l00424"></a><span class="lineno">  424</span>{</div>
<div class="line"><a id="l00425" name="l00425"></a><span class="lineno">  425</span>  <span class="keywordflow">if</span> (IsEmpty())</div>
<div class="line"><a id="l00426" name="l00426"></a><span class="lineno">  426</span>    <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div>
<div class="line"><a id="l00427" name="l00427"></a><span class="lineno">  427</span> </div>
<div class="line"><a id="l00428" name="l00428"></a><span class="lineno">  428</span>  <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr();</div>
<div class="line"><a id="l00429" name="l00429"></a><span class="lineno">  429</span>}</div>
</div>
<div class="line"><a id="l00430" name="l00430"></a><span class="lineno">  430</span> </div>
<div class="line"><a id="l00431" name="l00431"></a><span class="lineno">  431</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00432" data-start="{" data-end="}">
<div class="line"><a id="l00432" name="l00432"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#ac2501c98f4cb3feeb4c0dbb688977274">  432</a></span>EZ_ALWAYS_INLINE <span class="keyword">const</span> T* <a class="code hl_function" href="../../dc/d59/classez_array_base.htm#a170f421d9abdce1695e55b84212c59b0">ezArrayBase&lt;T, Derived&gt;::GetData</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00433" name="l00433"></a><span class="lineno">  433</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00434" name="l00434"></a><span class="lineno">  434</span>  <span class="keywordflow">if</span> (IsEmpty())</div>
<div class="line"><a id="l00435" name="l00435"></a><span class="lineno">  435</span>    <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div>
<div class="line"><a id="l00436" name="l00436"></a><span class="lineno">  436</span> </div>
<div class="line"><a id="l00437" name="l00437"></a><span class="lineno">  437</span>  <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><span class="keyword">const </span>Derived*<span class="keyword">&gt;</span>(<span class="keyword">this</span>)-&gt;GetElementsPtr();</div>
<div class="line"><a id="l00438" name="l00438"></a><span class="lineno">  438</span>}</div>
</div>
<div class="line"><a id="l00439" name="l00439"></a><span class="lineno">  439</span> </div>
<div class="line"><a id="l00440" name="l00440"></a><span class="lineno">  440</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00441" data-start="{" data-end="}">
<div class="line"><a id="l00441" name="l00441"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#ad668df6ff81bdcac0bc118666d5817cf">  441</a></span>EZ_ALWAYS_INLINE <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;T&gt;</a> <a class="code hl_function" href="../../dc/d59/classez_array_base.htm#ad668df6ff81bdcac0bc118666d5817cf">ezArrayBase&lt;T, Derived&gt;::GetArrayPtr</a>()</div>
<div class="line"><a id="l00442" name="l00442"></a><span class="lineno">  442</span>{</div>
<div class="line"><a id="l00443" name="l00443"></a><span class="lineno">  443</span>  <span class="keywordflow">return</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;T&gt;</a>(GetData(), GetCount());</div>
<div class="line"><a id="l00444" name="l00444"></a><span class="lineno">  444</span>}</div>
</div>
<div class="line"><a id="l00445" name="l00445"></a><span class="lineno">  445</span> </div>
<div class="line"><a id="l00446" name="l00446"></a><span class="lineno">  446</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00447" data-start="{" data-end="}">
<div class="line"><a id="l00447" name="l00447"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#af264c6192b46155871e4c5e85c9c1114">  447</a></span>EZ_ALWAYS_INLINE <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const T&gt;</a> <a class="code hl_function" href="../../dc/d59/classez_array_base.htm#ad668df6ff81bdcac0bc118666d5817cf">ezArrayBase&lt;T, Derived&gt;::GetArrayPtr</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00448" name="l00448"></a><span class="lineno">  448</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00449" name="l00449"></a><span class="lineno">  449</span>  <span class="keywordflow">return</span> <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;const T&gt;</a>(GetData(), GetCount());</div>
<div class="line"><a id="l00450" name="l00450"></a><span class="lineno">  450</span>}</div>
</div>
<div class="line"><a id="l00451" name="l00451"></a><span class="lineno">  451</span> </div>
<div class="line"><a id="l00452" name="l00452"></a><span class="lineno">  452</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00453" data-start="{" data-end="}">
<div class="line"><a id="l00453" name="l00453"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#a05b276d26b66885700fc8f36dd8efc50">  453</a></span>EZ_ALWAYS_INLINE <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;typename ezArrayPtr&lt;T&gt;::ByteType</a>&gt; <a class="code hl_function" href="../../dc/d59/classez_array_base.htm#a05b276d26b66885700fc8f36dd8efc50">ezArrayBase&lt;T, Derived&gt;::GetByteArrayPtr</a>()</div>
<div class="line"><a id="l00454" name="l00454"></a><span class="lineno">  454</span>{</div>
<div class="line"><a id="l00455" name="l00455"></a><span class="lineno">  455</span>  <span class="keywordflow">return</span> GetArrayPtr().<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a269689cbd5471d18dc7b23d450701a10">ToByteArray</a>();</div>
<div class="line"><a id="l00456" name="l00456"></a><span class="lineno">  456</span>}</div>
</div>
<div class="line"><a id="l00457" name="l00457"></a><span class="lineno">  457</span> </div>
<div class="line"><a id="l00458" name="l00458"></a><span class="lineno">  458</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="foldopen" id="foldopen00459" data-start="{" data-end="}">
<div class="line"><a id="l00459" name="l00459"></a><span class="lineno"><a class="line" href="../../dc/d59/classez_array_base.htm#a88dd290606aab5e0382d469241ab0c17">  459</a></span>EZ_ALWAYS_INLINE <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;typename ezArrayPtr&lt;const T&gt;::ByteType</a>&gt; <a class="code hl_function" href="../../dc/d59/classez_array_base.htm#a05b276d26b66885700fc8f36dd8efc50">ezArrayBase&lt;T, Derived&gt;::GetByteArrayPtr</a>()<span class="keyword"> const</span></div>
<div class="line"><a id="l00460" name="l00460"></a><span class="lineno">  460</span><span class="keyword"></span>{</div>
<div class="line"><a id="l00461" name="l00461"></a><span class="lineno">  461</span>  <span class="keywordflow">return</span> GetArrayPtr().<a class="code hl_function" href="../../dc/dae/classez_array_ptr.htm#a269689cbd5471d18dc7b23d450701a10">ToByteArray</a>();</div>
<div class="line"><a id="l00462" name="l00462"></a><span class="lineno">  462</span>}</div>
</div>
</div>
<div class="line"><a id="l00463" name="l00463"></a><span class="lineno">  463</span> </div>
<div class="line"><a id="l00464" name="l00464"></a><span class="lineno">  464</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span> Derived&gt;</div>
<div class="line"><a id="l00465" name="l00465"></a><span class="lineno">  465</span><span class="keywordtype">void</span> <a class="code hl_class" href="../../dc/d59/classez_array_base.htm">ezArrayBase&lt;T, Derived&gt;::DoSwap</a>(<a class="code hl_class" href="../../dc/d59/classez_array_base.htm">ezArrayBase&lt;T, Derived&gt;</a>&amp; other)</div>
<div class="line"><a id="l00466" name="l00466"></a><span class="lineno">  466</span>{</div>
<div class="line"><a id="l00467" name="l00467"></a><span class="lineno">  467</span>  <a class="code hl_function" href="../../db/d78/namespaceez_math.htm#a0cd624055a97c96719b925cb11e6a08e">ezMath::Swap</a>(this-&gt;m_pElements, other.<a class="code hl_variable" href="../../dc/d59/classez_array_base.htm#a11fdadf058dc71d62867f690b832f5f2">m_pElements</a>);</div>
<div class="line"><a id="l00468" name="l00468"></a><span class="lineno">  468</span>  <a class="code hl_function" href="../../db/d78/namespaceez_math.htm#a0cd624055a97c96719b925cb11e6a08e">ezMath::Swap</a>(this-&gt;m_uiCapacity, other.<a class="code hl_variable" href="../../dc/d59/classez_array_base.htm#aab4e32e79a0c17b99c3555d6ae8d0542">m_uiCapacity</a>);</div>
<div class="line"><a id="l00469" name="l00469"></a><span class="lineno">  469</span>  <a class="code hl_function" href="../../db/d78/namespaceez_math.htm#a0cd624055a97c96719b925cb11e6a08e">ezMath::Swap</a>(this-&gt;m_uiCount, other.<a class="code hl_variable" href="../../dc/d59/classez_array_base.htm#a1d6fd346fa2effc9fe7a5617f616ac82">m_uiCount</a>);</div>
<div class="line"><a id="l00470" name="l00470"></a><span class="lineno">  470</span>}</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div class="ttc" id="aclassez_array_base_htm"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm">ezArrayBase</a></div><div class="ttdoc">Base class for all array containers. Implements all the basic functionality that only requires a poin...</div><div class="ttdef"><b>Definition</b> ArrayBase.h:19</div></div>
<div class="ttc" id="aclassez_array_base_htm_a05b276d26b66885700fc8f36dd8efc50"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a05b276d26b66885700fc8f36dd8efc50">ezArrayBase::GetByteArrayPtr</a></div><div class="ttdeci">ezArrayPtr&lt; typename ezArrayPtr&lt; T &gt;::ByteType &gt; GetByteArrayPtr()</div><div class="ttdoc">Returns a byte array pointer to the array data, or an empty array pointer if the array is empty.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:453</div></div>
<div class="ttc" id="aclassez_array_base_htm_a0f03847a20991108666c982066d651bc"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a0f03847a20991108666c982066d651bc">ezArrayBase::ezArrayBase</a></div><div class="ttdeci">ezArrayBase()</div><div class="ttdoc">Constructor.</div></div>
<div class="ttc" id="aclassez_array_base_htm_a0f0562f5239ac1e43a81764086de2e25"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a0f0562f5239ac1e43a81764086de2e25">ezArrayBase::ExpandAndGetRef</a></div><div class="ttdeci">T &amp; ExpandAndGetRef()</div><div class="ttdoc">Grows the array by one element and returns a reference to the newly created element.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:310</div></div>
<div class="ttc" id="aclassez_array_base_htm_a11fdadf058dc71d62867f690b832f5f2"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a11fdadf058dc71d62867f690b832f5f2">ezArrayBase::m_pElements</a></div><div class="ttdeci">T * m_pElements</div><div class="ttdoc">Element-type access to m_Data.</div><div class="ttdef"><b>Definition</b> ArrayBase.h:200</div></div>
<div class="ttc" id="aclassez_array_base_htm_a170f421d9abdce1695e55b84212c59b0"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a170f421d9abdce1695e55b84212c59b0">ezArrayBase::GetData</a></div><div class="ttdeci">T * GetData()</div><div class="ttdoc">Returns a pointer to the array data, or nullptr if the array is empty.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:423</div></div>
<div class="ttc" id="aclassez_array_base_htm_a1d6fd346fa2effc9fe7a5617f616ac82"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a1d6fd346fa2effc9fe7a5617f616ac82">ezArrayBase::m_uiCount</a></div><div class="ttdeci">ezUInt32 m_uiCount</div><div class="ttdoc">The number of elements used from the array.</div><div class="ttdef"><b>Definition</b> ArrayBase.h:203</div></div>
<div class="ttc" id="aclassez_array_base_htm_a29dfedb3f609d9a698f9becb213b697c"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a29dfedb3f609d9a698f9becb213b697c">ezArrayBase::RemoveAtAndCopy</a></div><div class="ttdeci">void RemoveAtAndCopy(ezUInt32 uiIndex, ezUInt32 uiNumElements=1)</div><div class="ttdoc">Removes the element at index and fills the gap by shifting all following elements.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:253</div></div>
<div class="ttc" id="aclassez_array_base_htm_a35630a870ec53cf3b022653232a31c60"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a35630a870ec53cf3b022653232a31c60">ezArrayBase::IsEmpty</a></div><div class="ttdeci">bool IsEmpty() const</div><div class="ttdoc">Returns true, if the array does not contain any elements.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:178</div></div>
<div class="ttc" id="aclassez_array_base_htm_a394c5310d1f8bc5907014761f72a4884"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a394c5310d1f8bc5907014761f72a4884">ezArrayBase::LastIndexOf</a></div><div class="ttdeci">ezUInt32 LastIndexOf(const T &amp;value, ezUInt32 uiStartIndex=ezInvalidIndex) const</div><div class="ttdoc">Searches for the last occurrence of the given value and returns its index or ezInvalidIndex if not fo...</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:297</div></div>
<div class="ttc" id="aclassez_array_base_htm_a51ba61fcbd2350ae8850754a41acbaa1"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a51ba61fcbd2350ae8850754a41acbaa1">ezArrayBase::GetCount</a></div><div class="ttdeci">ezUInt32 GetCount() const</div><div class="ttdoc">Returns the number of active elements in the array.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:172</div></div>
<div class="ttc" id="aclassez_array_base_htm_a581b2d3a780af145c7f6333655807711"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a581b2d3a780af145c7f6333655807711">ezArrayBase::InsertRangeAt</a></div><div class="ttdeci">void InsertRangeAt(ezUInt32 uiIndex, const ezArrayPtr&lt; const T &gt; &amp;range)</div><div class="ttdoc">Inserts all elements in the range starting at the given index, shifting the elements after the index.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:219</div></div>
<div class="ttc" id="aclassez_array_base_htm_a5e4ed197f4dc1545fddef9e031fe0226"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a5e4ed197f4dc1545fddef9e031fe0226">ezArrayBase::ExpandBy</a></div><div class="ttdeci">T * ExpandBy(ezUInt32 uiNumNewItems)</div><div class="ttdoc">Expands the array by N new items and returns a pointer to the first new one.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:326</div></div>
<div class="ttc" id="aclassez_array_base_htm_a6da9ac91524c489b32ed8e390c52b402"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a6da9ac91524c489b32ed8e390c52b402">ezArrayBase::operator=</a></div><div class="ttdeci">void operator=(const ezArrayPtr&lt; const T &gt; &amp;rhs)</div><div class="ttdoc">Copies the data from some other contiguous array into this one.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:13</div></div>
<div class="ttc" id="aclassez_array_base_htm_a6db54827aba606bd753936dd0becbd54"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a6db54827aba606bd753936dd0becbd54">ezArrayBase::PushBackUnchecked</a></div><div class="ttdeci">void PushBackUnchecked(const T &amp;value)</div><div class="ttdoc">Pushes value at the end of the array. Does NOT ensure capacity.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:351</div></div>
<div class="ttc" id="aclassez_array_base_htm_a74099c2d7681df345aedf8cfe24f0bc4"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a74099c2d7681df345aedf8cfe24f0bc4">ezArrayBase::Clear</a></div><div class="ttdeci">void Clear()</div><div class="ttdoc">Clears the array.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:184</div></div>
<div class="ttc" id="aclassez_array_base_htm_a78392f27dfa795763aebdb43e4a75289"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a78392f27dfa795763aebdb43e4a75289">ezArrayBase::Contains</a></div><div class="ttdeci">bool Contains(const T &amp;value) const</div><div class="ttdoc">Checks whether the given value can be found in the array. O(n) complexity.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:191</div></div>
<div class="ttc" id="aclassez_array_base_htm_a8001e2991c2675e975efca088795fa6a"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#a8001e2991c2675e975efca088795fa6a">ezArrayBase::~ezArrayBase</a></div><div class="ttdeci">~ezArrayBase()</div><div class="ttdoc">Destructor.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:6</div></div>
<div class="ttc" id="aclassez_array_base_htm_aa42fdcea580029c35b32658bd6d9fd50"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#aa42fdcea580029c35b32658bd6d9fd50">ezArrayBase::SetCountUninitialized</a></div><div class="ttdeci">void SetCountUninitialized(ezUInt32 uiCount)</div><div class="ttdoc">Resizes the array to have exactly uiCount elements. Extra elements might be uninitialized.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:155</div></div>
<div class="ttc" id="aclassez_array_base_htm_aa48856c14d2870761e22ac1e000c32fd"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#aa48856c14d2870761e22ac1e000c32fd">ezArrayBase::PopBack</a></div><div class="ttdeci">void PopBack(ezUInt32 uiCountToRemove=1)</div><div class="ttdoc">Removes count elements from the end of the array.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:379</div></div>
<div class="ttc" id="aclassez_array_base_htm_aab4e32e79a0c17b99c3555d6ae8d0542"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#aab4e32e79a0c17b99c3555d6ae8d0542">ezArrayBase::m_uiCapacity</a></div><div class="ttdeci">ezUInt32 m_uiCapacity</div><div class="ttdoc">The number of elements which can be stored in the array without re-allocating.</div><div class="ttdef"><b>Definition</b> ArrayBase.h:206</div></div>
<div class="ttc" id="aclassez_array_base_htm_aacea05b6f0ec519a663156dd0cc82309"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#aacea05b6f0ec519a663156dd0cc82309">ezArrayBase::RemoveAndSwap</a></div><div class="ttdeci">bool RemoveAndSwap(const T &amp;value)</div><div class="ttdoc">Removes the first occurrence of value and fills the gap by swapping in the last element.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:241</div></div>
<div class="ttc" id="aclassez_array_base_htm_ab56eb09097a99c105cb05eb8a6fb59f4"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#ab56eb09097a99c105cb05eb8a6fb59f4">ezArrayBase::operator&lt;</a></div><div class="ttdeci">bool operator&lt;(const ezArrayBase&lt; T, Derived &gt; &amp;rhs) const</div><div class="ttdoc">Compares this array to another contiguous array type.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:69</div></div>
<div class="ttc" id="aclassez_array_base_htm_abad0e3ab22424c246c7d9125d2e57d31"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#abad0e3ab22424c246c7d9125d2e57d31">ezArrayBase::operator==</a></div><div class="ttdeci">bool operator==(const ezArrayBase&lt; T, Derived &gt; &amp;rhs) const</div><div class="ttdoc">Compares this array to another contiguous array type.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:60</div></div>
<div class="ttc" id="aclassez_array_base_htm_abc510e19e3e30cab9c5c7310ef5ffd68"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#abc510e19e3e30cab9c5c7310ef5ffd68">ezArrayBase::operator[]</a></div><div class="ttdeci">const T &amp; operator[](ezUInt32 uiIndex) const</div><div class="ttdoc">Returns the element at the given index. Does bounds checks in debug builds.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:92</div></div>
<div class="ttc" id="aclassez_array_base_htm_abc514bdf8b2de7b5b220ffdbd862e830"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#abc514bdf8b2de7b5b220ffdbd862e830">ezArrayBase::PushBack</a></div><div class="ttdeci">void PushBack(const T &amp;value)</div><div class="ttdoc">Pushes value at the end of the array.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:333</div></div>
<div class="ttc" id="aclassez_array_base_htm_ac6223c492c021ef85253fb486dfd6434"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#ac6223c492c021ef85253fb486dfd6434">ezArrayBase::PushBackRange</a></div><div class="ttdeci">void PushBackRange(const ezArrayPtr&lt; const T &gt; &amp;range)</div><div class="ttdoc">Pushes all elements in range at the end of the array. Increases the capacity if necessary.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:369</div></div>
<div class="ttc" id="aclassez_array_base_htm_acb1665da46f44fab7a676561cc1d611c"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#acb1665da46f44fab7a676561cc1d611c">ezArrayBase::SetCount</a></div><div class="ttdeci">void SetCount(ezUInt32 uiCount)</div><div class="ttdoc">Resizes the array to have exactly uiCount elements. Default constructs extra elements if the array is...</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:106</div></div>
<div class="ttc" id="aclassez_array_base_htm_ad0b2297aad995f6b5b6c83318f1deec4"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#ad0b2297aad995f6b5b6c83318f1deec4">ezArrayBase::IndexOf</a></div><div class="ttdeci">ezUInt32 IndexOf(const T &amp;value, ezUInt32 uiStartIndex=0) const</div><div class="ttdoc">Searches for the first occurrence of the given value and returns its index or ezInvalidIndex if not f...</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:284</div></div>
<div class="ttc" id="aclassez_array_base_htm_ad668df6ff81bdcac0bc118666d5817cf"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#ad668df6ff81bdcac0bc118666d5817cf">ezArrayBase::GetArrayPtr</a></div><div class="ttdeci">ezArrayPtr&lt; T &gt; GetArrayPtr()</div><div class="ttdoc">Returns an array pointer to the array data, or an empty array pointer if the array is empty.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:441</div></div>
<div class="ttc" id="aclassez_array_base_htm_ad74465b5a0c6474b1611bbb462f635ef"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#ad74465b5a0c6474b1611bbb462f635ef">ezArrayBase::EnsureCount</a></div><div class="ttdeci">void EnsureCount(ezUInt32 uiCount)</div><div class="ttdoc">Ensures the container has at least uiCount elements. Ie. calls SetCount() if the container has fewer ...</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:144</div></div>
<div class="ttc" id="aclassez_array_base_htm_ae111f173c0e5c067d7b5fae92e755c25"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#ae111f173c0e5c067d7b5fae92e755c25">ezArrayBase::Sort</a></div><div class="ttdeci">void Sort()</div><div class="ttdoc">Sort with default comparer.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:413</div></div>
<div class="ttc" id="aclassez_array_base_htm_ae29e85a3ce212cb78d31d032b4225f28"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#ae29e85a3ce212cb78d31d032b4225f28">ezArrayBase::RemoveAtAndSwap</a></div><div class="ttdeci">void RemoveAtAndSwap(ezUInt32 uiIndex, ezUInt32 uiNumElements=1)</div><div class="ttdoc">Removes the element at index and fills the gap by swapping in the last element.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:264</div></div>
<div class="ttc" id="aclassez_array_base_htm_ae5b5afca8aa70c69f07360eecd7171bc"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#ae5b5afca8aa70c69f07360eecd7171bc">ezArrayBase::PeekBack</a></div><div class="ttdeci">T &amp; PeekBack()</div><div class="ttdoc">Returns the last element of the array.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:388</div></div>
<div class="ttc" id="aclassez_array_base_htm_af19f26ca6dc39c04caad024913a2f2ec"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#af19f26ca6dc39c04caad024913a2f2ec">ezArrayBase::RemoveAndCopy</a></div><div class="ttdeci">bool RemoveAndCopy(const T &amp;value)</div><div class="ttdoc">Removes the first occurrence of value and fills the gap by shifting all following elements.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:229</div></div>
<div class="ttc" id="aclassez_array_base_htm_afabace0a2eabdf350c81203eed1c7984"><div class="ttname"><a href="../../dc/d59/classez_array_base.htm#afabace0a2eabdf350c81203eed1c7984">ezArrayBase::InsertAt</a></div><div class="ttdeci">void InsertAt(ezUInt32 uiIndex, const T &amp;value)</div><div class="ttdoc">Inserts value at index by shifting all following elements.</div><div class="ttdef"><b>Definition</b> ArrayBase_inl.h:197</div></div>
<div class="ttc" id="aclassez_array_ptr_htm"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a></div><div class="ttdoc">This class encapsulates an array and it's size. It is recommended to use this class instead of plain ...</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:41</div></div>
<div class="ttc" id="aclassez_array_ptr_htm_a269689cbd5471d18dc7b23d450701a10"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm#a269689cbd5471d18dc7b23d450701a10">ezArrayPtr::ToByteArray</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezArrayPtr&lt; const ByteType &gt; ToByteArray() const</div><div class="ttdoc">Reinterprets this array as a byte array.</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:198</div></div>
<div class="ttc" id="aclassez_array_ptr_htm_a9f222695f57e4cf200e07135dbbd7edd"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm#a9f222695f57e4cf200e07135dbbd7edd">ezArrayPtr::GetCount</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezUInt32 GetCount() const</div><div class="ttdoc">Returns the number of elements in the array.</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:175</div></div>
<div class="ttc" id="aclassez_array_ptr_htm_aba4e7585190f337c6428f2fe25828b8a"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm#aba4e7585190f337c6428f2fe25828b8a">ezArrayPtr::GetPtr</a></div><div class="ttdeci">EZ_ALWAYS_INLINE PointerType GetPtr() const</div><div class="ttdoc">Returns the pointer to the array.</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:151</div></div>
<div class="ttc" id="aclassez_memory_utils_htm_a4c12c5af647ec366b7a99b15cca9386b"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm#a4c12c5af647ec366b7a99b15cca9386b">ezMemoryUtils::CopyConstructArray</a></div><div class="ttdeci">static void CopyConstructArray(T *pDestination, const T *pSource, size_t uiCount)</div><div class="ttdoc">Constructs uiCount objects of type T in a raw buffer at pDestination from an existing array of object...</div></div>
<div class="ttc" id="aclassez_memory_utils_htm_a744d60b4b000c61f2dd3819a12410595"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm#a744d60b4b000c61f2dd3819a12410595">ezMemoryUtils::IsEqual</a></div><div class="ttdeci">static bool IsEqual(const T *a, const T *b, size_t uiCount=1)</div><div class="ttdoc">Tests if objects of type T from pSource and pDestination are equal.</div></div>
<div class="ttc" id="aclassez_memory_utils_htm_a87c41811a95fa63da651f6779931d9cf"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm#a87c41811a95fa63da651f6779931d9cf">ezMemoryUtils::Copy</a></div><div class="ttdeci">static void Copy(T *pDestination, const T *pSource, size_t uiCount=1)</div><div class="ttdoc">Copies objects of type T from pSource to pDestination.</div></div>
<div class="ttc" id="aclassez_memory_utils_htm_a9a615b84872b968b7f8523c6f7b0a25b"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm#a9a615b84872b968b7f8523c6f7b0a25b">ezMemoryUtils::CopyConstruct</a></div><div class="ttdeci">static void CopyConstruct(Destination *pDestination, const Source &amp;copy, size_t uiCount=1)</div><div class="ttdoc">Constructs uiCount objects of type T in a raw buffer at pDestination, by creating uiCount copies of c...</div></div>
<div class="ttc" id="aclassez_memory_utils_htm_a9fd0a49960e146262101081c5ae0feeb"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm#a9fd0a49960e146262101081c5ae0feeb">ezMemoryUtils::Prepend</a></div><div class="ttdeci">static void Prepend(T *pDestination, const T &amp;source, size_t uiCount)</div><div class="ttdoc">Moves uiCount objects in pDestination by one object and copies source to the free space.</div></div>
<div class="ttc" id="aclassez_memory_utils_htm_ab83313c90ad3022c34e7d71c5d1a3fbd"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm#ab83313c90ad3022c34e7d71c5d1a3fbd">ezMemoryUtils::RelocateOverlapped</a></div><div class="ttdeci">static void RelocateOverlapped(T *pDestination, T *pSource, size_t uiCount=1)</div><div class="ttdoc">Moves objects of type T from pSource to pDestination.</div></div>
<div class="ttc" id="aclassez_memory_utils_htm_add65b87c39dade4ee7b0671c16b10a39"><div class="ttname"><a href="../../dc/d4d/classez_memory_utils.htm#add65b87c39dade4ee7b0671c16b10a39">ezMemoryUtils::Destruct</a></div><div class="ttdeci">static void Destruct(T *pDestination, size_t uiCount=1)</div><div class="ttdoc">Destructs uiCount objects of type T at pDestination.</div></div>
<div class="ttc" id="aclassez_sorting_htm_a3663e52430292736a1f756b9a56a460a"><div class="ttname"><a href="../../d5/d95/classez_sorting.htm#a3663e52430292736a1f756b9a56a460a">ezSorting::QuickSort</a></div><div class="ttdeci">static void QuickSort(Container &amp;inout_container, const Comparer &amp;comparer=Comparer())</div><div class="ttdoc">Sorts the elements in container using a in-place quick sort implementation (not stable).</div><div class="ttdef"><b>Definition</b> Sorting_inl.h:3</div></div>
<div class="ttc" id="anamespaceez_math_htm_a0cd624055a97c96719b925cb11e6a08e"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a0cd624055a97c96719b925cb11e6a08e">ezMath::Swap</a></div><div class="ttdeci">EZ_ALWAYS_INLINE void Swap(T &amp;ref_f1, T &amp;ref_f2)</div><div class="ttdoc">Swaps the values in the two variables f1 and f2.</div><div class="ttdef"><b>Definition</b> Math_inl.h:224</div></div>
<div class="ttc" id="anamespaceez_math_htm_ad8009b4da9cb427658d71e30576f209e"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#ad8009b4da9cb427658d71e30576f209e">ezMath::Min</a></div><div class="ttdeci">constexpr EZ_ALWAYS_INLINE T Min(T f1, T f2)</div><div class="ttdoc">Returns the smaller value, f1 or f2.</div><div class="ttdef"><b>Definition</b> Math_inl.h:27</div></div>
<div class="ttc" id="astructez_compare_helper_htm"><div class="ttname"><a href="../../df/d11/structez_compare_helper.htm">ezCompareHelper</a></div><div class="ttdoc">A comparer object is used in sorting algorithms to compare to objects of the same type.</div><div class="ttdef"><b>Definition</b> Comparer.h:7</div></div>
<div class="ttc" id="astructez_is_pod_type_htm"><div class="ttname"><a href="../../dc/dbe/structez_is_pod_type.htm">ezIsPodType</a></div><div class="ttdoc">If there is an % operator which takes a TypeIsPod and returns a CompileTimeTrueType T is Pod....</div><div class="ttdef"><b>Definition</b> TypeTraits.h:43</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_6b567e6755824bd0b8ffd754b9d67ac0.htm">Containers</a></li><li class="navelem"><a class="el" href="../../dir_ab7c7fd106dde24a64865a60f78fe0d2.htm">Implementation</a></li><li class="navelem"><b>ArrayBase_inl.h</b></li>
    <li class="footer">Generated on Fri Jul 11 2025 12:17:44 for ezEngine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
