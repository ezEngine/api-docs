<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Threading/Implementation/Posix/AtomicUtils_posix.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 21.10</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d0/d71/_atomic_utils__posix_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">AtomicUtils_posix.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#ifdef EZ_ATOMICUTLS_POSIX_INL_H_INCLUDED</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#  error &quot;This file must not be included twice.&quot;</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160; </div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#define EZ_ATOMICUTLS_POSIX_INL_H_INCLUDED</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160; </div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160; </div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;Foundation/Math/Math.h&gt;</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160; </div>
<div class="line"><a name="l00010"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#aec1d674775ca50135c4f4f8038bcf4c3">   10</a></span>&#160;EZ_ALWAYS_INLINE ezInt32 <a class="code" href="../../d6/d25/structez_atomic_utils.htm#aec1d674775ca50135c4f4f8038bcf4c3">ezAtomicUtils::Read</a>(<span class="keyword">volatile</span> <span class="keyword">const</span> ezInt32&amp; src)</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;{</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;  <span class="keywordflow">return</span> __sync_fetch_and_or(<span class="keyword">const_cast&lt;</span><span class="keyword">volatile </span>ezInt32*<span class="keyword">&gt;</span>(&amp;src), 0);</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;}</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160; </div>
<div class="line"><a name="l00015"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#a382bce8b1d87815c12a3f0b150ee692d">   15</a></span>&#160;EZ_ALWAYS_INLINE ezInt64 <a class="code" href="../../d6/d25/structez_atomic_utils.htm#aec1d674775ca50135c4f4f8038bcf4c3">ezAtomicUtils::Read</a>(<span class="keyword">volatile</span> <span class="keyword">const</span> ezInt64&amp; src)</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;{</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;  <span class="keywordflow">return</span> __sync_fetch_and_or_8(<span class="keyword">const_cast&lt;</span><span class="keyword">volatile </span>ezInt64*<span class="keyword">&gt;</span>(&amp;src), 0);</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;}</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160; </div>
<div class="line"><a name="l00020"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#afc253c06be30a9ddc29c0d69ea692f9d">   20</a></span>&#160;EZ_ALWAYS_INLINE ezInt32 <a class="code" href="../../d6/d25/structez_atomic_utils.htm#afc253c06be30a9ddc29c0d69ea692f9d">ezAtomicUtils::Increment</a>(<span class="keyword">volatile</span> ezInt32&amp; dest)</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;{</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;  <span class="keywordflow">return</span> __sync_add_and_fetch(&amp;dest, 1);</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;}</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160; </div>
<div class="line"><a name="l00025"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#a6ee4782239e850f1e01bc1e01298831e">   25</a></span>&#160;EZ_ALWAYS_INLINE ezInt64 <a class="code" href="../../d6/d25/structez_atomic_utils.htm#afc253c06be30a9ddc29c0d69ea692f9d">ezAtomicUtils::Increment</a>(<span class="keyword">volatile</span> ezInt64&amp; dest)</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;{</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;  <span class="keywordflow">return</span> __sync_add_and_fetch_8(&amp;dest, 1);</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;}</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160; </div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160; </div>
<div class="line"><a name="l00031"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#ad1f1c4485947b8c329906df8456430f6">   31</a></span>&#160;EZ_ALWAYS_INLINE ezInt32 <a class="code" href="../../d6/d25/structez_atomic_utils.htm#ad1f1c4485947b8c329906df8456430f6">ezAtomicUtils::Decrement</a>(<span class="keyword">volatile</span> ezInt32&amp; dest)</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;{</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;  <span class="keywordflow">return</span> __sync_sub_and_fetch(&amp;dest, 1);</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;}</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160; </div>
<div class="line"><a name="l00036"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#af8538baf4ab83cf00417bfeab2aee68b">   36</a></span>&#160;EZ_ALWAYS_INLINE ezInt64 <a class="code" href="../../d6/d25/structez_atomic_utils.htm#ad1f1c4485947b8c329906df8456430f6">ezAtomicUtils::Decrement</a>(<span class="keyword">volatile</span> ezInt64&amp; dest)</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;{</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  <span class="keywordflow">return</span> __sync_sub_and_fetch_8(&amp;dest, 1);</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;}</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160; </div>
<div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#a6ca2ff1cc8ce4f3c9696ae95b4b12307">   41</a></span>&#160;EZ_ALWAYS_INLINE ezInt32 <a class="code" href="../../d6/d25/structez_atomic_utils.htm#a6ca2ff1cc8ce4f3c9696ae95b4b12307">ezAtomicUtils::PostIncrement</a>(<span class="keyword">volatile</span> ezInt32&amp; dest)</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;{</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  <span class="keywordflow">return</span> __sync_fetch_and_add(&amp;dest, 1);</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;}</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160; </div>
<div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#a3ff4b98048a77b2a699d8b0888d69711">   46</a></span>&#160;EZ_ALWAYS_INLINE ezInt64 <a class="code" href="../../d6/d25/structez_atomic_utils.htm#a6ca2ff1cc8ce4f3c9696ae95b4b12307">ezAtomicUtils::PostIncrement</a>(<span class="keyword">volatile</span> ezInt64&amp; dest)</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;{</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;  <span class="keywordflow">return</span> __sync_fetch_and_add_8(&amp;dest, 1);</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;}</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160; </div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160; </div>
<div class="line"><a name="l00052"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#ad2bdfadaffc2c70937205fb89cc3bbd3">   52</a></span>&#160;EZ_ALWAYS_INLINE ezInt32 <a class="code" href="../../d6/d25/structez_atomic_utils.htm#ad2bdfadaffc2c70937205fb89cc3bbd3">ezAtomicUtils::PostDecrement</a>(<span class="keyword">volatile</span> ezInt32&amp; dest)</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;{</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;  <span class="keywordflow">return</span> __sync_fetch_and_sub(&amp;dest, 1);</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;}</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160; </div>
<div class="line"><a name="l00057"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#a5024e8eca2ad1abe1d82c08043a2f2e7">   57</a></span>&#160;EZ_ALWAYS_INLINE ezInt64 <a class="code" href="../../d6/d25/structez_atomic_utils.htm#ad2bdfadaffc2c70937205fb89cc3bbd3">ezAtomicUtils::PostDecrement</a>(<span class="keyword">volatile</span> ezInt64&amp; dest)</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;{</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;  <span class="keywordflow">return</span> __sync_fetch_and_sub_8(&amp;dest, 1);</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;}</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160; </div>
<div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#a1ca59d0420faaf5c89a499220f6efa82">   62</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d6/d25/structez_atomic_utils.htm#a1ca59d0420faaf5c89a499220f6efa82">ezAtomicUtils::Add</a>(<span class="keyword">volatile</span> ezInt32&amp; dest, ezInt32 value)</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;{</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  __sync_fetch_and_add(&amp;dest, value);</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;}</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160; </div>
<div class="line"><a name="l00067"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#a924d614843c2bf173136e2f703308457">   67</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d6/d25/structez_atomic_utils.htm#a1ca59d0420faaf5c89a499220f6efa82">ezAtomicUtils::Add</a>(<span class="keyword">volatile</span> ezInt64&amp; dest, ezInt64 value)</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;{</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;  __sync_fetch_and_add_8(&amp;dest, value);</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;}</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160; </div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160; </div>
<div class="line"><a name="l00073"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#af827472d139cd0301b90762c5936d741">   73</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d6/d25/structez_atomic_utils.htm#af827472d139cd0301b90762c5936d741">ezAtomicUtils::And</a>(<span class="keyword">volatile</span> ezInt32&amp; dest, ezInt32 value)</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;{</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;  __sync_fetch_and_and(&amp;dest, value);</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;}</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160; </div>
<div class="line"><a name="l00078"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#abdddf9ff34bcb35012835bff8fb80d90">   78</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d6/d25/structez_atomic_utils.htm#af827472d139cd0301b90762c5936d741">ezAtomicUtils::And</a>(<span class="keyword">volatile</span> ezInt64&amp; dest, ezInt64 value)</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;{</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;  __sync_fetch_and_and_8(&amp;dest, value);</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;}</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160; </div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160; </div>
<div class="line"><a name="l00084"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#ac391cc82b7a05900216a41f77a15c8c4">   84</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d6/d25/structez_atomic_utils.htm#ac391cc82b7a05900216a41f77a15c8c4">ezAtomicUtils::Or</a>(<span class="keyword">volatile</span> ezInt32&amp; dest, ezInt32 value)</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;{</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;  __sync_fetch_and_or(&amp;dest, value);</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;}</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160; </div>
<div class="line"><a name="l00089"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#a9dcfdc30b46133f7d4651d7e898848e6">   89</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d6/d25/structez_atomic_utils.htm#ac391cc82b7a05900216a41f77a15c8c4">ezAtomicUtils::Or</a>(<span class="keyword">volatile</span> ezInt64&amp; dest, ezInt64 value)</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;{</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  __sync_fetch_and_or_8(&amp;dest, value);</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;}</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160; </div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160; </div>
<div class="line"><a name="l00095"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#afe3578c201e6166a023a609e1d51bc6b">   95</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d6/d25/structez_atomic_utils.htm#afe3578c201e6166a023a609e1d51bc6b">ezAtomicUtils::Xor</a>(<span class="keyword">volatile</span> ezInt32&amp; dest, ezInt32 value)</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;{</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;  __sync_fetch_and_xor(&amp;dest, value);</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;}</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160; </div>
<div class="line"><a name="l00100"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#a68059590db56baaaff74a9f682397678">  100</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d6/d25/structez_atomic_utils.htm#afe3578c201e6166a023a609e1d51bc6b">ezAtomicUtils::Xor</a>(<span class="keyword">volatile</span> ezInt64&amp; dest, ezInt64 value)</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;{</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;  __sync_fetch_and_xor_8(&amp;dest, value);</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;}</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160; </div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160; </div>
<div class="line"><a name="l00106"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#aa4e7354485344ccdb2efa59cfde60701">  106</a></span>&#160;EZ_FORCE_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d6/d25/structez_atomic_utils.htm#aa4e7354485344ccdb2efa59cfde60701">ezAtomicUtils::Min</a>(<span class="keyword">volatile</span> ezInt32&amp; dest, ezInt32 value)</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;{</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;  <span class="comment">// tries to exchange dest with the new value as long as the oldValue is not what we expected</span></div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;  <span class="keywordflow">while</span> (<span class="keyword">true</span>)</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;  {</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;    ezInt32 iOldValue = dest;</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    ezInt32 iNewValue = <a class="code" href="../../db/d78/namespaceez_math.htm#ad8009b4da9cb427658d71e30576f209e">ezMath::Min</a>(iOldValue, value);</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160; </div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;    <span class="keywordflow">if</span> (__sync_bool_compare_and_swap(&amp;dest, iOldValue, iNewValue))</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;  }</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;}</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160; </div>
<div class="line"><a name="l00119"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#ade376f34dfa4e912c12795e804d1fcd9">  119</a></span>&#160;EZ_FORCE_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d6/d25/structez_atomic_utils.htm#aa4e7354485344ccdb2efa59cfde60701">ezAtomicUtils::Min</a>(<span class="keyword">volatile</span> ezInt64&amp; dest, ezInt64 value)</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;{</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;  <span class="comment">// tries to exchange dest with the new value as long as the oldValue is not what we expected</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;  <span class="keywordflow">while</span> (<span class="keyword">true</span>)</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;  {</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;    ezInt64 iOldValue = dest;</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;    ezInt64 iNewValue = <a class="code" href="../../db/d78/namespaceez_math.htm#ad8009b4da9cb427658d71e30576f209e">ezMath::Min</a>(iOldValue, value);</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160; </div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;    <span class="keywordflow">if</span> (__sync_bool_compare_and_swap_8(&amp;dest, iOldValue, iNewValue))</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;  }</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;}</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160; </div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160; </div>
<div class="line"><a name="l00133"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#ac1f56bbc48c7e97a0deb3211ac894c94">  133</a></span>&#160;EZ_FORCE_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d6/d25/structez_atomic_utils.htm#ac1f56bbc48c7e97a0deb3211ac894c94">ezAtomicUtils::Max</a>(<span class="keyword">volatile</span> ezInt32&amp; dest, ezInt32 value)</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;{</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;  <span class="comment">// tries to exchange dest with the new value as long as the oldValue is not what we expected</span></div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;  <span class="keywordflow">while</span> (<span class="keyword">true</span>)</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;  {</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;    ezInt32 iOldValue = dest;</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;    ezInt32 iNewValue = <a class="code" href="../../db/d78/namespaceez_math.htm#a6f7ee19d0f8e81ff6ae5f394075e3a56">ezMath::Max</a>(iOldValue, value);</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160; </div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;    <span class="keywordflow">if</span> (__sync_bool_compare_and_swap(&amp;dest, iOldValue, iNewValue))</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;  }</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;}</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160; </div>
<div class="line"><a name="l00146"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#a7089a0eb8e4115963b7919de6a2ddbd1">  146</a></span>&#160;EZ_FORCE_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d6/d25/structez_atomic_utils.htm#ac1f56bbc48c7e97a0deb3211ac894c94">ezAtomicUtils::Max</a>(<span class="keyword">volatile</span> ezInt64&amp; dest, ezInt64 value)</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;{</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;  <span class="comment">// tries to exchange dest with the new value as long as the oldValue is not what we expected</span></div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;  <span class="keywordflow">while</span> (<span class="keyword">true</span>)</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;  {</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;    ezInt64 iOldValue = dest;</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;    ezInt64 iNewValue = <a class="code" href="../../db/d78/namespaceez_math.htm#a6f7ee19d0f8e81ff6ae5f394075e3a56">ezMath::Max</a>(iOldValue, value);</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160; </div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;    <span class="keywordflow">if</span> (__sync_bool_compare_and_swap_8(&amp;dest, iOldValue, iNewValue))</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;      <span class="keywordflow">break</span>;</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;  }</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;}</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160; </div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160; </div>
<div class="line"><a name="l00160"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#a03e4af1722c6b4f4efad609943fa03cb">  160</a></span>&#160;EZ_ALWAYS_INLINE ezInt32 <a class="code" href="../../d6/d25/structez_atomic_utils.htm#a03e4af1722c6b4f4efad609943fa03cb">ezAtomicUtils::Set</a>(<span class="keyword">volatile</span> ezInt32&amp; dest, ezInt32 value)</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;{</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;  <span class="keywordflow">return</span> __sync_lock_test_and_set(&amp;dest, value);</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;}</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160; </div>
<div class="line"><a name="l00165"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#af34fdad5ac0634c6b67fe4ea9fab7a6e">  165</a></span>&#160;EZ_ALWAYS_INLINE ezInt64 <a class="code" href="../../d6/d25/structez_atomic_utils.htm#a03e4af1722c6b4f4efad609943fa03cb">ezAtomicUtils::Set</a>(<span class="keyword">volatile</span> ezInt64&amp; dest, ezInt64 value)</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;{</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;  <span class="keywordflow">return</span> __sync_lock_test_and_set_8(&amp;dest, value);</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;}</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160; </div>
<div class="line"><a name="l00170"></a><span class="lineno">  170</span>&#160; </div>
<div class="line"><a name="l00171"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#ab7a6f96e60750e484888fbf6a887b7b2">  171</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../d6/d25/structez_atomic_utils.htm#ab7a6f96e60750e484888fbf6a887b7b2">ezAtomicUtils::TestAndSet</a>(<span class="keyword">volatile</span> ezInt32&amp; dest, ezInt32 expected, ezInt32 value)</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;{</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;  <span class="keywordflow">return</span> __sync_bool_compare_and_swap(&amp;dest, expected, value);</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;}</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160; </div>
<div class="line"><a name="l00176"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#aecc0765e42d317d0cf13581259ed8f4e">  176</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../d6/d25/structez_atomic_utils.htm#ab7a6f96e60750e484888fbf6a887b7b2">ezAtomicUtils::TestAndSet</a>(<span class="keyword">volatile</span> ezInt64&amp; dest, ezInt64 expected, ezInt64 value)</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;{</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;  <span class="keywordflow">return</span> __sync_bool_compare_and_swap_8(&amp;dest, expected, value);</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;}</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160; </div>
<div class="line"><a name="l00181"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#ad2347c8ee52ab57d57796e90670dc7ae">  181</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../d6/d25/structez_atomic_utils.htm#ab7a6f96e60750e484888fbf6a887b7b2">ezAtomicUtils::TestAndSet</a>(<span class="keywordtype">void</span>** <span class="keyword">volatile</span> dest, <span class="keywordtype">void</span>* expected, <span class="keywordtype">void</span>* value)</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;{</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="preprocessor">#if EZ_ENABLED(EZ_PLATFORM_64BIT)</span></div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;  ezUInt64* puiTemp = <span class="keyword">reinterpret_cast&lt;</span>ezUInt64*<span class="keyword">&gt;</span>(dest);</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;  <span class="keywordflow">return</span> __sync_bool_compare_and_swap(puiTemp, <span class="keyword">reinterpret_cast&lt;</span>ezUInt64<span class="keyword">&gt;</span>(expected), <span class="keyword">reinterpret_cast&lt;</span>ezUInt64<span class="keyword">&gt;</span>(value));</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;<span class="preprocessor">#else</span></div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;  ezUInt32* puiTemp = <span class="keyword">reinterpret_cast&lt;</span>ezUInt32*<span class="keyword">&gt;</span>(dest);</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;  <span class="keywordflow">return</span> __sync_bool_compare_and_swap(puiTemp, <span class="keyword">reinterpret_cast&lt;</span>ezUInt32<span class="keyword">&gt;</span>(expected), <span class="keyword">reinterpret_cast&lt;</span>ezUInt32<span class="keyword">&gt;</span>(value));</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;}</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160; </div>
<div class="line"><a name="l00192"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#a4eb0c91e093fce8ffdf84023947762d9">  192</a></span>&#160;EZ_ALWAYS_INLINE ezInt32 <a class="code" href="../../d6/d25/structez_atomic_utils.htm#a4eb0c91e093fce8ffdf84023947762d9">ezAtomicUtils::CompareAndSwap</a>(<span class="keyword">volatile</span> ezInt32&amp; dest, ezInt32 expected, ezInt32 value)</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;{</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;  <span class="keywordflow">return</span> __sync_val_compare_and_swap(&amp;dest, expected, value);</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;}</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160; </div>
<div class="line"><a name="l00197"></a><span class="lineno"><a class="line" href="../../d6/d25/structez_atomic_utils.htm#ada3e03bdfb2248c2d84aacc8d930b2c3">  197</a></span>&#160;EZ_ALWAYS_INLINE ezInt64 <a class="code" href="../../d6/d25/structez_atomic_utils.htm#a4eb0c91e093fce8ffdf84023947762d9">ezAtomicUtils::CompareAndSwap</a>(<span class="keyword">volatile</span> ezInt64&amp; dest, ezInt64 expected, ezInt64 value)</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;{</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;  <span class="keywordflow">return</span> __sync_val_compare_and_swap_8(&amp;dest, expected, value);</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;}</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="astructez_atomic_utils_htm_aa4e7354485344ccdb2efa59cfde60701"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#aa4e7354485344ccdb2efa59cfde60701">ezAtomicUtils::Min</a></div><div class="ttdeci">static void Min(volatile ezInt32 &amp;dest, ezInt32 value)</div><div class="ttdoc">Performs an atomic min operation on dest using value.</div><div class="ttdef"><b>Definition:</b> AtomicUtils_posix.h:106</div></div>
<div class="ttc" id="astructez_atomic_utils_htm_ad1f1c4485947b8c329906df8456430f6"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#ad1f1c4485947b8c329906df8456430f6">ezAtomicUtils::Decrement</a></div><div class="ttdeci">static ezInt32 Decrement(volatile ezInt32 &amp;dest)</div><div class="ttdoc">Decrements dest as an atomic operation and returns the new value.</div><div class="ttdef"><b>Definition:</b> AtomicUtils_posix.h:31</div></div>
<div class="ttc" id="anamespaceez_math_htm_a6f7ee19d0f8e81ff6ae5f394075e3a56"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a6f7ee19d0f8e81ff6ae5f394075e3a56">ezMath::Max</a></div><div class="ttdeci">constexpr EZ_ALWAYS_INLINE T Max(T f1, T f2)</div><div class="ttdoc">Returns the greater value, f1 or f2.</div><div class="ttdef"><b>Definition:</b> Math_inl.h:38</div></div>
<div class="ttc" id="astructez_atomic_utils_htm_ac391cc82b7a05900216a41f77a15c8c4"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#ac391cc82b7a05900216a41f77a15c8c4">ezAtomicUtils::Or</a></div><div class="ttdeci">static void Or(volatile ezInt32 &amp;dest, ezInt32 value)</div><div class="ttdoc">Performs an atomic bitwise OR on dest using value.</div><div class="ttdef"><b>Definition:</b> AtomicUtils_posix.h:84</div></div>
<div class="ttc" id="astructez_atomic_utils_htm_afc253c06be30a9ddc29c0d69ea692f9d"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#afc253c06be30a9ddc29c0d69ea692f9d">ezAtomicUtils::Increment</a></div><div class="ttdeci">static ezInt32 Increment(volatile ezInt32 &amp;dest)</div><div class="ttdoc">Increments dest as an atomic operation and returns the new value.</div><div class="ttdef"><b>Definition:</b> AtomicUtils_posix.h:20</div></div>
<div class="ttc" id="astructez_atomic_utils_htm_a4eb0c91e093fce8ffdf84023947762d9"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#a4eb0c91e093fce8ffdf84023947762d9">ezAtomicUtils::CompareAndSwap</a></div><div class="ttdeci">static ezInt32 CompareAndSwap(volatile ezInt32 &amp;dest, ezInt32 expected, ezInt32 value)</div><div class="ttdoc">If dest is equal to expected, this function sets dest to value. Otherwise dest will not be modified....</div><div class="ttdef"><b>Definition:</b> AtomicUtils_posix.h:192</div></div>
<div class="ttc" id="astructez_atomic_utils_htm_afe3578c201e6166a023a609e1d51bc6b"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#afe3578c201e6166a023a609e1d51bc6b">ezAtomicUtils::Xor</a></div><div class="ttdeci">static void Xor(volatile ezInt32 &amp;dest, ezInt32 value)</div><div class="ttdoc">Performs an atomic bitwise XOR on dest using value.</div><div class="ttdef"><b>Definition:</b> AtomicUtils_posix.h:95</div></div>
<div class="ttc" id="astructez_atomic_utils_htm_aec1d674775ca50135c4f4f8038bcf4c3"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#aec1d674775ca50135c4f4f8038bcf4c3">ezAtomicUtils::Read</a></div><div class="ttdeci">static ezInt32 Read(volatile const ezInt32 &amp;src)</div><div class="ttdoc">Returns src as an atomic operation and returns its value.</div><div class="ttdef"><b>Definition:</b> AtomicUtils_posix.h:10</div></div>
<div class="ttc" id="astructez_atomic_utils_htm_ac1f56bbc48c7e97a0deb3211ac894c94"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#ac1f56bbc48c7e97a0deb3211ac894c94">ezAtomicUtils::Max</a></div><div class="ttdeci">static void Max(volatile ezInt32 &amp;dest, ezInt32 value)</div><div class="ttdoc">Performs an atomic max operation on dest using value.</div><div class="ttdef"><b>Definition:</b> AtomicUtils_posix.h:133</div></div>
<div class="ttc" id="astructez_atomic_utils_htm_a03e4af1722c6b4f4efad609943fa03cb"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#a03e4af1722c6b4f4efad609943fa03cb">ezAtomicUtils::Set</a></div><div class="ttdeci">static ezInt32 Set(volatile ezInt32 &amp;dest, ezInt32 value)</div><div class="ttdoc">Sets dest to value as an atomic operation and returns the original value of dest.</div><div class="ttdef"><b>Definition:</b> AtomicUtils_posix.h:160</div></div>
<div class="ttc" id="astructez_atomic_utils_htm_ab7a6f96e60750e484888fbf6a887b7b2"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#ab7a6f96e60750e484888fbf6a887b7b2">ezAtomicUtils::TestAndSet</a></div><div class="ttdeci">static bool TestAndSet(volatile ezInt32 &amp;dest, ezInt32 expected, ezInt32 value)</div><div class="ttdoc">If dest is equal to expected, this function sets dest to value and returns true. Otherwise dest will ...</div><div class="ttdef"><b>Definition:</b> AtomicUtils_posix.h:171</div></div>
<div class="ttc" id="astructez_atomic_utils_htm_a6ca2ff1cc8ce4f3c9696ae95b4b12307"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#a6ca2ff1cc8ce4f3c9696ae95b4b12307">ezAtomicUtils::PostIncrement</a></div><div class="ttdeci">static ezInt32 PostIncrement(volatile ezInt32 &amp;dest)</div><div class="ttdoc">Increments dest as an atomic operation and returns the old value.</div><div class="ttdef"><b>Definition:</b> AtomicUtils_posix.h:41</div></div>
<div class="ttc" id="astructez_atomic_utils_htm_a1ca59d0420faaf5c89a499220f6efa82"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#a1ca59d0420faaf5c89a499220f6efa82">ezAtomicUtils::Add</a></div><div class="ttdeci">static void Add(volatile ezInt32 &amp;dest, ezInt32 value)</div><div class="ttdoc">Adds value to dest as an atomic operation.</div><div class="ttdef"><b>Definition:</b> AtomicUtils_posix.h:62</div></div>
<div class="ttc" id="anamespaceez_math_htm_ad8009b4da9cb427658d71e30576f209e"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#ad8009b4da9cb427658d71e30576f209e">ezMath::Min</a></div><div class="ttdeci">constexpr EZ_ALWAYS_INLINE T Min(T f1, T f2)</div><div class="ttdoc">Returns the smaller value, f1 or f2.</div><div class="ttdef"><b>Definition:</b> Math_inl.h:26</div></div>
<div class="ttc" id="astructez_atomic_utils_htm_af827472d139cd0301b90762c5936d741"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#af827472d139cd0301b90762c5936d741">ezAtomicUtils::And</a></div><div class="ttdeci">static void And(volatile ezInt32 &amp;dest, ezInt32 value)</div><div class="ttdoc">Performs an atomic bitwise AND on dest using value.</div><div class="ttdef"><b>Definition:</b> AtomicUtils_posix.h:73</div></div>
<div class="ttc" id="astructez_atomic_utils_htm_ad2bdfadaffc2c70937205fb89cc3bbd3"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#ad2bdfadaffc2c70937205fb89cc3bbd3">ezAtomicUtils::PostDecrement</a></div><div class="ttdeci">static ezInt32 PostDecrement(volatile ezInt32 &amp;dest)</div><div class="ttdoc">Decrements dest as an atomic operation and returns the old value.</div><div class="ttdef"><b>Definition:</b> AtomicUtils_posix.h:52</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_05460f4aa032e23246d68b56847b5fed.htm">Threading</a></li><li class="navelem"><a class="el" href="../../dir_87563d8e459b6b2efd39d0a742560444.htm">Implementation</a></li><li class="navelem"><a class="el" href="../../dir_f7cba5d11400c314899a87dbddc6ab5d.htm">Posix</a></li><li class="navelem"><b>AtomicUtils_posix.h</b></li>
    <li class="footer">Generated on Mon Oct 18 2021 15:33:29 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
