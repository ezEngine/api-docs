<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: ezVirtualThumbStick Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 21.6</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d0/d3c/classez_virtual_thumb_stick.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="#pro-static-attribs">Static Protected Attributes</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="../../df/d94/classez_virtual_thumb_stick-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ezVirtualThumbStick Class Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>A Virtual Thumb-stick is an input device that transforms certain types of input (mouse / touch) into input similar to a thumb-stick on a controller.  
 <a href="../../d0/d3c/classez_virtual_thumb_stick.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d4/d22/_virtual_thumb_stick_8h_source.htm">VirtualThumbStick.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for ezVirtualThumbStick:</div>
<div class="dyncontent">
<div class="center"><img src="../../d6/d8b/classez_virtual_thumb_stick__inherit__graph.png" border="0" usemap="#ez_virtual_thumb_stick_inherit__map" alt="Inheritance graph"/></div>
<map name="ez_virtual_thumb_stick_inherit__map" id="ez_virtual_thumb_stick_inherit__map">
<area shape="rect" title="A Virtual Thumb&#45;stick is an input device that transforms certain types of input (mouse / touch) into ..." alt="" coords="40,319,197,345"/>
<area shape="rect" href="../../df/d18/classez_input_device.htm" title="The base class for all input device types." alt="" coords="61,244,176,271"/>
<area shape="rect" href="../../d5/d0b/classez_enumerable.htm" title=" " alt="" coords="5,155,232,196"/>
<area shape="rect" href="../../db/d45/classez_reflected_class.htm" title="All classes that should be dynamically reflectable, need to be derived from this base class." alt="" coords="52,80,185,107"/>
<area shape="rect" href="../../d4/d02/classez_no_base.htm" title="Dummy type to pass to templates and macros that expect a base type for a class that has no base." alt="" coords="75,5,162,32"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/dbc/structez_virtual_thumb_stick_1_1_center_mode.htm">CenterMode</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Defines whether the thumb-stick center position is locked or relative to where the user started touching it.  <a href="../../d3/dbc/structez_virtual_thumb_stick_1_1_center_mode.htm#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/de6/structez_virtual_thumb_stick_1_1_input.htm">Input</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">This enum allows to select either some default input mapping or to select 'Custom'.  <a href="../../d8/de6/structez_virtual_thumb_stick_1_1_input.htm#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d1b/structez_virtual_thumb_stick_1_1_output.htm">Output</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specifies which type of output the thumb-stick shall generate.  <a href="../../d5/d1b/structez_virtual_thumb_stick_1_1_output.htm#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ac83c7f9e6d95231c1ccae5703e5f95c3"><td class="memItemLeft" align="right" valign="top"><a id="ac83c7f9e6d95231c1ccae5703e5f95c3"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d3c/classez_virtual_thumb_stick.htm#ac83c7f9e6d95231c1ccae5703e5f95c3">ezVirtualThumbStick</a> ()</td></tr>
<tr class="memdesc:ac83c7f9e6d95231c1ccae5703e5f95c3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor. <br /></td></tr>
<tr class="separator:ac83c7f9e6d95231c1ccae5703e5f95c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afed0a1f05103e7d83c0430507008245b"><td class="memItemLeft" align="right" valign="top"><a id="afed0a1f05103e7d83c0430507008245b"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d3c/classez_virtual_thumb_stick.htm#afed0a1f05103e7d83c0430507008245b">~ezVirtualThumbStick</a> ()</td></tr>
<tr class="memdesc:afed0a1f05103e7d83c0430507008245b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor. <br /></td></tr>
<tr class="separator:afed0a1f05103e7d83c0430507008245b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a16c483cca334003050c94b73148c8de5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d3c/classez_virtual_thumb_stick.htm#a16c483cca334003050c94b73148c8de5">SetInputArea</a> (const <a class="el" href="../../d1/df8/classez_vec2_template.htm">ezVec2</a> &amp;vLowerLeft, const <a class="el" href="../../d1/df8/classez_vec2_template.htm">ezVec2</a> &amp;vUpperRight, float fThumbstickRadius, float fPriority, <a class="el" href="../../d3/dbc/structez_virtual_thumb_stick_1_1_center_mode.htm#a217cc61a7cf28e090edf0e95fba5f8fc">CenterMode::Enum</a> center=<a class="el" href="../../d3/dbc/structez_virtual_thumb_stick_1_1_center_mode.htm#a217cc61a7cf28e090edf0e95fba5f8fca357743561bec587babf6aa2d139a7fd6">CenterMode::ActivationPoint</a>)</td></tr>
<tr class="memdesc:a16c483cca334003050c94b73148c8de5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Defines the area on screen where the thumb-stick is located and accepts input.  <a href="../../d0/d3c/classez_virtual_thumb_stick.htm#a16c483cca334003050c94b73148c8de5">More...</a><br /></td></tr>
<tr class="separator:a16c483cca334003050c94b73148c8de5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7807ca6df0ca20be1bb440fec2915e5e"><td class="memItemLeft" align="right" valign="top"><a id="a7807ca6df0ca20be1bb440fec2915e5e"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d3c/classez_virtual_thumb_stick.htm#a7807ca6df0ca20be1bb440fec2915e5e">GetInputArea</a> (<a class="el" href="../../d1/df8/classez_vec2_template.htm">ezVec2</a> &amp;out_vLowerLeft, <a class="el" href="../../d1/df8/classez_vec2_template.htm">ezVec2</a> &amp;out_vUpperRight)</td></tr>
<tr class="memdesc:a7807ca6df0ca20be1bb440fec2915e5e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the input area of the virtual thumb-stick. <br /></td></tr>
<tr class="separator:a7807ca6df0ca20be1bb440fec2915e5e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc940831ab3a821fd9ae410becfd46c4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d3c/classez_virtual_thumb_stick.htm#afc940831ab3a821fd9ae410becfd46c4">SetTriggerInputSlot</a> (<a class="el" href="../../d8/de6/structez_virtual_thumb_stick_1_1_input.htm#afa69d36ab9d12da6c4d16fda60c6a2a3">Input::Enum</a> <a class="el" href="../../d8/de6/structez_virtual_thumb_stick_1_1_input.htm">Input</a>, const <a class="el" href="../../d2/dee/structez_input_action_config.htm">ezInputActionConfig</a> *pCustomConfig=nullptr)</td></tr>
<tr class="memdesc:afc940831ab3a821fd9ae410becfd46c4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specifies from which input slots the thumb-stick is activated.  <a href="../../d0/d3c/classez_virtual_thumb_stick.htm#afc940831ab3a821fd9ae410becfd46c4">More...</a><br /></td></tr>
<tr class="separator:afc940831ab3a821fd9ae410becfd46c4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7508e235c598591cd2a4f68b8ca52551"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d3c/classez_virtual_thumb_stick.htm#a7508e235c598591cd2a4f68b8ca52551">SetThumbstickOutput</a> (<a class="el" href="../../d5/d1b/structez_virtual_thumb_stick_1_1_output.htm#a0fbc30750de57f55347f9d8684d6965b">Output::Enum</a> <a class="el" href="../../d5/d1b/structez_virtual_thumb_stick_1_1_output.htm">Output</a>, const char *szOutputLeft=nullptr, const char *szOutputRight=nullptr, const char *szOutputUp=nullptr, const char *szOutputDown=nullptr)</td></tr>
<tr class="memdesc:a7508e235c598591cd2a4f68b8ca52551"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specifies which output the thumb-stick generates.  <a href="../../d0/d3c/classez_virtual_thumb_stick.htm#a7508e235c598591cd2a4f68b8ca52551">More...</a><br /></td></tr>
<tr class="separator:a7508e235c598591cd2a4f68b8ca52551"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae6c574876d2d019a2297433e701aebf2"><td class="memItemLeft" align="right" valign="top"><a id="ae6c574876d2d019a2297433e701aebf2"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d3c/classez_virtual_thumb_stick.htm#ae6c574876d2d019a2297433e701aebf2">SetAreaFocusMode</a> (<a class="el" href="../../d2/dee/structez_input_action_config.htm#a4a93daa7c3290c539c19dba7102b48a7">ezInputActionConfig::OnEnterArea</a> OnEnter, <a class="el" href="../../d2/dee/structez_input_action_config.htm#a8c86053bb986d3a328c99af99034bcba">ezInputActionConfig::OnLeaveArea</a> OnLeave)</td></tr>
<tr class="memdesc:ae6c574876d2d019a2297433e701aebf2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specifies what happens when the input slots that trigger the thumb-stick are active while entering or leaving the input area. <br /></td></tr>
<tr class="separator:ae6c574876d2d019a2297433e701aebf2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afbc55dc55cec1a71406c692b2f4c43d8"><td class="memItemLeft" align="right" valign="top"><a id="afbc55dc55cec1a71406c692b2f4c43d8"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d3c/classez_virtual_thumb_stick.htm#afbc55dc55cec1a71406c692b2f4c43d8">SetEnabled</a> (bool bEnabled)</td></tr>
<tr class="memdesc:afbc55dc55cec1a71406c692b2f4c43d8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allows to enable or disable the entire thumb-stick temporarily. <br /></td></tr>
<tr class="separator:afbc55dc55cec1a71406c692b2f4c43d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abca05e59be1d01bc63fb637f05c9d86e"><td class="memItemLeft" align="right" valign="top"><a id="abca05e59be1d01bc63fb637f05c9d86e"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d3c/classez_virtual_thumb_stick.htm#abca05e59be1d01bc63fb637f05c9d86e">IsEnabled</a> () const</td></tr>
<tr class="memdesc:abca05e59be1d01bc63fb637f05c9d86e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the thumb-stick is currently enabled. <br /></td></tr>
<tr class="separator:abca05e59be1d01bc63fb637f05c9d86e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a311310eab6f5159cb52851b286b5aa0b"><td class="memItemLeft" align="right" valign="top"><a id="a311310eab6f5159cb52851b286b5aa0b"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d3c/classez_virtual_thumb_stick.htm#a311310eab6f5159cb52851b286b5aa0b">IsActive</a> () const</td></tr>
<tr class="memdesc:a311310eab6f5159cb52851b286b5aa0b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the thumb-stick is currently active (ie. triggered) and generates output. <br /></td></tr>
<tr class="separator:a311310eab6f5159cb52851b286b5aa0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classez_input_device"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classez_input_device')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../df/d18/classez_input_device.htm">ezInputDevice</a></td></tr>
<tr class="memitem:a7bcaa3d0b3cebf5b099362fc234e2966 inherit pub_methods_classez_input_device"><td class="memItemLeft" align="right" valign="top"><a id="a7bcaa3d0b3cebf5b099362fc234e2966"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d18/classez_input_device.htm#a7bcaa3d0b3cebf5b099362fc234e2966">ezInputDevice</a> ()</td></tr>
<tr class="memdesc:a7bcaa3d0b3cebf5b099362fc234e2966 inherit pub_methods_classez_input_device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default Constructor. <br /></td></tr>
<tr class="separator:a7bcaa3d0b3cebf5b099362fc234e2966 inherit pub_methods_classez_input_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a488142a253444bdc1bd64edbcfc59dd3 inherit pub_methods_classez_input_device"><td class="memItemLeft" align="right" valign="top"><a id="a488142a253444bdc1bd64edbcfc59dd3"></a>
float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d18/classez_input_device.htm#a488142a253444bdc1bd64edbcfc59dd3">GetInputSlotState</a> (const char *slot) const</td></tr>
<tr class="memdesc:a488142a253444bdc1bd64edbcfc59dd3 inherit pub_methods_classez_input_device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allows to query current input values for the given slot. <br /></td></tr>
<tr class="separator:a488142a253444bdc1bd64edbcfc59dd3 inherit pub_methods_classez_input_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c62c9e2595a1ff61a1fe6f970ba7592 inherit pub_methods_classez_input_device"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d18/classez_input_device.htm#a3c62c9e2595a1ff61a1fe6f970ba7592">HasDeviceBeenUsedLastFrame</a> () const</td></tr>
<tr class="memdesc:a3c62c9e2595a1ff61a1fe6f970ba7592 inherit pub_methods_classez_input_device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if the device was 'used' during the last frame, ie. when it generated input due to some user interaction.  <a href="../../df/d18/classez_input_device.htm#a3c62c9e2595a1ff61a1fe6f970ba7592">More...</a><br /></td></tr>
<tr class="separator:a3c62c9e2595a1ff61a1fe6f970ba7592 inherit pub_methods_classez_input_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classez_reflected_class"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classez_reflected_class')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../db/d45/classez_reflected_class.htm">ezReflectedClass</a></td></tr>
<tr class="memitem:a36b3c91f3b77fee7a0e4c7d262735a89 inherit pub_methods_classez_reflected_class"><td class="memItemLeft" align="right" valign="top"><a id="a36b3c91f3b77fee7a0e4c7d262735a89"></a>
virtual const <a class="el" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetDynamicRTTI</b> () const</td></tr>
<tr class="separator:a36b3c91f3b77fee7a0e4c7d262735a89 inherit pub_methods_classez_reflected_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab746c8e33a03b96c25b117ee04cf6f00 inherit pub_methods_classez_reflected_class"><td class="memItemLeft" align="right" valign="top"><a id="ab746c8e33a03b96c25b117ee04cf6f00"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../db/d45/classez_reflected_class.htm#ab746c8e33a03b96c25b117ee04cf6f00">IsInstanceOf</a> (const <a class="el" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a> *pType) const</td></tr>
<tr class="memdesc:ab746c8e33a03b96c25b117ee04cf6f00 inherit pub_methods_classez_reflected_class"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the type of this instance is of the given type or derived from it. <br /></td></tr>
<tr class="separator:ab746c8e33a03b96c25b117ee04cf6f00 inherit pub_methods_classez_reflected_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86c6a804cc97a425928bce744607400a inherit pub_methods_classez_reflected_class"><td class="memTemplParams" colspan="2"><a id="a86c6a804cc97a425928bce744607400a"></a>
template&lt;typename T &gt; </td></tr>
<tr class="memitem:a86c6a804cc97a425928bce744607400a inherit pub_methods_classez_reflected_class"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../db/d45/classez_reflected_class.htm#a86c6a804cc97a425928bce744607400a">IsInstanceOf</a> () const</td></tr>
<tr class="memdesc:a86c6a804cc97a425928bce744607400a inherit pub_methods_classez_reflected_class"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the type of this instance is of the given type or derived from it. <br /></td></tr>
<tr class="separator:a86c6a804cc97a425928bce744607400a inherit pub_methods_classez_reflected_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a8ef50f463bba3e55508fc574ab3af900"><td class="memItemLeft" align="right" valign="top"><a id="a8ef50f463bba3e55508fc574ab3af900"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>UpdateActionMapping</b> ()</td></tr>
<tr class="separator:a8ef50f463bba3e55508fc574ab3af900"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a23680fae4722fdd47b9e2aa391e733ac"><td class="memItemLeft" align="right" valign="top"><a id="a23680fae4722fdd47b9e2aa391e733ac"></a>
<a class="el" href="../../d1/df8/classez_vec2_template.htm">ezVec2</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_vLowerLeft</b></td></tr>
<tr class="separator:a23680fae4722fdd47b9e2aa391e733ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ad0baf732f83254f299341c22a3ebab"><td class="memItemLeft" align="right" valign="top"><a id="a2ad0baf732f83254f299341c22a3ebab"></a>
<a class="el" href="../../d1/df8/classez_vec2_template.htm">ezVec2</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_vUpperRight</b></td></tr>
<tr class="separator:a2ad0baf732f83254f299341c22a3ebab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e762e9debbe12e32a6829479902902c"><td class="memItemLeft" align="right" valign="top"><a id="a9e762e9debbe12e32a6829479902902c"></a>
float&#160;</td><td class="memItemRight" valign="bottom"><b>m_fRadius</b></td></tr>
<tr class="separator:a9e762e9debbe12e32a6829479902902c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adbd73f5274212f2ba596e7f47992afaf"><td class="memItemLeft" align="right" valign="top"><a id="adbd73f5274212f2ba596e7f47992afaf"></a>
<a class="el" href="../../d2/dee/structez_input_action_config.htm">ezInputActionConfig</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_ActionConfig</b></td></tr>
<tr class="separator:adbd73f5274212f2ba596e7f47992afaf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a683b879a4bf9cb1b1c5ce54c778f34cf"><td class="memItemLeft" align="right" valign="top"><a id="a683b879a4bf9cb1b1c5ce54c778f34cf"></a>
const char *&#160;</td><td class="memItemRight" valign="bottom"><b>m_szOutputLeft</b></td></tr>
<tr class="separator:a683b879a4bf9cb1b1c5ce54c778f34cf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5621669cb091da2a671e16b4185883fe"><td class="memItemLeft" align="right" valign="top"><a id="a5621669cb091da2a671e16b4185883fe"></a>
const char *&#160;</td><td class="memItemRight" valign="bottom"><b>m_szOutputRight</b></td></tr>
<tr class="separator:a5621669cb091da2a671e16b4185883fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46bdcf61fd10c6d02b441cebc29205d4"><td class="memItemLeft" align="right" valign="top"><a id="a46bdcf61fd10c6d02b441cebc29205d4"></a>
const char *&#160;</td><td class="memItemRight" valign="bottom"><b>m_szOutputUp</b></td></tr>
<tr class="separator:a46bdcf61fd10c6d02b441cebc29205d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeaa80556b1e9838490e81f0c1bada50f"><td class="memItemLeft" align="right" valign="top"><a id="aeaa80556b1e9838490e81f0c1bada50f"></a>
const char *&#160;</td><td class="memItemRight" valign="bottom"><b>m_szOutputDown</b></td></tr>
<tr class="separator:aeaa80556b1e9838490e81f0c1bada50f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a26c1c9da758d612045867099e930fb64"><td class="memItemLeft" align="right" valign="top"><a id="a26c1c9da758d612045867099e930fb64"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>m_bEnabled</b></td></tr>
<tr class="separator:a26c1c9da758d612045867099e930fb64"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6fa469929faf073ccae5a38c937ece6"><td class="memItemLeft" align="right" valign="top"><a id="ab6fa469929faf073ccae5a38c937ece6"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>m_bConfigChanged</b></td></tr>
<tr class="separator:ab6fa469929faf073ccae5a38c937ece6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a192a32e6d591e11dada7f571a1a864f6"><td class="memItemLeft" align="right" valign="top"><a id="a192a32e6d591e11dada7f571a1a864f6"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>m_bIsActive</b></td></tr>
<tr class="separator:a192a32e6d591e11dada7f571a1a864f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa2b0f707edc87407748b82be6773d71a"><td class="memItemLeft" align="right" valign="top"><a id="aa2b0f707edc87407748b82be6773d71a"></a>
<a class="el" href="../../d4/d53/structez_hybrid_string.htm">ezString</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_sName</b></td></tr>
<tr class="separator:aa2b0f707edc87407748b82be6773d71a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a19b1ae0593cf6c66f85e003ae0b25f32"><td class="memItemLeft" align="right" valign="top"><a id="a19b1ae0593cf6c66f85e003ae0b25f32"></a>
<a class="el" href="../../d1/df8/classez_vec2_template.htm">ezVec2</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_vCenter</b></td></tr>
<tr class="separator:a19b1ae0593cf6c66f85e003ae0b25f32"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2cd577547f8951d5caa42eff72e44907"><td class="memItemLeft" align="right" valign="top"><a id="a2cd577547f8951d5caa42eff72e44907"></a>
<a class="el" href="../../d3/dbc/structez_virtual_thumb_stick_1_1_center_mode.htm#a217cc61a7cf28e090edf0e95fba5f8fc">CenterMode::Enum</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_CenterMode</b></td></tr>
<tr class="separator:a2cd577547f8951d5caa42eff72e44907"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classez_input_device"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classez_input_device')"><img src="../../closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="../../df/d18/classez_input_device.htm">ezInputDevice</a></td></tr>
<tr class="memitem:aa020904d039e3c7ee81829b22d6919ff inherit pro_attribs_classez_input_device"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d1/d79/classez_map.htm">ezMap</a>&lt; <a class="el" href="../../d4/d53/structez_hybrid_string.htm">ezString</a>, float &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d18/classez_input_device.htm#aa020904d039e3c7ee81829b22d6919ff">m_InputSlotValues</a></td></tr>
<tr class="memdesc:aa020904d039e3c7ee81829b22d6919ff inherit pro_attribs_classez_input_device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stores all the values for all input slots that this device handles.  <a href="../../df/d18/classez_input_device.htm#aa020904d039e3c7ee81829b22d6919ff">More...</a><br /></td></tr>
<tr class="separator:aa020904d039e3c7ee81829b22d6919ff inherit pro_attribs_classez_input_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac4dd6868f2c0994cb9f48a9df4da1a0b inherit pro_attribs_classez_input_device"><td class="memItemLeft" align="right" valign="top"><a id="ac4dd6868f2c0994cb9f48a9df4da1a0b"></a>
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d18/classez_input_device.htm#ac4dd6868f2c0994cb9f48a9df4da1a0b">m_LastCharacter</a></td></tr>
<tr class="memdesc:ac4dd6868f2c0994cb9f48a9df4da1a0b inherit pro_attribs_classez_input_device"><td class="mdescLeft">&#160;</td><td class="mdescRight">If this input device type handles character input, it should write the last typed character into this variable. The <a class="el" href="../../d8/d45/classez_input_manager.htm" title="The central class to set up and query the state of all input.">ezInputManager</a> calls RetrieveLastCharacter() to query what the user typed last. <br /></td></tr>
<tr class="separator:ac4dd6868f2c0994cb9f48a9df4da1a0b inherit pro_attribs_classez_input_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classez_enumerable"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classez_enumerable')"><img src="../../closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="../../d5/d0b/classez_enumerable.htm">ezEnumerable&lt; ezInputDevice, ezReflectedClass &gt;</a></td></tr>
<tr class="memitem:a6a9e0d84d59fb7c18b0600ec9a986098 inherit pro_attribs_classez_enumerable"><td class="memItemLeft" align="right" valign="top"><a id="a6a9e0d84d59fb7c18b0600ec9a986098"></a>
<a class="el" href="../../d5/d0b/classez_enumerable.htm">ezEnumerable</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>m_pNextInstance</b></td></tr>
<tr class="separator:a6a9e0d84d59fb7c18b0600ec9a986098 inherit pro_attribs_classez_enumerable"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-static-attribs"></a>
Static Protected Attributes</h2></td></tr>
<tr class="memitem:a4900cccb0d58e52358c8da6ad11ba2ed"><td class="memItemLeft" align="right" valign="top"><a id="a4900cccb0d58e52358c8da6ad11ba2ed"></a>
static ezInt32&#160;</td><td class="memItemRight" valign="bottom"><b>s_iThumbsticks</b> = 0</td></tr>
<tr class="separator:a4900cccb0d58e52358c8da6ad11ba2ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:a316ab6d63bce2eadb9814d731a844b9f"><td class="memItemLeft" align="right" valign="top"><a id="a316ab6d63bce2eadb9814d731a844b9f"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d3c/classez_virtual_thumb_stick.htm#a316ab6d63bce2eadb9814d731a844b9f">InitializeDevice</a> () override</td></tr>
<tr class="memdesc:a316ab6d63bce2eadb9814d731a844b9f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Override this if you need to do device specific initialization before the first use. <br /></td></tr>
<tr class="separator:a316ab6d63bce2eadb9814d731a844b9f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95d0c9121d41a88fbddde901e4e3cd2e"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d3c/classez_virtual_thumb_stick.htm#a95d0c9121d41a88fbddde901e4e3cd2e">UpdateInputSlotValues</a> () override</td></tr>
<tr class="memdesc:a95d0c9121d41a88fbddde901e4e3cd2e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Override this, if you need to query the state of the hardware to update the input slots.  <a href="../../d0/d3c/classez_virtual_thumb_stick.htm#a95d0c9121d41a88fbddde901e4e3cd2e">More...</a><br /></td></tr>
<tr class="separator:a95d0c9121d41a88fbddde901e4e3cd2e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ec473544f54ef9a46ed87dc08f2df34"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d3c/classez_virtual_thumb_stick.htm#a4ec473544f54ef9a46ed87dc08f2df34">RegisterInputSlots</a> () override</td></tr>
<tr class="memdesc:a4ec473544f54ef9a46ed87dc08f2df34"><td class="mdescLeft">&#160;</td><td class="mdescRight">Override this to register all the input slots that this device exposes.  <a href="../../d0/d3c/classez_virtual_thumb_stick.htm#a4ec473544f54ef9a46ed87dc08f2df34">More...</a><br /></td></tr>
<tr class="separator:a4ec473544f54ef9a46ed87dc08f2df34"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_static_methods_classez_no_base"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_classez_no_base')"><img src="../../closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="../../d4/d02/classez_no_base.htm">ezNoBase</a></td></tr>
<tr class="memitem:ad676281ced156eb886aa4f74a2a45d2f inherit pub_static_methods_classez_no_base"><td class="memItemLeft" align="right" valign="top"><a id="ad676281ced156eb886aa4f74a2a45d2f"></a>
static const <a class="el" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetStaticRTTI</b> ()</td></tr>
<tr class="separator:ad676281ced156eb886aa4f74a2a45d2f inherit pub_static_methods_classez_no_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_static_methods_classez_input_device"><td colspan="2" onclick="javascript:toggleInherit('pro_static_methods_classez_input_device')"><img src="../../closed.png" alt="-"/>&#160;Static Protected Member Functions inherited from <a class="el" href="../../df/d18/classez_input_device.htm">ezInputDevice</a></td></tr>
<tr class="memitem:a504b39eb54d144d61594a2e88fa3cdde inherit pro_static_methods_classez_input_device"><td class="memItemLeft" align="right" valign="top"><a id="a504b39eb54d144d61594a2e88fa3cdde"></a>
static void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d18/classez_input_device.htm#a504b39eb54d144d61594a2e88fa3cdde">RegisterInputSlot</a> (const char *szName, const char *szDefaultDisplayName, <a class="el" href="../../d1/dec/structez_bitflags.htm">ezBitflags</a>&lt; <a class="el" href="../../df/d72/structez_input_slot_flags.htm">ezInputSlotFlags</a> &gt; SlotFlags)</td></tr>
<tr class="memdesc:a504b39eb54d144d61594a2e88fa3cdde inherit pro_static_methods_classez_input_device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calls <a class="el" href="../../df/d18/classez_input_device.htm#a504b39eb54d144d61594a2e88fa3cdde" title="Calls RegisterInputSlot() on the ezInputManager and passes the parameters through.">RegisterInputSlot()</a> on the <a class="el" href="../../d8/d45/classez_input_manager.htm" title="The central class to set up and query the state of all input.">ezInputManager</a> and passes the parameters through. <br /></td></tr>
<tr class="separator:a504b39eb54d144d61594a2e88fa3cdde inherit pro_static_methods_classez_input_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>A Virtual Thumb-stick is an input device that transforms certain types of input (mouse / touch) into input similar to a thumb-stick on a controller. </p>
<p>A virtual thumb-stick can be used to provide an 'input device' on a touch screen, that acts like a controller thumb-stick and thus allows easier control over a game. The virtual thumb-stick takes input inside a certain screen area. It tracks the users finger movements inside this area and translates those into input from a controller thumb-stick, which it then feeds back into the input system. That makes it then possible to be mapped to input actions again. This way a game controller type of input is emulated. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a4ec473544f54ef9a46ed87dc08f2df34"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4ec473544f54ef9a46ed87dc08f2df34">&#9670;&nbsp;</a></span>RegisterInputSlots()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ezVirtualThumbStick::RegisterInputSlots </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">private</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Override this to register all the input slots that this device exposes. </p>
<p>This is called once during initialization. It needs to call <a class="el" href="../../df/d18/classez_input_device.htm#a504b39eb54d144d61594a2e88fa3cdde" title="Calls RegisterInputSlot() on the ezInputManager and passes the parameters through.">RegisterInputSlot()</a> once for every input slot that this device exposes to the system. </p>

<p>Implements <a class="el" href="../../df/d18/classez_input_device.htm#ad70250d056a9db8e4de9195bc229ecfc">ezInputDevice</a>.</p>

</div>
</div>
<a id="a16c483cca334003050c94b73148c8de5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a16c483cca334003050c94b73148c8de5">&#9670;&nbsp;</a></span>SetInputArea()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ezVirtualThumbStick::SetInputArea </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d1/df8/classez_vec2_template.htm">ezVec2</a> &amp;&#160;</td>
          <td class="paramname"><em>vLowerLeft</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d1/df8/classez_vec2_template.htm">ezVec2</a> &amp;&#160;</td>
          <td class="paramname"><em>vUpperRight</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fThumbstickRadius</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fPriority</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d3/dbc/structez_virtual_thumb_stick_1_1_center_mode.htm#a217cc61a7cf28e090edf0e95fba5f8fc">CenterMode::Enum</a>&#160;</td>
          <td class="paramname"><em>center</em> = <code><a class="el" href="../../d3/dbc/structez_virtual_thumb_stick_1_1_center_mode.htm#a217cc61a7cf28e090edf0e95fba5f8fca357743561bec587babf6aa2d139a7fd6">CenterMode::ActivationPoint</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Defines the area on screen where the thumb-stick is located and accepts input. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">vLowerLeft</td><td>The lower left corner of the input area. Coordinates are in [0; 1] range.</td></tr>
    <tr><td class="paramname">vUpperRight</td><td>The upper right corner of the input area. Coordinates are in [0; 1] range.</td></tr>
    <tr><td class="paramname">fPriority</td><td>The priority of the input area. Defines which thumb-stick or other input action gets priority, if they overlap.</td></tr>
    <tr><td class="paramname">center</td><td></td></tr>
  </table>
  </dd>
</dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="../../d3/dbc/structez_virtual_thumb_stick_1_1_center_mode.htm" title="Defines whether the thumb-stick center position is locked or relative to where the user started touch...">CenterMode</a>. </dd></dl>

</div>
</div>
<a id="a7508e235c598591cd2a4f68b8ca52551"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7508e235c598591cd2a4f68b8ca52551">&#9670;&nbsp;</a></span>SetThumbstickOutput()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ezVirtualThumbStick::SetThumbstickOutput </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d5/d1b/structez_virtual_thumb_stick_1_1_output.htm#a0fbc30750de57f55347f9d8684d6965b">Output::Enum</a>&#160;</td>
          <td class="paramname"><em>Output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>szOutputLeft</em> = <code>nullptr</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>szOutputRight</em> = <code>nullptr</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>szOutputUp</em> = <code>nullptr</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>szOutputDown</em> = <code>nullptr</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Specifies which output the thumb-stick generates. </p>
<p>If <em><a class="el" href="../../d5/d1b/structez_virtual_thumb_stick_1_1_output.htm" title="Specifies which type of output the thumb-stick shall generate.">Output</a></em> is 'Custom' the remaining parameters define which input slots the thumb-stick triggers for which direction. Otherwise the remaining parameters are ignored. </p>

</div>
</div>
<a id="afc940831ab3a821fd9ae410becfd46c4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afc940831ab3a821fd9ae410becfd46c4">&#9670;&nbsp;</a></span>SetTriggerInputSlot()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ezVirtualThumbStick::SetTriggerInputSlot </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d8/de6/structez_virtual_thumb_stick_1_1_input.htm#afa69d36ab9d12da6c4d16fda60c6a2a3">Input::Enum</a>&#160;</td>
          <td class="paramname"><em>Input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d2/dee/structez_input_action_config.htm">ezInputActionConfig</a> *&#160;</td>
          <td class="paramname"><em>pCustomConfig</em> = <code>nullptr</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Specifies from which input slots the thumb-stick is activated. </p>
<p>If <em><a class="el" href="../../d8/de6/structez_virtual_thumb_stick_1_1_input.htm" title="This enum allows to select either some default input mapping or to select &#39;Custom&#39;.">Input</a></em> is 'Custom' the remaining parameters define the filter axes and up to three input slots that trigger the thumb-stick. Otherwise the remaining parameters are ignored. </p>

</div>
</div>
<a id="a95d0c9121d41a88fbddde901e4e3cd2e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a95d0c9121d41a88fbddde901e4e3cd2e">&#9670;&nbsp;</a></span>UpdateInputSlotValues()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ezVirtualThumbStick::UpdateInputSlotValues </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">private</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Override this, if you need to query the state of the hardware to update the input slots. </p>
<dl class="section note"><dt>Note</dt><dd>This function might be called multiple times before <a class="el" href="../../df/d18/classez_input_device.htm#a9bf9a14beeae09b78c66b77c97ab6d82" title="Override this, if you need to reset certain input slot values to zero, after the ezInputManager is fi...">ResetInputSlotValues()</a> is called. This will be the case when <a class="el" href="../../d8/d45/classez_input_manager.htm#a5da4de03391ce691ec6aa07514f01b99" title="Makes sure that hardware input is processed at this moment, which allows to do this more often than U...">ezInputManager::PollHardware</a> is used to make more frequent hardware updates than input is actually processed. Just make sure to always accumulate delta values (such as mouse move values) and don't expect <a class="el" href="../../df/d18/classez_input_device.htm#a9bf9a14beeae09b78c66b77c97ab6d82" title="Override this, if you need to reset certain input slot values to zero, after the ezInputManager is fi...">ResetInputSlotValues()</a> to be called in tandem with this function and it will be fine. </dd></dl>

<p>Implements <a class="el" href="../../df/d18/classez_input_device.htm#a45c72b370f50d7b314571fccbb0fe6e2">ezInputDevice</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Core/Input/<a class="el" href="../../d4/d22/_virtual_thumb_stick_8h_source.htm">VirtualThumbStick.h</a></li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Core/Input/Implementation/VirtualThumbStick.cpp</li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d0/d3c/classez_virtual_thumb_stick.htm">ezVirtualThumbStick</a></li>
    <li class="footer">Generated on Tue Jun 8 2021 21:43:23 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
