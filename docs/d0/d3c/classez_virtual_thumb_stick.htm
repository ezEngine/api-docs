<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: ezVirtualThumbStick Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">ezEngine<span id="projectnumber">&#160;Release 25.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('d0/d3c/classez_virtual_thumb_stick.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="#pro-static-attribs">Static Protected Attributes</a> &#124;
<a href="#pri-methods">Private Member Functions</a> &#124;
<a href="../../df/d94/classez_virtual_thumb_stick-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">ezVirtualThumbStick Class Reference<span class="mlabels"><span class="mlabel">final</span></span></div></div>
</div><!--header-->
<div class="contents">

<p>A Virtual Thumb-stick is an input device that transforms certain types of input (mouse / touch) into input similar to a thumb-stick on a controller.  
 <a href="../../d0/d3c/classez_virtual_thumb_stick.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d4/d22/_virtual_thumb_stick_8h_source.htm">VirtualThumbStick.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for ezVirtualThumbStick:</div>
<div class="dyncontent">
<div class="center"><img src="../../d6/d8b/classez_virtual_thumb_stick__inherit__graph.png" border="0" usemap="#aez_virtual_thumb_stick_inherit__map" alt="Inheritance graph"/></div>
<map name="aez_virtual_thumb_stick_inherit__map" id="aez_virtual_thumb_stick_inherit__map">
<area shape="rect" title="A Virtual Thumb&#45;stick is an input device that transforms certain types of input (mouse / touch) into ..." alt="" coords="40,313,197,339"/>
<area shape="rect" href="../../df/d18/classez_input_device.htm" title="The base class for all input device types." alt="" coords="61,240,176,265"/>
<area shape="poly" title=" " alt="" coords="121,279,121,313,116,313,116,279"/>
<area shape="rect" href="../../d5/d0b/classez_enumerable.htm" title=" " alt="" coords="5,152,232,192"/>
<area shape="poly" title=" " alt="" coords="121,206,121,240,116,240,116,206"/>
<area shape="rect" href="../../db/d45/classez_reflected_class.htm" title="All classes that should be dynamically reflectable, need to be derived from this base class." alt="" coords="52,79,185,104"/>
<area shape="poly" title=" " alt="" coords="121,118,121,152,116,152,116,118"/>
<area shape="rect" href="../../d4/d02/classez_no_base.htm" title="Dummy type to pass to templates and macros that expect a base type for a class that has no base." alt="" coords="75,5,162,31"/>
<area shape="poly" title=" " alt="" coords="121,44,121,79,116,79,116,44"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="nested-classes" name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/dbc/structez_virtual_thumb_stick_1_1_center_mode.htm">CenterMode</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Defines whether the thumb-stick center position is locked or relative to where the user started touching it.  <a href="../../d3/dbc/structez_virtual_thumb_stick_1_1_center_mode.htm#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d2/dbc/structez_virtual_thumb_stick_1_1_flags.htm">Flags</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/de6/structez_virtual_thumb_stick_1_1_input.htm">Input</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">This enum allows to select either some default input mapping or to select 'Custom'.  <a href="../../d8/de6/structez_virtual_thumb_stick_1_1_input.htm#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d5/d1b/structez_virtual_thumb_stick_1_1_output.htm">Output</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specifies which type of output the thumb-stick shall generate.  <a href="../../d5/d1b/structez_virtual_thumb_stick_1_1_output.htm#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:ac83c7f9e6d95231c1ccae5703e5f95c3" id="r_ac83c7f9e6d95231c1ccae5703e5f95c3"><td class="memItemLeft" align="right" valign="top"><a id="ac83c7f9e6d95231c1ccae5703e5f95c3" name="ac83c7f9e6d95231c1ccae5703e5f95c3"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>ezVirtualThumbStick</b> ()</td></tr>
<tr class="memdesc:ac83c7f9e6d95231c1ccae5703e5f95c3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor. <br /></td></tr>
<tr class="separator:ac83c7f9e6d95231c1ccae5703e5f95c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afed0a1f05103e7d83c0430507008245b" id="r_afed0a1f05103e7d83c0430507008245b"><td class="memItemLeft" align="right" valign="top"><a id="afed0a1f05103e7d83c0430507008245b" name="afed0a1f05103e7d83c0430507008245b"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>~ezVirtualThumbStick</b> ()</td></tr>
<tr class="memdesc:afed0a1f05103e7d83c0430507008245b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor. <br /></td></tr>
<tr class="separator:afed0a1f05103e7d83c0430507008245b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a16c483cca334003050c94b73148c8de5" id="r_a16c483cca334003050c94b73148c8de5"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d3c/classez_virtual_thumb_stick.htm#a16c483cca334003050c94b73148c8de5">SetInputArea</a> (const <a class="el" href="../../d1/df8/classez_vec2_template.htm">ezVec2</a> &amp;vLowerLeft, const <a class="el" href="../../d1/df8/classez_vec2_template.htm">ezVec2</a> &amp;vUpperRight, float fThumbstickRadius, float fPriority, <a class="el" href="../../d3/dbc/structez_virtual_thumb_stick_1_1_center_mode.htm#a217cc61a7cf28e090edf0e95fba5f8fc">CenterMode::Enum</a> center=<a class="el" href="../../d3/dbc/structez_virtual_thumb_stick_1_1_center_mode.htm#a217cc61a7cf28e090edf0e95fba5f8fca357743561bec587babf6aa2d139a7fd6">CenterMode::ActivationPoint</a>)</td></tr>
<tr class="memdesc:a16c483cca334003050c94b73148c8de5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Defines the area on screen where the thumb-stick is located and accepts input.  <br /></td></tr>
<tr class="separator:a16c483cca334003050c94b73148c8de5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a51db8bfe8d2fe634cfc412afebbd8a94" id="r_a51db8bfe8d2fe634cfc412afebbd8a94"><td class="memItemLeft" align="right" valign="top"><a id="a51db8bfe8d2fe634cfc412afebbd8a94" name="a51db8bfe8d2fe634cfc412afebbd8a94"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetFlags</b> (<a class="el" href="../../d1/dec/structez_bitflags.htm">ezBitflags</a>&lt; <a class="el" href="../../d2/dbc/structez_virtual_thumb_stick_1_1_flags.htm">Flags</a> &gt; flags)</td></tr>
<tr class="memdesc:a51db8bfe8d2fe634cfc412afebbd8a94"><td class="mdescLeft">&#160;</td><td class="mdescRight">See the <a class="el" href="../../d2/dbc/structez_virtual_thumb_stick_1_1_flags.htm">Flags</a> struct for details. <br /></td></tr>
<tr class="separator:a51db8bfe8d2fe634cfc412afebbd8a94"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a14a04606e249c695f718f5a14f51589b" id="r_a14a04606e249c695f718f5a14f51589b"><td class="memItemLeft" align="right" valign="top"><a id="a14a04606e249c695f718f5a14f51589b" name="a14a04606e249c695f718f5a14f51589b"></a>
<a class="el" href="../../d1/dec/structez_bitflags.htm">ezBitflags</a>&lt; <a class="el" href="../../d2/dbc/structez_virtual_thumb_stick_1_1_flags.htm">Flags</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetFlags</b> () const</td></tr>
<tr class="memdesc:a14a04606e249c695f718f5a14f51589b"><td class="mdescLeft">&#160;</td><td class="mdescRight">See the <a class="el" href="../../d2/dbc/structez_virtual_thumb_stick_1_1_flags.htm">Flags</a> struct for details. <br /></td></tr>
<tr class="separator:a14a04606e249c695f718f5a14f51589b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a876107e78b057ce66a79ad6a89aca327" id="r_a876107e78b057ce66a79ad6a89aca327"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d3c/classez_virtual_thumb_stick.htm#a876107e78b057ce66a79ad6a89aca327">SetInputCoordinateAspectRatio</a> (float fWidthDivHeight)</td></tr>
<tr class="memdesc:a876107e78b057ce66a79ad6a89aca327"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the aspect ratio of the screen on which the input happens.  <br /></td></tr>
<tr class="separator:a876107e78b057ce66a79ad6a89aca327"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae73cc416580deb219f33ca86c063164f" id="r_ae73cc416580deb219f33ca86c063164f"><td class="memItemLeft" align="right" valign="top"><a id="ae73cc416580deb219f33ca86c063164f" name="ae73cc416580deb219f33ca86c063164f"></a>
float&#160;</td><td class="memItemRight" valign="bottom"><b>GetInputCoordinateAspectRatio</b> () const</td></tr>
<tr class="memdesc:ae73cc416580deb219f33ca86c063164f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the screen aspect ratio that was set. See <a class="el" href="../../d0/d3c/classez_virtual_thumb_stick.htm#a876107e78b057ce66a79ad6a89aca327" title="Sets the aspect ratio of the screen on which the input happens.">SetInputCoordinateAspectRatio()</a>. <br /></td></tr>
<tr class="separator:ae73cc416580deb219f33ca86c063164f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7f1384723d5ed1bb5f20a7b181a3027" id="r_ab7f1384723d5ed1bb5f20a7b181a3027"><td class="memItemLeft" align="right" valign="top"><a id="ab7f1384723d5ed1bb5f20a7b181a3027" name="ab7f1384723d5ed1bb5f20a7b181a3027"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>GetInputArea</b> (<a class="el" href="../../d1/df8/classez_vec2_template.htm">ezVec2</a> &amp;out_vLowerLeft, <a class="el" href="../../d1/df8/classez_vec2_template.htm">ezVec2</a> &amp;out_vUpperRight) const</td></tr>
<tr class="memdesc:ab7f1384723d5ed1bb5f20a7b181a3027"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the input area of the virtual thumb-stick. <br /></td></tr>
<tr class="separator:ab7f1384723d5ed1bb5f20a7b181a3027"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d59fc84b0bf7472333a63e203655eb9" id="r_a3d59fc84b0bf7472333a63e203655eb9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d3c/classez_virtual_thumb_stick.htm#a3d59fc84b0bf7472333a63e203655eb9">SetTriggerInputSlot</a> (<a class="el" href="../../d8/de6/structez_virtual_thumb_stick_1_1_input.htm#afa69d36ab9d12da6c4d16fda60c6a2a3">Input::Enum</a> input, const <a class="el" href="../../d2/dee/structez_input_action_config.htm">ezInputActionConfig</a> *pCustomConfig=nullptr)</td></tr>
<tr class="memdesc:a3d59fc84b0bf7472333a63e203655eb9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specifies from which input slots the thumb-stick is activated.  <br /></td></tr>
<tr class="separator:a3d59fc84b0bf7472333a63e203655eb9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d26a01db448fb79a91bc392bb153c63" id="r_a1d26a01db448fb79a91bc392bb153c63"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d3c/classez_virtual_thumb_stick.htm#a1d26a01db448fb79a91bc392bb153c63">SetThumbstickOutput</a> (<a class="el" href="../../d5/d1b/structez_virtual_thumb_stick_1_1_output.htm#a0fbc30750de57f55347f9d8684d6965b">Output::Enum</a> output, <a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a> sOutputLeft={}, <a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a> sOutputRight={}, <a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a> sOutputUp={}, <a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a> sOutputDown={})</td></tr>
<tr class="memdesc:a1d26a01db448fb79a91bc392bb153c63"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specifies which output the thumb-stick generates.  <br /></td></tr>
<tr class="separator:a1d26a01db448fb79a91bc392bb153c63"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a917f5054b9618d24355ea5e00156e15b" id="r_a917f5054b9618d24355ea5e00156e15b"><td class="memItemLeft" align="right" valign="top"><a id="a917f5054b9618d24355ea5e00156e15b" name="a917f5054b9618d24355ea5e00156e15b"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetAreaFocusMode</b> (<a class="el" href="../../d2/dee/structez_input_action_config.htm#a4a93daa7c3290c539c19dba7102b48a7">ezInputActionConfig::OnEnterArea</a> onEnter, <a class="el" href="../../d2/dee/structez_input_action_config.htm#a8c86053bb986d3a328c99af99034bcba">ezInputActionConfig::OnLeaveArea</a> onLeave)</td></tr>
<tr class="memdesc:a917f5054b9618d24355ea5e00156e15b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Specifies what happens when the input slots that trigger the thumb-stick are active while entering or leaving the input area. <br /></td></tr>
<tr class="separator:a917f5054b9618d24355ea5e00156e15b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afbc55dc55cec1a71406c692b2f4c43d8" id="r_afbc55dc55cec1a71406c692b2f4c43d8"><td class="memItemLeft" align="right" valign="top"><a id="afbc55dc55cec1a71406c692b2f4c43d8" name="afbc55dc55cec1a71406c692b2f4c43d8"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetEnabled</b> (bool bEnabled)</td></tr>
<tr class="memdesc:afbc55dc55cec1a71406c692b2f4c43d8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allows to enable or disable the entire thumb-stick temporarily. <br /></td></tr>
<tr class="separator:afbc55dc55cec1a71406c692b2f4c43d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abca05e59be1d01bc63fb637f05c9d86e" id="r_abca05e59be1d01bc63fb637f05c9d86e"><td class="memItemLeft" align="right" valign="top"><a id="abca05e59be1d01bc63fb637f05c9d86e" name="abca05e59be1d01bc63fb637f05c9d86e"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsEnabled</b> () const</td></tr>
<tr class="memdesc:abca05e59be1d01bc63fb637f05c9d86e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the thumb-stick is currently enabled. <br /></td></tr>
<tr class="separator:abca05e59be1d01bc63fb637f05c9d86e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a311310eab6f5159cb52851b286b5aa0b" id="r_a311310eab6f5159cb52851b286b5aa0b"><td class="memItemLeft" align="right" valign="top"><a id="a311310eab6f5159cb52851b286b5aa0b" name="a311310eab6f5159cb52851b286b5aa0b"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsActive</b> () const</td></tr>
<tr class="memdesc:a311310eab6f5159cb52851b286b5aa0b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the thumb-stick is currently active (ie. triggered) and generates output. <br /></td></tr>
<tr class="separator:a311310eab6f5159cb52851b286b5aa0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab2370066713cf724f47d1cba278bd269" id="r_ab2370066713cf724f47d1cba278bd269"><td class="memItemLeft" align="right" valign="top"><a id="ab2370066713cf724f47d1cba278bd269" name="ab2370066713cf724f47d1cba278bd269"></a>
<a class="el" href="../../d1/df8/classez_vec2_template.htm">ezVec2</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetCurrentCenter</b> () const</td></tr>
<tr class="memdesc:ab2370066713cf724f47d1cba278bd269"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the (normalized screen) coordinate where the current input center is. Depends on <a class="el" href="../../d3/dbc/structez_virtual_thumb_stick_1_1_center_mode.htm" title="Defines whether the thumb-stick center position is locked or relative to where the user started touch...">CenterMode</a>. <br /></td></tr>
<tr class="separator:ab2370066713cf724f47d1cba278bd269"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a425b5290dd29b08a5c725935a15e703b" id="r_a425b5290dd29b08a5c725935a15e703b"><td class="memItemLeft" align="right" valign="top"><a id="a425b5290dd29b08a5c725935a15e703b" name="a425b5290dd29b08a5c725935a15e703b"></a>
float&#160;</td><td class="memItemRight" valign="bottom"><b>GetThumbstickRadius</b> () const</td></tr>
<tr class="memdesc:a425b5290dd29b08a5c725935a15e703b"><td class="mdescLeft">&#160;</td><td class="mdescRight">See <a class="el" href="../../d0/d3c/classez_virtual_thumb_stick.htm#a16c483cca334003050c94b73148c8de5" title="Defines the area on screen where the thumb-stick is located and accepts input.">SetInputArea()</a> for details. <br /></td></tr>
<tr class="separator:a425b5290dd29b08a5c725935a15e703b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa85967b360ec97fa34835e6e14719705" id="r_aa85967b360ec97fa34835e6e14719705"><td class="memItemLeft" align="right" valign="top"><a id="aa85967b360ec97fa34835e6e14719705" name="aa85967b360ec97fa34835e6e14719705"></a>
<a class="el" href="../../d1/df8/classez_vec2_template.htm">ezVec2</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetCurrentTouchPos</b> () const</td></tr>
<tr class="memdesc:aa85967b360ec97fa34835e6e14719705"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the (normalized screen) coordinate where the current touch point is. <br /></td></tr>
<tr class="separator:aa85967b360ec97fa34835e6e14719705"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6cf76f2358c73f3356cd90da0b03b9f6" id="r_a6cf76f2358c73f3356cd90da0b03b9f6"><td class="memItemLeft" align="right" valign="top"><a id="a6cf76f2358c73f3356cd90da0b03b9f6" name="a6cf76f2358c73f3356cd90da0b03b9f6"></a>
float&#160;</td><td class="memItemRight" valign="bottom"><b>GetInputStrength</b> () const</td></tr>
<tr class="memdesc:a6cf76f2358c73f3356cd90da0b03b9f6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the total strength of input. <br /></td></tr>
<tr class="separator:a6cf76f2358c73f3356cd90da0b03b9f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af30d525c3a6fe8ac143208c3b9244c6a" id="r_af30d525c3a6fe8ac143208c3b9244c6a"><td class="memItemLeft" align="right" valign="top"><a id="af30d525c3a6fe8ac143208c3b9244c6a" name="af30d525c3a6fe8ac143208c3b9244c6a"></a>
<a class="el" href="../../d1/df8/classez_vec2_template.htm">ezVec2</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetInputDirection</b> () const</td></tr>
<tr class="memdesc:af30d525c3a6fe8ac143208c3b9244c6a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the normalized direction of the input. <br /></td></tr>
<tr class="separator:af30d525c3a6fe8ac143208c3b9244c6a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classez_input_device"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classez_input_device')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../df/d18/classez_input_device.htm">ezInputDevice</a></td></tr>
<tr class="memitem:a7bcaa3d0b3cebf5b099362fc234e2966 inherit pub_methods_classez_input_device" id="r_a7bcaa3d0b3cebf5b099362fc234e2966"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>ezInputDevice</b> ()</td></tr>
<tr class="memdesc:a7bcaa3d0b3cebf5b099362fc234e2966 inherit pub_methods_classez_input_device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Default Constructor. <br /></td></tr>
<tr class="separator:a7bcaa3d0b3cebf5b099362fc234e2966 inherit pub_methods_classez_input_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9133c37b8ef1d1a0cd0bd8b595acc0a inherit pub_methods_classez_input_device" id="r_ab9133c37b8ef1d1a0cd0bd8b595acc0a"><td class="memItemLeft" align="right" valign="top">
float&#160;</td><td class="memItemRight" valign="bottom"><b>GetInputSlotState</b> (<a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a> sSlot) const</td></tr>
<tr class="memdesc:ab9133c37b8ef1d1a0cd0bd8b595acc0a inherit pub_methods_classez_input_device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Allows to query current input values for the given slot. <br /></td></tr>
<tr class="separator:ab9133c37b8ef1d1a0cd0bd8b595acc0a inherit pub_methods_classez_input_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c62c9e2595a1ff61a1fe6f970ba7592 inherit pub_methods_classez_input_device" id="r_a3c62c9e2595a1ff61a1fe6f970ba7592"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d18/classez_input_device.htm#a3c62c9e2595a1ff61a1fe6f970ba7592">HasDeviceBeenUsedLastFrame</a> () const</td></tr>
<tr class="memdesc:a3c62c9e2595a1ff61a1fe6f970ba7592 inherit pub_methods_classez_input_device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if the device was 'used' during the last frame, ie. when it generated input due to some user interaction.  <br /></td></tr>
<tr class="separator:a3c62c9e2595a1ff61a1fe6f970ba7592 inherit pub_methods_classez_input_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classez_reflected_class"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classez_reflected_class')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../db/d45/classez_reflected_class.htm">ezReflectedClass</a></td></tr>
<tr class="memitem:ae155d1c020cc3d20af2811471a95ca0a inherit pub_methods_classez_reflected_class" id="r_ae155d1c020cc3d20af2811471a95ca0a"><td class="memItemLeft" align="right" valign="top">
virtual const <a class="el" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetDynamicRTTI</b> () const</td></tr>
<tr class="separator:ae155d1c020cc3d20af2811471a95ca0a inherit pub_methods_classez_reflected_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab746c8e33a03b96c25b117ee04cf6f00 inherit pub_methods_classez_reflected_class" id="r_ab746c8e33a03b96c25b117ee04cf6f00"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsInstanceOf</b> (const <a class="el" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a> *pType) const</td></tr>
<tr class="memdesc:ab746c8e33a03b96c25b117ee04cf6f00 inherit pub_methods_classez_reflected_class"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the type of this instance is of the given type or derived from it. <br /></td></tr>
<tr class="separator:ab746c8e33a03b96c25b117ee04cf6f00 inherit pub_methods_classez_reflected_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86c6a804cc97a425928bce744607400a inherit pub_methods_classez_reflected_class" id="r_a86c6a804cc97a425928bce744607400a"><td class="memTemplParams" colspan="2">
template&lt;typename T &gt; </td></tr>
<tr class="memitem:a86c6a804cc97a425928bce744607400a inherit pub_methods_classez_reflected_class"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE bool&#160;</td><td class="memTemplItemRight" valign="bottom"><b>IsInstanceOf</b> () const</td></tr>
<tr class="memdesc:a86c6a804cc97a425928bce744607400a inherit pub_methods_classez_reflected_class"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the type of this instance is of the given type or derived from it. <br /></td></tr>
<tr class="separator:a86c6a804cc97a425928bce744607400a inherit pub_methods_classez_reflected_class"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-methods" name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:a8ef50f463bba3e55508fc574ab3af900" id="r_a8ef50f463bba3e55508fc574ab3af900"><td class="memItemLeft" align="right" valign="top"><a id="a8ef50f463bba3e55508fc574ab3af900" name="a8ef50f463bba3e55508fc574ab3af900"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>UpdateActionMapping</b> ()</td></tr>
<tr class="separator:a8ef50f463bba3e55508fc574ab3af900"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classez_input_device"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classez_input_device')"><img src="../../closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="../../df/d18/classez_input_device.htm">ezInputDevice</a></td></tr>
<tr class="memitem:a9bf9a14beeae09b78c66b77c97ab6d82 inherit pro_methods_classez_input_device" id="r_a9bf9a14beeae09b78c66b77c97ab6d82"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d18/classez_input_device.htm#a9bf9a14beeae09b78c66b77c97ab6d82">ResetInputSlotValues</a> ()</td></tr>
<tr class="memdesc:a9bf9a14beeae09b78c66b77c97ab6d82 inherit pro_methods_classez_input_device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Override this, if you need to reset certain input slot values to zero, after the <a class="el" href="../../d8/d45/classez_input_manager.htm" title="The central class to set up and query the state of all input.">ezInputManager</a> is finished with the current frame update.  <br /></td></tr>
<tr class="separator:a9bf9a14beeae09b78c66b77c97ab6d82 inherit pro_methods_classez_input_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac56c8b35631ad7da84c901a2c64ac9f7 inherit pro_methods_classez_input_device" id="r_ac56c8b35631ad7da84c901a2c64ac9f7"><td class="memItemLeft" align="right" valign="top">
virtual void&#160;</td><td class="memItemRight" valign="bottom"><b>UpdateHardwareState</b> (<a class="el" href="../../d3/d90/structez_time.htm">ezTime</a> tTimeDifference)</td></tr>
<tr class="memdesc:ac56c8b35631ad7da84c901a2c64ac9f7 inherit pro_methods_classez_input_device"><td class="mdescLeft">&#160;</td><td class="mdescRight">This function is called once after <a class="el" href="../../d8/d45/classez_input_manager.htm#a5f9f275d8aa15fd5f313871cf8eab7db" title="Updates the state of the input manager. This should be called exactly once each frame.">ezInputManager::Update</a> with the same time delta value. It allows to update hardware state, such as the vibration of gamepad motors. <br /></td></tr>
<tr class="separator:ac56c8b35631ad7da84c901a2c64ac9f7 inherit pro_methods_classez_input_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-attribs" name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a23680fae4722fdd47b9e2aa391e733ac" id="r_a23680fae4722fdd47b9e2aa391e733ac"><td class="memItemLeft" align="right" valign="top"><a id="a23680fae4722fdd47b9e2aa391e733ac" name="a23680fae4722fdd47b9e2aa391e733ac"></a>
<a class="el" href="../../d1/df8/classez_vec2_template.htm">ezVec2</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_vLowerLeft</b> = <a class="el" href="../../d1/df8/classez_vec2_template.htm#a84cbdc52881588b68b1e8ab424770c6f">ezVec2::MakeZero</a>()</td></tr>
<tr class="separator:a23680fae4722fdd47b9e2aa391e733ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ad0baf732f83254f299341c22a3ebab" id="r_a2ad0baf732f83254f299341c22a3ebab"><td class="memItemLeft" align="right" valign="top"><a id="a2ad0baf732f83254f299341c22a3ebab" name="a2ad0baf732f83254f299341c22a3ebab"></a>
<a class="el" href="../../d1/df8/classez_vec2_template.htm">ezVec2</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_vUpperRight</b> = <a class="el" href="../../d1/df8/classez_vec2_template.htm#a84cbdc52881588b68b1e8ab424770c6f">ezVec2::MakeZero</a>()</td></tr>
<tr class="separator:a2ad0baf732f83254f299341c22a3ebab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e762e9debbe12e32a6829479902902c" id="r_a9e762e9debbe12e32a6829479902902c"><td class="memItemLeft" align="right" valign="top"><a id="a9e762e9debbe12e32a6829479902902c" name="a9e762e9debbe12e32a6829479902902c"></a>
float&#160;</td><td class="memItemRight" valign="bottom"><b>m_fRadius</b> = 0.0f</td></tr>
<tr class="separator:a9e762e9debbe12e32a6829479902902c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adbd73f5274212f2ba596e7f47992afaf" id="r_adbd73f5274212f2ba596e7f47992afaf"><td class="memItemLeft" align="right" valign="top"><a id="adbd73f5274212f2ba596e7f47992afaf" name="adbd73f5274212f2ba596e7f47992afaf"></a>
<a class="el" href="../../d2/dee/structez_input_action_config.htm">ezInputActionConfig</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_ActionConfig</b></td></tr>
<tr class="separator:adbd73f5274212f2ba596e7f47992afaf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af1c8b7607780e2ff9288635b84602b84" id="r_af1c8b7607780e2ff9288635b84602b84"><td class="memItemLeft" align="right" valign="top"><a id="af1c8b7607780e2ff9288635b84602b84" name="af1c8b7607780e2ff9288635b84602b84"></a>
<a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_sOutputLeft</b></td></tr>
<tr class="separator:af1c8b7607780e2ff9288635b84602b84"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afaae9946a69e8b9ba0ac969fa2c8ca44" id="r_afaae9946a69e8b9ba0ac969fa2c8ca44"><td class="memItemLeft" align="right" valign="top"><a id="afaae9946a69e8b9ba0ac969fa2c8ca44" name="afaae9946a69e8b9ba0ac969fa2c8ca44"></a>
<a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_sOutputRight</b></td></tr>
<tr class="separator:afaae9946a69e8b9ba0ac969fa2c8ca44"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3fbc97de251cc2d1294a4c9e5e1f4a1d" id="r_a3fbc97de251cc2d1294a4c9e5e1f4a1d"><td class="memItemLeft" align="right" valign="top"><a id="a3fbc97de251cc2d1294a4c9e5e1f4a1d" name="a3fbc97de251cc2d1294a4c9e5e1f4a1d"></a>
<a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_sOutputUp</b></td></tr>
<tr class="separator:a3fbc97de251cc2d1294a4c9e5e1f4a1d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a674fede5bc3afb113c4653d6707965cb" id="r_a674fede5bc3afb113c4653d6707965cb"><td class="memItemLeft" align="right" valign="top"><a id="a674fede5bc3afb113c4653d6707965cb" name="a674fede5bc3afb113c4653d6707965cb"></a>
<a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_sOutputDown</b></td></tr>
<tr class="separator:a674fede5bc3afb113c4653d6707965cb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5f2a9cfd4c9fb4e7c7bfff212b64fc5" id="r_ad5f2a9cfd4c9fb4e7c7bfff212b64fc5"><td class="memItemLeft" align="right" valign="top"><a id="ad5f2a9cfd4c9fb4e7c7bfff212b64fc5" name="ad5f2a9cfd4c9fb4e7c7bfff212b64fc5"></a>
<a class="el" href="../../d1/dec/structez_bitflags.htm">ezBitflags</a>&lt; <a class="el" href="../../d2/dbc/structez_virtual_thumb_stick_1_1_flags.htm">Flags</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_Flags</b></td></tr>
<tr class="separator:ad5f2a9cfd4c9fb4e7c7bfff212b64fc5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a26c1c9da758d612045867099e930fb64" id="r_a26c1c9da758d612045867099e930fb64"><td class="memItemLeft" align="right" valign="top"><a id="a26c1c9da758d612045867099e930fb64" name="a26c1c9da758d612045867099e930fb64"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>m_bEnabled</b> = false</td></tr>
<tr class="separator:a26c1c9da758d612045867099e930fb64"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6fa469929faf073ccae5a38c937ece6" id="r_ab6fa469929faf073ccae5a38c937ece6"><td class="memItemLeft" align="right" valign="top"><a id="ab6fa469929faf073ccae5a38c937ece6" name="ab6fa469929faf073ccae5a38c937ece6"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>m_bConfigChanged</b> = false</td></tr>
<tr class="separator:ab6fa469929faf073ccae5a38c937ece6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a192a32e6d591e11dada7f571a1a864f6" id="r_a192a32e6d591e11dada7f571a1a864f6"><td class="memItemLeft" align="right" valign="top"><a id="a192a32e6d591e11dada7f571a1a864f6" name="a192a32e6d591e11dada7f571a1a864f6"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>m_bIsActive</b> = false</td></tr>
<tr class="separator:a192a32e6d591e11dada7f571a1a864f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa2b0f707edc87407748b82be6773d71a" id="r_aa2b0f707edc87407748b82be6773d71a"><td class="memItemLeft" align="right" valign="top"><a id="aa2b0f707edc87407748b82be6773d71a" name="aa2b0f707edc87407748b82be6773d71a"></a>
<a class="el" href="../../d4/d53/structez_hybrid_string.htm">ezString</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_sName</b></td></tr>
<tr class="separator:aa2b0f707edc87407748b82be6773d71a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a19b1ae0593cf6c66f85e003ae0b25f32" id="r_a19b1ae0593cf6c66f85e003ae0b25f32"><td class="memItemLeft" align="right" valign="top"><a id="a19b1ae0593cf6c66f85e003ae0b25f32" name="a19b1ae0593cf6c66f85e003ae0b25f32"></a>
<a class="el" href="../../d1/df8/classez_vec2_template.htm">ezVec2</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_vCenter</b> = <a class="el" href="../../d1/df8/classez_vec2_template.htm#a84cbdc52881588b68b1e8ab424770c6f">ezVec2::MakeZero</a>()</td></tr>
<tr class="separator:a19b1ae0593cf6c66f85e003ae0b25f32"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a999c1eb114c7aa7f46bd69f964c76800" id="r_a999c1eb114c7aa7f46bd69f964c76800"><td class="memItemLeft" align="right" valign="top"><a id="a999c1eb114c7aa7f46bd69f964c76800" name="a999c1eb114c7aa7f46bd69f964c76800"></a>
<a class="el" href="../../d1/df8/classez_vec2_template.htm">ezVec2</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_vTouchPos</b> = <a class="el" href="../../d1/df8/classez_vec2_template.htm#a84cbdc52881588b68b1e8ab424770c6f">ezVec2::MakeZero</a>()</td></tr>
<tr class="separator:a999c1eb114c7aa7f46bd69f964c76800"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa804cb8ad786c452b17bce76dd9d224c" id="r_aa804cb8ad786c452b17bce76dd9d224c"><td class="memItemLeft" align="right" valign="top"><a id="aa804cb8ad786c452b17bce76dd9d224c" name="aa804cb8ad786c452b17bce76dd9d224c"></a>
<a class="el" href="../../d1/df8/classez_vec2_template.htm">ezVec2</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_vInputDirection</b> = <a class="el" href="../../d1/df8/classez_vec2_template.htm#a84cbdc52881588b68b1e8ab424770c6f">ezVec2::MakeZero</a>()</td></tr>
<tr class="separator:aa804cb8ad786c452b17bce76dd9d224c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa629a24c82e03facabc9848b0170d8dc" id="r_aa629a24c82e03facabc9848b0170d8dc"><td class="memItemLeft" align="right" valign="top"><a id="aa629a24c82e03facabc9848b0170d8dc" name="aa629a24c82e03facabc9848b0170d8dc"></a>
float&#160;</td><td class="memItemRight" valign="bottom"><b>m_fInputStrength</b> = 0.0f</td></tr>
<tr class="separator:aa629a24c82e03facabc9848b0170d8dc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae59336c047a5c0d834c68d88d34cfcec" id="r_ae59336c047a5c0d834c68d88d34cfcec"><td class="memItemLeft" align="right" valign="top"><a id="ae59336c047a5c0d834c68d88d34cfcec" name="ae59336c047a5c0d834c68d88d34cfcec"></a>
float&#160;</td><td class="memItemRight" valign="bottom"><b>m_fAspectRatio</b> = 1.0f</td></tr>
<tr class="separator:ae59336c047a5c0d834c68d88d34cfcec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2cd577547f8951d5caa42eff72e44907" id="r_a2cd577547f8951d5caa42eff72e44907"><td class="memItemLeft" align="right" valign="top"><a id="a2cd577547f8951d5caa42eff72e44907" name="a2cd577547f8951d5caa42eff72e44907"></a>
<a class="el" href="../../d3/dbc/structez_virtual_thumb_stick_1_1_center_mode.htm#a217cc61a7cf28e090edf0e95fba5f8fc">CenterMode::Enum</a>&#160;</td><td class="memItemRight" valign="bottom"><b>m_CenterMode</b></td></tr>
<tr class="separator:a2cd577547f8951d5caa42eff72e44907"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classez_input_device"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classez_input_device')"><img src="../../closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="../../df/d18/classez_input_device.htm">ezInputDevice</a></td></tr>
<tr class="memitem:aa020904d039e3c7ee81829b22d6919ff inherit pro_attribs_classez_input_device" id="r_aa020904d039e3c7ee81829b22d6919ff"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d1/d79/classez_map.htm">ezMap</a>&lt; <a class="el" href="../../d4/d53/structez_hybrid_string.htm">ezString</a>, float &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../df/d18/classez_input_device.htm#aa020904d039e3c7ee81829b22d6919ff">m_InputSlotValues</a></td></tr>
<tr class="memdesc:aa020904d039e3c7ee81829b22d6919ff inherit pro_attribs_classez_input_device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Stores all the values for all input slots that this device handles.  <br /></td></tr>
<tr class="separator:aa020904d039e3c7ee81829b22d6919ff inherit pro_attribs_classez_input_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a053bacaca498574994f6013e1fe72dc4 inherit pro_attribs_classez_input_device" id="r_a053bacaca498574994f6013e1fe72dc4"><td class="memItemLeft" align="right" valign="top">
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>m_uiLastCharacter</b></td></tr>
<tr class="memdesc:a053bacaca498574994f6013e1fe72dc4 inherit pro_attribs_classez_input_device"><td class="mdescLeft">&#160;</td><td class="mdescRight">If this input device type handles character input, it should write the last typed character into this variable. The <a class="el" href="../../d8/d45/classez_input_manager.htm" title="The central class to set up and query the state of all input.">ezInputManager</a> calls RetrieveLastCharacter() to query what the user typed last. <br /></td></tr>
<tr class="separator:a053bacaca498574994f6013e1fe72dc4 inherit pro_attribs_classez_input_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classez_enumerable"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classez_enumerable')"><img src="../../closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="../../d5/d0b/classez_enumerable.htm">ezEnumerable&lt; ezInputDevice, ezReflectedClass &gt;</a></td></tr>
<tr class="memitem:a6a9e0d84d59fb7c18b0600ec9a986098 inherit pro_attribs_classez_enumerable" id="r_a6a9e0d84d59fb7c18b0600ec9a986098"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d5/d0b/classez_enumerable.htm">ezEnumerable</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>m_pNextInstance</b></td></tr>
<tr class="separator:a6a9e0d84d59fb7c18b0600ec9a986098 inherit pro_attribs_classez_enumerable"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-static-attribs" name="pro-static-attribs"></a>
Static Protected Attributes</h2></td></tr>
<tr class="memitem:a4900cccb0d58e52358c8da6ad11ba2ed" id="r_a4900cccb0d58e52358c8da6ad11ba2ed"><td class="memItemLeft" align="right" valign="top"><a id="a4900cccb0d58e52358c8da6ad11ba2ed" name="a4900cccb0d58e52358c8da6ad11ba2ed"></a>
static ezInt32&#160;</td><td class="memItemRight" valign="bottom"><b>s_iThumbsticks</b> = 0</td></tr>
<tr class="separator:a4900cccb0d58e52358c8da6ad11ba2ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pri-methods" name="pri-methods"></a>
Private Member Functions</h2></td></tr>
<tr class="memitem:a316ab6d63bce2eadb9814d731a844b9f" id="r_a316ab6d63bce2eadb9814d731a844b9f"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d3c/classez_virtual_thumb_stick.htm#a316ab6d63bce2eadb9814d731a844b9f">InitializeDevice</a> () override</td></tr>
<tr class="memdesc:a316ab6d63bce2eadb9814d731a844b9f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Override this if you need to do device specific initialization before the first use.  <br /></td></tr>
<tr class="separator:a316ab6d63bce2eadb9814d731a844b9f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95d0c9121d41a88fbddde901e4e3cd2e" id="r_a95d0c9121d41a88fbddde901e4e3cd2e"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d3c/classez_virtual_thumb_stick.htm#a95d0c9121d41a88fbddde901e4e3cd2e">UpdateInputSlotValues</a> () override</td></tr>
<tr class="memdesc:a95d0c9121d41a88fbddde901e4e3cd2e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Override this, if you need to query the state of the hardware to update the input slots.  <br /></td></tr>
<tr class="separator:a95d0c9121d41a88fbddde901e4e3cd2e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4ec473544f54ef9a46ed87dc08f2df34" id="r_a4ec473544f54ef9a46ed87dc08f2df34"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d0/d3c/classez_virtual_thumb_stick.htm#a4ec473544f54ef9a46ed87dc08f2df34">RegisterInputSlots</a> () override</td></tr>
<tr class="memdesc:a4ec473544f54ef9a46ed87dc08f2df34"><td class="mdescLeft">&#160;</td><td class="mdescRight">Override this to register all the input slots that this device exposes.  <br /></td></tr>
<tr class="separator:a4ec473544f54ef9a46ed87dc08f2df34"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="inherited" name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_static_methods_classez_no_base"><td colspan="2" onclick="javascript:toggleInherit('pub_static_methods_classez_no_base')"><img src="../../closed.png" alt="-"/>&#160;Static Public Member Functions inherited from <a class="el" href="../../d4/d02/classez_no_base.htm">ezNoBase</a></td></tr>
<tr class="memitem:a718d4e4145a2c15d0c28aaed086f1ce2 inherit pub_static_methods_classez_no_base" id="r_a718d4e4145a2c15d0c28aaed086f1ce2"><td class="memItemLeft" align="right" valign="top">
static const <a class="el" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetStaticRTTI</b> ()</td></tr>
<tr class="separator:a718d4e4145a2c15d0c28aaed086f1ce2 inherit pub_static_methods_classez_no_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_static_methods_classez_input_device"><td colspan="2" onclick="javascript:toggleInherit('pro_static_methods_classez_input_device')"><img src="../../closed.png" alt="-"/>&#160;Static Protected Member Functions inherited from <a class="el" href="../../df/d18/classez_input_device.htm">ezInputDevice</a></td></tr>
<tr class="memitem:a69189cfb4ddbe08152e8e46fe71f842e inherit pro_static_methods_classez_input_device" id="r_a69189cfb4ddbe08152e8e46fe71f842e"><td class="memItemLeft" align="right" valign="top">
static void&#160;</td><td class="memItemRight" valign="bottom"><b>RegisterInputSlot</b> (<a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a> sName, <a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a> sDefaultDisplayName, <a class="el" href="../../d1/dec/structez_bitflags.htm">ezBitflags</a>&lt; <a class="el" href="../../df/d72/structez_input_slot_flags.htm">ezInputSlotFlags</a> &gt; SlotFlags)</td></tr>
<tr class="memdesc:a69189cfb4ddbe08152e8e46fe71f842e inherit pro_static_methods_classez_input_device"><td class="mdescLeft">&#160;</td><td class="mdescRight">Calls <a class="el" href="../../df/d18/classez_input_device.htm#a69189cfb4ddbe08152e8e46fe71f842e" title="Calls RegisterInputSlot() on the ezInputManager and passes the parameters through.">RegisterInputSlot()</a> on the <a class="el" href="../../d8/d45/classez_input_manager.htm" title="The central class to set up and query the state of all input.">ezInputManager</a> and passes the parameters through. <br /></td></tr>
<tr class="separator:a69189cfb4ddbe08152e8e46fe71f842e inherit pro_static_methods_classez_input_device"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>A Virtual Thumb-stick is an input device that transforms certain types of input (mouse / touch) into input similar to a thumb-stick on a controller. </p>
<p>A virtual thumb-stick can be used to provide an 'input device' on a touch screen, that acts like a controller thumb-stick and thus allows easier control over a game. The virtual thumb-stick takes input inside a certain screen area. It tracks the users finger movements inside this area and translates those into input from a controller thumb-stick, which it then feeds back into the input system. That makes it then possible to be mapped to input actions again. This way a game controller type of input is emulated. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a316ab6d63bce2eadb9814d731a844b9f" name="a316ab6d63bce2eadb9814d731a844b9f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a316ab6d63bce2eadb9814d731a844b9f">&#9670;&#160;</a></span>InitializeDevice()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void ezVirtualThumbStick::InitializeDevice </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">private</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Override this if you need to do device specific initialization before the first use. </p>

<p>Implements <a class="el" href="../../df/d18/classez_input_device.htm#af81b9d83d1cb91e1b84aa6dd75b94ec8">ezInputDevice</a>.</p>

</div>
</div>
<a id="a4ec473544f54ef9a46ed87dc08f2df34" name="a4ec473544f54ef9a46ed87dc08f2df34"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4ec473544f54ef9a46ed87dc08f2df34">&#9670;&#160;</a></span>RegisterInputSlots()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ezVirtualThumbStick::RegisterInputSlots </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">private</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Override this to register all the input slots that this device exposes. </p>
<p>This is called once during initialization. It needs to call <a class="el" href="../../df/d18/classez_input_device.htm#a69189cfb4ddbe08152e8e46fe71f842e" title="Calls RegisterInputSlot() on the ezInputManager and passes the parameters through.">RegisterInputSlot()</a> once for every input slot that this device exposes to the system. </p>

<p>Implements <a class="el" href="../../df/d18/classez_input_device.htm#ad70250d056a9db8e4de9195bc229ecfc">ezInputDevice</a>.</p>

</div>
</div>
<a id="a16c483cca334003050c94b73148c8de5" name="a16c483cca334003050c94b73148c8de5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a16c483cca334003050c94b73148c8de5">&#9670;&#160;</a></span>SetInputArea()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ezVirtualThumbStick::SetInputArea </td>
          <td>(</td>
          <td class="paramtype">const <a class="el" href="../../d1/df8/classez_vec2_template.htm">ezVec2</a> &amp;&#160;</td>
          <td class="paramname"><em>vLowerLeft</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d1/df8/classez_vec2_template.htm">ezVec2</a> &amp;&#160;</td>
          <td class="paramname"><em>vUpperRight</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fThumbstickRadius</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fPriority</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d3/dbc/structez_virtual_thumb_stick_1_1_center_mode.htm#a217cc61a7cf28e090edf0e95fba5f8fc">CenterMode::Enum</a>&#160;</td>
          <td class="paramname"><em>center</em> = <code><a class="el" href="../../d3/dbc/structez_virtual_thumb_stick_1_1_center_mode.htm#a217cc61a7cf28e090edf0e95fba5f8fca357743561bec587babf6aa2d139a7fd6">CenterMode::ActivationPoint</a></code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Defines the area on screen where the thumb-stick is located and accepts input. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">vLowerLeft</td><td>The lower left corner of the input area. Coordinates are in [0; 1] range (normalized screen coordinates).</td></tr>
    <tr><td class="paramname">vUpperRight</td><td>The upper right corner of the input area. Coordinates are in [0; 1] range (normalized screen coordinates).</td></tr>
    <tr><td class="paramname">fThumbstickRadius</td><td>The distance to move the touch point to create a maximum input value (1.0). With a larger radius, users have to move the finger farther for full input strength. Note that the radius is also in [0; 1] range (normalized screen coordinates).</td></tr>
    <tr><td class="paramname">fPriority</td><td>The priority of the input area. Defines which thumb-stick or other input action gets priority, if they overlap.</td></tr>
    <tr><td class="paramname">center</td><td></td></tr>
  </table>
  </dd>
</dl>
<dl class="section see"><dt>See also</dt><dd><a class="el" href="../../d3/dbc/structez_virtual_thumb_stick_1_1_center_mode.htm" title="Defines whether the thumb-stick center position is locked or relative to where the user started touch...">CenterMode</a>. </dd></dl>

</div>
</div>
<a id="a876107e78b057ce66a79ad6a89aca327" name="a876107e78b057ce66a79ad6a89aca327"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a876107e78b057ce66a79ad6a89aca327">&#9670;&#160;</a></span>SetInputCoordinateAspectRatio()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ezVirtualThumbStick::SetInputCoordinateAspectRatio </td>
          <td>(</td>
          <td class="paramtype">float&#160;</td>
          <td class="paramname"><em>fWidthDivHeight</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets the aspect ratio of the screen on which the input happens. </p>
<p>Mouse and touch input coordinates are in normalized [0; 1] coordinate space. To calculate correct input values, the aspect ratio of the screen is needed (width divided by height). Call this when the screen resolution is known. Without the correct aspect ratio, moving the finger left/right a given distance won't have the same influence as moving it up/down the same distance. </p>

</div>
</div>
<a id="a1d26a01db448fb79a91bc392bb153c63" name="a1d26a01db448fb79a91bc392bb153c63"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1d26a01db448fb79a91bc392bb153c63">&#9670;&#160;</a></span>SetThumbstickOutput()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ezVirtualThumbStick::SetThumbstickOutput </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d5/d1b/structez_virtual_thumb_stick_1_1_output.htm#a0fbc30750de57f55347f9d8684d6965b">Output::Enum</a>&#160;</td>
          <td class="paramname"><em>output</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a>&#160;</td>
          <td class="paramname"><em>sOutputLeft</em> = <code>{}</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a>&#160;</td>
          <td class="paramname"><em>sOutputRight</em> = <code>{}</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a>&#160;</td>
          <td class="paramname"><em>sOutputUp</em> = <code>{}</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d9/d18/classez_string_view.htm">ezStringView</a>&#160;</td>
          <td class="paramname"><em>sOutputDown</em> = <code>{}</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Specifies which output the thumb-stick generates. </p>
<p>If <em><a class="el" href="../../d5/d1b/structez_virtual_thumb_stick_1_1_output.htm" title="Specifies which type of output the thumb-stick shall generate.">Output</a></em> is 'Custom' the remaining parameters define which input slots the thumb-stick triggers for which direction. Otherwise the remaining parameters are ignored. </p>

</div>
</div>
<a id="a3d59fc84b0bf7472333a63e203655eb9" name="a3d59fc84b0bf7472333a63e203655eb9"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3d59fc84b0bf7472333a63e203655eb9">&#9670;&#160;</a></span>SetTriggerInputSlot()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ezVirtualThumbStick::SetTriggerInputSlot </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d8/de6/structez_virtual_thumb_stick_1_1_input.htm#afa69d36ab9d12da6c4d16fda60c6a2a3">Input::Enum</a>&#160;</td>
          <td class="paramname"><em>input</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const <a class="el" href="../../d2/dee/structez_input_action_config.htm">ezInputActionConfig</a> *&#160;</td>
          <td class="paramname"><em>pCustomConfig</em> = <code>nullptr</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Specifies from which input slots the thumb-stick is activated. </p>
<p>If <em><a class="el" href="../../d8/de6/structez_virtual_thumb_stick_1_1_input.htm" title="This enum allows to select either some default input mapping or to select &#39;Custom&#39;.">Input</a></em> is 'Custom' the remaining parameters define the filter axes and up to three input slots that trigger the thumb-stick. Otherwise the remaining parameters are ignored. </p>

</div>
</div>
<a id="a95d0c9121d41a88fbddde901e4e3cd2e" name="a95d0c9121d41a88fbddde901e4e3cd2e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a95d0c9121d41a88fbddde901e4e3cd2e">&#9670;&#160;</a></span>UpdateInputSlotValues()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ezVirtualThumbStick::UpdateInputSlotValues </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">private</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Override this, if you need to query the state of the hardware to update the input slots. </p>
<dl class="section note"><dt>Note</dt><dd>This function might be called multiple times before <a class="el" href="../../df/d18/classez_input_device.htm#a9bf9a14beeae09b78c66b77c97ab6d82" title="Override this, if you need to reset certain input slot values to zero, after the ezInputManager is fi...">ResetInputSlotValues()</a> is called. This will be the case when <a class="el" href="../../d8/d45/classez_input_manager.htm#a5da4de03391ce691ec6aa07514f01b99" title="Makes sure that hardware input is processed at this moment, which allows to do this more often than U...">ezInputManager::PollHardware</a> is used to make more frequent hardware updates than input is actually processed. Just make sure to always accumulate delta values (such as mouse move values) and don't expect <a class="el" href="../../df/d18/classez_input_device.htm#a9bf9a14beeae09b78c66b77c97ab6d82" title="Override this, if you need to reset certain input slot values to zero, after the ezInputManager is fi...">ResetInputSlotValues()</a> to be called in tandem with this function and it will be fine. </dd></dl>

<p>Implements <a class="el" href="../../df/d18/classez_input_device.htm#a45c72b370f50d7b314571fccbb0fe6e2">ezInputDevice</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Core/Input/<a class="el" href="../../d4/d22/_virtual_thumb_stick_8h_source.htm">VirtualThumbStick.h</a></li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Core/Input/Implementation/<b>VirtualThumbStick.cpp</b></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d0/d3c/classez_virtual_thumb_stick.htm">ezVirtualThumbStick</a></li>
    <li class="footer">Generated on Fri Jul 11 2025 12:18:01 for ezEngine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
