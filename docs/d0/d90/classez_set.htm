<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: ezSet&lt; KeyType, Comparer, AllocatorWrapper &gt; Class Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 24.09</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d0/d90/classez_set.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="../../d9/db5/classez_set-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ezSet&lt; KeyType, Comparer, AllocatorWrapper &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="../../dc/d09/_set_8h_source.htm">Set.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for ezSet&lt; KeyType, Comparer, AllocatorWrapper &gt;:</div>
<div class="dyncontent">
<div class="center"><img src="../../dd/d08/classez_set__inherit__graph.png" border="0" usemap="#ez_set_3_01_key_type_00_01_comparer_00_01_allocator_wrapper_01_4_inherit__map" alt="Inheritance graph"/></div>
<map name="ez_set_3_01_key_type_00_01_comparer_00_01_allocator_wrapper_01_4_inherit__map" id="ez_set_3_01_key_type_00_01_comparer_00_01_allocator_wrapper_01_4_inherit__map">
<area shape="rect" title=" " alt="" coords="25,95,228,136"/>
<area shape="rect" href="../../dc/d4b/classez_set_base.htm" title=" " alt="" coords="5,5,248,47"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a634261297c84cb1895a5a16788e5ea8a"><td class="memItemLeft" align="right" valign="top"><a id="a634261297c84cb1895a5a16788e5ea8a"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>ezSet</b> (<a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="separator:a634261297c84cb1895a5a16788e5ea8a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d1c93ba91d76e172c7a76f85854ff13"><td class="memItemLeft" align="right" valign="top"><a id="a7d1c93ba91d76e172c7a76f85854ff13"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>ezSet</b> (const Comparer &amp;comparer, <a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="separator:a7d1c93ba91d76e172c7a76f85854ff13"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab0567dc26a5b423d2d97ba92450ba423"><td class="memItemLeft" align="right" valign="top"><a id="ab0567dc26a5b423d2d97ba92450ba423"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>ezSet</b> (const <a class="el" href="../../d0/d90/classez_set.htm">ezSet</a>&lt; KeyType, Comparer, AllocatorWrapper &gt; &amp;other)</td></tr>
<tr class="separator:ab0567dc26a5b423d2d97ba92450ba423"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa527fcbd18a8751d16d4006aae78c71a"><td class="memItemLeft" align="right" valign="top"><a id="aa527fcbd18a8751d16d4006aae78c71a"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>ezSet</b> (const <a class="el" href="../../dc/d4b/classez_set_base.htm">ezSetBase</a>&lt; KeyType, Comparer &gt; &amp;other)</td></tr>
<tr class="separator:aa527fcbd18a8751d16d4006aae78c71a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaaf266efa1847b4846a14a47ab028945"><td class="memItemLeft" align="right" valign="top"><a id="aaaf266efa1847b4846a14a47ab028945"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="../../d0/d90/classez_set.htm">ezSet</a>&lt; KeyType, Comparer, AllocatorWrapper &gt; &amp;rhs)</td></tr>
<tr class="separator:aaaf266efa1847b4846a14a47ab028945"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b0ac76bfd9ca106aa4a5fa4a428fdc0"><td class="memItemLeft" align="right" valign="top"><a id="a7b0ac76bfd9ca106aa4a5fa4a428fdc0"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="../../dc/d4b/classez_set_base.htm">ezSetBase</a>&lt; KeyType, Comparer &gt; &amp;rhs)</td></tr>
<tr class="separator:a7b0ac76bfd9ca106aa4a5fa4a428fdc0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classez_set_base"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classez_set_base')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../dc/d4b/classez_set_base.htm">ezSetBase&lt; KeyType, ezCompareHelper&lt; KeyType &gt; &gt;</a></td></tr>
<tr class="memitem:a28aa829398bac4738375d27ec5b26d67 inherit pub_methods_classez_set_base"><td class="memItemLeft" align="right" valign="top"><a id="a28aa829398bac4738375d27ec5b26d67"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d4b/classez_set_base.htm#a28aa829398bac4738375d27ec5b26d67">IsEmpty</a> () const</td></tr>
<tr class="memdesc:a28aa829398bac4738375d27ec5b26d67 inherit pub_methods_classez_set_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether there are no elements in the set. O(1) operation. <br /></td></tr>
<tr class="separator:a28aa829398bac4738375d27ec5b26d67 inherit pub_methods_classez_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af8d413bb3bbec419cfbaaab5b48bca62 inherit pub_methods_classez_set_base"><td class="memItemLeft" align="right" valign="top"><a id="af8d413bb3bbec419cfbaaab5b48bca62"></a>
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d4b/classez_set_base.htm#af8d413bb3bbec419cfbaaab5b48bca62">GetCount</a> () const</td></tr>
<tr class="memdesc:af8d413bb3bbec419cfbaaab5b48bca62 inherit pub_methods_classez_set_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of elements currently stored in the set. O(1) operation. <br /></td></tr>
<tr class="separator:af8d413bb3bbec419cfbaaab5b48bca62 inherit pub_methods_classez_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf9b11b02b7dc68cd4a4d95f2e678ce5 inherit pub_methods_classez_set_base"><td class="memItemLeft" align="right" valign="top"><a id="aaf9b11b02b7dc68cd4a4d95f2e678ce5"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d4b/classez_set_base.htm#aaf9b11b02b7dc68cd4a4d95f2e678ce5">Clear</a> ()</td></tr>
<tr class="memdesc:aaf9b11b02b7dc68cd4a4d95f2e678ce5 inherit pub_methods_classez_set_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys all elements in the set and resets its size to zero. <br /></td></tr>
<tr class="separator:aaf9b11b02b7dc68cd4a4d95f2e678ce5 inherit pub_methods_classez_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a0df40f4bd4f84e5c6ca4e908daad44 inherit pub_methods_classez_set_base"><td class="memItemLeft" align="right" valign="top"><a id="a9a0df40f4bd4f84e5c6ca4e908daad44"></a>
Iterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d4b/classez_set_base.htm#a9a0df40f4bd4f84e5c6ca4e908daad44">GetIterator</a> () const</td></tr>
<tr class="memdesc:a9a0df40f4bd4f84e5c6ca4e908daad44 inherit pub_methods_classez_set_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a constant Iterator to the very first element. <br /></td></tr>
<tr class="separator:a9a0df40f4bd4f84e5c6ca4e908daad44 inherit pub_methods_classez_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87c31cbcf3db1e75fe5742e88373e710 inherit pub_methods_classez_set_base"><td class="memItemLeft" align="right" valign="top"><a id="a87c31cbcf3db1e75fe5742e88373e710"></a>
ReverseIterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d4b/classez_set_base.htm#a87c31cbcf3db1e75fe5742e88373e710">GetReverseIterator</a> () const</td></tr>
<tr class="memdesc:a87c31cbcf3db1e75fe5742e88373e710 inherit pub_methods_classez_set_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a constant ReverseIterator to the very last element. <br /></td></tr>
<tr class="separator:a87c31cbcf3db1e75fe5742e88373e710 inherit pub_methods_classez_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48fcf3d5be80596908f4daebfe984bf4 inherit pub_methods_classez_set_base"><td class="memItemLeft" align="right" valign="top"><a id="a48fcf3d5be80596908f4daebfe984bf4"></a>
Iterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d4b/classez_set_base.htm#a48fcf3d5be80596908f4daebfe984bf4">Insert</a> (CompatibleKeyType &amp;&amp;key)</td></tr>
<tr class="memdesc:a48fcf3d5be80596908f4daebfe984bf4 inherit pub_methods_classez_set_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inserts the key into the tree and returns an Iterator to it. O(log n) operation. <br /></td></tr>
<tr class="separator:a48fcf3d5be80596908f4daebfe984bf4 inherit pub_methods_classez_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8873ec8c8c39b9ee1735ab9f4d026cd8 inherit pub_methods_classez_set_base"><td class="memItemLeft" align="right" valign="top"><a id="a8873ec8c8c39b9ee1735ab9f4d026cd8"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d4b/classez_set_base.htm#a8873ec8c8c39b9ee1735ab9f4d026cd8">Remove</a> (const CompatibleKeyType &amp;key)</td></tr>
<tr class="memdesc:a8873ec8c8c39b9ee1735ab9f4d026cd8 inherit pub_methods_classez_set_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Erases the element with the given key, if it exists. O(log n) operation. <br /></td></tr>
<tr class="separator:a8873ec8c8c39b9ee1735ab9f4d026cd8 inherit pub_methods_classez_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa70ba7d1d3d97df83dac701b08889523 inherit pub_methods_classez_set_base"><td class="memItemLeft" align="right" valign="top"><a id="aa70ba7d1d3d97df83dac701b08889523"></a>
Iterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d4b/classez_set_base.htm#aa70ba7d1d3d97df83dac701b08889523">Remove</a> (const Iterator &amp;pos)</td></tr>
<tr class="memdesc:aa70ba7d1d3d97df83dac701b08889523 inherit pub_methods_classez_set_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Erases the element at the given Iterator. O(log n) operation. <br /></td></tr>
<tr class="separator:aa70ba7d1d3d97df83dac701b08889523 inherit pub_methods_classez_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a51740c019dcc0da6afa1bad6b970486a inherit pub_methods_classez_set_base"><td class="memItemLeft" align="right" valign="top"><a id="a51740c019dcc0da6afa1bad6b970486a"></a>
Iterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d4b/classez_set_base.htm#a51740c019dcc0da6afa1bad6b970486a">Find</a> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="memdesc:a51740c019dcc0da6afa1bad6b970486a inherit pub_methods_classez_set_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Searches for key, returns an Iterator to it or an invalid iterator, if no such key is found. O(log n) operation. <br /></td></tr>
<tr class="separator:a51740c019dcc0da6afa1bad6b970486a inherit pub_methods_classez_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4e626ddcd813fe8a30017c5bd7f38c67 inherit pub_methods_classez_set_base"><td class="memItemLeft" align="right" valign="top"><a id="a4e626ddcd813fe8a30017c5bd7f38c67"></a>
EZ_ALWAYS_INLINE <a class="el" href="../../dc/d4b/classez_set_base.htm">ezSetBase</a>&lt; KeyType, <a class="el" href="../../df/d11/structez_compare_helper.htm">ezCompareHelper</a>&lt; KeyType &gt; &gt;::Iterator&#160;</td><td class="memItemRight" valign="bottom"><b>Find</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="separator:a4e626ddcd813fe8a30017c5bd7f38c67 inherit pub_methods_classez_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29e6ff286c2883e3f3a2c647d7a225db inherit pub_methods_classez_set_base"><td class="memItemLeft" align="right" valign="top"><a id="a29e6ff286c2883e3f3a2c647d7a225db"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d4b/classez_set_base.htm#a29e6ff286c2883e3f3a2c647d7a225db">Contains</a> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="memdesc:a29e6ff286c2883e3f3a2c647d7a225db inherit pub_methods_classez_set_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether the given key is in the container. <br /></td></tr>
<tr class="separator:a29e6ff286c2883e3f3a2c647d7a225db inherit pub_methods_classez_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc7cd0e0019df2075866bc7e86dd5ddf inherit pub_methods_classez_set_base"><td class="memItemLeft" align="right" valign="top"><a id="afc7cd0e0019df2075866bc7e86dd5ddf"></a>
EZ_ALWAYS_INLINE bool&#160;</td><td class="memItemRight" valign="bottom"><b>Contains</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="separator:afc7cd0e0019df2075866bc7e86dd5ddf inherit pub_methods_classez_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e3d6dec6e73f77bd804ccd051b12e4c inherit pub_methods_classez_set_base"><td class="memItemLeft" align="right" valign="top"><a id="a7e3d6dec6e73f77bd804ccd051b12e4c"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d4b/classez_set_base.htm#a7e3d6dec6e73f77bd804ccd051b12e4c">ContainsSet</a> (const <a class="el" href="../../dc/d4b/classez_set_base.htm">ezSetBase</a>&lt; KeyType, <a class="el" href="../../df/d11/structez_compare_helper.htm">ezCompareHelper</a>&lt; KeyType &gt; &gt; &amp;operand) const</td></tr>
<tr class="memdesc:a7e3d6dec6e73f77bd804ccd051b12e4c inherit pub_methods_classez_set_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether all keys of the given set are in the container. <br /></td></tr>
<tr class="separator:a7e3d6dec6e73f77bd804ccd051b12e4c inherit pub_methods_classez_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ae601269a798870895be7818e07d0cb inherit pub_methods_classez_set_base"><td class="memItemLeft" align="right" valign="top"><a id="a5ae601269a798870895be7818e07d0cb"></a>
Iterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d4b/classez_set_base.htm#a5ae601269a798870895be7818e07d0cb">LowerBound</a> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="memdesc:a5ae601269a798870895be7818e07d0cb inherit pub_methods_classez_set_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an Iterator to the element with a key equal or larger than the given key. Returns an invalid iterator, if there is no such element. <br /></td></tr>
<tr class="separator:a5ae601269a798870895be7818e07d0cb inherit pub_methods_classez_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a69de249d039573a2d79ad0ff1971ec27 inherit pub_methods_classez_set_base"><td class="memItemLeft" align="right" valign="top"><a id="a69de249d039573a2d79ad0ff1971ec27"></a>
EZ_ALWAYS_INLINE <a class="el" href="../../dc/d4b/classez_set_base.htm">ezSetBase</a>&lt; KeyType, <a class="el" href="../../df/d11/structez_compare_helper.htm">ezCompareHelper</a>&lt; KeyType &gt; &gt;::Iterator&#160;</td><td class="memItemRight" valign="bottom"><b>LowerBound</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="separator:a69de249d039573a2d79ad0ff1971ec27 inherit pub_methods_classez_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a165e4059d89375b118570be343a704de inherit pub_methods_classez_set_base"><td class="memItemLeft" align="right" valign="top"><a id="a165e4059d89375b118570be343a704de"></a>
Iterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d4b/classez_set_base.htm#a165e4059d89375b118570be343a704de">UpperBound</a> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="memdesc:a165e4059d89375b118570be343a704de inherit pub_methods_classez_set_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an Iterator to the element with a key that is LARGER than the given key. Returns an invalid iterator, if there is no such element. <br /></td></tr>
<tr class="separator:a165e4059d89375b118570be343a704de inherit pub_methods_classez_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a97ce9467d3891c30d7d1a5fc98613c9b inherit pub_methods_classez_set_base"><td class="memItemLeft" align="right" valign="top"><a id="a97ce9467d3891c30d7d1a5fc98613c9b"></a>
EZ_ALWAYS_INLINE <a class="el" href="../../dc/d4b/classez_set_base.htm">ezSetBase</a>&lt; KeyType, <a class="el" href="../../df/d11/structez_compare_helper.htm">ezCompareHelper</a>&lt; KeyType &gt; &gt;::Iterator&#160;</td><td class="memItemRight" valign="bottom"><b>UpperBound</b> (const CompatibleKeyType &amp;key) const</td></tr>
<tr class="separator:a97ce9467d3891c30d7d1a5fc98613c9b inherit pub_methods_classez_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aee636569824a7ccbae563839dd50ec57 inherit pub_methods_classez_set_base"><td class="memItemLeft" align="right" valign="top"><a id="aee636569824a7ccbae563839dd50ec57"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d4b/classez_set_base.htm#aee636569824a7ccbae563839dd50ec57">Union</a> (const <a class="el" href="../../dc/d4b/classez_set_base.htm">ezSetBase</a>&lt; KeyType, <a class="el" href="../../df/d11/structez_compare_helper.htm">ezCompareHelper</a>&lt; KeyType &gt; &gt; &amp;operand)</td></tr>
<tr class="memdesc:aee636569824a7ccbae563839dd50ec57 inherit pub_methods_classez_set_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Makes this set the union of itself and the operand. <br /></td></tr>
<tr class="separator:aee636569824a7ccbae563839dd50ec57 inherit pub_methods_classez_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6cd727af03c407c8807c19b2b2ace759 inherit pub_methods_classez_set_base"><td class="memItemLeft" align="right" valign="top"><a id="a6cd727af03c407c8807c19b2b2ace759"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d4b/classez_set_base.htm#a6cd727af03c407c8807c19b2b2ace759">Difference</a> (const <a class="el" href="../../dc/d4b/classez_set_base.htm">ezSetBase</a>&lt; KeyType, <a class="el" href="../../df/d11/structez_compare_helper.htm">ezCompareHelper</a>&lt; KeyType &gt; &gt; &amp;operand)</td></tr>
<tr class="memdesc:a6cd727af03c407c8807c19b2b2ace759 inherit pub_methods_classez_set_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Makes this set the difference of itself and the operand, i.e. subtracts operand. <br /></td></tr>
<tr class="separator:a6cd727af03c407c8807c19b2b2ace759 inherit pub_methods_classez_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a463675853c88dd0a90d44bba4dd95b3e inherit pub_methods_classez_set_base"><td class="memItemLeft" align="right" valign="top"><a id="a463675853c88dd0a90d44bba4dd95b3e"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d4b/classez_set_base.htm#a463675853c88dd0a90d44bba4dd95b3e">Intersection</a> (const <a class="el" href="../../dc/d4b/classez_set_base.htm">ezSetBase</a>&lt; KeyType, <a class="el" href="../../df/d11/structez_compare_helper.htm">ezCompareHelper</a>&lt; KeyType &gt; &gt; &amp;operand)</td></tr>
<tr class="memdesc:a463675853c88dd0a90d44bba4dd95b3e inherit pub_methods_classez_set_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Makes this set the intersection of itself and the operand. <br /></td></tr>
<tr class="separator:a463675853c88dd0a90d44bba4dd95b3e inherit pub_methods_classez_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a616d8586a9889ffb290c7af3f4bc2de0 inherit pub_methods_classez_set_base"><td class="memItemLeft" align="right" valign="top"><a id="a616d8586a9889ffb290c7af3f4bc2de0"></a>
<a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d4b/classez_set_base.htm#a616d8586a9889ffb290c7af3f4bc2de0">GetAllocator</a> () const</td></tr>
<tr class="memdesc:a616d8586a9889ffb290c7af3f4bc2de0 inherit pub_methods_classez_set_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the allocator that is used by this instance. <br /></td></tr>
<tr class="separator:a616d8586a9889ffb290c7af3f4bc2de0 inherit pub_methods_classez_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c086e931d3c985838274f22f3fcd466 inherit pub_methods_classez_set_base"><td class="memItemLeft" align="right" valign="top"><a id="a9c086e931d3c985838274f22f3fcd466"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d4b/classez_set_base.htm#a9c086e931d3c985838274f22f3fcd466">operator==</a> (const <a class="el" href="../../dc/d4b/classez_set_base.htm">ezSetBase</a>&lt; KeyType, <a class="el" href="../../df/d11/structez_compare_helper.htm">ezCompareHelper</a>&lt; KeyType &gt; &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:a9c086e931d3c985838274f22f3fcd466 inherit pub_methods_classez_set_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Comparison operator. <br /></td></tr>
<tr class="separator:a9c086e931d3c985838274f22f3fcd466 inherit pub_methods_classez_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0fda6f645c8aa50ee817ed41894b1874 inherit pub_methods_classez_set_base"><td class="memItemLeft" align="right" valign="top"><a id="a0fda6f645c8aa50ee817ed41894b1874"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>EZ_ADD_DEFAULT_OPERATOR_NOTEQUAL</b> (const <a class="el" href="../../dc/d4b/classez_set_base.htm">ezSetBase</a>&lt; KeyType, <a class="el" href="../../df/d11/structez_compare_helper.htm">ezCompareHelper</a>&lt; KeyType &gt; &gt; &amp;)</td></tr>
<tr class="separator:a0fda6f645c8aa50ee817ed41894b1874 inherit pub_methods_classez_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a32d1b5c5da96fcdb49b20d719ed2af17 inherit pub_methods_classez_set_base"><td class="memItemLeft" align="right" valign="top"><a id="a32d1b5c5da96fcdb49b20d719ed2af17"></a>
ezUInt64&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d4b/classez_set_base.htm#a32d1b5c5da96fcdb49b20d719ed2af17">GetHeapMemoryUsage</a> () const</td></tr>
<tr class="memdesc:a32d1b5c5da96fcdb49b20d719ed2af17 inherit pub_methods_classez_set_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the amount of bytes that are currently allocated on the heap. <br /></td></tr>
<tr class="separator:a32d1b5c5da96fcdb49b20d719ed2af17 inherit pub_methods_classez_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9fddb61a95208ee0431f553e512959bd inherit pub_methods_classez_set_base"><td class="memItemLeft" align="right" valign="top"><a id="a9fddb61a95208ee0431f553e512959bd"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d4b/classez_set_base.htm#a9fddb61a95208ee0431f553e512959bd">Swap</a> (<a class="el" href="../../dc/d4b/classez_set_base.htm">ezSetBase</a>&lt; KeyType, <a class="el" href="../../df/d11/structez_compare_helper.htm">ezCompareHelper</a>&lt; KeyType &gt; &gt; &amp;other)</td></tr>
<tr class="memdesc:a9fddb61a95208ee0431f553e512959bd inherit pub_methods_classez_set_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Swaps this map with the other one. <br /></td></tr>
<tr class="separator:a9fddb61a95208ee0431f553e512959bd inherit pub_methods_classez_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_types_classez_set_base"><td colspan="2" onclick="javascript:toggleInherit('pub_types_classez_set_base')"><img src="../../closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="../../dc/d4b/classez_set_base.htm">ezSetBase&lt; KeyType, ezCompareHelper&lt; KeyType &gt; &gt;</a></td></tr>
<tr class="memitem:a362edc3a57ab61ab277741950eeafd7a inherit pub_types_classez_set_base"><td class="memItemLeft" align="right" valign="top"><a id="a362edc3a57ab61ab277741950eeafd7a"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>Iterator</b> = IteratorBase&lt; false &gt;</td></tr>
<tr class="separator:a362edc3a57ab61ab277741950eeafd7a inherit pub_types_classez_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a89139af66c554adf3280d3786e109160 inherit pub_types_classez_set_base"><td class="memItemLeft" align="right" valign="top"><a id="a89139af66c554adf3280d3786e109160"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>ReverseIterator</b> = IteratorBase&lt; true &gt;</td></tr>
<tr class="separator:a89139af66c554adf3280d3786e109160 inherit pub_types_classez_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classez_set_base"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classez_set_base')"><img src="../../closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="../../dc/d4b/classez_set_base.htm">ezSetBase&lt; KeyType, ezCompareHelper&lt; KeyType &gt; &gt;</a></td></tr>
<tr class="memitem:ae7da5ef28a632c58b48aada88d15a211 inherit pro_methods_classez_set_base"><td class="memItemLeft" align="right" valign="top"><a id="ae7da5ef28a632c58b48aada88d15a211"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d4b/classez_set_base.htm#ae7da5ef28a632c58b48aada88d15a211">ezSetBase</a> (const <a class="el" href="../../df/d11/structez_compare_helper.htm">ezCompareHelper</a>&lt; KeyType &gt; &amp;comparer, <a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:ae7da5ef28a632c58b48aada88d15a211 inherit pro_methods_classez_set_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initializes the set to be empty. <br /></td></tr>
<tr class="separator:ae7da5ef28a632c58b48aada88d15a211 inherit pro_methods_classez_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a67f88b738c4db3444e2355407b0db87e inherit pro_methods_classez_set_base"><td class="memItemLeft" align="right" valign="top"><a id="a67f88b738c4db3444e2355407b0db87e"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d4b/classez_set_base.htm#a67f88b738c4db3444e2355407b0db87e">ezSetBase</a> (const <a class="el" href="../../dc/d4b/classez_set_base.htm">ezSetBase</a>&lt; KeyType, <a class="el" href="../../df/d11/structez_compare_helper.htm">ezCompareHelper</a>&lt; KeyType &gt; &gt; &amp;cc, <a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:a67f88b738c4db3444e2355407b0db87e inherit pro_methods_classez_set_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies all keys from the given set into this one. <br /></td></tr>
<tr class="separator:a67f88b738c4db3444e2355407b0db87e inherit pro_methods_classez_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a79935f77e8e9e1f058537d4e1f396b3c inherit pro_methods_classez_set_base"><td class="memItemLeft" align="right" valign="top"><a id="a79935f77e8e9e1f058537d4e1f396b3c"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d4b/classez_set_base.htm#a79935f77e8e9e1f058537d4e1f396b3c">~ezSetBase</a> ()</td></tr>
<tr class="memdesc:a79935f77e8e9e1f058537d4e1f396b3c inherit pro_methods_classez_set_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys all elements in the set. <br /></td></tr>
<tr class="separator:a79935f77e8e9e1f058537d4e1f396b3c inherit pro_methods_classez_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a31c031cf509d78327fec1c4f23b775f6 inherit pro_methods_classez_set_base"><td class="memItemLeft" align="right" valign="top"><a id="a31c031cf509d78327fec1c4f23b775f6"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../dc/d4b/classez_set_base.htm#a31c031cf509d78327fec1c4f23b775f6">operator=</a> (const <a class="el" href="../../dc/d4b/classez_set_base.htm">ezSetBase</a>&lt; KeyType, <a class="el" href="../../df/d11/structez_compare_helper.htm">ezCompareHelper</a>&lt; KeyType &gt; &gt; &amp;rhs)</td></tr>
<tr class="memdesc:a31c031cf509d78327fec1c4f23b775f6 inherit pro_methods_classez_set_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies all keys from the given set into this one. <br /></td></tr>
<tr class="separator:a31c031cf509d78327fec1c4f23b775f6 inherit pro_methods_classez_set_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename KeyType, typename Comparer = ezCompareHelper&lt;KeyType&gt;, typename AllocatorWrapper = ezDefaultAllocatorWrapper&gt;<br />
class ezSet&lt; KeyType, Comparer, AllocatorWrapper &gt;</h3>

<dl class="section see"><dt>See also</dt><dd><a class="el" href="../../dc/d4b/classez_set_base.htm" title="A set container that only stores whether an element resides in it or not. Similar to STL::set.">ezSetBase</a> </dd></dl>
</div><hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Containers/<a class="el" href="../../dc/d09/_set_8h_source.htm">Set.h</a></li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Containers/Implementation/<a class="el" href="../../db/dc1/_set__inl_8h_source.htm">Set_inl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d0/d90/classez_set.htm">ezSet</a></li>
    <li class="footer">Generated on Sun Aug 25 2024 13:06:33 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
