<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: Member List</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 21.10</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d3/d88/classez_string_builder.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">ezStringBuilder Member List</div>  </div>
</div><!--header-->
<div class="contents">

<p>This is the complete list of members for <a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>, including all inherited members.</p>
<table class="directory">
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#a605f325ea4c9c3242454a16657e24ef7">Append</a>(ezUInt32 uiChar)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#abeb5eb562d24b4c7c6b8819900e28766">Append</a>(const wchar_t *pData1, const wchar_t *pData2=nullptr, const wchar_t *pData3=nullptr, const wchar_t *pData4=nullptr, const wchar_t *pData5=nullptr, const wchar_t *pData6=nullptr)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#aae90b3f0f7f69c75e2db4f01e0b11de7">Append</a>(const char *pData1, const char *pData2=nullptr, const char *pData3=nullptr, const char *pData4=nullptr, const char *pData5=nullptr, const char *pData6=nullptr)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#a1e0862602db949365d8206a728c0c164">Append</a>(const ezStringView &amp;view)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#aa405316a4995b2fd4883d42f74db9f9a">AppendFormat</a>(const ezFormatString &amp;string)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#a2af0cad3e9a5baec55a556dd1401708c">AppendFormat</a>(const char *szFormat, ARGS &amp;&amp;... args)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#ac6b96e398a7232a42c307c753e34b6d8">AppendPath</a>(const char *szPath1, const char *szPath2=nullptr, const char *szPath3=nullptr, const char *szPath4=nullptr)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#a8049f9a06c591c5f9b6eb11dafe305d0">AppendWithSeparator</a>(ezStringView separator, ezStringView sText1, ezStringView sText2=ezStringView(), ezStringView sText3=ezStringView(), ezStringView sText4=ezStringView(), ezStringView sText5=ezStringView(), ezStringView sText6=ezStringView())</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#a30892f8031346691835a90f009973138">ChangeCharacter</a>(iterator &amp;it, ezUInt32 uiCharacter)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#ab8eb36e09536e1e5744d9ea43fc2129a">ChangeFileExtension</a>(const char *szNewExtension)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#a9f7de9b6f730f3d75ea16c91a4704dcb">ChangeFileName</a>(const char *szNewFileName)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#ad11fb9e700b2c6633d24e687dae62011">ChangeFileNameAndExtension</a>(const char *szNewFileNameWithExtension)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#a162e5eb18bb60fd044c2fbbcdfa79228">Clear</a>()</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../dd/d69/structez_string_base.htm#a8db4d1eaa1ad5ad01395f3d08eb1a0c2">Compare</a>(const char *pString2) const</td><td class="entry"><a class="el" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt; ezStringBuilder &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../dd/d69/structez_string_base.htm#a48e98ad28e9cc6c0a3d436b802149443">Compare_NoCase</a>(const char *pString2) const</td><td class="entry"><a class="el" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt; ezStringBuilder &gt;</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../dd/d69/structez_string_base.htm#a5fcc6b07403fe714f7823f06e51ed419">CompareN</a>(const char *pString2, ezUInt32 uiCharsToCompare) const</td><td class="entry"><a class="el" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt; ezStringBuilder &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../dd/d69/structez_string_base.htm#af924cf1e0bc6a35338229a7e9ad505a8">CompareN_NoCase</a>(const char *pString2, ezUInt32 uiCharsToCompare) const</td><td class="entry"><a class="el" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt; ezStringBuilder &gt;</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../dd/d69/structez_string_base.htm#a05bec3cf5581b35aa18849239b2471c6">ComputeCharacterPosition</a>(ezUInt32 uiCharacterIndex) const</td><td class="entry"><a class="el" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt; ezStringBuilder &gt;</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>const_iterator</b> typedef (defined in <a class="el" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt; ezStringBuilder &gt;</a>)</td><td class="entry"><a class="el" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt; ezStringBuilder &gt;</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>const_reverse_iterator</b> typedef (defined in <a class="el" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt; ezStringBuilder &gt;</a>)</td><td class="entry"><a class="el" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt; ezStringBuilder &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../dd/d69/structez_string_base.htm#afb83fb2fc2655dfdfea37ef6ae13ef30">EndsWith</a>(const char *szEndsWith) const</td><td class="entry"><a class="el" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt; ezStringBuilder &gt;</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../dd/d69/structez_string_base.htm#a1d4ac2126f45dcb7c567dee949cc68ab">EndsWith_NoCase</a>(const char *szEndsWith) const</td><td class="entry"><a class="el" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt; ezStringBuilder &gt;</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>ezHybridStringBase</b> (defined in <a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a>)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"><span class="mlabel">friend</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#aae3cd3eb70eabea17763d6a7200fe311">ezStringBuilder</a>(ezAllocatorBase *pAllocator=ezFoundation::GetDefaultAllocator())</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#a0eff19ce3b5583ef753b658e019518e7">ezStringBuilder</a>(const ezStringBuilder &amp;rhs)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#a04e87df39f893e06bdb918c8cfd954db">ezStringBuilder</a>(ezStringBuilder &amp;&amp;rhs) noexcept</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#aac726d09612fe6a06cfad3d144cda7ab">ezStringBuilder</a>(const ezHybridStringBase&lt; Size &gt; &amp;rhs)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#a38ab7f804a615884732786ffd71381cc">ezStringBuilder</a>(const ezHybridString&lt; Size, A &gt; &amp;rhs)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#a6e16d660aed7c664987c73b0f44828ba">ezStringBuilder</a>(ezHybridStringBase&lt; Size &gt; &amp;&amp;rhs)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#a266bc4e41bc7247f3094ab0b2555cdcf">ezStringBuilder</a>(ezHybridString&lt; Size, A &gt; &amp;&amp;rhs)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#a2a2caab08e8a9a776da5bcad863d3d15">ezStringBuilder</a>(const char *pData1, const char *pData2, const char *pData3=nullptr, const char *pData4=nullptr, const char *pData5=nullptr, const char *pData6=nullptr)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#a55946185f5a252a8ecde7048e2646e18">ezStringBuilder</a>(const char *szUTF8, ezAllocatorBase *pAllocator=ezFoundation::GetDefaultAllocator())</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#a45dfa156bdea76762a890bcf8df27fd8">ezStringBuilder</a>(const wchar_t *szWChar, ezAllocatorBase *pAllocator=ezFoundation::GetDefaultAllocator())</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#aeaa536460686d538948a19a2f40554f1">ezStringBuilder</a>(const ezStringView &amp;rhs, ezAllocatorBase *pAllocator=ezFoundation::GetDefaultAllocator())</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../dd/d69/structez_string_base.htm#a44351ea491df5b7db1095dde6e6299c5">FindLastSubString</a>(const char *szStringToFind, const char *szStartSearchAt=nullptr) const</td><td class="entry"><a class="el" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt; ezStringBuilder &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../dd/d69/structez_string_base.htm#a0c0563a267bee66f3a1f76cf08af153f">FindLastSubString_NoCase</a>(const char *szStringToFind, const char *szStartSearchAt=nullptr) const</td><td class="entry"><a class="el" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt; ezStringBuilder &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../dd/d69/structez_string_base.htm#af672ce6437cd3c9d17b3267cfa834b48">FindSubString</a>(const char *szStringToFind, const char *szStartSearchAt=nullptr) const</td><td class="entry"><a class="el" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt; ezStringBuilder &gt;</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../dd/d69/structez_string_base.htm#a139af1709f27a801b784a3f4bd2c12ed">FindSubString_NoCase</a>(const char *szStringToFind, const char *szStartSearchAt=nullptr) const</td><td class="entry"><a class="el" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt; ezStringBuilder &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../dd/d69/structez_string_base.htm#a7990e9f9c36231cd41af33a25f96dbc6">FindWholeWord</a>(const char *szSearchFor, ezStringUtils::EZ_CHARACTER_FILTER IsDelimiterCB, const char *szStartSearchAt=nullptr) const</td><td class="entry"><a class="el" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt; ezStringBuilder &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../dd/d69/structez_string_base.htm#a696c890e2e534cfc0af94091f0f0a5f6">FindWholeWord_NoCase</a>(const char *szSearchFor, ezStringUtils::EZ_CHARACTER_FILTER IsDelimiterCB, const char *szStartSearchAt=nullptr) const</td><td class="entry"><a class="el" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt; ezStringBuilder &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#af2cccf2c238ff48182428aa9464a615e">Format</a>(const ezFormatString &amp;string)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#acc6421d53a2932f4fed29e2b8a312118">Format</a>(const char *szFormat, ARGS &amp;&amp;... args)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#a79d01c58613d2704c36a582db95b1e42">GetAllocator</a>() const</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#a0a3a36dcfd096259e15f167e2bd6ca07">GetCharacterCount</a>() const</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#a3063473d38e978ef950a11d302983bba">GetData</a>() const</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#a946ff0b7b84634095a79a548777b51fd">GetElementCount</a>() const</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#a20f0efd1e9666494ca11fb1495bcbf73">GetFileDirectory</a>() const</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#adf39deb8045ac38ec59f18b14fd77d7c">GetFileExtension</a>() const</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#acf870607ef58a5899a139868ac2aa4bf">GetFileName</a>() const</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#adb91acdad116235acba89117ad5de589">GetFileNameAndExtension</a>() const</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#ae1944172cbf1eeb3faef4c4ae8c7c942">GetHeapMemoryUsage</a>() const</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../dd/d69/structez_string_base.htm#a3821af6b610f6c40a46336f7accc0c7e">GetIteratorBack</a>() const</td><td class="entry"><a class="el" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt; ezStringBuilder &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../dd/d69/structez_string_base.htm#a630aa4b168172aef7b32f8085148ed8e">GetIteratorFront</a>() const</td><td class="entry"><a class="el" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt; ezStringBuilder &gt;</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#af28ee56b65ef97cb7f5cd3b45f503019">GetRootedPathRootName</a>() const</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#ada4ae74d30a0ec1d027123f6e1ae6e8e">GetView</a>() const</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#adca3d6d8405f4ceb59e42a6cf79190a6">HasAnyExtension</a>() const</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#ae7edf5fa09c8095b876ebe14744175eb">HasExtension</a>(const char *szExtension) const</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#a8d35fbf420bed080094ffd42141656db">Insert</a>(const char *szInsertAtPos, const ezStringView &amp;szTextToInsert)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#a28f1b234f7f346757bfd3dfa3b41450c">IsAbsolutePath</a>() const</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../dd/d69/structez_string_base.htm#a3b169646f62ef8a8d33b63e2b8731afb">IsEmpty</a>() const</td><td class="entry"><a class="el" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt; ezStringBuilder &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../dd/d69/structez_string_base.htm#a6517806293ce84badc8da6c5d01c67cf">IsEqual</a>(const char *pString2) const</td><td class="entry"><a class="el" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt; ezStringBuilder &gt;</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../dd/d69/structez_string_base.htm#aba99a929eb858f565e1fa332b6b03723">IsEqual_NoCase</a>(const char *pString2) const</td><td class="entry"><a class="el" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt; ezStringBuilder &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../dd/d69/structez_string_base.htm#a77bcaa8c3cc64c21d1311e45033ffae3">IsEqualN</a>(const char *pString2, ezUInt32 uiCharsToCompare) const</td><td class="entry"><a class="el" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt; ezStringBuilder &gt;</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../dd/d69/structez_string_base.htm#ada89e0455b0a9bc13e76af36abb3cf8b">IsEqualN_NoCase</a>(const char *pString2, ezUInt32 uiCharsToCompare) const</td><td class="entry"><a class="el" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt; ezStringBuilder &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#a5dfcc70fecd5f6493c82513c523b676f">IsPathBelowFolder</a>(const char *szPathToFolder)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#ac36f8202651a4273fcc6ac38b3116bda">IsPureASCII</a>() const</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#aef98e02aad87a198d1b3d9bc3f23ca37">IsRelativePath</a>() const</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#a3dcc5f63ea6302ef729fc6af6c23ef5c">IsRootedPath</a>() const</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>iterator</b> typedef (defined in <a class="el" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt; ezStringBuilder &gt;</a>)</td><td class="entry"><a class="el" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt; ezStringBuilder &gt;</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#acb4e8da454e08207f376cb95ec372878">MakeCleanPath</a>()</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#ac851131c262fee1f9ae7a9e3e16da31b">MakePathSeparatorsNative</a>()</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#a0f424155f13f3b6e6596b6e1e032c682">MakeRelativeTo</a>(const char *szAbsolutePathToMakeThisRelativeTo)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#a9187845cffa1b5c7b921a6b34ba80dd0">operator const char *</a>() const</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#adcad83a62b2769887a7d405e0f4b6453">operator ezStringView</a>() const</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#a97d0149bd32e043f5177ac63e172b2dd">operator=</a>(const ezStringBuilder &amp;rhs)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#ab2b87a1bec387cbcfe36629b6560957f">operator=</a>(ezStringBuilder &amp;&amp;rhs) noexcept</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#adc69c60c893d5e43cd3595236e68f26b">operator=</a>(const char *szUTF8)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#a5bc23091233479a950adb7b23f2ecda7">operator=</a>(const wchar_t *szWChar)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#ad60738ac0958f8c81432d3fef737c7d9">operator=</a>(const ezStringView &amp;rhs)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#afe3059b8d9cc7fb696bf12777b58299f">operator=</a>(const ezHybridStringBase&lt; Size &gt; &amp;rhs)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#a90e96e864b3a3558c15d075e5003bf5b">operator=</a>(const ezHybridString&lt; Size, A &gt; &amp;rhs)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#af0dabcebf009530ed5105e0f007427bf">operator=</a>(ezHybridStringBase&lt; Size &gt; &amp;&amp;rhs)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#a12236c90721b3462e8606dd7d7d12433">operator=</a>(ezHybridString&lt; Size, A &gt; &amp;&amp;rhs) noexcept</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#a40dff448589cc69f85fce8d72922ae22">PathParentDirectory</a>(ezUInt32 uiLevelsUp=1)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#a2f2c181d7a18b4296425754854710f6b">Prepend</a>(ezUInt32 uiChar)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#a59f53f467d198e72c0e284a587ca73fa">Prepend</a>(const wchar_t *pData1, const wchar_t *pData2=nullptr, const wchar_t *pData3=nullptr, const wchar_t *pData4=nullptr, const wchar_t *pData5=nullptr, const wchar_t *pData6=nullptr)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#a629af271ba749ae037dbad0348ed7a83">Prepend</a>(const char *pData1, const char *pData2=nullptr, const char *pData3=nullptr, const char *pData4=nullptr, const char *pData5=nullptr, const char *pData6=nullptr)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#ab01f5cc58b199e7e202eb9d9434b8e34">PrependFormat</a>(const ezFormatString &amp;string)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#a0aab851b5f86af410d3c54df6dbdb903">PrependFormat</a>(const char *szFormat, ARGS &amp;&amp;... args)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#a8f712ff307c41dd8d283cbf0065f0e3e">Printf</a>(const char *szUtf8Format,...)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#a151314ba1540ff84eaebb6559b3d8dc2">PrintfArgs</a>(const char *szUtf8Format, va_list args)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#a2901984d210a104541d4cbacdeb2995b">ReadAll</a>(ezStreamReader &amp;Stream)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#ad9e3819efaa857a532b63a7c204f5b5f">Remove</a>(const char *szRemoveFromPos, const char *szRemoveToPos)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#a23ee68002fe5a88d9e42af5e71a89548">RemoveFileExtension</a>()</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#acff67e45f952634bf638540ff3cf96ca">ReplaceAll</a>(const char *szSearchFor, const ezStringView &amp;szReplacement)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#ae825dadcbc20537e0313e7482bce6a16">ReplaceAll_NoCase</a>(const char *szSearchFor, const ezStringView &amp;szReplacement)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#a6dbf87a7c53f518c26b22ff3543ac15d">ReplaceFirst</a>(const char *szSearchFor, const ezStringView &amp;szReplacement, const char *szStartSearchAt=nullptr)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#a1ab8d58e690fedbb9a7751bbea11c6ae">ReplaceFirst_NoCase</a>(const char *szSearchFor, const ezStringView &amp;szReplacement, const char *szStartSearchAt=nullptr)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#ac7b7b76f6c57d79c852a27ce7f080fc4">ReplaceLast</a>(const char *szSearchFor, const ezStringView &amp;szReplacement, const char *szStartSearchAt=nullptr)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#ae02374f9cd23eba6e7c64e685458dca0">ReplaceLast_NoCase</a>(const char *szSearchFor, const ezStringView &amp;szReplacement, const char *szStartSearchAt=nullptr)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#a1344a3f45ece14cf68c50012129fc870">ReplaceSubString</a>(const char *szStartPos, const char *szEndPos, const ezStringView &amp;szReplaceWith)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#a8d335e6ace481c7f132928eebe116cda">ReplaceWholeWord</a>(const char *szSearchFor, const ezStringView &amp;szReplaceWith, ezStringUtils::EZ_CHARACTER_FILTER IsDelimiterCB)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#aa1fa71a55bfebf3771d5c6c802454361">ReplaceWholeWord_NoCase</a>(const char *szSearchFor, const ezStringView &amp;szReplaceWith, ezStringUtils::EZ_CHARACTER_FILTER IsDelimiterCB)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#aefd9a3b4ce284abdb35a584fbae5717c">ReplaceWholeWordAll</a>(const char *szSearchFor, const ezStringView &amp;szReplaceWith, ezStringUtils::EZ_CHARACTER_FILTER IsDelimiterCB)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#a2dc09e0c87758127ce582000658a5403">ReplaceWholeWordAll_NoCase</a>(const char *szSearchFor, const ezStringView &amp;szReplaceWith, ezStringUtils::EZ_CHARACTER_FILTER IsDelimiterCB)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#aa8e97941dfc6747eabf7e8dfb1c8c783">Reserve</a>(ezUInt32 uiNumElements)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>reverse_iterator</b> typedef (defined in <a class="el" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt; ezStringBuilder &gt;</a>)</td><td class="entry"><a class="el" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt; ezStringBuilder &gt;</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#a6ba7492a22f19af45352d44ddbdb30fa">Set</a>(const char *pData1, const char *pData2=nullptr, const char *pData3=nullptr, const char *pData4=nullptr, const char *pData5=nullptr, const char *pData6=nullptr)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#ab255f8ebc1d9fb1e550757ccce4dab60">SetSubString_CharacterCount</a>(const char *pStart, ezUInt32 uiCharacterCount)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#a565d593b87226e53b10ed4c7d80110ba">SetSubString_ElementCount</a>(const char *pStart, ezUInt32 uiElementCount)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#a140207da00da242ae5f9b9a85d10bcc7">SetSubString_FromTo</a>(const char *pStart, const char *pEnd)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#a646a93dad4c0dc198196db2c8d31fd99">Shrink</a>(ezUInt32 uiShrinkCharsFront, ezUInt32 uiShrinkCharsBack)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#a2247bea5abf668d0fb7545dfb3acf413">Split</a>(bool bReturnEmptyStrings, Container &amp;Output, const char *szSeparator1, const char *szSeparator2=nullptr, const char *szSeparator3=nullptr, const char *szSeparator4=nullptr, const char *szSeparator5=nullptr, const char *szSeparator6=nullptr) const</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../dd/d69/structez_string_base.htm#a40370a42191c470e969d0693385db3f3">StartsWith</a>(const char *szStartsWith) const</td><td class="entry"><a class="el" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt; ezStringBuilder &gt;</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../dd/d69/structez_string_base.htm#acb6973bde9b2b2b6773b69035c97e8ba">StartsWith_NoCase</a>(const char *szStartsWith) const</td><td class="entry"><a class="el" href="../../dd/d69/structez_string_base.htm">ezStringBase&lt; ezStringBuilder &gt;</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#a61765d9803ff70f064cfc17c1fd04d89">ToLower</a>()</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#a8beb183188db5f5ddacca112fe279e3c">ToUpper</a>()</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#a873bef1677465559bfebeccda3ab4493">Trim</a>(const char *szTrimChars)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#a57730d24b21287cd1b04b09de1a0f6cd">Trim</a>(const char *szTrimCharsStart, const char *szTrimCharsEnd)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#af66f405ed051a3239bcd1512ce610e49">TrimWordEnd</a>(const char *szWord1, const char *szWord2=nullptr, const char *szWord3=nullptr, const char *szWord4=nullptr, const char *szWord5=nullptr)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm#a6843bb280feabb443f7659e085b3811b">TrimWordStart</a>(const char *szWord1, const char *szWord2=nullptr, const char *szWord3=nullptr, const char *szWord4=nullptr, const char *szWord5=nullptr)</td><td class="entry"><a class="el" href="../../d3/d88/classez_string_builder.htm">ezStringBuilder</a></td><td class="entry"></td></tr>
</table></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Generated on Mon Oct 18 2021 15:33:41 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
