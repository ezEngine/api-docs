<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/CodeUtils/Expression/ExpressionDeclarations.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">ezEngine<span id="projectnumber">&#160;Release 25.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function() { init_codefold(1); });
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('d0/d9a/_expression_declarations_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">ExpressionDeclarations.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="preprocessor">#include &lt;Foundation/Containers/HashTable.h&gt;</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="preprocessor">#include &lt;Foundation/Containers/SmallArray.h&gt;</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="preprocessor">#include &lt;Foundation/DataProcessing/Stream/ProcessingStream.h&gt;</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="preprocessor">#include &lt;Foundation/Reflection/Reflection.h&gt;</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="preprocessor">#include &lt;Foundation/SimdMath/SimdVec4f.h&gt;</span></div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="preprocessor">#include &lt;Foundation/SimdMath/SimdVec4i.h&gt;</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="preprocessor">#include &lt;Foundation/Types/Variant.h&gt;</span></div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span> </div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span><span class="keyword">class </span><a class="code hl_class" href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a>;</div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span><span class="keyword">class </span><a class="code hl_class" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a>;</div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span> </div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span><span class="keyword">namespace </span>ezExpression</div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span>{</div>
<div class="foldopen" id="foldopen00016" data-start="{" data-end="};">
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno"><a class="line" href="../../dc/d66/structez_expression_1_1_register.htm">   16</a></span>  <span class="keyword">struct </span><a class="code hl_struct" href="../../dc/d66/structez_expression_1_1_register.htm">Register</a></div>
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno">   17</span>  {</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span>    EZ_DECLARE_POD_TYPE();</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span> </div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span>    <a class="code hl_struct" href="../../dc/d66/structez_expression_1_1_register.htm">Register</a>(){}; <span class="comment">// NOLINT: using = default doesn&#39;t work here.</span></div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span> </div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span>    <span class="keyword">union</span></div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span>    {</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span>      <a class="code hl_class" href="../../de/daa/classez_simd_vec4b.htm">ezSimdVec4b</a> b;</div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span>      <a class="code hl_class" href="../../d6/d8e/classez_simd_vec4i.htm">ezSimdVec4i</a> i;</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span>      <a class="code hl_class" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> f;</div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span>    };</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span>  };</div>
</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span> </div>
<div class="foldopen" id="foldopen00030" data-start="{" data-end="};">
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno"><a class="line" href="../../d5/dd0/structez_expression_1_1_register_type.htm">   30</a></span>  <span class="keyword">struct </span><a class="code hl_struct" href="../../d5/dd0/structez_expression_1_1_register_type.htm">RegisterType</a></div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span>  {</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span>    <span class="keyword">using </span>StorageType = ezUInt8;</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span> </div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span>    <span class="keyword">enum</span> Enum</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>    {</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span>      Unknown,</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span> </div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>      Bool,</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span>      Int,</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span>      Float,</div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span> </div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>      Count,</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span> </div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>      Default = Float,</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>      MaxNumBits = 4,</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span>    };</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span> </div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>    <span class="keyword">static</span> <span class="keyword">const</span> <span class="keywordtype">char</span>* GetName(Enum registerType);</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span>  };</div>
</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span> </div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>  <span class="keyword">using </span><a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">Output</a> = <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;Register&gt;</a>;</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>  <span class="keyword">using </span><a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">Inputs</a> = <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;ezArrayPtr&lt;const Register&gt;</a>&gt;; <span class="comment">// Inputs are in SOA form, means inner array contains all values for one input parameter, one for each instance.</span></div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>  <span class="keyword">using </span><a class="code hl_class" href="../../d8/d86/classez_hash_table.htm">GlobalData</a> = <a class="code hl_class" href="../../d8/d86/classez_hash_table.htm">ezHashTable&lt;ezHashedString, ezVariant&gt;</a>;</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span> </div>
<div class="foldopen" id="foldopen00056" data-start="{" data-end="};">
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno"><a class="line" href="../../d2/d95/structez_expression_1_1_stream_desc.htm">   56</a></span>  <span class="keyword">struct </span><a class="code hl_struct" href="../../d2/d95/structez_expression_1_1_stream_desc.htm">StreamDesc</a></div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>  {</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>    <a class="code hl_class" href="../../de/dce/classez_hashed_string.htm">ezHashedString</a> m_sName;</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>    <a class="code hl_enumeration" href="../../d6/d22/classez_processing_stream.htm#a27ae356e114f4668f714bb63dd775f17">ezProcessingStream::DataType</a> m_DataType;</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span> </div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>    <span class="keywordtype">bool</span> operator==(<span class="keyword">const</span> <a class="code hl_struct" href="../../d2/d95/structez_expression_1_1_stream_desc.htm">StreamDesc</a>&amp; other)<span class="keyword"> const</span></div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>      <span class="keywordflow">return</span> m_sName == other.m_sName &amp;&amp; m_DataType == other.m_DataType;</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span>    }</div>
<div class="line"><a id="l00065" name="l00065"></a><span class="lineno">   65</span> </div>
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno">   66</span>    <a class="code hl_struct" href="../../d4/da9/structez_result.htm">ezResult</a> Serialize(<a class="code hl_class" href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a>&amp; inout_stream) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>    <a class="code hl_struct" href="../../d4/da9/structez_result.htm">ezResult</a> Deserialize(<a class="code hl_class" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a>&amp; inout_stream);</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>  };</div>
</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span> </div>
<div class="foldopen" id="foldopen00071" data-start="{" data-end="};">
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno"><a class="line" href="../../d1/d06/structez_expression_1_1_function_desc.htm">   71</a></span>  <span class="keyword">struct </span><a class="code hl_struct" href="../../d1/d06/structez_expression_1_1_function_desc.htm">FunctionDesc</a></div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>  {</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>    <span class="keyword">using </span><a class="code hl_class" href="../../d0/d0c/classez_small_array.htm">TypeList</a> = <a class="code hl_class" href="../../d0/d0c/classez_small_array.htm">ezSmallArray&lt;ezEnum&lt;ezExpression::RegisterType&gt;</a>, 8&gt;;</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span> </div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span>    <a class="code hl_class" href="../../de/dce/classez_hashed_string.htm">ezHashedString</a> m_sName;</div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>    <a class="code hl_class" href="../../d0/d0c/classez_small_array.htm">TypeList</a> m_InputTypes;</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>    ezUInt8 m_uiNumRequiredInputs = 0;</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>    <a class="code hl_struct" href="../../d6/dd9/structez_enum.htm">ezEnum&lt;ezExpression::RegisterType&gt;</a> m_OutputType;</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span> </div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno">   80</span>    <span class="keywordtype">bool</span> operator==(<span class="keyword">const</span> <a class="code hl_struct" href="../../d1/d06/structez_expression_1_1_function_desc.htm">FunctionDesc</a>&amp; other)<span class="keyword"> const</span></div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span><span class="keyword">    </span>{</div>
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno">   82</span>      <span class="keywordflow">return</span> m_sName == other.m_sName &amp;&amp;</div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>             m_InputTypes == other.m_InputTypes &amp;&amp;</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>             m_uiNumRequiredInputs == other.m_uiNumRequiredInputs &amp;&amp;</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>             m_OutputType == other.m_OutputType;</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>    }</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span> </div>
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno">   88</span>    <span class="keywordtype">bool</span> operator&lt;(<span class="keyword">const</span> <a class="code hl_struct" href="../../d1/d06/structez_expression_1_1_function_desc.htm">FunctionDesc</a>&amp; other) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span> </div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>    <a class="code hl_struct" href="../../d4/da9/structez_result.htm">ezResult</a> Serialize(<a class="code hl_class" href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a>&amp; inout_stream) <span class="keyword">const</span>;</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span>    <a class="code hl_struct" href="../../d4/da9/structez_result.htm">ezResult</a> Deserialize(<a class="code hl_class" href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a>&amp; inout_stream);</div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span> </div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>    <a class="code hl_class" href="../../de/dce/classez_hashed_string.htm">ezHashedString</a> GetMangledName() <span class="keyword">const</span>;</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span>  };</div>
</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span> </div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span>  <span class="keyword">using </span>Function = void (*)(<a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezExpression::Inputs</a>, <a class="code hl_class" href="../../dc/dae/classez_array_ptr.htm">ezExpression::Output</a>, <span class="keyword">const</span> <a class="code hl_class" href="../../d8/d86/classez_hash_table.htm">ezExpression::GlobalData</a>&amp;);</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span>  <span class="keyword">using </span>ValidateGlobalDataFunction = <a class="code hl_struct" href="../../d4/da9/structez_result.htm">ezResult</a> (*)(<span class="keyword">const</span> <a class="code hl_class" href="../../d8/d86/classez_hash_table.htm">ezExpression::GlobalData</a>&amp;);</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span> </div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>} <span class="comment">// namespace ezExpression</span></div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span> </div>
<div class="foldopen" id="foldopen00103" data-start="{" data-end="};">
<div class="line"><a id="l00103" name="l00103"></a><span class="lineno"><a class="line" href="../../da/d94/structez_expression_function.htm">  103</a></span><span class="keyword">struct </span><a class="code hl_struct" href="../../da/d94/structez_expression_function.htm">ezExpressionFunction</a></div>
<div class="line"><a id="l00104" name="l00104"></a><span class="lineno">  104</span>{</div>
<div class="line"><a id="l00105" name="l00105"></a><span class="lineno">  105</span>  <a class="code hl_struct" href="../../d1/d06/structez_expression_1_1_function_desc.htm">ezExpression::FunctionDesc</a> m_Desc;</div>
<div class="line"><a id="l00106" name="l00106"></a><span class="lineno">  106</span> </div>
<div class="line"><a id="l00107" name="l00107"></a><span class="lineno">  107</span>  ezExpression::Function m_Func;</div>
<div class="line"><a id="l00108" name="l00108"></a><span class="lineno">  108</span> </div>
<div class="line"><a id="l00109" name="l00109"></a><span class="lineno">  109</span>  <span class="comment">// Optional validation function used to validate required global data for an expression function</span></div>
<div class="line"><a id="l00110" name="l00110"></a><span class="lineno">  110</span>  ezExpression::ValidateGlobalDataFunction m_ValidateGlobalDataFunc;</div>
<div class="line"><a id="l00111" name="l00111"></a><span class="lineno">  111</span>};</div>
</div>
<div class="line"><a id="l00112" name="l00112"></a><span class="lineno">  112</span> </div>
<div class="foldopen" id="foldopen00113" data-start="{" data-end="};">
<div class="line"><a id="l00113" name="l00113"></a><span class="lineno"><a class="line" href="../../d8/d69/structez_default_expression_functions.htm">  113</a></span><span class="keyword">struct </span>EZ_FOUNDATION_DLL <a class="code hl_struct" href="../../d8/d69/structez_default_expression_functions.htm">ezDefaultExpressionFunctions</a></div>
<div class="line"><a id="l00114" name="l00114"></a><span class="lineno">  114</span>{</div>
<div class="line"><a id="l00115" name="l00115"></a><span class="lineno">  115</span>  <span class="keyword">static</span> <a class="code hl_struct" href="../../da/d94/structez_expression_function.htm">ezExpressionFunction</a> s_RandomFunc;</div>
<div class="line"><a id="l00116" name="l00116"></a><span class="lineno">  116</span>  <span class="keyword">static</span> <a class="code hl_struct" href="../../da/d94/structez_expression_function.htm">ezExpressionFunction</a> s_PerlinNoiseFunc;</div>
<div class="line"><a id="l00117" name="l00117"></a><span class="lineno">  117</span>};</div>
</div>
<div class="line"><a id="l00118" name="l00118"></a><span class="lineno">  118</span> </div>
<div class="foldopen" id="foldopen00123" data-start="{" data-end="};">
<div class="line"><a id="l00123" name="l00123"></a><span class="lineno"><a class="line" href="../../d3/dc2/classez_expression_widget_attribute.htm">  123</a></span><span class="keyword">class </span>EZ_FOUNDATION_DLL <a class="code hl_class" href="../../d3/dc2/classez_expression_widget_attribute.htm">ezExpressionWidgetAttribute</a> : <span class="keyword">public</span> <a class="code hl_class" href="../../d2/df5/classez_type_widget_attribute.htm">ezTypeWidgetAttribute</a></div>
<div class="line"><a id="l00124" name="l00124"></a><span class="lineno">  124</span>{</div>
<div class="line"><a id="l00125" name="l00125"></a><span class="lineno">  125</span>  EZ_ADD_DYNAMIC_REFLECTION(<a class="code hl_class" href="../../d3/dc2/classez_expression_widget_attribute.htm">ezExpressionWidgetAttribute</a>, <a class="code hl_class" href="../../d2/df5/classez_type_widget_attribute.htm">ezTypeWidgetAttribute</a>);</div>
<div class="line"><a id="l00126" name="l00126"></a><span class="lineno">  126</span> </div>
<div class="line"><a id="l00127" name="l00127"></a><span class="lineno">  127</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00128" name="l00128"></a><span class="lineno">  128</span>  <a class="code hl_class" href="../../d3/dc2/classez_expression_widget_attribute.htm">ezExpressionWidgetAttribute</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a id="l00129" name="l00129"></a><span class="lineno">  129</span>  <a class="code hl_class" href="../../d3/dc2/classez_expression_widget_attribute.htm">ezExpressionWidgetAttribute</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szInputsProperty, <span class="keyword">const</span> <span class="keywordtype">char</span>* szOutputProperty)</div>
<div class="line"><a id="l00130" name="l00130"></a><span class="lineno">  130</span>    : m_sInputsProperty(szInputsProperty)</div>
<div class="line"><a id="l00131" name="l00131"></a><span class="lineno">  131</span>    , m_sOutputsProperty(szOutputProperty)</div>
<div class="line"><a id="l00132" name="l00132"></a><span class="lineno">  132</span>  {</div>
<div class="line"><a id="l00133" name="l00133"></a><span class="lineno">  133</span>  }</div>
<div class="line"><a id="l00134" name="l00134"></a><span class="lineno">  134</span> </div>
<div class="line"><a id="l00135" name="l00135"></a><span class="lineno">  135</span>  <span class="keyword">const</span> <span class="keywordtype">char</span>* GetInputsProperty()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_sInputsProperty; }</div>
<div class="line"><a id="l00136" name="l00136"></a><span class="lineno">  136</span>  <span class="keyword">const</span> <span class="keywordtype">char</span>* GetOutputsProperty()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_sOutputsProperty; }</div>
<div class="line"><a id="l00137" name="l00137"></a><span class="lineno">  137</span> </div>
<div class="line"><a id="l00138" name="l00138"></a><span class="lineno">  138</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00139" name="l00139"></a><span class="lineno">  139</span>  <a class="code hl_class" href="../../d4/d53/structez_hybrid_string.htm">ezUntrackedString</a> m_sInputsProperty;</div>
<div class="line"><a id="l00140" name="l00140"></a><span class="lineno">  140</span>  <a class="code hl_class" href="../../d4/d53/structez_hybrid_string.htm">ezUntrackedString</a> m_sOutputsProperty;</div>
<div class="line"><a id="l00141" name="l00141"></a><span class="lineno">  141</span>};</div>
</div>
<div class="ttc" id="aclassez_array_ptr_htm"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a></div><div class="ttdoc">This class encapsulates an array and it's size. It is recommended to use this class instead of plain ...</div><div class="ttdef"><b>Definition</b> ArrayPtr.h:41</div></div>
<div class="ttc" id="aclassez_expression_widget_attribute_htm"><div class="ttname"><a href="../../d3/dc2/classez_expression_widget_attribute.htm">ezExpressionWidgetAttribute</a></div><div class="ttdoc">Add this attribute a string property that should be interpreted as expression source.</div><div class="ttdef"><b>Definition</b> ExpressionDeclarations.h:124</div></div>
<div class="ttc" id="aclassez_hash_table_htm"><div class="ttname"><a href="../../d8/d86/classez_hash_table.htm">ezHashTable&lt; ezHashedString, ezVariant &gt;</a></div></div>
<div class="ttc" id="aclassez_hashed_string_htm"><div class="ttname"><a href="../../de/dce/classez_hashed_string.htm">ezHashedString</a></div><div class="ttdoc">This class is optimized to take nearly no memory (sizeof(void*)) and to allow very fast checks whethe...</div><div class="ttdef"><b>Definition</b> HashedString.h:25</div></div>
<div class="ttc" id="aclassez_processing_stream_htm_a27ae356e114f4668f714bb63dd775f17"><div class="ttname"><a href="../../d6/d22/classez_processing_stream.htm#a27ae356e114f4668f714bb63dd775f17">ezProcessingStream::DataType</a></div><div class="ttdeci">DataType</div><div class="ttdoc">The data types which can be stored in the stream. When adding new data types the GetDataTypeSize() of...</div><div class="ttdef"><b>Definition</b> ProcessingStream.h:13</div></div>
<div class="ttc" id="aclassez_simd_vec4b_htm"><div class="ttname"><a href="../../de/daa/classez_simd_vec4b.htm">ezSimdVec4b</a></div><div class="ttdef"><b>Definition</b> SimdVec4b.h:7</div></div>
<div class="ttc" id="aclassez_simd_vec4f_htm"><div class="ttname"><a href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a></div><div class="ttdoc">A 4-component SIMD vector class.</div><div class="ttdef"><b>Definition</b> SimdVec4f.h:8</div></div>
<div class="ttc" id="aclassez_simd_vec4i_htm"><div class="ttname"><a href="../../d6/d8e/classez_simd_vec4i.htm">ezSimdVec4i</a></div><div class="ttdoc">A SIMD 4-component vector class of signed 32b integers.</div><div class="ttdef"><b>Definition</b> SimdVec4i.h:9</div></div>
<div class="ttc" id="aclassez_small_array_htm"><div class="ttname"><a href="../../d0/d0c/classez_small_array.htm">ezSmallArray&lt; ezEnum&lt; ezExpression::RegisterType &gt;, 8 &gt;</a></div></div>
<div class="ttc" id="aclassez_stream_reader_htm"><div class="ttname"><a href="../../d2/d19/classez_stream_reader.htm">ezStreamReader</a></div><div class="ttdoc">Interface for binary in (read) streams.</div><div class="ttdef"><b>Definition</b> Stream.h:22</div></div>
<div class="ttc" id="aclassez_stream_writer_htm"><div class="ttname"><a href="../../d6/dcc/classez_stream_writer.htm">ezStreamWriter</a></div><div class="ttdoc">Interface for binary out (write) streams.</div><div class="ttdef"><b>Definition</b> Stream.h:107</div></div>
<div class="ttc" id="aclassez_type_widget_attribute_htm"><div class="ttname"><a href="../../d2/df5/classez_type_widget_attribute.htm">ezTypeWidgetAttribute</a></div><div class="ttdoc">Derive from this class if you want to define an attribute that replaces the property type widget.</div><div class="ttdef"><b>Definition</b> PropertyAttributes.h:246</div></div>
<div class="ttc" id="astructez_default_expression_functions_htm"><div class="ttname"><a href="../../d8/d69/structez_default_expression_functions.htm">ezDefaultExpressionFunctions</a></div><div class="ttdef"><b>Definition</b> ExpressionDeclarations.h:114</div></div>
<div class="ttc" id="astructez_enum_htm"><div class="ttname"><a href="../../d6/dd9/structez_enum.htm">ezEnum</a></div><div class="ttdoc">A custom enum implementation that allows to define the underlying storage type to control its memory ...</div><div class="ttdef"><b>Definition</b> Enum.h:37</div></div>
<div class="ttc" id="astructez_expression_1_1_function_desc_htm"><div class="ttname"><a href="../../d1/d06/structez_expression_1_1_function_desc.htm">ezExpression::FunctionDesc</a></div><div class="ttdoc">Describes an expression function and its signature, e.g. how many input parameter it has and their ty...</div><div class="ttdef"><b>Definition</b> ExpressionDeclarations.h:72</div></div>
<div class="ttc" id="astructez_expression_1_1_register_htm"><div class="ttname"><a href="../../dc/d66/structez_expression_1_1_register.htm">ezExpression::Register</a></div><div class="ttdef"><b>Definition</b> ExpressionDeclarations.h:17</div></div>
<div class="ttc" id="astructez_expression_1_1_register_type_htm"><div class="ttname"><a href="../../d5/dd0/structez_expression_1_1_register_type.htm">ezExpression::RegisterType</a></div><div class="ttdef"><b>Definition</b> ExpressionDeclarations.h:31</div></div>
<div class="ttc" id="astructez_expression_1_1_stream_desc_htm"><div class="ttname"><a href="../../d2/d95/structez_expression_1_1_stream_desc.htm">ezExpression::StreamDesc</a></div><div class="ttdoc">Describes an input or output stream for a expression VM.</div><div class="ttdef"><b>Definition</b> ExpressionDeclarations.h:57</div></div>
<div class="ttc" id="astructez_expression_function_htm"><div class="ttname"><a href="../../da/d94/structez_expression_function.htm">ezExpressionFunction</a></div><div class="ttdoc">Describes an external function that can be called in expressions. These functions need to be state-le...</div><div class="ttdef"><b>Definition</b> ExpressionDeclarations.h:104</div></div>
<div class="ttc" id="astructez_hybrid_string_htm"><div class="ttname"><a href="../../d4/d53/structez_hybrid_string.htm">ezHybridString&lt; 32, ezStaticsAllocatorWrapper &gt;</a></div></div>
<div class="ttc" id="astructez_result_htm"><div class="ttname"><a href="../../d4/da9/structez_result.htm">ezResult</a></div><div class="ttdoc">Default enum for returning failure or success, instead of using a bool.</div><div class="ttdef"><b>Definition</b> Types.h:54</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_2c7b76dee074c0486b4059e88dfd18f0.htm">CodeUtils</a></li><li class="navelem"><a class="el" href="../../dir_8a03cd053a0d4b8ee4241c2a06b55d89.htm">Expression</a></li><li class="navelem"><b>ExpressionDeclarations.h</b></li>
    <li class="footer">Generated on Fri Jul 11 2025 12:17:43 for ezEngine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
