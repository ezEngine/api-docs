<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/SimdMath/Implementation/SimdQuat_inl.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 24.09</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d0/dd6/_simd_quat__inl_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">SimdQuat_inl.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;EZ_ALWAYS_INLINE ezSimdQuat::ezSimdQuat() = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160; </div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;EZ_ALWAYS_INLINE ezSimdQuat::ezSimdQuat(<span class="keyword">const</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>&amp; v)</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;  : m_v(v)</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;{</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;}</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160; </div>
<div class="line"><a name="l00010"></a><span class="lineno"><a class="line" href="../../d7/dc1/classez_simd_quat.htm#a0fd4a1ea8247e6e4f1ef3d773aec0abd">   10</a></span>&#160;EZ_ALWAYS_INLINE <span class="keyword">const</span> <a class="code" href="../../d7/dc1/classez_simd_quat.htm">ezSimdQuat</a> <a class="code" href="../../d7/dc1/classez_simd_quat.htm#a0fd4a1ea8247e6e4f1ef3d773aec0abd">ezSimdQuat::MakeIdentity</a>()</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;{</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d7/dc1/classez_simd_quat.htm">ezSimdQuat</a>(<a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>(0.0f, 0.0f, 0.0f, 1.0f));</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;}</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160; </div>
<div class="line"><a name="l00015"></a><span class="lineno"><a class="line" href="../../d7/dc1/classez_simd_quat.htm#a6a3f9aafcde878361848dfd54abd9745">   15</a></span>&#160;EZ_ALWAYS_INLINE <a class="code" href="../../d7/dc1/classez_simd_quat.htm">ezSimdQuat</a> <a class="code" href="../../d7/dc1/classez_simd_quat.htm#a6a3f9aafcde878361848dfd54abd9745">ezSimdQuat::MakeFromElements</a>(<a class="code" href="../../d2/d0c/classez_simd_float.htm">ezSimdFloat</a> x, <a class="code" href="../../d2/d0c/classez_simd_float.htm">ezSimdFloat</a> y, <a class="code" href="../../d2/d0c/classez_simd_float.htm">ezSimdFloat</a> z, <a class="code" href="../../d2/d0c/classez_simd_float.htm">ezSimdFloat</a> w)</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;{</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d7/dc1/classez_simd_quat.htm">ezSimdQuat</a>(<a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>(x, y, z, w));</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;}</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160; </div>
<div class="line"><a name="l00020"></a><span class="lineno"><a class="line" href="../../d7/dc1/classez_simd_quat.htm#ab0c380d8d41167fcfea828a833be45f6">   20</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="../../d7/dc1/classez_simd_quat.htm">ezSimdQuat</a> <a class="code" href="../../d7/dc1/classez_simd_quat.htm#ab0c380d8d41167fcfea828a833be45f6">ezSimdQuat::MakeFromAxisAndAngle</a>(<span class="keyword">const</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>&amp; vRotationAxis, <span class="keyword">const</span> <a class="code" href="../../d2/d0c/classez_simd_float.htm">ezSimdFloat</a>&amp; fAngle)</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;{</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a> halfAngle = <a class="code" href="../../db/d6f/classez_angle.htm#af0d5329191f5e431830ad76f91f7cc0f">ezAngle::MakeFromRadian</a>(fAngle) * 0.5f;</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;  <span class="keywordtype">float</span> s = <a class="code" href="../../db/d78/namespaceez_math.htm#a05995060e61c0946e14619b45cd1adef">ezMath::Sin</a>(halfAngle);</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;  <span class="keywordtype">float</span> c = <a class="code" href="../../db/d78/namespaceez_math.htm#a40cf3173aac40e0e462c57728e9410ab">ezMath::Cos</a>(halfAngle);</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;  <a class="code" href="../../d7/dc1/classez_simd_quat.htm">ezSimdQuat</a> res;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  res.m_v = vRotationAxis * s;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;  res.m_v.SetW(c);</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;  <span class="keywordflow">return</span> res;</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;}</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160; </div>
<div class="line"><a name="l00033"></a><span class="lineno"><a class="line" href="../../d7/dc1/classez_simd_quat.htm#aaf68da86b34e82ae7fb0efa9ab09c44a">   33</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d7/dc1/classez_simd_quat.htm#aaf68da86b34e82ae7fb0efa9ab09c44a">ezSimdQuat::Normalize</a>()</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;{</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;  m_v.Normalize&lt;4&gt;();</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;}</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160; </div>
<div class="line"><a name="l00038"></a><span class="lineno"><a class="line" href="../../d7/dc1/classez_simd_quat.htm#ae594106f21bcbff34682703284fd7c29">   38</a></span>&#160;<span class="keyword">inline</span> <a class="code" href="../../d4/da9/structez_result.htm">ezResult</a> <a class="code" href="../../d7/dc1/classez_simd_quat.htm#ae594106f21bcbff34682703284fd7c29">ezSimdQuat::GetRotationAxisAndAngle</a>(<a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>&amp; ref_vAxis, <a class="code" href="../../d2/d0c/classez_simd_float.htm">ezSimdFloat</a>&amp; ref_fAngle, <span class="keyword">const</span> <a class="code" href="../../d2/d0c/classez_simd_float.htm">ezSimdFloat</a>&amp; fEpsilon)<span class="keyword"> const</span></div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../db/d6f/classez_angle.htm">ezAngle</a> acos = <a class="code" href="../../db/d78/namespaceez_math.htm#afcbf5132d5cbfc7070cd6d3086709ceb">ezMath::ACos</a>(m_v.w().Max(-1).Min(1));</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">float</span> d = <a class="code" href="../../db/d78/namespaceez_math.htm#a05995060e61c0946e14619b45cd1adef">ezMath::Sin</a>(acos);</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160; </div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  <span class="keywordflow">if</span> (d &lt; fEpsilon)</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;  {</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    ref_vAxis.Set(1.0f, 0.0f, 0.0f, 0.0f);</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;  }</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;  <span class="keywordflow">else</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;  {</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;    ref_vAxis = m_v / d;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;  }</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160; </div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;  ref_fAngle = acos * 2;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160; </div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  <span class="keywordflow">return</span> EZ_SUCCESS;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;}</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160; </div>
<div class="line"><a name="l00058"></a><span class="lineno"><a class="line" href="../../d7/dc1/classez_simd_quat.htm#aa83d02eafb7b3b78c2292f2ff5d03bc5">   58</a></span>&#160;EZ_ALWAYS_INLINE <a class="code" href="../../d2/d62/classez_simd_mat4f.htm">ezSimdMat4f</a> <a class="code" href="../../d7/dc1/classez_simd_quat.htm#aa83d02eafb7b3b78c2292f2ff5d03bc5">ezSimdQuat::GetAsMat4</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> xyz = m_v;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> x2y2z2 = xyz + xyz;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> xx2yy2zz2 = x2y2z2.CompMul(xyz);</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160; </div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;  <span class="comment">// diagonal terms</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;  <span class="comment">// 1 - (yy2 + zz2)</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;  <span class="comment">// 1 - (xx2 + zz2)</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;  <span class="comment">// 1 - (xx2 + yy2)</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> yy2_xx2_xx2 = xx2yy2zz2.Get&lt;ezSwizzle::YXXX&gt;();</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> zz2_zz2_yy2 = xx2yy2zz2.Get&lt;ezSwizzle::ZZYX&gt;();</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;  <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> diagonal = <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>(1.0f) - (yy2_xx2_xx2 + zz2_zz2_yy2);</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;  diagonal.SetW(<a class="code" href="../../d2/d0c/classez_simd_float.htm#a65f4e4eb30afc0f63ca9fbd2dae15bbc">ezSimdFloat::MakeZero</a>());</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160; </div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  <span class="comment">// non diagonal terms</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;  <span class="comment">// xy2 +- wz2</span></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;  <span class="comment">// yz2 +- wx2</span></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  <span class="comment">// xz2 +- wy2</span></div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> x_y_x = xyz.Get&lt;ezSwizzle::XYXX&gt;();</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> y2_z2_z2 = x2y2z2.Get&lt;ezSwizzle::YZZX&gt;();</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> base = x_y_x.CompMul(y2_z2_z2);</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160; </div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> z2_x2_y2 = x2y2z2.Get&lt;ezSwizzle::ZXYX&gt;();</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> offset = z2_x2_y2 * m_v.w();</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160; </div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> adds = base + offset;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> subs = base - offset;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160; </div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;  <span class="comment">// final matrix layout</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;  <span class="comment">// col0 = (diaX, addX, subZ, diaW)</span></div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> addX_u_diaX_u = adds.<a class="code" href="../../db/d0d/classez_simd_vec4f.htm#a44d5936d6191c43ffd45c7d9c214638c">GetCombined</a>&lt;ezSwizzle::XXXX&gt;(diagonal);</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> subZ_u_diaW_u = subs.<a class="code" href="../../db/d0d/classez_simd_vec4f.htm#a44d5936d6191c43ffd45c7d9c214638c">GetCombined</a>&lt;ezSwizzle::ZXWX&gt;(diagonal);</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> col0 = addX_u_diaX_u.<a class="code" href="../../db/d0d/classez_simd_vec4f.htm#a44d5936d6191c43ffd45c7d9c214638c">GetCombined</a>&lt;ezSwizzle::ZXXZ&gt;(subZ_u_diaW_u);</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160; </div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  <span class="comment">// col1 = (subX, diaY, addY, diaW)</span></div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> subX_u_diaY_u = subs.<a class="code" href="../../db/d0d/classez_simd_vec4f.htm#a44d5936d6191c43ffd45c7d9c214638c">GetCombined</a>&lt;ezSwizzle::XXYX&gt;(diagonal);</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> addY_u_diaW_u = adds.<a class="code" href="../../db/d0d/classez_simd_vec4f.htm#a44d5936d6191c43ffd45c7d9c214638c">GetCombined</a>&lt;ezSwizzle::YXWX&gt;(diagonal);</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> col1 = subX_u_diaY_u.<a class="code" href="../../db/d0d/classez_simd_vec4f.htm#a44d5936d6191c43ffd45c7d9c214638c">GetCombined</a>&lt;ezSwizzle::XZXZ&gt;(addY_u_diaW_u);</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160; </div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;  <span class="comment">// col2 = (addZ, subY, diaZ, diaW)</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> addZ_u_subY_u = adds.<a class="code" href="../../db/d0d/classez_simd_vec4f.htm#a44d5936d6191c43ffd45c7d9c214638c">GetCombined</a>&lt;ezSwizzle::ZXYX&gt;(subs);</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;  <span class="keyword">const</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> col2 = addZ_u_subY_u.<a class="code" href="../../db/d0d/classez_simd_vec4f.htm#a44d5936d6191c43ffd45c7d9c214638c">GetCombined</a>&lt;ezSwizzle::XZZW&gt;(diagonal);</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160; </div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d2/d62/classez_simd_mat4f.htm#a9a4e16889264f58d8a5d69b9908c8231">ezSimdMat4f::MakeFromColumns</a>(col0, col1, col2, <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>(0, 0, 0, 1));</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;}</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160; </div>
<div class="line"><a name="l00105"></a><span class="lineno"><a class="line" href="../../d7/dc1/classez_simd_quat.htm#ad18b81f4c50699900197f3d3638d828a">  105</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../d7/dc1/classez_simd_quat.htm#ad18b81f4c50699900197f3d3638d828a">ezSimdQuat::IsValid</a>(<span class="keyword">const</span> <a class="code" href="../../d2/d0c/classez_simd_float.htm">ezSimdFloat</a>&amp; fEpsilon)<span class="keyword"> const</span></div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;  <span class="keywordflow">return</span> m_v.IsNormalized&lt;4&gt;(fEpsilon);</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;}</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160; </div>
<div class="line"><a name="l00110"></a><span class="lineno"><a class="line" href="../../d7/dc1/classez_simd_quat.htm#a8c5088adc1d54d1998b27efebd9feba4">  110</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../d7/dc1/classez_simd_quat.htm#a8c5088adc1d54d1998b27efebd9feba4">ezSimdQuat::IsNaN</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;  <span class="keywordflow">return</span> m_v.IsNaN&lt;4&gt;();</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;}</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160; </div>
<div class="line"><a name="l00115"></a><span class="lineno"><a class="line" href="../../d7/dc1/classez_simd_quat.htm#a0176fe511ca167ab14b03ed4bd04080a">  115</a></span>&#160;EZ_ALWAYS_INLINE <a class="code" href="../../d7/dc1/classez_simd_quat.htm">ezSimdQuat</a> <a class="code" href="../../d7/dc1/classez_simd_quat.htm#a0176fe511ca167ab14b03ed4bd04080a">ezSimdQuat::operator-</a>()<span class="keyword"> const</span></div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d7/dc1/classez_simd_quat.htm">ezSimdQuat</a>(m_v.FlipSign(<a class="code" href="../../de/daa/classez_simd_vec4b.htm">ezSimdVec4b</a>(<span class="keyword">true</span>, <span class="keyword">true</span>, <span class="keyword">true</span>, <span class="keyword">false</span>)));</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;}</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160; </div>
<div class="line"><a name="l00120"></a><span class="lineno"><a class="line" href="../../d7/dc1/classez_simd_quat.htm#a7b78ee0af954f9e039c852869d18c65e">  120</a></span>&#160;EZ_ALWAYS_INLINE <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> <a class="code" href="../../d7/dc1/classez_simd_quat.htm#a7b78ee0af954f9e039c852869d18c65e">ezSimdQuat::operator*</a>(<span class="keyword">const</span> <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a>&amp; v)<span class="keyword"> const</span></div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;  <a class="code" href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a> t = m_v.<a class="code" href="../../db/d0d/classez_simd_vec4f.htm#a863f3b8ecc6cf51a9982daf6f9a98c08">CrossRH</a>(v);</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;  t += t;</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;  <span class="keywordflow">return</span> v + t * m_v.w() + m_v.<a class="code" href="../../db/d0d/classez_simd_vec4f.htm#a863f3b8ecc6cf51a9982daf6f9a98c08">CrossRH</a>(t);</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;}</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160; </div>
<div class="line"><a name="l00127"></a><span class="lineno"><a class="line" href="../../d7/dc1/classez_simd_quat.htm#a73dcb4dd91cc2dfff3a49640d543af96">  127</a></span>&#160;EZ_ALWAYS_INLINE <a class="code" href="../../d7/dc1/classez_simd_quat.htm">ezSimdQuat</a> <a class="code" href="../../d7/dc1/classez_simd_quat.htm#a7b78ee0af954f9e039c852869d18c65e">ezSimdQuat::operator*</a>(<span class="keyword">const</span> <a class="code" href="../../d7/dc1/classez_simd_quat.htm">ezSimdQuat</a>&amp; q2)<span class="keyword"> const</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;  <a class="code" href="../../d7/dc1/classez_simd_quat.htm">ezSimdQuat</a> q;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160; </div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;  q.m_v = q2.m_v * m_v.w() + m_v * q2.m_v.w() + m_v.<a class="code" href="../../db/d0d/classez_simd_vec4f.htm#a863f3b8ecc6cf51a9982daf6f9a98c08">CrossRH</a>(q2.m_v);</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;  q.m_v.SetW(m_v.w() * q2.m_v.w() - m_v.Dot&lt;3&gt;(q2.m_v));</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160; </div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;  <span class="keywordflow">return</span> q;</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;}</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160; </div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> ezSimdQuat::operator==(<span class="keyword">const</span> <a class="code" href="../../d7/dc1/classez_simd_quat.htm">ezSimdQuat</a>&amp; q2)<span class="keyword"> const</span></div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;  <span class="keywordflow">return</span> (m_v == q2.m_v).AllSet&lt;4&gt;();</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;}</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160; </div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> ezSimdQuat::operator!=(<span class="keyword">const</span> <a class="code" href="../../d7/dc1/classez_simd_quat.htm">ezSimdQuat</a>&amp; q2)<span class="keyword"> const</span></div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;  <span class="keywordflow">return</span> (m_v != q2.m_v).AnySet&lt;4&gt;();</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;}</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassez_simd_float_htm_a65f4e4eb30afc0f63ca9fbd2dae15bbc"><div class="ttname"><a href="../../d2/d0c/classez_simd_float.htm#a65f4e4eb30afc0f63ca9fbd2dae15bbc">ezSimdFloat::MakeZero</a></div><div class="ttdeci">static ezSimdFloat MakeZero()</div><div class="ttdoc">Creates an ezSimdFloat that is initialized to zero.</div><div class="ttdef"><b>Definition:</b> FPUFloat_inl.h:36</div></div>
<div class="ttc" id="aclassez_simd_quat_htm_a0fd4a1ea8247e6e4f1ef3d773aec0abd"><div class="ttname"><a href="../../d7/dc1/classez_simd_quat.htm#a0fd4a1ea8247e6e4f1ef3d773aec0abd">ezSimdQuat::MakeIdentity</a></div><div class="ttdeci">static const ezSimdQuat MakeIdentity()</div><div class="ttdoc">Static function that returns a quaternion that represents the identity rotation (none).</div><div class="ttdef"><b>Definition:</b> SimdQuat_inl.h:10</div></div>
<div class="ttc" id="aclassez_simd_quat_htm_aaf68da86b34e82ae7fb0efa9ab09c44a"><div class="ttname"><a href="../../d7/dc1/classez_simd_quat.htm#aaf68da86b34e82ae7fb0efa9ab09c44a">ezSimdQuat::Normalize</a></div><div class="ttdeci">void Normalize()</div><div class="ttdoc">Normalizes the quaternion to unit length. ALL rotation-quaternions should be normalized at all times ...</div><div class="ttdef"><b>Definition:</b> SimdQuat_inl.h:33</div></div>
<div class="ttc" id="astructez_result_htm"><div class="ttname"><a href="../../d4/da9/structez_result.htm">ezResult</a></div><div class="ttdoc">Default enum for returning failure or success, instead of using a bool.</div><div class="ttdef"><b>Definition:</b> Types.h:53</div></div>
<div class="ttc" id="aclassez_simd_vec4f_htm_a44d5936d6191c43ffd45c7d9c214638c"><div class="ttname"><a href="../../db/d0d/classez_simd_vec4f.htm#a44d5936d6191c43ffd45c7d9c214638c">ezSimdVec4f::GetCombined</a></div><div class="ttdeci">ezSimdVec4f GetCombined(const ezSimdVec4f &amp;other) const</div><div class="ttdoc">x = this[s0], y = this[s1], z = other[s2], w = other[s3]</div></div>
<div class="ttc" id="anamespaceez_math_htm_a05995060e61c0946e14619b45cd1adef"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a05995060e61c0946e14619b45cd1adef">ezMath::Sin</a></div><div class="ttdeci">EZ_ALWAYS_INLINE float Sin(ezAngle a)</div><div class="ttdoc">***** Trigonometric Functions *****</div><div class="ttdef"><b>Definition:</b> MathFloat_inl.h:77</div></div>
<div class="ttc" id="aclassez_simd_mat4f_htm_a9a4e16889264f58d8a5d69b9908c8231"><div class="ttname"><a href="../../d2/d62/classez_simd_mat4f.htm#a9a4e16889264f58d8a5d69b9908c8231">ezSimdMat4f::MakeFromColumns</a></div><div class="ttdeci">static ezSimdMat4f MakeFromColumns(const ezSimdVec4f &amp;vCol0, const ezSimdVec4f &amp;vCol1, const ezSimdVec4f &amp;vCol2, const ezSimdVec4f &amp;vCol3)</div><div class="ttdoc">Creates a matrix from 4 column vectors.</div><div class="ttdef"><b>Definition:</b> SimdMat4f_inl.h:16</div></div>
<div class="ttc" id="aclassez_simd_quat_htm_ab0c380d8d41167fcfea828a833be45f6"><div class="ttname"><a href="../../d7/dc1/classez_simd_quat.htm#ab0c380d8d41167fcfea828a833be45f6">ezSimdQuat::MakeFromAxisAndAngle</a></div><div class="ttdeci">static ezSimdQuat MakeFromAxisAndAngle(const ezSimdVec4f &amp;vRotationAxis, const ezSimdFloat &amp;fAngle)</div><div class="ttdoc">Creates a quaternion from a rotation-axis and an angle (angle is given in Radians or as an ezAngle)</div><div class="ttdef"><b>Definition:</b> SimdQuat_inl.h:20</div></div>
<div class="ttc" id="aclassez_simd_quat_htm_aa83d02eafb7b3b78c2292f2ff5d03bc5"><div class="ttname"><a href="../../d7/dc1/classez_simd_quat.htm#aa83d02eafb7b3b78c2292f2ff5d03bc5">ezSimdQuat::GetAsMat4</a></div><div class="ttdeci">ezSimdMat4f GetAsMat4() const</div><div class="ttdoc">Returns the Quaternion as a matrix.</div><div class="ttdef"><b>Definition:</b> SimdQuat_inl.h:58</div></div>
<div class="ttc" id="aclassez_simd_float_htm"><div class="ttname"><a href="../../d2/d0c/classez_simd_float.htm">ezSimdFloat</a></div><div class="ttdef"><b>Definition:</b> SimdFloat.h:6</div></div>
<div class="ttc" id="aclassez_simd_quat_htm_ae594106f21bcbff34682703284fd7c29"><div class="ttname"><a href="../../d7/dc1/classez_simd_quat.htm#ae594106f21bcbff34682703284fd7c29">ezSimdQuat::GetRotationAxisAndAngle</a></div><div class="ttdeci">ezResult GetRotationAxisAndAngle(ezSimdVec4f &amp;ref_vAxis, ezSimdFloat &amp;ref_fAngle, const ezSimdFloat &amp;fEpsilon=ezMath::DefaultEpsilon&lt; float &gt;()) const</div><div class="ttdoc">Returns the rotation-axis and angle (in Radians), that this quaternion rotates around.</div><div class="ttdef"><b>Definition:</b> SimdQuat_inl.h:38</div></div>
<div class="ttc" id="aclassez_simd_quat_htm_ad18b81f4c50699900197f3d3638d828a"><div class="ttname"><a href="../../d7/dc1/classez_simd_quat.htm#ad18b81f4c50699900197f3d3638d828a">ezSimdQuat::IsValid</a></div><div class="ttdeci">bool IsValid(const ezSimdFloat &amp;fEpsilon=ezMath::DefaultEpsilon&lt; float &gt;()) const</div><div class="ttdoc">Checks whether all components are neither NaN nor infinite and that the quaternion is normalized.</div><div class="ttdef"><b>Definition:</b> SimdQuat_inl.h:105</div></div>
<div class="ttc" id="aclassez_simd_quat_htm_a8c5088adc1d54d1998b27efebd9feba4"><div class="ttname"><a href="../../d7/dc1/classez_simd_quat.htm#a8c5088adc1d54d1998b27efebd9feba4">ezSimdQuat::IsNaN</a></div><div class="ttdeci">bool IsNaN() const</div><div class="ttdoc">Checks whether any component is NaN.</div><div class="ttdef"><b>Definition:</b> SimdQuat_inl.h:110</div></div>
<div class="ttc" id="aclassez_angle_htm_af0d5329191f5e431830ad76f91f7cc0f"><div class="ttname"><a href="../../db/d6f/classez_angle.htm#af0d5329191f5e431830ad76f91f7cc0f">ezAngle::MakeFromRadian</a></div><div class="ttdeci">constexpr static ezAngle MakeFromRadian(float fRadian)</div><div class="ttdoc">Creates an instance of ezAngle that was initialized from radian. (No need for any conversion)</div><div class="ttdef"><b>Definition:</b> Angle_inl.h:38</div></div>
<div class="ttc" id="aclassez_angle_htm"><div class="ttname"><a href="../../db/d6f/classez_angle.htm">ezAngle</a></div><div class="ttdoc">Float wrapper struct for a safe usage and conversions of angles.</div><div class="ttdef"><b>Definition:</b> Angle.h:9</div></div>
<div class="ttc" id="aclassez_simd_quat_htm"><div class="ttname"><a href="../../d7/dc1/classez_simd_quat.htm">ezSimdQuat</a></div><div class="ttdef"><b>Definition:</b> SimdQuat.h:5</div></div>
<div class="ttc" id="anamespaceez_math_htm_a40cf3173aac40e0e462c57728e9410ab"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#a40cf3173aac40e0e462c57728e9410ab">ezMath::Cos</a></div><div class="ttdeci">EZ_ALWAYS_INLINE float Cos(ezAngle a)</div><div class="ttdoc">Takes an angle, returns its cosine.</div><div class="ttdef"><b>Definition:</b> MathFloat_inl.h:82</div></div>
<div class="ttc" id="aclassez_simd_vec4b_htm"><div class="ttname"><a href="../../de/daa/classez_simd_vec4b.htm">ezSimdVec4b</a></div><div class="ttdef"><b>Definition:</b> SimdVec4b.h:6</div></div>
<div class="ttc" id="aclassez_simd_mat4f_htm"><div class="ttname"><a href="../../d2/d62/classez_simd_mat4f.htm">ezSimdMat4f</a></div><div class="ttdoc">A 4x4 matrix class.</div><div class="ttdef"><b>Definition:</b> SimdMat4f.h:6</div></div>
<div class="ttc" id="aclassez_simd_vec4f_htm"><div class="ttname"><a href="../../db/d0d/classez_simd_vec4f.htm">ezSimdVec4f</a></div><div class="ttdoc">A 4-component SIMD vector class.</div><div class="ttdef"><b>Definition:</b> SimdVec4f.h:7</div></div>
<div class="ttc" id="aclassez_simd_quat_htm_a0176fe511ca167ab14b03ed4bd04080a"><div class="ttname"><a href="../../d7/dc1/classez_simd_quat.htm#a0176fe511ca167ab14b03ed4bd04080a">ezSimdQuat::operator-</a></div><div class="ttdeci">ezSimdQuat operator-() const</div><div class="ttdoc">Returns a Quaternion that represents the negative / inverted rotation.</div><div class="ttdef"><b>Definition:</b> SimdQuat_inl.h:115</div></div>
<div class="ttc" id="aclassez_simd_quat_htm_a6a3f9aafcde878361848dfd54abd9745"><div class="ttname"><a href="../../d7/dc1/classez_simd_quat.htm#a6a3f9aafcde878361848dfd54abd9745">ezSimdQuat::MakeFromElements</a></div><div class="ttdeci">static ezSimdQuat MakeFromElements(ezSimdFloat x, ezSimdFloat y, ezSimdFloat z, ezSimdFloat w)</div><div class="ttdoc">Sets the individual elements of the quaternion directly. Note that x,y,z do NOT represent a rotation ...</div><div class="ttdef"><b>Definition:</b> SimdQuat_inl.h:15</div></div>
<div class="ttc" id="aclassez_simd_vec4f_htm_a863f3b8ecc6cf51a9982daf6f9a98c08"><div class="ttname"><a href="../../db/d0d/classez_simd_vec4f.htm#a863f3b8ecc6cf51a9982daf6f9a98c08">ezSimdVec4f::CrossRH</a></div><div class="ttdeci">ezSimdVec4f CrossRH(const ezSimdVec4f &amp;v) const</div><div class="ttdoc">3D cross product, w is ignored.</div><div class="ttdef"><b>Definition:</b> FPUVec4f_inl.h:492</div></div>
<div class="ttc" id="aclassez_simd_quat_htm_a7b78ee0af954f9e039c852869d18c65e"><div class="ttname"><a href="../../d7/dc1/classez_simd_quat.htm#a7b78ee0af954f9e039c852869d18c65e">ezSimdQuat::operator*</a></div><div class="ttdeci">ezSimdVec4f operator*(const ezSimdVec4f &amp;v) const</div><div class="ttdoc">Rotates v by q.</div><div class="ttdef"><b>Definition:</b> SimdQuat_inl.h:120</div></div>
<div class="ttc" id="anamespaceez_math_htm_afcbf5132d5cbfc7070cd6d3086709ceb"><div class="ttname"><a href="../../db/d78/namespaceez_math.htm#afcbf5132d5cbfc7070cd6d3086709ceb">ezMath::ACos</a></div><div class="ttdeci">EZ_ALWAYS_INLINE ezAngle ACos(float f)</div><div class="ttdoc">Returns the arcus cosinus of f.</div><div class="ttdef"><b>Definition:</b> MathFloat_inl.h:97</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_6b9381ed4ec7e78ad4ad9509acce36a5.htm">SimdMath</a></li><li class="navelem"><a class="el" href="../../dir_3d955f3f3e7fff9f34f1ed045c0694e5.htm">Implementation</a></li><li class="navelem"><b>SimdQuat_inl.h</b></li>
    <li class="footer">Generated on Sun Aug 25 2024 13:06:20 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
