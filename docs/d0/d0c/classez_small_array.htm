<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: ezSmallArray&lt; T, Size, AllocatorWrapper &gt; Class Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 21.10</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d0/d0c/classez_small_array.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="../../d2/dfd/classez_small_array-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ezSmallArray&lt; T, Size, AllocatorWrapper &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="../../d6/d8d/_small_array_8h_source.htm">SmallArray.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for ezSmallArray&lt; T, Size, AllocatorWrapper &gt;:</div>
<div class="dyncontent">
<div class="center"><img src="../../d4/dcd/classez_small_array__inherit__graph.png" border="0" usemap="#ez_small_array_3_01_t_00_01_size_00_01_allocator_wrapper_01_4_inherit__map" alt="Inheritance graph"/></div>
<map name="ez_small_array_3_01_t_00_01_size_00_01_allocator_wrapper_01_4_inherit__map" id="ez_small_array_3_01_t_00_01_size_00_01_allocator_wrapper_01_4_inherit__map">
<area shape="rect" title=" " alt="" coords="5,95,176,136"/>
<area shape="rect" href="../../d4/d0b/classez_small_array_base.htm" title="Implementation of a dynamically growing array with in&#45;place storage and small memory overhead." alt="" coords="7,5,175,47"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a950c7d2eb437410d315f6183a1ffb1c8"><td class="memItemLeft" align="right" valign="top"><a id="a950c7d2eb437410d315f6183a1ffb1c8"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>EZ_DECLARE_MEM_RELOCATABLE_TYPE_CONDITIONAL</b> (T)</td></tr>
<tr class="separator:a950c7d2eb437410d315f6183a1ffb1c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9bf1851f60e6f801ca7d4ee9c514eb43"><td class="memItemLeft" align="right" valign="top"><a id="a9bf1851f60e6f801ca7d4ee9c514eb43"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>ezSmallArray</b> (const <a class="el" href="../../d0/d0c/classez_small_array.htm">ezSmallArray</a>&lt; T, Size, AllocatorWrapper &gt; &amp;other)</td></tr>
<tr class="separator:a9bf1851f60e6f801ca7d4ee9c514eb43"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71ff2549d41d5d4eb6b57dfe5964d617"><td class="memItemLeft" align="right" valign="top"><a id="a71ff2549d41d5d4eb6b57dfe5964d617"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>ezSmallArray</b> (const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; const T &gt; &amp;other)</td></tr>
<tr class="separator:a71ff2549d41d5d4eb6b57dfe5964d617"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d0e878adc6d4edb0d3536c30b8e7353"><td class="memItemLeft" align="right" valign="top"><a id="a4d0e878adc6d4edb0d3536c30b8e7353"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>ezSmallArray</b> (<a class="el" href="../../d0/d0c/classez_small_array.htm">ezSmallArray</a>&lt; T, Size, AllocatorWrapper &gt; &amp;&amp;other)</td></tr>
<tr class="separator:a4d0e878adc6d4edb0d3536c30b8e7353"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b86482cee63a0c5220a4eb0d0fa9a4f"><td class="memItemLeft" align="right" valign="top"><a id="a7b86482cee63a0c5220a4eb0d0fa9a4f"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="../../d0/d0c/classez_small_array.htm">ezSmallArray</a>&lt; T, Size, AllocatorWrapper &gt; &amp;rhs)</td></tr>
<tr class="separator:a7b86482cee63a0c5220a4eb0d0fa9a4f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab5b099d377290e06f20e47fd98ebc808"><td class="memItemLeft" align="right" valign="top"><a id="ab5b099d377290e06f20e47fd98ebc808"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; const T &gt; &amp;rhs)</td></tr>
<tr class="separator:ab5b099d377290e06f20e47fd98ebc808"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c833dc74c301b693b7ec83a2fdb3848"><td class="memItemLeft" align="right" valign="top"><a id="a4c833dc74c301b693b7ec83a2fdb3848"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (<a class="el" href="../../d0/d0c/classez_small_array.htm">ezSmallArray</a>&lt; T, Size, AllocatorWrapper &gt; &amp;&amp;rhs) noexcept</td></tr>
<tr class="separator:a4c833dc74c301b693b7ec83a2fdb3848"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac05c5e78b6da2c7c464f310504f19286"><td class="memItemLeft" align="right" valign="top"><a id="ac05c5e78b6da2c7c464f310504f19286"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetCount</b> (ezUInt16 uiCount)</td></tr>
<tr class="separator:ac05c5e78b6da2c7c464f310504f19286"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3b7ee63549057f1f508dc2ea5626eb1f"><td class="memItemLeft" align="right" valign="top"><a id="a3b7ee63549057f1f508dc2ea5626eb1f"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetCount</b> (ezUInt16 uiCount, const T &amp;FillValue)</td></tr>
<tr class="separator:a3b7ee63549057f1f508dc2ea5626eb1f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a08bfa5449240490edd0a08375d3b82f2"><td class="memItemLeft" align="right" valign="top"><a id="a08bfa5449240490edd0a08375d3b82f2"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>EnsureCount</b> (ezUInt16 uiCount)</td></tr>
<tr class="separator:a08bfa5449240490edd0a08375d3b82f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5aa266eedbf803e596ef9d8019240c08"><td class="memTemplParams" colspan="2"><a id="a5aa266eedbf803e596ef9d8019240c08"></a>
template&lt;typename  = void&gt; </td></tr>
<tr class="memitem:a5aa266eedbf803e596ef9d8019240c08"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><b>SetCountUninitialized</b> (ezUInt16 uiCount)</td></tr>
<tr class="separator:a5aa266eedbf803e596ef9d8019240c08"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac8f90cb241ee9c5f68098c062b39816c"><td class="memItemLeft" align="right" valign="top"><a id="ac8f90cb241ee9c5f68098c062b39816c"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Insert</b> (const T &amp;value, ezUInt32 uiIndex)</td></tr>
<tr class="separator:ac8f90cb241ee9c5f68098c062b39816c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a563c831e65b82ad39a34711cd0479c83"><td class="memItemLeft" align="right" valign="top"><a id="a563c831e65b82ad39a34711cd0479c83"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Insert</b> (T &amp;&amp;value, ezUInt32 uiIndex)</td></tr>
<tr class="separator:a563c831e65b82ad39a34711cd0479c83"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adbb5124d92e853e7dcd6c2ac71130d05"><td class="memItemLeft" align="right" valign="top"><a id="adbb5124d92e853e7dcd6c2ac71130d05"></a>
T &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>ExpandAndGetRef</b> ()</td></tr>
<tr class="separator:adbb5124d92e853e7dcd6c2ac71130d05"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb61f8b97ffdc8aba7176900fc8a7385"><td class="memItemLeft" align="right" valign="top"><a id="aeb61f8b97ffdc8aba7176900fc8a7385"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>PushBack</b> (const T &amp;value)</td></tr>
<tr class="separator:aeb61f8b97ffdc8aba7176900fc8a7385"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9896b10e8c0e7fcc2e3ffdbc1cb6aea2"><td class="memItemLeft" align="right" valign="top"><a id="a9896b10e8c0e7fcc2e3ffdbc1cb6aea2"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>PushBack</b> (T &amp;&amp;value)</td></tr>
<tr class="separator:a9896b10e8c0e7fcc2e3ffdbc1cb6aea2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b6e4ff1d1c3f23c0979c4060820424a"><td class="memItemLeft" align="right" valign="top"><a id="a5b6e4ff1d1c3f23c0979c4060820424a"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>PushBackRange</b> (const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; const T &gt; &amp;range)</td></tr>
<tr class="separator:a5b6e4ff1d1c3f23c0979c4060820424a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5e06b407569ee00c782dff33239744d"><td class="memItemLeft" align="right" valign="top"><a id="ad5e06b407569ee00c782dff33239744d"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Reserve</b> (ezUInt16 uiCapacity)</td></tr>
<tr class="separator:ad5e06b407569ee00c782dff33239744d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2895ec0be7616f34184412f231540ed1"><td class="memItemLeft" align="right" valign="top"><a id="a2895ec0be7616f34184412f231540ed1"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Compact</b> ()</td></tr>
<tr class="separator:a2895ec0be7616f34184412f231540ed1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa14f69771a8254dab169d9c3ac21ca01"><td class="memTemplParams" colspan="2"><a id="aa14f69771a8254dab169d9c3ac21ca01"></a>
template&lt;typename &gt; </td></tr>
<tr class="memitem:aa14f69771a8254dab169d9c3ac21ca01"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE void&#160;</td><td class="memTemplItemRight" valign="bottom"><b>SetCountUninitialized</b> (ezUInt16 uiCount)</td></tr>
<tr class="separator:aa14f69771a8254dab169d9c3ac21ca01"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classez_small_array_base"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classez_small_array_base')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase&lt; T, Size &gt;</a></td></tr>
<tr class="memitem:a17a4f49a8778284209e5b8613b1a1f89 inherit pub_methods_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a17a4f49a8778284209e5b8613b1a1f89"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>EZ_DECLARE_MEM_RELOCATABLE_TYPE_CONDITIONAL</b> (T)</td></tr>
<tr class="separator:a17a4f49a8778284209e5b8613b1a1f89 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a08ffd89ba59bd2bbb94ea466308363a6 inherit pub_methods_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a08ffd89ba59bd2bbb94ea466308363a6"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>ezSmallArrayBase</b> (const <a class="el" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase</a>&lt; T, Size &gt; &amp;other, <a class="el" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a> *pAllocator)</td></tr>
<tr class="separator:a08ffd89ba59bd2bbb94ea466308363a6 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a55a22dc0e49a48d7befe3ec27f490dbd inherit pub_methods_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a55a22dc0e49a48d7befe3ec27f490dbd"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>ezSmallArrayBase</b> (const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; const T &gt; &amp;other, <a class="el" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a> *pAllocator)</td></tr>
<tr class="separator:a55a22dc0e49a48d7befe3ec27f490dbd inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6a8ee38fd6ac92ebe40c5f9f8ec8fc4 inherit pub_methods_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="af6a8ee38fd6ac92ebe40c5f9f8ec8fc4"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>ezSmallArrayBase</b> (<a class="el" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase</a>&lt; T, Size &gt; &amp;&amp;other, <a class="el" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a> *pAllocator)</td></tr>
<tr class="separator:af6a8ee38fd6ac92ebe40c5f9f8ec8fc4 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af0565f5df2b455b085b364ad147f1034 inherit pub_methods_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="af0565f5df2b455b085b364ad147f1034"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase</a>&lt; T, Size &gt; &amp;rhs)=delete</td></tr>
<tr class="separator:af0565f5df2b455b085b364ad147f1034 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a81637bc0d5c787520d232e239aa93de8 inherit pub_methods_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a81637bc0d5c787520d232e239aa93de8"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (<a class="el" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase</a>&lt; T, Size &gt; &amp;&amp;rhs)=delete</td></tr>
<tr class="separator:a81637bc0d5c787520d232e239aa93de8 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a97de18ad1c8ffa22da8c77907f10341b inherit pub_methods_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a97de18ad1c8ffa22da8c77907f10341b"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d0b/classez_small_array_base.htm#a97de18ad1c8ffa22da8c77907f10341b">CopyFrom</a> (const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; const T &gt; &amp;other, <a class="el" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a> *pAllocator)</td></tr>
<tr class="memdesc:a97de18ad1c8ffa22da8c77907f10341b inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the data from some other array into this one. <br /></td></tr>
<tr class="separator:a97de18ad1c8ffa22da8c77907f10341b inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8fccbb4e33c365fc8bdab7d9490cd9df inherit pub_methods_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a8fccbb4e33c365fc8bdab7d9490cd9df"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d0b/classez_small_array_base.htm#a8fccbb4e33c365fc8bdab7d9490cd9df">MoveFrom</a> (<a class="el" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase</a>&lt; T, Size &gt; &amp;&amp;other, <a class="el" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a> *pAllocator)</td></tr>
<tr class="memdesc:a8fccbb4e33c365fc8bdab7d9490cd9df inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Moves the data from some other array into this one. <br /></td></tr>
<tr class="separator:a8fccbb4e33c365fc8bdab7d9490cd9df inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12865f08993693bf08cce4b0416cdbbd inherit pub_methods_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a12865f08993693bf08cce4b0416cdbbd"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d0b/classez_small_array_base.htm#a12865f08993693bf08cce4b0416cdbbd">operator ezArrayPtr&lt; const T &gt;</a> () const</td></tr>
<tr class="memdesc:a12865f08993693bf08cce4b0416cdbbd inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Conversion to const <a class="el" href="../../dc/dae/classez_array_ptr.htm" title="This class encapsulates an array and it&#39;s size. It is recommended to use this class instead of plain ...">ezArrayPtr</a>. <br /></td></tr>
<tr class="separator:a12865f08993693bf08cce4b0416cdbbd inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7f6ca08967eb1145a8d5f19e2223270 inherit pub_methods_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="ab7f6ca08967eb1145a8d5f19e2223270"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d0b/classez_small_array_base.htm#ab7f6ca08967eb1145a8d5f19e2223270">operator ezArrayPtr&lt; T &gt;</a> ()</td></tr>
<tr class="memdesc:ab7f6ca08967eb1145a8d5f19e2223270 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Conversion to <a class="el" href="../../dc/dae/classez_array_ptr.htm" title="This class encapsulates an array and it&#39;s size. It is recommended to use this class instead of plain ...">ezArrayPtr</a>. <br /></td></tr>
<tr class="separator:ab7f6ca08967eb1145a8d5f19e2223270 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f88c6f77d9dfac59323e44c08eac677 inherit pub_methods_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a0f88c6f77d9dfac59323e44c08eac677"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d0b/classez_small_array_base.htm#a0f88c6f77d9dfac59323e44c08eac677">operator==</a> (const <a class="el" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase</a>&lt; T, Size &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:a0f88c6f77d9dfac59323e44c08eac677 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares this array to another contiguous array type. <br /></td></tr>
<tr class="separator:a0f88c6f77d9dfac59323e44c08eac677 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7bc61e10d9128584dbb5661cef2e8830 inherit pub_methods_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a7bc61e10d9128584dbb5661cef2e8830"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator==</b> (const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; const T &gt; &amp;rhs) const</td></tr>
<tr class="separator:a7bc61e10d9128584dbb5661cef2e8830 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af6e2c133e77abd3aeb8ae5d9f9458356 inherit pub_methods_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="af6e2c133e77abd3aeb8ae5d9f9458356"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d0b/classez_small_array_base.htm#af6e2c133e77abd3aeb8ae5d9f9458356">operator!=</a> (const <a class="el" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase</a>&lt; T, Size &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:af6e2c133e77abd3aeb8ae5d9f9458356 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares this array to another contiguous array type. <br /></td></tr>
<tr class="separator:af6e2c133e77abd3aeb8ae5d9f9458356 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e6946ccf7f8f110600b3159e92997a3 inherit pub_methods_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a8e6946ccf7f8f110600b3159e92997a3"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator!=</b> (const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; const T &gt; &amp;rhs) const</td></tr>
<tr class="separator:a8e6946ccf7f8f110600b3159e92997a3 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a89b21be2199a007c03c93e590ac7b033 inherit pub_methods_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a89b21be2199a007c03c93e590ac7b033"></a>
const T &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d0b/classez_small_array_base.htm#a89b21be2199a007c03c93e590ac7b033">operator[]</a> (ezUInt32 uiIndex) const</td></tr>
<tr class="memdesc:a89b21be2199a007c03c93e590ac7b033 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the element at the given index. Does bounds checks in debug builds. <br /></td></tr>
<tr class="separator:a89b21be2199a007c03c93e590ac7b033 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af2d36c4e256ca155d9c5bc9c32d43405 inherit pub_methods_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="af2d36c4e256ca155d9c5bc9c32d43405"></a>
T &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d0b/classez_small_array_base.htm#af2d36c4e256ca155d9c5bc9c32d43405">operator[]</a> (ezUInt32 uiIndex)</td></tr>
<tr class="memdesc:af2d36c4e256ca155d9c5bc9c32d43405 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the element at the given index. Does bounds checks in debug builds. <br /></td></tr>
<tr class="separator:af2d36c4e256ca155d9c5bc9c32d43405 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d71f8618557dcc52d63b7001f263966 inherit pub_methods_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a4d71f8618557dcc52d63b7001f263966"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d0b/classez_small_array_base.htm#a4d71f8618557dcc52d63b7001f263966">SetCount</a> (ezUInt16 uiCount, <a class="el" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a> *pAllocator)</td></tr>
<tr class="memdesc:a4d71f8618557dcc52d63b7001f263966 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resizes the array to have exactly uiCount elements. Default constructs extra elements if the array is grown. <br /></td></tr>
<tr class="separator:a4d71f8618557dcc52d63b7001f263966 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae0b8f8e7880a80a1592ad3b794b047e5 inherit pub_methods_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="ae0b8f8e7880a80a1592ad3b794b047e5"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d0b/classez_small_array_base.htm#ae0b8f8e7880a80a1592ad3b794b047e5">SetCount</a> (ezUInt16 uiCount, const T &amp;FillValue, <a class="el" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a> *pAllocator)</td></tr>
<tr class="memdesc:ae0b8f8e7880a80a1592ad3b794b047e5 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resizes the array to have exactly uiCount elements. Constructs all new elements by copying the FillValue. <br /></td></tr>
<tr class="separator:ae0b8f8e7880a80a1592ad3b794b047e5 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a286f03bad58c3ada8915769f43946307 inherit pub_methods_classez_small_array_base"><td class="memTemplParams" colspan="2"><a id="a286f03bad58c3ada8915769f43946307"></a>
template&lt;typename  = void&gt; </td></tr>
<tr class="memitem:a286f03bad58c3ada8915769f43946307 inherit pub_methods_classez_small_array_base"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../d4/d0b/classez_small_array_base.htm#a286f03bad58c3ada8915769f43946307">SetCountUninitialized</a> (ezUInt16 uiCount, <a class="el" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a> *pAllocator)</td></tr>
<tr class="memdesc:a286f03bad58c3ada8915769f43946307 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resizes the array to have exactly uiCount elements. Extra elements might be uninitialized. <br /></td></tr>
<tr class="separator:a286f03bad58c3ada8915769f43946307 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90abaa8230bacd395e9927b685d385f5 inherit pub_methods_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a90abaa8230bacd395e9927b685d385f5"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d0b/classez_small_array_base.htm#a90abaa8230bacd395e9927b685d385f5">EnsureCount</a> (ezUInt16 uiCount, <a class="el" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a> *pAllocator)</td></tr>
<tr class="memdesc:a90abaa8230bacd395e9927b685d385f5 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Ensures the container has at least <em>uiCount</em> elements. Ie. calls <a class="el" href="../../d4/d0b/classez_small_array_base.htm#a4d71f8618557dcc52d63b7001f263966" title="Resizes the array to have exactly uiCount elements. Default constructs extra elements if the array is...">SetCount()</a> if the container has fewer elements, does nothing otherwise. <br /></td></tr>
<tr class="separator:a90abaa8230bacd395e9927b685d385f5 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac13be38fb1e58b0b94c405db9318792a inherit pub_methods_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="ac13be38fb1e58b0b94c405db9318792a"></a>
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d0b/classez_small_array_base.htm#ac13be38fb1e58b0b94c405db9318792a">GetCount</a> () const</td></tr>
<tr class="memdesc:ac13be38fb1e58b0b94c405db9318792a inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of active elements in the array. <br /></td></tr>
<tr class="separator:ac13be38fb1e58b0b94c405db9318792a inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b66ce1a35b2f1659ba61c534969dae4 inherit pub_methods_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a0b66ce1a35b2f1659ba61c534969dae4"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d0b/classez_small_array_base.htm#a0b66ce1a35b2f1659ba61c534969dae4">IsEmpty</a> () const</td></tr>
<tr class="memdesc:a0b66ce1a35b2f1659ba61c534969dae4 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if the array does not contain any elements. <br /></td></tr>
<tr class="separator:a0b66ce1a35b2f1659ba61c534969dae4 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5787f727bd1a20181e3e2150c7d37fc2 inherit pub_methods_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a5787f727bd1a20181e3e2150c7d37fc2"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d0b/classez_small_array_base.htm#a5787f727bd1a20181e3e2150c7d37fc2">Clear</a> ()</td></tr>
<tr class="memdesc:a5787f727bd1a20181e3e2150c7d37fc2 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears the array. <br /></td></tr>
<tr class="separator:a5787f727bd1a20181e3e2150c7d37fc2 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18878b1e8e942abb9861435942918a83 inherit pub_methods_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a18878b1e8e942abb9861435942918a83"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d0b/classez_small_array_base.htm#a18878b1e8e942abb9861435942918a83">Contains</a> (const T &amp;value) const</td></tr>
<tr class="memdesc:a18878b1e8e942abb9861435942918a83 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether the given value can be found in the array. O(n) complexity. <br /></td></tr>
<tr class="separator:a18878b1e8e942abb9861435942918a83 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2c80fa30a421aac1360f240c5068c3b4 inherit pub_methods_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a2c80fa30a421aac1360f240c5068c3b4"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d0b/classez_small_array_base.htm#a2c80fa30a421aac1360f240c5068c3b4">Insert</a> (const T &amp;value, ezUInt32 uiIndex, <a class="el" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a> *pAllocator)</td></tr>
<tr class="memdesc:a2c80fa30a421aac1360f240c5068c3b4 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inserts value at index by shifting all following elements. <br /></td></tr>
<tr class="separator:a2c80fa30a421aac1360f240c5068c3b4 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ff011a1ffa731c8e5e738763b802150 inherit pub_methods_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a7ff011a1ffa731c8e5e738763b802150"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d0b/classez_small_array_base.htm#a7ff011a1ffa731c8e5e738763b802150">Insert</a> (T &amp;&amp;value, ezUInt32 uiIndex, <a class="el" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a> *pAllocator)</td></tr>
<tr class="memdesc:a7ff011a1ffa731c8e5e738763b802150 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inserts value at index by shifting all following elements. <br /></td></tr>
<tr class="separator:a7ff011a1ffa731c8e5e738763b802150 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a772bcf3f2189007961b0ba3b4ecf4213 inherit pub_methods_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a772bcf3f2189007961b0ba3b4ecf4213"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d0b/classez_small_array_base.htm#a772bcf3f2189007961b0ba3b4ecf4213">RemoveAndCopy</a> (const T &amp;value)</td></tr>
<tr class="memdesc:a772bcf3f2189007961b0ba3b4ecf4213 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes the first occurrence of value and fills the gap by shifting all following elements. <br /></td></tr>
<tr class="separator:a772bcf3f2189007961b0ba3b4ecf4213 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a820dddee4c830c06fab015b887e474bd inherit pub_methods_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a820dddee4c830c06fab015b887e474bd"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d0b/classez_small_array_base.htm#a820dddee4c830c06fab015b887e474bd">RemoveAndSwap</a> (const T &amp;value)</td></tr>
<tr class="memdesc:a820dddee4c830c06fab015b887e474bd inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes the first occurrence of value and fills the gap by swapping in the last element. <br /></td></tr>
<tr class="separator:a820dddee4c830c06fab015b887e474bd inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1738f62dcb310db3108fa70cff237c4f inherit pub_methods_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a1738f62dcb310db3108fa70cff237c4f"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d0b/classez_small_array_base.htm#a1738f62dcb310db3108fa70cff237c4f">RemoveAtAndCopy</a> (ezUInt32 uiIndex, ezUInt32 uiNumElements=1)</td></tr>
<tr class="memdesc:a1738f62dcb310db3108fa70cff237c4f inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes the element at index and fills the gap by shifting all following elements. <br /></td></tr>
<tr class="separator:a1738f62dcb310db3108fa70cff237c4f inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb3c873c53624b1888d3f7a84da00c89 inherit pub_methods_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="abb3c873c53624b1888d3f7a84da00c89"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d0b/classez_small_array_base.htm#abb3c873c53624b1888d3f7a84da00c89">RemoveAtAndSwap</a> (ezUInt32 uiIndex, ezUInt32 uiNumElements=1)</td></tr>
<tr class="memdesc:abb3c873c53624b1888d3f7a84da00c89 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes the element at index and fills the gap by swapping in the last element. <br /></td></tr>
<tr class="separator:abb3c873c53624b1888d3f7a84da00c89 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e93f15bb764fa59a641b642df5cc551 inherit pub_methods_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a6e93f15bb764fa59a641b642df5cc551"></a>
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d0b/classez_small_array_base.htm#a6e93f15bb764fa59a641b642df5cc551">IndexOf</a> (const T &amp;value, ezUInt32 uiStartIndex=0) const</td></tr>
<tr class="memdesc:a6e93f15bb764fa59a641b642df5cc551 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Searches for the first occurrence of the given value and returns its index or ezInvalidIndex if not found. <br /></td></tr>
<tr class="separator:a6e93f15bb764fa59a641b642df5cc551 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a985ee77c3751c5a007143f128af1bbd5 inherit pub_methods_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a985ee77c3751c5a007143f128af1bbd5"></a>
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d0b/classez_small_array_base.htm#a985ee77c3751c5a007143f128af1bbd5">LastIndexOf</a> (const T &amp;value, ezUInt32 uiStartIndex=ezSmallInvalidIndex) const</td></tr>
<tr class="memdesc:a985ee77c3751c5a007143f128af1bbd5 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Searches for the last occurrence of the given value and returns its index or ezInvalidIndex if not found. <br /></td></tr>
<tr class="separator:a985ee77c3751c5a007143f128af1bbd5 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a803f880237ba7b654211a9595b6d6795 inherit pub_methods_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a803f880237ba7b654211a9595b6d6795"></a>
T &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d0b/classez_small_array_base.htm#a803f880237ba7b654211a9595b6d6795">ExpandAndGetRef</a> (<a class="el" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a> *pAllocator)</td></tr>
<tr class="memdesc:a803f880237ba7b654211a9595b6d6795 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Grows the array by one element and returns a reference to the newly created element. <br /></td></tr>
<tr class="separator:a803f880237ba7b654211a9595b6d6795 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a753b3d6c3754f4ef45ccb5bb58542339 inherit pub_methods_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a753b3d6c3754f4ef45ccb5bb58542339"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d0b/classez_small_array_base.htm#a753b3d6c3754f4ef45ccb5bb58542339">PushBack</a> (const T &amp;value, <a class="el" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a> *pAllocator)</td></tr>
<tr class="memdesc:a753b3d6c3754f4ef45ccb5bb58542339 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pushes value at the end of the array. <br /></td></tr>
<tr class="separator:a753b3d6c3754f4ef45ccb5bb58542339 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf6da880c81ff9e64fe1355a11cd680d inherit pub_methods_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="aaf6da880c81ff9e64fe1355a11cd680d"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d0b/classez_small_array_base.htm#aaf6da880c81ff9e64fe1355a11cd680d">PushBack</a> (T &amp;&amp;value, <a class="el" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a> *pAllocator)</td></tr>
<tr class="memdesc:aaf6da880c81ff9e64fe1355a11cd680d inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pushes value at the end of the array. <br /></td></tr>
<tr class="separator:aaf6da880c81ff9e64fe1355a11cd680d inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a804a1289180252024587478ef0de74f2 inherit pub_methods_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a804a1289180252024587478ef0de74f2"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d0b/classez_small_array_base.htm#a804a1289180252024587478ef0de74f2">PushBackUnchecked</a> (const T &amp;value)</td></tr>
<tr class="memdesc:a804a1289180252024587478ef0de74f2 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pushes value at the end of the array. Does NOT ensure capacity. <br /></td></tr>
<tr class="separator:a804a1289180252024587478ef0de74f2 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a946602a12b686a8a089e663d4a7599e2 inherit pub_methods_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a946602a12b686a8a089e663d4a7599e2"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d0b/classez_small_array_base.htm#a946602a12b686a8a089e663d4a7599e2">PushBackUnchecked</a> (T &amp;&amp;value)</td></tr>
<tr class="memdesc:a946602a12b686a8a089e663d4a7599e2 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pushes value at the end of the array. Does NOT ensure capacity. <br /></td></tr>
<tr class="separator:a946602a12b686a8a089e663d4a7599e2 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aef512670ffc2e2aaca7fa4bc14e21bc3 inherit pub_methods_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="aef512670ffc2e2aaca7fa4bc14e21bc3"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d0b/classez_small_array_base.htm#aef512670ffc2e2aaca7fa4bc14e21bc3">PushBackRange</a> (const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; const T &gt; &amp;range, <a class="el" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a> *pAllocator)</td></tr>
<tr class="memdesc:aef512670ffc2e2aaca7fa4bc14e21bc3 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pushes all elements in range at the end of the array. Increases the capacity if necessary. <br /></td></tr>
<tr class="separator:aef512670ffc2e2aaca7fa4bc14e21bc3 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9f8a96a3f6070fb3f66a3a5a359016c inherit pub_methods_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="ad9f8a96a3f6070fb3f66a3a5a359016c"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d0b/classez_small_array_base.htm#ad9f8a96a3f6070fb3f66a3a5a359016c">PopBack</a> (ezUInt32 uiCountToRemove=1)</td></tr>
<tr class="memdesc:ad9f8a96a3f6070fb3f66a3a5a359016c inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes count elements from the end of the array. <br /></td></tr>
<tr class="separator:ad9f8a96a3f6070fb3f66a3a5a359016c inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f0ef09d5e9ad5c283728bb56a42f48d inherit pub_methods_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a9f0ef09d5e9ad5c283728bb56a42f48d"></a>
T &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d0b/classez_small_array_base.htm#a9f0ef09d5e9ad5c283728bb56a42f48d">PeekBack</a> ()</td></tr>
<tr class="memdesc:a9f0ef09d5e9ad5c283728bb56a42f48d inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the last element of the array. <br /></td></tr>
<tr class="separator:a9f0ef09d5e9ad5c283728bb56a42f48d inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa995dbb9961eb20d98d8df1d52e109de inherit pub_methods_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="aa995dbb9961eb20d98d8df1d52e109de"></a>
const T &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d0b/classez_small_array_base.htm#aa995dbb9961eb20d98d8df1d52e109de">PeekBack</a> () const</td></tr>
<tr class="memdesc:aa995dbb9961eb20d98d8df1d52e109de inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the last element of the array. <br /></td></tr>
<tr class="separator:aa995dbb9961eb20d98d8df1d52e109de inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a646f005d267f39cde5cd3d10b9ce446c inherit pub_methods_classez_small_array_base"><td class="memTemplParams" colspan="2"><a id="a646f005d267f39cde5cd3d10b9ce446c"></a>
template&lt;typename Comparer &gt; </td></tr>
<tr class="memitem:a646f005d267f39cde5cd3d10b9ce446c inherit pub_methods_classez_small_array_base"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../d4/d0b/classez_small_array_base.htm#a646f005d267f39cde5cd3d10b9ce446c">Sort</a> (const Comparer &amp;comparer)</td></tr>
<tr class="memdesc:a646f005d267f39cde5cd3d10b9ce446c inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sort with explicit comparer. <br /></td></tr>
<tr class="separator:a646f005d267f39cde5cd3d10b9ce446c inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46465983c607874239317c3dcc8b12d4 inherit pub_methods_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a46465983c607874239317c3dcc8b12d4"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d0b/classez_small_array_base.htm#a46465983c607874239317c3dcc8b12d4">Sort</a> ()</td></tr>
<tr class="memdesc:a46465983c607874239317c3dcc8b12d4 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sort with default comparer. <br /></td></tr>
<tr class="separator:a46465983c607874239317c3dcc8b12d4 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a035aabb33113bf853276208dcb524f04 inherit pub_methods_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a035aabb33113bf853276208dcb524f04"></a>
T *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d0b/classez_small_array_base.htm#a035aabb33113bf853276208dcb524f04">GetData</a> ()</td></tr>
<tr class="memdesc:a035aabb33113bf853276208dcb524f04 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a pointer to the array data, or nullptr if the array is empty. <br /></td></tr>
<tr class="separator:a035aabb33113bf853276208dcb524f04 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95280cf05bfaacedae1ff9bf0a1a6615 inherit pub_methods_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a95280cf05bfaacedae1ff9bf0a1a6615"></a>
const T *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d0b/classez_small_array_base.htm#a95280cf05bfaacedae1ff9bf0a1a6615">GetData</a> () const</td></tr>
<tr class="memdesc:a95280cf05bfaacedae1ff9bf0a1a6615 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a pointer to the array data, or nullptr if the array is empty. <br /></td></tr>
<tr class="separator:a95280cf05bfaacedae1ff9bf0a1a6615 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a258eaf177ae66072d013917c8f439b2d inherit pub_methods_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a258eaf177ae66072d013917c8f439b2d"></a>
<a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; T &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d0b/classez_small_array_base.htm#a258eaf177ae66072d013917c8f439b2d">GetArrayPtr</a> ()</td></tr>
<tr class="memdesc:a258eaf177ae66072d013917c8f439b2d inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an array pointer to the array data, or an empty array pointer if the array is empty. <br /></td></tr>
<tr class="separator:a258eaf177ae66072d013917c8f439b2d inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad7d47bdd47ab12c62a5cbb8751bc4e1d inherit pub_methods_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="ad7d47bdd47ab12c62a5cbb8751bc4e1d"></a>
<a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; const T &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d0b/classez_small_array_base.htm#ad7d47bdd47ab12c62a5cbb8751bc4e1d">GetArrayPtr</a> () const</td></tr>
<tr class="memdesc:ad7d47bdd47ab12c62a5cbb8751bc4e1d inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an array pointer to the array data, or an empty array pointer if the array is empty. <br /></td></tr>
<tr class="separator:ad7d47bdd47ab12c62a5cbb8751bc4e1d inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb5683c87ebb948913b951385175a88a inherit pub_methods_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="aeb5683c87ebb948913b951385175a88a"></a>
<a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; typename <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; T &gt;::ByteType &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d0b/classez_small_array_base.htm#aeb5683c87ebb948913b951385175a88a">GetByteArrayPtr</a> ()</td></tr>
<tr class="memdesc:aeb5683c87ebb948913b951385175a88a inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a byte array pointer to the array data, or an empty array pointer if the array is empty. <br /></td></tr>
<tr class="separator:aeb5683c87ebb948913b951385175a88a inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a95dd4ddd8b39d53a4fbfbaf9e7768a5d inherit pub_methods_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a95dd4ddd8b39d53a4fbfbaf9e7768a5d"></a>
<a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; typename <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; const T &gt;::ByteType &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d0b/classez_small_array_base.htm#a95dd4ddd8b39d53a4fbfbaf9e7768a5d">GetByteArrayPtr</a> () const</td></tr>
<tr class="memdesc:a95dd4ddd8b39d53a4fbfbaf9e7768a5d inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a byte array pointer to the array data, or an empty array pointer if the array is empty. <br /></td></tr>
<tr class="separator:a95dd4ddd8b39d53a4fbfbaf9e7768a5d inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ec2671d06fe7466a6ede942ead4c39e inherit pub_methods_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a2ec2671d06fe7466a6ede942ead4c39e"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d0b/classez_small_array_base.htm#a2ec2671d06fe7466a6ede942ead4c39e">Reserve</a> (ezUInt16 uiCapacity, <a class="el" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a> *pAllocator)</td></tr>
<tr class="memdesc:a2ec2671d06fe7466a6ede942ead4c39e inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Expands the array so it can at least store the given capacity. <br /></td></tr>
<tr class="separator:a2ec2671d06fe7466a6ede942ead4c39e inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adcff1737aa5d9a233bd3231897aa290b inherit pub_methods_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="adcff1737aa5d9a233bd3231897aa290b"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d0b/classez_small_array_base.htm#adcff1737aa5d9a233bd3231897aa290b">Compact</a> (<a class="el" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a> *pAllocator)</td></tr>
<tr class="memdesc:adcff1737aa5d9a233bd3231897aa290b inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tries to compact the array to avoid wasting memory. The resulting capacity is at least 'GetCount' (no elements get removed). Will deallocate all data, if the array is empty. <br /></td></tr>
<tr class="separator:adcff1737aa5d9a233bd3231897aa290b inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a88383b5d42c0b93a8fd424db57909098 inherit pub_methods_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a88383b5d42c0b93a8fd424db57909098"></a>
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d0b/classez_small_array_base.htm#a88383b5d42c0b93a8fd424db57909098">GetCapacity</a> () const</td></tr>
<tr class="memdesc:a88383b5d42c0b93a8fd424db57909098 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the reserved number of elements that the array can hold without reallocating. <br /></td></tr>
<tr class="separator:a88383b5d42c0b93a8fd424db57909098 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acfcee52c57545f1c462ef72c5271c416 inherit pub_methods_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="acfcee52c57545f1c462ef72c5271c416"></a>
ezUInt64&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d4/d0b/classez_small_array_base.htm#acfcee52c57545f1c462ef72c5271c416">GetHeapMemoryUsage</a> () const</td></tr>
<tr class="memdesc:acfcee52c57545f1c462ef72c5271c416 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the amount of bytes that are currently allocated on the heap. <br /></td></tr>
<tr class="separator:acfcee52c57545f1c462ef72c5271c416 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9754f0410f27cd69dd9b9a478f593f5 inherit pub_methods_classez_small_array_base"><td class="memTemplParams" colspan="2"><a id="ad9754f0410f27cd69dd9b9a478f593f5"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:ad9754f0410f27cd69dd9b9a478f593f5 inherit pub_methods_classez_small_array_base"><td class="memTemplItemLeft" align="right" valign="top">const U &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetUserData</b> () const</td></tr>
<tr class="separator:ad9754f0410f27cd69dd9b9a478f593f5 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3592e97cb5afb0fa9dd620603e32f991 inherit pub_methods_classez_small_array_base"><td class="memTemplParams" colspan="2"><a id="a3592e97cb5afb0fa9dd620603e32f991"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:a3592e97cb5afb0fa9dd620603e32f991 inherit pub_methods_classez_small_array_base"><td class="memTemplItemLeft" align="right" valign="top">U &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetUserData</b> ()</td></tr>
<tr class="separator:a3592e97cb5afb0fa9dd620603e32f991 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a27c72dd7448ddb8eef0e7c122ad6cfd9 inherit pub_methods_classez_small_array_base"><td class="memTemplParams" colspan="2"><a id="a27c72dd7448ddb8eef0e7c122ad6cfd9"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:a27c72dd7448ddb8eef0e7c122ad6cfd9 inherit pub_methods_classez_small_array_base"><td class="memTemplItemLeft" align="right" valign="top">const EZ_ALWAYS_INLINE U &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetUserData</b> () const</td></tr>
<tr class="separator:a27c72dd7448ddb8eef0e7c122ad6cfd9 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a02c2d1014e904e902e4822f77265b03d inherit pub_methods_classez_small_array_base"><td class="memTemplParams" colspan="2"><a id="a02c2d1014e904e902e4822f77265b03d"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:a02c2d1014e904e902e4822f77265b03d inherit pub_methods_classez_small_array_base"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE U &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetUserData</b> ()</td></tr>
<tr class="separator:a02c2d1014e904e902e4822f77265b03d inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_types_classez_small_array_base"><td colspan="2" onclick="javascript:toggleInherit('pub_types_classez_small_array_base')"><img src="../../closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase&lt; T, Size &gt;</a></td></tr>
<tr class="memitem:a214d9e07421f9c6422e71a0b85179618 inherit pub_types_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a214d9e07421f9c6422e71a0b85179618"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>const_iterator</b> = const T *</td></tr>
<tr class="separator:a214d9e07421f9c6422e71a0b85179618 inherit pub_types_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad2cae9067becfd6dd68f0ffa8f58380c inherit pub_types_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="ad2cae9067becfd6dd68f0ffa8f58380c"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>const_reverse_iterator</b> = <a class="el" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">const_reverse_pointer_iterator</a>&lt; T &gt;</td></tr>
<tr class="separator:ad2cae9067becfd6dd68f0ffa8f58380c inherit pub_types_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e661231bc2d79e5d2fdd90283bfb31d inherit pub_types_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a7e661231bc2d79e5d2fdd90283bfb31d"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>iterator</b> = T *</td></tr>
<tr class="separator:a7e661231bc2d79e5d2fdd90283bfb31d inherit pub_types_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa5bad425e1071f47aaf0248652ab07b inherit pub_types_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="afa5bad425e1071f47aaf0248652ab07b"></a>
using&#160;</td><td class="memItemRight" valign="bottom"><b>reverse_iterator</b> = <a class="el" href="../../d3/df2/structreverse__pointer__iterator.htm">reverse_pointer_iterator</a>&lt; T &gt;</td></tr>
<tr class="separator:afa5bad425e1071f47aaf0248652ab07b inherit pub_types_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_types_classez_small_array_base"><td colspan="2" onclick="javascript:toggleInherit('pro_types_classez_small_array_base')"><img src="../../closed.png" alt="-"/>&#160;Protected Types inherited from <a class="el" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase&lt; T, Size &gt;</a></td></tr>
<tr class="memitem:a1f20bd496862da59a93a7d677a80f8c7 inherit pro_types_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a1f20bd496862da59a93a7d677a80f8c7"></a>enum &#160;</td><td class="memItemRight" valign="bottom">{ <b>CAPACITY_ALIGNMENT</b> = 4
 }</td></tr>
<tr class="separator:a1f20bd496862da59a93a7d677a80f8c7 inherit pro_types_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classez_small_array_base"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classez_small_array_base')"><img src="../../closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase&lt; T, Size &gt;</a></td></tr>
<tr class="memitem:a8edac19962ed47d98781052691b6f6d9 inherit pro_methods_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a8edac19962ed47d98781052691b6f6d9"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetCapacity</b> (ezUInt16 uiCapacity, <a class="el" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a> *pAllocator)</td></tr>
<tr class="separator:a8edac19962ed47d98781052691b6f6d9 inherit pro_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f823e9dc3343629831742c0d0b99e4d inherit pro_methods_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a0f823e9dc3343629831742c0d0b99e4d"></a>
T *&#160;</td><td class="memItemRight" valign="bottom"><b>GetElementsPtr</b> ()</td></tr>
<tr class="separator:a0f823e9dc3343629831742c0d0b99e4d inherit pro_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa8824ef92f86cd0ced7c728b0edb3f84 inherit pro_methods_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="aa8824ef92f86cd0ced7c728b0edb3f84"></a>
const T *&#160;</td><td class="memItemRight" valign="bottom"><b>GetElementsPtr</b> () const</td></tr>
<tr class="separator:aa8824ef92f86cd0ced7c728b0edb3f84 inherit pro_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classez_small_array_base"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classez_small_array_base')"><img src="../../closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase&lt; T, Size &gt;</a></td></tr>
<tr class="memitem:a38dd2035fbf9c35b8d88cac1c1110d5e inherit pro_attribs_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a38dd2035fbf9c35b8d88cac1c1110d5e"></a>
ezUInt16&#160;</td><td class="memItemRight" valign="bottom"><b>m_uiCount</b> = 0</td></tr>
<tr class="separator:a38dd2035fbf9c35b8d88cac1c1110d5e inherit pro_attribs_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0831ca34c75d6dc47f9f125d87c3c613 inherit pro_attribs_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a0831ca34c75d6dc47f9f125d87c3c613"></a>
ezUInt16&#160;</td><td class="memItemRight" valign="bottom"><b>m_uiCapacity</b> = Size</td></tr>
<tr class="separator:a0831ca34c75d6dc47f9f125d87c3c613 inherit pro_attribs_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d7de83447e93504e8e87cb6add36414 inherit pro_attribs_classez_small_array_base"><td class="memItemLeft" align="right" valign="top"><a id="a4d7de83447e93504e8e87cb6add36414"></a>
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>m_uiUserData</b> = 0</td></tr>
<tr class="separator:a4d7de83447e93504e8e87cb6add36414 inherit pro_attribs_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a545e16c04e2839c9b4dcfe2bf7774e8e inherit pro_attribs_classez_small_array_base"><td class="memItemLeft" ><a id="a545e16c04e2839c9b4dcfe2bf7774e8e"></a>
union {</td></tr>
<tr class="memitem:a996588ff6aa6d7cc2d683c5ce7ea4a3c inherit pro_attribs_classez_small_array_base"><td class="memItemLeft" ><a id="a996588ff6aa6d7cc2d683c5ce7ea4a3c"></a>
&#160;&#160;&#160;struct <b>alignas</b> {</td></tr>
<tr class="memitem:af63cfd8608ae66f10c11b27a01dde1c3 inherit pro_attribs_classez_small_array_base"><td class="memItemLeft" >
&#160;&#160;&#160;&#160;&#160;&#160;ezUInt8&#160;&#160;&#160;<b>m_StaticData</b> [Size *sizeof(T)]</td></tr>
<tr class="separator:af63cfd8608ae66f10c11b27a01dde1c3 inherit pro_attribs_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a996588ff6aa6d7cc2d683c5ce7ea4a3c inherit pro_attribs_classez_small_array_base"><td class="memItemLeft" valign="top">&#160;&#160;&#160;}&#160;</td><td class="memItemRight" valign="bottom"></td></tr>
<tr class="separator:a996588ff6aa6d7cc2d683c5ce7ea4a3c inherit pro_attribs_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abed5204296360862b518b87d97d5d988 inherit pro_attribs_classez_small_array_base"><td class="memItemLeft" >
&#160;&#160;&#160;T *&#160;&#160;&#160;<b>m_pElements</b> = nullptr</td></tr>
<tr class="separator:abed5204296360862b518b87d97d5d988 inherit pro_attribs_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a545e16c04e2839c9b4dcfe2bf7774e8e inherit pro_attribs_classez_small_array_base"><td class="memItemLeft" valign="top">};&#160;</td><td class="memItemRight" valign="bottom"></td></tr>
<tr class="separator:a545e16c04e2839c9b4dcfe2bf7774e8e inherit pro_attribs_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename T, ezUInt16 Size, typename AllocatorWrapper = ezDefaultAllocatorWrapper&gt;<br />
class ezSmallArray&lt; T, Size, AllocatorWrapper &gt;</h3>

<dl class="section see"><dt>See also</dt><dd><a class="el" href="../../d4/d0b/classez_small_array_base.htm" title="Implementation of a dynamically growing array with in-place storage and small memory overhead.">ezSmallArrayBase</a> </dd></dl>
</div><hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Containers/<a class="el" href="../../d6/d8d/_small_array_8h_source.htm">SmallArray.h</a></li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Containers/Implementation/<a class="el" href="../../d2/d62/_small_array__inl_8h_source.htm">SmallArray_inl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d0/d0c/classez_small_array.htm">ezSmallArray</a></li>
    <li class="footer">Generated on Sun Oct 9 2022 14:45:09 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
