<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: ezSmallArray&lt; T, Size, AllocatorWrapper &gt; Class Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">ezEngine<span id="projectnumber">&#160;Release 25.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('d0/d0c/classez_small_array.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="../../d2/dfd/classez_small_array-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">ezSmallArray&lt; T, Size, AllocatorWrapper &gt; Class Template Reference</div></div>
</div><!--header-->
<div class="contents">

<p><code>#include &lt;<a class="el" href="../../d6/d8d/_small_array_8h_source.htm">SmallArray.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for ezSmallArray&lt; T, Size, AllocatorWrapper &gt;:</div>
<div class="dyncontent">
<div class="center"><img src="../../d4/dcd/classez_small_array__inherit__graph.png" border="0" usemap="#aez_small_array_3_01_t_00_01_size_00_01_allocator_wrapper_01_4_inherit__map" alt="Inheritance graph"/></div>
<map name="aez_small_array_3_01_t_00_01_size_00_01_allocator_wrapper_01_4_inherit__map" id="aez_small_array_3_01_t_00_01_size_00_01_allocator_wrapper_01_4_inherit__map">
<area shape="rect" title=" " alt="" coords="5,93,176,133"/>
<area shape="rect" href="../../d4/d0b/classez_small_array_base.htm" title="Implementation of a dynamically growing array with in&#45;place storage and small memory overhead." alt="" coords="7,5,175,45"/>
<area shape="poly" title=" " alt="" coords="93,59,93,93,88,93,88,59"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a950c7d2eb437410d315f6183a1ffb1c8" id="r_a950c7d2eb437410d315f6183a1ffb1c8"><td class="memItemLeft" align="right" valign="top"><a id="a950c7d2eb437410d315f6183a1ffb1c8" name="a950c7d2eb437410d315f6183a1ffb1c8"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>EZ_DECLARE_MEM_RELOCATABLE_TYPE_CONDITIONAL</b> (T)</td></tr>
<tr class="separator:a950c7d2eb437410d315f6183a1ffb1c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9bf1851f60e6f801ca7d4ee9c514eb43" id="r_a9bf1851f60e6f801ca7d4ee9c514eb43"><td class="memItemLeft" align="right" valign="top"><a id="a9bf1851f60e6f801ca7d4ee9c514eb43" name="a9bf1851f60e6f801ca7d4ee9c514eb43"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>ezSmallArray</b> (const <a class="el" href="../../d0/d0c/classez_small_array.htm">ezSmallArray</a>&lt; T, Size, AllocatorWrapper &gt; &amp;other)</td></tr>
<tr class="separator:a9bf1851f60e6f801ca7d4ee9c514eb43"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a71ff2549d41d5d4eb6b57dfe5964d617" id="r_a71ff2549d41d5d4eb6b57dfe5964d617"><td class="memItemLeft" align="right" valign="top"><a id="a71ff2549d41d5d4eb6b57dfe5964d617" name="a71ff2549d41d5d4eb6b57dfe5964d617"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>ezSmallArray</b> (const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; const T &gt; &amp;other)</td></tr>
<tr class="separator:a71ff2549d41d5d4eb6b57dfe5964d617"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d0e878adc6d4edb0d3536c30b8e7353" id="r_a4d0e878adc6d4edb0d3536c30b8e7353"><td class="memItemLeft" align="right" valign="top"><a id="a4d0e878adc6d4edb0d3536c30b8e7353" name="a4d0e878adc6d4edb0d3536c30b8e7353"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>ezSmallArray</b> (<a class="el" href="../../d0/d0c/classez_small_array.htm">ezSmallArray</a>&lt; T, Size, AllocatorWrapper &gt; &amp;&amp;other)</td></tr>
<tr class="separator:a4d0e878adc6d4edb0d3536c30b8e7353"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7b86482cee63a0c5220a4eb0d0fa9a4f" id="r_a7b86482cee63a0c5220a4eb0d0fa9a4f"><td class="memItemLeft" align="right" valign="top"><a id="a7b86482cee63a0c5220a4eb0d0fa9a4f" name="a7b86482cee63a0c5220a4eb0d0fa9a4f"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="../../d0/d0c/classez_small_array.htm">ezSmallArray</a>&lt; T, Size, AllocatorWrapper &gt; &amp;rhs)</td></tr>
<tr class="separator:a7b86482cee63a0c5220a4eb0d0fa9a4f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab5b099d377290e06f20e47fd98ebc808" id="r_ab5b099d377290e06f20e47fd98ebc808"><td class="memItemLeft" align="right" valign="top"><a id="ab5b099d377290e06f20e47fd98ebc808" name="ab5b099d377290e06f20e47fd98ebc808"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; const T &gt; &amp;rhs)</td></tr>
<tr class="separator:ab5b099d377290e06f20e47fd98ebc808"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4c833dc74c301b693b7ec83a2fdb3848" id="r_a4c833dc74c301b693b7ec83a2fdb3848"><td class="memItemLeft" align="right" valign="top"><a id="a4c833dc74c301b693b7ec83a2fdb3848" name="a4c833dc74c301b693b7ec83a2fdb3848"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (<a class="el" href="../../d0/d0c/classez_small_array.htm">ezSmallArray</a>&lt; T, Size, AllocatorWrapper &gt; &amp;&amp;rhs) noexcept</td></tr>
<tr class="separator:a4c833dc74c301b693b7ec83a2fdb3848"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac05c5e78b6da2c7c464f310504f19286" id="r_ac05c5e78b6da2c7c464f310504f19286"><td class="memItemLeft" align="right" valign="top"><a id="ac05c5e78b6da2c7c464f310504f19286" name="ac05c5e78b6da2c7c464f310504f19286"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetCount</b> (ezUInt16 uiCount)</td></tr>
<tr class="separator:ac05c5e78b6da2c7c464f310504f19286"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aebf3443d45628793cc7335f7467eb24c" id="r_aebf3443d45628793cc7335f7467eb24c"><td class="memItemLeft" align="right" valign="top"><a id="aebf3443d45628793cc7335f7467eb24c" name="aebf3443d45628793cc7335f7467eb24c"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetCount</b> (ezUInt16 uiCount, const T &amp;fillValue)</td></tr>
<tr class="separator:aebf3443d45628793cc7335f7467eb24c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a08bfa5449240490edd0a08375d3b82f2" id="r_a08bfa5449240490edd0a08375d3b82f2"><td class="memItemLeft" align="right" valign="top"><a id="a08bfa5449240490edd0a08375d3b82f2" name="a08bfa5449240490edd0a08375d3b82f2"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>EnsureCount</b> (ezUInt16 uiCount)</td></tr>
<tr class="separator:a08bfa5449240490edd0a08375d3b82f2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5aa266eedbf803e596ef9d8019240c08" id="r_a5aa266eedbf803e596ef9d8019240c08"><td class="memTemplParams" colspan="2"><a id="a5aa266eedbf803e596ef9d8019240c08" name="a5aa266eedbf803e596ef9d8019240c08"></a>
template&lt;typename  = void&gt; </td></tr>
<tr class="memitem:a5aa266eedbf803e596ef9d8019240c08"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><b>SetCountUninitialized</b> (ezUInt16 uiCount)</td></tr>
<tr class="separator:a5aa266eedbf803e596ef9d8019240c08"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa5675d395966b9358fc887413784af2f" id="r_aa5675d395966b9358fc887413784af2f"><td class="memItemLeft" align="right" valign="top"><a id="aa5675d395966b9358fc887413784af2f" name="aa5675d395966b9358fc887413784af2f"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>InsertAt</b> (ezUInt32 uiIndex, const T &amp;value)</td></tr>
<tr class="separator:aa5675d395966b9358fc887413784af2f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa531bdbf3f7575e31ec7928b9e6a47e7" id="r_aa531bdbf3f7575e31ec7928b9e6a47e7"><td class="memItemLeft" align="right" valign="top"><a id="aa531bdbf3f7575e31ec7928b9e6a47e7" name="aa531bdbf3f7575e31ec7928b9e6a47e7"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>InsertAt</b> (ezUInt32 uiIndex, T &amp;&amp;value)</td></tr>
<tr class="separator:aa531bdbf3f7575e31ec7928b9e6a47e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adbb5124d92e853e7dcd6c2ac71130d05" id="r_adbb5124d92e853e7dcd6c2ac71130d05"><td class="memItemLeft" align="right" valign="top"><a id="adbb5124d92e853e7dcd6c2ac71130d05" name="adbb5124d92e853e7dcd6c2ac71130d05"></a>
T &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>ExpandAndGetRef</b> ()</td></tr>
<tr class="separator:adbb5124d92e853e7dcd6c2ac71130d05"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb61f8b97ffdc8aba7176900fc8a7385" id="r_aeb61f8b97ffdc8aba7176900fc8a7385"><td class="memItemLeft" align="right" valign="top"><a id="aeb61f8b97ffdc8aba7176900fc8a7385" name="aeb61f8b97ffdc8aba7176900fc8a7385"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>PushBack</b> (const T &amp;value)</td></tr>
<tr class="separator:aeb61f8b97ffdc8aba7176900fc8a7385"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9896b10e8c0e7fcc2e3ffdbc1cb6aea2" id="r_a9896b10e8c0e7fcc2e3ffdbc1cb6aea2"><td class="memItemLeft" align="right" valign="top"><a id="a9896b10e8c0e7fcc2e3ffdbc1cb6aea2" name="a9896b10e8c0e7fcc2e3ffdbc1cb6aea2"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>PushBack</b> (T &amp;&amp;value)</td></tr>
<tr class="separator:a9896b10e8c0e7fcc2e3ffdbc1cb6aea2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5b6e4ff1d1c3f23c0979c4060820424a" id="r_a5b6e4ff1d1c3f23c0979c4060820424a"><td class="memItemLeft" align="right" valign="top"><a id="a5b6e4ff1d1c3f23c0979c4060820424a" name="a5b6e4ff1d1c3f23c0979c4060820424a"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>PushBackRange</b> (const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; const T &gt; &amp;range)</td></tr>
<tr class="separator:a5b6e4ff1d1c3f23c0979c4060820424a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad5e06b407569ee00c782dff33239744d" id="r_ad5e06b407569ee00c782dff33239744d"><td class="memItemLeft" align="right" valign="top"><a id="ad5e06b407569ee00c782dff33239744d" name="ad5e06b407569ee00c782dff33239744d"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Reserve</b> (ezUInt16 uiCapacity)</td></tr>
<tr class="separator:ad5e06b407569ee00c782dff33239744d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2895ec0be7616f34184412f231540ed1" id="r_a2895ec0be7616f34184412f231540ed1"><td class="memItemLeft" align="right" valign="top"><a id="a2895ec0be7616f34184412f231540ed1" name="a2895ec0be7616f34184412f231540ed1"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Compact</b> ()</td></tr>
<tr class="separator:a2895ec0be7616f34184412f231540ed1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa14f69771a8254dab169d9c3ac21ca01" id="r_aa14f69771a8254dab169d9c3ac21ca01"><td class="memTemplParams" colspan="2"><a id="aa14f69771a8254dab169d9c3ac21ca01" name="aa14f69771a8254dab169d9c3ac21ca01"></a>
template&lt;typename &gt; </td></tr>
<tr class="memitem:aa14f69771a8254dab169d9c3ac21ca01"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE void&#160;</td><td class="memTemplItemRight" valign="bottom"><b>SetCountUninitialized</b> (ezUInt16 uiCount)</td></tr>
<tr class="separator:aa14f69771a8254dab169d9c3ac21ca01"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classez_small_array_base"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classez_small_array_base')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase&lt; T, Size &gt;</a></td></tr>
<tr class="memitem:a17a4f49a8778284209e5b8613b1a1f89 inherit pub_methods_classez_small_array_base" id="r_a17a4f49a8778284209e5b8613b1a1f89"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>EZ_DECLARE_MEM_RELOCATABLE_TYPE_CONDITIONAL</b> (T)</td></tr>
<tr class="separator:a17a4f49a8778284209e5b8613b1a1f89 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9101de3e01aa8f3f3cda5e21755d1ea inherit pub_methods_classez_small_array_base" id="r_ab9101de3e01aa8f3f3cda5e21755d1ea"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>ezSmallArrayBase</b> (const <a class="el" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase</a>&lt; T, Size &gt; &amp;other, <a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="separator:ab9101de3e01aa8f3f3cda5e21755d1ea inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe7ff9c2a85f156f6129956b6401ac61 inherit pub_methods_classez_small_array_base" id="r_afe7ff9c2a85f156f6129956b6401ac61"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>ezSmallArrayBase</b> (const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; const T &gt; &amp;other, <a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="separator:afe7ff9c2a85f156f6129956b6401ac61 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acbf3c2de1c218a43681c1d38074da1e1 inherit pub_methods_classez_small_array_base" id="r_acbf3c2de1c218a43681c1d38074da1e1"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>ezSmallArrayBase</b> (<a class="el" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase</a>&lt; T, Size &gt; &amp;&amp;other, <a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="separator:acbf3c2de1c218a43681c1d38074da1e1 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af0565f5df2b455b085b364ad147f1034 inherit pub_methods_classez_small_array_base" id="r_af0565f5df2b455b085b364ad147f1034"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase</a>&lt; T, Size &gt; &amp;rhs)=delete</td></tr>
<tr class="separator:af0565f5df2b455b085b364ad147f1034 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a81637bc0d5c787520d232e239aa93de8 inherit pub_methods_classez_small_array_base" id="r_a81637bc0d5c787520d232e239aa93de8"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (<a class="el" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase</a>&lt; T, Size &gt; &amp;&amp;rhs)=delete</td></tr>
<tr class="separator:a81637bc0d5c787520d232e239aa93de8 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a44628a75aa717a0ef2161fb4835b57ba inherit pub_methods_classez_small_array_base" id="r_a44628a75aa717a0ef2161fb4835b57ba"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>CopyFrom</b> (const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; const T &gt; &amp;other, <a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:a44628a75aa717a0ef2161fb4835b57ba inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the data from some other array into this one. <br /></td></tr>
<tr class="separator:a44628a75aa717a0ef2161fb4835b57ba inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa0df7cdbcae0aba5ee737c5ef2d6bcb9 inherit pub_methods_classez_small_array_base" id="r_aa0df7cdbcae0aba5ee737c5ef2d6bcb9"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>MoveFrom</b> (<a class="el" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase</a>&lt; T, Size &gt; &amp;&amp;other, <a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:aa0df7cdbcae0aba5ee737c5ef2d6bcb9 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Moves the data from some other array into this one. <br /></td></tr>
<tr class="separator:aa0df7cdbcae0aba5ee737c5ef2d6bcb9 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12865f08993693bf08cce4b0416cdbbd inherit pub_methods_classez_small_array_base" id="r_a12865f08993693bf08cce4b0416cdbbd"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>operator ezArrayPtr&lt; const T &gt;</b> () const</td></tr>
<tr class="memdesc:a12865f08993693bf08cce4b0416cdbbd inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Conversion to const <a class="el" href="../../dc/dae/classez_array_ptr.htm" title="This class encapsulates an array and it&#39;s size. It is recommended to use this class instead of plain ...">ezArrayPtr</a>. <br /></td></tr>
<tr class="separator:a12865f08993693bf08cce4b0416cdbbd inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7f6ca08967eb1145a8d5f19e2223270 inherit pub_methods_classez_small_array_base" id="r_ab7f6ca08967eb1145a8d5f19e2223270"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>operator ezArrayPtr&lt; T &gt;</b> ()</td></tr>
<tr class="memdesc:ab7f6ca08967eb1145a8d5f19e2223270 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Conversion to <a class="el" href="../../dc/dae/classez_array_ptr.htm" title="This class encapsulates an array and it&#39;s size. It is recommended to use this class instead of plain ...">ezArrayPtr</a>. <br /></td></tr>
<tr class="separator:ab7f6ca08967eb1145a8d5f19e2223270 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f88c6f77d9dfac59323e44c08eac677 inherit pub_methods_classez_small_array_base" id="r_a0f88c6f77d9dfac59323e44c08eac677"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator==</b> (const <a class="el" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase</a>&lt; T, Size &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:a0f88c6f77d9dfac59323e44c08eac677 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares this array to another contiguous array type. <br /></td></tr>
<tr class="separator:a0f88c6f77d9dfac59323e44c08eac677 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6adfac4c271e360700b16130909ec4fb inherit pub_methods_classez_small_array_base" id="r_a6adfac4c271e360700b16130909ec4fb"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>EZ_ADD_DEFAULT_OPERATOR_NOTEQUAL</b> (const <a class="el" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase</a>&lt; T, Size &gt; &amp;)</td></tr>
<tr class="separator:a6adfac4c271e360700b16130909ec4fb inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80dfcf73004b688a99a1952e12c3b467 inherit pub_methods_classez_small_array_base" id="r_a80dfcf73004b688a99a1952e12c3b467"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&lt;</b> (const <a class="el" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase</a>&lt; T, Size &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:a80dfcf73004b688a99a1952e12c3b467 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares this array to another contiguous array type. <br /></td></tr>
<tr class="separator:a80dfcf73004b688a99a1952e12c3b467 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f2412daa0aac85a8e37bb92f383643f inherit pub_methods_classez_small_array_base" id="r_a9f2412daa0aac85a8e37bb92f383643f"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&lt;</b> (const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; const T &gt; &amp;rhs) const</td></tr>
<tr class="separator:a9f2412daa0aac85a8e37bb92f383643f inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a73ca2c3165047828ff1343eddf338033 inherit pub_methods_classez_small_array_base" id="r_a73ca2c3165047828ff1343eddf338033"><td class="memItemLeft" align="right" valign="top">
const T &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator[]</b> (ezUInt32 uiIndex) const</td></tr>
<tr class="memdesc:a73ca2c3165047828ff1343eddf338033 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the element at the given index. Does bounds checks in debug builds. <br /></td></tr>
<tr class="separator:a73ca2c3165047828ff1343eddf338033 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af2d36c4e256ca155d9c5bc9c32d43405 inherit pub_methods_classez_small_array_base" id="r_af2d36c4e256ca155d9c5bc9c32d43405"><td class="memItemLeft" align="right" valign="top">
T &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator[]</b> (ezUInt32 uiIndex)</td></tr>
<tr class="memdesc:af2d36c4e256ca155d9c5bc9c32d43405 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the element at the given index. Does bounds checks in debug builds. <br /></td></tr>
<tr class="separator:af2d36c4e256ca155d9c5bc9c32d43405 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2d97ba0e00466c81f50461e534af3559 inherit pub_methods_classez_small_array_base" id="r_a2d97ba0e00466c81f50461e534af3559"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetCount</b> (ezUInt16 uiCount, <a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:a2d97ba0e00466c81f50461e534af3559 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resizes the array to have exactly uiCount elements. Default constructs extra elements if the array is grown. <br /></td></tr>
<tr class="separator:a2d97ba0e00466c81f50461e534af3559 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe55ae80dbedaffed1e088407befe28f inherit pub_methods_classez_small_array_base" id="r_abe55ae80dbedaffed1e088407befe28f"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetCount</b> (ezUInt16 uiCount, const T &amp;fillValue, <a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:abe55ae80dbedaffed1e088407befe28f inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resizes the array to have exactly uiCount elements. Constructs all new elements by copying the FillValue. <br /></td></tr>
<tr class="separator:abe55ae80dbedaffed1e088407befe28f inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4676e9e2da82f6f9b2782e453a1e9cb9 inherit pub_methods_classez_small_array_base" id="r_a4676e9e2da82f6f9b2782e453a1e9cb9"><td class="memTemplParams" colspan="2">
template&lt;typename  = void&gt; </td></tr>
<tr class="memitem:a4676e9e2da82f6f9b2782e453a1e9cb9 inherit pub_methods_classez_small_array_base"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><b>SetCountUninitialized</b> (ezUInt16 uiCount, <a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:a4676e9e2da82f6f9b2782e453a1e9cb9 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resizes the array to have exactly uiCount elements. Extra elements might be uninitialized. <br /></td></tr>
<tr class="separator:a4676e9e2da82f6f9b2782e453a1e9cb9 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac93d3e6417071debc5ad0563f9563978 inherit pub_methods_classez_small_array_base" id="r_ac93d3e6417071debc5ad0563f9563978"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>EnsureCount</b> (ezUInt16 uiCount, <a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:ac93d3e6417071debc5ad0563f9563978 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Ensures the container has at least <em>uiCount</em> elements. Ie. calls <a class="el" href="../../d4/d0b/classez_small_array_base.htm#a2d97ba0e00466c81f50461e534af3559" title="Resizes the array to have exactly uiCount elements. Default constructs extra elements if the array is...">SetCount()</a> if the container has fewer elements, does nothing otherwise. <br /></td></tr>
<tr class="separator:ac93d3e6417071debc5ad0563f9563978 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac13be38fb1e58b0b94c405db9318792a inherit pub_methods_classez_small_array_base" id="r_ac13be38fb1e58b0b94c405db9318792a"><td class="memItemLeft" align="right" valign="top">
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetCount</b> () const</td></tr>
<tr class="memdesc:ac13be38fb1e58b0b94c405db9318792a inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of active elements in the array. <br /></td></tr>
<tr class="separator:ac13be38fb1e58b0b94c405db9318792a inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0b66ce1a35b2f1659ba61c534969dae4 inherit pub_methods_classez_small_array_base" id="r_a0b66ce1a35b2f1659ba61c534969dae4"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsEmpty</b> () const</td></tr>
<tr class="memdesc:a0b66ce1a35b2f1659ba61c534969dae4 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if the array does not contain any elements. <br /></td></tr>
<tr class="separator:a0b66ce1a35b2f1659ba61c534969dae4 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5787f727bd1a20181e3e2150c7d37fc2 inherit pub_methods_classez_small_array_base" id="r_a5787f727bd1a20181e3e2150c7d37fc2"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>Clear</b> ()</td></tr>
<tr class="memdesc:a5787f727bd1a20181e3e2150c7d37fc2 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears the array. <br /></td></tr>
<tr class="separator:a5787f727bd1a20181e3e2150c7d37fc2 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18878b1e8e942abb9861435942918a83 inherit pub_methods_classez_small_array_base" id="r_a18878b1e8e942abb9861435942918a83"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>Contains</b> (const T &amp;value) const</td></tr>
<tr class="memdesc:a18878b1e8e942abb9861435942918a83 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether the given value can be found in the array. O(n) complexity. <br /></td></tr>
<tr class="separator:a18878b1e8e942abb9861435942918a83 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53a6fa7d09ed5098bf8e4dbda3b5f429 inherit pub_methods_classez_small_array_base" id="r_a53a6fa7d09ed5098bf8e4dbda3b5f429"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>Insert</b> (const T &amp;value, ezUInt32 uiIndex, <a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:a53a6fa7d09ed5098bf8e4dbda3b5f429 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inserts value at index by shifting all following elements. <br /></td></tr>
<tr class="separator:a53a6fa7d09ed5098bf8e4dbda3b5f429 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d1f661eb141ee8e1e583b133c9f70a4 inherit pub_methods_classez_small_array_base" id="r_a3d1f661eb141ee8e1e583b133c9f70a4"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>Insert</b> (T &amp;&amp;value, ezUInt32 uiIndex, <a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:a3d1f661eb141ee8e1e583b133c9f70a4 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inserts value at index by shifting all following elements. <br /></td></tr>
<tr class="separator:a3d1f661eb141ee8e1e583b133c9f70a4 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a772bcf3f2189007961b0ba3b4ecf4213 inherit pub_methods_classez_small_array_base" id="r_a772bcf3f2189007961b0ba3b4ecf4213"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>RemoveAndCopy</b> (const T &amp;value)</td></tr>
<tr class="memdesc:a772bcf3f2189007961b0ba3b4ecf4213 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes the first occurrence of value and fills the gap by shifting all following elements. <br /></td></tr>
<tr class="separator:a772bcf3f2189007961b0ba3b4ecf4213 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a820dddee4c830c06fab015b887e474bd inherit pub_methods_classez_small_array_base" id="r_a820dddee4c830c06fab015b887e474bd"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>RemoveAndSwap</b> (const T &amp;value)</td></tr>
<tr class="memdesc:a820dddee4c830c06fab015b887e474bd inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes the first occurrence of value and fills the gap by swapping in the last element. <br /></td></tr>
<tr class="separator:a820dddee4c830c06fab015b887e474bd inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45e132fd3e2e121cd9e1333e494c1c5c inherit pub_methods_classez_small_array_base" id="r_a45e132fd3e2e121cd9e1333e494c1c5c"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>RemoveAtAndCopy</b> (ezUInt32 uiIndex, ezUInt16 uiNumElements=1)</td></tr>
<tr class="memdesc:a45e132fd3e2e121cd9e1333e494c1c5c inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes the element at index and fills the gap by shifting all following elements. <br /></td></tr>
<tr class="separator:a45e132fd3e2e121cd9e1333e494c1c5c inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a38c2e2dc9718e666167e9a8bf521df0d inherit pub_methods_classez_small_array_base" id="r_a38c2e2dc9718e666167e9a8bf521df0d"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>RemoveAtAndSwap</b> (ezUInt32 uiIndex, ezUInt16 uiNumElements=1)</td></tr>
<tr class="memdesc:a38c2e2dc9718e666167e9a8bf521df0d inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes the element at index and fills the gap by swapping in the last element. <br /></td></tr>
<tr class="separator:a38c2e2dc9718e666167e9a8bf521df0d inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e93f15bb764fa59a641b642df5cc551 inherit pub_methods_classez_small_array_base" id="r_a6e93f15bb764fa59a641b642df5cc551"><td class="memItemLeft" align="right" valign="top">
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>IndexOf</b> (const T &amp;value, ezUInt32 uiStartIndex=0) const</td></tr>
<tr class="memdesc:a6e93f15bb764fa59a641b642df5cc551 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Searches for the first occurrence of the given value and returns its index or ezInvalidIndex if not found. <br /></td></tr>
<tr class="separator:a6e93f15bb764fa59a641b642df5cc551 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a985ee77c3751c5a007143f128af1bbd5 inherit pub_methods_classez_small_array_base" id="r_a985ee77c3751c5a007143f128af1bbd5"><td class="memItemLeft" align="right" valign="top">
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>LastIndexOf</b> (const T &amp;value, ezUInt32 uiStartIndex=ezSmallInvalidIndex) const</td></tr>
<tr class="memdesc:a985ee77c3751c5a007143f128af1bbd5 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Searches for the last occurrence of the given value and returns its index or ezInvalidIndex if not found. <br /></td></tr>
<tr class="separator:a985ee77c3751c5a007143f128af1bbd5 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6c182c841c56b0ecdc83ea26a1c471c inherit pub_methods_classez_small_array_base" id="r_ab6c182c841c56b0ecdc83ea26a1c471c"><td class="memItemLeft" align="right" valign="top">
T &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>ExpandAndGetRef</b> (<a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:ab6c182c841c56b0ecdc83ea26a1c471c inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Grows the array by one element and returns a reference to the newly created element. <br /></td></tr>
<tr class="separator:ab6c182c841c56b0ecdc83ea26a1c471c inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74451b4388e083a5074881bc8836c6a4 inherit pub_methods_classez_small_array_base" id="r_a74451b4388e083a5074881bc8836c6a4"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>PushBack</b> (const T &amp;value, <a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:a74451b4388e083a5074881bc8836c6a4 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pushes value at the end of the array. <br /></td></tr>
<tr class="separator:a74451b4388e083a5074881bc8836c6a4 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a64f0dcf6dc706e5ab5ecf779c335aa5d inherit pub_methods_classez_small_array_base" id="r_a64f0dcf6dc706e5ab5ecf779c335aa5d"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>PushBack</b> (T &amp;&amp;value, <a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:a64f0dcf6dc706e5ab5ecf779c335aa5d inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pushes value at the end of the array. <br /></td></tr>
<tr class="separator:a64f0dcf6dc706e5ab5ecf779c335aa5d inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a804a1289180252024587478ef0de74f2 inherit pub_methods_classez_small_array_base" id="r_a804a1289180252024587478ef0de74f2"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>PushBackUnchecked</b> (const T &amp;value)</td></tr>
<tr class="memdesc:a804a1289180252024587478ef0de74f2 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pushes value at the end of the array. Does NOT ensure capacity. <br /></td></tr>
<tr class="separator:a804a1289180252024587478ef0de74f2 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a946602a12b686a8a089e663d4a7599e2 inherit pub_methods_classez_small_array_base" id="r_a946602a12b686a8a089e663d4a7599e2"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>PushBackUnchecked</b> (T &amp;&amp;value)</td></tr>
<tr class="memdesc:a946602a12b686a8a089e663d4a7599e2 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pushes value at the end of the array. Does NOT ensure capacity. <br /></td></tr>
<tr class="separator:a946602a12b686a8a089e663d4a7599e2 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a945866dd7de01cb96b3f6bd95c086ad0 inherit pub_methods_classez_small_array_base" id="r_a945866dd7de01cb96b3f6bd95c086ad0"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>PushBackRange</b> (const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; const T &gt; &amp;range, <a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:a945866dd7de01cb96b3f6bd95c086ad0 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pushes all elements in range at the end of the array. Increases the capacity if necessary. <br /></td></tr>
<tr class="separator:a945866dd7de01cb96b3f6bd95c086ad0 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9f8a96a3f6070fb3f66a3a5a359016c inherit pub_methods_classez_small_array_base" id="r_ad9f8a96a3f6070fb3f66a3a5a359016c"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>PopBack</b> (ezUInt32 uiCountToRemove=1)</td></tr>
<tr class="memdesc:ad9f8a96a3f6070fb3f66a3a5a359016c inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes count elements from the end of the array. <br /></td></tr>
<tr class="separator:ad9f8a96a3f6070fb3f66a3a5a359016c inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa5a6fe2b087b6d55b4a66368e633dc88 inherit pub_methods_classez_small_array_base" id="r_aa5a6fe2b087b6d55b4a66368e633dc88"><td class="memItemLeft" align="right" valign="top">
T &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>PeekBack</b> ()</td></tr>
<tr class="memdesc:aa5a6fe2b087b6d55b4a66368e633dc88 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the last element of the array. <br /></td></tr>
<tr class="separator:aa5a6fe2b087b6d55b4a66368e633dc88 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a40c8a33a9c9a990848326781aedf8c3a inherit pub_methods_classez_small_array_base" id="r_a40c8a33a9c9a990848326781aedf8c3a"><td class="memItemLeft" align="right" valign="top">
const T &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>PeekBack</b> () const</td></tr>
<tr class="memdesc:a40c8a33a9c9a990848326781aedf8c3a inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the last element of the array. <br /></td></tr>
<tr class="separator:a40c8a33a9c9a990848326781aedf8c3a inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a646f005d267f39cde5cd3d10b9ce446c inherit pub_methods_classez_small_array_base" id="r_a646f005d267f39cde5cd3d10b9ce446c"><td class="memTemplParams" colspan="2">
template&lt;typename Comparer &gt; </td></tr>
<tr class="memitem:a646f005d267f39cde5cd3d10b9ce446c inherit pub_methods_classez_small_array_base"><td class="memTemplItemLeft" align="right" valign="top">void&#160;</td><td class="memTemplItemRight" valign="bottom"><b>Sort</b> (const Comparer &amp;comparer)</td></tr>
<tr class="memdesc:a646f005d267f39cde5cd3d10b9ce446c inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sort with explicit comparer. <br /></td></tr>
<tr class="separator:a646f005d267f39cde5cd3d10b9ce446c inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a46465983c607874239317c3dcc8b12d4 inherit pub_methods_classez_small_array_base" id="r_a46465983c607874239317c3dcc8b12d4"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>Sort</b> ()</td></tr>
<tr class="memdesc:a46465983c607874239317c3dcc8b12d4 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sort with default comparer. <br /></td></tr>
<tr class="separator:a46465983c607874239317c3dcc8b12d4 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaa9d377e69c087d2be3c4897ecce0471 inherit pub_methods_classez_small_array_base" id="r_aaa9d377e69c087d2be3c4897ecce0471"><td class="memItemLeft" align="right" valign="top">
T *&#160;</td><td class="memItemRight" valign="bottom"><b>GetData</b> ()</td></tr>
<tr class="memdesc:aaa9d377e69c087d2be3c4897ecce0471 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a pointer to the array data, or nullptr if the array is empty. <br /></td></tr>
<tr class="separator:aaa9d377e69c087d2be3c4897ecce0471 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e38e5d57b02d7ccdf4079d799c192b6 inherit pub_methods_classez_small_array_base" id="r_a2e38e5d57b02d7ccdf4079d799c192b6"><td class="memItemLeft" align="right" valign="top">
const T *&#160;</td><td class="memItemRight" valign="bottom"><b>GetData</b> () const</td></tr>
<tr class="memdesc:a2e38e5d57b02d7ccdf4079d799c192b6 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a pointer to the array data, or nullptr if the array is empty. <br /></td></tr>
<tr class="separator:a2e38e5d57b02d7ccdf4079d799c192b6 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a27bc30d0e06cb01d8d5278245a6483f6 inherit pub_methods_classez_small_array_base" id="r_a27bc30d0e06cb01d8d5278245a6483f6"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; T &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetArrayPtr</b> ()</td></tr>
<tr class="memdesc:a27bc30d0e06cb01d8d5278245a6483f6 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an array pointer to the array data, or an empty array pointer if the array is empty. <br /></td></tr>
<tr class="separator:a27bc30d0e06cb01d8d5278245a6483f6 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad571ab726ff04f340b68eb3ab4e541ff inherit pub_methods_classez_small_array_base" id="r_ad571ab726ff04f340b68eb3ab4e541ff"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; const T &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetArrayPtr</b> () const</td></tr>
<tr class="memdesc:ad571ab726ff04f340b68eb3ab4e541ff inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an array pointer to the array data, or an empty array pointer if the array is empty. <br /></td></tr>
<tr class="separator:ad571ab726ff04f340b68eb3ab4e541ff inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1fdc8ad1466dcecf86fbf92836988fe8 inherit pub_methods_classez_small_array_base" id="r_a1fdc8ad1466dcecf86fbf92836988fe8"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; typename <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; T &gt;::ByteType &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetByteArrayPtr</b> ()</td></tr>
<tr class="memdesc:a1fdc8ad1466dcecf86fbf92836988fe8 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a byte array pointer to the array data, or an empty array pointer if the array is empty. <br /></td></tr>
<tr class="separator:a1fdc8ad1466dcecf86fbf92836988fe8 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd2422b57a2333985aea28785073e0a2 inherit pub_methods_classez_small_array_base" id="r_acd2422b57a2333985aea28785073e0a2"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; typename <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; const T &gt;::ByteType &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetByteArrayPtr</b> () const</td></tr>
<tr class="memdesc:acd2422b57a2333985aea28785073e0a2 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a byte array pointer to the array data, or an empty array pointer if the array is empty. <br /></td></tr>
<tr class="separator:acd2422b57a2333985aea28785073e0a2 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4db08fca7f530433e083498ed93afc37 inherit pub_methods_classez_small_array_base" id="r_a4db08fca7f530433e083498ed93afc37"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>Reserve</b> (ezUInt16 uiCapacity, <a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:a4db08fca7f530433e083498ed93afc37 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Expands the array so it can at least store the given capacity. <br /></td></tr>
<tr class="separator:a4db08fca7f530433e083498ed93afc37 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adec38160e7d270a3a00ec3d67c0f1144 inherit pub_methods_classez_small_array_base" id="r_adec38160e7d270a3a00ec3d67c0f1144"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>Compact</b> (<a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:adec38160e7d270a3a00ec3d67c0f1144 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tries to compact the array to avoid wasting memory. The resulting capacity is at least 'GetCount' (no elements get removed). Will deallocate all data, if the array is empty. <br /></td></tr>
<tr class="separator:adec38160e7d270a3a00ec3d67c0f1144 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a88383b5d42c0b93a8fd424db57909098 inherit pub_methods_classez_small_array_base" id="r_a88383b5d42c0b93a8fd424db57909098"><td class="memItemLeft" align="right" valign="top">
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetCapacity</b> () const</td></tr>
<tr class="memdesc:a88383b5d42c0b93a8fd424db57909098 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the reserved number of elements that the array can hold without reallocating. <br /></td></tr>
<tr class="separator:a88383b5d42c0b93a8fd424db57909098 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acfcee52c57545f1c462ef72c5271c416 inherit pub_methods_classez_small_array_base" id="r_acfcee52c57545f1c462ef72c5271c416"><td class="memItemLeft" align="right" valign="top">
ezUInt64&#160;</td><td class="memItemRight" valign="bottom"><b>GetHeapMemoryUsage</b> () const</td></tr>
<tr class="memdesc:acfcee52c57545f1c462ef72c5271c416 inherit pub_methods_classez_small_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the amount of bytes that are currently allocated on the heap. <br /></td></tr>
<tr class="separator:acfcee52c57545f1c462ef72c5271c416 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2f66db5c43d07642b67c0b90d50cfa5 inherit pub_methods_classez_small_array_base" id="r_ae2f66db5c43d07642b67c0b90d50cfa5"><td class="memTemplParams" colspan="2">
template&lt;typename U &gt; </td></tr>
<tr class="memitem:ae2f66db5c43d07642b67c0b90d50cfa5 inherit pub_methods_classez_small_array_base"><td class="memTemplItemLeft" align="right" valign="top">const U &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetUserData</b> () const</td></tr>
<tr class="separator:ae2f66db5c43d07642b67c0b90d50cfa5 inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9024cd90ab0ff46f101aa1782f5ad3ec inherit pub_methods_classez_small_array_base" id="r_a9024cd90ab0ff46f101aa1782f5ad3ec"><td class="memTemplParams" colspan="2">
template&lt;typename U &gt; </td></tr>
<tr class="memitem:a9024cd90ab0ff46f101aa1782f5ad3ec inherit pub_methods_classez_small_array_base"><td class="memTemplItemLeft" align="right" valign="top">U &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetUserData</b> ()</td></tr>
<tr class="separator:a9024cd90ab0ff46f101aa1782f5ad3ec inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa7f965d49b03a5bc4b82fc9243df430a inherit pub_methods_classez_small_array_base" id="r_aa7f965d49b03a5bc4b82fc9243df430a"><td class="memTemplParams" colspan="2">
template&lt;typename U &gt; </td></tr>
<tr class="memitem:aa7f965d49b03a5bc4b82fc9243df430a inherit pub_methods_classez_small_array_base"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE const U &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetUserData</b> () const</td></tr>
<tr class="separator:aa7f965d49b03a5bc4b82fc9243df430a inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0c3e4de2d67aa2ade70912c99166d31c inherit pub_methods_classez_small_array_base" id="r_a0c3e4de2d67aa2ade70912c99166d31c"><td class="memTemplParams" colspan="2">
template&lt;typename U &gt; </td></tr>
<tr class="memitem:a0c3e4de2d67aa2ade70912c99166d31c inherit pub_methods_classez_small_array_base"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE U &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetUserData</b> ()</td></tr>
<tr class="separator:a0c3e4de2d67aa2ade70912c99166d31c inherit pub_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="inherited" name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_types_classez_small_array_base"><td colspan="2" onclick="javascript:toggleInherit('pub_types_classez_small_array_base')"><img src="../../closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase&lt; T, Size &gt;</a></td></tr>
<tr class="memitem:ac1b0243d19c4a30abcd99c21173d9631 inherit pub_types_classez_small_array_base" id="r_ac1b0243d19c4a30abcd99c21173d9631"><td class="memItemLeft" align="right" valign="top">
using&#160;</td><td class="memItemRight" valign="bottom"><b>value_type</b> = T</td></tr>
<tr class="separator:ac1b0243d19c4a30abcd99c21173d9631 inherit pub_types_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb0e5f2245d9dc2dce9c082ba274255f inherit pub_types_classez_small_array_base" id="r_abb0e5f2245d9dc2dce9c082ba274255f"><td class="memItemLeft" align="right" valign="top">
using&#160;</td><td class="memItemRight" valign="bottom"><b>const_reference</b> = const T &amp;</td></tr>
<tr class="separator:abb0e5f2245d9dc2dce9c082ba274255f inherit pub_types_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a214d9e07421f9c6422e71a0b85179618 inherit pub_types_classez_small_array_base" id="r_a214d9e07421f9c6422e71a0b85179618"><td class="memItemLeft" align="right" valign="top">
using&#160;</td><td class="memItemRight" valign="bottom"><b>const_iterator</b> = const T *</td></tr>
<tr class="separator:a214d9e07421f9c6422e71a0b85179618 inherit pub_types_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad2cae9067becfd6dd68f0ffa8f58380c inherit pub_types_classez_small_array_base" id="r_ad2cae9067becfd6dd68f0ffa8f58380c"><td class="memItemLeft" align="right" valign="top">
using&#160;</td><td class="memItemRight" valign="bottom"><b>const_reverse_iterator</b> = <a class="el" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">const_reverse_pointer_iterator</a>&lt; T &gt;</td></tr>
<tr class="separator:ad2cae9067becfd6dd68f0ffa8f58380c inherit pub_types_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7e661231bc2d79e5d2fdd90283bfb31d inherit pub_types_classez_small_array_base" id="r_a7e661231bc2d79e5d2fdd90283bfb31d"><td class="memItemLeft" align="right" valign="top">
using&#160;</td><td class="memItemRight" valign="bottom"><b>iterator</b> = T *</td></tr>
<tr class="separator:a7e661231bc2d79e5d2fdd90283bfb31d inherit pub_types_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa5bad425e1071f47aaf0248652ab07b inherit pub_types_classez_small_array_base" id="r_afa5bad425e1071f47aaf0248652ab07b"><td class="memItemLeft" align="right" valign="top">
using&#160;</td><td class="memItemRight" valign="bottom"><b>reverse_iterator</b> = <a class="el" href="../../d3/df2/structreverse__pointer__iterator.htm">reverse_pointer_iterator</a>&lt; T &gt;</td></tr>
<tr class="separator:afa5bad425e1071f47aaf0248652ab07b inherit pub_types_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_types_classez_small_array_base"><td colspan="2" onclick="javascript:toggleInherit('pro_types_classez_small_array_base')"><img src="../../closed.png" alt="-"/>&#160;Protected Types inherited from <a class="el" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase&lt; T, Size &gt;</a></td></tr>
<tr class="memitem:a64a24d7e9beac24626b66e6967d2b96b inherit pro_types_classez_small_array_base" id="r_a64a24d7e9beac24626b66e6967d2b96b"><td class="memItemLeft" align="right" valign="top"><a id="a64a24d7e9beac24626b66e6967d2b96b" name="a64a24d7e9beac24626b66e6967d2b96b"></a>enum &#160;</td><td class="memItemRight" valign="bottom">{ <b>CAPACITY_ALIGNMENT</b> = 4
 }</td></tr>
<tr class="separator:a64a24d7e9beac24626b66e6967d2b96b inherit pro_types_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classez_small_array_base"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classez_small_array_base')"><img src="../../closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase&lt; T, Size &gt;</a></td></tr>
<tr class="memitem:a3e72c76932631714a4f8ea503e9d90ee inherit pro_methods_classez_small_array_base" id="r_a3e72c76932631714a4f8ea503e9d90ee"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetCapacity</b> (ezUInt16 uiCapacity, <a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="separator:a3e72c76932631714a4f8ea503e9d90ee inherit pro_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3c42c13757230e17f284a1351638fe68 inherit pro_methods_classez_small_array_base" id="r_a3c42c13757230e17f284a1351638fe68"><td class="memItemLeft" align="right" valign="top">
T *&#160;</td><td class="memItemRight" valign="bottom"><b>GetElementsPtr</b> ()</td></tr>
<tr class="separator:a3c42c13757230e17f284a1351638fe68 inherit pro_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a50eaedbfa69f6d9d26a4a8a26258fb8c inherit pro_methods_classez_small_array_base" id="r_a50eaedbfa69f6d9d26a4a8a26258fb8c"><td class="memItemLeft" align="right" valign="top">
const T *&#160;</td><td class="memItemRight" valign="bottom"><b>GetElementsPtr</b> () const</td></tr>
<tr class="separator:a50eaedbfa69f6d9d26a4a8a26258fb8c inherit pro_methods_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classez_small_array_base"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classez_small_array_base')"><img src="../../closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="../../d4/d0b/classez_small_array_base.htm">ezSmallArrayBase&lt; T, Size &gt;</a></td></tr>
<tr class="memitem:a38dd2035fbf9c35b8d88cac1c1110d5e inherit pro_attribs_classez_small_array_base" id="r_a38dd2035fbf9c35b8d88cac1c1110d5e"><td class="memItemLeft" align="right" valign="top">
ezUInt16&#160;</td><td class="memItemRight" valign="bottom"><b>m_uiCount</b> = 0</td></tr>
<tr class="separator:a38dd2035fbf9c35b8d88cac1c1110d5e inherit pro_attribs_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0831ca34c75d6dc47f9f125d87c3c613 inherit pro_attribs_classez_small_array_base" id="r_a0831ca34c75d6dc47f9f125d87c3c613"><td class="memItemLeft" align="right" valign="top">
ezUInt16&#160;</td><td class="memItemRight" valign="bottom"><b>m_uiCapacity</b> = Size</td></tr>
<tr class="separator:a0831ca34c75d6dc47f9f125d87c3c613 inherit pro_attribs_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4d7de83447e93504e8e87cb6add36414 inherit pro_attribs_classez_small_array_base" id="r_a4d7de83447e93504e8e87cb6add36414"><td class="memItemLeft" align="right" valign="top">
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>m_uiUserData</b> = 0</td></tr>
<tr class="separator:a4d7de83447e93504e8e87cb6add36414 inherit pro_attribs_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a418a10300369a2330ab711f8496cdaa8 inherit pro_attribs_classez_small_array_base" id="r_a418a10300369a2330ab711f8496cdaa8"><td class="memItemLeft" >
union {&#160;</td><td class="memItemRight" valign="bottom"></td></tr>
<tr class="separator: inherit pro_attribs_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae0f6b7bc6a018b8a57386965de60891c inherit pro_attribs_classez_small_array_base" id="r_ae0f6b7bc6a018b8a57386965de60891c"><td class="memItemLeft" >
&#160;&#160;&#160;struct <b>alignas</b> {&#160;</td><td class="memItemRight" valign="bottom"></td></tr>
<tr class="separator: inherit pro_attribs_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8371954eafeffc3fabab92c70e2aab20 inherit pro_attribs_classez_small_array_base" id="r_a8371954eafeffc3fabab92c70e2aab20"><td class="memItemLeft" >
&#160;&#160;&#160;&#160;&#160;&#160;ezUInt8&#160;&#160;&#160;<b>m_StaticData</b> [Size *sizeof(T)]&#160;</td><td class="memItemRight" valign="bottom"></td></tr>
<tr class="separator:a8371954eafeffc3fabab92c70e2aab20 inherit pro_attribs_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae0f6b7bc6a018b8a57386965de60891c inherit pro_attribs_classez_small_array_base" id="r_ae0f6b7bc6a018b8a57386965de60891c"><td class="memItemLeft" valign="top">&#160;&#160;&#160;}&#160;</td><td class="memItemRight" valign="bottom">&#160;</td><td class="memItemRight" valign="bottom"></td></tr>
<tr class="separator:ae0f6b7bc6a018b8a57386965de60891c inherit pro_attribs_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f3e529ab01de790737dd37addb783bd inherit pro_attribs_classez_small_array_base" id="r_a3f3e529ab01de790737dd37addb783bd"><td class="memItemLeft" >
&#160;&#160;&#160;T *&#160;&#160;&#160;<b>m_pElements</b> = nullptr&#160;</td><td class="memItemRight" valign="bottom"></td></tr>
<tr class="separator:a3f3e529ab01de790737dd37addb783bd inherit pro_attribs_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a418a10300369a2330ab711f8496cdaa8 inherit pro_attribs_classez_small_array_base" id="r_a418a10300369a2330ab711f8496cdaa8"><td class="memItemLeft" valign="top">};&#160;</td><td class="memItemRight" valign="bottom">&#160;</td><td class="memItemRight" valign="bottom"></td></tr>
<tr class="separator:a418a10300369a2330ab711f8496cdaa8 inherit pro_attribs_classez_small_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><div class="compoundTemplParams">template&lt;typename T, ezUInt16 Size, typename AllocatorWrapper = ezDefaultAllocatorWrapper&gt;<br />
class ezSmallArray&lt; T, Size, AllocatorWrapper &gt;</div><dl class="section see"><dt>See also</dt><dd><a class="el" href="../../d4/d0b/classez_small_array_base.htm" title="Implementation of a dynamically growing array with in-place storage and small memory overhead.">ezSmallArrayBase</a> </dd></dl>
</div><hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Containers/<a class="el" href="../../d6/d8d/_small_array_8h_source.htm">SmallArray.h</a></li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Containers/Implementation/<a class="el" href="../../d2/d62/_small_array__inl_8h_source.htm">SmallArray_inl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d0/d0c/classez_small_array.htm">ezSmallArray</a></li>
    <li class="footer">Generated on Fri Jul 11 2025 12:18:01 for ezEngine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
