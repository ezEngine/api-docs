<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: ezUniquePtr&lt; T &gt; Class Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 22.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d8/d96/classez_unique_ptr.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="../../d1/dae/classez_unique_ptr-members.htm">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">ezUniquePtr&lt; T &gt; Class Template Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>A Unique ptr manages an object and destroys that object when it goes out of scope. It is ensure that only one unique ptr can manage the same object.  
 <a href="../../d8/d96/classez_unique_ptr.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d8/df6/_unique_ptr_8h_source.htm">UniquePtr.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aa93b22ed79ae4cdb857a139195318761"><td class="memItemLeft" align="right" valign="top"><a id="aa93b22ed79ae4cdb857a139195318761"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>EZ_DECLARE_MEM_RELOCATABLE_TYPE</b> ()</td></tr>
<tr class="separator:aa93b22ed79ae4cdb857a139195318761"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ebf27226bb5f802d86ac22bcfdef3ed"><td class="memItemLeft" align="right" valign="top"><a id="a9ebf27226bb5f802d86ac22bcfdef3ed"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/d96/classez_unique_ptr.htm#a9ebf27226bb5f802d86ac22bcfdef3ed">ezUniquePtr</a> ()</td></tr>
<tr class="memdesc:a9ebf27226bb5f802d86ac22bcfdef3ed"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an empty unique ptr. <br /></td></tr>
<tr class="separator:a9ebf27226bb5f802d86ac22bcfdef3ed"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d0c4ba87bb187ac51f987f99a9e16b0"><td class="memTemplParams" colspan="2"><a id="a1d0c4ba87bb187ac51f987f99a9e16b0"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:a1d0c4ba87bb187ac51f987f99a9e16b0"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../d8/d96/classez_unique_ptr.htm#a1d0c4ba87bb187ac51f987f99a9e16b0">ezUniquePtr</a> (const <a class="el" href="../../da/d7c/structez_internal_1_1_new_instance.htm">ezInternal::NewInstance</a>&lt; U &gt; &amp;instance)</td></tr>
<tr class="memdesc:a1d0c4ba87bb187ac51f987f99a9e16b0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a unique ptr from a freshly created instance through EZ_NEW or EZ_DEFAULT_NEW. <br /></td></tr>
<tr class="separator:a1d0c4ba87bb187ac51f987f99a9e16b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a412d2a169276af6dfb49438a76b049fe"><td class="memTemplParams" colspan="2"><a id="a412d2a169276af6dfb49438a76b049fe"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:a412d2a169276af6dfb49438a76b049fe"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../d8/d96/classez_unique_ptr.htm#a412d2a169276af6dfb49438a76b049fe">ezUniquePtr</a> (U *pInstance, <a class="el" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a> *pAllocator)</td></tr>
<tr class="memdesc:a412d2a169276af6dfb49438a76b049fe"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a unique ptr from a pointer and an allocator. The passed allocator will be used to destroy the instance when the unique ptr goes out of scope. <br /></td></tr>
<tr class="separator:a412d2a169276af6dfb49438a76b049fe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a739761ad5f4c05ed3a7a87f8e139ae9b"><td class="memTemplParams" colspan="2"><a id="a739761ad5f4c05ed3a7a87f8e139ae9b"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:a739761ad5f4c05ed3a7a87f8e139ae9b"><td class="memTemplItemLeft" align="right" valign="top">&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../d8/d96/classez_unique_ptr.htm#a739761ad5f4c05ed3a7a87f8e139ae9b">ezUniquePtr</a> (<a class="el" href="../../d8/d96/classez_unique_ptr.htm">ezUniquePtr</a>&lt; U &gt; &amp;&amp;other)</td></tr>
<tr class="memdesc:a739761ad5f4c05ed3a7a87f8e139ae9b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Move constructs a unique ptr from another. The other unique ptr will be empty afterwards to guarantee that there is only one unique ptr managing the same object. <br /></td></tr>
<tr class="separator:a739761ad5f4c05ed3a7a87f8e139ae9b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2ab710113eb763af3c9239edfecdaa3f"><td class="memItemLeft" align="right" valign="top"><a id="a2ab710113eb763af3c9239edfecdaa3f"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/d96/classez_unique_ptr.htm#a2ab710113eb763af3c9239edfecdaa3f">ezUniquePtr</a> (std::nullptr_t)</td></tr>
<tr class="memdesc:a2ab710113eb763af3c9239edfecdaa3f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Initialization with nullptr to be able to return nullptr in functions that return unique ptr. <br /></td></tr>
<tr class="separator:a2ab710113eb763af3c9239edfecdaa3f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5a1ed4aa69afef8ca1c7d89b0ea3b0d3"><td class="memItemLeft" align="right" valign="top"><a id="a5a1ed4aa69afef8ca1c7d89b0ea3b0d3"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/d96/classez_unique_ptr.htm#a5a1ed4aa69afef8ca1c7d89b0ea3b0d3">~ezUniquePtr</a> ()</td></tr>
<tr class="memdesc:a5a1ed4aa69afef8ca1c7d89b0ea3b0d3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys the managed object using the stored allocator. <br /></td></tr>
<tr class="separator:a5a1ed4aa69afef8ca1c7d89b0ea3b0d3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a815ddb8103d744b712d547573c80daf7"><td class="memTemplParams" colspan="2"><a id="a815ddb8103d744b712d547573c80daf7"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:a815ddb8103d744b712d547573c80daf7"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="../../d8/d96/classez_unique_ptr.htm">ezUniquePtr</a>&lt; T &gt; &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../d8/d96/classez_unique_ptr.htm#a815ddb8103d744b712d547573c80daf7">operator=</a> (const <a class="el" href="../../da/d7c/structez_internal_1_1_new_instance.htm">ezInternal::NewInstance</a>&lt; U &gt; &amp;instance)</td></tr>
<tr class="memdesc:a815ddb8103d744b712d547573c80daf7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sets the unique ptr from a freshly created instance through EZ_NEW or EZ_DEFAULT_NEW. <br /></td></tr>
<tr class="separator:a815ddb8103d744b712d547573c80daf7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4a5063c9c8f15353cd11904aefb82dac"><td class="memTemplParams" colspan="2"><a id="a4a5063c9c8f15353cd11904aefb82dac"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:a4a5063c9c8f15353cd11904aefb82dac"><td class="memTemplItemLeft" align="right" valign="top"><a class="el" href="../../d8/d96/classez_unique_ptr.htm">ezUniquePtr</a>&lt; T &gt; &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="../../d8/d96/classez_unique_ptr.htm#a4a5063c9c8f15353cd11904aefb82dac">operator=</a> (<a class="el" href="../../d8/d96/classez_unique_ptr.htm">ezUniquePtr</a>&lt; U &gt; &amp;&amp;other)</td></tr>
<tr class="memdesc:a4a5063c9c8f15353cd11904aefb82dac"><td class="mdescLeft">&#160;</td><td class="mdescRight">Move assigns a unique ptr from another. The other unique ptr will be empty afterwards to guarantee that there is only one unique ptr managing the same object. <br /></td></tr>
<tr class="separator:a4a5063c9c8f15353cd11904aefb82dac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abf524c6132e254ec291e92c114e5f4ff"><td class="memItemLeft" align="right" valign="top"><a id="abf524c6132e254ec291e92c114e5f4ff"></a>
<a class="el" href="../../d8/d96/classez_unique_ptr.htm">ezUniquePtr</a>&lt; T &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/d96/classez_unique_ptr.htm#abf524c6132e254ec291e92c114e5f4ff">operator=</a> (std::nullptr_t)</td></tr>
<tr class="memdesc:abf524c6132e254ec291e92c114e5f4ff"><td class="mdescLeft">&#160;</td><td class="mdescRight">Same as calling 'Reset()'. <br /></td></tr>
<tr class="separator:abf524c6132e254ec291e92c114e5f4ff"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa89c34ae52823bb39579105aba3455e0"><td class="memItemLeft" align="right" valign="top"><a id="aa89c34ae52823bb39579105aba3455e0"></a>
T *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/d96/classez_unique_ptr.htm#aa89c34ae52823bb39579105aba3455e0">Release</a> ()</td></tr>
<tr class="memdesc:aa89c34ae52823bb39579105aba3455e0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Releases the managed object without destroying it. The unique ptr will be empty afterwards. <br /></td></tr>
<tr class="separator:aa89c34ae52823bb39579105aba3455e0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e47992ad71bd39f2edefc6b410f0e34"><td class="memItemLeft" align="right" valign="top"><a id="a8e47992ad71bd39f2edefc6b410f0e34"></a>
T *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/d96/classez_unique_ptr.htm#a8e47992ad71bd39f2edefc6b410f0e34">Release</a> (<a class="el" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a> *&amp;out_pAllocator)</td></tr>
<tr class="memdesc:a8e47992ad71bd39f2edefc6b410f0e34"><td class="mdescLeft">&#160;</td><td class="mdescRight">Releases the managed object without destroying it. The unique ptr will be empty afterwards. Also returns the allocator that should be used to destroy the object. <br /></td></tr>
<tr class="separator:a8e47992ad71bd39f2edefc6b410f0e34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada02149912c53d5a2de431d09bf83333"><td class="memItemLeft" align="right" valign="top"><a id="ada02149912c53d5a2de431d09bf83333"></a>
T *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/d96/classez_unique_ptr.htm#ada02149912c53d5a2de431d09bf83333">Borrow</a> () const</td></tr>
<tr class="memdesc:ada02149912c53d5a2de431d09bf83333"><td class="mdescLeft">&#160;</td><td class="mdescRight">Borrows the managed object. The unique ptr stays unmodified. <br /></td></tr>
<tr class="separator:ada02149912c53d5a2de431d09bf83333"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37714ec8c2a44922d05ead413a73cf8f"><td class="memItemLeft" align="right" valign="top"><a id="a37714ec8c2a44922d05ead413a73cf8f"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/d96/classez_unique_ptr.htm#a37714ec8c2a44922d05ead413a73cf8f">Clear</a> ()</td></tr>
<tr class="memdesc:a37714ec8c2a44922d05ead413a73cf8f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destroys the managed object and resets the unique ptr. <br /></td></tr>
<tr class="separator:a37714ec8c2a44922d05ead413a73cf8f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3e5bbe959878ea6a9ebbe3ac3e46155d"><td class="memItemLeft" align="right" valign="top"><a id="a3e5bbe959878ea6a9ebbe3ac3e46155d"></a>
T &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/d96/classez_unique_ptr.htm#a3e5bbe959878ea6a9ebbe3ac3e46155d">operator*</a> () const</td></tr>
<tr class="memdesc:a3e5bbe959878ea6a9ebbe3ac3e46155d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Provides access to the managed object. <br /></td></tr>
<tr class="separator:a3e5bbe959878ea6a9ebbe3ac3e46155d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a306ac6682ea6ba74a0bb16afec2cc5d9"><td class="memItemLeft" align="right" valign="top"><a id="a306ac6682ea6ba74a0bb16afec2cc5d9"></a>
T *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/d96/classez_unique_ptr.htm#a306ac6682ea6ba74a0bb16afec2cc5d9">operator-&gt;</a> () const</td></tr>
<tr class="memdesc:a306ac6682ea6ba74a0bb16afec2cc5d9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Provides access to the managed object. <br /></td></tr>
<tr class="separator:a306ac6682ea6ba74a0bb16afec2cc5d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8528c108afd3fd766e5929fd7a588958"><td class="memItemLeft" align="right" valign="top"><a id="a8528c108afd3fd766e5929fd7a588958"></a>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/d96/classez_unique_ptr.htm#a8528c108afd3fd766e5929fd7a588958">operator bool</a> () const</td></tr>
<tr class="memdesc:a8528c108afd3fd766e5929fd7a588958"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if there is managed object and false if the unique ptr is empty. <br /></td></tr>
<tr class="separator:a8528c108afd3fd766e5929fd7a588958"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a211ac62135aeb4a94e68cd514a0fc39f"><td class="memItemLeft" align="right" valign="top"><a id="a211ac62135aeb4a94e68cd514a0fc39f"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/d96/classez_unique_ptr.htm#a211ac62135aeb4a94e68cd514a0fc39f">operator==</a> (const <a class="el" href="../../d8/d96/classez_unique_ptr.htm">ezUniquePtr</a>&lt; T &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:a211ac62135aeb4a94e68cd514a0fc39f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares the unique ptr against another unique ptr. <br /></td></tr>
<tr class="separator:a211ac62135aeb4a94e68cd514a0fc39f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab60a83abe3d807b2ba08c0f14a9589bd"><td class="memItemLeft" align="right" valign="top"><a id="ab60a83abe3d807b2ba08c0f14a9589bd"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator!=</b> (const <a class="el" href="../../d8/d96/classez_unique_ptr.htm">ezUniquePtr</a>&lt; T &gt; &amp;rhs) const</td></tr>
<tr class="separator:ab60a83abe3d807b2ba08c0f14a9589bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9f1536c600bc4880473144c255170805"><td class="memItemLeft" align="right" valign="top"><a id="a9f1536c600bc4880473144c255170805"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&lt;</b> (const <a class="el" href="../../d8/d96/classez_unique_ptr.htm">ezUniquePtr</a>&lt; T &gt; &amp;rhs) const</td></tr>
<tr class="separator:a9f1536c600bc4880473144c255170805"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75d2852ac93f155a6db54e008b9affb2"><td class="memItemLeft" align="right" valign="top"><a id="a75d2852ac93f155a6db54e008b9affb2"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&lt;=</b> (const <a class="el" href="../../d8/d96/classez_unique_ptr.htm">ezUniquePtr</a>&lt; T &gt; &amp;rhs) const</td></tr>
<tr class="separator:a75d2852ac93f155a6db54e008b9affb2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6005b28c2a8dd0c5878ee9b6a0bf3442"><td class="memItemLeft" align="right" valign="top"><a id="a6005b28c2a8dd0c5878ee9b6a0bf3442"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&gt;</b> (const <a class="el" href="../../d8/d96/classez_unique_ptr.htm">ezUniquePtr</a>&lt; T &gt; &amp;rhs) const</td></tr>
<tr class="separator:a6005b28c2a8dd0c5878ee9b6a0bf3442"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a10c03bbf72cb300b2ba036da7031b45a"><td class="memItemLeft" align="right" valign="top"><a id="a10c03bbf72cb300b2ba036da7031b45a"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&gt;=</b> (const <a class="el" href="../../d8/d96/classez_unique_ptr.htm">ezUniquePtr</a>&lt; T &gt; &amp;rhs) const</td></tr>
<tr class="separator:a10c03bbf72cb300b2ba036da7031b45a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af991c9e72fe598effea21de2844d718a"><td class="memItemLeft" align="right" valign="top"><a id="af991c9e72fe598effea21de2844d718a"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/d96/classez_unique_ptr.htm#af991c9e72fe598effea21de2844d718a">operator==</a> (std::nullptr_t) const</td></tr>
<tr class="memdesc:af991c9e72fe598effea21de2844d718a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares the unique ptr against nullptr. <br /></td></tr>
<tr class="separator:af991c9e72fe598effea21de2844d718a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acbf56772c3e44efa45fbf2eefbd3f2ac"><td class="memItemLeft" align="right" valign="top"><a id="acbf56772c3e44efa45fbf2eefbd3f2ac"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator!=</b> (std::nullptr_t) const</td></tr>
<tr class="separator:acbf56772c3e44efa45fbf2eefbd3f2ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1c5181006fae655fd5a77aa9ba76a1e"><td class="memItemLeft" align="right" valign="top"><a id="ac1c5181006fae655fd5a77aa9ba76a1e"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&lt;</b> (std::nullptr_t) const</td></tr>
<tr class="separator:ac1c5181006fae655fd5a77aa9ba76a1e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abe5663e61f950863563795c8dcd476c1"><td class="memItemLeft" align="right" valign="top"><a id="abe5663e61f950863563795c8dcd476c1"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&lt;=</b> (std::nullptr_t) const</td></tr>
<tr class="separator:abe5663e61f950863563795c8dcd476c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a33028f1c729e451ddd9c5a044020d3eb"><td class="memItemLeft" align="right" valign="top"><a id="a33028f1c729e451ddd9c5a044020d3eb"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&gt;</b> (std::nullptr_t) const</td></tr>
<tr class="separator:a33028f1c729e451ddd9c5a044020d3eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f24a2e523b727227673bea72cbc6a91"><td class="memItemLeft" align="right" valign="top"><a id="a8f24a2e523b727227673bea72cbc6a91"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&gt;=</b> (std::nullptr_t) const</td></tr>
<tr class="separator:a8f24a2e523b727227673bea72cbc6a91"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a377158c37b630aef473f0af1148afa9b"><td class="memTemplParams" colspan="2"><a id="a377158c37b630aef473f0af1148afa9b"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:a377158c37b630aef473f0af1148afa9b"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE&#160;</td><td class="memTemplItemRight" valign="bottom"><b>ezUniquePtr</b> (const <a class="el" href="../../da/d7c/structez_internal_1_1_new_instance.htm">ezInternal::NewInstance</a>&lt; U &gt; &amp;instance)</td></tr>
<tr class="separator:a377158c37b630aef473f0af1148afa9b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3531f9a0a8332990381e413ae99f9faf"><td class="memTemplParams" colspan="2"><a id="a3531f9a0a8332990381e413ae99f9faf"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:a3531f9a0a8332990381e413ae99f9faf"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE&#160;</td><td class="memTemplItemRight" valign="bottom"><b>ezUniquePtr</b> (U *pInstance, <a class="el" href="../../d1/d4c/classez_allocator_base.htm">ezAllocatorBase</a> *pAllocator)</td></tr>
<tr class="separator:a3531f9a0a8332990381e413ae99f9faf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68605638e4404d42441667dc8849155a"><td class="memTemplParams" colspan="2"><a id="a68605638e4404d42441667dc8849155a"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:a68605638e4404d42441667dc8849155a"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE&#160;</td><td class="memTemplItemRight" valign="bottom"><b>ezUniquePtr</b> (<a class="el" href="../../d8/d96/classez_unique_ptr.htm">ezUniquePtr</a>&lt; U &gt; &amp;&amp;other)</td></tr>
<tr class="separator:a68605638e4404d42441667dc8849155a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a58a8504f25b5599671f222ff7ffbca5e"><td class="memTemplParams" colspan="2"><a id="a58a8504f25b5599671f222ff7ffbca5e"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:a58a8504f25b5599671f222ff7ffbca5e"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE <a class="el" href="../../d8/d96/classez_unique_ptr.htm">ezUniquePtr</a>&lt; T &gt; &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="../../da/d7c/structez_internal_1_1_new_instance.htm">ezInternal::NewInstance</a>&lt; U &gt; &amp;instance)</td></tr>
<tr class="separator:a58a8504f25b5599671f222ff7ffbca5e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa9d1b30100698423f6884c4cdf6b9b4e"><td class="memTemplParams" colspan="2"><a id="aa9d1b30100698423f6884c4cdf6b9b4e"></a>
template&lt;typename U &gt; </td></tr>
<tr class="memitem:aa9d1b30100698423f6884c4cdf6b9b4e"><td class="memTemplItemLeft" align="right" valign="top">EZ_ALWAYS_INLINE <a class="el" href="../../d8/d96/classez_unique_ptr.htm">ezUniquePtr</a>&lt; T &gt; &amp;&#160;</td><td class="memTemplItemRight" valign="bottom"><b>operator=</b> (<a class="el" href="../../d8/d96/classez_unique_ptr.htm">ezUniquePtr</a>&lt; U &gt; &amp;&amp;other)</td></tr>
<tr class="separator:aa9d1b30100698423f6884c4cdf6b9b4e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><h3>template&lt;typename T&gt;<br />
class ezUniquePtr&lt; T &gt;</h3>

<p>A Unique ptr manages an object and destroys that object when it goes out of scope. It is ensure that only one unique ptr can manage the same object. </p>
</div><hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Types/<a class="el" href="../../d8/df6/_unique_ptr_8h_source.htm">UniquePtr.h</a></li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Types/Implementation/<a class="el" href="../../d9/d4d/_unique_ptr__inl_8h_source.htm">UniquePtr_inl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d8/d96/classez_unique_ptr.htm">ezUniquePtr</a></li>
    <li class="footer">Generated on Fri Nov 18 2022 14:48:12 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
