<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Threading/Implementation/AtomicInteger_inl.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 21.6</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d8/d88/_atomic_integer__inl_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">AtomicInteger_inl.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160; </div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00003"></a><span class="lineno"><a class="line" href="../../da/d01/classez_atomic_integer.htm#adc2bb2dfa79950486229e9efc60e42c6">    3</a></span>&#160;EZ_ALWAYS_INLINE <a class="code" href="../../da/d01/classez_atomic_integer.htm#adc2bb2dfa79950486229e9efc60e42c6">ezAtomicInteger&lt;T&gt;::ezAtomicInteger</a>()</div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;  : m_value(0)</div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;{</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;}</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160; </div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00009"></a><span class="lineno"><a class="line" href="../../da/d01/classez_atomic_integer.htm#aa31c8178f626e56219f3277e3f55fd80">    9</a></span>&#160;EZ_ALWAYS_INLINE <a class="code" href="../../da/d01/classez_atomic_integer.htm#adc2bb2dfa79950486229e9efc60e42c6">ezAtomicInteger&lt;T&gt;::ezAtomicInteger</a>(T value)</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;  : m_value(value)</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;{</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;}</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160; </div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00015"></a><span class="lineno"><a class="line" href="../../da/d01/classez_atomic_integer.htm#a2504c2cc02d0dbcc46e448ab65e4c6c8">   15</a></span>&#160;EZ_ALWAYS_INLINE <a class="code" href="../../da/d01/classez_atomic_integer.htm#adc2bb2dfa79950486229e9efc60e42c6">ezAtomicInteger&lt;T&gt;::ezAtomicInteger</a>(<span class="keyword">const</span> <a class="code" href="../../da/d01/classez_atomic_integer.htm">ezAtomicInteger&lt;T&gt;</a>&amp; value)</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;  : m_value(value.m_value)</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;{</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;}</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160; </div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00021"></a><span class="lineno"><a class="line" href="../../da/d01/classez_atomic_integer.htm#a8cea453bc4f47a5c4172ff8b1076f239">   21</a></span>&#160;EZ_ALWAYS_INLINE <a class="code" href="../../da/d01/classez_atomic_integer.htm">ezAtomicInteger&lt;T&gt;</a>&amp; <a class="code" href="../../da/d01/classez_atomic_integer.htm#a8cea453bc4f47a5c4172ff8b1076f239">ezAtomicInteger&lt;T&gt;::operator=</a>(<span class="keyword">const</span> T value)</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;{</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;  m_value = value;</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;  <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;}</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00028"></a><span class="lineno"><a class="line" href="../../da/d01/classez_atomic_integer.htm#ab5e67bd885c10a19c5b0f3253aead860">   28</a></span>&#160;EZ_ALWAYS_INLINE <a class="code" href="../../da/d01/classez_atomic_integer.htm">ezAtomicInteger&lt;T&gt;</a>&amp; <a class="code" href="../../da/d01/classez_atomic_integer.htm#a8cea453bc4f47a5c4172ff8b1076f239">ezAtomicInteger&lt;T&gt;::operator=</a>(<span class="keyword">const</span> <a class="code" href="../../da/d01/classez_atomic_integer.htm">ezAtomicInteger&lt;T&gt;</a>&amp; value)</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;{</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;  m_value = value.m_value;</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;}</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160; </div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="../../da/d01/classez_atomic_integer.htm#a70ef3cc6d6a3879d990d54be95b62c48">   35</a></span>&#160;EZ_ALWAYS_INLINE T <a class="code" href="../../da/d01/classez_atomic_integer.htm#a70ef3cc6d6a3879d990d54be95b62c48">ezAtomicInteger&lt;T&gt;::Increment</a>()</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;{</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d6/d25/structez_atomic_utils.htm#afc253c06be30a9ddc29c0d69ea692f9d">ezAtomicUtils::Increment</a>(m_value);</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;}</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160; </div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="../../da/d01/classez_atomic_integer.htm#a8564e051c86ff5ea7f4002d668b7f93b">   41</a></span>&#160;EZ_ALWAYS_INLINE T <a class="code" href="../../da/d01/classez_atomic_integer.htm#a8564e051c86ff5ea7f4002d668b7f93b">ezAtomicInteger&lt;T&gt;::Decrement</a>()</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;{</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d6/d25/structez_atomic_utils.htm#ad1f1c4485947b8c329906df8456430f6">ezAtomicUtils::Decrement</a>(m_value);</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;}</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160; </div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="../../da/d01/classez_atomic_integer.htm#a436470710385b8d661ac85a65ec05611">   47</a></span>&#160;EZ_ALWAYS_INLINE T <a class="code" href="../../da/d01/classez_atomic_integer.htm#a436470710385b8d661ac85a65ec05611">ezAtomicInteger&lt;T&gt;::PostIncrement</a>()</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;{</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d6/d25/structez_atomic_utils.htm#a6ca2ff1cc8ce4f3c9696ae95b4b12307">ezAtomicUtils::PostIncrement</a>(m_value);</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;}</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160; </div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="../../da/d01/classez_atomic_integer.htm#a7bb616a487e6cda5505a72c51e422cd2">   53</a></span>&#160;EZ_ALWAYS_INLINE T <a class="code" href="../../da/d01/classez_atomic_integer.htm#a7bb616a487e6cda5505a72c51e422cd2">ezAtomicInteger&lt;T&gt;::PostDecrement</a>()</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;{</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d6/d25/structez_atomic_utils.htm#ad2bdfadaffc2c70937205fb89cc3bbd3">ezAtomicUtils::PostDecrement</a>(m_value);</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;}</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160; </div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../da/d01/classez_atomic_integer.htm">ezAtomicInteger&lt;T&gt;::Add</a>(T x)</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;{</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;  <a class="code" href="../../d6/d25/structez_atomic_utils.htm#a1ca59d0420faaf5c89a499220f6efa82">ezAtomicUtils::Add</a>(m_value, x);</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;}</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160; </div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../da/d01/classez_atomic_integer.htm">ezAtomicInteger&lt;T&gt;::Subtract</a>(T x)</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;{</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;  <a class="code" href="../../d6/d25/structez_atomic_utils.htm#a1ca59d0420faaf5c89a499220f6efa82">ezAtomicUtils::Add</a>(m_value, -x);</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;}</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160; </div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../da/d01/classez_atomic_integer.htm">ezAtomicInteger&lt;T&gt;::And</a>(T x)</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;{</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  <a class="code" href="../../d6/d25/structez_atomic_utils.htm#af827472d139cd0301b90762c5936d741">ezAtomicUtils::And</a>(m_value, x);</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;}</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160; </div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../da/d01/classez_atomic_integer.htm">ezAtomicInteger&lt;T&gt;::Or</a>(T x)</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;{</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;  <a class="code" href="../../d6/d25/structez_atomic_utils.htm#ac391cc82b7a05900216a41f77a15c8c4">ezAtomicUtils::Or</a>(m_value, x);</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;}</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160; </div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../da/d01/classez_atomic_integer.htm">ezAtomicInteger&lt;T&gt;::Xor</a>(T x)</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;{</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;  <a class="code" href="../../d6/d25/structez_atomic_utils.htm#afe3578c201e6166a023a609e1d51bc6b">ezAtomicUtils::Xor</a>(m_value, x);</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;}</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160; </div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../da/d01/classez_atomic_integer.htm">ezAtomicInteger&lt;T&gt;::Min</a>(T x)</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;{</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;  <a class="code" href="../../d6/d25/structez_atomic_utils.htm#aa4e7354485344ccdb2efa59cfde60701">ezAtomicUtils::Min</a>(m_value, x);</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;}</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160; </div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../da/d01/classez_atomic_integer.htm">ezAtomicInteger&lt;T&gt;::Max</a>(T x)</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;{</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;  <a class="code" href="../../d6/d25/structez_atomic_utils.htm#ac1f56bbc48c7e97a0deb3211ac894c94">ezAtomicUtils::Max</a>(m_value, x);</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;}</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160; </div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00101"></a><span class="lineno"><a class="line" href="../../da/d01/classez_atomic_integer.htm#a35e0a26b7b0b3975410d36df360f45c3">  101</a></span>&#160;EZ_ALWAYS_INLINE T <a class="code" href="../../da/d01/classez_atomic_integer.htm#a35e0a26b7b0b3975410d36df360f45c3">ezAtomicInteger&lt;T&gt;::Set</a>(T x)</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;{</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d6/d25/structez_atomic_utils.htm#a03e4af1722c6b4f4efad609943fa03cb">ezAtomicUtils::Set</a>(m_value, x);</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;}</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160; </div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00107"></a><span class="lineno"><a class="line" href="../../da/d01/classez_atomic_integer.htm#a56a0ed4d78e6495d46ddfadc6492d5d9">  107</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../da/d01/classez_atomic_integer.htm#a56a0ed4d78e6495d46ddfadc6492d5d9">ezAtomicInteger&lt;T&gt;::TestAndSet</a>(T expected, T x)</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;{</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d6/d25/structez_atomic_utils.htm#ab7a6f96e60750e484888fbf6a887b7b2">ezAtomicUtils::TestAndSet</a>(m_value, expected, x);</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;}</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160; </div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00113"></a><span class="lineno"><a class="line" href="../../da/d01/classez_atomic_integer.htm#a62bab9f52c740f1abd61526236d52843">  113</a></span>&#160;EZ_ALWAYS_INLINE T <a class="code" href="../../da/d01/classez_atomic_integer.htm#a62bab9f52c740f1abd61526236d52843">ezAtomicInteger&lt;T&gt;::CompareAndSwap</a>(T expected, T x)</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;{</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d6/d25/structez_atomic_utils.htm#a4eb0c91e093fce8ffdf84023947762d9">ezAtomicUtils::CompareAndSwap</a>(m_value, expected, x);</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;}</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160; </div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;EZ_ALWAYS_INLINE <a class="code" href="../../da/d01/classez_atomic_integer.htm">ezAtomicInteger&lt;T&gt;::operator</a> T()<span class="keyword"> const</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d6/d25/structez_atomic_utils.htm#aec1d674775ca50135c4f4f8038bcf4c3">ezAtomicUtils::Read</a>(m_value);</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;}</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160; </div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160; </div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;EZ_ALWAYS_INLINE <a class="code" href="../../d0/daf/classez_atomic_bool.htm#a424309cb1e6ea517882bd5b418f9efb5">ezAtomicBool::ezAtomicBool</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;EZ_ALWAYS_INLINE ezAtomicBool::~ezAtomicBool() = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160; </div>
<div class="line"><a name="l00129"></a><span class="lineno"><a class="line" href="../../d0/daf/classez_atomic_bool.htm#a69e347e46d6ac69957d354229c08d6ae">  129</a></span>&#160;EZ_ALWAYS_INLINE <a class="code" href="../../d0/daf/classez_atomic_bool.htm#a424309cb1e6ea517882bd5b418f9efb5">ezAtomicBool::ezAtomicBool</a>(<span class="keywordtype">bool</span> value)</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;{</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;  <a class="code" href="../../d0/daf/classez_atomic_bool.htm#a16dcd9155b0692641b9d860e50f8e596">Set</a>(value);</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;}</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160; </div>
<div class="line"><a name="l00134"></a><span class="lineno"><a class="line" href="../../d0/daf/classez_atomic_bool.htm#a30982ed312df03a61d3f93531cade31c">  134</a></span>&#160;EZ_ALWAYS_INLINE <a class="code" href="../../d0/daf/classez_atomic_bool.htm#a424309cb1e6ea517882bd5b418f9efb5">ezAtomicBool::ezAtomicBool</a>(<span class="keyword">const</span> <a class="code" href="../../d0/daf/classez_atomic_bool.htm">ezAtomicBool</a>&amp; rhs)</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;{</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;  <a class="code" href="../../d0/daf/classez_atomic_bool.htm#a16dcd9155b0692641b9d860e50f8e596">Set</a>(<span class="keyword">static_cast&lt;</span><span class="keywordtype">bool</span><span class="keyword">&gt;</span>(rhs));</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;}</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160; </div>
<div class="line"><a name="l00139"></a><span class="lineno"><a class="line" href="../../d0/daf/classez_atomic_bool.htm#a16dcd9155b0692641b9d860e50f8e596">  139</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../d0/daf/classez_atomic_bool.htm#a16dcd9155b0692641b9d860e50f8e596">ezAtomicBool::Set</a>(<span class="keywordtype">bool</span> value)</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;{</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;  <span class="keywordflow">return</span> m_AtomicInt.<a class="code" href="../../da/d01/classez_atomic_integer.htm#a35e0a26b7b0b3975410d36df360f45c3">Set</a>(value ? 1 : 0) != 0;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;}</div>
<div class="line"><a name="l00143"></a><span class="lineno">  143</span>&#160; </div>
<div class="line"><a name="l00144"></a><span class="lineno"><a class="line" href="../../d0/daf/classez_atomic_bool.htm#af1ad80eccede19a0bcef7c87a992c70e">  144</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d0/daf/classez_atomic_bool.htm#af1ad80eccede19a0bcef7c87a992c70e">ezAtomicBool::operator=</a>(<span class="keywordtype">bool</span> value)</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;{</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;  <a class="code" href="../../d0/daf/classez_atomic_bool.htm#a16dcd9155b0692641b9d860e50f8e596">Set</a>(value);</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;}</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160; </div>
<div class="line"><a name="l00149"></a><span class="lineno"><a class="line" href="../../d0/daf/classez_atomic_bool.htm#a66d1f16b8d665b558a49b958b05d9264">  149</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">void</span> <a class="code" href="../../d0/daf/classez_atomic_bool.htm#af1ad80eccede19a0bcef7c87a992c70e">ezAtomicBool::operator=</a>(<span class="keyword">const</span> <a class="code" href="../../d0/daf/classez_atomic_bool.htm">ezAtomicBool</a>&amp; rhs)</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;{</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;  <a class="code" href="../../d0/daf/classez_atomic_bool.htm#a16dcd9155b0692641b9d860e50f8e596">Set</a>(<span class="keyword">static_cast&lt;</span><span class="keywordtype">bool</span><span class="keyword">&gt;</span>(rhs));</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;}</div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160; </div>
<div class="line"><a name="l00154"></a><span class="lineno"><a class="line" href="../../d0/daf/classez_atomic_bool.htm#a694187cb137de9b7e6f251ad3b0a914a">  154</a></span>&#160;EZ_ALWAYS_INLINE ezAtomicBool::operator bool()<span class="keyword"> const</span></div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="keyword"></span>{</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;  <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span>ezInt32<span class="keyword">&gt;</span>(m_AtomicInt) != 0;</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;}</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160; </div>
<div class="line"><a name="l00159"></a><span class="lineno"><a class="line" href="../../d0/daf/classez_atomic_bool.htm#abe27a39153de10ca03064a47f2a65618">  159</a></span>&#160;EZ_ALWAYS_INLINE <span class="keywordtype">bool</span> <a class="code" href="../../d0/daf/classez_atomic_bool.htm#abe27a39153de10ca03064a47f2a65618">ezAtomicBool::TestAndSet</a>(<span class="keywordtype">bool</span> expected, <span class="keywordtype">bool</span> newValue)</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;{</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;  <span class="keywordflow">return</span> m_AtomicInt.<a class="code" href="../../da/d01/classez_atomic_integer.htm#a56a0ed4d78e6495d46ddfadc6492d5d9">TestAndSet</a>(expected ? 1 : 0, newValue ? 1 : 0) != 0;</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;}</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassez_atomic_bool_htm"><div class="ttname"><a href="../../d0/daf/classez_atomic_bool.htm">ezAtomicBool</a></div><div class="ttdoc">An atomic boolean variable. This is just a wrapper around an atomic int32 for convenience.</div><div class="ttdef"><b>Definition:</b> AtomicInteger.h:68</div></div>
<div class="ttc" id="astructez_atomic_utils_htm_aa4e7354485344ccdb2efa59cfde60701"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#aa4e7354485344ccdb2efa59cfde60701">ezAtomicUtils::Min</a></div><div class="ttdeci">static void Min(volatile ezInt32 &amp;dest, ezInt32 value)</div><div class="ttdoc">Performs an atomic min operation on dest using value.</div><div class="ttdef"><b>Definition:</b> AtomicUtils_posix.h:106</div></div>
<div class="ttc" id="aclassez_atomic_integer_htm_a436470710385b8d661ac85a65ec05611"><div class="ttname"><a href="../../da/d01/classez_atomic_integer.htm#a436470710385b8d661ac85a65ec05611">ezAtomicInteger::PostIncrement</a></div><div class="ttdeci">T PostIncrement()</div><div class="ttdoc">Increments the internal value and returns the value immediately before the increment.</div><div class="ttdef"><b>Definition:</b> AtomicInteger_inl.h:47</div></div>
<div class="ttc" id="astructez_atomic_utils_htm_ad1f1c4485947b8c329906df8456430f6"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#ad1f1c4485947b8c329906df8456430f6">ezAtomicUtils::Decrement</a></div><div class="ttdeci">static ezInt32 Decrement(volatile ezInt32 &amp;dest)</div><div class="ttdoc">Decrements dest as an atomic operation and returns the new value.</div><div class="ttdef"><b>Definition:</b> AtomicUtils_posix.h:31</div></div>
<div class="ttc" id="aclassez_atomic_integer_htm_a56a0ed4d78e6495d46ddfadc6492d5d9"><div class="ttname"><a href="../../da/d01/classez_atomic_integer.htm#a56a0ed4d78e6495d46ddfadc6492d5d9">ezAtomicInteger::TestAndSet</a></div><div class="ttdeci">bool TestAndSet(T expected, T x)</div><div class="ttdoc">Sets the internal value to x if the internal value is equal to expected and returns true,...</div><div class="ttdef"><b>Definition:</b> AtomicInteger_inl.h:107</div></div>
<div class="ttc" id="aclassez_atomic_bool_htm_a424309cb1e6ea517882bd5b418f9efb5"><div class="ttname"><a href="../../d0/daf/classez_atomic_bool.htm#a424309cb1e6ea517882bd5b418f9efb5">ezAtomicBool::ezAtomicBool</a></div><div class="ttdeci">ezAtomicBool()</div><div class="ttdoc">Initializes the bool to 'false'.</div></div>
<div class="ttc" id="astructez_atomic_utils_htm_ac391cc82b7a05900216a41f77a15c8c4"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#ac391cc82b7a05900216a41f77a15c8c4">ezAtomicUtils::Or</a></div><div class="ttdeci">static void Or(volatile ezInt32 &amp;dest, ezInt32 value)</div><div class="ttdoc">Performs an atomic bitwise OR on dest using value.</div><div class="ttdef"><b>Definition:</b> AtomicUtils_posix.h:84</div></div>
<div class="ttc" id="aclassez_atomic_integer_htm_adc2bb2dfa79950486229e9efc60e42c6"><div class="ttname"><a href="../../da/d01/classez_atomic_integer.htm#adc2bb2dfa79950486229e9efc60e42c6">ezAtomicInteger::ezAtomicInteger</a></div><div class="ttdeci">ezAtomicInteger()</div><div class="ttdoc">Initializes the value to zero.</div><div class="ttdef"><b>Definition:</b> AtomicInteger_inl.h:3</div></div>
<div class="ttc" id="astructez_atomic_utils_htm_afc253c06be30a9ddc29c0d69ea692f9d"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#afc253c06be30a9ddc29c0d69ea692f9d">ezAtomicUtils::Increment</a></div><div class="ttdeci">static ezInt32 Increment(volatile ezInt32 &amp;dest)</div><div class="ttdoc">Increments dest as an atomic operation and returns the new value.</div><div class="ttdef"><b>Definition:</b> AtomicUtils_posix.h:20</div></div>
<div class="ttc" id="astructez_atomic_utils_htm_a4eb0c91e093fce8ffdf84023947762d9"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#a4eb0c91e093fce8ffdf84023947762d9">ezAtomicUtils::CompareAndSwap</a></div><div class="ttdeci">static ezInt32 CompareAndSwap(volatile ezInt32 &amp;dest, ezInt32 expected, ezInt32 value)</div><div class="ttdoc">If dest is equal to expected, this function sets dest to value. Otherwise dest will not be modified....</div><div class="ttdef"><b>Definition:</b> AtomicUtils_posix.h:192</div></div>
<div class="ttc" id="astructez_atomic_utils_htm_afe3578c201e6166a023a609e1d51bc6b"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#afe3578c201e6166a023a609e1d51bc6b">ezAtomicUtils::Xor</a></div><div class="ttdeci">static void Xor(volatile ezInt32 &amp;dest, ezInt32 value)</div><div class="ttdoc">Performs an atomic bitwise XOR on dest using value.</div><div class="ttdef"><b>Definition:</b> AtomicUtils_posix.h:95</div></div>
<div class="ttc" id="astructez_atomic_utils_htm_aec1d674775ca50135c4f4f8038bcf4c3"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#aec1d674775ca50135c4f4f8038bcf4c3">ezAtomicUtils::Read</a></div><div class="ttdeci">static ezInt32 Read(volatile const ezInt32 &amp;src)</div><div class="ttdoc">Returns src as an atomic operation and returns its value.</div><div class="ttdef"><b>Definition:</b> AtomicUtils_posix.h:10</div></div>
<div class="ttc" id="aclassez_atomic_integer_htm_a7bb616a487e6cda5505a72c51e422cd2"><div class="ttname"><a href="../../da/d01/classez_atomic_integer.htm#a7bb616a487e6cda5505a72c51e422cd2">ezAtomicInteger::PostDecrement</a></div><div class="ttdeci">T PostDecrement()</div><div class="ttdoc">Decrements the internal value and returns the value immediately before the decrement.</div><div class="ttdef"><b>Definition:</b> AtomicInteger_inl.h:53</div></div>
<div class="ttc" id="astructez_atomic_utils_htm_ac1f56bbc48c7e97a0deb3211ac894c94"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#ac1f56bbc48c7e97a0deb3211ac894c94">ezAtomicUtils::Max</a></div><div class="ttdeci">static void Max(volatile ezInt32 &amp;dest, ezInt32 value)</div><div class="ttdoc">Performs an atomic max operation on dest using value.</div><div class="ttdef"><b>Definition:</b> AtomicUtils_posix.h:133</div></div>
<div class="ttc" id="aclassez_atomic_bool_htm_af1ad80eccede19a0bcef7c87a992c70e"><div class="ttname"><a href="../../d0/daf/classez_atomic_bool.htm#af1ad80eccede19a0bcef7c87a992c70e">ezAtomicBool::operator=</a></div><div class="ttdeci">void operator=(bool value)</div><div class="ttdoc">Sets the bool to the given value.</div><div class="ttdef"><b>Definition:</b> AtomicInteger_inl.h:144</div></div>
<div class="ttc" id="astructez_atomic_utils_htm_a03e4af1722c6b4f4efad609943fa03cb"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#a03e4af1722c6b4f4efad609943fa03cb">ezAtomicUtils::Set</a></div><div class="ttdeci">static ezInt32 Set(volatile ezInt32 &amp;dest, ezInt32 value)</div><div class="ttdoc">Sets dest to value as an atomic operation and returns the original value of dest.</div><div class="ttdef"><b>Definition:</b> AtomicUtils_posix.h:160</div></div>
<div class="ttc" id="astructez_atomic_utils_htm_ab7a6f96e60750e484888fbf6a887b7b2"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#ab7a6f96e60750e484888fbf6a887b7b2">ezAtomicUtils::TestAndSet</a></div><div class="ttdeci">static bool TestAndSet(volatile ezInt32 &amp;dest, ezInt32 expected, ezInt32 value)</div><div class="ttdoc">If dest is equal to expected, this function sets dest to value and returns true. Otherwise dest will ...</div><div class="ttdef"><b>Definition:</b> AtomicUtils_posix.h:171</div></div>
<div class="ttc" id="astructez_atomic_utils_htm_a6ca2ff1cc8ce4f3c9696ae95b4b12307"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#a6ca2ff1cc8ce4f3c9696ae95b4b12307">ezAtomicUtils::PostIncrement</a></div><div class="ttdeci">static ezInt32 PostIncrement(volatile ezInt32 &amp;dest)</div><div class="ttdoc">Increments dest as an atomic operation and returns the old value.</div><div class="ttdef"><b>Definition:</b> AtomicUtils_posix.h:41</div></div>
<div class="ttc" id="astructez_atomic_utils_htm_a1ca59d0420faaf5c89a499220f6efa82"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#a1ca59d0420faaf5c89a499220f6efa82">ezAtomicUtils::Add</a></div><div class="ttdeci">static void Add(volatile ezInt32 &amp;dest, ezInt32 value)</div><div class="ttdoc">Adds value to dest as an atomic operation.</div><div class="ttdef"><b>Definition:</b> AtomicUtils_posix.h:62</div></div>
<div class="ttc" id="aclassez_atomic_bool_htm_abe27a39153de10ca03064a47f2a65618"><div class="ttname"><a href="../../d0/daf/classez_atomic_bool.htm#abe27a39153de10ca03064a47f2a65618">ezAtomicBool::TestAndSet</a></div><div class="ttdeci">bool TestAndSet(bool expected, bool newValue)</div><div class="ttdoc">Sets the internal value to newValue if the internal value is equal to expected and returns true,...</div><div class="ttdef"><b>Definition:</b> AtomicInteger_inl.h:159</div></div>
<div class="ttc" id="aclassez_atomic_integer_htm_a62bab9f52c740f1abd61526236d52843"><div class="ttname"><a href="../../da/d01/classez_atomic_integer.htm#a62bab9f52c740f1abd61526236d52843">ezAtomicInteger::CompareAndSwap</a></div><div class="ttdeci">T CompareAndSwap(T expected, T x)</div><div class="ttdoc">If this is equal to expected, it is set to value. Otherwise it won't be modified. Always returns the ...</div><div class="ttdef"><b>Definition:</b> AtomicInteger_inl.h:113</div></div>
<div class="ttc" id="aclassez_atomic_integer_htm_a35e0a26b7b0b3975410d36df360f45c3"><div class="ttname"><a href="../../da/d01/classez_atomic_integer.htm#a35e0a26b7b0b3975410d36df360f45c3">ezAtomicInteger::Set</a></div><div class="ttdeci">T Set(T x)</div><div class="ttdoc">Sets the internal value to x and returns the original internal value.</div><div class="ttdef"><b>Definition:</b> AtomicInteger_inl.h:101</div></div>
<div class="ttc" id="astructez_atomic_utils_htm_af827472d139cd0301b90762c5936d741"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#af827472d139cd0301b90762c5936d741">ezAtomicUtils::And</a></div><div class="ttdeci">static void And(volatile ezInt32 &amp;dest, ezInt32 value)</div><div class="ttdoc">Performs an atomic bitwise AND on dest using value.</div><div class="ttdef"><b>Definition:</b> AtomicUtils_posix.h:73</div></div>
<div class="ttc" id="aclassez_atomic_integer_htm_a70ef3cc6d6a3879d990d54be95b62c48"><div class="ttname"><a href="../../da/d01/classez_atomic_integer.htm#a70ef3cc6d6a3879d990d54be95b62c48">ezAtomicInteger::Increment</a></div><div class="ttdeci">T Increment()</div><div class="ttdoc">Increments the internal value and returns the incremented value.</div><div class="ttdef"><b>Definition:</b> AtomicInteger_inl.h:35</div></div>
<div class="ttc" id="aclassez_atomic_integer_htm_a8564e051c86ff5ea7f4002d668b7f93b"><div class="ttname"><a href="../../da/d01/classez_atomic_integer.htm#a8564e051c86ff5ea7f4002d668b7f93b">ezAtomicInteger::Decrement</a></div><div class="ttdeci">T Decrement()</div><div class="ttdoc">Decrements the internal value and returns the decremented value.</div><div class="ttdef"><b>Definition:</b> AtomicInteger_inl.h:41</div></div>
<div class="ttc" id="astructez_atomic_utils_htm_ad2bdfadaffc2c70937205fb89cc3bbd3"><div class="ttname"><a href="../../d6/d25/structez_atomic_utils.htm#ad2bdfadaffc2c70937205fb89cc3bbd3">ezAtomicUtils::PostDecrement</a></div><div class="ttdeci">static ezInt32 PostDecrement(volatile ezInt32 &amp;dest)</div><div class="ttdoc">Decrements dest as an atomic operation and returns the old value.</div><div class="ttdef"><b>Definition:</b> AtomicUtils_posix.h:52</div></div>
<div class="ttc" id="aclassez_atomic_bool_htm_a16dcd9155b0692641b9d860e50f8e596"><div class="ttname"><a href="../../d0/daf/classez_atomic_bool.htm#a16dcd9155b0692641b9d860e50f8e596">ezAtomicBool::Set</a></div><div class="ttdeci">bool Set(bool value)</div><div class="ttdoc">Sets the bool to the given value and returns its previous value.</div><div class="ttdef"><b>Definition:</b> AtomicInteger_inl.h:139</div></div>
<div class="ttc" id="aclassez_atomic_integer_htm_a8cea453bc4f47a5c4172ff8b1076f239"><div class="ttname"><a href="../../da/d01/classez_atomic_integer.htm#a8cea453bc4f47a5c4172ff8b1076f239">ezAtomicInteger::operator=</a></div><div class="ttdeci">ezAtomicInteger &amp; operator=(T value)</div><div class="ttdoc">Assigns a new integer value to this object.</div><div class="ttdef"><b>Definition:</b> AtomicInteger_inl.h:21</div></div>
<div class="ttc" id="aclassez_atomic_integer_htm"><div class="ttname"><a href="../../da/d01/classez_atomic_integer.htm">ezAtomicInteger</a></div><div class="ttdoc">Integer class that can be manipulated in an atomic (i.e. thread-safe) fashion.</div><div class="ttdef"><b>Definition:</b> AtomicInteger.h:9</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_05460f4aa032e23246d68b56847b5fed.htm">Threading</a></li><li class="navelem"><a class="el" href="../../dir_87563d8e459b6b2efd39d0a742560444.htm">Implementation</a></li><li class="navelem"><b>AtomicInteger_inl.h</b></li>
    <li class="footer">Generated on Tue Jun 8 2021 21:43:12 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
