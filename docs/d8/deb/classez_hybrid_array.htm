<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: ezHybridArray&lt; T, Size, AllocatorWrapper &gt; Class Template Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">ezEngine<span id="projectnumber">&#160;Release 25.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('d8/deb/classez_hybrid_array.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="../../de/dd0/classez_hybrid_array-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">ezHybridArray&lt; T, Size, AllocatorWrapper &gt; Class Template Reference</div></div>
</div><!--header-->
<div class="contents">

<p>A hybrid array uses in-place storage to handle the first few elements without any allocation. It dynamically resizes when more elements are needed.  
 <a href="../../d8/deb/classez_hybrid_array.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d9/dfb/_hybrid_array_8h_source.htm">HybridArray.h</a>&gt;</code></p>
<div class="dynheader">
Inheritance diagram for ezHybridArray&lt; T, Size, AllocatorWrapper &gt;:</div>
<div class="dyncontent">
<div class="center"><img src="../../d3/deb/classez_hybrid_array__inherit__graph.png" border="0" usemap="#aez_hybrid_array_3_01_t_00_01_size_00_01_allocator_wrapper_01_4_inherit__map" alt="Inheritance graph"/></div>
<map name="aez_hybrid_array_3_01_t_00_01_size_00_01_allocator_wrapper_01_4_inherit__map" id="aez_hybrid_array_3_01_t_00_01_size_00_01_allocator_wrapper_01_4_inherit__map">
<area shape="rect" title="A hybrid array uses in&#45;place storage to handle the first few elements without any allocation...." alt="" coords="21,255,198,295"/>
<area shape="rect" href="../../d2/d4f/classez_dynamic_array.htm" title=" " alt="" coords="31,167,188,207"/>
<area shape="poly" title=" " alt="" coords="112,221,112,254,107,254,107,221"/>
<area shape="rect" href="../../d5/d3f/classez_dynamic_array_base.htm" title="Implementation of a dynamically growing array." alt="" coords="9,93,209,119"/>
<area shape="poly" title=" " alt="" coords="112,132,112,167,107,167,107,132"/>
<area shape="rect" href="../../dc/d59/classez_array_base.htm" title=" " alt="" coords="5,5,213,45"/>
<area shape="poly" title=" " alt="" coords="112,59,112,93,107,93,107,59"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="nested-classes" name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d7/d47/structez_hybrid_array_1_1alignas.htm">alignas</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">The fixed size array.  <a href="../../d7/d47/structez_hybrid_array_1_1alignas.htm#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aa39b2b7a0b97c9506d683182107b7786" id="r_aa39b2b7a0b97c9506d683182107b7786"><td class="memItemLeft" align="right" valign="top"><a id="aa39b2b7a0b97c9506d683182107b7786" name="aa39b2b7a0b97c9506d683182107b7786"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>ezHybridArray</b> ()</td></tr>
<tr class="memdesc:aa39b2b7a0b97c9506d683182107b7786"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an empty array. Does not allocate any data yet. <br /></td></tr>
<tr class="separator:aa39b2b7a0b97c9506d683182107b7786"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ff23bcf7fb185e85b449345afa31106" id="r_a9ff23bcf7fb185e85b449345afa31106"><td class="memItemLeft" align="right" valign="top"><a id="a9ff23bcf7fb185e85b449345afa31106" name="a9ff23bcf7fb185e85b449345afa31106"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>ezHybridArray</b> (<a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:a9ff23bcf7fb185e85b449345afa31106"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an empty array. Does not allocate any data yet. <br /></td></tr>
<tr class="separator:a9ff23bcf7fb185e85b449345afa31106"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a536b62fc1ab5d3ff53d8be5a8ecacd93" id="r_a536b62fc1ab5d3ff53d8be5a8ecacd93"><td class="memItemLeft" align="right" valign="top"><a id="a536b62fc1ab5d3ff53d8be5a8ecacd93" name="a536b62fc1ab5d3ff53d8be5a8ecacd93"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>ezHybridArray</b> (const <a class="el" href="../../d8/deb/classez_hybrid_array.htm">ezHybridArray</a>&lt; T, Size, AllocatorWrapper &gt; &amp;other)</td></tr>
<tr class="memdesc:a536b62fc1ab5d3ff53d8be5a8ecacd93"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a copy of the given array. <br /></td></tr>
<tr class="separator:a536b62fc1ab5d3ff53d8be5a8ecacd93"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac352abdadabb25db966cc0adbff6bfba" id="r_ac352abdadabb25db966cc0adbff6bfba"><td class="memItemLeft" align="right" valign="top"><a id="ac352abdadabb25db966cc0adbff6bfba" name="ac352abdadabb25db966cc0adbff6bfba"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>ezHybridArray</b> (const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; const T &gt; &amp;other)</td></tr>
<tr class="memdesc:ac352abdadabb25db966cc0adbff6bfba"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a copy of the given array. <br /></td></tr>
<tr class="separator:ac352abdadabb25db966cc0adbff6bfba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad26cd8f03c739d604733d88d762905b0" id="r_ad26cd8f03c739d604733d88d762905b0"><td class="memItemLeft" align="right" valign="top"><a id="ad26cd8f03c739d604733d88d762905b0" name="ad26cd8f03c739d604733d88d762905b0"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>ezHybridArray</b> (<a class="el" href="../../d8/deb/classez_hybrid_array.htm">ezHybridArray</a>&lt; T, Size, AllocatorWrapper &gt; &amp;&amp;other) noexcept</td></tr>
<tr class="memdesc:ad26cd8f03c739d604733d88d762905b0"><td class="mdescLeft">&#160;</td><td class="mdescRight">Moves the given array. <br /></td></tr>
<tr class="separator:ad26cd8f03c739d604733d88d762905b0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abec200a291c069d39822a771dedb430a" id="r_abec200a291c069d39822a771dedb430a"><td class="memItemLeft" align="right" valign="top"><a id="abec200a291c069d39822a771dedb430a" name="abec200a291c069d39822a771dedb430a"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="../../d8/deb/classez_hybrid_array.htm">ezHybridArray</a>&lt; T, Size, AllocatorWrapper &gt; &amp;rhs)</td></tr>
<tr class="memdesc:abec200a291c069d39822a771dedb430a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the data from some other contiguous array into this one. <br /></td></tr>
<tr class="separator:abec200a291c069d39822a771dedb430a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a10b4aa9d64c7b5c5a76c92d58a97772c" id="r_a10b4aa9d64c7b5c5a76c92d58a97772c"><td class="memItemLeft" align="right" valign="top"><a id="a10b4aa9d64c7b5c5a76c92d58a97772c" name="a10b4aa9d64c7b5c5a76c92d58a97772c"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; const T &gt; &amp;rhs)</td></tr>
<tr class="memdesc:a10b4aa9d64c7b5c5a76c92d58a97772c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the data from some other contiguous array into this one. <br /></td></tr>
<tr class="separator:a10b4aa9d64c7b5c5a76c92d58a97772c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0e6b97c59d66ea53654999720d639de5" id="r_a0e6b97c59d66ea53654999720d639de5"><td class="memItemLeft" align="right" valign="top"><a id="a0e6b97c59d66ea53654999720d639de5" name="a0e6b97c59d66ea53654999720d639de5"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (<a class="el" href="../../d8/deb/classez_hybrid_array.htm">ezHybridArray</a>&lt; T, Size, AllocatorWrapper &gt; &amp;&amp;rhs) noexcept</td></tr>
<tr class="memdesc:a0e6b97c59d66ea53654999720d639de5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Moves the data from some other contiguous array into this one. <br /></td></tr>
<tr class="separator:a0e6b97c59d66ea53654999720d639de5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classez_dynamic_array"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classez_dynamic_array')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../d2/d4f/classez_dynamic_array.htm">ezDynamicArray&lt; T, AllocatorWrapper &gt;</a></td></tr>
<tr class="memitem:a9c788b95e3782f09f124a646f37e8f9b inherit pub_methods_classez_dynamic_array" id="r_a9c788b95e3782f09f124a646f37e8f9b"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>EZ_DECLARE_MEM_RELOCATABLE_TYPE</b> ()</td></tr>
<tr class="separator:a9c788b95e3782f09f124a646f37e8f9b inherit pub_methods_classez_dynamic_array"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5ec6cc88d73e63219a14926af6889d69 inherit pub_methods_classez_dynamic_array" id="r_a5ec6cc88d73e63219a14926af6889d69"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>ezDynamicArray</b> (<a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="separator:a5ec6cc88d73e63219a14926af6889d69 inherit pub_methods_classez_dynamic_array"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0ae2e730c618534e3d65c01973db688e inherit pub_methods_classez_dynamic_array" id="r_a0ae2e730c618534e3d65c01973db688e"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>ezDynamicArray</b> (const <a class="el" href="../../d2/d4f/classez_dynamic_array.htm">ezDynamicArray</a>&lt; T, AllocatorWrapper &gt; &amp;other)</td></tr>
<tr class="separator:a0ae2e730c618534e3d65c01973db688e inherit pub_methods_classez_dynamic_array"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35ce7c7c46a6aaf2d129b47fb7886b5b inherit pub_methods_classez_dynamic_array" id="r_a35ce7c7c46a6aaf2d129b47fb7886b5b"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>ezDynamicArray</b> (const <a class="el" href="../../d5/d3f/classez_dynamic_array_base.htm">ezDynamicArrayBase</a>&lt; T &gt; &amp;other)</td></tr>
<tr class="separator:a35ce7c7c46a6aaf2d129b47fb7886b5b inherit pub_methods_classez_dynamic_array"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2915310dcbdbe72a03e227d5766cffc0 inherit pub_methods_classez_dynamic_array" id="r_a2915310dcbdbe72a03e227d5766cffc0"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>ezDynamicArray</b> (const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; const T &gt; &amp;other)</td></tr>
<tr class="separator:a2915310dcbdbe72a03e227d5766cffc0 inherit pub_methods_classez_dynamic_array"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4590c3593cc422559a825c0b5bb28140 inherit pub_methods_classez_dynamic_array" id="r_a4590c3593cc422559a825c0b5bb28140"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>ezDynamicArray</b> (<a class="el" href="../../d2/d4f/classez_dynamic_array.htm">ezDynamicArray</a>&lt; T, AllocatorWrapper &gt; &amp;&amp;other)</td></tr>
<tr class="separator:a4590c3593cc422559a825c0b5bb28140 inherit pub_methods_classez_dynamic_array"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ad11880685fa09cf29291b6199e0e6b inherit pub_methods_classez_dynamic_array" id="r_a1ad11880685fa09cf29291b6199e0e6b"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>ezDynamicArray</b> (<a class="el" href="../../d5/d3f/classez_dynamic_array_base.htm">ezDynamicArrayBase</a>&lt; T &gt; &amp;&amp;other)</td></tr>
<tr class="separator:a1ad11880685fa09cf29291b6199e0e6b inherit pub_methods_classez_dynamic_array"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76c0b5d6a55f287659032fc151251d67 inherit pub_methods_classez_dynamic_array" id="r_a76c0b5d6a55f287659032fc151251d67"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="../../d2/d4f/classez_dynamic_array.htm">ezDynamicArray</a>&lt; T, AllocatorWrapper &gt; &amp;rhs)</td></tr>
<tr class="separator:a76c0b5d6a55f287659032fc151251d67 inherit pub_methods_classez_dynamic_array"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac1c888bc17acfbbe6f390f62df6fc5ac inherit pub_methods_classez_dynamic_array" id="r_ac1c888bc17acfbbe6f390f62df6fc5ac"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="../../d5/d3f/classez_dynamic_array_base.htm">ezDynamicArrayBase</a>&lt; T &gt; &amp;rhs)</td></tr>
<tr class="separator:ac1c888bc17acfbbe6f390f62df6fc5ac inherit pub_methods_classez_dynamic_array"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a02c41bc738b713d9da93564f6ad59c50 inherit pub_methods_classez_dynamic_array" id="r_a02c41bc738b713d9da93564f6ad59c50"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; const T &gt; &amp;rhs)</td></tr>
<tr class="separator:a02c41bc738b713d9da93564f6ad59c50 inherit pub_methods_classez_dynamic_array"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4678af1c9b3724f9498fbefffdaf8061 inherit pub_methods_classez_dynamic_array" id="r_a4678af1c9b3724f9498fbefffdaf8061"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (<a class="el" href="../../d2/d4f/classez_dynamic_array.htm">ezDynamicArray</a>&lt; T, AllocatorWrapper &gt; &amp;&amp;rhs) noexcept</td></tr>
<tr class="separator:a4678af1c9b3724f9498fbefffdaf8061 inherit pub_methods_classez_dynamic_array"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aebba828e088b486b2dac878a84322da6 inherit pub_methods_classez_dynamic_array" id="r_aebba828e088b486b2dac878a84322da6"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (<a class="el" href="../../d5/d3f/classez_dynamic_array_base.htm">ezDynamicArrayBase</a>&lt; T &gt; &amp;&amp;rhs) noexcept</td></tr>
<tr class="separator:aebba828e088b486b2dac878a84322da6 inherit pub_methods_classez_dynamic_array"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classez_dynamic_array_base"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classez_dynamic_array_base')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../d5/d3f/classez_dynamic_array_base.htm">ezDynamicArrayBase&lt; T &gt;</a></td></tr>
<tr class="memitem:a50350d5df71a36771f23feabe9315296 inherit pub_methods_classez_dynamic_array_base" id="r_a50350d5df71a36771f23feabe9315296"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>Reserve</b> (ezUInt32 uiCapacity)</td></tr>
<tr class="memdesc:a50350d5df71a36771f23feabe9315296 inherit pub_methods_classez_dynamic_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Expands the array so it can at least store the given capacity. <br /></td></tr>
<tr class="separator:a50350d5df71a36771f23feabe9315296 inherit pub_methods_classez_dynamic_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab2d5a74ac2a3aa44d291202fee726e12 inherit pub_methods_classez_dynamic_array_base" id="r_ab2d5a74ac2a3aa44d291202fee726e12"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>Compact</b> ()</td></tr>
<tr class="memdesc:ab2d5a74ac2a3aa44d291202fee726e12 inherit pub_methods_classez_dynamic_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Tries to compact the array to avoid wasting memory. The resulting capacity is at least 'GetCount' (no elements get removed). Will deallocate all data, if the array is empty. <br /></td></tr>
<tr class="separator:ab2d5a74ac2a3aa44d291202fee726e12 inherit pub_methods_classez_dynamic_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a93e9fd534f3b4e2d0372f6cb0db69d9a inherit pub_methods_classez_dynamic_array_base" id="r_a93e9fd534f3b4e2d0372f6cb0db69d9a"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>GetAllocator</b> () const</td></tr>
<tr class="memdesc:a93e9fd534f3b4e2d0372f6cb0db69d9a inherit pub_methods_classez_dynamic_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the allocator that is used by this instance. <br /></td></tr>
<tr class="separator:a93e9fd534f3b4e2d0372f6cb0db69d9a inherit pub_methods_classez_dynamic_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acca6e380b9d2650e4488d2c1753cbc0f inherit pub_methods_classez_dynamic_array_base" id="r_acca6e380b9d2650e4488d2c1753cbc0f"><td class="memItemLeft" align="right" valign="top">
ezUInt64&#160;</td><td class="memItemRight" valign="bottom"><b>GetHeapMemoryUsage</b> () const</td></tr>
<tr class="memdesc:acca6e380b9d2650e4488d2c1753cbc0f inherit pub_methods_classez_dynamic_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the amount of bytes that are currently allocated on the heap. <br /></td></tr>
<tr class="separator:acca6e380b9d2650e4488d2c1753cbc0f inherit pub_methods_classez_dynamic_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a047154b88809eb936801e6cb0ff3b2a0 inherit pub_methods_classez_dynamic_array_base" id="r_a047154b88809eb936801e6cb0ff3b2a0"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>Swap</b> (<a class="el" href="../../d5/d3f/classez_dynamic_array_base.htm">ezDynamicArrayBase</a>&lt; T &gt; &amp;other)</td></tr>
<tr class="memdesc:a047154b88809eb936801e6cb0ff3b2a0 inherit pub_methods_classez_dynamic_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">swaps the contents of this array with another one <br /></td></tr>
<tr class="separator:a047154b88809eb936801e6cb0ff3b2a0 inherit pub_methods_classez_dynamic_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classez_array_base"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classez_array_base')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../dc/d59/classez_array_base.htm">ezArrayBase&lt; T, ezDynamicArrayBase&lt; T &gt; &gt;</a></td></tr>
<tr class="memitem:a0f03847a20991108666c982066d651bc inherit pub_methods_classez_array_base" id="r_a0f03847a20991108666c982066d651bc"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>ezArrayBase</b> ()</td></tr>
<tr class="memdesc:a0f03847a20991108666c982066d651bc inherit pub_methods_classez_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor. <br /></td></tr>
<tr class="separator:a0f03847a20991108666c982066d651bc inherit pub_methods_classez_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8001e2991c2675e975efca088795fa6a inherit pub_methods_classez_array_base" id="r_a8001e2991c2675e975efca088795fa6a"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>~ezArrayBase</b> ()</td></tr>
<tr class="memdesc:a8001e2991c2675e975efca088795fa6a inherit pub_methods_classez_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor. <br /></td></tr>
<tr class="separator:a8001e2991c2675e975efca088795fa6a inherit pub_methods_classez_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6da9ac91524c489b32ed8e390c52b402 inherit pub_methods_classez_array_base" id="r_a6da9ac91524c489b32ed8e390c52b402"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; const T &gt; &amp;rhs)</td></tr>
<tr class="memdesc:a6da9ac91524c489b32ed8e390c52b402 inherit pub_methods_classez_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the data from some other contiguous array into this one. <br /></td></tr>
<tr class="separator:a6da9ac91524c489b32ed8e390c52b402 inherit pub_methods_classez_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f3159683169130e19c955855dd0d854 inherit pub_methods_classez_array_base" id="r_a6f3159683169130e19c955855dd0d854"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>operator ezArrayPtr&lt; const T &gt;</b> () const</td></tr>
<tr class="memdesc:a6f3159683169130e19c955855dd0d854 inherit pub_methods_classez_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Conversion to const <a class="el" href="../../dc/dae/classez_array_ptr.htm" title="This class encapsulates an array and it&#39;s size. It is recommended to use this class instead of plain ...">ezArrayPtr</a>. <br /></td></tr>
<tr class="separator:a6f3159683169130e19c955855dd0d854 inherit pub_methods_classez_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab9b31378a3f8bc9df6ad9fe4187bcef1 inherit pub_methods_classez_array_base" id="r_ab9b31378a3f8bc9df6ad9fe4187bcef1"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>operator ezArrayPtr&lt; T &gt;</b> ()</td></tr>
<tr class="memdesc:ab9b31378a3f8bc9df6ad9fe4187bcef1 inherit pub_methods_classez_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Conversion to <a class="el" href="../../dc/dae/classez_array_ptr.htm" title="This class encapsulates an array and it&#39;s size. It is recommended to use this class instead of plain ...">ezArrayPtr</a>. <br /></td></tr>
<tr class="separator:ab9b31378a3f8bc9df6ad9fe4187bcef1 inherit pub_methods_classez_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abad0e3ab22424c246c7d9125d2e57d31 inherit pub_methods_classez_array_base" id="r_abad0e3ab22424c246c7d9125d2e57d31"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator==</b> (const <a class="el" href="../../dc/d59/classez_array_base.htm">ezArrayBase</a>&lt; T, <a class="el" href="../../d5/d3f/classez_dynamic_array_base.htm">ezDynamicArrayBase</a>&lt; T &gt; &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:abad0e3ab22424c246c7d9125d2e57d31 inherit pub_methods_classez_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares this array to another contiguous array type. <br /></td></tr>
<tr class="separator:abad0e3ab22424c246c7d9125d2e57d31 inherit pub_methods_classez_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae49b3599b528ae875d0decf1fe0ab813 inherit pub_methods_classez_array_base" id="r_ae49b3599b528ae875d0decf1fe0ab813"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>EZ_ADD_DEFAULT_OPERATOR_NOTEQUAL</b> (const <a class="el" href="../../dc/d59/classez_array_base.htm">ezArrayBase</a>&lt; T, <a class="el" href="../../d5/d3f/classez_dynamic_array_base.htm">ezDynamicArrayBase</a>&lt; T &gt; &gt; &amp;)</td></tr>
<tr class="separator:ae49b3599b528ae875d0decf1fe0ab813 inherit pub_methods_classez_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab56eb09097a99c105cb05eb8a6fb59f4 inherit pub_methods_classez_array_base" id="r_ab56eb09097a99c105cb05eb8a6fb59f4"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&lt;</b> (const <a class="el" href="../../dc/d59/classez_array_base.htm">ezArrayBase</a>&lt; T, <a class="el" href="../../d5/d3f/classez_dynamic_array_base.htm">ezDynamicArrayBase</a>&lt; T &gt; &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:ab56eb09097a99c105cb05eb8a6fb59f4 inherit pub_methods_classez_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares this array to another contiguous array type. <br /></td></tr>
<tr class="separator:ab56eb09097a99c105cb05eb8a6fb59f4 inherit pub_methods_classez_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa642cb0d0cdf68484c854098d4493129 inherit pub_methods_classez_array_base" id="r_aa642cb0d0cdf68484c854098d4493129"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator&lt;</b> (const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; const T &gt; &amp;rhs) const</td></tr>
<tr class="memdesc:aa642cb0d0cdf68484c854098d4493129 inherit pub_methods_classez_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Compares this array to another contiguous array type. <br /></td></tr>
<tr class="separator:aa642cb0d0cdf68484c854098d4493129 inherit pub_methods_classez_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abc510e19e3e30cab9c5c7310ef5ffd68 inherit pub_methods_classez_array_base" id="r_abc510e19e3e30cab9c5c7310ef5ffd68"><td class="memItemLeft" align="right" valign="top">
const T &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator[]</b> (ezUInt32 uiIndex) const</td></tr>
<tr class="memdesc:abc510e19e3e30cab9c5c7310ef5ffd68 inherit pub_methods_classez_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the element at the given index. Does bounds checks in debug builds. <br /></td></tr>
<tr class="separator:abc510e19e3e30cab9c5c7310ef5ffd68 inherit pub_methods_classez_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5203f6eabcda79429422f4d1e14b7920 inherit pub_methods_classez_array_base" id="r_a5203f6eabcda79429422f4d1e14b7920"><td class="memItemLeft" align="right" valign="top">
T &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator[]</b> (ezUInt32 uiIndex)</td></tr>
<tr class="memdesc:a5203f6eabcda79429422f4d1e14b7920 inherit pub_methods_classez_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the element at the given index. Does bounds checks in debug builds. <br /></td></tr>
<tr class="separator:a5203f6eabcda79429422f4d1e14b7920 inherit pub_methods_classez_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb1665da46f44fab7a676561cc1d611c inherit pub_methods_classez_array_base" id="r_acb1665da46f44fab7a676561cc1d611c"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetCount</b> (ezUInt32 uiCount)</td></tr>
<tr class="memdesc:acb1665da46f44fab7a676561cc1d611c inherit pub_methods_classez_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resizes the array to have exactly uiCount elements. Default constructs extra elements if the array is grown. <br /></td></tr>
<tr class="separator:acb1665da46f44fab7a676561cc1d611c inherit pub_methods_classez_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acc383d296b37437415626a4209380659 inherit pub_methods_classez_array_base" id="r_acc383d296b37437415626a4209380659"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetCount</b> (ezUInt32 uiCount, const T &amp;fillValue)</td></tr>
<tr class="memdesc:acc383d296b37437415626a4209380659 inherit pub_methods_classez_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resizes the array to have exactly uiCount elements. Constructs all new elements by copying the FillValue. <br /></td></tr>
<tr class="separator:acc383d296b37437415626a4209380659 inherit pub_methods_classez_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa42fdcea580029c35b32658bd6d9fd50 inherit pub_methods_classez_array_base" id="r_aa42fdcea580029c35b32658bd6d9fd50"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetCountUninitialized</b> (ezUInt32 uiCount)</td></tr>
<tr class="memdesc:aa42fdcea580029c35b32658bd6d9fd50 inherit pub_methods_classez_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Resizes the array to have exactly uiCount elements. Extra elements might be uninitialized. <br /></td></tr>
<tr class="separator:aa42fdcea580029c35b32658bd6d9fd50 inherit pub_methods_classez_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad74465b5a0c6474b1611bbb462f635ef inherit pub_methods_classez_array_base" id="r_ad74465b5a0c6474b1611bbb462f635ef"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>EnsureCount</b> (ezUInt32 uiCount)</td></tr>
<tr class="memdesc:ad74465b5a0c6474b1611bbb462f635ef inherit pub_methods_classez_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Ensures the container has at least <em>uiCount</em> elements. Ie. calls <a class="el" href="../../dc/d59/classez_array_base.htm#acb1665da46f44fab7a676561cc1d611c" title="Resizes the array to have exactly uiCount elements. Default constructs extra elements if the array is...">SetCount()</a> if the container has fewer elements, does nothing otherwise. <br /></td></tr>
<tr class="separator:ad74465b5a0c6474b1611bbb462f635ef inherit pub_methods_classez_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a51ba61fcbd2350ae8850754a41acbaa1 inherit pub_methods_classez_array_base" id="r_a51ba61fcbd2350ae8850754a41acbaa1"><td class="memItemLeft" align="right" valign="top">
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetCount</b> () const</td></tr>
<tr class="memdesc:a51ba61fcbd2350ae8850754a41acbaa1 inherit pub_methods_classez_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the number of active elements in the array. <br /></td></tr>
<tr class="separator:a51ba61fcbd2350ae8850754a41acbaa1 inherit pub_methods_classez_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a35630a870ec53cf3b022653232a31c60 inherit pub_methods_classez_array_base" id="r_a35630a870ec53cf3b022653232a31c60"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsEmpty</b> () const</td></tr>
<tr class="memdesc:a35630a870ec53cf3b022653232a31c60 inherit pub_methods_classez_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true, if the array does not contain any elements. <br /></td></tr>
<tr class="separator:a35630a870ec53cf3b022653232a31c60 inherit pub_methods_classez_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74099c2d7681df345aedf8cfe24f0bc4 inherit pub_methods_classez_array_base" id="r_a74099c2d7681df345aedf8cfe24f0bc4"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>Clear</b> ()</td></tr>
<tr class="memdesc:a74099c2d7681df345aedf8cfe24f0bc4 inherit pub_methods_classez_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears the array. <br /></td></tr>
<tr class="separator:a74099c2d7681df345aedf8cfe24f0bc4 inherit pub_methods_classez_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a78392f27dfa795763aebdb43e4a75289 inherit pub_methods_classez_array_base" id="r_a78392f27dfa795763aebdb43e4a75289"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>Contains</b> (const T &amp;value) const</td></tr>
<tr class="memdesc:a78392f27dfa795763aebdb43e4a75289 inherit pub_methods_classez_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Checks whether the given value can be found in the array. O(n) complexity. <br /></td></tr>
<tr class="separator:a78392f27dfa795763aebdb43e4a75289 inherit pub_methods_classez_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afabace0a2eabdf350c81203eed1c7984 inherit pub_methods_classez_array_base" id="r_afabace0a2eabdf350c81203eed1c7984"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>InsertAt</b> (ezUInt32 uiIndex, const T &amp;value)</td></tr>
<tr class="memdesc:afabace0a2eabdf350c81203eed1c7984 inherit pub_methods_classez_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inserts value at index by shifting all following elements. <br /></td></tr>
<tr class="separator:afabace0a2eabdf350c81203eed1c7984 inherit pub_methods_classez_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e895667f6052199d90a7d703c69a91e inherit pub_methods_classez_array_base" id="r_a2e895667f6052199d90a7d703c69a91e"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>InsertAt</b> (ezUInt32 uiIndex, T &amp;&amp;value)</td></tr>
<tr class="memdesc:a2e895667f6052199d90a7d703c69a91e inherit pub_methods_classez_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inserts value at index by shifting all following elements. <br /></td></tr>
<tr class="separator:a2e895667f6052199d90a7d703c69a91e inherit pub_methods_classez_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a581b2d3a780af145c7f6333655807711 inherit pub_methods_classez_array_base" id="r_a581b2d3a780af145c7f6333655807711"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>InsertRangeAt</b> (ezUInt32 uiIndex, const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; const T &gt; &amp;range)</td></tr>
<tr class="memdesc:a581b2d3a780af145c7f6333655807711 inherit pub_methods_classez_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inserts all elements in the range starting at the given index, shifting the elements after the index. <br /></td></tr>
<tr class="separator:a581b2d3a780af145c7f6333655807711 inherit pub_methods_classez_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af19f26ca6dc39c04caad024913a2f2ec inherit pub_methods_classez_array_base" id="r_af19f26ca6dc39c04caad024913a2f2ec"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>RemoveAndCopy</b> (const T &amp;value)</td></tr>
<tr class="memdesc:af19f26ca6dc39c04caad024913a2f2ec inherit pub_methods_classez_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes the first occurrence of value and fills the gap by shifting all following elements. <br /></td></tr>
<tr class="separator:af19f26ca6dc39c04caad024913a2f2ec inherit pub_methods_classez_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aacea05b6f0ec519a663156dd0cc82309 inherit pub_methods_classez_array_base" id="r_aacea05b6f0ec519a663156dd0cc82309"><td class="memItemLeft" align="right" valign="top">
bool&#160;</td><td class="memItemRight" valign="bottom"><b>RemoveAndSwap</b> (const T &amp;value)</td></tr>
<tr class="memdesc:aacea05b6f0ec519a663156dd0cc82309 inherit pub_methods_classez_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes the first occurrence of value and fills the gap by swapping in the last element. <br /></td></tr>
<tr class="separator:aacea05b6f0ec519a663156dd0cc82309 inherit pub_methods_classez_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a29dfedb3f609d9a698f9becb213b697c inherit pub_methods_classez_array_base" id="r_a29dfedb3f609d9a698f9becb213b697c"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>RemoveAtAndCopy</b> (ezUInt32 uiIndex, ezUInt32 uiNumElements=1)</td></tr>
<tr class="memdesc:a29dfedb3f609d9a698f9becb213b697c inherit pub_methods_classez_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes the element at index and fills the gap by shifting all following elements. <br /></td></tr>
<tr class="separator:a29dfedb3f609d9a698f9becb213b697c inherit pub_methods_classez_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae29e85a3ce212cb78d31d032b4225f28 inherit pub_methods_classez_array_base" id="r_ae29e85a3ce212cb78d31d032b4225f28"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>RemoveAtAndSwap</b> (ezUInt32 uiIndex, ezUInt32 uiNumElements=1)</td></tr>
<tr class="memdesc:ae29e85a3ce212cb78d31d032b4225f28 inherit pub_methods_classez_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes the element at index and fills the gap by swapping in the last element. <br /></td></tr>
<tr class="separator:ae29e85a3ce212cb78d31d032b4225f28 inherit pub_methods_classez_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad0b2297aad995f6b5b6c83318f1deec4 inherit pub_methods_classez_array_base" id="r_ad0b2297aad995f6b5b6c83318f1deec4"><td class="memItemLeft" align="right" valign="top">
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>IndexOf</b> (const T &amp;value, ezUInt32 uiStartIndex=0) const</td></tr>
<tr class="memdesc:ad0b2297aad995f6b5b6c83318f1deec4 inherit pub_methods_classez_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Searches for the first occurrence of the given value and returns its index or ezInvalidIndex if not found. <br /></td></tr>
<tr class="separator:ad0b2297aad995f6b5b6c83318f1deec4 inherit pub_methods_classez_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a394c5310d1f8bc5907014761f72a4884 inherit pub_methods_classez_array_base" id="r_a394c5310d1f8bc5907014761f72a4884"><td class="memItemLeft" align="right" valign="top">
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>LastIndexOf</b> (const T &amp;value, ezUInt32 uiStartIndex=ezInvalidIndex) const</td></tr>
<tr class="memdesc:a394c5310d1f8bc5907014761f72a4884 inherit pub_methods_classez_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Searches for the last occurrence of the given value and returns its index or ezInvalidIndex if not found. <br /></td></tr>
<tr class="separator:a394c5310d1f8bc5907014761f72a4884 inherit pub_methods_classez_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f0562f5239ac1e43a81764086de2e25 inherit pub_methods_classez_array_base" id="r_a0f0562f5239ac1e43a81764086de2e25"><td class="memItemLeft" align="right" valign="top">
T &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>ExpandAndGetRef</b> ()</td></tr>
<tr class="memdesc:a0f0562f5239ac1e43a81764086de2e25 inherit pub_methods_classez_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Grows the array by one element and returns a reference to the newly created element. <br /></td></tr>
<tr class="separator:a0f0562f5239ac1e43a81764086de2e25 inherit pub_methods_classez_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e4ed197f4dc1545fddef9e031fe0226 inherit pub_methods_classez_array_base" id="r_a5e4ed197f4dc1545fddef9e031fe0226"><td class="memItemLeft" align="right" valign="top">
T *&#160;</td><td class="memItemRight" valign="bottom"><b>ExpandBy</b> (ezUInt32 uiNumNewItems)</td></tr>
<tr class="memdesc:a5e4ed197f4dc1545fddef9e031fe0226 inherit pub_methods_classez_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Expands the array by N new items and returns a pointer to the first new one. <br /></td></tr>
<tr class="separator:a5e4ed197f4dc1545fddef9e031fe0226 inherit pub_methods_classez_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abc514bdf8b2de7b5b220ffdbd862e830 inherit pub_methods_classez_array_base" id="r_abc514bdf8b2de7b5b220ffdbd862e830"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>PushBack</b> (const T &amp;value)</td></tr>
<tr class="memdesc:abc514bdf8b2de7b5b220ffdbd862e830 inherit pub_methods_classez_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pushes value at the end of the array. <br /></td></tr>
<tr class="separator:abc514bdf8b2de7b5b220ffdbd862e830 inherit pub_methods_classez_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90fe79a4a545a67e31bf047bef3e5371 inherit pub_methods_classez_array_base" id="r_a90fe79a4a545a67e31bf047bef3e5371"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>PushBack</b> (T &amp;&amp;value)</td></tr>
<tr class="memdesc:a90fe79a4a545a67e31bf047bef3e5371 inherit pub_methods_classez_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pushes value at the end of the array. <br /></td></tr>
<tr class="separator:a90fe79a4a545a67e31bf047bef3e5371 inherit pub_methods_classez_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6db54827aba606bd753936dd0becbd54 inherit pub_methods_classez_array_base" id="r_a6db54827aba606bd753936dd0becbd54"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>PushBackUnchecked</b> (const T &amp;value)</td></tr>
<tr class="memdesc:a6db54827aba606bd753936dd0becbd54 inherit pub_methods_classez_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pushes value at the end of the array. Does NOT ensure capacity. <br /></td></tr>
<tr class="separator:a6db54827aba606bd753936dd0becbd54 inherit pub_methods_classez_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5bd43f6f7c9946b6b1a936b1381374bb inherit pub_methods_classez_array_base" id="r_a5bd43f6f7c9946b6b1a936b1381374bb"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>PushBackUnchecked</b> (T &amp;&amp;value)</td></tr>
<tr class="memdesc:a5bd43f6f7c9946b6b1a936b1381374bb inherit pub_methods_classez_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pushes value at the end of the array. Does NOT ensure capacity. <br /></td></tr>
<tr class="separator:a5bd43f6f7c9946b6b1a936b1381374bb inherit pub_methods_classez_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac6223c492c021ef85253fb486dfd6434 inherit pub_methods_classez_array_base" id="r_ac6223c492c021ef85253fb486dfd6434"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>PushBackRange</b> (const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; const T &gt; &amp;range)</td></tr>
<tr class="memdesc:ac6223c492c021ef85253fb486dfd6434 inherit pub_methods_classez_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Pushes all elements in range at the end of the array. Increases the capacity if necessary. <br /></td></tr>
<tr class="separator:ac6223c492c021ef85253fb486dfd6434 inherit pub_methods_classez_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa48856c14d2870761e22ac1e000c32fd inherit pub_methods_classez_array_base" id="r_aa48856c14d2870761e22ac1e000c32fd"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>PopBack</b> (ezUInt32 uiCountToRemove=1)</td></tr>
<tr class="memdesc:aa48856c14d2870761e22ac1e000c32fd inherit pub_methods_classez_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes count elements from the end of the array. <br /></td></tr>
<tr class="separator:aa48856c14d2870761e22ac1e000c32fd inherit pub_methods_classez_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae5b5afca8aa70c69f07360eecd7171bc inherit pub_methods_classez_array_base" id="r_ae5b5afca8aa70c69f07360eecd7171bc"><td class="memItemLeft" align="right" valign="top">
T &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>PeekBack</b> ()</td></tr>
<tr class="memdesc:ae5b5afca8aa70c69f07360eecd7171bc inherit pub_methods_classez_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the last element of the array. <br /></td></tr>
<tr class="separator:ae5b5afca8aa70c69f07360eecd7171bc inherit pub_methods_classez_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3eb031c276e814889dce6b7bd5e398ff inherit pub_methods_classez_array_base" id="r_a3eb031c276e814889dce6b7bd5e398ff"><td class="memItemLeft" align="right" valign="top">
const T &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>PeekBack</b> () const</td></tr>
<tr class="memdesc:a3eb031c276e814889dce6b7bd5e398ff inherit pub_methods_classez_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the last element of the array. <br /></td></tr>
<tr class="separator:a3eb031c276e814889dce6b7bd5e398ff inherit pub_methods_classez_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a318047b04f505092c25d6c115ec5f72c inherit pub_methods_classez_array_base" id="r_a318047b04f505092c25d6c115ec5f72c"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>Sort</b> (const Comparer &amp;comparer)</td></tr>
<tr class="memdesc:a318047b04f505092c25d6c115ec5f72c inherit pub_methods_classez_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sort with explicit comparer. <br /></td></tr>
<tr class="separator:a318047b04f505092c25d6c115ec5f72c inherit pub_methods_classez_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae111f173c0e5c067d7b5fae92e755c25 inherit pub_methods_classez_array_base" id="r_ae111f173c0e5c067d7b5fae92e755c25"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>Sort</b> ()</td></tr>
<tr class="memdesc:ae111f173c0e5c067d7b5fae92e755c25 inherit pub_methods_classez_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Sort with default comparer. <br /></td></tr>
<tr class="separator:ae111f173c0e5c067d7b5fae92e755c25 inherit pub_methods_classez_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a170f421d9abdce1695e55b84212c59b0 inherit pub_methods_classez_array_base" id="r_a170f421d9abdce1695e55b84212c59b0"><td class="memItemLeft" align="right" valign="top">
T *&#160;</td><td class="memItemRight" valign="bottom"><b>GetData</b> ()</td></tr>
<tr class="memdesc:a170f421d9abdce1695e55b84212c59b0 inherit pub_methods_classez_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a pointer to the array data, or nullptr if the array is empty. <br /></td></tr>
<tr class="separator:a170f421d9abdce1695e55b84212c59b0 inherit pub_methods_classez_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac2501c98f4cb3feeb4c0dbb688977274 inherit pub_methods_classez_array_base" id="r_ac2501c98f4cb3feeb4c0dbb688977274"><td class="memItemLeft" align="right" valign="top">
const T *&#160;</td><td class="memItemRight" valign="bottom"><b>GetData</b> () const</td></tr>
<tr class="memdesc:ac2501c98f4cb3feeb4c0dbb688977274 inherit pub_methods_classez_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a pointer to the array data, or nullptr if the array is empty. <br /></td></tr>
<tr class="separator:ac2501c98f4cb3feeb4c0dbb688977274 inherit pub_methods_classez_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad668df6ff81bdcac0bc118666d5817cf inherit pub_methods_classez_array_base" id="r_ad668df6ff81bdcac0bc118666d5817cf"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; T &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetArrayPtr</b> ()</td></tr>
<tr class="memdesc:ad668df6ff81bdcac0bc118666d5817cf inherit pub_methods_classez_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an array pointer to the array data, or an empty array pointer if the array is empty. <br /></td></tr>
<tr class="separator:ad668df6ff81bdcac0bc118666d5817cf inherit pub_methods_classez_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af264c6192b46155871e4c5e85c9c1114 inherit pub_methods_classez_array_base" id="r_af264c6192b46155871e4c5e85c9c1114"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; const T &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetArrayPtr</b> () const</td></tr>
<tr class="memdesc:af264c6192b46155871e4c5e85c9c1114 inherit pub_methods_classez_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an array pointer to the array data, or an empty array pointer if the array is empty. <br /></td></tr>
<tr class="separator:af264c6192b46155871e4c5e85c9c1114 inherit pub_methods_classez_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a05b276d26b66885700fc8f36dd8efc50 inherit pub_methods_classez_array_base" id="r_a05b276d26b66885700fc8f36dd8efc50"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; typename <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; T &gt;::ByteType &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetByteArrayPtr</b> ()</td></tr>
<tr class="memdesc:a05b276d26b66885700fc8f36dd8efc50 inherit pub_methods_classez_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a byte array pointer to the array data, or an empty array pointer if the array is empty. <br /></td></tr>
<tr class="separator:a05b276d26b66885700fc8f36dd8efc50 inherit pub_methods_classez_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a88dd290606aab5e0382d469241ab0c17 inherit pub_methods_classez_array_base" id="r_a88dd290606aab5e0382d469241ab0c17"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; typename <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; const T &gt;::ByteType &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetByteArrayPtr</b> () const</td></tr>
<tr class="memdesc:a88dd290606aab5e0382d469241ab0c17 inherit pub_methods_classez_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns a byte array pointer to the array data, or an empty array pointer if the array is empty. <br /></td></tr>
<tr class="separator:a88dd290606aab5e0382d469241ab0c17 inherit pub_methods_classez_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0dae037b4e2abdb7e7376776d2144851 inherit pub_methods_classez_array_base" id="r_a0dae037b4e2abdb7e7376776d2144851"><td class="memItemLeft" align="right" valign="top">
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>GetCapacity</b> () const</td></tr>
<tr class="memdesc:a0dae037b4e2abdb7e7376776d2144851 inherit pub_methods_classez_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the reserved number of elements that the array can hold without reallocating. <br /></td></tr>
<tr class="separator:a0dae037b4e2abdb7e7376776d2144851 inherit pub_methods_classez_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pro-methods" name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:ad891a47f9a669b8f280bf78a56f1dddb" id="r_ad891a47f9a669b8f280bf78a56f1dddb"><td class="memItemLeft" align="right" valign="top"><a id="ad891a47f9a669b8f280bf78a56f1dddb" name="ad891a47f9a669b8f280bf78a56f1dddb"></a>
EZ_ALWAYS_INLINE T *&#160;</td><td class="memItemRight" valign="bottom"><b>GetStaticArray</b> ()</td></tr>
<tr class="separator:ad891a47f9a669b8f280bf78a56f1dddb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba62d61b84d7d6cb09bfb354190d1385" id="r_aba62d61b84d7d6cb09bfb354190d1385"><td class="memItemLeft" align="right" valign="top"><a id="aba62d61b84d7d6cb09bfb354190d1385" name="aba62d61b84d7d6cb09bfb354190d1385"></a>
EZ_ALWAYS_INLINE const T *&#160;</td><td class="memItemRight" valign="bottom"><b>GetStaticArray</b> () const</td></tr>
<tr class="separator:aba62d61b84d7d6cb09bfb354190d1385"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classez_dynamic_array"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classez_dynamic_array')"><img src="../../closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="../../d2/d4f/classez_dynamic_array.htm">ezDynamicArray&lt; T, AllocatorWrapper &gt;</a></td></tr>
<tr class="memitem:a42218da8ba967a3a4ee77628ae83f5dd inherit pro_methods_classez_dynamic_array" id="r_a42218da8ba967a3a4ee77628ae83f5dd"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>ezDynamicArray</b> (T *pInplaceStorage, ezUInt32 uiCapacity, <a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="separator:a42218da8ba967a3a4ee77628ae83f5dd inherit pro_methods_classez_dynamic_array"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classez_dynamic_array_base"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classez_dynamic_array_base')"><img src="../../closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="../../d5/d3f/classez_dynamic_array_base.htm">ezDynamicArrayBase&lt; T &gt;</a></td></tr>
<tr class="memitem:ad9baf7a64e3e5632b2749bd71ee41e2a inherit pro_methods_classez_dynamic_array_base" id="r_ad9baf7a64e3e5632b2749bd71ee41e2a"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>ezDynamicArrayBase</b> (<a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:ad9baf7a64e3e5632b2749bd71ee41e2a inherit pro_methods_classez_dynamic_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates an empty array. Does not allocate any data yet. <br /></td></tr>
<tr class="separator:ad9baf7a64e3e5632b2749bd71ee41e2a inherit pro_methods_classez_dynamic_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a52ea2cce454f62ebe3e96d851888de4b inherit pro_methods_classez_dynamic_array_base" id="r_a52ea2cce454f62ebe3e96d851888de4b"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>ezDynamicArrayBase</b> (T *pInplaceStorage, ezUInt32 uiCapacity, <a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="separator:a52ea2cce454f62ebe3e96d851888de4b inherit pro_methods_classez_dynamic_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6d95d9afa35fd63528d5cd93393bb7b inherit pro_methods_classez_dynamic_array_base" id="r_ab6d95d9afa35fd63528d5cd93393bb7b"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>ezDynamicArrayBase</b> (const <a class="el" href="../../d5/d3f/classez_dynamic_array_base.htm">ezDynamicArrayBase</a>&lt; T &gt; &amp;other, <a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:ab6d95d9afa35fd63528d5cd93393bb7b inherit pro_methods_classez_dynamic_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a copy of the given array. <br /></td></tr>
<tr class="separator:ab6d95d9afa35fd63528d5cd93393bb7b inherit pro_methods_classez_dynamic_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adf0819e7df695efab2a81c038bf0391e inherit pro_methods_classez_dynamic_array_base" id="r_adf0819e7df695efab2a81c038bf0391e"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>ezDynamicArrayBase</b> (<a class="el" href="../../d5/d3f/classez_dynamic_array_base.htm">ezDynamicArrayBase</a>&lt; T &gt; &amp;&amp;other, <a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:adf0819e7df695efab2a81c038bf0391e inherit pro_methods_classez_dynamic_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Moves the given array into this one. <br /></td></tr>
<tr class="separator:adf0819e7df695efab2a81c038bf0391e inherit pro_methods_classez_dynamic_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8bfa961ae586ad357bfd6f21983d9f21 inherit pro_methods_classez_dynamic_array_base" id="r_a8bfa961ae586ad357bfd6f21983d9f21"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>ezDynamicArrayBase</b> (const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; const T &gt; &amp;other, <a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator)</td></tr>
<tr class="memdesc:a8bfa961ae586ad357bfd6f21983d9f21 inherit pro_methods_classez_dynamic_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a copy of the given array. <br /></td></tr>
<tr class="separator:a8bfa961ae586ad357bfd6f21983d9f21 inherit pro_methods_classez_dynamic_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc42986676f97cd533c805c047188c20 inherit pro_methods_classez_dynamic_array_base" id="r_adc42986676f97cd533c805c047188c20"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>~ezDynamicArrayBase</b> ()</td></tr>
<tr class="memdesc:adc42986676f97cd533c805c047188c20 inherit pro_methods_classez_dynamic_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Destructor. <br /></td></tr>
<tr class="separator:adc42986676f97cd533c805c047188c20 inherit pro_methods_classez_dynamic_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7a893aee52324381b28ed7efaa1f84e2 inherit pro_methods_classez_dynamic_array_base" id="r_a7a893aee52324381b28ed7efaa1f84e2"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (const <a class="el" href="../../d5/d3f/classez_dynamic_array_base.htm">ezDynamicArrayBase</a>&lt; T &gt; &amp;rhs)</td></tr>
<tr class="memdesc:a7a893aee52324381b28ed7efaa1f84e2 inherit pro_methods_classez_dynamic_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copies the data from some other contiguous array into this one. <br /></td></tr>
<tr class="separator:a7a893aee52324381b28ed7efaa1f84e2 inherit pro_methods_classez_dynamic_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6b69cc10c2b7352e0802d0f227efb4f9 inherit pro_methods_classez_dynamic_array_base" id="r_a6b69cc10c2b7352e0802d0f227efb4f9"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>operator=</b> (<a class="el" href="../../d5/d3f/classez_dynamic_array_base.htm">ezDynamicArrayBase</a>&lt; T &gt; &amp;&amp;rhs) noexcept</td></tr>
<tr class="memdesc:a6b69cc10c2b7352e0802d0f227efb4f9 inherit pro_methods_classez_dynamic_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Moves the data from some other contiguous array into this one. <br /></td></tr>
<tr class="separator:a6b69cc10c2b7352e0802d0f227efb4f9 inherit pro_methods_classez_dynamic_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a80949904a446824e22566d7402f7f2b5 inherit pro_methods_classez_dynamic_array_base" id="r_a80949904a446824e22566d7402f7f2b5"><td class="memItemLeft" align="right" valign="top">
T *&#160;</td><td class="memItemRight" valign="bottom"><b>GetElementsPtr</b> ()</td></tr>
<tr class="separator:a80949904a446824e22566d7402f7f2b5 inherit pro_methods_classez_dynamic_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2553ae12d156fba95a9707a3955d28fc inherit pro_methods_classez_dynamic_array_base" id="r_a2553ae12d156fba95a9707a3955d28fc"><td class="memItemLeft" align="right" valign="top">
const T *&#160;</td><td class="memItemRight" valign="bottom"><b>GetElementsPtr</b> () const</td></tr>
<tr class="separator:a2553ae12d156fba95a9707a3955d28fc inherit pro_methods_classez_dynamic_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_methods_classez_array_base"><td colspan="2" onclick="javascript:toggleInherit('pro_methods_classez_array_base')"><img src="../../closed.png" alt="-"/>&#160;Protected Member Functions inherited from <a class="el" href="../../dc/d59/classez_array_base.htm">ezArrayBase&lt; T, ezDynamicArrayBase&lt; T &gt; &gt;</a></td></tr>
<tr class="memitem:a13b030bd72634b97cd7a42bb1a6c2a09 inherit pro_methods_classez_array_base" id="r_a13b030bd72634b97cd7a42bb1a6c2a09"><td class="memItemLeft" align="right" valign="top">
void&#160;</td><td class="memItemRight" valign="bottom"><b>DoSwap</b> (<a class="el" href="../../dc/d59/classez_array_base.htm">ezArrayBase</a>&lt; T, <a class="el" href="../../d5/d3f/classez_dynamic_array_base.htm">ezDynamicArrayBase</a>&lt; T &gt; &gt; &amp;other)</td></tr>
<tr class="separator:a13b030bd72634b97cd7a42bb1a6c2a09 inherit pro_methods_classez_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="inherited" name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pub_types_classez_array_base"><td colspan="2" onclick="javascript:toggleInherit('pub_types_classez_array_base')"><img src="../../closed.png" alt="-"/>&#160;Public Types inherited from <a class="el" href="../../dc/d59/classez_array_base.htm">ezArrayBase&lt; T, ezDynamicArrayBase&lt; T &gt; &gt;</a></td></tr>
<tr class="memitem:a4b8102fffbe1baa10d6890a137ea3f3a inherit pub_types_classez_array_base" id="r_a4b8102fffbe1baa10d6890a137ea3f3a"><td class="memItemLeft" align="right" valign="top">
using&#160;</td><td class="memItemRight" valign="bottom"><b>const_iterator</b> = const T *</td></tr>
<tr class="separator:a4b8102fffbe1baa10d6890a137ea3f3a inherit pub_types_classez_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ef6d9a5139acdaac6670775720ee896 inherit pub_types_classez_array_base" id="r_a9ef6d9a5139acdaac6670775720ee896"><td class="memItemLeft" align="right" valign="top">
using&#160;</td><td class="memItemRight" valign="bottom"><b>const_reverse_iterator</b> = <a class="el" href="../../d5/dc9/structconst__reverse__pointer__iterator.htm">const_reverse_pointer_iterator</a>&lt; T &gt;</td></tr>
<tr class="separator:a9ef6d9a5139acdaac6670775720ee896 inherit pub_types_classez_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e6b03d3d096963531d9309ba5ab296b inherit pub_types_classez_array_base" id="r_a8e6b03d3d096963531d9309ba5ab296b"><td class="memItemLeft" align="right" valign="top">
using&#160;</td><td class="memItemRight" valign="bottom"><b>iterator</b> = T *</td></tr>
<tr class="separator:a8e6b03d3d096963531d9309ba5ab296b inherit pub_types_classez_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac86e99ba04dd1a9e4d75b216ddf22d58 inherit pub_types_classez_array_base" id="r_ac86e99ba04dd1a9e4d75b216ddf22d58"><td class="memItemLeft" align="right" valign="top">
using&#160;</td><td class="memItemRight" valign="bottom"><b>reverse_iterator</b> = <a class="el" href="../../d3/df2/structreverse__pointer__iterator.htm">reverse_pointer_iterator</a>&lt; T &gt;</td></tr>
<tr class="separator:ac86e99ba04dd1a9e4d75b216ddf22d58 inherit pub_types_classez_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pro_attribs_classez_array_base"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classez_array_base')"><img src="../../closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="../../dc/d59/classez_array_base.htm">ezArrayBase&lt; T, ezDynamicArrayBase&lt; T &gt; &gt;</a></td></tr>
<tr class="memitem:a11fdadf058dc71d62867f690b832f5f2 inherit pro_attribs_classez_array_base" id="r_a11fdadf058dc71d62867f690b832f5f2"><td class="memItemLeft" align="right" valign="top">
T *&#160;</td><td class="memItemRight" valign="bottom"><b>m_pElements</b></td></tr>
<tr class="memdesc:a11fdadf058dc71d62867f690b832f5f2 inherit pro_attribs_classez_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">Element-type access to m_Data. <br /></td></tr>
<tr class="separator:a11fdadf058dc71d62867f690b832f5f2 inherit pro_attribs_classez_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d6fd346fa2effc9fe7a5617f616ac82 inherit pro_attribs_classez_array_base" id="r_a1d6fd346fa2effc9fe7a5617f616ac82"><td class="memItemLeft" align="right" valign="top">
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>m_uiCount</b></td></tr>
<tr class="memdesc:a1d6fd346fa2effc9fe7a5617f616ac82 inherit pro_attribs_classez_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">The number of elements used from the array. <br /></td></tr>
<tr class="separator:a1d6fd346fa2effc9fe7a5617f616ac82 inherit pro_attribs_classez_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab4e32e79a0c17b99c3555d6ae8d0542 inherit pro_attribs_classez_array_base" id="r_aab4e32e79a0c17b99c3555d6ae8d0542"><td class="memItemLeft" align="right" valign="top">
ezUInt32&#160;</td><td class="memItemRight" valign="bottom"><b>m_uiCapacity</b></td></tr>
<tr class="memdesc:aab4e32e79a0c17b99c3555d6ae8d0542 inherit pro_attribs_classez_array_base"><td class="mdescLeft">&#160;</td><td class="mdescRight">The number of elements which can be stored in the array without re-allocating. <br /></td></tr>
<tr class="separator:aab4e32e79a0c17b99c3555d6ae8d0542 inherit pro_attribs_classez_array_base"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><div class="compoundTemplParams">template&lt;typename T, ezUInt32 Size, typename AllocatorWrapper = ezDefaultAllocatorWrapper&gt;<br />
class ezHybridArray&lt; T, Size, AllocatorWrapper &gt;</div><p>A hybrid array uses in-place storage to handle the first few elements without any allocation. It dynamically resizes when more elements are needed. </p>
<p>It is often more efficient to use a hybrid array, rather than a dynamic array, when the number of needed elements is typically low or when the array is used only temporarily. In this case costly allocations can often be prevented entirely. However, if the number of elements is unpredictable or usually very large, prefer a dynamic array, to avoid wasting (stack) memory for a hybrid array that is rarely large enough to be used. The <a class="el" href="../../d8/deb/classez_hybrid_array.htm" title="A hybrid array uses in-place storage to handle the first few elements without any allocation....">ezHybridArray</a> is derived from <a class="el" href="../../d2/d4f/classez_dynamic_array.htm">ezDynamicArray</a> and can therefore be passed to functions that expect an <a class="el" href="../../d2/d4f/classez_dynamic_array.htm">ezDynamicArray</a>, even for output. </p>
</div><hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Containers/<a class="el" href="../../d9/dfb/_hybrid_array_8h_source.htm">HybridArray.h</a></li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Containers/Implementation/<a class="el" href="../../dd/d0a/_hybrid_array__inl_8h_source.htm">HybridArray_inl.h</a></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d8/deb/classez_hybrid_array.htm">ezHybridArray</a></li>
    <li class="footer">Generated on Fri Jul 11 2025 12:17:58 for ezEngine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
