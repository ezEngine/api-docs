<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: ezPhantomMapProperty Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">ezEngine<span id="projectnumber">&#160;Release 25.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('d8/d39/classez_phantom_map_property.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="../../d6/df3/classez_phantom_map_property-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">ezPhantomMapProperty Class Reference</div></div>
</div><!--header-->
<div class="contents">
<div class="dynheader">
Inheritance diagram for ezPhantomMapProperty:</div>
<div class="dyncontent">
<div class="center"><img src="../../d4/d06/classez_phantom_map_property__inherit__graph.png" border="0" usemap="#aez_phantom_map_property_inherit__map" alt="Inheritance graph"/></div>
<map name="aez_phantom_map_property_inherit__map" id="aez_phantom_map_property_inherit__map">
<area shape="rect" title=" " alt="" coords="5,152,184,177"/>
<area shape="rect" href="../../d3/d48/classez_abstract_map_property.htm" title="The base class for a property that represents a set of values." alt="" coords="7,79,182,104"/>
<area shape="poly" title=" " alt="" coords="97,118,97,152,92,152,92,118"/>
<area shape="rect" href="../../d6/d81/classez_abstract_property.htm" title="This is the base interface for all properties in the reflection system. It provides enough informatio..." alt="" coords="21,5,168,31"/>
<area shape="poly" title=" " alt="" coords="97,44,97,79,92,79,92,44"/>
</map>
<center><span class="legend">[<a target="top" href="../../graph_legend.htm">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:abe146e8cf6ab89eb21d741576b0b6d15" id="r_abe146e8cf6ab89eb21d741576b0b6d15"><td class="memItemLeft" align="right" valign="top"><a id="abe146e8cf6ab89eb21d741576b0b6d15" name="abe146e8cf6ab89eb21d741576b0b6d15"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>ezPhantomMapProperty</b> (const <a class="el" href="../../db/deb/structez_reflected_property_descriptor.htm">ezReflectedPropertyDescriptor</a> *pDesc)</td></tr>
<tr class="separator:abe146e8cf6ab89eb21d741576b0b6d15"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8148d6899beaab2787086ea20347f47f" id="r_a8148d6899beaab2787086ea20347f47f"><td class="memItemLeft" align="right" valign="top">virtual const <a class="el" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/d39/classez_phantom_map_property.htm#a8148d6899beaab2787086ea20347f47f">GetSpecificType</a> () const override</td></tr>
<tr class="memdesc:a8148d6899beaab2787086ea20347f47f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the type information of the constant property. Use this to cast this property to a specific version of <a class="el" href="../../dc/d2e/classez_typed_constant_property.htm" title="The base class for all typed member properties. Ie. once the type of a property is determined,...">ezTypedConstantProperty</a>.  <br /></td></tr>
<tr class="separator:a8148d6899beaab2787086ea20347f47f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8e213fd66af2981a9bd363a9ad26cff6" id="r_a8e213fd66af2981a9bd363a9ad26cff6"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/d39/classez_phantom_map_property.htm#a8e213fd66af2981a9bd363a9ad26cff6">IsEmpty</a> (const void *pInstance) const override</td></tr>
<tr class="memdesc:a8e213fd66af2981a9bd363a9ad26cff6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the set is empty.  <br /></td></tr>
<tr class="separator:a8e213fd66af2981a9bd363a9ad26cff6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a15eb5959dc41d6876ccd21ccfa888e1b" id="r_a15eb5959dc41d6876ccd21ccfa888e1b"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/d39/classez_phantom_map_property.htm#a15eb5959dc41d6876ccd21ccfa888e1b">Clear</a> (void *pInstance) const override</td></tr>
<tr class="memdesc:a15eb5959dc41d6876ccd21ccfa888e1b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears the set.  <br /></td></tr>
<tr class="separator:a15eb5959dc41d6876ccd21ccfa888e1b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed3ca8567a3beb46a0b2799da0d80fa4" id="r_aed3ca8567a3beb46a0b2799da0d80fa4"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/d39/classez_phantom_map_property.htm#aed3ca8567a3beb46a0b2799da0d80fa4">Insert</a> (void *pInstance, const char *szKey, const void *pObject) const override</td></tr>
<tr class="memdesc:aed3ca8567a3beb46a0b2799da0d80fa4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Inserts the target of pObject into the set.  <br /></td></tr>
<tr class="separator:aed3ca8567a3beb46a0b2799da0d80fa4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a806e43aa9391a32034c89d003796f953" id="r_a806e43aa9391a32034c89d003796f953"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/d39/classez_phantom_map_property.htm#a806e43aa9391a32034c89d003796f953">Remove</a> (void *pInstance, const char *szKey) const override</td></tr>
<tr class="memdesc:a806e43aa9391a32034c89d003796f953"><td class="mdescLeft">&#160;</td><td class="mdescRight">Removes the target of pObject from the set.  <br /></td></tr>
<tr class="separator:a806e43aa9391a32034c89d003796f953"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a75f4059fe27233834b0ea82003f1bde7" id="r_a75f4059fe27233834b0ea82003f1bde7"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/d39/classez_phantom_map_property.htm#a75f4059fe27233834b0ea82003f1bde7">Contains</a> (const void *pInstance, const char *szKey) const override</td></tr>
<tr class="memdesc:a75f4059fe27233834b0ea82003f1bde7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns whether the target of pObject is in the set.  <br /></td></tr>
<tr class="separator:a75f4059fe27233834b0ea82003f1bde7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a466ab32093111d91203373017b5edf4e" id="r_a466ab32093111d91203373017b5edf4e"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/d39/classez_phantom_map_property.htm#a466ab32093111d91203373017b5edf4e">GetValue</a> (const void *pInstance, const char *szKey, void *pObject) const override</td></tr>
<tr class="memdesc:a466ab32093111d91203373017b5edf4e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes element at index uiIndex to the target of pObject.  <br /></td></tr>
<tr class="separator:a466ab32093111d91203373017b5edf4e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af9443d6cc2d1de736a7d140cdaebf396" id="r_af9443d6cc2d1de736a7d140cdaebf396"><td class="memItemLeft" align="right" valign="top">virtual void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d8/d39/classez_phantom_map_property.htm#af9443d6cc2d1de736a7d140cdaebf396">GetKeys</a> (const void *pInstance, <a class="el" href="../../d8/deb/classez_hybrid_array.htm">ezHybridArray</a>&lt; <a class="el" href="../../d4/d53/structez_hybrid_string.htm">ezString</a>, 16 &gt; &amp;out_keys) const override</td></tr>
<tr class="memdesc:af9443d6cc2d1de736a7d140cdaebf396"><td class="mdescLeft">&#160;</td><td class="mdescRight">Writes the content of the set to out_keys.  <br /></td></tr>
<tr class="separator:af9443d6cc2d1de736a7d140cdaebf396"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classez_abstract_map_property"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classez_abstract_map_property')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../d3/d48/classez_abstract_map_property.htm">ezAbstractMapProperty</a></td></tr>
<tr class="memitem:a417cc414770a81ba1e4b4318af6b8dbc inherit pub_methods_classez_abstract_map_property" id="r_a417cc414770a81ba1e4b4318af6b8dbc"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>ezAbstractMapProperty</b> (const char *szPropertyName)</td></tr>
<tr class="memdesc:a417cc414770a81ba1e4b4318af6b8dbc inherit pub_methods_classez_abstract_map_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Passes the property name through to <a class="el" href="../../d6/d81/classez_abstract_property.htm" title="This is the base interface for all properties in the reflection system. It provides enough informatio...">ezAbstractProperty</a>. <br /></td></tr>
<tr class="separator:a417cc414770a81ba1e4b4318af6b8dbc inherit pub_methods_classez_abstract_map_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8999fb55ce5554591e2f023adf8039e9 inherit pub_methods_classez_abstract_map_property" id="r_a8999fb55ce5554591e2f023adf8039e9"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="../../d5/d49/structez_property_category.htm#a6900b9049e7887fa4b00d16d5eace8cf">ezPropertyCategory::Enum</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d3/d48/classez_abstract_map_property.htm#a8999fb55ce5554591e2f023adf8039e9">GetCategory</a> () const override</td></tr>
<tr class="memdesc:a8999fb55ce5554591e2f023adf8039e9 inherit pub_methods_classez_abstract_map_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns <a class="el" href="../../d5/d49/structez_property_category.htm#a6900b9049e7887fa4b00d16d5eace8cfa6dd3b0e2fa23af50f7224edbc1b77cfb" title="The property is actually a map from string to values. Cast to ezAbstractMapProperty.">ezPropertyCategory::Map</a>.  <br /></td></tr>
<tr class="separator:a8999fb55ce5554591e2f023adf8039e9 inherit pub_methods_classez_abstract_map_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="inherit_header pub_methods_classez_abstract_property"><td colspan="2" onclick="javascript:toggleInherit('pub_methods_classez_abstract_property')"><img src="../../closed.png" alt="-"/>&#160;Public Member Functions inherited from <a class="el" href="../../d6/d81/classez_abstract_property.htm">ezAbstractProperty</a></td></tr>
<tr class="memitem:a9f823cb935524098cc4c08e2351b43be inherit pub_methods_classez_abstract_property" id="r_a9f823cb935524098cc4c08e2351b43be"><td class="memItemLeft" align="right" valign="top">
&#160;</td><td class="memItemRight" valign="bottom"><b>ezAbstractProperty</b> (const char *szPropertyName)</td></tr>
<tr class="memdesc:a9f823cb935524098cc4c08e2351b43be inherit pub_methods_classez_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">The constructor must get the name of the property. The string must be a compile-time constant. <br /></td></tr>
<tr class="separator:a9f823cb935524098cc4c08e2351b43be inherit pub_methods_classez_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa9de7a38815952c004c7d2cca9360133 inherit pub_methods_classez_abstract_property" id="r_aa9de7a38815952c004c7d2cca9360133"><td class="memItemLeft" align="right" valign="top">
const char *&#160;</td><td class="memItemRight" valign="bottom"><b>GetPropertyName</b> () const</td></tr>
<tr class="memdesc:aa9de7a38815952c004c7d2cca9360133 inherit pub_methods_classez_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the name of the property. <br /></td></tr>
<tr class="separator:aa9de7a38815952c004c7d2cca9360133 inherit pub_methods_classez_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f8c61e159304f2c00036fd844cdedbd inherit pub_methods_classez_abstract_property" id="r_a7f8c61e159304f2c00036fd844cdedbd"><td class="memItemLeft" align="right" valign="top">
const <a class="el" href="../../d1/dec/structez_bitflags.htm">ezBitflags</a>&lt; <a class="el" href="../../d2/da3/structez_property_flags.htm">ezPropertyFlags</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetFlags</b> () const</td></tr>
<tr class="memdesc:a7f8c61e159304f2c00036fd844cdedbd inherit pub_methods_classez_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the flags of the property. <br /></td></tr>
<tr class="separator:a7f8c61e159304f2c00036fd844cdedbd inherit pub_methods_classez_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f5156c5c1a2d46cb4c02ad5d6883d77 inherit pub_methods_classez_abstract_property" id="r_a0f5156c5c1a2d46cb4c02ad5d6883d77"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d6/d81/classez_abstract_property.htm">ezAbstractProperty</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>AddFlags</b> (<a class="el" href="../../d1/dec/structez_bitflags.htm">ezBitflags</a>&lt; <a class="el" href="../../d2/da3/structez_property_flags.htm">ezPropertyFlags</a> &gt; flags)</td></tr>
<tr class="memdesc:a0f5156c5c1a2d46cb4c02ad5d6883d77 inherit pub_methods_classez_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds flags to the property. Returns itself to allow to be called during initialization. <br /></td></tr>
<tr class="separator:a0f5156c5c1a2d46cb4c02ad5d6883d77 inherit pub_methods_classez_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a44c0fd4f69c83409477e30aef9d6537e inherit pub_methods_classez_abstract_property" id="r_a44c0fd4f69c83409477e30aef9d6537e"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d6/d81/classez_abstract_property.htm">ezAbstractProperty</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>AddAttributes</b> (<a class="el" href="../../d7/d48/classez_property_attribute.htm">ezPropertyAttribute</a> *pAttrib1, <a class="el" href="../../d7/d48/classez_property_attribute.htm">ezPropertyAttribute</a> *pAttrib2=nullptr, <a class="el" href="../../d7/d48/classez_property_attribute.htm">ezPropertyAttribute</a> *pAttrib3=nullptr, <a class="el" href="../../d7/d48/classez_property_attribute.htm">ezPropertyAttribute</a> *pAttrib4=nullptr, <a class="el" href="../../d7/d48/classez_property_attribute.htm">ezPropertyAttribute</a> *pAttrib5=nullptr, <a class="el" href="../../d7/d48/classez_property_attribute.htm">ezPropertyAttribute</a> *pAttrib6=nullptr)</td></tr>
<tr class="memdesc:a44c0fd4f69c83409477e30aef9d6537e inherit pub_methods_classez_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Adds attributes to the property. Returns itself to allow to be called during initialization. Allocate an attribute using standard 'new'. <br /></td></tr>
<tr class="separator:a44c0fd4f69c83409477e30aef9d6537e inherit pub_methods_classez_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac37610f2f1097b9568022a56b2e04914 inherit pub_methods_classez_abstract_property" id="r_ac37610f2f1097b9568022a56b2e04914"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; const <a class="el" href="../../d7/d48/classez_property_attribute.htm">ezPropertyAttribute</a> *const &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetAttributes</b> () const</td></tr>
<tr class="memdesc:ac37610f2f1097b9568022a56b2e04914 inherit pub_methods_classez_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the array of property attributes. <br /></td></tr>
<tr class="separator:ac37610f2f1097b9568022a56b2e04914 inherit pub_methods_classez_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aaf854f28a9813d44b239d1d4a6f0765f inherit pub_methods_classez_abstract_property" id="r_aaf854f28a9813d44b239d1d4a6f0765f"><td class="memTemplParams" colspan="2">
template&lt;typename Type &gt; </td></tr>
<tr class="memitem:aaf854f28a9813d44b239d1d4a6f0765f inherit pub_methods_classez_abstract_property"><td class="memTemplItemLeft" align="right" valign="top">const Type *&#160;</td><td class="memTemplItemRight" valign="bottom"><b>GetAttributeByType</b> () const</td></tr>
<tr class="memdesc:aaf854f28a9813d44b239d1d4a6f0765f inherit pub_methods_classez_abstract_property"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the first attribute that derives from the given type, or nullptr if nothing is found. <br /></td></tr>
<tr class="separator:aaf854f28a9813d44b239d1d4a6f0765f inherit pub_methods_classez_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="inherited" name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pro_attribs_classez_abstract_property"><td colspan="2" onclick="javascript:toggleInherit('pro_attribs_classez_abstract_property')"><img src="../../closed.png" alt="-"/>&#160;Protected Attributes inherited from <a class="el" href="../../d6/d81/classez_abstract_property.htm">ezAbstractProperty</a></td></tr>
<tr class="memitem:a7bec6eca881e4d101c85a79252b3d071 inherit pro_attribs_classez_abstract_property" id="r_a7bec6eca881e4d101c85a79252b3d071"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d1/dec/structez_bitflags.htm">ezBitflags</a>&lt; <a class="el" href="../../d2/da3/structez_property_flags.htm">ezPropertyFlags</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_Flags</b></td></tr>
<tr class="separator:a7bec6eca881e4d101c85a79252b3d071 inherit pro_attribs_classez_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae4922433e59479d4a2a35e3709defeb8 inherit pro_attribs_classez_abstract_property" id="r_ae4922433e59479d4a2a35e3709defeb8"><td class="memItemLeft" align="right" valign="top">
const char *&#160;</td><td class="memItemRight" valign="bottom"><b>m_szPropertyName</b></td></tr>
<tr class="separator:ae4922433e59479d4a2a35e3709defeb8 inherit pro_attribs_classez_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4db885baa76eabd60628aef04d77923b inherit pro_attribs_classez_abstract_property" id="r_a4db885baa76eabd60628aef04d77923b"><td class="memItemLeft" align="right" valign="top">
<a class="el" href="../../d8/deb/classez_hybrid_array.htm">ezHybridArray</a>&lt; const <a class="el" href="../../d7/d48/classez_property_attribute.htm">ezPropertyAttribute</a> *, 2, <a class="el" href="../../d5/dd4/structez_statics_allocator_wrapper.htm">ezStaticsAllocatorWrapper</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>m_Attributes</b></td></tr>
<tr class="separator:a4db885baa76eabd60628aef04d77923b inherit pro_attribs_classez_abstract_property"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a15eb5959dc41d6876ccd21ccfa888e1b" name="a15eb5959dc41d6876ccd21ccfa888e1b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a15eb5959dc41d6876ccd21ccfa888e1b">&#9670;&#160;</a></span>Clear()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void ezPhantomMapProperty::Clear </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>pInstance</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Clears the set. </p>

<p>Implements <a class="el" href="../../d3/d48/classez_abstract_map_property.htm#ab30871c546810ce8d8dbd4c678c65e88">ezAbstractMapProperty</a>.</p>

</div>
</div>
<a id="a75f4059fe27233834b0ea82003f1bde7" name="a75f4059fe27233834b0ea82003f1bde7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a75f4059fe27233834b0ea82003f1bde7">&#9670;&#160;</a></span>Contains()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool ezPhantomMapProperty::Contains </td>
          <td>(</td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>pInstance</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>szKey</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns whether the target of pObject is in the set. </p>

<p>Implements <a class="el" href="../../d3/d48/classez_abstract_map_property.htm#a3efa46f0b2fe1d47d240b8e4d6e5557d">ezAbstractMapProperty</a>.</p>

</div>
</div>
<a id="af9443d6cc2d1de736a7d140cdaebf396" name="af9443d6cc2d1de736a7d140cdaebf396"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af9443d6cc2d1de736a7d140cdaebf396">&#9670;&#160;</a></span>GetKeys()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void ezPhantomMapProperty::GetKeys </td>
          <td>(</td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>pInstance</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d8/deb/classez_hybrid_array.htm">ezHybridArray</a>&lt; <a class="el" href="../../d4/d53/structez_hybrid_string.htm">ezString</a>, 16 &gt; &amp;&#160;</td>
          <td class="paramname"><em>out_keys</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Writes the content of the set to out_keys. </p>

<p>Implements <a class="el" href="../../d3/d48/classez_abstract_map_property.htm#ac061f43392d5efaa0c9c86010c94d39b">ezAbstractMapProperty</a>.</p>

</div>
</div>
<a id="a8148d6899beaab2787086ea20347f47f" name="a8148d6899beaab2787086ea20347f47f"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8148d6899beaab2787086ea20347f47f">&#9670;&#160;</a></span>GetSpecificType()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">const <a class="el" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a> * ezPhantomMapProperty::GetSpecificType </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns the type information of the constant property. Use this to cast this property to a specific version of <a class="el" href="../../dc/d2e/classez_typed_constant_property.htm" title="The base class for all typed member properties. Ie. once the type of a property is determined,...">ezTypedConstantProperty</a>. </p>

<p>Implements <a class="el" href="../../d6/d81/classez_abstract_property.htm#a786e7e481fb7b3a89b07f10dfb2c9201">ezAbstractProperty</a>.</p>

</div>
</div>
<a id="a466ab32093111d91203373017b5edf4e" name="a466ab32093111d91203373017b5edf4e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a466ab32093111d91203373017b5edf4e">&#9670;&#160;</a></span>GetValue()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool ezPhantomMapProperty::GetValue </td>
          <td>(</td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>pInstance</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>szKey</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>pObject</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Writes element at index uiIndex to the target of pObject. </p>

<p>Implements <a class="el" href="../../d3/d48/classez_abstract_map_property.htm#a2e6b581b0d9e332ea3eab4b3045933d7">ezAbstractMapProperty</a>.</p>

</div>
</div>
<a id="aed3ca8567a3beb46a0b2799da0d80fa4" name="aed3ca8567a3beb46a0b2799da0d80fa4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aed3ca8567a3beb46a0b2799da0d80fa4">&#9670;&#160;</a></span>Insert()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void ezPhantomMapProperty::Insert </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>pInstance</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>szKey</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>pObject</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Inserts the target of pObject into the set. </p>

<p>Implements <a class="el" href="../../d3/d48/classez_abstract_map_property.htm#aade02e969425533071677b4f7a295ae5">ezAbstractMapProperty</a>.</p>

</div>
</div>
<a id="a8e213fd66af2981a9bd363a9ad26cff6" name="a8e213fd66af2981a9bd363a9ad26cff6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8e213fd66af2981a9bd363a9ad26cff6">&#9670;&#160;</a></span>IsEmpty()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual bool ezPhantomMapProperty::IsEmpty </td>
          <td>(</td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>pInstance</em></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Returns whether the set is empty. </p>

<p>Implements <a class="el" href="../../d3/d48/classez_abstract_map_property.htm#af8fb754fe29e3a899b325ca1422ea645">ezAbstractMapProperty</a>.</p>

</div>
</div>
<a id="a806e43aa9391a32034c89d003796f953" name="a806e43aa9391a32034c89d003796f953"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a806e43aa9391a32034c89d003796f953">&#9670;&#160;</a></span>Remove()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">virtual void ezPhantomMapProperty::Remove </td>
          <td>(</td>
          <td class="paramtype">void *&#160;</td>
          <td class="paramname"><em>pInstance</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>szKey</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span><span class="mlabel">override</span><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Removes the target of pObject from the set. </p>

<p>Implements <a class="el" href="../../d3/d48/classez_abstract_map_property.htm#a0390a647d148bd8633a6c27a568f60b9">ezAbstractMapProperty</a>.</p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/ezEngine/ezEngine/Code/Tools/Libs/ToolsFoundation/Reflection/<a class="el" href="../../d7/d0a/_phantom_property_8h_source.htm">PhantomProperty.h</a></li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Tools/Libs/ToolsFoundation/Reflection/Implementation/<b>PhantomProperty.cpp</b></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d8/d39/classez_phantom_map_property.htm">ezPhantomMapProperty</a></li>
    <li class="footer">Generated on Fri Jul 11 2025 12:17:59 for ezEngine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
