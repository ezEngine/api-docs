<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Reflection/Implementation/AbstractProperty.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">ezEngine
   &#160;<span id="projectnumber">Release 22.11</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "../../search",false,'Search');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(document).ready(function(){initNavTree('d8/d4a/_abstract_property_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">AbstractProperty.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160; </div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160; </div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;Foundation/Basics.h&gt;</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160; </div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;Foundation/Containers/HashSet.h&gt;</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;Foundation/Containers/HashTable.h&gt;</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;Foundation/Containers/Map.h&gt;</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#include &lt;Foundation/Containers/Set.h&gt;</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &lt;Foundation/Containers/SmallArray.h&gt;</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;Foundation/Containers/StaticArray.h&gt;</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &lt;Foundation/Reflection/Implementation/RTTI.h&gt;</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &lt;Foundation/Types/Bitflags.h&gt;</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &lt;Foundation/Types/Enum.h&gt;</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160; </div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">class </span><a class="code" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="keyword">class </span><a class="code" href="../../d7/d48/classez_property_attribute.htm">ezPropertyAttribute</a>;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160; </div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00022"></a><span class="lineno"><a class="line" href="../../d9/d9f/structez_is_bitflags.htm">   22</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../d9/d9f/structez_is_bitflags.htm">ezIsBitflags</a></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;{</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;  <span class="keyword">static</span> constexpr <span class="keywordtype">bool</span> value = <span class="keyword">false</span>;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;};</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00028"></a><span class="lineno"><a class="line" href="../../dc/db7/structez_is_bitflags_3_01ez_bitflags_3_01_t_01_4_01_4.htm">   28</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../d9/d9f/structez_is_bitflags.htm">ezIsBitflags</a>&lt;<a class="code" href="../../d1/dec/structez_bitflags.htm">ezBitflags</a>&lt;T&gt;&gt;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;{</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;  <span class="keyword">static</span> constexpr <span class="keywordtype">bool</span> value = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;};</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160; </div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00035"></a><span class="lineno"><a class="line" href="../../d5/d8e/structez_is_enum.htm">   35</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../d5/d8e/structez_is_enum.htm">ezIsEnum</a></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;{</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;  <span class="keyword">static</span> constexpr <span class="keywordtype">bool</span> value = std::is_enum&lt;T&gt;::value;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;};</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160; </div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00041"></a><span class="lineno"><a class="line" href="../../de/dc1/structez_is_enum_3_01ez_enum_3_01_t_01_4_01_4.htm">   41</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../d5/d8e/structez_is_enum.htm">ezIsEnum</a>&lt;<a class="code" href="../../d6/dd9/structez_enum.htm">ezEnum</a>&lt;T&gt;&gt;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;{</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;  <span class="keyword">static</span> constexpr <span class="keywordtype">bool</span> value = <span class="keyword">true</span>;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;};</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160; </div>
<div class="line"><a name="l00047"></a><span class="lineno"><a class="line" href="../../d2/da3/structez_property_flags.htm">   47</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../d2/da3/structez_property_flags.htm">ezPropertyFlags</a></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;{</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;  <span class="keyword">typedef</span> ezUInt16 StorageType;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160; </div>
<div class="line"><a name="l00051"></a><span class="lineno"><a class="line" href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852f">   51</a></span>&#160;  <span class="keyword">enum</span> <a class="code" href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852f">Enum</a> : ezUInt16</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;  {</div>
<div class="line"><a name="l00053"></a><span class="lineno"><a class="line" href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852facf9e7b987b0f2cae4127c5f663f5470d">   53</a></span>&#160;    <a class="code" href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852facf9e7b987b0f2cae4127c5f663f5470d">StandardType</a> = EZ_BIT(0), </div>
<div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852fa82e55e1f2e0c5cdf417c4428e8b3a0e1">   54</a></span>&#160;    <a class="code" href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852fa82e55e1f2e0c5cdf417c4428e8b3a0e1">IsEnum</a> = EZ_BIT(1),       </div>
<div class="line"><a name="l00055"></a><span class="lineno"><a class="line" href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852faa833edfbd1893edccf523f51306c76cc">   55</a></span>&#160;    <a class="code" href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852faa833edfbd1893edccf523f51306c76cc">Bitflags</a> = EZ_BIT(2),     </div>
<div class="line"><a name="l00056"></a><span class="lineno"><a class="line" href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852fa5081f500ff8cb9d575530391588c7152">   56</a></span>&#160;    <a class="code" href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852fa5081f500ff8cb9d575530391588c7152">Class</a> = EZ_BIT(3),        </div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160; </div>
<div class="line"><a name="l00058"></a><span class="lineno"><a class="line" href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852fa61c7217b17359e552ea1ddc3d75fec11">   58</a></span>&#160;    <a class="code" href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852fa61c7217b17359e552ea1ddc3d75fec11">Const</a> = EZ_BIT(4),     </div>
<div class="line"><a name="l00059"></a><span class="lineno"><a class="line" href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852fa8b5fa94b8332c173ae6f6f178619a206">   59</a></span>&#160;    <a class="code" href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852fa8b5fa94b8332c173ae6f6f178619a206">Reference</a> = EZ_BIT(5), </div>
<div class="line"><a name="l00060"></a><span class="lineno"><a class="line" href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852fac903a68a0ee9fef9284345de660cce31">   60</a></span>&#160;    <a class="code" href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852fac903a68a0ee9fef9284345de660cce31">Pointer</a> = EZ_BIT(6),   </div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160; </div>
<div class="line"><a name="l00062"></a><span class="lineno"><a class="line" href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852fa3641579885c20686aeb648665d2c043f">   62</a></span>&#160;    <a class="code" href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852fa3641579885c20686aeb648665d2c043f">PointerOwner</a> = EZ_BIT(7), </div>
<div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852fa2a82793a685c6bbcabb465e870c36c8a">   63</a></span>&#160;    <a class="code" href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852fa2a82793a685c6bbcabb465e870c36c8a">ReadOnly</a> = EZ_BIT(8),     </div>
<div class="line"><a name="l00064"></a><span class="lineno"><a class="line" href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852faa8c1b0529775ce0acb8601eb88211de8">   64</a></span>&#160;    <a class="code" href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852faa8c1b0529775ce0acb8601eb88211de8">Hidden</a> = EZ_BIT(9),       </div>
<div class="line"><a name="l00065"></a><span class="lineno"><a class="line" href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852faacd2cc0185e6220d21182a92dd399ace">   65</a></span>&#160;    <a class="code" href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852faacd2cc0185e6220d21182a92dd399ace">Phantom</a> = EZ_BIT(10),     </div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160; </div>
<div class="line"><a name="l00068"></a><span class="lineno"><a class="line" href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852fab74c0d41eab8847918935b6392e6f1b8">   68</a></span>&#160;    <a class="code" href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852fab74c0d41eab8847918935b6392e6f1b8">VarOut</a> = EZ_BIT(11),   </div>
<div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852fa8e0026188b306cecb2342f8d5ad888ee">   69</a></span>&#160;    <a class="code" href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852fa8e0026188b306cecb2342f8d5ad888ee">VarInOut</a> = EZ_BIT(12), </div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160; </div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;    Default = 0,</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;    Void = 0</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;  };</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160; </div>
<div class="line"><a name="l00075"></a><span class="lineno"><a class="line" href="../../d8/df3/structez_property_flags_1_1_bits.htm">   75</a></span>&#160;  <span class="keyword">struct </span><a class="code" href="../../d8/df3/structez_property_flags_1_1_bits.htm">Bits</a></div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;  {</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;    StorageType StandardType : 1;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;    StorageType IsEnum : 1;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;    StorageType Bitflags : 1;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;    StorageType Class : 1;</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160; </div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;    StorageType Const : 1;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;    StorageType Reference : 1;</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;    StorageType Pointer : 1;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160; </div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;    StorageType PointerOwner : 1;</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;    StorageType ReadOnly : 1;</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;    StorageType Hidden : 1;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    StorageType Phantom : 1;</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;  };</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160; </div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">class</span> Type&gt;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;  <span class="keyword">static</span> <a class="code" href="../../d1/dec/structez_bitflags.htm">ezBitflags&lt;ezPropertyFlags&gt;</a> GetParameterFlags()</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;  {</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;    <span class="keyword">using</span> CleanType = <span class="keyword">typename</span> <a class="code" href="../../d1/d32/structez_type_traits.htm#a9dcee6bb8dad253cbdc804cd45ce22f1">ezTypeTraits&lt;Type&gt;::NonConstReferencePointerType</a>;</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    <a class="code" href="../../d1/dec/structez_bitflags.htm">ezBitflags&lt;ezPropertyFlags&gt;</a> flags;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;    <a class="code" href="../../da/d6c/structez_variant_type.htm#a91ecf53decb31d57981c71043fa30299">ezVariantType::Enum</a> type = <span class="keyword">static_cast&lt;</span><a class="code" href="../../da/d6c/structez_variant_type.htm#a91ecf53decb31d57981c71043fa30299">ezVariantType::Enum</a><span class="keyword">&gt;</span>(<a class="code" href="../../df/da8/structez_variant_type_deduction.htm">ezVariantTypeDeduction&lt;CleanType&gt;::value</a>);</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;    <span class="keywordflow">if</span> (std::is_same&lt;CleanType, ezVariant&gt;::value)</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;      flags.<a class="code" href="../../d1/dec/structez_bitflags.htm#aaa83c1e77b70d0b549604a64c20f8a83">Add</a>(<a class="code" href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852facf9e7b987b0f2cae4127c5f663f5470d">ezPropertyFlags::StandardType</a>);</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (std::is_same&lt;Type, const char*&gt;::value)</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;      <span class="comment">// We treat const char* as a basic type and not a pointer.</span></div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;      flags.<a class="code" href="../../d1/dec/structez_bitflags.htm#aaa83c1e77b70d0b549604a64c20f8a83">Add</a>(<a class="code" href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852facf9e7b987b0f2cae4127c5f663f5470d">ezPropertyFlags::StandardType</a>);</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> ((type &gt;= <a class="code" href="../../da/d6c/structez_variant_type.htm#a91ecf53decb31d57981c71043fa30299ac4af591f48624b00a42223fa8ecb2c97">ezVariantType::FirstStandardType</a> &amp;&amp; type &lt;= ezVariantType::LastStandardType) || EZ_IS_SAME_TYPE(<a class="code" href="../../de/de6/classez_variant.htm">ezVariant</a>, Type))</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;      flags.<a class="code" href="../../d1/dec/structez_bitflags.htm#aaa83c1e77b70d0b549604a64c20f8a83">Add</a>(<a class="code" href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852facf9e7b987b0f2cae4127c5f663f5470d">ezPropertyFlags::StandardType</a>);</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="../../d5/d8e/structez_is_enum.htm">ezIsEnum&lt;CleanType&gt;::value</a>)</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;      flags.<a class="code" href="../../d1/dec/structez_bitflags.htm#aaa83c1e77b70d0b549604a64c20f8a83">Add</a>(<a class="code" href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852fa82e55e1f2e0c5cdf417c4428e8b3a0e1">ezPropertyFlags::IsEnum</a>);</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;    <span class="keywordflow">else</span> <span class="keywordflow">if</span> (<a class="code" href="../../d9/d9f/structez_is_bitflags.htm">ezIsBitflags&lt;CleanType&gt;::value</a>)</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;      flags.<a class="code" href="../../d1/dec/structez_bitflags.htm#aaa83c1e77b70d0b549604a64c20f8a83">Add</a>(<a class="code" href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852faa833edfbd1893edccf523f51306c76cc">ezPropertyFlags::Bitflags</a>);</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    <span class="keywordflow">else</span></div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;      flags.<a class="code" href="../../d1/dec/structez_bitflags.htm#aaa83c1e77b70d0b549604a64c20f8a83">Add</a>(<a class="code" href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852fa5081f500ff8cb9d575530391588c7152">ezPropertyFlags::Class</a>);</div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160; </div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;    <span class="keywordflow">if</span> (std::is_const&lt;<span class="keyword">typename</span> <a class="code" href="../../d1/d32/structez_type_traits.htm#a1da2a2361a3c9ab3a1e8287bc3cf7176">ezTypeTraits&lt;Type&gt;::NonReferencePointerType</a>&gt;::value)</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;      flags.<a class="code" href="../../d1/dec/structez_bitflags.htm#aaa83c1e77b70d0b549604a64c20f8a83">Add</a>(<a class="code" href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852fa61c7217b17359e552ea1ddc3d75fec11">ezPropertyFlags::Const</a>);</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160; </div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;    <span class="keywordflow">if</span> (std::is_pointer&lt;Type&gt;::value &amp;&amp; !std::is_same&lt;Type, const char*&gt;::value)</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;      flags.<a class="code" href="../../d1/dec/structez_bitflags.htm#aaa83c1e77b70d0b549604a64c20f8a83">Add</a>(<a class="code" href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852fac903a68a0ee9fef9284345de660cce31">ezPropertyFlags::Pointer</a>);</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160; </div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;    <span class="keywordflow">if</span> (std::is_reference&lt;Type&gt;::value)</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;      flags.<a class="code" href="../../d1/dec/structez_bitflags.htm#aaa83c1e77b70d0b549604a64c20f8a83">Add</a>(<a class="code" href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852fa8b5fa94b8332c173ae6f6f178619a206">ezPropertyFlags::Reference</a>);</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160; </div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    <span class="keywordflow">return</span> flags;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;  }</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;};</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160; </div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="keyword">template</span> &lt;&gt;</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="keyword">inline</span> <a class="code" href="../../d1/dec/structez_bitflags.htm">ezBitflags&lt;ezPropertyFlags&gt;</a> ezPropertyFlags::GetParameterFlags&lt;void&gt;()</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;{</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;  <span class="keywordflow">return</span> <a class="code" href="../../d1/dec/structez_bitflags.htm">ezBitflags&lt;ezPropertyFlags&gt;</a>();</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;}</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160; </div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;EZ_DECLARE_FLAGS_OPERATORS(<a class="code" href="../../d2/da3/structez_property_flags.htm">ezPropertyFlags</a>)</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160; </div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="keyword">struct </span><a class="code" href="../../d5/d49/structez_property_category.htm">ezPropertyCategory</a></div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;{</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;  <span class="keyword">using</span> StorageType = ezUInt8;</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160; </div>
<div class="line"><a name="l00138"></a><span class="lineno"><a class="line" href="../../d5/d49/structez_property_category.htm#a6900b9049e7887fa4b00d16d5eace8cf">  138</a></span>&#160;  <span class="keyword">enum</span> <a class="code" href="../../d5/d49/structez_property_category.htm#a6900b9049e7887fa4b00d16d5eace8cf">Enum</a></div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;  {</div>
<div class="line"><a name="l00140"></a><span class="lineno"><a class="line" href="../../d5/d49/structez_property_category.htm#a6900b9049e7887fa4b00d16d5eace8cfa7a6cb2df5f2963d94c97d03c4855de57">  140</a></span>&#160;    <a class="code" href="../../d5/d49/structez_property_category.htm#a6900b9049e7887fa4b00d16d5eace8cfa7a6cb2df5f2963d94c97d03c4855de57">Constant</a>, </div>
<div class="line"><a name="l00141"></a><span class="lineno"><a class="line" href="../../d5/d49/structez_property_category.htm#a6900b9049e7887fa4b00d16d5eace8cfae8a16ea65b820b392e7480a87375f651">  141</a></span>&#160;    <a class="code" href="../../d5/d49/structez_property_category.htm#a6900b9049e7887fa4b00d16d5eace8cfae8a16ea65b820b392e7480a87375f651">Member</a>,   </div>
<div class="line"><a name="l00142"></a><span class="lineno"><a class="line" href="../../d5/d49/structez_property_category.htm#a6900b9049e7887fa4b00d16d5eace8cfa873e619e6a6ee65e2a5f21e758ccd4a7">  142</a></span>&#160;    <a class="code" href="../../d5/d49/structez_property_category.htm#a6900b9049e7887fa4b00d16d5eace8cfa873e619e6a6ee65e2a5f21e758ccd4a7">Function</a>, </div>
<div class="line"><a name="l00143"></a><span class="lineno"><a class="line" href="../../d5/d49/structez_property_category.htm#a6900b9049e7887fa4b00d16d5eace8cfa83adeecf73ec8bb2d142c4c46d270862">  143</a></span>&#160;    <a class="code" href="../../d5/d49/structez_property_category.htm#a6900b9049e7887fa4b00d16d5eace8cfa83adeecf73ec8bb2d142c4c46d270862">Array</a>,    </div>
<div class="line"><a name="l00144"></a><span class="lineno"><a class="line" href="../../d5/d49/structez_property_category.htm#a6900b9049e7887fa4b00d16d5eace8cfa7d7111eba91893f2f08a578912ef57d3">  144</a></span>&#160;    <a class="code" href="../../d5/d49/structez_property_category.htm#a6900b9049e7887fa4b00d16d5eace8cfa7d7111eba91893f2f08a578912ef57d3">Set</a>,      </div>
<div class="line"><a name="l00145"></a><span class="lineno"><a class="line" href="../../d5/d49/structez_property_category.htm#a6900b9049e7887fa4b00d16d5eace8cfa6dd3b0e2fa23af50f7224edbc1b77cfb">  145</a></span>&#160;    <a class="code" href="../../d5/d49/structez_property_category.htm#a6900b9049e7887fa4b00d16d5eace8cfa6dd3b0e2fa23af50f7224edbc1b77cfb">Map</a>,      </div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;    Default = <a class="code" href="../../d5/d49/structez_property_category.htm#a6900b9049e7887fa4b00d16d5eace8cfae8a16ea65b820b392e7480a87375f651">Member</a></div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;  };</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;};</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160; </div>
<div class="line"><a name="l00152"></a><span class="lineno"><a class="line" href="../../d6/d81/classez_abstract_property.htm">  152</a></span>&#160;<span class="keyword">class </span>EZ_FOUNDATION_DLL <a class="code" href="../../d6/d81/classez_abstract_property.htm">ezAbstractProperty</a></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;{</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00156"></a><span class="lineno"><a class="line" href="../../d6/d81/classez_abstract_property.htm#a9f823cb935524098cc4c08e2351b43be">  156</a></span>&#160;  <a class="code" href="../../d6/d81/classez_abstract_property.htm#a9f823cb935524098cc4c08e2351b43be">ezAbstractProperty</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szPropertyName) { m_szPropertyName = szPropertyName; }</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160; </div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;  <span class="keyword">virtual</span> ~<a class="code" href="../../d6/d81/classez_abstract_property.htm">ezAbstractProperty</a>() = <span class="keywordflow">default</span>;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160; </div>
<div class="line"><a name="l00161"></a><span class="lineno"><a class="line" href="../../d6/d81/classez_abstract_property.htm#a978bb805adf38827ef6485801fb25341">  161</a></span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span>* <a class="code" href="../../d6/d81/classez_abstract_property.htm#a978bb805adf38827ef6485801fb25341">GetPropertyName</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_szPropertyName; }</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160; </div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;  <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* GetSpecificType() <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160; </div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;  <span class="keyword">virtual</span> <a class="code" href="../../d5/d49/structez_property_category.htm#a6900b9049e7887fa4b00d16d5eace8cf">ezPropertyCategory::Enum</a> GetCategory() <span class="keyword">const</span> = 0; <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160; </div>
<div class="line"><a name="l00171"></a><span class="lineno"><a class="line" href="../../d6/d81/classez_abstract_property.htm#a0bc18186382496a51fc09c2eadaf9d34">  171</a></span>&#160;  <span class="keyword">const</span> <a class="code" href="../../d1/dec/structez_bitflags.htm">ezBitflags&lt;ezPropertyFlags&gt;</a>&amp; <a class="code" href="../../d6/d81/classez_abstract_property.htm#a0bc18186382496a51fc09c2eadaf9d34">GetFlags</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_Flags; };</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160; </div>
<div class="line"><a name="l00174"></a><span class="lineno"><a class="line" href="../../d6/d81/classez_abstract_property.htm#a8c4938948f956e2fcdb2f40eae9104bc">  174</a></span>&#160;  <a class="code" href="../../d6/d81/classez_abstract_property.htm">ezAbstractProperty</a>* <a class="code" href="../../d6/d81/classez_abstract_property.htm#a8c4938948f956e2fcdb2f40eae9104bc">AddFlags</a>(<a class="code" href="../../d1/dec/structez_bitflags.htm">ezBitflags&lt;ezPropertyFlags&gt;</a> flags)</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;  {</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;    m_Flags.Add(flags);</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">this</span>;</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;  };</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160; </div>
<div class="line"><a name="l00182"></a><span class="lineno"><a class="line" href="../../d6/d81/classez_abstract_property.htm#a58f20a9beb3479b679f4241585a16bb8">  182</a></span>&#160;  <a class="code" href="../../d6/d81/classez_abstract_property.htm">ezAbstractProperty</a>* <a class="code" href="../../d6/d81/classez_abstract_property.htm#a58f20a9beb3479b679f4241585a16bb8">AddAttributes</a>(<a class="code" href="../../d7/d48/classez_property_attribute.htm">ezPropertyAttribute</a>* pAttrib1, <a class="code" href="../../d7/d48/classez_property_attribute.htm">ezPropertyAttribute</a>* pAttrib2 = <span class="keyword">nullptr</span>, <a class="code" href="../../d7/d48/classez_property_attribute.htm">ezPropertyAttribute</a>* pAttrib3 = <span class="keyword">nullptr</span>,</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;    <a class="code" href="../../d7/d48/classez_property_attribute.htm">ezPropertyAttribute</a>* pAttrib4 = <span class="keyword">nullptr</span>, <a class="code" href="../../d7/d48/classez_property_attribute.htm">ezPropertyAttribute</a>* pAttrib5 = <span class="keyword">nullptr</span>, <a class="code" href="../../d7/d48/classez_property_attribute.htm">ezPropertyAttribute</a>* pAttrib6 = <span class="keyword">nullptr</span>)</div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;  {</div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;    EZ_ASSERT_DEV(pAttrib1 != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;invalid attribute&quot;</span>);</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160; </div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;    m_Attributes.PushBack(pAttrib1);</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;    <span class="keywordflow">if</span> (pAttrib2)</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;      m_Attributes.PushBack(pAttrib2);</div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;    <span class="keywordflow">if</span> (pAttrib3)</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;      m_Attributes.PushBack(pAttrib3);</div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;    <span class="keywordflow">if</span> (pAttrib4)</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;      m_Attributes.PushBack(pAttrib4);</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;    <span class="keywordflow">if</span> (pAttrib5)</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160;      m_Attributes.PushBack(pAttrib5);</div>
<div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;    <span class="keywordflow">if</span> (pAttrib6)</div>
<div class="line"><a name="l00197"></a><span class="lineno">  197</span>&#160;      m_Attributes.PushBack(pAttrib6);</div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;    <span class="keywordflow">return</span> <span class="keyword">this</span>;</div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;  };</div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160; </div>
<div class="line"><a name="l00202"></a><span class="lineno"><a class="line" href="../../d6/d81/classez_abstract_property.htm#aa9e27b65ecbdd6eb9bfcbcca20714097">  202</a></span>&#160;  <span class="keyword">const</span> <a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;ezPropertyAttribute* const&gt;</a> <a class="code" href="../../d6/d81/classez_abstract_property.htm#aa9e27b65ecbdd6eb9bfcbcca20714097">GetAttributes</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> m_Attributes.GetArrayPtr(); }</div>
<div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160; </div>
<div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;  <span class="keyword">template</span> &lt;<span class="keyword">typename</span> Type&gt;</div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;  <span class="keyword">const</span> Type* GetAttributeByType() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160; </div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="keyword">protected</span>:</div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;  <a class="code" href="../../d1/dec/structez_bitflags.htm">ezBitflags&lt;ezPropertyFlags&gt;</a> m_Flags;</div>
<div class="line"><a name="l00210"></a><span class="lineno">  210</span>&#160;  <span class="keyword">const</span> <span class="keywordtype">char</span>* m_szPropertyName;</div>
<div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;  <a class="code" href="../../d8/deb/classez_hybrid_array.htm">ezHybridArray&lt;ezPropertyAttribute*, 2, ezStaticAllocatorWrapper&gt;</a> m_Attributes; <span class="comment">// Do not track RTTI data.</span></div>
<div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;};</div>
<div class="line"><a name="l00213"></a><span class="lineno">  213</span>&#160; </div>
<div class="line"><a name="l00215"></a><span class="lineno"><a class="line" href="../../d8/d53/classez_abstract_constant_property.htm">  215</a></span>&#160;<span class="keyword">class </span>EZ_FOUNDATION_DLL <a class="code" href="../../d8/d53/classez_abstract_constant_property.htm">ezAbstractConstantProperty</a> : <span class="keyword">public</span> <a class="code" href="../../d6/d81/classez_abstract_property.htm">ezAbstractProperty</a></div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160;{</div>
<div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00219"></a><span class="lineno"><a class="line" href="../../d8/d53/classez_abstract_constant_property.htm#a1267e4e5d812d78c47883dbb0dfb8d08">  219</a></span>&#160;  <a class="code" href="../../d8/d53/classez_abstract_constant_property.htm#a1267e4e5d812d78c47883dbb0dfb8d08">ezAbstractConstantProperty</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szPropertyName)</div>
<div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;    : <a class="code" href="../../d6/d81/classez_abstract_property.htm">ezAbstractProperty</a>(szPropertyName)</div>
<div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;  {</div>
<div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;  }</div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160; </div>
<div class="line"><a name="l00225"></a><span class="lineno"><a class="line" href="../../d8/d53/classez_abstract_constant_property.htm#aae9961eeae84381885a5ca7636615549">  225</a></span>&#160;  <span class="keyword">virtual</span> <a class="code" href="../../d5/d49/structez_property_category.htm#a6900b9049e7887fa4b00d16d5eace8cf">ezPropertyCategory::Enum</a> <a class="code" href="../../d8/d53/classez_abstract_constant_property.htm#aae9961eeae84381885a5ca7636615549">GetCategory</a>()<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> <a class="code" href="../../d5/d49/structez_property_category.htm#a6900b9049e7887fa4b00d16d5eace8cfa7a6cb2df5f2963d94c97d03c4855de57">ezPropertyCategory::Constant</a>; } <span class="comment">// [tested]</span></div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160; </div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span>* GetPropertyPointer() <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160; </div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;  <span class="keyword">virtual</span> <a class="code" href="../../de/de6/classez_variant.htm">ezVariant</a> GetConstant() <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;};</div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160; </div>
<div class="line"><a name="l00239"></a><span class="lineno"><a class="line" href="../../da/d67/classez_abstract_member_property.htm">  239</a></span>&#160;<span class="keyword">class </span>EZ_FOUNDATION_DLL <a class="code" href="../../da/d67/classez_abstract_member_property.htm">ezAbstractMemberProperty</a> : <span class="keyword">public</span> <a class="code" href="../../d6/d81/classez_abstract_property.htm">ezAbstractProperty</a></div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;{</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00243"></a><span class="lineno"><a class="line" href="../../da/d67/classez_abstract_member_property.htm#a61bc7051bc6b7b65192f513b7e820036">  243</a></span>&#160;  <a class="code" href="../../da/d67/classez_abstract_member_property.htm#a61bc7051bc6b7b65192f513b7e820036">ezAbstractMemberProperty</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szPropertyName)</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;    : <a class="code" href="../../d6/d81/classez_abstract_property.htm">ezAbstractProperty</a>(szPropertyName)</div>
<div class="line"><a name="l00245"></a><span class="lineno">  245</span>&#160;  {</div>
<div class="line"><a name="l00246"></a><span class="lineno">  246</span>&#160;  }</div>
<div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160; </div>
<div class="line"><a name="l00249"></a><span class="lineno"><a class="line" href="../../da/d67/classez_abstract_member_property.htm#a6799a8b691ee7f90fd8fbbd2e534a9db">  249</a></span>&#160;  <span class="keyword">virtual</span> <a class="code" href="../../d5/d49/structez_property_category.htm#a6900b9049e7887fa4b00d16d5eace8cf">ezPropertyCategory::Enum</a> <a class="code" href="../../da/d67/classez_abstract_member_property.htm#a6799a8b691ee7f90fd8fbbd2e534a9db">GetCategory</a>()<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> <a class="code" href="../../d5/d49/structez_property_category.htm#a6900b9049e7887fa4b00d16d5eace8cfae8a16ea65b820b392e7480a87375f651">ezPropertyCategory::Member</a>; }</div>
<div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160; </div>
<div class="line"><a name="l00262"></a><span class="lineno">  262</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span>* GetPropertyPointer(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance) <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160; </div>
<div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> GetValuePtr(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance, <span class="keywordtype">void</span>* out_pObject) <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160; </div>
<div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> SetValuePtr(<span class="keywordtype">void</span>* pInstance, <span class="keyword">const</span> <span class="keywordtype">void</span>* pObject) = 0;</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;};</div>
<div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160; </div>
<div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160; </div>
<div class="line"><a name="l00275"></a><span class="lineno"><a class="line" href="../../dc/dfb/classez_abstract_array_property.htm">  275</a></span>&#160;<span class="keyword">class </span>EZ_FOUNDATION_DLL <a class="code" href="../../dc/dfb/classez_abstract_array_property.htm">ezAbstractArrayProperty</a> : <span class="keyword">public</span> <a class="code" href="../../d6/d81/classez_abstract_property.htm">ezAbstractProperty</a></div>
<div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;{</div>
<div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00279"></a><span class="lineno"><a class="line" href="../../dc/dfb/classez_abstract_array_property.htm#a4a170bb0722e792b9f70f3736e22e190">  279</a></span>&#160;  <a class="code" href="../../dc/dfb/classez_abstract_array_property.htm#a4a170bb0722e792b9f70f3736e22e190">ezAbstractArrayProperty</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szPropertyName)</div>
<div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;    : <a class="code" href="../../d6/d81/classez_abstract_property.htm">ezAbstractProperty</a>(szPropertyName)</div>
<div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;  {</div>
<div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;  }</div>
<div class="line"><a name="l00283"></a><span class="lineno">  283</span>&#160; </div>
<div class="line"><a name="l00285"></a><span class="lineno"><a class="line" href="../../dc/dfb/classez_abstract_array_property.htm#a54d83354c7d25e4fba72d398f9456713">  285</a></span>&#160;  <span class="keyword">virtual</span> <a class="code" href="../../d5/d49/structez_property_category.htm#a6900b9049e7887fa4b00d16d5eace8cf">ezPropertyCategory::Enum</a> <a class="code" href="../../dc/dfb/classez_abstract_array_property.htm#a54d83354c7d25e4fba72d398f9456713">GetCategory</a>()<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> <a class="code" href="../../d5/d49/structez_property_category.htm#a6900b9049e7887fa4b00d16d5eace8cfa83adeecf73ec8bb2d142c4c46d270862">ezPropertyCategory::Array</a>; }</div>
<div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160; </div>
<div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;  <span class="keyword">virtual</span> ezUInt32 GetCount(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance) <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160; </div>
<div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> GetValue(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance, ezUInt32 uiIndex, <span class="keywordtype">void</span>* pObject) <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160; </div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> SetValue(<span class="keywordtype">void</span>* pInstance, ezUInt32 uiIndex, <span class="keyword">const</span> <span class="keywordtype">void</span>* pObject) = 0;</div>
<div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160; </div>
<div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> Insert(<span class="keywordtype">void</span>* pInstance, ezUInt32 uiIndex, <span class="keyword">const</span> <span class="keywordtype">void</span>* pObject) = 0;</div>
<div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160; </div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> Remove(<span class="keywordtype">void</span>* pInstance, ezUInt32 uiIndex) = 0;</div>
<div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160; </div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> Clear(<span class="keywordtype">void</span>* pInstance) = 0;</div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160; </div>
<div class="line"><a name="l00306"></a><span class="lineno">  306</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> SetCount(<span class="keywordtype">void</span>* pInstance, ezUInt32 uiCount) = 0;</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160;};</div>
<div class="line"><a name="l00308"></a><span class="lineno">  308</span>&#160; </div>
<div class="line"><a name="l00309"></a><span class="lineno">  309</span>&#160; </div>
<div class="line"><a name="l00313"></a><span class="lineno"><a class="line" href="../../d9/dc6/classez_abstract_set_property.htm">  313</a></span>&#160;<span class="keyword">class </span>EZ_FOUNDATION_DLL <a class="code" href="../../d9/dc6/classez_abstract_set_property.htm">ezAbstractSetProperty</a> : <span class="keyword">public</span> <a class="code" href="../../d6/d81/classez_abstract_property.htm">ezAbstractProperty</a></div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;{</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00317"></a><span class="lineno"><a class="line" href="../../d9/dc6/classez_abstract_set_property.htm#a66b2ad9bd143e86a50e086442de19982">  317</a></span>&#160;  <a class="code" href="../../d9/dc6/classez_abstract_set_property.htm#a66b2ad9bd143e86a50e086442de19982">ezAbstractSetProperty</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szPropertyName)</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;    : <a class="code" href="../../d6/d81/classez_abstract_property.htm">ezAbstractProperty</a>(szPropertyName)</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;  {</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;  }</div>
<div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160; </div>
<div class="line"><a name="l00323"></a><span class="lineno"><a class="line" href="../../d9/dc6/classez_abstract_set_property.htm#ab118a86d17fb9664944aa8adeb424482">  323</a></span>&#160;  <span class="keyword">virtual</span> <a class="code" href="../../d5/d49/structez_property_category.htm#a6900b9049e7887fa4b00d16d5eace8cf">ezPropertyCategory::Enum</a> <a class="code" href="../../d9/dc6/classez_abstract_set_property.htm#ab118a86d17fb9664944aa8adeb424482">GetCategory</a>()<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> <a class="code" href="../../d5/d49/structez_property_category.htm#a6900b9049e7887fa4b00d16d5eace8cfa7d7111eba91893f2f08a578912ef57d3">ezPropertyCategory::Set</a>; }</div>
<div class="line"><a name="l00324"></a><span class="lineno">  324</span>&#160; </div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">bool</span> IsEmpty(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance) <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00327"></a><span class="lineno">  327</span>&#160; </div>
<div class="line"><a name="l00329"></a><span class="lineno">  329</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> Clear(<span class="keywordtype">void</span>* pInstance) = 0;</div>
<div class="line"><a name="l00330"></a><span class="lineno">  330</span>&#160; </div>
<div class="line"><a name="l00332"></a><span class="lineno">  332</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> Insert(<span class="keywordtype">void</span>* pInstance, <span class="keyword">const</span> <span class="keywordtype">void</span>* pObject) = 0;</div>
<div class="line"><a name="l00333"></a><span class="lineno">  333</span>&#160; </div>
<div class="line"><a name="l00335"></a><span class="lineno">  335</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> Remove(<span class="keywordtype">void</span>* pInstance, <span class="keyword">const</span> <span class="keywordtype">void</span>* pObject) = 0;</div>
<div class="line"><a name="l00336"></a><span class="lineno">  336</span>&#160; </div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">bool</span> Contains(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance, <span class="keyword">const</span> <span class="keywordtype">void</span>* pObject) <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00339"></a><span class="lineno">  339</span>&#160; </div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> GetValues(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance, <a class="code" href="../../d2/d4f/classez_dynamic_array.htm">ezDynamicArray&lt;ezVariant&gt;</a>&amp; out_keys) <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;};</div>
<div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160; </div>
<div class="line"><a name="l00344"></a><span class="lineno">  344</span>&#160; </div>
<div class="line"><a name="l00348"></a><span class="lineno"><a class="line" href="../../d3/d48/classez_abstract_map_property.htm">  348</a></span>&#160;<span class="keyword">class </span>EZ_FOUNDATION_DLL <a class="code" href="../../d3/d48/classez_abstract_map_property.htm">ezAbstractMapProperty</a> : <span class="keyword">public</span> <a class="code" href="../../d6/d81/classez_abstract_property.htm">ezAbstractProperty</a></div>
<div class="line"><a name="l00349"></a><span class="lineno">  349</span>&#160;{</div>
<div class="line"><a name="l00350"></a><span class="lineno">  350</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00352"></a><span class="lineno"><a class="line" href="../../d3/d48/classez_abstract_map_property.htm#a417cc414770a81ba1e4b4318af6b8dbc">  352</a></span>&#160;  <a class="code" href="../../d3/d48/classez_abstract_map_property.htm#a417cc414770a81ba1e4b4318af6b8dbc">ezAbstractMapProperty</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szPropertyName)</div>
<div class="line"><a name="l00353"></a><span class="lineno">  353</span>&#160;    : <a class="code" href="../../d6/d81/classez_abstract_property.htm">ezAbstractProperty</a>(szPropertyName)</div>
<div class="line"><a name="l00354"></a><span class="lineno">  354</span>&#160;  {</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160;  }</div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160; </div>
<div class="line"><a name="l00358"></a><span class="lineno"><a class="line" href="../../d3/d48/classez_abstract_map_property.htm#a8999fb55ce5554591e2f023adf8039e9">  358</a></span>&#160;  <span class="keyword">virtual</span> <a class="code" href="../../d5/d49/structez_property_category.htm#a6900b9049e7887fa4b00d16d5eace8cf">ezPropertyCategory::Enum</a> <a class="code" href="../../d3/d48/classez_abstract_map_property.htm#a8999fb55ce5554591e2f023adf8039e9">GetCategory</a>()<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> <a class="code" href="../../d5/d49/structez_property_category.htm#a6900b9049e7887fa4b00d16d5eace8cfa6dd3b0e2fa23af50f7224edbc1b77cfb">ezPropertyCategory::Map</a>; }</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160; </div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">bool</span> IsEmpty(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance) <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160; </div>
<div class="line"><a name="l00364"></a><span class="lineno">  364</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> Clear(<span class="keywordtype">void</span>* pInstance) = 0;</div>
<div class="line"><a name="l00365"></a><span class="lineno">  365</span>&#160; </div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> Insert(<span class="keywordtype">void</span>* pInstance, <span class="keyword">const</span> <span class="keywordtype">char</span>* szKey, <span class="keyword">const</span> <span class="keywordtype">void</span>* pObject) = 0;</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160; </div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> Remove(<span class="keywordtype">void</span>* pInstance, <span class="keyword">const</span> <span class="keywordtype">char</span>* szKey) = 0;</div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160; </div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">bool</span> Contains(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance, <span class="keyword">const</span> <span class="keywordtype">char</span>* szKey) <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160; </div>
<div class="line"><a name="l00376"></a><span class="lineno">  376</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">bool</span> GetValue(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance, <span class="keyword">const</span> <span class="keywordtype">char</span>* szKey, <span class="keywordtype">void</span>* pObject) <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00377"></a><span class="lineno">  377</span>&#160; </div>
<div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> GetKeys(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance, <a class="code" href="../../d8/deb/classez_hybrid_array.htm">ezHybridArray&lt;ezString, 16&gt;</a>&amp; out_keys) <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00380"></a><span class="lineno">  380</span>&#160;};</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160; </div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;<span class="keyword">template</span> &lt;<span class="keywordtype">int</span> _Index, <span class="keyword">class</span>... Args&gt;</div>
<div class="line"><a name="l00384"></a><span class="lineno"><a class="line" href="../../d5/daf/structget_argument.htm">  384</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../d5/daf/structget_argument.htm">getArgument</a>;</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160; </div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class </span>Head, <span class="keyword">class</span>... Tail&gt;</div>
<div class="line"><a name="l00387"></a><span class="lineno"><a class="line" href="../../da/d80/structget_argument_3_010_00_01_head_00_01_tail_8_8_8_01_4.htm">  387</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../d5/daf/structget_argument.htm">getArgument</a>&lt;0, Head, Tail...&gt;</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;{</div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;  <span class="keyword">using</span> Type = Head;</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;};</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160; </div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;<span class="keyword">template</span> &lt;<span class="keywordtype">int</span> _Index, <span class="keyword">class </span>Head, <span class="keyword">class</span>... Tail&gt;</div>
<div class="line"><a name="l00393"></a><span class="lineno"><a class="line" href="../../d5/dfd/structget_argument_3_01___index_00_01_head_00_01_tail_8_8_8_01_4.htm">  393</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../d5/daf/structget_argument.htm">getArgument</a>&lt;_Index, Head, Tail...&gt;</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;{</div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;  <span class="keyword">using</span> Type = <span class="keyword">typename</span> <a class="code" href="../../d5/daf/structget_argument.htm">getArgument</a>&lt;_Index - 1, Tail...&gt;::Type;</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;};</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160; </div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;<span class="keyword">template</span> &lt;<span class="keywordtype">int</span> I, <span class="keyword">typename</span> FUNC&gt;</div>
<div class="line"><a name="l00400"></a><span class="lineno"><a class="line" href="../../d6/db7/structez_function_parameter_type_resolver.htm">  400</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../d6/db7/structez_function_parameter_type_resolver.htm">ezFunctionParameterTypeResolver</a></div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;{</div>
<div class="line"><a name="l00402"></a><span class="lineno">  402</span>&#160;};</div>
<div class="line"><a name="l00403"></a><span class="lineno">  403</span>&#160; </div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;<span class="keyword">template</span> &lt;<span class="keywordtype">int</span> I, <span class="keyword">typename</span> R, <span class="keyword">typename</span>... P&gt;</div>
<div class="line"><a name="l00405"></a><span class="lineno"><a class="line" href="../../d3/d39/structez_function_parameter_type_resolver_3_01_i_00_01_r_07_5_08_07_p_8_8_8_08_4.htm">  405</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../d6/db7/structez_function_parameter_type_resolver.htm">ezFunctionParameterTypeResolver</a>&lt;I, R (*)(P...)&gt;</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160;{</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;  <span class="keyword">enum</span> Constants</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160;  {</div>
<div class="line"><a name="l00409"></a><span class="lineno">  409</span>&#160;    Arguments = <span class="keyword">sizeof</span>...(P),</div>
<div class="line"><a name="l00410"></a><span class="lineno">  410</span>&#160;  };</div>
<div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;  EZ_CHECK_AT_COMPILETIME_MSG(I &lt; Arguments, <span class="stringliteral">&quot;I needs to be smaller than the number of function parameters.&quot;</span>);</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160;  <span class="keyword">using</span> ParameterType = <span class="keyword">typename</span> <a class="code" href="../../d5/daf/structget_argument.htm">getArgument</a>&lt;I, P...&gt;::Type;</div>
<div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;  <span class="keyword">using</span> ReturnType = R;</div>
<div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;};</div>
<div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160; </div>
<div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;<span class="keyword">template</span> &lt;<span class="keywordtype">int</span> I, <span class="keyword">class </span>Class, <span class="keyword">typename</span> R, <span class="keyword">typename</span>... P&gt;</div>
<div class="line"><a name="l00417"></a><span class="lineno"><a class="line" href="../../de/db2/structez_function_parameter_type_resolver_3_01_i_00_01_r_07_class_1_1_5_08_07_p_8_8_8_08_4.htm">  417</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../d6/db7/structez_function_parameter_type_resolver.htm">ezFunctionParameterTypeResolver</a>&lt;I, R (Class::*)(P...)&gt;</div>
<div class="line"><a name="l00418"></a><span class="lineno">  418</span>&#160;{</div>
<div class="line"><a name="l00419"></a><span class="lineno">  419</span>&#160;  <span class="keyword">enum</span> Constants</div>
<div class="line"><a name="l00420"></a><span class="lineno">  420</span>&#160;  {</div>
<div class="line"><a name="l00421"></a><span class="lineno">  421</span>&#160;    Arguments = <span class="keyword">sizeof</span>...(P),</div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;  };</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160;  EZ_CHECK_AT_COMPILETIME_MSG(I &lt; Arguments, <span class="stringliteral">&quot;I needs to be smaller than the number of function parameters.&quot;</span>);</div>
<div class="line"><a name="l00424"></a><span class="lineno">  424</span>&#160;  <span class="keyword">using</span> ParameterType = <span class="keyword">typename</span> <a class="code" href="../../d5/daf/structget_argument.htm">getArgument</a>&lt;I, P...&gt;::Type;</div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;  <span class="keyword">using</span> ReturnType = R;</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160;};</div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160; </div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160;<span class="keyword">template</span> &lt;<span class="keywordtype">int</span> I, <span class="keyword">class </span>Class, <span class="keyword">typename</span> R, <span class="keyword">typename</span>... P&gt;</div>
<div class="line"><a name="l00429"></a><span class="lineno"><a class="line" href="../../da/dcf/structez_function_parameter_type_resolver_3_01_i_00_01_r_07_class_1_1_5_08_07_p_8_8_8_08_01const_01_4.htm">  429</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../d6/db7/structez_function_parameter_type_resolver.htm">ezFunctionParameterTypeResolver</a>&lt;I, R (Class::*)(P...) const&gt;</div>
<div class="line"><a name="l00430"></a><span class="lineno">  430</span>&#160;{</div>
<div class="line"><a name="l00431"></a><span class="lineno">  431</span>&#160;  <span class="keyword">enum</span> Constants</div>
<div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;  {</div>
<div class="line"><a name="l00433"></a><span class="lineno">  433</span>&#160;    Arguments = <span class="keyword">sizeof</span>...(P),</div>
<div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;  };</div>
<div class="line"><a name="l00435"></a><span class="lineno">  435</span>&#160;  EZ_CHECK_AT_COMPILETIME_MSG(I &lt; Arguments, <span class="stringliteral">&quot;I needs to be smaller than the number of function parameters.&quot;</span>);</div>
<div class="line"><a name="l00436"></a><span class="lineno">  436</span>&#160;  <span class="keyword">using</span> ParameterType = <span class="keyword">typename</span> <a class="code" href="../../d5/daf/structget_argument.htm">getArgument</a>&lt;I, P...&gt;::Type;</div>
<div class="line"><a name="l00437"></a><span class="lineno">  437</span>&#160;  <span class="keyword">using</span> ReturnType = R;</div>
<div class="line"><a name="l00438"></a><span class="lineno">  438</span>&#160;};</div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160; </div>
<div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> FUNC&gt;</div>
<div class="line"><a name="l00442"></a><span class="lineno"><a class="line" href="../../d3/d26/structez_member_function_parameter_type_resolver.htm">  442</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../d3/d26/structez_member_function_parameter_type_resolver.htm">ezMemberFunctionParameterTypeResolver</a></div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;{</div>
<div class="line"><a name="l00444"></a><span class="lineno">  444</span>&#160;};</div>
<div class="line"><a name="l00445"></a><span class="lineno">  445</span>&#160; </div>
<div class="line"><a name="l00446"></a><span class="lineno">  446</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">class</span> Class, <span class="keyword">typename</span> R, <span class="keyword">typename</span> P&gt;</div>
<div class="line"><a name="l00447"></a><span class="lineno"><a class="line" href="../../d0/dce/structez_member_function_parameter_type_resolver_3_01_r_07_class_1_1_5_08_07_p_08_4.htm">  447</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../d3/d26/structez_member_function_parameter_type_resolver.htm">ezMemberFunctionParameterTypeResolver</a>&lt;R (Class::*)(P)&gt;</div>
<div class="line"><a name="l00448"></a><span class="lineno">  448</span>&#160;{</div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;  <span class="keyword">using</span> ParameterType = P;</div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160;  <span class="keyword">using</span> ReturnType = R;</div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;};</div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160; </div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> CONTAINER&gt;</div>
<div class="line"><a name="l00455"></a><span class="lineno"><a class="line" href="../../d7/db6/structez_container_sub_type_resolver.htm">  455</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../d7/db6/structez_container_sub_type_resolver.htm">ezContainerSubTypeResolver</a></div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;{</div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;};</div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160; </div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00460"></a><span class="lineno"><a class="line" href="../../de/d72/structez_container_sub_type_resolver_3_01ez_array_ptr_3_01_t_01_4_01_4.htm">  460</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../d7/db6/structez_container_sub_type_resolver.htm">ezContainerSubTypeResolver</a>&lt;<a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt;T&gt;&gt;</div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;{</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;  <span class="keyword">using</span> Type = <span class="keyword">typename</span> <a class="code" href="../../d1/d32/structez_type_traits.htm#af2051eb05a731b9618b107540f8f46f8">ezTypeTraits&lt;T&gt;::NonConstReferenceType</a>;</div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;};</div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160; </div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00466"></a><span class="lineno"><a class="line" href="../../d8/d44/structez_container_sub_type_resolver_3_01ez_dynamic_array_3_01_t_01_4_01_4.htm">  466</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../d7/db6/structez_container_sub_type_resolver.htm">ezContainerSubTypeResolver</a>&lt;<a class="code" href="../../d2/d4f/classez_dynamic_array.htm">ezDynamicArray</a>&lt;T&gt;&gt;</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;{</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;  <span class="keyword">using</span> Type = <span class="keyword">typename</span> <a class="code" href="../../d1/d32/structez_type_traits.htm#af2051eb05a731b9618b107540f8f46f8">ezTypeTraits&lt;T&gt;::NonConstReferenceType</a>;</div>
<div class="line"><a name="l00469"></a><span class="lineno">  469</span>&#160;};</div>
<div class="line"><a name="l00470"></a><span class="lineno">  470</span>&#160; </div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, ezUInt32 Size&gt;</div>
<div class="line"><a name="l00472"></a><span class="lineno"><a class="line" href="../../d4/d54/structez_container_sub_type_resolver_3_01ez_hybrid_array_3_01_t_00_01_size_01_4_01_4.htm">  472</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../d7/db6/structez_container_sub_type_resolver.htm">ezContainerSubTypeResolver</a>&lt;<a class="code" href="../../d8/deb/classez_hybrid_array.htm">ezHybridArray</a>&lt;T, Size&gt;&gt;</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;{</div>
<div class="line"><a name="l00474"></a><span class="lineno">  474</span>&#160;  <span class="keyword">using</span> Type = <span class="keyword">typename</span> <a class="code" href="../../d1/d32/structez_type_traits.htm#af2051eb05a731b9618b107540f8f46f8">ezTypeTraits&lt;T&gt;::NonConstReferenceType</a>;</div>
<div class="line"><a name="l00475"></a><span class="lineno">  475</span>&#160;};</div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160; </div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, ezUInt32 Size&gt;</div>
<div class="line"><a name="l00478"></a><span class="lineno"><a class="line" href="../../d0/df0/structez_container_sub_type_resolver_3_01ez_static_array_3_01_t_00_01_size_01_4_01_4.htm">  478</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../d7/db6/structez_container_sub_type_resolver.htm">ezContainerSubTypeResolver</a>&lt;<a class="code" href="../../df/d5c/classez_static_array.htm">ezStaticArray</a>&lt;T, Size&gt;&gt;</div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;{</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;  <span class="keyword">using</span> Type = <span class="keyword">typename</span> <a class="code" href="../../d1/d32/structez_type_traits.htm#af2051eb05a731b9618b107540f8f46f8">ezTypeTraits&lt;T&gt;::NonConstReferenceType</a>;</div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;};</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160; </div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, ezUInt16 Size&gt;</div>
<div class="line"><a name="l00484"></a><span class="lineno"><a class="line" href="../../df/d05/structez_container_sub_type_resolver_3_01ez_small_array_3_01_t_00_01_size_01_4_01_4.htm">  484</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../d7/db6/structez_container_sub_type_resolver.htm">ezContainerSubTypeResolver</a>&lt;<a class="code" href="../../d0/d0c/classez_small_array.htm">ezSmallArray</a>&lt;T, Size&gt;&gt;</div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;{</div>
<div class="line"><a name="l00486"></a><span class="lineno">  486</span>&#160;  <span class="keyword">using</span> Type = <span class="keyword">typename</span> <a class="code" href="../../d1/d32/structez_type_traits.htm#af2051eb05a731b9618b107540f8f46f8">ezTypeTraits&lt;T&gt;::NonConstReferenceType</a>;</div>
<div class="line"><a name="l00487"></a><span class="lineno">  487</span>&#160;};</div>
<div class="line"><a name="l00488"></a><span class="lineno">  488</span>&#160; </div>
<div class="line"><a name="l00489"></a><span class="lineno">  489</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00490"></a><span class="lineno"><a class="line" href="../../de/d99/structez_container_sub_type_resolver_3_01ez_deque_3_01_t_01_4_01_4.htm">  490</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../d7/db6/structez_container_sub_type_resolver.htm">ezContainerSubTypeResolver</a>&lt;<a class="code" href="../../d9/dfe/classez_deque.htm">ezDeque</a>&lt;T&gt;&gt;</div>
<div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;{</div>
<div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;  <span class="keyword">using</span> Type = <span class="keyword">typename</span> <a class="code" href="../../d1/d32/structez_type_traits.htm#af2051eb05a731b9618b107540f8f46f8">ezTypeTraits&lt;T&gt;::NonConstReferenceType</a>;</div>
<div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;};</div>
<div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160; </div>
<div class="line"><a name="l00495"></a><span class="lineno">  495</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00496"></a><span class="lineno"><a class="line" href="../../da/df0/structez_container_sub_type_resolver_3_01ez_set_3_01_t_01_4_01_4.htm">  496</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../d7/db6/structez_container_sub_type_resolver.htm">ezContainerSubTypeResolver</a>&lt;<a class="code" href="../../d0/d90/classez_set.htm">ezSet</a>&lt;T&gt;&gt;</div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;{</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;  <span class="keyword">using</span> Type = <span class="keyword">typename</span> <a class="code" href="../../d1/d32/structez_type_traits.htm#af2051eb05a731b9618b107540f8f46f8">ezTypeTraits&lt;T&gt;::NonConstReferenceType</a>;</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;};</div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160; </div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00502"></a><span class="lineno"><a class="line" href="../../d1/d87/structez_container_sub_type_resolver_3_01ez_hash_set_3_01_t_01_4_01_4.htm">  502</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../d7/db6/structez_container_sub_type_resolver.htm">ezContainerSubTypeResolver</a>&lt;<a class="code" href="../../d7/dfc/classez_hash_set.htm">ezHashSet</a>&lt;T&gt;&gt;</div>
<div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;{</div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;  <span class="keyword">using</span> Type = <span class="keyword">typename</span> <a class="code" href="../../d1/d32/structez_type_traits.htm#af2051eb05a731b9618b107540f8f46f8">ezTypeTraits&lt;T&gt;::NonConstReferenceType</a>;</div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;};</div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160; </div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> K, <span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00508"></a><span class="lineno"><a class="line" href="../../d7/d53/structez_container_sub_type_resolver_3_01ez_hash_table_3_01_k_00_01_t_01_4_01_4.htm">  508</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../d7/db6/structez_container_sub_type_resolver.htm">ezContainerSubTypeResolver</a>&lt;<a class="code" href="../../d8/d86/classez_hash_table.htm">ezHashTable</a>&lt;K, T&gt;&gt;</div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;{</div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;  <span class="keyword">using</span> Type = <span class="keyword">typename</span> <a class="code" href="../../d1/d32/structez_type_traits.htm#af2051eb05a731b9618b107540f8f46f8">ezTypeTraits&lt;T&gt;::NonConstReferenceType</a>;</div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;};</div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160; </div>
<div class="line"><a name="l00513"></a><span class="lineno">  513</span>&#160;<span class="keyword">template</span> &lt;<span class="keyword">typename</span> K, <span class="keyword">typename</span> T&gt;</div>
<div class="line"><a name="l00514"></a><span class="lineno"><a class="line" href="../../dc/dc8/structez_container_sub_type_resolver_3_01ez_map_3_01_k_00_01_t_01_4_01_4.htm">  514</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../d7/db6/structez_container_sub_type_resolver.htm">ezContainerSubTypeResolver</a>&lt;<a class="code" href="../../d1/d79/classez_map.htm">ezMap</a>&lt;K, T&gt;&gt;</div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;{</div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;  <span class="keyword">using</span> Type = <span class="keyword">typename</span> <a class="code" href="../../d1/d32/structez_type_traits.htm#af2051eb05a731b9618b107540f8f46f8">ezTypeTraits&lt;T&gt;::NonConstReferenceType</a>;</div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160;};</div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160; </div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160; </div>
<div class="line"><a name="l00521"></a><span class="lineno"><a class="line" href="../../d6/dbb/structez_function_type.htm">  521</a></span>&#160;<span class="keyword">struct </span><a class="code" href="../../d6/dbb/structez_function_type.htm">ezFunctionType</a></div>
<div class="line"><a name="l00522"></a><span class="lineno">  522</span>&#160;{</div>
<div class="line"><a name="l00523"></a><span class="lineno">  523</span>&#160;  <span class="keyword">using</span> StorageType = ezUInt8;</div>
<div class="line"><a name="l00524"></a><span class="lineno">  524</span>&#160; </div>
<div class="line"><a name="l00525"></a><span class="lineno"><a class="line" href="../../d6/dbb/structez_function_type.htm#a13bed06180e1a399e5d28f38d33a3f36">  525</a></span>&#160;  <span class="keyword">enum</span> <a class="code" href="../../d6/dbb/structez_function_type.htm#a13bed06180e1a399e5d28f38d33a3f36">Enum</a></div>
<div class="line"><a name="l00526"></a><span class="lineno">  526</span>&#160;  {</div>
<div class="line"><a name="l00527"></a><span class="lineno"><a class="line" href="../../d6/dbb/structez_function_type.htm#a13bed06180e1a399e5d28f38d33a3f36aaf3aadc0978b473c98c2fa799b8fd43a">  527</a></span>&#160;    <a class="code" href="../../d6/dbb/structez_function_type.htm#a13bed06180e1a399e5d28f38d33a3f36aaf3aadc0978b473c98c2fa799b8fd43a">Member</a>,       </div>
<div class="line"><a name="l00528"></a><span class="lineno"><a class="line" href="../../d6/dbb/structez_function_type.htm#a13bed06180e1a399e5d28f38d33a3f36a70487f04e61182c5f523c053645e8e3f">  528</a></span>&#160;    <a class="code" href="../../d6/dbb/structez_function_type.htm#a13bed06180e1a399e5d28f38d33a3f36a70487f04e61182c5f523c053645e8e3f">StaticMember</a>, </div>
<div class="line"><a name="l00529"></a><span class="lineno"><a class="line" href="../../d6/dbb/structez_function_type.htm#a13bed06180e1a399e5d28f38d33a3f36a31850807ecb6a3b574625a4c7a7d1d1a">  529</a></span>&#160;    <a class="code" href="../../d6/dbb/structez_function_type.htm#a13bed06180e1a399e5d28f38d33a3f36a31850807ecb6a3b574625a4c7a7d1d1a">Constructor</a>,  </div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;    Default = <a class="code" href="../../d6/dbb/structez_function_type.htm#a13bed06180e1a399e5d28f38d33a3f36aaf3aadc0978b473c98c2fa799b8fd43a">Member</a></div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;  };</div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160;};</div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160; </div>
<div class="line"><a name="l00535"></a><span class="lineno"><a class="line" href="../../d3/d4c/classez_abstract_function_property.htm">  535</a></span>&#160;<span class="keyword">class </span><a class="code" href="../../d3/d4c/classez_abstract_function_property.htm">ezAbstractFunctionProperty</a> : <span class="keyword">public</span> <a class="code" href="../../d6/d81/classez_abstract_property.htm">ezAbstractProperty</a></div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;{</div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;<span class="keyword">public</span>:</div>
<div class="line"><a name="l00539"></a><span class="lineno"><a class="line" href="../../d3/d4c/classez_abstract_function_property.htm#a2e7ca0bbfce4b60e6a346769ddbd2ea0">  539</a></span>&#160;  <a class="code" href="../../d3/d4c/classez_abstract_function_property.htm#a2e7ca0bbfce4b60e6a346769ddbd2ea0">ezAbstractFunctionProperty</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szPropertyName)</div>
<div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;    : <a class="code" href="../../d6/d81/classez_abstract_property.htm">ezAbstractProperty</a>(szPropertyName)</div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;  {</div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;  }</div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160; </div>
<div class="line"><a name="l00544"></a><span class="lineno"><a class="line" href="../../d3/d4c/classez_abstract_function_property.htm#a8f02f21d2e947e71578054b08cb491d0">  544</a></span>&#160;  <span class="keyword">virtual</span> <a class="code" href="../../d5/d49/structez_property_category.htm#a6900b9049e7887fa4b00d16d5eace8cf">ezPropertyCategory::Enum</a> <a class="code" href="../../d3/d4c/classez_abstract_function_property.htm#a8f02f21d2e947e71578054b08cb491d0">GetCategory</a>()<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> <a class="code" href="../../d5/d49/structez_property_category.htm#a6900b9049e7887fa4b00d16d5eace8cfa873e619e6a6ee65e2a5f21e758ccd4a7">ezPropertyCategory::Function</a>; }</div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;  <span class="keyword">virtual</span> <a class="code" href="../../d6/dbb/structez_function_type.htm#a13bed06180e1a399e5d28f38d33a3f36">ezFunctionType::Enum</a> <a class="code" href="../../d3/d4c/classez_abstract_function_property.htm#a8f06b1ada9536c9ad91d6f097f2c570b">GetFunctionType</a>() <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;  <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* <a class="code" href="../../d3/d4c/classez_abstract_function_property.htm#a96fa71d448750c551337da9a8a522f3e">GetReturnType</a>() <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;  <span class="keyword">virtual</span> <a class="code" href="../../d1/dec/structez_bitflags.htm">ezBitflags&lt;ezPropertyFlags&gt;</a> <a class="code" href="../../d3/d4c/classez_abstract_function_property.htm#a5cc58b5083aa2a2aba5a671afd0f77fa">GetReturnFlags</a>() <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;  <span class="keyword">virtual</span> ezUInt32 <a class="code" href="../../d3/d4c/classez_abstract_function_property.htm#a1f18213c668db11e5364fe91407cc237">GetArgumentCount</a>() <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;  <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* <a class="code" href="../../d3/d4c/classez_abstract_function_property.htm#a44f615254b0c89bac219c97c28966f7b">GetArgumentType</a>(ezUInt32 uiParamIndex) <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;  <span class="keyword">virtual</span> <a class="code" href="../../d1/dec/structez_bitflags.htm">ezBitflags&lt;ezPropertyFlags&gt;</a> <a class="code" href="../../d3/d4c/classez_abstract_function_property.htm#a7f447edfc2443935b8e56455fe81e5f5">GetArgumentFlags</a>(ezUInt32 uiParamIndex) <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160; </div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="../../d3/d4c/classez_abstract_function_property.htm#ad8f168014dc7d8866da2544c96b80955">Execute</a>(<span class="keywordtype">void</span>* pInstance, <a class="code" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr&lt;ezVariant&gt;</a> arguments, <a class="code" href="../../de/de6/classez_variant.htm">ezVariant</a>&amp; returnValue) <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160; </div>
<div class="line"><a name="l00571"></a><span class="lineno"><a class="line" href="../../d3/d4c/classez_abstract_function_property.htm#a451568631f40eb1334d8c5ea4876f627">  571</a></span>&#160;  <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code" href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a>* <a class="code" href="../../d3/d4c/classez_abstract_function_property.htm#a451568631f40eb1334d8c5ea4876f627">GetSpecificType</a>()<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> <a class="code" href="../../d3/d4c/classez_abstract_function_property.htm#a96fa71d448750c551337da9a8a522f3e">GetReturnType</a>(); }</div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;};</div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<div class="ttc" id="aclassez_abstract_function_property_htm_a96fa71d448750c551337da9a8a522f3e"><div class="ttname"><a href="../../d3/d4c/classez_abstract_function_property.htm#a96fa71d448750c551337da9a8a522f3e">ezAbstractFunctionProperty::GetReturnType</a></div><div class="ttdeci">virtual const ezRTTI * GetReturnType() const =0</div><div class="ttdoc">Returns the type of the return value.</div></div>
<div class="ttc" id="aclassez_abstract_set_property_htm"><div class="ttname"><a href="../../d9/dc6/classez_abstract_set_property.htm">ezAbstractSetProperty</a></div><div class="ttdoc">The base class for a property that represents a set of values.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:313</div></div>
<div class="ttc" id="astructez_property_category_htm_a6900b9049e7887fa4b00d16d5eace8cfa83adeecf73ec8bb2d142c4c46d270862"><div class="ttname"><a href="../../d5/d49/structez_property_category.htm#a6900b9049e7887fa4b00d16d5eace8cfa83adeecf73ec8bb2d142c4c46d270862">ezPropertyCategory::Array</a></div><div class="ttdeci">@ Array</div><div class="ttdoc">The property is actually an array of values. The array dimensions might be changeable....</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:143</div></div>
<div class="ttc" id="astructez_variant_type_htm_a91ecf53decb31d57981c71043fa30299ac4af591f48624b00a42223fa8ecb2c97"><div class="ttname"><a href="../../da/d6c/structez_variant_type.htm#a91ecf53decb31d57981c71043fa30299ac4af591f48624b00a42223fa8ecb2c97">ezVariantType::FirstStandardType</a></div><div class="ttdeci">@ FirstStandardType</div><div class="ttdoc">*** Types that are flagged as 'StandardTypes' (see DetermineTypeFlags) ***</div><div class="ttdef"><b>Definition:</b> VariantType.h:30</div></div>
<div class="ttc" id="astructez_type_traits_htm_af2051eb05a731b9618b107540f8f46f8"><div class="ttname"><a href="../../d1/d32/structez_type_traits.htm#af2051eb05a731b9618b107540f8f46f8">ezTypeTraits::NonConstReferenceType</a></div><div class="ttdeci">typename std::remove_const&lt; typename std::remove_reference&lt; T &gt;::type &gt;::type NonConstReferenceType</div><div class="ttdoc">removes reference and const qualifier</div><div class="ttdef"><b>Definition:</b> TypeTraits.h:220</div></div>
<div class="ttc" id="astructez_property_flags_htm"><div class="ttname"><a href="../../d2/da3/structez_property_flags.htm">ezPropertyFlags</a></div><div class="ttdoc">Flags used to describe a property and its type.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:47</div></div>
<div class="ttc" id="astructez_bitflags_htm"><div class="ttname"><a href="../../d1/dec/structez_bitflags.htm">ezBitflags</a></div><div class="ttdoc">The ezBitflags class allows you to work with type-safe bitflags.</div><div class="ttdef"><b>Definition:</b> Bitflags.h:80</div></div>
<div class="ttc" id="aclassez_set_htm"><div class="ttname"><a href="../../d0/d90/classez_set.htm">ezSet</a></div><div class="ttdef"><b>Definition:</b> Set.h:237</div></div>
<div class="ttc" id="astructez_function_type_htm"><div class="ttname"><a href="../../d6/dbb/structez_function_type.htm">ezFunctionType</a></div><div class="ttdoc">Describes what kind of function a property is.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:521</div></div>
<div class="ttc" id="aclassez_abstract_map_property_htm"><div class="ttname"><a href="../../d3/d48/classez_abstract_map_property.htm">ezAbstractMapProperty</a></div><div class="ttdoc">The base class for a property that represents a set of values.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:348</div></div>
<div class="ttc" id="astructez_function_type_htm_a13bed06180e1a399e5d28f38d33a3f36a70487f04e61182c5f523c053645e8e3f"><div class="ttname"><a href="../../d6/dbb/structez_function_type.htm#a13bed06180e1a399e5d28f38d33a3f36a70487f04e61182c5f523c053645e8e3f">ezFunctionType::StaticMember</a></div><div class="ttdeci">@ StaticMember</div><div class="ttdoc">A static member function, instance pointer will be ignored.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:528</div></div>
<div class="ttc" id="aclassez_abstract_function_property_htm_a451568631f40eb1334d8c5ea4876f627"><div class="ttname"><a href="../../d3/d4c/classez_abstract_function_property.htm#a451568631f40eb1334d8c5ea4876f627">ezAbstractFunctionProperty::GetSpecificType</a></div><div class="ttdeci">virtual const ezRTTI * GetSpecificType() const override</div><div class="ttdoc">Returns the type information of the constant property. Use this to cast this property to a specific v...</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:571</div></div>
<div class="ttc" id="aclassez_r_t_t_i_htm"><div class="ttname"><a href="../../dd/d19/classez_r_t_t_i.htm">ezRTTI</a></div><div class="ttdoc">This enumerable class holds information about reflected types. Each instance represents one type that...</div><div class="ttdef"><b>Definition:</b> RTTI.h:30</div></div>
<div class="ttc" id="aclassez_abstract_array_property_htm"><div class="ttname"><a href="../../dc/dfb/classez_abstract_array_property.htm">ezAbstractArrayProperty</a></div><div class="ttdoc">The base class for a property that represents an array of values.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:275</div></div>
<div class="ttc" id="aclassez_deque_htm"><div class="ttname"><a href="../../d9/dfe/classez_deque.htm">ezDeque</a></div><div class="ttdef"><b>Definition:</b> Deque.h:269</div></div>
<div class="ttc" id="astructez_variant_type_htm_a91ecf53decb31d57981c71043fa30299"><div class="ttname"><a href="../../da/d6c/structez_variant_type.htm#a91ecf53decb31d57981c71043fa30299">ezVariantType::Enum</a></div><div class="ttdeci">Enum</div><div class="ttdoc">This enum describes the type of data that is currently stored inside the variant. Note that changes t...</div><div class="ttdef"><b>Definition:</b> VariantType.h:25</div></div>
<div class="ttc" id="astructez_property_category_htm_a6900b9049e7887fa4b00d16d5eace8cfa7d7111eba91893f2f08a578912ef57d3"><div class="ttname"><a href="../../d5/d49/structez_property_category.htm#a6900b9049e7887fa4b00d16d5eace8cfa7d7111eba91893f2f08a578912ef57d3">ezPropertyCategory::Set</a></div><div class="ttdeci">@ Set</div><div class="ttdoc">The property is actually a set of values. Cast to ezAbstractArrayProperty.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:144</div></div>
<div class="ttc" id="aclassez_abstract_member_property_htm"><div class="ttname"><a href="../../da/d67/classez_abstract_member_property.htm">ezAbstractMemberProperty</a></div><div class="ttdoc">This is the base class for all properties that are members of a class. It provides more information a...</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:239</div></div>
<div class="ttc" id="aclassez_abstract_function_property_htm_ad8f168014dc7d8866da2544c96b80955"><div class="ttname"><a href="../../d3/d4c/classez_abstract_function_property.htm#ad8f168014dc7d8866da2544c96b80955">ezAbstractFunctionProperty::Execute</a></div><div class="ttdeci">virtual void Execute(void *pInstance, ezArrayPtr&lt; ezVariant &gt; arguments, ezVariant &amp;returnValue) const =0</div><div class="ttdoc">Calls the function. Provide the instance on which the function is supposed to be called.</div></div>
<div class="ttc" id="aclassez_abstract_function_property_htm_a2e7ca0bbfce4b60e6a346769ddbd2ea0"><div class="ttname"><a href="../../d3/d4c/classez_abstract_function_property.htm#a2e7ca0bbfce4b60e6a346769ddbd2ea0">ezAbstractFunctionProperty::ezAbstractFunctionProperty</a></div><div class="ttdeci">ezAbstractFunctionProperty(const char *szPropertyName)</div><div class="ttdoc">Passes the property name through to ezAbstractProperty.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:539</div></div>
<div class="ttc" id="astructez_bitflags_htm_aaa83c1e77b70d0b549604a64c20f8a83"><div class="ttname"><a href="../../d1/dec/structez_bitflags.htm#aaa83c1e77b70d0b549604a64c20f8a83">ezBitflags::Add</a></div><div class="ttdeci">EZ_ALWAYS_INLINE void Add(const ezBitflags&lt; T &gt; &amp;rhs)</div><div class="ttdoc">Sets the given flag.</div><div class="ttdef"><b>Definition:</b> Bitflags.h:148</div></div>
<div class="ttc" id="astructez_is_enum_htm"><div class="ttname"><a href="../../d5/d8e/structez_is_enum.htm">ezIsEnum</a></div><div class="ttdoc">Determines whether a type is ezIsBitflags.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:35</div></div>
<div class="ttc" id="aclassez_abstract_member_property_htm_a61bc7051bc6b7b65192f513b7e820036"><div class="ttname"><a href="../../da/d67/classez_abstract_member_property.htm#a61bc7051bc6b7b65192f513b7e820036">ezAbstractMemberProperty::ezAbstractMemberProperty</a></div><div class="ttdeci">ezAbstractMemberProperty(const char *szPropertyName)</div><div class="ttdoc">Passes the property name through to ezAbstractProperty.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:243</div></div>
<div class="ttc" id="aclassez_abstract_array_property_htm_a54d83354c7d25e4fba72d398f9456713"><div class="ttname"><a href="../../dc/dfb/classez_abstract_array_property.htm#a54d83354c7d25e4fba72d398f9456713">ezAbstractArrayProperty::GetCategory</a></div><div class="ttdeci">virtual ezPropertyCategory::Enum GetCategory() const override</div><div class="ttdoc">Returns ezPropertyCategory::Array.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:285</div></div>
<div class="ttc" id="astructez_container_sub_type_resolver_htm"><div class="ttname"><a href="../../d7/db6/structez_container_sub_type_resolver.htm">ezContainerSubTypeResolver</a></div><div class="ttdoc">Template that allows to probe a container for its element type.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:455</div></div>
<div class="ttc" id="astructez_property_flags_htm_a3c2cffe365eb84e9e31c93491fcf852faa833edfbd1893edccf523f51306c76cc"><div class="ttname"><a href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852faa833edfbd1893edccf523f51306c76cc">ezPropertyFlags::Bitflags</a></div><div class="ttdeci">@ Bitflags</div><div class="ttdoc">Bitflags property, cast to ezAbstractEnumerationProperty.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:55</div></div>
<div class="ttc" id="aclassez_abstract_constant_property_htm"><div class="ttname"><a href="../../d8/d53/classez_abstract_constant_property.htm">ezAbstractConstantProperty</a></div><div class="ttdoc">This is the base class for all constant properties that are stored inside the RTTI data.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:215</div></div>
<div class="ttc" id="astructez_function_type_htm_a13bed06180e1a399e5d28f38d33a3f36"><div class="ttname"><a href="../../d6/dbb/structez_function_type.htm#a13bed06180e1a399e5d28f38d33a3f36">ezFunctionType::Enum</a></div><div class="ttdeci">Enum</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:525</div></div>
<div class="ttc" id="astructget_argument_htm"><div class="ttname"><a href="../../d5/daf/structget_argument.htm">getArgument</a></div><div class="ttdoc">Use getArgument&lt;N, Args...&gt;::Type to get the type of the Nth argument in Args.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:384</div></div>
<div class="ttc" id="aclassez_abstract_set_property_htm_a66b2ad9bd143e86a50e086442de19982"><div class="ttname"><a href="../../d9/dc6/classez_abstract_set_property.htm#a66b2ad9bd143e86a50e086442de19982">ezAbstractSetProperty::ezAbstractSetProperty</a></div><div class="ttdeci">ezAbstractSetProperty(const char *szPropertyName)</div><div class="ttdoc">Passes the property name through to ezAbstractProperty.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:317</div></div>
<div class="ttc" id="aclassez_array_ptr_htm"><div class="ttname"><a href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a></div><div class="ttdoc">This class encapsulates an array and it's size. It is recommended to use this class instead of plain ...</div><div class="ttdef"><b>Definition:</b> ArrayPtr.h:36</div></div>
<div class="ttc" id="astructez_variant_type_deduction_htm"><div class="ttname"><a href="../../df/da8/structez_variant_type_deduction.htm">ezVariantTypeDeduction</a></div><div class="ttdoc">A helper struct to convert the C++ type, which is passed as the template argument,...</div><div class="ttdef"><b>Definition:</b> VariantType.h:94</div></div>
<div class="ttc" id="aclassez_abstract_property_htm_a978bb805adf38827ef6485801fb25341"><div class="ttname"><a href="../../d6/d81/classez_abstract_property.htm#a978bb805adf38827ef6485801fb25341">ezAbstractProperty::GetPropertyName</a></div><div class="ttdeci">const char * GetPropertyName() const</div><div class="ttdoc">Returns the name of the property.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:161</div></div>
<div class="ttc" id="aclassez_abstract_property_htm_a9f823cb935524098cc4c08e2351b43be"><div class="ttname"><a href="../../d6/d81/classez_abstract_property.htm#a9f823cb935524098cc4c08e2351b43be">ezAbstractProperty::ezAbstractProperty</a></div><div class="ttdeci">ezAbstractProperty(const char *szPropertyName)</div><div class="ttdoc">The constructor must get the name of the property. The string must be a compile-time constant.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:156</div></div>
<div class="ttc" id="astructez_property_category_htm_a6900b9049e7887fa4b00d16d5eace8cfa7a6cb2df5f2963d94c97d03c4855de57"><div class="ttname"><a href="../../d5/d49/structez_property_category.htm#a6900b9049e7887fa4b00d16d5eace8cfa7a6cb2df5f2963d94c97d03c4855de57">ezPropertyCategory::Constant</a></div><div class="ttdeci">@ Constant</div><div class="ttdoc">The property is a constant value that is stored inside the RTTI data.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:140</div></div>
<div class="ttc" id="astructez_member_function_parameter_type_resolver_htm"><div class="ttname"><a href="../../d3/d26/structez_member_function_parameter_type_resolver.htm">ezMemberFunctionParameterTypeResolver</a></div><div class="ttdoc">Template that allows to probe a single parameter function for parameter and return type.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:442</div></div>
<div class="ttc" id="astructez_property_flags_htm_a3c2cffe365eb84e9e31c93491fcf852fac903a68a0ee9fef9284345de660cce31"><div class="ttname"><a href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852fac903a68a0ee9fef9284345de660cce31">ezPropertyFlags::Pointer</a></div><div class="ttdeci">@ Pointer</div><div class="ttdoc">Property value is a pointer.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:60</div></div>
<div class="ttc" id="aclassez_abstract_constant_property_htm_aae9961eeae84381885a5ca7636615549"><div class="ttname"><a href="../../d8/d53/classez_abstract_constant_property.htm#aae9961eeae84381885a5ca7636615549">ezAbstractConstantProperty::GetCategory</a></div><div class="ttdeci">virtual ezPropertyCategory::Enum GetCategory() const override</div><div class="ttdoc">Returns ezPropertyCategory::Constant.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:225</div></div>
<div class="ttc" id="astructez_property_category_htm"><div class="ttname"><a href="../../d5/d49/structez_property_category.htm">ezPropertyCategory</a></div><div class="ttdoc">Describes what category a property belongs to.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:134</div></div>
<div class="ttc" id="astructez_property_category_htm_a6900b9049e7887fa4b00d16d5eace8cfa873e619e6a6ee65e2a5f21e758ccd4a7"><div class="ttname"><a href="../../d5/d49/structez_property_category.htm#a6900b9049e7887fa4b00d16d5eace8cfa873e619e6a6ee65e2a5f21e758ccd4a7">ezPropertyCategory::Function</a></div><div class="ttdeci">@ Function</div><div class="ttdoc">The property is a function which can be called. Cast to ezAbstractFunctionProperty.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:142</div></div>
<div class="ttc" id="aclassez_abstract_map_property_htm_a417cc414770a81ba1e4b4318af6b8dbc"><div class="ttname"><a href="../../d3/d48/classez_abstract_map_property.htm#a417cc414770a81ba1e4b4318af6b8dbc">ezAbstractMapProperty::ezAbstractMapProperty</a></div><div class="ttdeci">ezAbstractMapProperty(const char *szPropertyName)</div><div class="ttdoc">Passes the property name through to ezAbstractProperty.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:352</div></div>
<div class="ttc" id="aclassez_abstract_function_property_htm_a5cc58b5083aa2a2aba5a671afd0f77fa"><div class="ttname"><a href="../../d3/d4c/classez_abstract_function_property.htm#a5cc58b5083aa2a2aba5a671afd0f77fa">ezAbstractFunctionProperty::GetReturnFlags</a></div><div class="ttdeci">virtual ezBitflags&lt; ezPropertyFlags &gt; GetReturnFlags() const =0</div><div class="ttdoc">Returns property flags of the return value.</div></div>
<div class="ttc" id="aclassez_abstract_property_htm_a58f20a9beb3479b679f4241585a16bb8"><div class="ttname"><a href="../../d6/d81/classez_abstract_property.htm#a58f20a9beb3479b679f4241585a16bb8">ezAbstractProperty::AddAttributes</a></div><div class="ttdeci">ezAbstractProperty * AddAttributes(ezPropertyAttribute *pAttrib1, ezPropertyAttribute *pAttrib2=nullptr, ezPropertyAttribute *pAttrib3=nullptr, ezPropertyAttribute *pAttrib4=nullptr, ezPropertyAttribute *pAttrib5=nullptr, ezPropertyAttribute *pAttrib6=nullptr)</div><div class="ttdoc">Adds attributes to the property. Returns itself to allow to be called during initialization....</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:182</div></div>
<div class="ttc" id="aclassez_abstract_function_property_htm_a7f447edfc2443935b8e56455fe81e5f5"><div class="ttname"><a href="../../d3/d4c/classez_abstract_function_property.htm#a7f447edfc2443935b8e56455fe81e5f5">ezAbstractFunctionProperty::GetArgumentFlags</a></div><div class="ttdeci">virtual ezBitflags&lt; ezPropertyFlags &gt; GetArgumentFlags(ezUInt32 uiParamIndex) const =0</div><div class="ttdoc">Returns the property flags of the given argument.</div></div>
<div class="ttc" id="astructez_function_type_htm_a13bed06180e1a399e5d28f38d33a3f36aaf3aadc0978b473c98c2fa799b8fd43a"><div class="ttname"><a href="../../d6/dbb/structez_function_type.htm#a13bed06180e1a399e5d28f38d33a3f36aaf3aadc0978b473c98c2fa799b8fd43a">ezFunctionType::Member</a></div><div class="ttdeci">@ Member</div><div class="ttdoc">A normal member function, a valid instance pointer must be provided to call.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:527</div></div>
<div class="ttc" id="aclassez_abstract_function_property_htm_a8f06b1ada9536c9ad91d6f097f2c570b"><div class="ttname"><a href="../../d3/d4c/classez_abstract_function_property.htm#a8f06b1ada9536c9ad91d6f097f2c570b">ezAbstractFunctionProperty::GetFunctionType</a></div><div class="ttdeci">virtual ezFunctionType::Enum GetFunctionType() const =0</div><div class="ttdoc">Returns the type of function, see ezFunctionPropertyType::Enum.</div></div>
<div class="ttc" id="astructez_property_category_htm_a6900b9049e7887fa4b00d16d5eace8cfae8a16ea65b820b392e7480a87375f651"><div class="ttname"><a href="../../d5/d49/structez_property_category.htm#a6900b9049e7887fa4b00d16d5eace8cfae8a16ea65b820b392e7480a87375f651">ezPropertyCategory::Member</a></div><div class="ttdeci">@ Member</div><div class="ttdoc">The property is a 'member property', i.e. it represents some accessible value. Cast to ezAbstractMemb...</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:141</div></div>
<div class="ttc" id="astructez_property_category_htm_a6900b9049e7887fa4b00d16d5eace8cf"><div class="ttname"><a href="../../d5/d49/structez_property_category.htm#a6900b9049e7887fa4b00d16d5eace8cf">ezPropertyCategory::Enum</a></div><div class="ttdeci">Enum</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:138</div></div>
<div class="ttc" id="aclassez_abstract_array_property_htm_a4a170bb0722e792b9f70f3736e22e190"><div class="ttname"><a href="../../dc/dfb/classez_abstract_array_property.htm#a4a170bb0722e792b9f70f3736e22e190">ezAbstractArrayProperty::ezAbstractArrayProperty</a></div><div class="ttdeci">ezAbstractArrayProperty(const char *szPropertyName)</div><div class="ttdoc">Passes the property name through to ezAbstractProperty.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:279</div></div>
<div class="ttc" id="astructez_type_traits_htm_a9dcee6bb8dad253cbdc804cd45ce22f1"><div class="ttname"><a href="../../d1/d32/structez_type_traits.htm#a9dcee6bb8dad253cbdc804cd45ce22f1">ezTypeTraits::NonConstReferencePointerType</a></div><div class="ttdeci">typename std::remove_const&lt; typename std::remove_reference&lt; typename std::remove_pointer&lt; T &gt;::type &gt;::type &gt;::type NonConstReferencePointerType</div><div class="ttdoc">removes reference, const and pointer qualifier Note that this removes the const and reference of the ...</div><div class="ttdef"><b>Definition:</b> TypeTraits.h:227</div></div>
<div class="ttc" id="astructez_is_bitflags_htm"><div class="ttname"><a href="../../d9/d9f/structez_is_bitflags.htm">ezIsBitflags</a></div><div class="ttdoc">Determines whether a type is ezIsBitflags.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:22</div></div>
<div class="ttc" id="astructez_property_flags_htm_a3c2cffe365eb84e9e31c93491fcf852faacd2cc0185e6220d21182a92dd399ace"><div class="ttname"><a href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852faacd2cc0185e6220d21182a92dd399ace">ezPropertyFlags::Phantom</a></div><div class="ttdeci">@ Phantom</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:65</div></div>
<div class="ttc" id="aclassez_abstract_function_property_htm_a44f615254b0c89bac219c97c28966f7b"><div class="ttname"><a href="../../d3/d4c/classez_abstract_function_property.htm#a44f615254b0c89bac219c97c28966f7b">ezAbstractFunctionProperty::GetArgumentType</a></div><div class="ttdeci">virtual const ezRTTI * GetArgumentType(ezUInt32 uiParamIndex) const =0</div><div class="ttdoc">Returns the type of the given argument.</div></div>
<div class="ttc" id="aclassez_abstract_property_htm_a8c4938948f956e2fcdb2f40eae9104bc"><div class="ttname"><a href="../../d6/d81/classez_abstract_property.htm#a8c4938948f956e2fcdb2f40eae9104bc">ezAbstractProperty::AddFlags</a></div><div class="ttdeci">ezAbstractProperty * AddFlags(ezBitflags&lt; ezPropertyFlags &gt; flags)</div><div class="ttdoc">Adds flags to the property. Returns itself to allow to be called during initialization.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:174</div></div>
<div class="ttc" id="astructez_type_traits_htm_a1da2a2361a3c9ab3a1e8287bc3cf7176"><div class="ttname"><a href="../../d1/d32/structez_type_traits.htm#a1da2a2361a3c9ab3a1e8287bc3cf7176">ezTypeTraits::NonReferencePointerType</a></div><div class="ttdeci">typename std::remove_pointer&lt; typename std::remove_reference&lt; T &gt;::type &gt;::type NonReferencePointerType</div><div class="ttdoc">removes reference and pointer qualifier</div><div class="ttdef"><b>Definition:</b> TypeTraits.h:223</div></div>
<div class="ttc" id="aclassez_hash_set_htm"><div class="ttname"><a href="../../d7/dfc/classez_hash_set.htm">ezHashSet</a></div><div class="ttdef"><b>Definition:</b> HashSet.h:189</div></div>
<div class="ttc" id="aclassez_dynamic_array_htm"><div class="ttname"><a href="../../d2/d4f/classez_dynamic_array.htm">ezDynamicArray&lt; ezVariant &gt;</a></div></div>
<div class="ttc" id="aclassez_abstract_map_property_htm_a8999fb55ce5554591e2f023adf8039e9"><div class="ttname"><a href="../../d3/d48/classez_abstract_map_property.htm#a8999fb55ce5554591e2f023adf8039e9">ezAbstractMapProperty::GetCategory</a></div><div class="ttdeci">virtual ezPropertyCategory::Enum GetCategory() const override</div><div class="ttdoc">Returns ezPropertyCategory::Map.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:358</div></div>
<div class="ttc" id="aclassez_map_htm"><div class="ttname"><a href="../../d1/d79/classez_map.htm">ezMap</a></div><div class="ttdef"><b>Definition:</b> Map.h:328</div></div>
<div class="ttc" id="aclassez_abstract_function_property_htm_a8f02f21d2e947e71578054b08cb491d0"><div class="ttname"><a href="../../d3/d4c/classez_abstract_function_property.htm#a8f02f21d2e947e71578054b08cb491d0">ezAbstractFunctionProperty::GetCategory</a></div><div class="ttdeci">virtual ezPropertyCategory::Enum GetCategory() const override</div><div class="ttdoc">Returns the category of this property. Cast this property to the next higher type for more informatio...</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:544</div></div>
<div class="ttc" id="astructez_property_flags_htm_a3c2cffe365eb84e9e31c93491fcf852fa82e55e1f2e0c5cdf417c4428e8b3a0e1"><div class="ttname"><a href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852fa82e55e1f2e0c5cdf417c4428e8b3a0e1">ezPropertyFlags::IsEnum</a></div><div class="ttdeci">@ IsEnum</div><div class="ttdoc">enum property, cast to ezAbstractEnumerationProperty.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:54</div></div>
<div class="ttc" id="astructez_enum_htm"><div class="ttname"><a href="../../d6/dd9/structez_enum.htm">ezEnum</a></div><div class="ttdoc">A custom enum implementation that allows to define the underlying storage type to control its memory ...</div><div class="ttdef"><b>Definition:</b> Enum.h:36</div></div>
<div class="ttc" id="aclassez_abstract_property_htm_aa9e27b65ecbdd6eb9bfcbcca20714097"><div class="ttname"><a href="../../d6/d81/classez_abstract_property.htm#aa9e27b65ecbdd6eb9bfcbcca20714097">ezAbstractProperty::GetAttributes</a></div><div class="ttdeci">const ezArrayPtr&lt; ezPropertyAttribute *const  &gt; GetAttributes() const</div><div class="ttdoc">Returns the array of property attributes.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:202</div></div>
<div class="ttc" id="astructez_property_flags_1_1_bits_htm"><div class="ttname"><a href="../../d8/df3/structez_property_flags_1_1_bits.htm">ezPropertyFlags::Bits</a></div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:75</div></div>
<div class="ttc" id="aclassez_variant_htm"><div class="ttname"><a href="../../de/de6/classez_variant.htm">ezVariant</a></div><div class="ttdoc">ezVariant is a class that can store different types of variables, which is useful in situations where...</div><div class="ttdef"><b>Definition:</b> Variant.h:45</div></div>
<div class="ttc" id="astructez_property_flags_htm_a3c2cffe365eb84e9e31c93491fcf852fa8b5fa94b8332c173ae6f6f178619a206"><div class="ttname"><a href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852fa8b5fa94b8332c173ae6f6f178619a206">ezPropertyFlags::Reference</a></div><div class="ttdeci">@ Reference</div><div class="ttdoc">Property value is a reference.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:59</div></div>
<div class="ttc" id="astructez_property_flags_htm_a3c2cffe365eb84e9e31c93491fcf852fa2a82793a685c6bbcabb465e870c36c8a"><div class="ttname"><a href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852fa2a82793a685c6bbcabb465e870c36c8a">ezPropertyFlags::ReadOnly</a></div><div class="ttdeci">@ ReadOnly</div><div class="ttdoc">Can only be read but not modified.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:63</div></div>
<div class="ttc" id="aclassez_abstract_property_htm_a0bc18186382496a51fc09c2eadaf9d34"><div class="ttname"><a href="../../d6/d81/classez_abstract_property.htm#a0bc18186382496a51fc09c2eadaf9d34">ezAbstractProperty::GetFlags</a></div><div class="ttdeci">const ezBitflags&lt; ezPropertyFlags &gt; &amp; GetFlags() const</div><div class="ttdoc">Returns the flags of the property.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:171</div></div>
<div class="ttc" id="astructez_function_type_htm_a13bed06180e1a399e5d28f38d33a3f36a31850807ecb6a3b574625a4c7a7d1d1a"><div class="ttname"><a href="../../d6/dbb/structez_function_type.htm#a13bed06180e1a399e5d28f38d33a3f36a31850807ecb6a3b574625a4c7a7d1d1a">ezFunctionType::Constructor</a></div><div class="ttdeci">@ Constructor</div><div class="ttdoc">A constructor. Return value is a void* pointing to the new instance allocated with the default alloca...</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:529</div></div>
<div class="ttc" id="aclassez_small_array_htm"><div class="ttname"><a href="../../d0/d0c/classez_small_array.htm">ezSmallArray</a></div><div class="ttdef"><b>Definition:</b> SmallArray.h:216</div></div>
<div class="ttc" id="astructez_function_parameter_type_resolver_htm"><div class="ttname"><a href="../../d6/db7/structez_function_parameter_type_resolver.htm">ezFunctionParameterTypeResolver</a></div><div class="ttdoc">Template that allows to probe a function for a parameter and return type.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:400</div></div>
<div class="ttc" id="aclassez_property_attribute_htm"><div class="ttname"><a href="../../d7/d48/classez_property_attribute.htm">ezPropertyAttribute</a></div><div class="ttdoc">Base class of all attributes can be used to decorate a RTTI property.</div><div class="ttdef"><b>Definition:</b> PropertyAttributes.h:10</div></div>
<div class="ttc" id="astructez_property_flags_htm_a3c2cffe365eb84e9e31c93491fcf852fa8e0026188b306cecb2342f8d5ad888ee"><div class="ttname"><a href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852fa8e0026188b306cecb2342f8d5ad888ee">ezPropertyFlags::VarInOut</a></div><div class="ttdeci">@ VarInOut</div><div class="ttdoc">Tag for non-const-ref function parameters to indicate usage 'inout'.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:69</div></div>
<div class="ttc" id="astructez_property_flags_htm_a3c2cffe365eb84e9e31c93491fcf852fa3641579885c20686aeb648665d2c043f"><div class="ttname"><a href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852fa3641579885c20686aeb648665d2c043f">ezPropertyFlags::PointerOwner</a></div><div class="ttdeci">@ PointerOwner</div><div class="ttdoc">This pointer property takes ownership of the passed pointer.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:62</div></div>
<div class="ttc" id="astructez_property_flags_htm_a3c2cffe365eb84e9e31c93491fcf852f"><div class="ttname"><a href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852f">ezPropertyFlags::Enum</a></div><div class="ttdeci">Enum</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:51</div></div>
<div class="ttc" id="astructez_property_flags_htm_a3c2cffe365eb84e9e31c93491fcf852fab74c0d41eab8847918935b6392e6f1b8"><div class="ttname"><a href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852fab74c0d41eab8847918935b6392e6f1b8">ezPropertyFlags::VarOut</a></div><div class="ttdeci">@ VarOut</div><div class="ttdoc">Tag for non-const-ref function parameters to indicate usage 'out'.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:68</div></div>
<div class="ttc" id="aclassez_abstract_member_property_htm_a6799a8b691ee7f90fd8fbbd2e534a9db"><div class="ttname"><a href="../../da/d67/classez_abstract_member_property.htm#a6799a8b691ee7f90fd8fbbd2e534a9db">ezAbstractMemberProperty::GetCategory</a></div><div class="ttdeci">virtual ezPropertyCategory::Enum GetCategory() const override</div><div class="ttdoc">Returns ezPropertyCategory::Member.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:249</div></div>
<div class="ttc" id="aclassez_hybrid_array_htm"><div class="ttname"><a href="../../d8/deb/classez_hybrid_array.htm">ezHybridArray&lt; ezPropertyAttribute *, 2, ezStaticAllocatorWrapper &gt;</a></div></div>
<div class="ttc" id="astructez_property_flags_htm_a3c2cffe365eb84e9e31c93491fcf852faa8c1b0529775ce0acb8601eb88211de8"><div class="ttname"><a href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852faa8c1b0529775ce0acb8601eb88211de8">ezPropertyFlags::Hidden</a></div><div class="ttdeci">@ Hidden</div><div class="ttdoc">This property should not appear in the UI.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:64</div></div>
<div class="ttc" id="aclassez_abstract_constant_property_htm_a1267e4e5d812d78c47883dbb0dfb8d08"><div class="ttname"><a href="../../d8/d53/classez_abstract_constant_property.htm#a1267e4e5d812d78c47883dbb0dfb8d08">ezAbstractConstantProperty::ezAbstractConstantProperty</a></div><div class="ttdeci">ezAbstractConstantProperty(const char *szPropertyName)</div><div class="ttdoc">Passes the property name through to ezAbstractProperty.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:219</div></div>
<div class="ttc" id="aclassez_abstract_set_property_htm_ab118a86d17fb9664944aa8adeb424482"><div class="ttname"><a href="../../d9/dc6/classez_abstract_set_property.htm#ab118a86d17fb9664944aa8adeb424482">ezAbstractSetProperty::GetCategory</a></div><div class="ttdeci">virtual ezPropertyCategory::Enum GetCategory() const override</div><div class="ttdoc">Returns ezPropertyCategory::Set.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:323</div></div>
<div class="ttc" id="astructez_property_flags_htm_a3c2cffe365eb84e9e31c93491fcf852fa61c7217b17359e552ea1ddc3d75fec11"><div class="ttname"><a href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852fa61c7217b17359e552ea1ddc3d75fec11">ezPropertyFlags::Const</a></div><div class="ttdeci">@ Const</div><div class="ttdoc">Property value is const.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:58</div></div>
<div class="ttc" id="aclassez_abstract_function_property_htm"><div class="ttname"><a href="../../d3/d4c/classez_abstract_function_property.htm">ezAbstractFunctionProperty</a></div><div class="ttdoc">The base class for a property that represents a function.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:535</div></div>
<div class="ttc" id="aclassez_abstract_function_property_htm_a1f18213c668db11e5364fe91407cc237"><div class="ttname"><a href="../../d3/d4c/classez_abstract_function_property.htm#a1f18213c668db11e5364fe91407cc237">ezAbstractFunctionProperty::GetArgumentCount</a></div><div class="ttdeci">virtual ezUInt32 GetArgumentCount() const =0</div><div class="ttdoc">Returns the number of arguments.</div></div>
<div class="ttc" id="aclassez_static_array_htm"><div class="ttname"><a href="../../df/d5c/classez_static_array.htm">ezStaticArray</a></div><div class="ttdoc">Wraps a C-style array, which has a fixed size at compile-time, with a more convenient interface.</div><div class="ttdef"><b>Definition:</b> StaticArray.h:12</div></div>
<div class="ttc" id="astructez_property_category_htm_a6900b9049e7887fa4b00d16d5eace8cfa6dd3b0e2fa23af50f7224edbc1b77cfb"><div class="ttname"><a href="../../d5/d49/structez_property_category.htm#a6900b9049e7887fa4b00d16d5eace8cfa6dd3b0e2fa23af50f7224edbc1b77cfb">ezPropertyCategory::Map</a></div><div class="ttdeci">@ Map</div><div class="ttdoc">The property is actually a map from string to values. Cast to ezAbstractArrayProperty.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:145</div></div>
<div class="ttc" id="aclassez_abstract_property_htm"><div class="ttname"><a href="../../d6/d81/classez_abstract_property.htm">ezAbstractProperty</a></div><div class="ttdoc">This is the base interface for all properties in the reflection system. It provides enough informatio...</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:152</div></div>
<div class="ttc" id="astructez_property_flags_htm_a3c2cffe365eb84e9e31c93491fcf852facf9e7b987b0f2cae4127c5f663f5470d"><div class="ttname"><a href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852facf9e7b987b0f2cae4127c5f663f5470d">ezPropertyFlags::StandardType</a></div><div class="ttdeci">@ StandardType</div><div class="ttdoc">Anything that can be stored inside an ezVariant except for pointers and containers.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:53</div></div>
<div class="ttc" id="aclassez_hash_table_htm"><div class="ttname"><a href="../../d8/d86/classez_hash_table.htm">ezHashTable</a></div><div class="ttdef"><b>Definition:</b> HashTable.h:264</div></div>
<div class="ttc" id="astructez_property_flags_htm_a3c2cffe365eb84e9e31c93491fcf852fa5081f500ff8cb9d575530391588c7152"><div class="ttname"><a href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852fa5081f500ff8cb9d575530391588c7152">ezPropertyFlags::Class</a></div><div class="ttdeci">@ Class</div><div class="ttdoc">A struct or class. All of the above are mutually exclusive.</div><div class="ttdef"><b>Definition:</b> AbstractProperty.h:56</div></div>
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_217b90e143c3d27cf4319fb9e916f4ad.htm">Reflection</a></li><li class="navelem"><a class="el" href="../../dir_4d499b0494fc84c22e280b98d7f4832b.htm">Implementation</a></li><li class="navelem"><b>AbstractProperty.h</b></li>
    <li class="footer">Generated on Fri Nov 18 2022 14:47:59 for ezEngine by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="../../doxygen.png" alt="doxygen"/></a> 1.8.17 </li>
  </ul>
</div>
</body>
</html>
