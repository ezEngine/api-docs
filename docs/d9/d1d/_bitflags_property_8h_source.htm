<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: /home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/Reflection/Implementation/BitflagsProperty.h Source File</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">ezEngine<span id="projectnumber">&#160;Release 25.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function() { init_codefold(1); });
/* @license-end */
</script>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('d9/d1d/_bitflags_property_8h_source.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="headertitle"><div class="title">BitflagsProperty.h</div></div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#pragma once</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span> </div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span> </div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="preprocessor">#include &lt;Foundation/Reflection/Implementation/EnumProperty.h&gt;</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="preprocessor">#include &lt;Foundation/Reflection/Implementation/StaticRTTI.h&gt;</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span> </div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Class, <span class="keyword">typename</span> EnumType, <span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00010" data-start="{" data-end="};">
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno"><a class="line" href="../../d6/d58/classez_bitflags_accessor_property.htm">   10</a></span><span class="keyword">class </span><a class="code hl_class" href="../../d6/d58/classez_bitflags_accessor_property.htm">ezBitflagsAccessorProperty</a> : <span class="keyword">public</span> <a class="code hl_class" href="../../db/d5d/classez_typed_enum_property.htm">ezTypedEnumProperty</a>&lt;EnumType&gt;</div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span>{</div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span>  <span class="keyword">using </span>RealType = <span class="keyword">typename</span> <a class="code hl_typedef" href="../../d1/d32/structez_type_traits.htm#af2051eb05a731b9618b107540f8f46f8">ezTypeTraits&lt;Type&gt;::NonConstReferenceType</a>;</div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span>  <span class="keyword">using </span>GetterFunc = Type (Class::*)() <span class="keyword">const</span>;</div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span>  <span class="keyword">using </span>SetterFunc = void (Class::*)(Type value);</div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span> </div>
<div class="foldopen" id="foldopen00018" data-start="{" data-end="}">
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno"><a class="line" href="../../d6/d58/classez_bitflags_accessor_property.htm#a63fdac12a96978bfa9ea2a32e8d4d092">   18</a></span>  <a class="code hl_function" href="../../d6/d58/classez_bitflags_accessor_property.htm#a63fdac12a96978bfa9ea2a32e8d4d092">ezBitflagsAccessorProperty</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szPropertyName, GetterFunc getter, SetterFunc setter)</div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span>    : <a class="code hl_class" href="../../db/d5d/classez_typed_enum_property.htm">ezTypedEnumProperty</a>&lt;EnumType&gt;(szPropertyName)</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span>  {</div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span>    EZ_ASSERT_DEBUG(getter != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;The getter of a property cannot be nullptr.&quot;</span>);</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span>    ezAbstractMemberProperty::m_Flags.<a class="code hl_function" href="../../d1/dec/structez_bitflags.htm#aaa83c1e77b70d0b549604a64c20f8a83">Add</a>(<a class="code hl_enumvalue" href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852faa833edfbd1893edccf523f51306c76cc">ezPropertyFlags::Bitflags</a>);</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span> </div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span>    m_Getter = getter;</div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span>    m_Setter = setter;</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span> </div>
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno">   27</span>    <span class="keywordflow">if</span> (m_Setter == <span class="keyword">nullptr</span>)</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span>      ezAbstractMemberProperty::m_Flags.<a class="code hl_function" href="../../d1/dec/structez_bitflags.htm#aaa83c1e77b70d0b549604a64c20f8a83">Add</a>(<a class="code hl_enumvalue" href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852fa2a82793a685c6bbcabb465e870c36c8a">ezPropertyFlags::ReadOnly</a>);</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span>  }</div>
</div>
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno">   30</span> </div>
<div class="foldopen" id="foldopen00031" data-start="{" data-end="}">
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno"><a class="line" href="../../d6/d58/classez_bitflags_accessor_property.htm#a91dc3ce6d2d3f22cfe67f44c6c4f83bb">   31</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span>* <a class="code hl_function" href="../../d6/d58/classez_bitflags_accessor_property.htm#a91dc3ce6d2d3f22cfe67f44c6c4f83bb">GetPropertyPointer</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance)<span class="keyword"> const override</span></div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span><span class="keyword">  </span>{</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>    <span class="comment">// No access to sub-properties, if we have accessors for this property</span></div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span>    <span class="keywordflow">return</span> <span class="keyword">nullptr</span>;</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>  }</div>
</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span> </div>
<div class="foldopen" id="foldopen00037" data-start="{" data-end="}">
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno"><a class="line" href="../../d6/d58/classez_bitflags_accessor_property.htm#a650097fec5bddef42805d272aa49f5bf">   37</a></span>  <span class="keyword">virtual</span> ezInt64 <a class="code hl_function" href="../../d6/d58/classez_bitflags_accessor_property.htm#a650097fec5bddef42805d272aa49f5bf">GetValue</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance) <span class="keyword">const</span> <span class="keyword">override</span> <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>  {</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span>    <span class="keyword">typename</span> EnumType::StorageType enumTemp = (<span class="keyword">static_cast&lt;</span><span class="keyword">const </span>Class*<span class="keyword">&gt;</span>(pInstance)-&gt;*m_Getter)().<a class="code hl_function" href="../../d6/d58/classez_bitflags_accessor_property.htm#a650097fec5bddef42805d272aa49f5bf">GetValue</a>();</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span>    <span class="keywordflow">return</span> (ezInt64)enumTemp;</div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span>  }</div>
</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span> </div>
<div class="foldopen" id="foldopen00043" data-start="{" data-end="}">
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno"><a class="line" href="../../d6/d58/classez_bitflags_accessor_property.htm#a0c3fc610ddb90f9dd7d7b5ec8639cad2">   43</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../d6/d58/classez_bitflags_accessor_property.htm#a0c3fc610ddb90f9dd7d7b5ec8639cad2">SetValue</a>(<span class="keywordtype">void</span>* pInstance, ezInt64 value) <span class="keyword">const</span> <span class="keyword">override</span> <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>  {</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>    EZ_ASSERT_DEV(m_Setter != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;The property &#39;{0}&#39; has no setter function, thus it is read-only.&quot;</span>, <a class="code hl_function" href="../../d6/d81/classez_abstract_property.htm#aa9de7a38815952c004c7d2cca9360133">ezAbstractProperty::GetPropertyName</a>());</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span>    <span class="keywordflow">if</span> (m_Setter)</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span>      (<span class="keyword">static_cast&lt;</span>Class*<span class="keyword">&gt;</span>(pInstance)-&gt;*m_Setter)((<span class="keyword">typename</span> EnumType::Enum)value);</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>  }</div>
</div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span> </div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span>  GetterFunc m_Getter;</div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>  SetterFunc m_Setter;</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>};</div>
</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span> </div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span> </div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> Class, <span class="keyword">typename</span> EnumType, <span class="keyword">typename</span> Type&gt;</div>
<div class="foldopen" id="foldopen00058" data-start="{" data-end="};">
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno"><a class="line" href="../../d0/d3e/classez_bitflags_member_property.htm">   58</a></span><span class="keyword">class </span><a class="code hl_class" href="../../d0/d3e/classez_bitflags_member_property.htm">ezBitflagsMemberProperty</a> : <span class="keyword">public</span> <a class="code hl_class" href="../../db/d5d/classez_typed_enum_property.htm">ezTypedEnumProperty</a>&lt;EnumType&gt;</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>{</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span><span class="keyword">public</span>:</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span>  <span class="keyword">using </span>GetterFunc = Type (*)(<span class="keyword">const</span> Class* pInstance);</div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span>  <span class="keyword">using </span>SetterFunc = void (*)(Class* pInstance, Type value);</div>
<div class="line"><a id="l00063" name="l00063"></a><span class="lineno">   63</span>  <span class="keyword">using </span>PointerFunc = <span class="keywordtype">void</span>* (*)(<span class="keyword">const</span> Class* pInstance);</div>
<div class="line"><a id="l00064" name="l00064"></a><span class="lineno">   64</span> </div>
<div class="foldopen" id="foldopen00066" data-start="{" data-end="}">
<div class="line"><a id="l00066" name="l00066"></a><span class="lineno"><a class="line" href="../../d0/d3e/classez_bitflags_member_property.htm#a695a9e0581228a5bd8b5de11bf848fb7">   66</a></span>  <a class="code hl_function" href="../../d0/d3e/classez_bitflags_member_property.htm#a695a9e0581228a5bd8b5de11bf848fb7">ezBitflagsMemberProperty</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szPropertyName, GetterFunc getter, SetterFunc setter, PointerFunc pointer)</div>
<div class="line"><a id="l00067" name="l00067"></a><span class="lineno">   67</span>    : <a class="code hl_class" href="../../db/d5d/classez_typed_enum_property.htm">ezTypedEnumProperty</a>&lt;EnumType&gt;(szPropertyName)</div>
<div class="line"><a id="l00068" name="l00068"></a><span class="lineno">   68</span>  {</div>
<div class="line"><a id="l00069" name="l00069"></a><span class="lineno">   69</span>    EZ_ASSERT_DEBUG(getter != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;The getter of a property cannot be nullptr.&quot;</span>);</div>
<div class="line"><a id="l00070" name="l00070"></a><span class="lineno">   70</span>    ezAbstractMemberProperty::m_Flags.<a class="code hl_function" href="../../d1/dec/structez_bitflags.htm#aaa83c1e77b70d0b549604a64c20f8a83">Add</a>(<a class="code hl_enumvalue" href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852faa833edfbd1893edccf523f51306c76cc">ezPropertyFlags::Bitflags</a>);</div>
<div class="line"><a id="l00071" name="l00071"></a><span class="lineno">   71</span> </div>
<div class="line"><a id="l00072" name="l00072"></a><span class="lineno">   72</span>    m_Getter = getter;</div>
<div class="line"><a id="l00073" name="l00073"></a><span class="lineno">   73</span>    m_Setter = setter;</div>
<div class="line"><a id="l00074" name="l00074"></a><span class="lineno">   74</span>    m_Pointer = pointer;</div>
<div class="line"><a id="l00075" name="l00075"></a><span class="lineno">   75</span> </div>
<div class="line"><a id="l00076" name="l00076"></a><span class="lineno">   76</span>    <span class="keywordflow">if</span> (m_Setter == <span class="keyword">nullptr</span>)</div>
<div class="line"><a id="l00077" name="l00077"></a><span class="lineno">   77</span>      ezAbstractMemberProperty::m_Flags.<a class="code hl_function" href="../../d1/dec/structez_bitflags.htm#aaa83c1e77b70d0b549604a64c20f8a83">Add</a>(<a class="code hl_enumvalue" href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852fa2a82793a685c6bbcabb465e870c36c8a">ezPropertyFlags::ReadOnly</a>);</div>
<div class="line"><a id="l00078" name="l00078"></a><span class="lineno">   78</span>  }</div>
</div>
<div class="line"><a id="l00079" name="l00079"></a><span class="lineno">   79</span> </div>
<div class="line"><a id="l00080" name="l00080"></a><span class="lineno"><a class="line" href="../../d0/d3e/classez_bitflags_member_property.htm#a4f431331a01ce7d17c0c166c354cf2b5">   80</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span>* <a class="code hl_function" href="../../d0/d3e/classez_bitflags_member_property.htm#a4f431331a01ce7d17c0c166c354cf2b5">GetPropertyPointer</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance)<span class="keyword"> const override </span>{ <span class="keywordflow">return</span> m_Pointer(<span class="keyword">static_cast&lt;</span><span class="keyword">const </span>Class*<span class="keyword">&gt;</span>(pInstance)); }</div>
<div class="line"><a id="l00081" name="l00081"></a><span class="lineno">   81</span> </div>
<div class="foldopen" id="foldopen00082" data-start="{" data-end="}">
<div class="line"><a id="l00082" name="l00082"></a><span class="lineno"><a class="line" href="../../d0/d3e/classez_bitflags_member_property.htm#ad3afe0e757e8813db9c686fc7e9164ef">   82</a></span>  <span class="keyword">virtual</span> ezInt64 <a class="code hl_function" href="../../d0/d3e/classez_bitflags_member_property.htm#ad3afe0e757e8813db9c686fc7e9164ef">GetValue</a>(<span class="keyword">const</span> <span class="keywordtype">void</span>* pInstance) <span class="keyword">const</span> <span class="keyword">override</span> <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00083" name="l00083"></a><span class="lineno">   83</span>  {</div>
<div class="line"><a id="l00084" name="l00084"></a><span class="lineno">   84</span>    <span class="keyword">typename</span> EnumType::StorageType enumTemp = m_Getter(<span class="keyword">static_cast&lt;</span><span class="keyword">const </span>Class*<span class="keyword">&gt;</span>(pInstance)).GetValue();</div>
<div class="line"><a id="l00085" name="l00085"></a><span class="lineno">   85</span>    <span class="keywordflow">return</span> (ezInt64)enumTemp;</div>
<div class="line"><a id="l00086" name="l00086"></a><span class="lineno">   86</span>  }</div>
</div>
<div class="line"><a id="l00087" name="l00087"></a><span class="lineno">   87</span> </div>
<div class="foldopen" id="foldopen00088" data-start="{" data-end="}">
<div class="line"><a id="l00088" name="l00088"></a><span class="lineno"><a class="line" href="../../d0/d3e/classez_bitflags_member_property.htm#a0972a1de77edd68abc795dcfc2ff3130">   88</a></span>  <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code hl_function" href="../../d0/d3e/classez_bitflags_member_property.htm#a0972a1de77edd68abc795dcfc2ff3130">SetValue</a>(<span class="keywordtype">void</span>* pInstance, ezInt64 value) <span class="keyword">const</span> <span class="keyword">override</span> <span class="comment">// [tested]</span></div>
<div class="line"><a id="l00089" name="l00089"></a><span class="lineno">   89</span>  {</div>
<div class="line"><a id="l00090" name="l00090"></a><span class="lineno">   90</span>    EZ_ASSERT_DEV(m_Setter != <span class="keyword">nullptr</span>, <span class="stringliteral">&quot;The property &#39;{0}&#39; has no setter function, thus it is read-only.&quot;</span>, <a class="code hl_function" href="../../d6/d81/classez_abstract_property.htm#aa9de7a38815952c004c7d2cca9360133">ezAbstractProperty::GetPropertyName</a>());</div>
<div class="line"><a id="l00091" name="l00091"></a><span class="lineno">   91</span> </div>
<div class="line"><a id="l00092" name="l00092"></a><span class="lineno">   92</span>    <span class="keywordflow">if</span> (m_Setter)</div>
<div class="line"><a id="l00093" name="l00093"></a><span class="lineno">   93</span>      m_Setter(<span class="keyword">static_cast&lt;</span>Class*<span class="keyword">&gt;</span>(pInstance), (<span class="keyword">typename</span> EnumType::Enum)value);</div>
<div class="line"><a id="l00094" name="l00094"></a><span class="lineno">   94</span>  }</div>
</div>
<div class="line"><a id="l00095" name="l00095"></a><span class="lineno">   95</span> </div>
<div class="line"><a id="l00096" name="l00096"></a><span class="lineno">   96</span><span class="keyword">private</span>:</div>
<div class="line"><a id="l00097" name="l00097"></a><span class="lineno">   97</span>  GetterFunc m_Getter;</div>
<div class="line"><a id="l00098" name="l00098"></a><span class="lineno">   98</span>  SetterFunc m_Setter;</div>
<div class="line"><a id="l00099" name="l00099"></a><span class="lineno">   99</span>  PointerFunc m_Pointer;</div>
<div class="line"><a id="l00100" name="l00100"></a><span class="lineno">  100</span>};</div>
</div>
<div class="ttc" id="aclassez_abstract_property_htm_aa9de7a38815952c004c7d2cca9360133"><div class="ttname"><a href="../../d6/d81/classez_abstract_property.htm#aa9de7a38815952c004c7d2cca9360133">ezAbstractProperty::GetPropertyName</a></div><div class="ttdeci">const char * GetPropertyName() const</div><div class="ttdoc">Returns the name of the property.</div><div class="ttdef"><b>Definition</b> AbstractProperty.h:160</div></div>
<div class="ttc" id="aclassez_bitflags_accessor_property_htm"><div class="ttname"><a href="../../d6/d58/classez_bitflags_accessor_property.htm">ezBitflagsAccessorProperty</a></div><div class="ttdoc">[internal] An implementation of ezTypedEnumProperty that uses custom getter / setter functions to acc...</div><div class="ttdef"><b>Definition</b> BitflagsProperty.h:11</div></div>
<div class="ttc" id="aclassez_bitflags_accessor_property_htm_a0c3fc610ddb90f9dd7d7b5ec8639cad2"><div class="ttname"><a href="../../d6/d58/classez_bitflags_accessor_property.htm#a0c3fc610ddb90f9dd7d7b5ec8639cad2">ezBitflagsAccessorProperty::SetValue</a></div><div class="ttdeci">virtual void SetValue(void *pInstance, ezInt64 value) const override</div><div class="ttdoc">Modifies the value of the property. Pass the instance pointer to the surrounding class along.</div><div class="ttdef"><b>Definition</b> BitflagsProperty.h:43</div></div>
<div class="ttc" id="aclassez_bitflags_accessor_property_htm_a63fdac12a96978bfa9ea2a32e8d4d092"><div class="ttname"><a href="../../d6/d58/classez_bitflags_accessor_property.htm#a63fdac12a96978bfa9ea2a32e8d4d092">ezBitflagsAccessorProperty::ezBitflagsAccessorProperty</a></div><div class="ttdeci">ezBitflagsAccessorProperty(const char *szPropertyName, GetterFunc getter, SetterFunc setter)</div><div class="ttdoc">Constructor.</div><div class="ttdef"><b>Definition</b> BitflagsProperty.h:18</div></div>
<div class="ttc" id="aclassez_bitflags_accessor_property_htm_a650097fec5bddef42805d272aa49f5bf"><div class="ttname"><a href="../../d6/d58/classez_bitflags_accessor_property.htm#a650097fec5bddef42805d272aa49f5bf">ezBitflagsAccessorProperty::GetValue</a></div><div class="ttdeci">virtual ezInt64 GetValue(const void *pInstance) const override</div><div class="ttdoc">Returns the value of the property. Pass the instance pointer to the surrounding class along.</div><div class="ttdef"><b>Definition</b> BitflagsProperty.h:37</div></div>
<div class="ttc" id="aclassez_bitflags_accessor_property_htm_a91dc3ce6d2d3f22cfe67f44c6c4f83bb"><div class="ttname"><a href="../../d6/d58/classez_bitflags_accessor_property.htm#a91dc3ce6d2d3f22cfe67f44c6c4f83bb">ezBitflagsAccessorProperty::GetPropertyPointer</a></div><div class="ttdeci">virtual void * GetPropertyPointer(const void *pInstance) const override</div><div class="ttdoc">Returns a pointer to the property data or nullptr. If a valid pointer is returned,...</div><div class="ttdef"><b>Definition</b> BitflagsProperty.h:31</div></div>
<div class="ttc" id="aclassez_bitflags_member_property_htm"><div class="ttname"><a href="../../d0/d3e/classez_bitflags_member_property.htm">ezBitflagsMemberProperty</a></div><div class="ttdoc">[internal] An implementation of ezTypedEnumProperty that accesses the bitflags property data directly...</div><div class="ttdef"><b>Definition</b> BitflagsProperty.h:59</div></div>
<div class="ttc" id="aclassez_bitflags_member_property_htm_a0972a1de77edd68abc795dcfc2ff3130"><div class="ttname"><a href="../../d0/d3e/classez_bitflags_member_property.htm#a0972a1de77edd68abc795dcfc2ff3130">ezBitflagsMemberProperty::SetValue</a></div><div class="ttdeci">virtual void SetValue(void *pInstance, ezInt64 value) const override</div><div class="ttdoc">Modifies the value of the property. Pass the instance pointer to the surrounding class along.</div><div class="ttdef"><b>Definition</b> BitflagsProperty.h:88</div></div>
<div class="ttc" id="aclassez_bitflags_member_property_htm_a4f431331a01ce7d17c0c166c354cf2b5"><div class="ttname"><a href="../../d0/d3e/classez_bitflags_member_property.htm#a4f431331a01ce7d17c0c166c354cf2b5">ezBitflagsMemberProperty::GetPropertyPointer</a></div><div class="ttdeci">virtual void * GetPropertyPointer(const void *pInstance) const override</div><div class="ttdoc">Returns a pointer to the property data or nullptr. If a valid pointer is returned,...</div><div class="ttdef"><b>Definition</b> BitflagsProperty.h:80</div></div>
<div class="ttc" id="aclassez_bitflags_member_property_htm_a695a9e0581228a5bd8b5de11bf848fb7"><div class="ttname"><a href="../../d0/d3e/classez_bitflags_member_property.htm#a695a9e0581228a5bd8b5de11bf848fb7">ezBitflagsMemberProperty::ezBitflagsMemberProperty</a></div><div class="ttdeci">ezBitflagsMemberProperty(const char *szPropertyName, GetterFunc getter, SetterFunc setter, PointerFunc pointer)</div><div class="ttdoc">Constructor.</div><div class="ttdef"><b>Definition</b> BitflagsProperty.h:66</div></div>
<div class="ttc" id="aclassez_bitflags_member_property_htm_ad3afe0e757e8813db9c686fc7e9164ef"><div class="ttname"><a href="../../d0/d3e/classez_bitflags_member_property.htm#ad3afe0e757e8813db9c686fc7e9164ef">ezBitflagsMemberProperty::GetValue</a></div><div class="ttdeci">virtual ezInt64 GetValue(const void *pInstance) const override</div><div class="ttdoc">Returns the value of the property. Pass the instance pointer to the surrounding class along.</div><div class="ttdef"><b>Definition</b> BitflagsProperty.h:82</div></div>
<div class="ttc" id="aclassez_typed_enum_property_htm"><div class="ttname"><a href="../../db/d5d/classez_typed_enum_property.htm">ezTypedEnumProperty</a></div><div class="ttdoc">[internal] Base class for enum / bitflags properties that already defines the type.</div><div class="ttdef"><b>Definition</b> EnumProperty.h:43</div></div>
<div class="ttc" id="astructez_bitflags_htm_aaa83c1e77b70d0b549604a64c20f8a83"><div class="ttname"><a href="../../d1/dec/structez_bitflags.htm#aaa83c1e77b70d0b549604a64c20f8a83">ezBitflags::Add</a></div><div class="ttdeci">EZ_ALWAYS_INLINE void Add(const ezBitflags&lt; T &gt; &amp;rhs)</div><div class="ttdoc">Sets the given flag.</div><div class="ttdef"><b>Definition</b> Bitflags.h:151</div></div>
<div class="ttc" id="astructez_property_flags_htm_a3c2cffe365eb84e9e31c93491fcf852fa2a82793a685c6bbcabb465e870c36c8a"><div class="ttname"><a href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852fa2a82793a685c6bbcabb465e870c36c8a">ezPropertyFlags::ReadOnly</a></div><div class="ttdeci">@ ReadOnly</div><div class="ttdoc">Can only be read but not modified.</div><div class="ttdef"><b>Definition</b> AbstractProperty.h:63</div></div>
<div class="ttc" id="astructez_property_flags_htm_a3c2cffe365eb84e9e31c93491fcf852faa833edfbd1893edccf523f51306c76cc"><div class="ttname"><a href="../../d2/da3/structez_property_flags.htm#a3c2cffe365eb84e9e31c93491fcf852faa833edfbd1893edccf523f51306c76cc">ezPropertyFlags::Bitflags</a></div><div class="ttdeci">@ Bitflags</div><div class="ttdoc">Bitflags property, cast to ezAbstractEnumerationProperty.</div><div class="ttdef"><b>Definition</b> AbstractProperty.h:55</div></div>
<div class="ttc" id="astructez_type_traits_htm_af2051eb05a731b9618b107540f8f46f8"><div class="ttname"><a href="../../d1/d32/structez_type_traits.htm#af2051eb05a731b9618b107540f8f46f8">ezTypeTraits::NonConstReferenceType</a></div><div class="ttdeci">typename std::remove_const&lt; typename std::remove_reference&lt; T &gt;::type &gt;::type NonConstReferenceType</div><div class="ttdoc">removes reference and const qualifier</div><div class="ttdef"><b>Definition</b> TypeTraits.h:218</div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../dir_43e0a1f539e00dcfa1a6bc4d4fee4fc2.htm">home</a></li><li class="navelem"><a class="el" href="../../dir_1036706e55c22cab35bc1c58ee689f1d.htm">runner</a></li><li class="navelem"><a class="el" href="../../dir_629f8151d55d307162ff2d619fb1783d.htm">work</a></li><li class="navelem"><a class="el" href="../../dir_915904df4e2c9d6aaec5e4f68658d2dd.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_5c4c7e4a15e643c7da040f906f2ba5c5.htm">ezEngine</a></li><li class="navelem"><a class="el" href="../../dir_d9e5f712eee30f228fb2a3d56da53e33.htm">Code</a></li><li class="navelem"><a class="el" href="../../dir_5471e92246f162412d7d0c81097fb3f4.htm">Engine</a></li><li class="navelem"><a class="el" href="../../dir_a38a3ced8161f20ff6bf34f1243b8348.htm">Foundation</a></li><li class="navelem"><a class="el" href="../../dir_217b90e143c3d27cf4319fb9e916f4ad.htm">Reflection</a></li><li class="navelem"><a class="el" href="../../dir_4d499b0494fc84c22e280b98d7f4832b.htm">Implementation</a></li><li class="navelem"><b>BitflagsProperty.h</b></li>
    <li class="footer">Generated on Fri Jul 11 2025 12:17:52 for ezEngine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
