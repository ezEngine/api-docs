<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en-US">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>ezEngine: ezTokenizer Class Reference</title>
<link href="../../tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../jquery.js"></script>
<script type="text/javascript" src="../../dynsections.js"></script>
<link href="../../navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../resize.js"></script>
<script type="text/javascript" src="../../navtreedata.js"></script>
<script type="text/javascript" src="../../navtree.js"></script>
<link href="../../search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="../../search/searchdata.js"></script>
<script type="text/javascript" src="../../search/search.js"></script>
<link href="../../doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectlogo"><img alt="Logo" src="../../EZ-logo.png"/></td>
  <td id="projectalign">
   <div id="projectname">ezEngine<span id="projectnumber">&#160;Release 25.08</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "../../search/",'.htm');
/* @license-end */
</script>
<script type="text/javascript" src="../../menudata.js"></script>
<script type="text/javascript" src="../../menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('../../',true,false,'search.htm','Search');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function(){initNavTree('d9/d39/classez_tokenizer.htm','../../'); initResizable(); });
/* @license-end */
</script>
<div id="doc-content">
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Loading...</div>
<div class="SRStatus" id="Searching">Searching...</div>
<div class="SRStatus" id="NoMatches">No Matches</div>
</div>
</div>
</div>
</div>

<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="../../d4/d68/classez_tokenizer-members.htm">List of all members</a>  </div>
  <div class="headertitle"><div class="title">ezTokenizer Class Reference</div></div>
</div><!--header-->
<div class="contents">

<p>Takes text and splits it up into <a class="el" href="../../d4/d8b/structez_token.htm" title="Represents one piece of tokenized text in a document.">ezToken</a> objects. The result can be used for easier parsing.  
 <a href="../../d9/d39/classez_tokenizer.htm#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="../../d4/db9/_tokenizer_8h_source.htm">Tokenizer.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a id="pub-methods" name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a5e1f06bcc060184a7c4742d36bbb393c" id="r_a5e1f06bcc060184a7c4742d36bbb393c"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d39/classez_tokenizer.htm#a5e1f06bcc060184a7c4742d36bbb393c">ezTokenizer</a> (<a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *pAllocator=nullptr)</td></tr>
<tr class="memdesc:a5e1f06bcc060184a7c4742d36bbb393c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Constructor.  <br /></td></tr>
<tr class="separator:a5e1f06bcc060184a7c4742d36bbb393c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a44653ce9576eab7f4d249dd26f8980f7" id="r_a44653ce9576eab7f4d249dd26f8980f7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d39/classez_tokenizer.htm#a44653ce9576eab7f4d249dd26f8980f7">Tokenize</a> (<a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; const ezUInt8 &gt; data, <a class="el" href="../../d2/d9e/classez_log_interface.htm">ezLogInterface</a> *pLog, bool bCopyData=true)</td></tr>
<tr class="memdesc:a44653ce9576eab7f4d249dd26f8980f7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Clears any previous result and creates a new token stream for the given array.  <br /></td></tr>
<tr class="separator:a44653ce9576eab7f4d249dd26f8980f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9c6298e554616412e6065c3aec240f82" id="r_a9c6298e554616412e6065c3aec240f82"><td class="memItemLeft" align="right" valign="top"><a id="a9c6298e554616412e6065c3aec240f82" name="a9c6298e554616412e6065c3aec240f82"></a>
const <a class="el" href="../../d9/dfe/classez_deque.htm">ezDeque</a>&lt; <a class="el" href="../../d4/d8b/structez_token.htm">ezToken</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetTokens</b> () const</td></tr>
<tr class="memdesc:a9c6298e554616412e6065c3aec240f82"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gives read access to the token stream. <br /></td></tr>
<tr class="separator:a9c6298e554616412e6065c3aec240f82"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa5baa09c6af62280fc865d7edd58a86f" id="r_aa5baa09c6af62280fc865d7edd58a86f"><td class="memItemLeft" align="right" valign="top"><a id="aa5baa09c6af62280fc865d7edd58a86f" name="aa5baa09c6af62280fc865d7edd58a86f"></a>
<a class="el" href="../../d9/dfe/classez_deque.htm">ezDeque</a>&lt; <a class="el" href="../../d4/d8b/structez_token.htm">ezToken</a> &gt; &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetTokens</b> ()</td></tr>
<tr class="memdesc:aa5baa09c6af62280fc865d7edd58a86f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Gives read and write access to the token stream. <br /></td></tr>
<tr class="separator:aa5baa09c6af62280fc865d7edd58a86f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7165f03bf90ad93528b26400adf8e8f" id="r_ab7165f03bf90ad93528b26400adf8e8f"><td class="memItemLeft" align="right" valign="top"><a id="ab7165f03bf90ad93528b26400adf8e8f" name="ab7165f03bf90ad93528b26400adf8e8f"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>GetAllTokens</b> (<a class="el" href="../../d2/d4f/classez_dynamic_array.htm">ezDynamicArray</a>&lt; const <a class="el" href="../../d4/d8b/structez_token.htm">ezToken</a> * &gt; &amp;ref_tokens) const</td></tr>
<tr class="memdesc:ab7165f03bf90ad93528b26400adf8e8f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an array with a copy of all tokens. Use this when using ezTokenParseUtils. <br /></td></tr>
<tr class="separator:ab7165f03bf90ad93528b26400adf8e8f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a532212ac1fa9e29582ad0f0e34449ea5" id="r_a532212ac1fa9e29582ad0f0e34449ea5"><td class="memItemLeft" align="right" valign="top"><a id="a532212ac1fa9e29582ad0f0e34449ea5" name="a532212ac1fa9e29582ad0f0e34449ea5"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>GetAllLines</b> (<a class="el" href="../../d2/d4f/classez_dynamic_array.htm">ezDynamicArray</a>&lt; const <a class="el" href="../../d4/d8b/structez_token.htm">ezToken</a> * &gt; &amp;ref_tokens) const</td></tr>
<tr class="memdesc:a532212ac1fa9e29582ad0f0e34449ea5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an array of all tokens. New line tokens are ignored. <br /></td></tr>
<tr class="separator:a532212ac1fa9e29582ad0f0e34449ea5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae23fa2b63098d0a368e0f244ea556919" id="r_ae23fa2b63098d0a368e0f244ea556919"><td class="memItemLeft" align="right" valign="top"><a class="el" href="../../d4/da9/structez_result.htm">ezResult</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d39/classez_tokenizer.htm#ae23fa2b63098d0a368e0f244ea556919">GetNextLine</a> (ezUInt32 &amp;ref_uiFirstToken, <a class="el" href="../../d8/deb/classez_hybrid_array.htm">ezHybridArray</a>&lt; const <a class="el" href="../../d4/d8b/structez_token.htm">ezToken</a> *, 32 &gt; &amp;ref_tokens) const</td></tr>
<tr class="memdesc:ae23fa2b63098d0a368e0f244ea556919"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns an array of tokens that represent the next line in the file.  <br /></td></tr>
<tr class="separator:ae23fa2b63098d0a368e0f244ea556919"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7745b7f444e21b097faeb88fbd9d593e" id="r_a7745b7f444e21b097faeb88fbd9d593e"><td class="memItemLeft" align="right" valign="top"><a id="a7745b7f444e21b097faeb88fbd9d593e" name="a7745b7f444e21b097faeb88fbd9d593e"></a>
<a class="el" href="../../d4/da9/structez_result.htm">ezResult</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetNextLine</b> (ezUInt32 &amp;ref_uiFirstToken, <a class="el" href="../../d8/deb/classez_hybrid_array.htm">ezHybridArray</a>&lt; <a class="el" href="../../d4/d8b/structez_token.htm">ezToken</a> *, 32 &gt; &amp;ref_tokens)</td></tr>
<tr class="separator:a7745b7f444e21b097faeb88fbd9d593e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae65a3991c6bb4ac34ef15db9fa7a16fd" id="r_ae65a3991c6bb4ac34ef15db9fa7a16fd"><td class="memItemLeft" align="right" valign="top"><a id="ae65a3991c6bb4ac34ef15db9fa7a16fd" name="ae65a3991c6bb4ac34ef15db9fa7a16fd"></a>
const <a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; const ezUInt8 &gt;&#160;</td><td class="memItemRight" valign="bottom"><b>GetTokenizedData</b> () const</td></tr>
<tr class="memdesc:ae65a3991c6bb4ac34ef15db9fa7a16fd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the internal copy of the tokenized data. Will be empty if Tokenize was called with 'bCopyData' equals 'false'. <br /></td></tr>
<tr class="separator:ae65a3991c6bb4ac34ef15db9fa7a16fd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4f0d7584b19c76769292b16950d1df8d" id="r_a4f0d7584b19c76769292b16950d1df8d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="../../d9/d39/classez_tokenizer.htm#a4f0d7584b19c76769292b16950d1df8d">SetTreatHashSignAsLineComment</a> (bool bHashSignIsLineComment)</td></tr>
<tr class="memdesc:a4f0d7584b19c76769292b16950d1df8d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Enables treating lines that start with # character as line comments.  <br /></td></tr>
<tr class="separator:a4f0d7584b19c76769292b16950d1df8d"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>Takes text and splits it up into <a class="el" href="../../d4/d8b/structez_token.htm" title="Represents one piece of tokenized text in a document.">ezToken</a> objects. The result can be used for easier parsing. </p>
<p>The tokenizer is built to work on code that is similar to C. That means it will tokenize comments and strings as they are defined in the C language. Also line breaks that end with a backslash are not really considered as line breaks.<br  />
White space is defined as spaces and tabs.<br  />
Identifiers are names that consist of alphanumerics and underscores.<br  />
Non-Identifiers are everything else. However, they will currently never consist of more than a single character. Ie. '++' will be tokenized as two consecutive non-Identifiers.<br  />
Parenthesis etc. will not be tokenized in any special way, they are all considered as non-Identifiers.</p>
<p>The token stream will always end with an end-of-file token. </p>
</div><h2 class="groupheader">Constructor &amp; Destructor Documentation</h2>
<a id="a5e1f06bcc060184a7c4742d36bbb393c" name="a5e1f06bcc060184a7c4742d36bbb393c"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5e1f06bcc060184a7c4742d36bbb393c">&#9670;&#160;</a></span>ezTokenizer()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">ezTokenizer::ezTokenizer </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../d0/dbb/classez_allocator.htm">ezAllocator</a> *&#160;</td>
          <td class="paramname"><em>pAllocator</em> = <code>nullptr</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Constructor. </p>
<p>Takes an additional optional allocator. If no allocator is given the default allocator will be used. </p>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ae23fa2b63098d0a368e0f244ea556919" name="ae23fa2b63098d0a368e0f244ea556919"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae23fa2b63098d0a368e0f244ea556919">&#9670;&#160;</a></span>GetNextLine()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="../../d4/da9/structez_result.htm">ezResult</a> ezTokenizer::GetNextLine </td>
          <td>(</td>
          <td class="paramtype">ezUInt32 &amp;&#160;</td>
          <td class="paramname"><em>ref_uiFirstToken</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d8/deb/classez_hybrid_array.htm">ezHybridArray</a>&lt; const <a class="el" href="../../d4/d8b/structez_token.htm">ezToken</a> *, 32 &gt; &amp;&#160;</td>
          <td class="paramname"><em>ref_tokens</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns an array of tokens that represent the next line in the file. </p>
<p>Returns EZ_SUCCESS when there was more data to return, EZ_FAILURE if the end of the file was reached already. uiFirstToken is the index from where to start. It will be updated automatically. Consecutive calls to <a class="el" href="../../d9/d39/classez_tokenizer.htm#ae23fa2b63098d0a368e0f244ea556919" title="Returns an array of tokens that represent the next line in the file.">GetNextLine()</a> with the same uiFirstToken variable will give one line after the other.</p>
<dl class="section note"><dt>Note</dt><dd>This function takes care of handling the 'backslash/newline' combination, as defined in the C language. That means all such sequences will be ignored. Therefore the tokens that are returned as one line might not contain all tokens that are actually in the stream. Also the tokens might have different line numbers, when two or more lines from the file are merged into one logical line. </dd></dl>
<dl class="todo"><dt><b><a class="el" href="../../dd/da0/todo.htm#_todo000025">Todo:</a></b></dt><dd>Theoretically, if the line ends with an identifier, and the next directly starts with one again, </dd></dl>

</div>
</div>
<a id="a4f0d7584b19c76769292b16950d1df8d" name="a4f0d7584b19c76769292b16950d1df8d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a4f0d7584b19c76769292b16950d1df8d">&#9670;&#160;</a></span>SetTreatHashSignAsLineComment()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void ezTokenizer::SetTreatHashSignAsLineComment </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bHashSignIsLineComment</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>Enables treating lines that start with # character as line comments. </p>
<p>Needs to be set before tokenization to take effect. </p>

</div>
</div>
<a id="a44653ce9576eab7f4d249dd26f8980f7" name="a44653ce9576eab7f4d249dd26f8980f7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a44653ce9576eab7f4d249dd26f8980f7">&#9670;&#160;</a></span>Tokenize()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void ezTokenizer::Tokenize </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="../../dc/dae/classez_array_ptr.htm">ezArrayPtr</a>&lt; const ezUInt8 &gt;&#160;</td>
          <td class="paramname"><em>data</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="../../d2/d9e/classez_log_interface.htm">ezLogInterface</a> *&#160;</td>
          <td class="paramname"><em>pLog</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>bCopyData</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Clears any previous result and creates a new token stream for the given array. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">data</td><td>The string data to be tokenized. </td></tr>
    <tr><td class="paramname">pLog</td><td>A log interface that will receive any tokenization errors. </td></tr>
    <tr><td class="paramname">bCopyData</td><td>If set, 'data' will be copied into a member variable and tokenization is run on the copy, allowing for the original data storage to be deallocated after this call. If false, tokenization will reference 'data' directly and thus, 'data' must outlive this instance. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/CodeUtils/<a class="el" href="../../d4/db9/_tokenizer_8h_source.htm">Tokenizer.h</a></li>
<li>/home/runner/work/ezEngine/ezEngine/Code/Engine/Foundation/CodeUtils/Implementation/<b>Tokenizer.cpp</b></li>
</ul>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="../../d9/d39/classez_tokenizer.htm">ezTokenizer</a></li>
    <li class="footer">Generated on Fri Jul 11 2025 12:18:01 for ezEngine by <a href="https://www.doxygen.org/index.html"><img class="footer" src="../../doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8 </li>
  </ul>
</div>
</body>
</html>
